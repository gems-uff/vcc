1 - Declaração do método: org.apache.commons.io.IOCase.forName(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
2 - Declaração do método: org.apache.commons.io.IOCase.IOCase(java.lang.String, Z)
2 - Declaração do método: org.apache.commons.io.IOCase.readResolve()
Métodos invocados: 
org.apache.commons.io.IOCase.forName(java.lang.String)
3 - Declaração do método: org.apache.commons.io.IOCase.getName()
3 - Declaração do método: org.apache.commons.io.IOCase.isCaseSensitive()
3 - Declaração do método: org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.compareTo(java.lang.String)
java.lang.String.compareToIgnoreCase(java.lang.String)
4 - Declaração do método: org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equalsIgnoreCase(java.lang.String)
5 - Declaração do método: org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.regionMatches(Z, I, java.lang.String, I, I)
6 - Declaração do método: org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.length()
java.lang.String.regionMatches(Z, I, java.lang.String, I, I)
7 - Declaração do método: org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.length()
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
8 - Declaração do método: org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.regionMatches(Z, I, java.lang.String, I, I)
9 - Declaração do método: org.apache.commons.io.IOCase.toString()
9 - Declaração do método: org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause(java.lang.String, java.lang.Throwable)
Métodos invocados: 
java.lang.Throwable.initCause(java.lang.Throwable)
10 - Declaração do método: org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause(java.lang.Throwable)
Métodos invocados: 
java.lang.Throwable.toString()
java.lang.Throwable.initCause(java.lang.Throwable)
11 - Declaração do método: org.apache.commons.io.FileCleaner.track(java.io.File, java.lang.Object)
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object)
12 - Declaração do método: org.apache.commons.io.FileCleaner.track(java.io.File, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
13 - Declaração do método: org.apache.commons.io.FileCleaner.track(java.lang.String, java.lang.Object)
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object)
14 - Declaração do método: org.apache.commons.io.FileCleaner.track(java.lang.String, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
15 - Declaração do método: org.apache.commons.io.FileCleaner.getTrackCount()
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.getTrackCount()
16 - Declaração do método: org.apache.commons.io.FileCleaner.exitWhenFinished()
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.exitWhenFinished()
17 - Declaração do método: org.apache.commons.io.FileCleaner.getInstance()
17 - Declaração do método: org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object)
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
18 - Declaração do método: org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
Métodos invocados: 
java.io.File.getPath()
org.apache.commons.io.FileCleaningTracker.addTracker(java.lang.String, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
19 - Declaração do método: org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object)
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
20 - Declaração do método: org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.addTracker(java.lang.String, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
21 - Declaração do método: org.apache.commons.io.FileCleaningTracker.addTracker(java.lang.String, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
Métodos invocados: 
java.lang.Thread.start()
java.util.Collection.add(org.apache.commons.io.FileCleaningTracker$Tracker)
22 - Declaração do método: org.apache.commons.io.FileCleaningTracker.getTrackCount()
Métodos invocados: 
java.util.Collection.size()
23 - Declaração do método: org.apache.commons.io.FileCleaningTracker.exitWhenFinished()
Métodos invocados: 
java.lang.Thread.interrupt()
24 - Declaração do método: org.apache.commons.io.FileCleaningTracker$Reaper.Reaper()
Métodos invocados: 
java.lang.Thread.setPriority(I)
java.lang.Thread.setDaemon(Z)
25 - Declaração do método: org.apache.commons.io.FileCleaningTracker$Reaper.run()
Métodos invocados: 
java.util.Collection.size()
java.lang.ref.ReferenceQueue.remove()
org.apache.commons.io.FileCleaningTracker$Tracker.delete()
java.lang.ref.Reference.clear()
java.util.Collection.remove(java.lang.Object)
26 - Declaração do método: org.apache.commons.io.FileCleaningTracker$Tracker.Tracker(java.lang.String, org.apache.commons.io.FileDeleteStrategy, java.lang.Object, java.lang.ref.ReferenceQueue)
26 - Declaração do método: org.apache.commons.io.FileCleaningTracker$Tracker.delete()
Métodos invocados: 
org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)
27 - Declaração do método: org.apache.commons.io.FileDeleteStrategy.FileDeleteStrategy(java.lang.String)
27 - Declaração do método: org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)
Métodos invocados: 
java.io.File.exists()
org.apache.commons.io.FileDeleteStrategy.doDelete(java.io.File)
28 - Declaração do método: org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)
Métodos invocados: 
java.io.File.exists()
org.apache.commons.io.FileDeleteStrategy.doDelete(java.io.File)
29 - Declaração do método: org.apache.commons.io.FileDeleteStrategy.doDelete(java.io.File)
Métodos invocados: 
java.io.File.delete()
30 - Declaração do método: org.apache.commons.io.FileDeleteStrategy.toString()
30 - Declaração do método: org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy.ForceFileDeleteStrategy()
30 - Declaração do método: org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy.doDelete(java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.forceDelete(java.io.File)
31 - Declaração do método: org.apache.commons.io.IOUtils.IOUtils()
31 - Declaração do método: org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)
Métodos invocados: 
java.io.Reader.close()
32 - Declaração do método: org.apache.commons.io.IOUtils.closeQuietly(java.nio.channels.Channel)
Métodos invocados: 
java.nio.channels.Channel.close()
33 - Declaração do método: org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
Métodos invocados: 
java.io.Writer.close()
34 - Declaração do método: org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
Métodos invocados: 
java.io.InputStream.close()
35 - Declaração do método: org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
Métodos invocados: 
java.io.OutputStream.close()
36 - Declaração do método: org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
37 - Declaração do método: org.apache.commons.io.IOUtils.toByteArray(java.io.Reader)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
38 - Declaração do método: org.apache.commons.io.IOUtils.toByteArray(java.io.Reader, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream, java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
39 - Declaração do método: org.apache.commons.io.IOUtils.toByteArray(java.lang.String)
Métodos invocados: 
java.lang.String.getBytes()
40 - Declaração do método: org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer)
java.io.CharArrayWriter.toCharArray()
41 - Declaração do método: org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)
java.io.CharArrayWriter.toCharArray()
42 - Declaração do método: org.apache.commons.io.IOUtils.toCharArray(java.io.Reader)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
java.io.CharArrayWriter.toCharArray()
43 - Declaração do método: org.apache.commons.io.IOUtils.toString(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer)
org.apache.commons.io.output.StringBuilderWriter.toString()
44 - Declaração do método: org.apache.commons.io.IOUtils.toString(java.io.InputStream, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)
org.apache.commons.io.output.StringBuilderWriter.toString()
45 - Declaração do método: org.apache.commons.io.IOUtils.toString(java.io.Reader)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
org.apache.commons.io.output.StringBuilderWriter.toString()
46 - Declaração do método: org.apache.commons.io.IOUtils.toString([B)
46 - Declaração do método: org.apache.commons.io.IOUtils.toString([B, java.lang.String)
46 - Declaração do método: org.apache.commons.io.IOUtils.readLines(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.IOUtils.readLines(java.io.Reader)
47 - Declaração do método: org.apache.commons.io.IOUtils.readLines(java.io.InputStream, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.readLines(java.io.InputStream)
org.apache.commons.io.IOUtils.readLines(java.io.Reader)
48 - Declaração do método: org.apache.commons.io.IOUtils.readLines(java.io.Reader)
Métodos invocados: 
java.io.BufferedReader.readLine()
java.util.List.add(java.lang.String)
java.io.BufferedReader.readLine()
49 - Declaração do método: org.apache.commons.io.IOUtils.lineIterator(java.io.Reader)
49 - Declaração do método: org.apache.commons.io.IOUtils.lineIterator(java.io.InputStream, java.lang.String)
49 - Declaração do método: org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence)
Métodos invocados: 
java.lang.CharSequence.toString()
org.apache.commons.io.IOUtils.toInputStream(java.lang.String)
50 - Declaração do método: org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence, java.lang.String)
Métodos invocados: 
java.lang.CharSequence.toString()
org.apache.commons.io.IOUtils.toInputStream(java.lang.String, java.lang.String)
51 - Declaração do método: org.apache.commons.io.IOUtils.toInputStream(java.lang.String)
Métodos invocados: 
java.lang.String.getBytes()
52 - Declaração do método: org.apache.commons.io.IOUtils.toInputStream(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.getBytes(java.lang.String)
java.lang.String.getBytes()
53 - Declaração do método: org.apache.commons.io.IOUtils.write([B, java.io.OutputStream)
Métodos invocados: 
java.io.OutputStream.write([B)
54 - Declaração do método: org.apache.commons.io.IOUtils.write([B, java.io.Writer)
Métodos invocados: 
java.io.Writer.write(java.lang.String)
55 - Declaração do método: org.apache.commons.io.IOUtils.write([B, java.io.Writer, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.Writer)
java.io.Writer.write(java.lang.String)
56 - Declaração do método: org.apache.commons.io.IOUtils.write([C, java.io.Writer)
Métodos invocados: 
java.io.Writer.write([C)
57 - Declaração do método: org.apache.commons.io.IOUtils.write([C, java.io.OutputStream)
Métodos invocados: 
java.lang.String.getBytes()
java.io.OutputStream.write([B)
58 - Declaração do método: org.apache.commons.io.IOUtils.write([C, java.io.OutputStream, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.write([C, java.io.OutputStream)
java.lang.String.getBytes(java.lang.String)
java.io.OutputStream.write([B)
59 - Declaração do método: org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.Writer)
Métodos invocados: 
java.lang.CharSequence.toString()
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.Writer)
60 - Declaração do método: org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream)
Métodos invocados: 
java.lang.CharSequence.toString()
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream)
61 - Declaração do método: org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream, java.lang.String)
Métodos invocados: 
java.lang.CharSequence.toString()
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream, java.lang.String)
62 - Declaração do método: org.apache.commons.io.IOUtils.write(java.lang.String, java.io.Writer)
Métodos invocados: 
java.io.Writer.write(java.lang.String)
63 - Declaração do método: org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream)
Métodos invocados: 
java.lang.String.getBytes()
java.io.OutputStream.write([B)
64 - Declaração do método: org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream)
java.lang.String.getBytes(java.lang.String)
java.io.OutputStream.write([B)
65 - Declaração do método: org.apache.commons.io.IOUtils.write(java.lang.StringBuffer, java.io.Writer)
Métodos invocados: 
java.lang.StringBuffer.toString()
java.io.Writer.write(java.lang.String)
66 - Declaração do método: org.apache.commons.io.IOUtils.write(java.lang.StringBuffer, java.io.OutputStream)
Métodos invocados: 
java.lang.StringBuffer.toString()
java.lang.String.getBytes()
java.io.OutputStream.write([B)
67 - Declaração do método: org.apache.commons.io.IOUtils.write(java.lang.StringBuffer, java.io.OutputStream, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.StringBuffer, java.io.OutputStream)
java.lang.StringBuffer.toString()
java.lang.String.getBytes(java.lang.String)
java.io.OutputStream.write([B)
68 - Declaração do método: org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream)
Métodos invocados: 
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.Object.toString()
java.lang.String.getBytes()
java.io.OutputStream.write([B)
java.lang.String.getBytes()
java.io.OutputStream.write([B)
69 - Declaração do método: org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream)
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.Object.toString()
java.lang.String.getBytes(java.lang.String)
java.io.OutputStream.write([B)
java.lang.String.getBytes(java.lang.String)
java.io.OutputStream.write([B)
70 - Declaração do método: org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.Writer)
Métodos invocados: 
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.Object.toString()
java.io.Writer.write(java.lang.String)
java.io.Writer.write(java.lang.String)
71 - Declaração do método: org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream)
Métodos invocados: 
org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream)
72 - Declaração do método: org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream)
Métodos invocados: 
java.io.InputStream.read([B)
java.io.OutputStream.write([B, I, I)
73 - Declaração do método: org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
74 - Declaração do método: org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer)
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
75 - Declaração do método: org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
Métodos invocados: 
org.apache.commons.io.IOUtils.copyLarge(java.io.Reader, java.io.Writer)
76 - Declaração do método: org.apache.commons.io.IOUtils.copyLarge(java.io.Reader, java.io.Writer)
Métodos invocados: 
java.io.Reader.read([C)
java.io.Writer.write([C, I, I)
77 - Declaração do método: org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
java.io.OutputStreamWriter.flush()
78 - Declaração do método: org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream)
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
java.io.OutputStreamWriter.flush()
79 - Declaração do método: org.apache.commons.io.IOUtils.contentEquals(java.io.InputStream, java.io.InputStream)
Métodos invocados: 
java.io.InputStream.read()
java.io.InputStream.read()
java.io.InputStream.read()
java.io.InputStream.read()
80 - Declaração do método: org.apache.commons.io.IOUtils.contentEquals(java.io.Reader, java.io.Reader)
Métodos invocados: 
java.io.Reader.read()
java.io.Reader.read()
java.io.Reader.read()
java.io.Reader.read()
81 - Declaração do método: org.apache.commons.io.HexDump.HexDump()
81 - Declaração do método: org.apache.commons.io.HexDump.dump([B, J, java.io.OutputStream, I)
Métodos invocados: 
org.apache.commons.io.HexDump.dump(java.lang.StringBuilder, J)
java.lang.StringBuilder.append(C)
org.apache.commons.io.HexDump.dump(java.lang.StringBuilder, B)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
java.lang.String.getBytes()
java.io.OutputStream.write([B)
java.io.OutputStream.flush()
java.lang.AbstractStringBuilder.setLength(I)
82 - Declaração do método: org.apache.commons.io.HexDump.dump(java.lang.StringBuilder, J)
Métodos invocados: 
java.lang.StringBuilder.append(C)
83 - Declaração do método: org.apache.commons.io.HexDump.dump(java.lang.StringBuilder, B)
Métodos invocados: 
java.lang.StringBuilder.append(C)
84 - Declaração do método: org.apache.commons.io.FilenameUtils.FilenameUtils()
84 - Declaração do método: org.apache.commons.io.FilenameUtils.isSystemWindows()
84 - Declaração do método: org.apache.commons.io.FilenameUtils.isSeparator(C)
84 - Declaração do método: org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String, Z)
85 - Declaração do método: org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String, Z)
86 - Declaração do método: org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String, Z)
Métodos invocados: 
java.lang.String.length()
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
java.lang.String.length()
java.lang.String.getChars(I, I, [C, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
87 - Declaração do método: org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
java.lang.String.length()
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
java.lang.String.charAt(I)
org.apache.commons.io.FilenameUtils.isSeparator(C)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
88 - Declaração do método: org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)
Métodos invocados: 
java.lang.String.indexOf(I)
java.lang.String.replace(C, C)
89 - Declaração do método: org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)
Métodos invocados: 
java.lang.String.indexOf(I)
java.lang.String.replace(C, C)
90 - Declaração do método: org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.isSystemWindows()
org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)
91 - Declaração do método: org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.charAt(I)
org.apache.commons.io.FilenameUtils.isSeparator(C)
java.lang.String.indexOf(I, I)
java.lang.String.indexOf(I, I)
java.lang.Math.min(I, I)
java.lang.String.charAt(I)
java.lang.Character.toUpperCase(C)
java.lang.String.charAt(I)
org.apache.commons.io.FilenameUtils.isSeparator(C)
org.apache.commons.io.FilenameUtils.isSeparator(C)
org.apache.commons.io.FilenameUtils.isSeparator(C)
java.lang.String.indexOf(I, I)
java.lang.String.indexOf(I, I)
java.lang.Math.min(I, I)
org.apache.commons.io.FilenameUtils.isSeparator(C)
92 - Declaração do método: org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)
Métodos invocados: 
java.lang.String.lastIndexOf(I)
java.lang.String.lastIndexOf(I)
java.lang.Math.max(I, I)
93 - Declaração do método: org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
Métodos invocados: 
java.lang.String.lastIndexOf(I)
org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)
94 - Declaração do método: org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I, I)
95 - Declaração do método: org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String, I)
96 - Declaração do método: org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String, I)
97 - Declaração do método: org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String, I)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I, I)
98 - Declaração do método: org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.doGetFullPath(java.lang.String, Z)
99 - Declaração do método: org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.doGetFullPath(java.lang.String, Z)
100 - Declaração do método: org.apache.commons.io.FilenameUtils.doGetFullPath(java.lang.String, Z)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
java.lang.String.length()
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)
java.lang.String.substring(I, I)
java.lang.String.substring(I, I)
101 - Declaração do método: org.apache.commons.io.FilenameUtils.getName(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)
java.lang.String.substring(I)
102 - Declaração do método: org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getName(java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
103 - Declaração do método: org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
java.lang.String.substring(I)
104 - Declaração do método: org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
java.lang.String.substring(I, I)
105 - Declaração do método: org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String, Z, org.apache.commons.io.IOCase)
106 - Declaração do método: org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String, Z, org.apache.commons.io.IOCase)
107 - Declaração do método: org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String, Z, org.apache.commons.io.IOCase)
108 - Declaração do método: org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String, Z, org.apache.commons.io.IOCase)
109 - Declaração do método: org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String, Z, org.apache.commons.io.IOCase)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
110 - Declaração do método: org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.length()
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
java.lang.String.equals(java.lang.Object)
111 - Declaração do método: org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
java.lang.String.equals(java.lang.Object)
112 - Declaração do método: org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
Métodos invocados: 
java.util.Collection.isEmpty()
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.String.equals(java.lang.Object)
113 - Declaração do método: org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
114 - Declaração do método: org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
115 - Declaração do método: org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
java.util.Vector.size()
java.util.Stack.pop()
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.length()
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
java.util.Stack.push([I)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
java.lang.String.length()
java.lang.String.length()
java.util.Vector.size()
116 - Declaração do método: org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
Métodos invocados: 
java.lang.String.indexOf(java.lang.String)
java.lang.String.indexOf(java.lang.String)
java.lang.String.toCharArray()
java.lang.AbstractStringBuilder.length()
java.lang.StringBuilder.toString()
java.util.ArrayList.add(java.lang.String)
java.lang.AbstractStringBuilder.setLength(I)
java.util.ArrayList.add(java.lang.String)
java.util.ArrayList.size()
java.util.ArrayList.size()
java.util.ArrayList.get(I)
java.lang.String.equals(java.lang.Object)
java.util.ArrayList.add(java.lang.String)
java.lang.StringBuilder.append(C)
java.lang.AbstractStringBuilder.length()
java.lang.StringBuilder.toString()
java.util.ArrayList.add(java.lang.String)
java.util.ArrayList.size()
java.util.ArrayList.toArray([Ljava.lang.String;)
117 - Declaração do método: org.apache.commons.io.LineIterator.LineIterator(java.io.Reader)
117 - Declaração do método: org.apache.commons.io.LineIterator.hasNext()
Métodos invocados: 
java.io.BufferedReader.readLine()
org.apache.commons.io.LineIterator.isValidLine(java.lang.String)
org.apache.commons.io.LineIterator.close()
java.lang.Throwable.toString()
118 - Declaração do método: org.apache.commons.io.LineIterator.isValidLine(java.lang.String)
118 - Declaração do método: org.apache.commons.io.LineIterator.next()
Métodos invocados: 
org.apache.commons.io.LineIterator.nextLine()
119 - Declaração do método: org.apache.commons.io.LineIterator.nextLine()
Métodos invocados: 
org.apache.commons.io.LineIterator.hasNext()
120 - Declaração do método: org.apache.commons.io.LineIterator.close()
Métodos invocados: 
org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)
121 - Declaração do método: org.apache.commons.io.LineIterator.remove()
121 - Declaração do método: org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)
Métodos invocados: 
org.apache.commons.io.LineIterator.close()
122 - Declaração do método: org.apache.commons.io.CopyUtils.CopyUtils()
122 - Declaração do método: org.apache.commons.io.CopyUtils.copy([B, java.io.OutputStream)
Métodos invocados: 
java.io.OutputStream.write([B)
123 - Declaração do método: org.apache.commons.io.CopyUtils.copy([B, java.io.Writer)
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.InputStream, java.io.Writer)
124 - Declaração do método: org.apache.commons.io.CopyUtils.copy([B, java.io.Writer, java.lang.String)
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)
125 - Declaração do método: org.apache.commons.io.CopyUtils.copy(java.io.InputStream, java.io.OutputStream)
Métodos invocados: 
java.io.InputStream.read([B)
java.io.OutputStream.write([B, I, I)
126 - Declaração do método: org.apache.commons.io.CopyUtils.copy(java.io.Reader, java.io.Writer)
Métodos invocados: 
java.io.Reader.read([C)
java.io.Writer.write([C, I, I)
127 - Declaração do método: org.apache.commons.io.CopyUtils.copy(java.io.InputStream, java.io.Writer)
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.Reader, java.io.Writer)
128 - Declaração do método: org.apache.commons.io.CopyUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.Reader, java.io.Writer)
129 - Declaração do método: org.apache.commons.io.CopyUtils.copy(java.io.Reader, java.io.OutputStream)
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.Reader, java.io.Writer)
java.io.OutputStreamWriter.flush()
130 - Declaração do método: org.apache.commons.io.CopyUtils.copy(java.lang.String, java.io.OutputStream)
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.Reader, java.io.Writer)
java.io.OutputStreamWriter.flush()
131 - Declaração do método: org.apache.commons.io.CopyUtils.copy(java.lang.String, java.io.Writer)
Métodos invocados: 
java.io.Writer.write(java.lang.String)
132 - Declaração do método: org.apache.commons.io.DirectoryWalker.DirectoryWalker()
132 - Declaração do método: org.apache.commons.io.DirectoryWalker.DirectoryWalker(java.io.FileFilter, I)
132 - Declaração do método: org.apache.commons.io.DirectoryWalker.DirectoryWalker(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter, I)
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.orFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
133 - Declaração do método: org.apache.commons.io.DirectoryWalker.walk(java.io.File, java.util.Collection)
Métodos invocados: 
org.apache.commons.io.DirectoryWalker.handleStart(java.io.File, java.util.Collection)
org.apache.commons.io.DirectoryWalker.walk(java.io.File, I, java.util.Collection)
org.apache.commons.io.DirectoryWalker.handleEnd(java.util.Collection)
org.apache.commons.io.DirectoryWalker.handleCancelled(java.io.File, java.util.Collection, org.apache.commons.io.DirectoryWalker$CancelException)
134 - Declaração do método: org.apache.commons.io.DirectoryWalker.walk(java.io.File, I, java.util.Collection)
Métodos invocados: 
org.apache.commons.io.DirectoryWalker.checkIfCancelled(java.io.File, I, java.util.Collection)
org.apache.commons.io.DirectoryWalker.handleDirectory(java.io.File, I, java.util.Collection)
org.apache.commons.io.DirectoryWalker.handleDirectoryStart(java.io.File, I, java.util.Collection)
org.apache.commons.io.DirectoryWalker.checkIfCancelled(java.io.File, I, java.util.Collection)
java.io.File.listFiles()
java.io.File.listFiles(java.io.FileFilter)
org.apache.commons.io.DirectoryWalker.handleRestricted(java.io.File, I, java.util.Collection)
java.io.File.isDirectory()
org.apache.commons.io.DirectoryWalker.walk(java.io.File, I, java.util.Collection)
org.apache.commons.io.DirectoryWalker.checkIfCancelled(java.io.File, I, java.util.Collection)
org.apache.commons.io.DirectoryWalker.handleFile(java.io.File, I, java.util.Collection)
org.apache.commons.io.DirectoryWalker.checkIfCancelled(java.io.File, I, java.util.Collection)
org.apache.commons.io.DirectoryWalker.handleDirectoryEnd(java.io.File, I, java.util.Collection)
org.apache.commons.io.DirectoryWalker.checkIfCancelled(java.io.File, I, java.util.Collection)
135 - Declaração do método: org.apache.commons.io.DirectoryWalker.checkIfCancelled(java.io.File, I, java.util.Collection)
Métodos invocados: 
org.apache.commons.io.DirectoryWalker.handleIsCancelled(java.io.File, I, java.util.Collection)
136 - Declaração do método: org.apache.commons.io.DirectoryWalker.handleIsCancelled(java.io.File, I, java.util.Collection)
136 - Declaração do método: org.apache.commons.io.DirectoryWalker.handleCancelled(java.io.File, java.util.Collection, org.apache.commons.io.DirectoryWalker$CancelException)
136 - Declaração do método: org.apache.commons.io.DirectoryWalker.handleStart(java.io.File, java.util.Collection)
136 - Declaração do método: org.apache.commons.io.DirectoryWalker.handleDirectory(java.io.File, I, java.util.Collection)
136 - Declaração do método: org.apache.commons.io.DirectoryWalker.handleDirectoryStart(java.io.File, I, java.util.Collection)
136 - Declaração do método: org.apache.commons.io.DirectoryWalker.handleFile(java.io.File, I, java.util.Collection)
136 - Declaração do método: org.apache.commons.io.DirectoryWalker.handleRestricted(java.io.File, I, java.util.Collection)
136 - Declaração do método: org.apache.commons.io.DirectoryWalker.handleDirectoryEnd(java.io.File, I, java.util.Collection)
136 - Declaração do método: org.apache.commons.io.DirectoryWalker.handleEnd(java.util.Collection)
136 - Declaração do método: org.apache.commons.io.DirectoryWalker$CancelException.CancelException(java.io.File, I)
136 - Declaração do método: org.apache.commons.io.DirectoryWalker$CancelException.CancelException(java.lang.String, java.io.File, I)
136 - Declaração do método: org.apache.commons.io.DirectoryWalker$CancelException.getFile()
136 - Declaração do método: org.apache.commons.io.DirectoryWalker$CancelException.getDepth()
136 - Declaração do método: org.apache.commons.io.EndianUtils.EndianUtils()
136 - Declaração do método: org.apache.commons.io.EndianUtils.swapShort(S)
136 - Declaração do método: org.apache.commons.io.EndianUtils.swapInteger(I)
136 - Declaração do método: org.apache.commons.io.EndianUtils.swapLong(J)
136 - Declaração do método: org.apache.commons.io.EndianUtils.swapFloat(F)
Métodos invocados: 
java.lang.Float.floatToIntBits(F)
org.apache.commons.io.EndianUtils.swapInteger(I)
java.lang.Float.intBitsToFloat(I)
137 - Declaração do método: org.apache.commons.io.EndianUtils.swapDouble(D)
Métodos invocados: 
java.lang.Double.doubleToLongBits(D)
org.apache.commons.io.EndianUtils.swapLong(J)
java.lang.Double.longBitsToDouble(J)
138 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedShort([B, I, S)
138 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedShort([B, I)
138 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedUnsignedShort([B, I)
138 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedInteger([B, I, I)
138 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedInteger([B, I)
138 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger([B, I)
138 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedLong([B, I, J)
138 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedLong([B, I)
138 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedFloat([B, I, F)
Métodos invocados: 
java.lang.Float.floatToIntBits(F)
org.apache.commons.io.EndianUtils.writeSwappedInteger([B, I, I)
139 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedFloat([B, I)
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedInteger([B, I)
java.lang.Float.intBitsToFloat(I)
140 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedDouble([B, I, D)
Métodos invocados: 
java.lang.Double.doubleToLongBits(D)
org.apache.commons.io.EndianUtils.writeSwappedLong([B, I, J)
141 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedDouble([B, I)
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedLong([B, I)
java.lang.Double.longBitsToDouble(J)
142 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedShort(java.io.OutputStream, S)
Métodos invocados: 
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
143 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedShort(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
144 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
145 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedInteger(java.io.OutputStream, I)
Métodos invocados: 
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
146 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedInteger(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
147 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
148 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedLong(java.io.OutputStream, J)
Métodos invocados: 
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
149 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedLong(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
org.apache.commons.io.EndianUtils.readSwappedLong([B, I)
150 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedFloat(java.io.OutputStream, F)
Métodos invocados: 
java.lang.Float.floatToIntBits(F)
org.apache.commons.io.EndianUtils.writeSwappedInteger(java.io.OutputStream, I)
151 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedFloat(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedInteger(java.io.InputStream)
java.lang.Float.intBitsToFloat(I)
152 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedDouble(java.io.OutputStream, D)
Métodos invocados: 
java.lang.Double.doubleToLongBits(D)
org.apache.commons.io.EndianUtils.writeSwappedLong(java.io.OutputStream, J)
153 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedDouble(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedLong(java.io.InputStream)
java.lang.Double.longBitsToDouble(J)
154 - Declaração do método: org.apache.commons.io.EndianUtils.read(java.io.InputStream)
Métodos invocados: 
java.io.InputStream.read()
155 - Declaração do método: org.apache.commons.io.FileSystemUtils.FileSystemUtils()
155 - Declaração do método: org.apache.commons.io.FileSystemUtils.freeSpace(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z)
156 - Declaração do método: org.apache.commons.io.FileSystemUtils.freeSpaceKb(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z)
157 - Declaração do método: org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z)
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String)
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String)
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
158 - Declaração do método: org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.String.substring(I, I)
org.apache.commons.io.FileSystemUtils.performCommand([Ljava.lang.String;, I)
java.util.List.size()
java.util.List.get(I)
java.lang.String.length()
org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String, java.lang.String)
159 - Declaração do método: org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.Character.isDigit(C)
java.lang.String.charAt(I)
java.lang.Character.isDigit(C)
java.lang.String.substring(I, I)
java.lang.AbstractStringBuilder.length()
java.lang.AbstractStringBuilder.charAt(I)
java.lang.AbstractStringBuilder.charAt(I)
java.lang.StringBuilder.deleteCharAt(I)
java.lang.StringBuilder.toString()
org.apache.commons.io.FileSystemUtils.parseBytes(java.lang.String, java.lang.String)
160 - Declaração do método: org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
Métodos invocados: 
java.lang.String.length()
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
java.lang.String.length()
org.apache.commons.io.FileSystemUtils.performCommand([Ljava.lang.String;, I)
java.util.List.size()
java.util.List.get(I)
java.util.StringTokenizer.countTokens()
java.util.StringTokenizer.countTokens()
java.util.List.size()
java.util.List.get(I)
java.util.StringTokenizer.nextToken()
java.util.StringTokenizer.nextToken()
java.util.StringTokenizer.nextToken()
java.util.StringTokenizer.nextToken()
org.apache.commons.io.FileSystemUtils.parseBytes(java.lang.String, java.lang.String)
161 - Declaração do método: org.apache.commons.io.FileSystemUtils.parseBytes(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.Long.parseLong(java.lang.String)
162 - Declaração do método: org.apache.commons.io.FileSystemUtils.performCommand([Ljava.lang.String;, I)
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.openProcess([Ljava.lang.String;)
java.lang.Process.getInputStream()
java.lang.Process.getOutputStream()
java.lang.Process.getErrorStream()
java.io.BufferedReader.readLine()
java.util.List.size()
java.lang.String.toLowerCase(java.util.Locale)
java.lang.String.trim()
java.util.List.add(java.lang.String)
java.io.BufferedReader.readLine()
java.lang.Process.waitFor()
java.lang.Process.exitValue()
java.lang.Process.exitValue()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.size()
java.util.Arrays.asList([Ljava.lang.String;)
java.lang.Throwable.getMessage()
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)
java.lang.Process.destroy()
163 - Declaração do método: org.apache.commons.io.FileSystemUtils.openProcess([Ljava.lang.String;)
Métodos invocados: 
java.lang.Runtime.getRuntime()
java.lang.Runtime.exec([Ljava.lang.String;)
164 - Declaração do método: org.apache.commons.io.FileUtils.FileUtils()
164 - Declaração do método: org.apache.commons.io.FileUtils.openInputStream(java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.canRead()
165 - Declaração do método: org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.canWrite()
java.io.File.getParentFile()
java.io.File.exists()
java.io.File.mkdirs()
166 - Declaração do método: org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
Métodos invocados: 
java.lang.String.valueOf(J)
java.lang.String.valueOf(J)
java.lang.String.valueOf(J)
java.lang.String.valueOf(J)
167 - Declaração do método: org.apache.commons.io.FileUtils.touch(java.io.File)
Métodos invocados: 
java.io.File.exists()
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
java.lang.System.currentTimeMillis()
java.io.File.setLastModified(J)
168 - Declaração do método: org.apache.commons.io.FileUtils.convertFileCollectionToFileArray(java.util.Collection)
Métodos invocados: 
java.util.Collection.size()
java.util.Collection.toArray([Ljava.io.File;)
169 - Declaração do método: org.apache.commons.io.FileUtils.innerListFiles(java.util.Collection, java.io.File, org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
java.io.File.listFiles(java.io.FileFilter)
java.io.File.isDirectory()
org.apache.commons.io.FileUtils.innerListFiles(java.util.Collection, java.io.File, org.apache.commons.io.filefilter.IOFileFilter)
java.util.Collection.add(java.io.File)
170 - Declaração do método: org.apache.commons.io.FileUtils.listFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
java.io.File.isDirectory()
org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.orFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtils.innerListFiles(java.util.Collection, java.io.File, org.apache.commons.io.filefilter.IOFileFilter)
171 - Declaração do método: org.apache.commons.io.FileUtils.iterateFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
org.apache.commons.io.FileUtils.listFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
java.util.Collection.iterator()
172 - Declaração do método: org.apache.commons.io.FileUtils.toSuffixes([Ljava.lang.String;)
172 - Declaração do método: org.apache.commons.io.FileUtils.listFiles(java.io.File, [Ljava.lang.String;, Z)
Métodos invocados: 
org.apache.commons.io.FileUtils.toSuffixes([Ljava.lang.String;)
org.apache.commons.io.FileUtils.listFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
173 - Declaração do método: org.apache.commons.io.FileUtils.iterateFiles(java.io.File, [Ljava.lang.String;, Z)
Métodos invocados: 
org.apache.commons.io.FileUtils.listFiles(java.io.File, [Ljava.lang.String;, Z)
java.util.Collection.iterator()
174 - Declaração do método: org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.isDirectory()
java.io.File.length()
java.io.File.length()
java.io.File.getCanonicalFile()
java.io.File.getCanonicalFile()
java.io.File.equals(java.lang.Object)
org.apache.commons.io.IOUtils.contentEquals(java.io.InputStream, java.io.InputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
175 - Declaração do método: org.apache.commons.io.FileUtils.toFile(java.net.URL)
Métodos invocados: 
java.net.URL.getProtocol()
java.lang.String.equals(java.lang.Object)
java.net.URL.getFile()
java.lang.String.replace(C, C)
java.lang.String.indexOf(I, I)
java.lang.String.length()
java.lang.String.substring(I, I)
java.lang.Integer.parseInt(java.lang.String, I)
java.lang.String.substring(I, I)
java.lang.String.substring(I)
176 - Declaração do método: org.apache.commons.io.FileUtils.toFiles([Ljava.net.URL;)
Métodos invocados: 
java.net.URL.getProtocol()
java.lang.String.equals(java.lang.Object)
org.apache.commons.io.FileUtils.toFile(java.net.URL)
177 - Declaração do método: org.apache.commons.io.FileUtils.toURLs([Ljava.io.File;)
Métodos invocados: 
java.io.File.toURI()
java.net.URI.toURL()
178 - Declaração do método: org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File, java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File, java.io.File, Z)
179 - Declaração do método: org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File, java.io.File, Z)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.getName()
org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File, Z)
180 - Declaração do método: org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File, Z)
181 - Declaração do método: org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File, Z)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.getCanonicalPath()
java.io.File.getCanonicalPath()
java.lang.String.equals(java.lang.Object)
java.io.File.getParentFile()
java.io.File.getParentFile()
java.io.File.exists()
java.io.File.getParentFile()
java.io.File.mkdirs()
java.io.File.exists()
java.io.File.canWrite()
org.apache.commons.io.FileUtils.doCopyFile(java.io.File, java.io.File, Z)
182 - Declaração do método: org.apache.commons.io.FileUtils.doCopyFile(java.io.File, java.io.File, Z)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.FileInputStream.getChannel()
java.io.FileOutputStream.getChannel()
java.nio.channels.FileChannel.size()
java.nio.channels.FileChannel.transferFrom(java.nio.channels.ReadableByteChannel, J, J)
org.apache.commons.io.IOUtils.closeQuietly(java.nio.channels.Channel)
org.apache.commons.io.IOUtils.closeQuietly(java.nio.channels.Channel)
java.io.File.length()
java.io.File.length()
java.io.File.lastModified()
java.io.File.setLastModified(J)
183 - Declaração do método: org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.getName()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, Z)
184 - Declaração do método: org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, Z)
185 - Declaração do método: org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, Z)
Métodos invocados: 
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, java.io.FileFilter, Z)
186 - Declaração do método: org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, java.io.FileFilter)
Métodos invocados: 
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, java.io.FileFilter, Z)
187 - Declaração do método: org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, java.io.FileFilter, Z)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.getCanonicalPath()
java.io.File.getCanonicalPath()
java.lang.String.equals(java.lang.Object)
java.io.File.getCanonicalPath()
java.io.File.getCanonicalPath()
java.lang.String.startsWith(java.lang.String)
java.io.File.listFiles()
java.io.File.listFiles(java.io.FileFilter)
java.io.File.getName()
java.io.File.getCanonicalPath()
java.util.List.add(java.lang.String)
org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File, java.io.File, java.io.FileFilter, Z, java.util.List)
188 - Declaração do método: org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File, java.io.File, java.io.FileFilter, Z, java.util.List)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.mkdirs()
java.io.File.lastModified()
java.io.File.setLastModified(J)
java.io.File.canWrite()
java.io.File.listFiles()
java.io.File.listFiles(java.io.FileFilter)
java.io.File.getName()
java.io.File.getCanonicalPath()
java.util.List.contains(java.lang.Object)
java.io.File.isDirectory()
org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File, java.io.File, java.io.FileFilter, Z, java.util.List)
org.apache.commons.io.FileUtils.doCopyFile(java.io.File, java.io.File, Z)
189 - Declaração do método: org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL, java.io.File)
Métodos invocados: 
java.net.URL.openStream()
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
190 - Declaração do método: org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
Métodos invocados: 
java.io.File.exists()
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
java.io.File.delete()
191 - Declaração do método: org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
java.io.File.delete()
192 - Declaração do método: org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.listFiles()
org.apache.commons.io.FileUtils.forceDelete(java.io.File)
193 - Declaração do método: org.apache.commons.io.FileUtils.waitFor(java.io.File, I)
Métodos invocados: 
java.io.File.exists()
java.lang.Thread.sleep(J)
194 - Declaração do método: org.apache.commons.io.FileUtils.readFileToString(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FileUtils.openInputStream(java.io.File)
org.apache.commons.io.IOUtils.toString(java.io.InputStream, java.lang.String)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
195 - Declaração do método: org.apache.commons.io.FileUtils.readFileToString(java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.readFileToString(java.io.File, java.lang.String)
196 - Declaração do método: org.apache.commons.io.FileUtils.readFileToByteArray(java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.openInputStream(java.io.File)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
197 - Declaração do método: org.apache.commons.io.FileUtils.readLines(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FileUtils.openInputStream(java.io.File)
org.apache.commons.io.IOUtils.readLines(java.io.InputStream, java.lang.String)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
198 - Declaração do método: org.apache.commons.io.FileUtils.readLines(java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.readLines(java.io.File, java.lang.String)
199 - Declaração do método: org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FileUtils.openInputStream(java.io.File)
org.apache.commons.io.IOUtils.lineIterator(java.io.InputStream, java.lang.String)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
200 - Declaração do método: org.apache.commons.io.FileUtils.lineIterator(java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)
201 - Declaração do método: org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream, java.lang.String)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
202 - Declaração do método: org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
203 - Declaração do método: org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence)
Métodos invocados: 
java.lang.CharSequence.toString()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
204 - Declaração do método: org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, java.lang.String)
Métodos invocados: 
java.lang.CharSequence.toString()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
205 - Declaração do método: org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File, [B)
Métodos invocados: 
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
java.io.OutputStream.write([B)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
206 - Declaração do método: org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection)
Métodos invocados: 
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String)
207 - Declaração do método: org.apache.commons.io.FileUtils.writeLines(java.io.File, java.util.Collection)
Métodos invocados: 
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String)
208 - Declaração do método: org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
209 - Declaração do método: org.apache.commons.io.FileUtils.writeLines(java.io.File, java.util.Collection, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String)
210 - Declaração do método: org.apache.commons.io.FileUtils.forceDelete(java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.io.File.exists()
java.io.File.delete()
211 - Declaração do método: org.apache.commons.io.FileUtils.forceDeleteOnExit(java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
org.apache.commons.io.FileUtils.deleteDirectoryOnExit(java.io.File)
java.io.File.deleteOnExit()
212 - Declaração do método: org.apache.commons.io.FileUtils.deleteDirectoryOnExit(java.io.File)
Métodos invocados: 
java.io.File.exists()
org.apache.commons.io.FileUtils.cleanDirectoryOnExit(java.io.File)
java.io.File.deleteOnExit()
213 - Declaração do método: org.apache.commons.io.FileUtils.cleanDirectoryOnExit(java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.listFiles()
org.apache.commons.io.FileUtils.forceDeleteOnExit(java.io.File)
214 - Declaração do método: org.apache.commons.io.FileUtils.forceMkdir(java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.isFile()
java.io.File.mkdirs()
215 - Declaração do método: org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.listFiles()
java.io.File.isDirectory()
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
java.io.File.length()
216 - Declaração do método: org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.lastModified()
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, J)
217 - Declaração do método: org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.util.Date)
Métodos invocados: 
java.util.Date.getTime()
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, J)
218 - Declaração do método: org.apache.commons.io.FileUtils.isFileNewer(java.io.File, J)
Métodos invocados: 
java.io.File.exists()
java.io.File.lastModified()
219 - Declaração do método: org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.lastModified()
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, J)
220 - Declaração do método: org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.util.Date)
Métodos invocados: 
java.util.Date.getTime()
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, J)
221 - Declaração do método: org.apache.commons.io.FileUtils.isFileOlder(java.io.File, J)
Métodos invocados: 
java.io.File.exists()
java.io.File.lastModified()
222 - Declaração do método: org.apache.commons.io.FileUtils.checksumCRC32(java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.checksum(java.io.File, java.util.zip.Checksum)
java.util.zip.CRC32.getValue()
223 - Declaração do método: org.apache.commons.io.FileUtils.checksum(java.io.File, java.util.zip.Checksum)
Métodos invocados: 
java.io.File.isDirectory()
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
224 - Declaração do método: org.apache.commons.io.FileUtils.moveDirectory(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.exists()
java.io.File.renameTo(java.io.File)
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.io.File.exists()
225 - Declaração do método: org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File, java.io.File, Z)
Métodos invocados: 
java.io.File.exists()
java.io.File.mkdirs()
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.getName()
org.apache.commons.io.FileUtils.moveDirectory(java.io.File, java.io.File)
226 - Declaração do método: org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.renameTo(java.io.File)
org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File)
java.io.File.delete()
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
227 - Declaração do método: org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File, java.io.File, Z)
Métodos invocados: 
java.io.File.exists()
java.io.File.mkdirs()
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.getName()
org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
228 - Declaração do método: org.apache.commons.io.FileUtils.moveToDirectory(java.io.File, java.io.File, Z)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File, java.io.File, Z)
org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File, java.io.File, Z)
229 - Declaração do método: org.apache.commons.io.comparator.LastModifiedFileComparator.compare(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.lastModified()
java.io.File.lastModified()
230 - Declaração do método: org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator()
230 - Declaração do método: org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator(org.apache.commons.io.IOCase)
230 - Declaração do método: org.apache.commons.io.comparator.ExtensionFileComparator.compare(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.getName()
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
java.io.File.getName()
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
231 - Declaração do método: org.apache.commons.io.comparator.PathFileComparator.PathFileComparator()
231 - Declaração do método: org.apache.commons.io.comparator.PathFileComparator.PathFileComparator(org.apache.commons.io.IOCase)
231 - Declaração do método: org.apache.commons.io.comparator.PathFileComparator.compare(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.getPath()
java.io.File.getPath()
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
232 - Declaração do método: org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator()
232 - Declaração do método: org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator(Z)
232 - Declaração do método: org.apache.commons.io.comparator.SizeFileComparator.compare(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
java.io.File.exists()
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
java.io.File.length()
java.io.File.isDirectory()
java.io.File.exists()
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
java.io.File.length()
233 - Declaração do método: org.apache.commons.io.comparator.ReverseComparator.ReverseComparator(java.util.Comparator)
233 - Declaração do método: org.apache.commons.io.comparator.ReverseComparator.compare(java.io.File, java.io.File)
Métodos invocados: 
java.util.Comparator.compare(java.io.File, java.io.File)
234 - Declaração do método: org.apache.commons.io.comparator.NameFileComparator.NameFileComparator()
234 - Declaração do método: org.apache.commons.io.comparator.NameFileComparator.NameFileComparator(org.apache.commons.io.IOCase)
234 - Declaração do método: org.apache.commons.io.comparator.NameFileComparator.compare(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.getName()
java.io.File.getName()
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
235 - Declaração do método: org.apache.commons.io.comparator.DefaultFileComparator.compare(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.compareTo(java.io.File)
236 - Declaração do método: org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(java.lang.String)
236 - Declaração do método: org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(java.lang.String, org.apache.commons.io.IOCase)
236 - Declaração do método: org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter([Ljava.lang.String;)
236 - Declaração do método: org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter([Ljava.lang.String;, org.apache.commons.io.IOCase)
236 - Declaração do método: org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(java.util.List)
236 - Declaração do método: org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(java.util.List, org.apache.commons.io.IOCase)
Métodos invocados: 
java.util.List.size()
java.util.List.toArray([Ljava.lang.String;)
237 - Declaração do método: org.apache.commons.io.filefilter.SuffixFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.getName()
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
238 - Declaração do método: org.apache.commons.io.filefilter.SuffixFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
239 - Declaração do método: org.apache.commons.io.filefilter.SuffixFileFilter.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
240 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
240 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters()
240 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilter.removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
240 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilter.setFileFilters(java.util.List)
240 - Declaração do método: org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(java.lang.String)
240 - Declaração do método: org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter([Ljava.lang.String;)
240 - Declaração do método: org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(java.util.List)
Métodos invocados: 
java.util.List.size()
java.util.List.toArray([Ljava.lang.String;)
241 - Declaração do método: org.apache.commons.io.filefilter.WildcardFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
java.io.File.isDirectory()
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
242 - Declaração do método: org.apache.commons.io.filefilter.WildcardFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
java.io.File.getName()
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
243 - Declaração do método: org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(J)
243 - Declaração do método: org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(J, Z)
243 - Declaração do método: org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(java.util.Date)
243 - Declaração do método: org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(java.util.Date, Z)
Métodos invocados: 
java.util.Date.getTime()
244 - Declaração do método: org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(java.io.File)
244 - Declaração do método: org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(java.io.File, Z)
Métodos invocados: 
java.io.File.lastModified()
245 - Declaração do método: org.apache.commons.io.filefilter.AgeFileFilter.accept(java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, J)
246 - Declaração do método: org.apache.commons.io.filefilter.AgeFileFilter.toString()
246 - Declaração do método: org.apache.commons.io.filefilter.DirectoryFileFilter.DirectoryFileFilter()
246 - Declaração do método: org.apache.commons.io.filefilter.DirectoryFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
247 - Declaração do método: org.apache.commons.io.filefilter.AbstractFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.AbstractFileFilter.accept(java.io.File, java.lang.String)
248 - Declaração do método: org.apache.commons.io.filefilter.AbstractFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.filefilter.AbstractFileFilter.accept(java.io.File)
249 - Declaração do método: org.apache.commons.io.filefilter.AbstractFileFilter.toString()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
java.lang.String.lastIndexOf(I)
java.lang.String.substring(I)
250 - Declaração do método: org.apache.commons.io.filefilter.EmptyFileFilter.EmptyFileFilter()
250 - Declaração do método: org.apache.commons.io.filefilter.EmptyFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
java.io.File.listFiles()
java.io.File.length()
251 - Declaração do método: org.apache.commons.io.filefilter.TrueFileFilter.TrueFileFilter()
251 - Declaração do método: org.apache.commons.io.filefilter.TrueFileFilter.accept(java.io.File)
251 - Declaração do método: org.apache.commons.io.filefilter.TrueFileFilter.accept(java.io.File, java.lang.String)
251 - Declaração do método: org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(java.lang.String)
251 - Declaração do método: org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(java.lang.String, org.apache.commons.io.IOCase)
251 - Declaração do método: org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter([Ljava.lang.String;)
251 - Declaração do método: org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter([Ljava.lang.String;, org.apache.commons.io.IOCase)
251 - Declaração do método: org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(java.util.List)
251 - Declaração do método: org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(java.util.List, org.apache.commons.io.IOCase)
Métodos invocados: 
java.util.List.size()
java.util.List.toArray([Ljava.lang.String;)
252 - Declaração do método: org.apache.commons.io.filefilter.PrefixFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.getName()
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
253 - Declaração do método: org.apache.commons.io.filefilter.PrefixFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
254 - Declaração do método: org.apache.commons.io.filefilter.PrefixFileFilter.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
255 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter()
255 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(java.util.List)
255 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
org.apache.commons.io.filefilter.OrFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.OrFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
256 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
257 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.getFileFilters()
Métodos invocados: 
java.util.Collections.unmodifiableList(java.util.List)
258 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
java.util.List.remove(java.lang.Object)
259 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.setFileFilters(java.util.List)
259 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.accept(java.io.File)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
260 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
261 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.util.List.size()
java.lang.StringBuilder.append(java.lang.String)
java.util.List.get(I)
java.lang.Object.toString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
262 - Declaração do método: org.apache.commons.io.filefilter.HiddenFileFilter.HiddenFileFilter()
262 - Declaração do método: org.apache.commons.io.filefilter.HiddenFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.isHidden()
263 - Declaração do método: org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(J)
263 - Declaração do método: org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(J, Z)
263 - Declaração do método: org.apache.commons.io.filefilter.SizeFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.length()
264 - Declaração do método: org.apache.commons.io.filefilter.SizeFileFilter.toString()
264 - Declaração do método: org.apache.commons.io.filefilter.FalseFileFilter.FalseFileFilter()
264 - Declaração do método: org.apache.commons.io.filefilter.FalseFileFilter.accept(java.io.File)
264 - Declaração do método: org.apache.commons.io.filefilter.FalseFileFilter.accept(java.io.File, java.lang.String)
264 - Declaração do método: org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(java.lang.String)
264 - Declaração do método: org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(java.lang.String, org.apache.commons.io.IOCase)
264 - Declaração do método: org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter([Ljava.lang.String;)
264 - Declaração do método: org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter([Ljava.lang.String;, org.apache.commons.io.IOCase)
264 - Declaração do método: org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(java.util.List)
264 - Declaração do método: org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(java.util.List, org.apache.commons.io.IOCase)
Métodos invocados: 
java.util.List.size()
java.util.List.toArray([Ljava.lang.String;)
265 - Declaração do método: org.apache.commons.io.filefilter.NameFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.getName()
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
266 - Declaração do método: org.apache.commons.io.filefilter.NameFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
267 - Declaração do método: org.apache.commons.io.filefilter.NameFileFilter.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
268 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(java.lang.String)
Métodos invocados: 
java.util.regex.Pattern.compile(java.lang.String)
269 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(java.lang.String, org.apache.commons.io.IOCase)
Métodos invocados: 
org.apache.commons.io.IOCase.isCaseSensitive()
java.util.regex.Pattern.compile(java.lang.String, I)
270 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(java.lang.String, I)
Métodos invocados: 
java.util.regex.Pattern.compile(java.lang.String, I)
271 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(java.util.regex.Pattern)
271 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.util.regex.Matcher.matches()
272 - Declaração do método: org.apache.commons.io.filefilter.CanReadFileFilter.CanReadFileFilter()
272 - Declaração do método: org.apache.commons.io.filefilter.CanReadFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.canRead()
273 - Declaração do método: org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(java.lang.String)
273 - Declaração do método: org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(java.lang.String, org.apache.commons.io.IOCase)
273 - Declaração do método: org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter([Ljava.lang.String;)
273 - Declaração do método: org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter([Ljava.lang.String;, org.apache.commons.io.IOCase)
273 - Declaração do método: org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(java.util.List)
273 - Declaração do método: org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(java.util.List, org.apache.commons.io.IOCase)
Métodos invocados: 
java.util.List.size()
java.util.List.toArray([Ljava.lang.String;)
274 - Declaração do método: org.apache.commons.io.filefilter.WildcardFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
275 - Declaração do método: org.apache.commons.io.filefilter.WildcardFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.getName()
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
276 - Declaração do método: org.apache.commons.io.filefilter.WildcardFileFilter.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
277 - Declaração do método: org.apache.commons.io.filefilter.NotFileFilter.NotFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
277 - Declaração do método: org.apache.commons.io.filefilter.NotFileFilter.accept(java.io.File)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
278 - Declaração do método: org.apache.commons.io.filefilter.NotFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
279 - Declaração do método: org.apache.commons.io.filefilter.NotFileFilter.toString()
Métodos invocados: 
java.lang.Object.toString()
280 - Declaração do método: org.apache.commons.io.filefilter.FileFileFilter.FileFileFilter()
280 - Declaração do método: org.apache.commons.io.filefilter.FileFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.isFile()
281 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
281 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
281 - Declaração do método: org.apache.commons.io.filefilter.CanWriteFileFilter.CanWriteFileFilter()
281 - Declaração do método: org.apache.commons.io.filefilter.CanWriteFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.canWrite()
282 - Declaração do método: org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(java.io.FilenameFilter)
282 - Declaração do método: org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(java.io.FileFilter)
282 - Declaração do método: org.apache.commons.io.filefilter.DelegateFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.FileFilter.accept(java.io.File)
283 - Declaração do método: org.apache.commons.io.filefilter.DelegateFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
java.io.FilenameFilter.accept(java.io.File, java.lang.String)
284 - Declaração do método: org.apache.commons.io.filefilter.DelegateFileFilter.toString()
Métodos invocados: 
java.lang.Object.toString()
java.lang.Object.toString()
285 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter()
285 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(java.util.List)
285 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
org.apache.commons.io.filefilter.AndFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.AndFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
286 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
287 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.getFileFilters()
Métodos invocados: 
java.util.Collections.unmodifiableList(java.util.List)
288 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
java.util.List.remove(java.lang.Object)
289 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.setFileFilters(java.util.List)
289 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.accept(java.io.File)
Métodos invocados: 
java.util.List.size()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
290 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
java.util.List.size()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
291 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.util.List.size()
java.lang.StringBuilder.append(java.lang.String)
java.util.List.get(I)
java.lang.Object.toString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.FileFilterUtils()
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(java.lang.String)
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(java.lang.String)
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter()
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.fileFileFilter()
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.orFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.falseFileFilter()
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(java.io.FileFilter)
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(java.io.FilenameFilter)
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(J)
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(J, Z)
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.util.Date)
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.util.Date, Z)
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.io.File)
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.io.File, Z)
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(J)
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(J, Z)
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(J, J)
292 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter()
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
293 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter()
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
294 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter)
294 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter)
294 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStream.AutoCloseInputStream(java.io.InputStream)
294 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStream.close()
Métodos invocados: 
java.io.InputStream.close()
295 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStream.read()
Métodos invocados: 
java.io.InputStream.read()
org.apache.commons.io.input.AutoCloseInputStream.close()
296 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStream.read([B)
Métodos invocados: 
java.io.InputStream.read([B)
org.apache.commons.io.input.AutoCloseInputStream.close()
297 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStream.read([B, I, I)
Métodos invocados: 
java.io.InputStream.read([B, I, I)
org.apache.commons.io.input.AutoCloseInputStream.close()
298 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStream.finalize()
Métodos invocados: 
org.apache.commons.io.input.AutoCloseInputStream.close()
299 - Declaração do método: org.apache.commons.io.input.ClosedInputStream.read()
299 - Declaração do método: org.apache.commons.io.input.ClassLoaderObjectInputStream.ClassLoaderObjectInputStream(java.lang.ClassLoader, java.io.InputStream)
299 - Declaração do método: org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveClass(java.io.ObjectStreamClass)
Métodos invocados: 
java.io.ObjectStreamClass.getName()
java.lang.Class.forName(java.lang.String, Z, java.lang.ClassLoader)
300 - Declaração do método: org.apache.commons.io.input.CountingInputStream.CountingInputStream(java.io.InputStream)
300 - Declaração do método: org.apache.commons.io.input.CountingInputStream.read([B)
300 - Declaração do método: org.apache.commons.io.input.CountingInputStream.read([B, I, I)
300 - Declaração do método: org.apache.commons.io.input.CountingInputStream.read()
300 - Declaração do método: org.apache.commons.io.input.CountingInputStream.skip(J)
300 - Declaração do método: org.apache.commons.io.input.CountingInputStream.getCount()
Métodos invocados: 
org.apache.commons.io.input.CountingInputStream.getByteCount()
301 - Declaração do método: org.apache.commons.io.input.CountingInputStream.resetCount()
Métodos invocados: 
org.apache.commons.io.input.CountingInputStream.resetByteCount()
302 - Declaração do método: org.apache.commons.io.input.CountingInputStream.getByteCount()
302 - Declaração do método: org.apache.commons.io.input.CountingInputStream.resetByteCount()
302 - Declaração do método: org.apache.commons.io.input.NullReader.NullReader(J)
302 - Declaração do método: org.apache.commons.io.input.NullReader.NullReader(J, Z, Z)
302 - Declaração do método: org.apache.commons.io.input.NullReader.getPosition()
302 - Declaração do método: org.apache.commons.io.input.NullReader.getSize()
302 - Declaração do método: org.apache.commons.io.input.NullReader.close()
302 - Declaração do método: org.apache.commons.io.input.NullReader.mark(I)
302 - Declaração do método: org.apache.commons.io.input.NullReader.markSupported()
302 - Declaração do método: org.apache.commons.io.input.NullReader.read()
Métodos invocados: 
org.apache.commons.io.input.NullReader.doEndOfFile()
org.apache.commons.io.input.NullReader.processChar()
303 - Declaração do método: org.apache.commons.io.input.NullReader.read([C)
Métodos invocados: 
org.apache.commons.io.input.NullReader.read([C, I, I)
304 - Declaração do método: org.apache.commons.io.input.NullReader.read([C, I, I)
Métodos invocados: 
org.apache.commons.io.input.NullReader.doEndOfFile()
org.apache.commons.io.input.NullReader.processChars([C, I, I)
305 - Declaração do método: org.apache.commons.io.input.NullReader.reset()
305 - Declaração do método: org.apache.commons.io.input.NullReader.skip(J)
Métodos invocados: 
org.apache.commons.io.input.NullReader.doEndOfFile()
306 - Declaração do método: org.apache.commons.io.input.NullReader.processChar()
306 - Declaração do método: org.apache.commons.io.input.NullReader.processChars([C, I, I)
306 - Declaração do método: org.apache.commons.io.input.NullReader.doEndOfFile()
306 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.ProxyInputStream(java.io.InputStream)
306 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.read()
Métodos invocados: 
java.io.InputStream.read()
307 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.read([B)
Métodos invocados: 
java.io.InputStream.read([B)
308 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.read([B, I, I)
Métodos invocados: 
java.io.InputStream.read([B, I, I)
309 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.skip(J)
Métodos invocados: 
java.io.InputStream.skip(J)
310 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.available()
Métodos invocados: 
java.io.InputStream.available()
311 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.close()
Métodos invocados: 
java.io.InputStream.close()
312 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.mark(I)
Métodos invocados: 
java.io.InputStream.mark(I)
313 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.reset()
Métodos invocados: 
java.io.InputStream.reset()
314 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.markSupported()
Métodos invocados: 
java.io.InputStream.markSupported()
315 - Declaração do método: org.apache.commons.io.input.DemuxInputStream.bindStream(java.io.InputStream)
Métodos invocados: 
java.lang.ThreadLocal.get()
java.lang.ThreadLocal.set(java.io.InputStream)
316 - Declaração do método: org.apache.commons.io.input.DemuxInputStream.close()
Métodos invocados: 
java.lang.ThreadLocal.get()
java.io.InputStream.close()
317 - Declaração do método: org.apache.commons.io.input.DemuxInputStream.read()
Métodos invocados: 
java.lang.ThreadLocal.get()
java.io.InputStream.read()
318 - Declaração do método: org.apache.commons.io.input.CharSequenceReader.CharSequenceReader(java.lang.CharSequence)
318 - Declaração do método: org.apache.commons.io.input.CharSequenceReader.close()
318 - Declaração do método: org.apache.commons.io.input.CharSequenceReader.mark(I)
318 - Declaração do método: org.apache.commons.io.input.CharSequenceReader.markSupported()
318 - Declaração do método: org.apache.commons.io.input.CharSequenceReader.read()
Métodos invocados: 
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
319 - Declaração do método: org.apache.commons.io.input.CharSequenceReader.read([C, I, I)
Métodos invocados: 
java.lang.CharSequence.length()
org.apache.commons.io.input.CharSequenceReader.read()
320 - Declaração do método: org.apache.commons.io.input.CharSequenceReader.reset()
320 - Declaração do método: org.apache.commons.io.input.CharSequenceReader.skip(J)
Métodos invocados: 
java.lang.CharSequence.length()
java.lang.CharSequence.length()
java.lang.Math.min(J, J)
321 - Declaração do método: org.apache.commons.io.input.CharSequenceReader.toString()
Métodos invocados: 
java.lang.CharSequence.toString()
322 - Declaração do método: org.apache.commons.io.input.ProxyReader.ProxyReader(java.io.Reader)
322 - Declaração do método: org.apache.commons.io.input.ProxyReader.read()
Métodos invocados: 
java.io.Reader.read()
323 - Declaração do método: org.apache.commons.io.input.ProxyReader.read([C)
Métodos invocados: 
java.io.Reader.read([C)
324 - Declaração do método: org.apache.commons.io.input.ProxyReader.read([C, I, I)
Métodos invocados: 
java.io.Reader.read([C, I, I)
325 - Declaração do método: org.apache.commons.io.input.ProxyReader.read(java.nio.CharBuffer)
Métodos invocados: 
java.io.Reader.read(java.nio.CharBuffer)
326 - Declaração do método: org.apache.commons.io.input.ProxyReader.skip(J)
Métodos invocados: 
java.io.Reader.skip(J)
327 - Declaração do método: org.apache.commons.io.input.ProxyReader.ready()
Métodos invocados: 
java.io.Reader.ready()
328 - Declaração do método: org.apache.commons.io.input.ProxyReader.close()
Métodos invocados: 
java.io.Reader.close()
329 - Declaração do método: org.apache.commons.io.input.ProxyReader.mark(I)
Métodos invocados: 
java.io.Reader.mark(I)
330 - Declaração do método: org.apache.commons.io.input.ProxyReader.reset()
Métodos invocados: 
java.io.Reader.reset()
331 - Declaração do método: org.apache.commons.io.input.ProxyReader.markSupported()
Métodos invocados: 
java.io.Reader.markSupported()
332 - Declaração do método: org.apache.commons.io.input.TeeInputStream.TeeInputStream(java.io.InputStream, java.io.OutputStream)
332 - Declaração do método: org.apache.commons.io.input.TeeInputStream.TeeInputStream(java.io.InputStream, java.io.OutputStream, Z)
332 - Declaração do método: org.apache.commons.io.input.TeeInputStream.close()
Métodos invocados: 
java.io.OutputStream.close()
333 - Declaração do método: org.apache.commons.io.input.TeeInputStream.read()
Métodos invocados: 
java.io.OutputStream.write(I)
334 - Declaração do método: org.apache.commons.io.input.TeeInputStream.read([B, I, I)
Métodos invocados: 
java.io.OutputStream.write([B, I, I)
335 - Declaração do método: org.apache.commons.io.input.TeeInputStream.read([B)
Métodos invocados: 
java.io.OutputStream.write([B, I, I)
336 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.SwappedDataInputStream(java.io.InputStream)
336 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readBoolean()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readByte()
337 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readByte()
Métodos invocados: 
java.io.InputStream.read()
338 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readChar()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readShort()
339 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readDouble()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedDouble(java.io.InputStream)
340 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readFloat()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedFloat(java.io.InputStream)
341 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readFully([B)
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readFully([B, I, I)
342 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readFully([B, I, I)
Métodos invocados: 
org.apache.commons.io.input.ProxyInputStream.read([B, I, I)
343 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readInt()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedInteger(java.io.InputStream)
344 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readLine()
344 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readLong()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedLong(java.io.InputStream)
345 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readShort()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedShort(java.io.InputStream)
346 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readUnsignedByte()
Métodos invocados: 
java.io.InputStream.read()
347 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readUnsignedShort()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(java.io.InputStream)
348 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readUTF()
348 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.skipBytes(I)
Métodos invocados: 
java.io.InputStream.skip(J)
349 - Declaração do método: org.apache.commons.io.input.CloseShieldInputStream.CloseShieldInputStream(java.io.InputStream)
349 - Declaração do método: org.apache.commons.io.input.CloseShieldInputStream.close()
349 - Declaração do método: org.apache.commons.io.input.NullInputStream.NullInputStream(J)
349 - Declaração do método: org.apache.commons.io.input.NullInputStream.NullInputStream(J, Z, Z)
349 - Declaração do método: org.apache.commons.io.input.NullInputStream.getPosition()
349 - Declaração do método: org.apache.commons.io.input.NullInputStream.getSize()
349 - Declaração do método: org.apache.commons.io.input.NullInputStream.available()
349 - Declaração do método: org.apache.commons.io.input.NullInputStream.close()
349 - Declaração do método: org.apache.commons.io.input.NullInputStream.mark(I)
349 - Declaração do método: org.apache.commons.io.input.NullInputStream.markSupported()
349 - Declaração do método: org.apache.commons.io.input.NullInputStream.read()
Métodos invocados: 
org.apache.commons.io.input.NullInputStream.doEndOfFile()
org.apache.commons.io.input.NullInputStream.processByte()
350 - Declaração do método: org.apache.commons.io.input.NullInputStream.read([B)
Métodos invocados: 
org.apache.commons.io.input.NullInputStream.read([B, I, I)
351 - Declaração do método: org.apache.commons.io.input.NullInputStream.read([B, I, I)
Métodos invocados: 
org.apache.commons.io.input.NullInputStream.doEndOfFile()
org.apache.commons.io.input.NullInputStream.processBytes([B, I, I)
352 - Declaração do método: org.apache.commons.io.input.NullInputStream.reset()
352 - Declaração do método: org.apache.commons.io.input.NullInputStream.skip(J)
Métodos invocados: 
org.apache.commons.io.input.NullInputStream.doEndOfFile()
353 - Declaração do método: org.apache.commons.io.input.NullInputStream.processByte()
353 - Declaração do método: org.apache.commons.io.input.NullInputStream.processBytes([B, I, I)
353 - Declaração do método: org.apache.commons.io.input.NullInputStream.doEndOfFile()
353 - Declaração do método: org.apache.commons.io.monitor.FilesystemEntry.FilesystemEntry(java.io.File)
353 - Declaração do método: org.apache.commons.io.monitor.FilesystemEntry.FilesystemEntry(org.apache.commons.io.monitor.FilesystemEntry, java.io.File)
Métodos invocados: 
java.io.File.getName()
354 - Declaração do método: org.apache.commons.io.monitor.FilesystemEntry.refresh()
Métodos invocados: 
java.io.File.getName()
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.lastModified()
355 - Declaração do método: org.apache.commons.io.monitor.FilesystemEntry.newChildInstance(java.io.File)
355 - Declaração do método: org.apache.commons.io.monitor.FilesystemEntry.hasChanged()
Métodos invocados: 
java.io.File.lastModified()
356 - Declaração do método: org.apache.commons.io.monitor.FilesystemEntry.getParent()
356 - Declaração do método: org.apache.commons.io.monitor.FilesystemEntry.getLevel()
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemEntry.getLevel()
357 - Declaração do método: org.apache.commons.io.monitor.FilesystemEntry.getChildren()
357 - Declaração do método: org.apache.commons.io.monitor.FilesystemEntry.setChildren([Lorg.apache.commons.io.monitor.FilesystemEntry;)
357 - Declaração do método: org.apache.commons.io.monitor.FilesystemEntry.getFile()
357 - Declaração do método: org.apache.commons.io.monitor.FilesystemEntry.setFile(java.io.File)
357 - Declaração do método: org.apache.commons.io.monitor.FilesystemEntry.getName()
357 - Declaração do método: org.apache.commons.io.monitor.FilesystemEntry.setName(java.lang.String)
357 - Declaração do método: org.apache.commons.io.monitor.FilesystemEntry.getLastModified()
357 - Declaração do método: org.apache.commons.io.monitor.FilesystemEntry.setLastModified(J)
357 - Declaração do método: org.apache.commons.io.monitor.FilesystemEntry.isExists()
357 - Declaração do método: org.apache.commons.io.monitor.FilesystemEntry.setExists(Z)
357 - Declaração do método: org.apache.commons.io.monitor.FilesystemEntry.isDirectory()
357 - Declaração do método: org.apache.commons.io.monitor.FilesystemEntry.setDirectory(Z)
357 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver(java.lang.String)
357 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver(java.lang.String, java.io.FileFilter)
357 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver(java.lang.String, java.io.FileFilter, java.util.Comparator)
357 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver(java.io.File)
357 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver(java.io.File, java.io.FileFilter)
357 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver(java.io.File, java.io.FileFilter, java.util.Comparator)
357 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.FilesystemObserver(org.apache.commons.io.monitor.FilesystemEntry, java.io.FileFilter, java.util.Comparator)
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemEntry.getFile()
358 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.getRootEntry()
358 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.getDirectory()
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemEntry.getFile()
359 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.getFileFilter()
359 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.getComparator()
359 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.addListener(org.apache.commons.io.monitor.FilesystemListener)
Métodos invocados: 
java.util.List.add(org.apache.commons.io.monitor.FilesystemListener)
360 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.removeListener(org.apache.commons.io.monitor.FilesystemListener)
Métodos invocados: 
java.util.List.remove(java.lang.Object)
361 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.getListeners()
361 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.initialize()
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemEntry.refresh()
org.apache.commons.io.monitor.FilesystemEntry.getFile()
org.apache.commons.io.monitor.FilesystemObserver.listFiles(java.io.File)
org.apache.commons.io.monitor.FilesystemObserver.createFileEntry(org.apache.commons.io.monitor.FilesystemEntry, java.io.File)
org.apache.commons.io.monitor.FilesystemEntry.setChildren([Lorg.apache.commons.io.monitor.FilesystemEntry;)
362 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.destroy()
362 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.checkAndNotify()
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemListener.onStart(org.apache.commons.io.monitor.FilesystemObserver)
org.apache.commons.io.monitor.FilesystemEntry.getFile()
java.io.File.exists()
org.apache.commons.io.monitor.FilesystemEntry.getChildren()
org.apache.commons.io.monitor.FilesystemObserver.listFiles(java.io.File)
org.apache.commons.io.monitor.FilesystemObserver.checkAndNotify(org.apache.commons.io.monitor.FilesystemEntry, [Lorg.apache.commons.io.monitor.FilesystemEntry;, [Ljava.io.File;)
org.apache.commons.io.monitor.FilesystemEntry.isExists()
org.apache.commons.io.monitor.FilesystemEntry.getChildren()
org.apache.commons.io.monitor.FilesystemObserver.checkAndNotify(org.apache.commons.io.monitor.FilesystemEntry, [Lorg.apache.commons.io.monitor.FilesystemEntry;, [Ljava.io.File;)
org.apache.commons.io.monitor.FilesystemListener.onStop(org.apache.commons.io.monitor.FilesystemObserver)
363 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.checkAndNotify(org.apache.commons.io.monitor.FilesystemEntry, [Lorg.apache.commons.io.monitor.FilesystemEntry;, [Ljava.io.File;)
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemEntry.getFile()
java.util.Comparator.compare(java.io.File, java.io.File)
org.apache.commons.io.monitor.FilesystemObserver.createFileEntry(org.apache.commons.io.monitor.FilesystemEntry, java.io.File)
org.apache.commons.io.monitor.FilesystemObserver.doCreate(org.apache.commons.io.monitor.FilesystemEntry)
org.apache.commons.io.monitor.FilesystemEntry.getFile()
java.util.Comparator.compare(java.io.File, java.io.File)
org.apache.commons.io.monitor.FilesystemObserver.doMatch(org.apache.commons.io.monitor.FilesystemEntry, java.io.File)
org.apache.commons.io.monitor.FilesystemEntry.getChildren()
org.apache.commons.io.monitor.FilesystemObserver.listFiles(java.io.File)
org.apache.commons.io.monitor.FilesystemObserver.checkAndNotify(org.apache.commons.io.monitor.FilesystemEntry, [Lorg.apache.commons.io.monitor.FilesystemEntry;, [Ljava.io.File;)
org.apache.commons.io.monitor.FilesystemEntry.getChildren()
org.apache.commons.io.monitor.FilesystemObserver.checkAndNotify(org.apache.commons.io.monitor.FilesystemEntry, [Lorg.apache.commons.io.monitor.FilesystemEntry;, [Ljava.io.File;)
org.apache.commons.io.monitor.FilesystemObserver.doDelete(org.apache.commons.io.monitor.FilesystemEntry)
org.apache.commons.io.monitor.FilesystemObserver.createFileEntry(org.apache.commons.io.monitor.FilesystemEntry, java.io.File)
org.apache.commons.io.monitor.FilesystemObserver.doCreate(org.apache.commons.io.monitor.FilesystemEntry)
org.apache.commons.io.monitor.FilesystemEntry.setChildren([Lorg.apache.commons.io.monitor.FilesystemEntry;)
364 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.createFileEntry(org.apache.commons.io.monitor.FilesystemEntry, java.io.File)
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemEntry.newChildInstance(java.io.File)
org.apache.commons.io.monitor.FilesystemEntry.refresh()
org.apache.commons.io.monitor.FilesystemObserver.listFiles(java.io.File)
org.apache.commons.io.monitor.FilesystemObserver.createFileEntry(org.apache.commons.io.monitor.FilesystemEntry, java.io.File)
org.apache.commons.io.monitor.FilesystemEntry.setChildren([Lorg.apache.commons.io.monitor.FilesystemEntry;)
365 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.doCreate(org.apache.commons.io.monitor.FilesystemEntry)
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemEntry.isDirectory()
org.apache.commons.io.monitor.FilesystemEntry.getFile()
org.apache.commons.io.monitor.FilesystemListener.onDirectoryCreate(java.io.File)
org.apache.commons.io.monitor.FilesystemEntry.getFile()
org.apache.commons.io.monitor.FilesystemListener.onFileCreate(java.io.File)
org.apache.commons.io.monitor.FilesystemEntry.getChildren()
org.apache.commons.io.monitor.FilesystemObserver.doCreate(org.apache.commons.io.monitor.FilesystemEntry)
366 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.doMatch(org.apache.commons.io.monitor.FilesystemEntry, java.io.File)
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemEntry.hasChanged()
org.apache.commons.io.monitor.FilesystemEntry.isDirectory()
org.apache.commons.io.monitor.FilesystemEntry.getFile()
org.apache.commons.io.monitor.FilesystemListener.onDirectoryChange(java.io.File)
org.apache.commons.io.monitor.FilesystemEntry.getFile()
org.apache.commons.io.monitor.FilesystemListener.onFileChange(java.io.File)
org.apache.commons.io.monitor.FilesystemEntry.refresh()
org.apache.commons.io.monitor.FilesystemEntry.setFile(java.io.File)
367 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.doDelete(org.apache.commons.io.monitor.FilesystemEntry)
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemEntry.isDirectory()
org.apache.commons.io.monitor.FilesystemEntry.getFile()
org.apache.commons.io.monitor.FilesystemListener.onDirectoryDelete(java.io.File)
org.apache.commons.io.monitor.FilesystemEntry.getFile()
org.apache.commons.io.monitor.FilesystemListener.onFileDelete(java.io.File)
368 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.listFiles(java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
java.io.File.listFiles()
java.io.File.listFiles(java.io.FileFilter)
java.util.Arrays.sort([Ljava.io.File;, java.util.Comparator)
369 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserver.toString()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getSimpleName()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.io.monitor.FilesystemObserver.getDirectory()
java.io.File.getPath()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.Object.toString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.util.List.size()
java.lang.StringBuilder.append(I)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
370 - Declaração do método: org.apache.commons.io.monitor.FilesystemListenerAdaptor.onStart(org.apache.commons.io.monitor.FilesystemObserver)
370 - Declaração do método: org.apache.commons.io.monitor.FilesystemListenerAdaptor.onDirectoryCreate(java.io.File)
370 - Declaração do método: org.apache.commons.io.monitor.FilesystemListenerAdaptor.onDirectoryChange(java.io.File)
370 - Declaração do método: org.apache.commons.io.monitor.FilesystemListenerAdaptor.onDirectoryDelete(java.io.File)
370 - Declaração do método: org.apache.commons.io.monitor.FilesystemListenerAdaptor.onFileCreate(java.io.File)
370 - Declaração do método: org.apache.commons.io.monitor.FilesystemListenerAdaptor.onFileChange(java.io.File)
370 - Declaração do método: org.apache.commons.io.monitor.FilesystemListenerAdaptor.onFileDelete(java.io.File)
370 - Declaração do método: org.apache.commons.io.monitor.FilesystemListenerAdaptor.onStop(org.apache.commons.io.monitor.FilesystemObserver)
370 - Declaração do método: org.apache.commons.io.monitor.FilesystemListener.onStart(org.apache.commons.io.monitor.FilesystemObserver)
370 - Declaração do método: org.apache.commons.io.monitor.FilesystemListener.onDirectoryCreate(java.io.File)
370 - Declaração do método: org.apache.commons.io.monitor.FilesystemListener.onDirectoryChange(java.io.File)
370 - Declaração do método: org.apache.commons.io.monitor.FilesystemListener.onDirectoryDelete(java.io.File)
370 - Declaração do método: org.apache.commons.io.monitor.FilesystemListener.onFileCreate(java.io.File)
370 - Declaração do método: org.apache.commons.io.monitor.FilesystemListener.onFileChange(java.io.File)
370 - Declaração do método: org.apache.commons.io.monitor.FilesystemListener.onFileDelete(java.io.File)
370 - Declaração do método: org.apache.commons.io.monitor.FilesystemListener.onStop(org.apache.commons.io.monitor.FilesystemObserver)
370 - Declaração do método: org.apache.commons.io.monitor.FilesystemMonitor.FilesystemMonitor()
370 - Declaração do método: org.apache.commons.io.monitor.FilesystemMonitor.FilesystemMonitor(J)
370 - Declaração do método: org.apache.commons.io.monitor.FilesystemMonitor.FilesystemMonitor(J, [Lorg.apache.commons.io.monitor.FilesystemObserver;)
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemMonitor.addObserver(org.apache.commons.io.monitor.FilesystemObserver)
371 - Declaração do método: org.apache.commons.io.monitor.FilesystemMonitor.addObserver(org.apache.commons.io.monitor.FilesystemObserver)
Métodos invocados: 
java.util.List.add(org.apache.commons.io.monitor.FilesystemObserver)
372 - Declaração do método: org.apache.commons.io.monitor.FilesystemMonitor.removeObserver(org.apache.commons.io.monitor.FilesystemObserver)
Métodos invocados: 
java.util.List.remove(java.lang.Object)
373 - Declaração do método: org.apache.commons.io.monitor.FilesystemMonitor.getObservers()
373 - Declaração do método: org.apache.commons.io.monitor.FilesystemMonitor.start()
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemObserver.initialize()
java.lang.Thread.start()
374 - Declaração do método: org.apache.commons.io.monitor.FilesystemMonitor.stop()
Métodos invocados: 
java.lang.Thread.join(J)
org.apache.commons.io.monitor.FilesystemObserver.destroy()
375 - Declaração do método: org.apache.commons.io.monitor.FilesystemMonitor.run()
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemObserver.checkAndNotify()
java.lang.Thread.sleep(J)
376 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter()
376 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(I)
376 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(java.lang.StringBuilder)
376 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.append(C)
Métodos invocados: 
java.lang.StringBuilder.append(C)
377 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.append(java.lang.CharSequence)
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.CharSequence)
378 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.append(java.lang.CharSequence, I, I)
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.CharSequence, I, I)
379 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.close()
379 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.flush()
379 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.write(java.lang.String)
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
380 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.write([C, I, I)
Métodos invocados: 
java.lang.StringBuilder.append([C, I, I)
381 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.getBuilder()
381 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.toString()
Métodos invocados: 
java.lang.StringBuilder.toString()
382 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.lang.String, java.lang.String)
382 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.lang.String, java.lang.String, Z)
382 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.lang.String, java.nio.charset.Charset)
382 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.lang.String, java.nio.charset.Charset, Z)
382 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.lang.String, java.nio.charset.CharsetEncoder)
382 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.lang.String, java.nio.charset.CharsetEncoder, Z)
382 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.io.File, java.lang.String)
382 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.io.File, java.lang.String, Z)
Métodos invocados: 
org.apache.commons.io.output.FileWriterWithEncoding.initWriter(java.io.File, java.lang.Object, Z)
383 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.io.File, java.nio.charset.Charset)
383 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.io.File, java.nio.charset.Charset, Z)
Métodos invocados: 
org.apache.commons.io.output.FileWriterWithEncoding.initWriter(java.io.File, java.lang.Object, Z)
384 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.io.File, java.nio.charset.CharsetEncoder)
384 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.io.File, java.nio.charset.CharsetEncoder, Z)
Métodos invocados: 
org.apache.commons.io.output.FileWriterWithEncoding.initWriter(java.io.File, java.lang.Object, Z)
385 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.initWriter(java.io.File, java.lang.Object, Z)
Métodos invocados: 
java.io.File.exists()
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
386 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.write(I)
Métodos invocados: 
java.io.Writer.write(I)
387 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.write([C)
Métodos invocados: 
java.io.Writer.write([C)
388 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.write([C, I, I)
Métodos invocados: 
java.io.Writer.write([C, I, I)
389 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.write(java.lang.String)
Métodos invocados: 
java.io.Writer.write(java.lang.String)
390 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.write(java.lang.String, I, I)
Métodos invocados: 
java.io.Writer.write(java.lang.String, I, I)
391 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.flush()
Métodos invocados: 
java.io.Writer.flush()
392 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.close()
Métodos invocados: 
java.io.Writer.close()
393 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream()
393 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(I)
Métodos invocados: 
org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(I)
394 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(I)
Métodos invocados: 
java.util.List.size()
java.util.List.get(I)
java.lang.Math.max(I, I)
java.util.List.add([B)
395 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.write([B, I, I)
Métodos invocados: 
java.lang.Math.min(I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(I)
396 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.write(I)
Métodos invocados: 
org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(I)
397 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.write(java.io.InputStream)
Métodos invocados: 
java.io.InputStream.read([B, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(I)
java.io.InputStream.read([B, I, I)
398 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.size()
398 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.close()
398 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.reset()
Métodos invocados: 
java.util.List.get(I)
399 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.writeTo(java.io.OutputStream)
Métodos invocados: 
java.util.List.size()
java.util.List.get(I)
java.lang.Math.min(I, I)
java.io.OutputStream.write([B, I, I)
400 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
Métodos invocados: 
java.util.List.size()
java.util.List.get(I)
java.lang.Math.min(I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
401 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.toString()
Métodos invocados: 
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
402 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.toString(java.lang.String)
Métodos invocados: 
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
403 - Declaração do método: org.apache.commons.io.output.CloseShieldOutputStream.CloseShieldOutputStream(java.io.OutputStream)
403 - Declaração do método: org.apache.commons.io.output.CloseShieldOutputStream.close()
403 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(java.lang.String)
403 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(java.lang.String, Z)
403 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(java.lang.String, Z, java.lang.String)
403 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(java.io.File)
403 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(java.io.File, Z)
403 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(java.io.File, Z, java.lang.String)
403 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(java.io.File, java.lang.String)
403 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(java.io.File, java.lang.String, Z, java.lang.String)
Métodos invocados: 
java.io.File.getAbsoluteFile()
java.io.File.getParentFile()
java.io.File.getParentFile()
org.apache.commons.io.FileUtils.forceMkdir(java.io.File)
java.io.File.isDirectory()
java.lang.System.getProperty(java.lang.String)
org.apache.commons.io.FileUtils.forceMkdir(java.io.File)
org.apache.commons.io.output.LockableFileWriter.testLockDir(java.io.File)
java.io.File.getName()
org.apache.commons.io.output.LockableFileWriter.createLock()
org.apache.commons.io.output.LockableFileWriter.initWriter(java.io.File, java.lang.String, Z)
404 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.testLockDir(java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.getAbsolutePath()
java.io.File.canWrite()
java.io.File.getAbsolutePath()
405 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.createLock()
Métodos invocados: 
java.io.File.createNewFile()
java.io.File.getAbsolutePath()
java.io.File.deleteOnExit()
406 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.initWriter(java.io.File, java.lang.String, Z)
Métodos invocados: 
java.io.File.exists()
java.io.File.getAbsolutePath()
java.io.File.getAbsolutePath()
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
java.io.File.delete()
java.io.File.delete()
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
java.io.File.delete()
java.io.File.delete()
407 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.close()
Métodos invocados: 
java.io.Writer.close()
java.io.File.delete()
408 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.write(I)
Métodos invocados: 
java.io.Writer.write(I)
409 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.write([C)
Métodos invocados: 
java.io.Writer.write([C)
410 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.write([C, I, I)
Métodos invocados: 
java.io.Writer.write([C, I, I)
411 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.write(java.lang.String)
Métodos invocados: 
java.io.Writer.write(java.lang.String)
412 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.write(java.lang.String, I, I)
Métodos invocados: 
java.io.Writer.write(java.lang.String, I, I)
413 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.flush()
Métodos invocados: 
java.io.Writer.flush()
414 - Declaração do método: org.apache.commons.io.output.NullOutputStream.write([B, I, I)
414 - Declaração do método: org.apache.commons.io.output.NullOutputStream.write(I)
414 - Declaração do método: org.apache.commons.io.output.NullOutputStream.write([B)
414 - Declaração do método: org.apache.commons.io.output.DemuxOutputStream.bindStream(java.io.OutputStream)
Métodos invocados: 
java.lang.ThreadLocal.get()
java.lang.ThreadLocal.set(java.io.OutputStream)
415 - Declaração do método: org.apache.commons.io.output.DemuxOutputStream.close()
Métodos invocados: 
java.lang.ThreadLocal.get()
java.io.OutputStream.close()
416 - Declaração do método: org.apache.commons.io.output.DemuxOutputStream.flush()
Métodos invocados: 
java.lang.ThreadLocal.get()
java.io.OutputStream.flush()
417 - Declaração do método: org.apache.commons.io.output.DemuxOutputStream.write(I)
Métodos invocados: 
java.lang.ThreadLocal.get()
java.io.OutputStream.write(I)
418 - Declaração do método: org.apache.commons.io.output.ProxyOutputStream.ProxyOutputStream(java.io.OutputStream)
418 - Declaração do método: org.apache.commons.io.output.ProxyOutputStream.write(I)
Métodos invocados: 
java.io.OutputStream.write(I)
419 - Declaração do método: org.apache.commons.io.output.ProxyOutputStream.write([B)
Métodos invocados: 
java.io.OutputStream.write([B)
420 - Declaração do método: org.apache.commons.io.output.ProxyOutputStream.write([B, I, I)
Métodos invocados: 
java.io.OutputStream.write([B, I, I)
421 - Declaração do método: org.apache.commons.io.output.ProxyOutputStream.flush()
Métodos invocados: 
java.io.OutputStream.flush()
422 - Declaração do método: org.apache.commons.io.output.ProxyOutputStream.close()
Métodos invocados: 
java.io.OutputStream.close()
423 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(I, java.io.File)
423 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(I, java.lang.String, java.lang.String, java.io.File)
423 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStream.getStream()
423 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached()
Métodos invocados: 
java.io.File.createTempFile(java.lang.String, java.lang.String, java.io.File)
org.apache.commons.io.output.ByteArrayOutputStream.writeTo(java.io.OutputStream)
424 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
Métodos invocados: 
org.apache.commons.io.output.ThresholdingOutputStream.isThresholdExceeded()
425 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStream.getData()
Métodos invocados: 
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
426 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStream.getFile()
426 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStream.close()
426 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStream.writeTo(java.io.OutputStream)
Métodos invocados: 
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
org.apache.commons.io.output.ByteArrayOutputStream.writeTo(java.io.OutputStream)
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
427 - Declaração do método: org.apache.commons.io.output.NullWriter.NullWriter()
427 - Declaração do método: org.apache.commons.io.output.NullWriter.append(C)
427 - Declaração do método: org.apache.commons.io.output.NullWriter.append(java.lang.CharSequence, I, I)
427 - Declaração do método: org.apache.commons.io.output.NullWriter.append(java.lang.CharSequence)
427 - Declaração do método: org.apache.commons.io.output.NullWriter.write(I)
427 - Declaração do método: org.apache.commons.io.output.NullWriter.write([C)
427 - Declaração do método: org.apache.commons.io.output.NullWriter.write([C, I, I)
427 - Declaração do método: org.apache.commons.io.output.NullWriter.write(java.lang.String)
427 - Declaração do método: org.apache.commons.io.output.NullWriter.write(java.lang.String, I, I)
427 - Declaração do método: org.apache.commons.io.output.NullWriter.flush()
427 - Declaração do método: org.apache.commons.io.output.NullWriter.close()
427 - Declaração do método: org.apache.commons.io.output.ClosedOutputStream.write(I)
427 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.ThresholdingOutputStream(I)
427 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.write(I)
Métodos invocados: 
org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(I)
org.apache.commons.io.output.ThresholdingOutputStream.getStream()
java.io.OutputStream.write(I)
428 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.write([B)
Métodos invocados: 
org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(I)
org.apache.commons.io.output.ThresholdingOutputStream.getStream()
java.io.OutputStream.write([B)
429 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
Métodos invocados: 
org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(I)
org.apache.commons.io.output.ThresholdingOutputStream.getStream()
java.io.OutputStream.write([B, I, I)
430 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.flush()
Métodos invocados: 
org.apache.commons.io.output.ThresholdingOutputStream.getStream()
java.io.OutputStream.flush()
431 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.close()
Métodos invocados: 
org.apache.commons.io.output.ThresholdingOutputStream.flush()
org.apache.commons.io.output.ThresholdingOutputStream.getStream()
java.io.OutputStream.close()
432 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.getThreshold()
432 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.getByteCount()
432 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.isThresholdExceeded()
432 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(I)
Métodos invocados: 
org.apache.commons.io.output.ThresholdingOutputStream.thresholdReached()
433 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.resetByteCount()
433 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.getStream()
433 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.thresholdReached()
433 - Declaração do método: org.apache.commons.io.output.CountingOutputStream.CountingOutputStream(java.io.OutputStream)
433 - Declaração do método: org.apache.commons.io.output.CountingOutputStream.write([B)
433 - Declaração do método: org.apache.commons.io.output.CountingOutputStream.write([B, I, I)
433 - Declaração do método: org.apache.commons.io.output.CountingOutputStream.write(I)
433 - Declaração do método: org.apache.commons.io.output.CountingOutputStream.getCount()
Métodos invocados: 
org.apache.commons.io.output.CountingOutputStream.getByteCount()
434 - Declaração do método: org.apache.commons.io.output.CountingOutputStream.resetCount()
Métodos invocados: 
org.apache.commons.io.output.CountingOutputStream.resetByteCount()
435 - Declaração do método: org.apache.commons.io.output.CountingOutputStream.getByteCount()
435 - Declaração do método: org.apache.commons.io.output.CountingOutputStream.resetByteCount()
435 - Declaração do método: org.apache.commons.io.output.TeeOutputStream.TeeOutputStream(java.io.OutputStream, java.io.OutputStream)
435 - Declaração do método: org.apache.commons.io.output.TeeOutputStream.write([B)
Métodos invocados: 
java.io.OutputStream.write([B)
436 - Declaração do método: org.apache.commons.io.output.TeeOutputStream.write([B, I, I)
Métodos invocados: 
java.io.OutputStream.write([B, I, I)
437 - Declaração do método: org.apache.commons.io.output.TeeOutputStream.write(I)
Métodos invocados: 
java.io.OutputStream.write(I)
438 - Declaração do método: org.apache.commons.io.output.TeeOutputStream.flush()
Métodos invocados: 
java.io.OutputStream.flush()
439 - Declaração do método: org.apache.commons.io.output.TeeOutputStream.close()
Métodos invocados: 
java.io.OutputStream.close()
440 - Declaração do método: org.apache.commons.io.output.ProxyWriter.ProxyWriter(java.io.Writer)
440 - Declaração do método: org.apache.commons.io.output.ProxyWriter.append(C)
Métodos invocados: 
java.io.Writer.append(C)
441 - Declaração do método: org.apache.commons.io.output.ProxyWriter.append(java.lang.CharSequence, I, I)
Métodos invocados: 
java.io.Writer.append(java.lang.CharSequence, I, I)
442 - Declaração do método: org.apache.commons.io.output.ProxyWriter.append(java.lang.CharSequence)
Métodos invocados: 
java.io.Writer.append(java.lang.CharSequence)
443 - Declaração do método: org.apache.commons.io.output.ProxyWriter.write(I)
Métodos invocados: 
java.io.Writer.write(I)
444 - Declaração do método: org.apache.commons.io.output.ProxyWriter.write([C)
Métodos invocados: 
java.io.Writer.write([C)
445 - Declaração do método: org.apache.commons.io.output.ProxyWriter.write([C, I, I)
Métodos invocados: 
java.io.Writer.write([C, I, I)
446 - Declaração do método: org.apache.commons.io.output.ProxyWriter.write(java.lang.String)
Métodos invocados: 
java.io.Writer.write(java.lang.String)
447 - Declaração do método: org.apache.commons.io.output.ProxyWriter.write(java.lang.String, I, I)
Métodos invocados: 
java.io.Writer.write(java.lang.String, I, I)
448 - Declaração do método: org.apache.commons.io.output.ProxyWriter.flush()
Métodos invocados: 
java.io.Writer.flush()
449 - Declaração do método: org.apache.commons.io.output.ProxyWriter.close()
Métodos invocados: 
java.io.Writer.close()
450 - Declaração do método: org.apache.commons.io.FileCleanerTestCase.newInstance()
Métodos invocados: 
org.apache.commons.io.FileCleaner.getInstance()
451 - Declaração do método: org.apache.commons.io.FileCleanerTestCase.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.FileCleanerTestCase.suite()
junit.textui.TestRunner.run(junit.framework.Test)
452 - Declaração do método: org.apache.commons.io.FileCleanerTestCase.suite()
452 - Declaração do método: org.apache.commons.io.FileCleanerTestCase.FileCleanerTestCase(java.lang.String)
452 - Declaração do método: org.apache.commons.io.FileDeleteStrategyTestCase.suite()
452 - Declaração do método: org.apache.commons.io.FileDeleteStrategyTestCase.FileDeleteStrategyTestCase(java.lang.String)
452 - Declaração do método: org.apache.commons.io.FileDeleteStrategyTestCase.setUp()
452 - Declaração do método: org.apache.commons.io.FileDeleteStrategyTestCase.tearDown()
452 - Declaração do método: org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)
junit.framework.Assert.fail()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
453 - Declaração do método: org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
454 - Declaração do método: org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
455 - Declaração do método: org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNull()
Métodos invocados: 
org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
456 - Declaração do método: org.apache.commons.io.FileDeleteStrategyTestCase.testToString()
Métodos invocados: 
org.apache.commons.io.FileDeleteStrategy.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileDeleteStrategy.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
457 - Declaração do método: org.apache.commons.io.FileUtilsListFilesTestCase.FileUtilsListFilesTestCase(java.lang.String)
457 - Declaração do método: org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
458 - Declaração do método: org.apache.commons.io.FileUtilsListFilesTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
java.io.File.exists()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.touch(java.io.File)
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.touch(java.io.File)
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.touch(java.io.File)
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.getParentFile()
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.touch(java.io.File)
org.apache.commons.io.FileUtils.touch(java.io.File)
459 - Declaração do método: org.apache.commons.io.FileUtilsListFilesTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
460 - Declaração do método: org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Collection)
Métodos invocados: 
java.util.Collection.size()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.io.File.getName()
java.util.Collection.add(java.lang.Object)
461 - Declaração do método: org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension()
Métodos invocados: 
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.listFiles(java.io.File, [Ljava.lang.String;, Z)
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Collection)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.listFiles(java.io.File, [Ljava.lang.String;, Z)
org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Collection)
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.listFiles(java.io.File, [Ljava.lang.String;, Z)
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Collection)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
462 - Declaração do método: org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.listFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Collection)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.listFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Collection)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()
org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.listFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Collection)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()
org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.listFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Collection)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.listFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
junit.framework.Assert.fail(java.lang.String)
463 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.LineIteratorTestCase.suite()
junit.textui.TestRunner.run(junit.framework.Test)
464 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.suite()
464 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.LineIteratorTestCase(java.lang.String)
464 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.io.File.mkdirs()
465 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
466 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testConstructor()
Métodos invocados: 
junit.framework.Assert.fail()
467 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testZeroLines()
Métodos invocados: 
org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(I)
468 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testOneLines()
Métodos invocados: 
org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(I)
469 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testTwoLines()
Métodos invocados: 
org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(I)
470 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testThreeLines()
Métodos invocados: 
org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(I)
471 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testMissingFile()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)
472 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testValidEncoding()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.LineIteratorTestCase.createFile(java.io.File, java.lang.String, I)
org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)
org.apache.commons.io.LineIterator.hasNext()
org.apache.commons.io.LineIterator.next()
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)
473 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.LineIteratorTestCase.createFile(java.io.File, java.lang.String, I)
org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)
474 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testNextOnly()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.LineIteratorTestCase.createFile(java.io.File, java.lang.String, I)
org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)
java.util.List.size()
org.apache.commons.io.LineIterator.next()
java.util.List.get(I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
org.apache.commons.io.LineIterator.hasNext()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)
475 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testNextLineOnly()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.LineIteratorTestCase.createFile(java.io.File, java.lang.String, I)
org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)
java.util.List.size()
org.apache.commons.io.LineIterator.nextLine()
java.util.List.get(I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
org.apache.commons.io.LineIterator.hasNext()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)
476 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testCloseEarly()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.LineIteratorTestCase.createFile(java.io.File, java.lang.String, I)
org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)
org.apache.commons.io.LineIterator.next()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.LineIterator.hasNext()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.LineIterator.close()
org.apache.commons.io.LineIterator.hasNext()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.LineIterator.next()
junit.framework.Assert.fail()
org.apache.commons.io.LineIterator.nextLine()
junit.framework.Assert.fail()
org.apache.commons.io.LineIterator.close()
org.apache.commons.io.LineIterator.next()
junit.framework.Assert.fail()
org.apache.commons.io.LineIterator.nextLine()
junit.framework.Assert.fail()
org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)
477 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(I)
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.LineIteratorTestCase.createFile(java.io.File, java.lang.String, I)
org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)
org.apache.commons.io.LineIterator.remove()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.LineIterator.hasNext()
org.apache.commons.io.LineIterator.next()
java.util.List.get(I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
java.util.List.size()
java.util.List.size()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.LineIterator.next()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.LineIterator.nextLine()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)
478 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.createFile(java.io.File, java.lang.String, I)
Métodos invocados: 
java.util.List.add(java.lang.Object)
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection)
479 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testFiltering()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.LineIteratorTestCase.createFile(java.io.File, java.lang.String, I)
java.lang.String.length()
java.lang.String.charAt(I)
org.apache.commons.io.LineIterator.remove()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.LineIterator.hasNext()
org.apache.commons.io.LineIterator.next()
java.util.List.get(I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
java.util.List.size()
java.util.List.size()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.LineIterator.next()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.LineIterator.nextLine()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)
480 - Declaração do método: org.apache.commons.io.LineIteratorTestCase$1.isValidLine(java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.charAt(I)
481 - Declaração do método: org.apache.commons.io.CopyUtilsTest.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.CopyUtilsTest.suite()
junit.textui.TestRunner.run(junit.framework.Test)
482 - Declaração do método: org.apache.commons.io.CopyUtilsTest.suite()
482 - Declaração do método: org.apache.commons.io.CopyUtilsTest.CopyUtilsTest(java.lang.String)
482 - Declaração do método: org.apache.commons.io.CopyUtilsTest.setUp()
482 - Declaração do método: org.apache.commons.io.CopyUtilsTest.tearDown()
482 - Declaração do método: org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream()
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy([B, java.io.OutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
483 - Declaração do método: org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter()
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy([B, java.io.Writer)
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
484 - Declaração do método: org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream()
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.InputStream, java.io.OutputStream)
java.io.InputStream.available()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
485 - Declaração do método: org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter()
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.InputStream, java.io.Writer)
java.io.Writer.flush()
java.io.InputStream.available()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
486 - Declaração do método: org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream()
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.Reader, java.io.OutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
487 - Declaração do método: org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter()
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.Reader, java.io.Writer)
java.io.Writer.flush()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
488 - Declaração do método: org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream()
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.lang.String, java.io.OutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
489 - Declaração do método: org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter()
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.lang.String, java.io.Writer)
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
490 - Declaração do método: org.apache.commons.io.FilenameUtilsWildcardTestCase.FilenameUtilsWildcardTestCase(java.lang.String)
490 - Declaração do método: org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
491 - Declaração do método: org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
492 - Declaração do método: org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchCaseSpecified()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
493 - Declaração do método: org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
494 - Declaração do método: org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
Métodos invocados: 
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
495 - Declaração do método: org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
496 - Declaração do método: org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch2()
Métodos invocados: 
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
497 - Declaração do método: org.apache.commons.io.FilenameUtilsWildcardTestCase.testLocaleIndependence()
Métodos invocados: 
java.util.Locale.getDefault()
java.util.Locale.getAvailableLocales()
java.util.Locale.setDefault(java.util.Locale)
java.lang.String.equalsIgnoreCase(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
java.util.Locale.getDefault()
java.util.Locale.toString()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Locale.setDefault(java.util.Locale)
498 - Declaração do método: org.apache.commons.io.EndianUtilsTest.EndianUtilsTest(java.lang.String)
498 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testSwapShort()
Métodos invocados: 
org.apache.commons.io.EndianUtils.swapShort(S)
junit.framework.Assert.assertEquals(S, S)
org.apache.commons.io.EndianUtils.swapShort(S)
junit.framework.Assert.assertEquals(S, S)
org.apache.commons.io.EndianUtils.swapShort(S)
junit.framework.Assert.assertEquals(S, S)
org.apache.commons.io.EndianUtils.swapShort(S)
junit.framework.Assert.assertEquals(S, S)
499 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testSwapInteger()
Métodos invocados: 
org.apache.commons.io.EndianUtils.swapInteger(I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.swapInteger(I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.swapInteger(I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.swapInteger(I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.swapInteger(I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.swapInteger(I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.swapInteger(I)
junit.framework.Assert.assertEquals(I, I)
500 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testSwapLong()
Métodos invocados: 
org.apache.commons.io.EndianUtils.swapLong(J)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.EndianUtils.swapLong(J)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.EndianUtils.swapLong(J)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.EndianUtils.swapLong(J)
junit.framework.Assert.assertEquals(J, J)
501 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testSwapFloat()
Métodos invocados: 
org.apache.commons.io.EndianUtils.swapFloat(F)
junit.framework.Assert.assertEquals(D, D, D)
java.lang.Float.intBitsToFloat(I)
java.lang.Float.intBitsToFloat(I)
org.apache.commons.io.EndianUtils.swapFloat(F)
junit.framework.Assert.assertEquals(D, D, D)
502 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testSwapDouble()
Métodos invocados: 
org.apache.commons.io.EndianUtils.swapDouble(D)
junit.framework.Assert.assertEquals(D, D, D)
java.lang.Double.longBitsToDouble(J)
java.lang.Double.longBitsToDouble(J)
org.apache.commons.io.EndianUtils.swapDouble(D)
junit.framework.Assert.assertEquals(D, D, D)
503 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testSymmetry()
Métodos invocados: 
org.apache.commons.io.EndianUtils.swapShort(S)
org.apache.commons.io.EndianUtils.swapShort(S)
junit.framework.Assert.assertEquals(S, S)
org.apache.commons.io.EndianUtils.swapInteger(I)
org.apache.commons.io.EndianUtils.swapInteger(I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.swapLong(J)
org.apache.commons.io.EndianUtils.swapLong(J)
junit.framework.Assert.assertEquals(J, J)
java.lang.Float.intBitsToFloat(I)
org.apache.commons.io.EndianUtils.swapFloat(F)
org.apache.commons.io.EndianUtils.swapFloat(F)
junit.framework.Assert.assertEquals(D, D, D)
java.lang.Double.longBitsToDouble(J)
org.apache.commons.io.EndianUtils.swapDouble(D)
org.apache.commons.io.EndianUtils.swapDouble(D)
junit.framework.Assert.assertEquals(D, D, D)
504 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testReadSwappedShort()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedShort([B, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.readSwappedShort(java.io.InputStream)
junit.framework.Assert.assertEquals(I, I)
505 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort()
Métodos invocados: 
org.apache.commons.io.EndianUtils.writeSwappedShort([B, I, S)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.writeSwappedShort(java.io.OutputStream, S)
java.io.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
506 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedUnsignedShort([B, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(java.io.InputStream)
junit.framework.Assert.assertEquals(I, I)
507 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testReadSwappedInteger()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedInteger([B, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.readSwappedInteger(java.io.InputStream)
junit.framework.Assert.assertEquals(I, I)
508 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger()
Métodos invocados: 
org.apache.commons.io.EndianUtils.writeSwappedInteger([B, I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.writeSwappedInteger(java.io.OutputStream, I)
java.io.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
509 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger([B, I)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(java.io.InputStream)
junit.framework.Assert.assertEquals(J, J)
510 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testReadSwappedLong()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedLong([B, I)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.EndianUtils.readSwappedLong(java.io.InputStream)
junit.framework.Assert.assertEquals(J, J)
511 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong()
Métodos invocados: 
org.apache.commons.io.EndianUtils.writeSwappedLong([B, I, J)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.writeSwappedLong(java.io.OutputStream, J)
java.io.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
512 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat()
Métodos invocados: 
java.lang.Float.intBitsToFloat(I)
org.apache.commons.io.EndianUtils.readSwappedFloat([B, I)
junit.framework.Assert.assertEquals(D, D, D)
org.apache.commons.io.EndianUtils.readSwappedFloat(java.io.InputStream)
junit.framework.Assert.assertEquals(D, D, D)
513 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat()
Métodos invocados: 
java.lang.Float.intBitsToFloat(I)
org.apache.commons.io.EndianUtils.writeSwappedFloat([B, I, F)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.writeSwappedFloat(java.io.OutputStream, F)
java.io.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
514 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testReadSwappedDouble()
Métodos invocados: 
java.lang.Double.longBitsToDouble(J)
org.apache.commons.io.EndianUtils.readSwappedDouble([B, I)
junit.framework.Assert.assertEquals(D, D, D)
org.apache.commons.io.EndianUtils.readSwappedDouble(java.io.InputStream)
junit.framework.Assert.assertEquals(D, D, D)
515 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble()
Métodos invocados: 
java.lang.Double.longBitsToDouble(J)
org.apache.commons.io.EndianUtils.writeSwappedDouble([B, I, D)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.writeSwappedDouble(java.io.OutputStream, D)
java.io.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
516 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong()
Métodos invocados: 
java.lang.Double.doubleToLongBits(D)
org.apache.commons.io.EndianUtils.writeSwappedLong([B, I, J)
org.apache.commons.io.EndianUtils.readSwappedLong([B, I)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.EndianUtils.writeSwappedDouble([B, I, D)
org.apache.commons.io.EndianUtils.readSwappedDouble([B, I)
junit.framework.Assert.assertEquals(D, D, D)
517 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger([B, I)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(java.io.InputStream)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
518 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.newInstance()
518 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.FileCleaningTrackerTestCase.suite()
junit.textui.TestRunner.run(junit.framework.Test)
519 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.suite()
519 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.FileCleaningTrackerTestCase(java.lang.String)
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
520 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.FileCleaningTrackerTestCase.newInstance()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
521 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.util.Collection.clear()
522 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile()
Métodos invocados: 
java.io.File.getPath()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
java.io.RandomAccessFile.close()
org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
523 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.getParentFile()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
524 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.getParentFile()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
525 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.getParentFile()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
526 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull()
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object)
junit.framework.Assert.fail()
org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
junit.framework.Assert.fail()
org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object)
junit.framework.Assert.fail()
org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
junit.framework.Assert.fail()
527 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst()
Métodos invocados: 
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileCleaningTracker.exitWhenFinished()
junit.framework.Assert.assertEquals(Z, Z)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(Z, Z)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
528 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter()
Métodos invocados: 
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileCleaningTracker.exitWhenFinished()
junit.framework.Assert.assertEquals(Z, Z)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.io.File.getPath()
org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object)
junit.framework.Assert.fail()
junit.framework.Assert.assertEquals(Z, Z)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
529 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1()
Métodos invocados: 
java.io.File.getPath()
java.io.File.exists()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.lang.Thread.isAlive()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
org.apache.commons.io.FileCleaningTracker.exitWhenFinished()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.lang.Thread.isAlive()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.io.RandomAccessFile.close()
org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.File.exists()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.lang.Thread.isAlive()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
530 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2()
Métodos invocados: 
java.io.File.getPath()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(Z, Z)
java.lang.Thread.isAlive()
junit.framework.Assert.assertEquals(Z, Z)
java.io.RandomAccessFile.close()
org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
junit.framework.Assert.assertEquals(Z, Z)
java.lang.Thread.isAlive()
junit.framework.Assert.assertEquals(Z, Z)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileCleaningTracker.exitWhenFinished()
java.lang.Thread.isAlive()
java.lang.Thread.sleep(J)
junit.framework.Assert.assertEquals(Z, Z)
java.lang.Thread.isAlive()
junit.framework.Assert.assertEquals(Z, Z)
531 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.getTrackCount()
org.apache.commons.io.FileCleaningTracker.getTrackCount()
java.lang.System.currentTimeMillis()
java.lang.System.gc()
532 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.FileUtilsTestCase.suite()
junit.textui.TestRunner.run(junit.framework.Test)
533 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.suite()
533 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.FileUtilsTestCase(java.lang.String)
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.length()
java.io.File.length()
534 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
535 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
536 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.test_openInputStream_exists()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File, [Ljava.lang.String;)
org.apache.commons.io.FileUtils.openInputStream(java.io.File)
java.io.FileInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
537 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.test_openInputStream_existsButIsDirectory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.openInputStream(java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
538 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.test_openInputStream_notExists()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.openInputStream(java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
539 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(Z)
Métodos invocados: 
java.io.File.getParentFile()
junit.framework.Assert.assertNull(java.lang.Object)
org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File, [Ljava.lang.String;)
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
java.io.FileOutputStream.write(I)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.delete()
java.io.File.deleteOnExit()
540 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentCreateFile()
Métodos invocados: 
org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(Z)
541 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentNoFile()
Métodos invocados: 
org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(Z)
542 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File, [Ljava.lang.String;)
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
java.io.FileOutputStream.write(I)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
543 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_existsButIsDirectory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
544 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExists()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
java.io.FileOutputStream.write(I)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
545 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExistsCannotCreate()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
546 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize()
Métodos invocados: 
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
547 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToFile1()
Métodos invocados: 
org.apache.commons.io.FileUtils.toFile(java.net.URL)
java.io.File.toString()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
548 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToFile2()
Métodos invocados: 
org.apache.commons.io.FileUtils.toFile(java.net.URL)
java.io.File.toString()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
549 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToFile3()
Métodos invocados: 
org.apache.commons.io.FileUtils.toFile(java.net.URL)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.apache.commons.io.FileUtils.toFile(java.net.URL)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
550 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToFile4()
Métodos invocados: 
org.apache.commons.io.FileUtils.toFile(java.net.URL)
junit.framework.Assert.fail()
551 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToFiles1()
Métodos invocados: 
org.apache.commons.io.FileUtils.toFiles([Ljava.net.URL;)
junit.framework.Assert.assertEquals(I, I)
java.io.File.toString()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.io.File.toString()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
552 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToFiles2()
Métodos invocados: 
org.apache.commons.io.FileUtils.toFiles([Ljava.net.URL;)
junit.framework.Assert.assertEquals(I, I)
java.io.File.toString()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
553 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToFiles3()
Métodos invocados: 
org.apache.commons.io.FileUtils.toFiles([Ljava.net.URL;)
junit.framework.Assert.assertEquals(I, I)
554 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToFiles4()
Métodos invocados: 
org.apache.commons.io.FileUtils.toFiles([Ljava.net.URL;)
junit.framework.Assert.fail()
555 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToURLs1()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.toURLs([Ljava.io.File;)
junit.framework.Assert.assertEquals(I, I)
java.net.URL.toExternalForm()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
java.net.URL.toExternalForm()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
java.net.URL.toExternalForm()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
java.net.URL.toExternalForm()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
java.net.URL.toExternalForm()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
java.net.URL.toExternalForm()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
556 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testContentEquals()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
java.io.File.deleteOnExit()
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL, java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
java.io.File.deleteOnExit()
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL, java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
java.io.File.deleteOnExit()
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL, java.io.File)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.createNewFile()
java.io.File.createNewFile()
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
557 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
java.io.File.deleteOnExit()
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL, java.io.File)
java.lang.Object.getClass()
java.lang.Class.getResourceAsStream(java.lang.String)
org.apache.commons.io.IOUtils.contentEquals(java.io.InputStream, java.io.InputStream)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.FileInputStream.close()
558 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testForceMkdir()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.forceMkdir(java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
java.io.File.deleteOnExit()
java.io.File.createNewFile()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.forceMkdir(java.io.File)
junit.framework.Assert.fail(java.lang.String)
java.io.File.delete()
org.apache.commons.io.FileUtils.forceMkdir(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
559 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
junit.framework.Assert.fail(java.lang.String)
java.io.File.createNewFile()
java.io.File.deleteOnExit()
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
junit.framework.Assert.fail(java.lang.String)
java.io.File.delete()
java.io.File.mkdir()
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
560 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.lang.Thread.sleep(J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.lastModified()
java.io.File.lastModified()
java.util.Date.getTime()
java.lang.Thread.sleep(J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.lastModified()
java.io.File.lastModified()
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.util.Date)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, J)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.util.Date)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, J)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.util.Date)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, J)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.util.Date)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, J)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, J)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.util.Date)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, J)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.util.Date)
junit.framework.Assert.fail(java.lang.String)
561 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyFile1()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.length()
junit.framework.Assert.assertTrue(java.lang.String, Z)
562 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyFile2()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.length()
junit.framework.Assert.assertTrue(java.lang.String, Z)
563 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyToSelf()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File)
org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
564 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.length()
junit.framework.Assert.assertTrue(java.lang.String, Z)
565 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
java.lang.System.getProperty(java.lang.String)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.io.File.getName()
org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File, java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
566 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
java.lang.System.getProperty(java.lang.String)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
567 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
java.lang.System.getProperty(java.lang.String)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
junit.framework.Assert.assertEquals(J, J)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
568 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(java.io.File, java.io.File, java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, java.io.FileFilter)
org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
java.util.List.get(I)
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.List.get(I)
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.List.get(I)
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
569 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(java.io.File, java.io.File, java.io.File)
org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)
java.util.List.size()
org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)
java.util.List.size()
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
junit.framework.Assert.assertEquals(J, J)
570 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(java.io.File, java.io.File, java.io.File)
org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)
java.util.List.size()
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
junit.framework.Assert.assertEquals(J, J)
571 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(java.io.File, java.io.File, java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.io.File.mkdirs()
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
572 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors()
Métodos invocados: 
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail()
573 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile1()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.createNewFile()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.forceDelete(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
574 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile2()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.createNewFile()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.forceDelete(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
575 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.forceDelete(java.io.File)
junit.framework.Assert.fail(java.lang.String)
576 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
java.io.File.mkdirs()
java.io.File.getName()
org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.length()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
577 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
java.io.File.mkdirs()
java.io.File.getName()
org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File, java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.length()
junit.framework.Assert.assertTrue(java.lang.String, Z)
578 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testForceDeleteDir()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.getParentFile()
org.apache.commons.io.FileUtils.forceDelete(java.io.File)
java.io.File.getParentFile()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
579 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testFileUtils()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.getAbsolutePath()
java.lang.String.getBytes(java.lang.String)
java.io.OutputStream.write([B)
java.io.OutputStream.close()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
java.io.File.exists()
junit.framework.Assert.assertTrue(Z)
java.io.File.length()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File, java.lang.String)
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.delete()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File, java.lang.String)
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
580 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testTouch()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
java.io.File.delete()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.length()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.FileOutputStream.write(I)
java.io.FileOutputStream.close()
java.io.File.length()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.util.Calendar.getTime()
java.util.Date.getTime()
java.io.File.setLastModified(J)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.io.File.lastModified()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.lang.System.currentTimeMillis()
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.length()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.File.lastModified()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.io.File.lastModified()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.io.File.lastModified()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
581 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testListFiles()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.FileUtils.listFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
java.util.Collection.size()
java.util.Collection.toArray()
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
java.io.File.getName()
java.lang.String.equals(java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.size()
junit.framework.Assert.assertEquals(I, I)
java.io.File.delete()
582 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testIterateFiles()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.FileUtils.iterateFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.io.File.getName()
java.lang.String.equals(java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.size()
junit.framework.Assert.assertEquals(I, I)
java.io.File.delete()
583 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testReadFileToString()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.lang.String.getBytes(java.lang.String)
java.io.FileOutputStream.write([B)
java.io.FileOutputStream.close()
org.apache.commons.io.FileUtils.readFileToString(java.io.File, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
584 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.FileOutputStream.write(I)
java.io.FileOutputStream.write(I)
java.io.FileOutputStream.write(I)
java.io.FileOutputStream.close()
org.apache.commons.io.FileUtils.readFileToByteArray(java.io.File)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
585 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testReadLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File, [Ljava.lang.String;)
org.apache.commons.io.FileUtils.readLines(java.io.File, java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)
586 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
java.lang.String.getBytes(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([B, java.io.File)
587 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
java.lang.String.getBytes()
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([B, java.io.File)
588 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, java.lang.String)
java.lang.String.getBytes(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([B, java.io.File)
589 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, java.lang.String)
java.lang.String.getBytes()
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([B, java.io.File)
590 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File, [B)
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([B, java.io.File)
591 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String)
org.apache.commons.io.FileUtils.readFileToString(java.io.File, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
592 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String)
java.io.File.length()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
593 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String)
org.apache.commons.io.FileUtils.readFileToString(java.io.File, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
594 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection)
org.apache.commons.io.FileUtils.readFileToString(java.io.File, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
595 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
java.lang.String.getBytes(java.lang.String)
java.lang.String.length()
java.util.zip.Checksum.update([B, I, I)
java.util.zip.Checksum.getValue()
org.apache.commons.io.FileUtils.checksumCRC32(java.io.File)
junit.framework.Assert.assertEquals(J, J)
596 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testChecksum()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
java.lang.String.getBytes(java.lang.String)
java.lang.String.length()
java.util.zip.Checksum.update([B, I, I)
java.util.zip.Checksum.getValue()
org.apache.commons.io.FileUtils.checksum(java.io.File, java.util.zip.Checksum)
java.util.zip.Checksum.getValue()
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
junit.framework.Assert.assertEquals(J, J)
597 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullFile()
Métodos invocados: 
org.apache.commons.io.FileUtils.checksum(java.io.File, java.util.zip.Checksum)
junit.framework.Assert.fail()
598 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.checksum(java.io.File, java.util.zip.Checksum)
junit.framework.Assert.fail()
599 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testChecksumOnDirectory()
Métodos invocados: 
org.apache.commons.io.FileUtils.checksum(java.io.File, java.util.zip.Checksum)
junit.framework.Assert.fail()
600 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testChecksumDouble()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
java.lang.String.getBytes(java.lang.String)
java.lang.String.length()
java.util.zip.Checksum.update([B, I, I)
java.lang.String.getBytes(java.lang.String)
java.lang.String.length()
java.util.zip.Checksum.update([B, I, I)
java.util.zip.Checksum.getValue()
org.apache.commons.io.FileUtils.checksum(java.io.File, java.util.zip.Checksum)
org.apache.commons.io.FileUtils.checksum(java.io.File, java.util.zip.Checksum)
java.util.zip.Checksum.getValue()
junit.framework.Assert.assertEquals(J, J)
601 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyForNull()
Métodos invocados: 
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
java.lang.Throwable.getMessage()
junit.framework.Assert.fail(java.lang.String)
602 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.exists()
junit.framework.Assert.assertTrue(Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
603 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.exists()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
604 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyNonExistent()
Métodos invocados: 
java.io.File.exists()
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
java.lang.Throwable.getMessage()
junit.framework.Assert.fail(java.lang.String)
605 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveFile_Rename()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
606 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.getAbsolutePath()
org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
607 - Declaração do método: org.apache.commons.io.FileUtilsTestCase$1.renameTo(java.io.File)
607 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.getAbsolutePath()
org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
608 - Declaração do método: org.apache.commons.io.FileUtilsTestCase$2.renameTo(java.io.File)
608 - Declaração do método: org.apache.commons.io.FileUtilsTestCase$2.delete()
608 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors()
Métodos invocados: 
org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
609 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.getName()
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File, java.io.File, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
610 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors()
Métodos invocados: 
org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
611 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.FileUtils.moveDirectory(java.io.File, java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.getName()
java.io.File.getName()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
612 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.FileUtils.moveDirectory(java.io.File, java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.getName()
java.io.File.getName()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
613 - Declaração do método: org.apache.commons.io.FileUtilsTestCase$3.renameTo(java.io.File)
613 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors()
Métodos invocados: 
org.apache.commons.io.FileUtils.moveDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.moveDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.moveDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.FileUtils.moveDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
org.apache.commons.io.FileUtils.moveDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
614 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File, java.io.File, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.getName()
java.io.File.getName()
java.io.File.getName()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
615 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors()
Métodos invocados: 
org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
616 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.getName()
java.io.File.getName()
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.moveToDirectory(java.io.File, java.io.File, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.moveToDirectory(java.io.File, java.io.File, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
617 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors()
Métodos invocados: 
org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.moveToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
618 - Declaração do método: org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.ListDirectoryWalker()
618 - Declaração do método: org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)
Métodos invocados: 
org.apache.commons.io.DirectoryWalker.walk(java.io.File, java.util.Collection)
619 - Declaração do método: org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.handleDirectoryStart(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.lang.Object)
620 - Declaração do método: org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.handleFile(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.lang.Object)
621 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.FileSystemUtilsTestCase.suite()
junit.textui.TestRunner.run(junit.framework.Test)
622 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.suite()
622 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.FileSystemUtilsTestCase(java.lang.String)
622 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.setUp()
622 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.tearDown()
622 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
java.lang.String.toLowerCase(java.util.Locale)
java.lang.String.indexOf(java.lang.String)
java.lang.String.indexOf(java.lang.String)
java.lang.String.indexOf(java.lang.String)
java.lang.String.indexOf(java.lang.String)
java.lang.String.indexOf(java.lang.String)
java.lang.Runtime.getRuntime()
java.lang.Runtime.exec([Ljava.lang.String;)
java.lang.Process.getInputStream()
java.io.BufferedReader.readLine()
java.lang.String.indexOf(java.lang.String)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)
org.apache.commons.io.FileSystemUtils.freeSpace(java.lang.String)
org.apache.commons.io.FileSystemUtils.freeSpaceKb(java.lang.String)
junit.framework.Assert.assertEquals(D, D, D)
junit.framework.Assert.assertEquals(D, D, D)
org.apache.commons.io.FileSystemUtils.freeSpace(java.lang.String)
org.apache.commons.io.FileSystemUtils.freeSpaceKb(java.lang.String)
junit.framework.Assert.assertEquals(D, D, D)
623 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_NullPath()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z)
junit.framework.Assert.fail()
624 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_InitError()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z)
junit.framework.Assert.fail()
625 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Other()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z)
junit.framework.Assert.fail()
626 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z)
junit.framework.Assert.assertEquals(J, J)
627 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$1.freeSpaceWindows(java.lang.String)
627 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z)
junit.framework.Assert.assertEquals(J, J)
628 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$2.freeSpaceUnix(java.lang.String, Z, Z)
628 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_ParseCommaFormatBytes()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String)
junit.framework.Assert.assertEquals(J, J)
629 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String)
junit.framework.Assert.assertEquals(J, J)
630 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String)
junit.framework.Assert.assertEquals(J, J)
631 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String)
junit.framework.Assert.assertEquals(J, J)
632 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String)
junit.framework.Assert.fail()
633 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyMultiLineResponse()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String)
junit.framework.Assert.fail()
634 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_InvalidTextResponse()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String)
junit.framework.Assert.fail()
635 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NoSuchDirectoryResponse()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String)
junit.framework.Assert.fail()
636 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyPath()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
637 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseLinux()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.assertEquals(J, J)
638 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.assertEquals(J, J)
639 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbLinux()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.assertEquals(J, J)
640 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.assertEquals(J, J)
641 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbSolaris()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.assertEquals(J, J)
642 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponse()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.assertEquals(J, J)
643 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.assertEquals(J, J)
644 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
645 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
646 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
647 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
648 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z)
junit.framework.Assert.fail()
649 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils.MockFileSystemUtils(I, java.lang.String)
649 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils.MockFileSystemUtils(I, java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.getBytes()
650 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils.openProcess([Ljava.lang.String;)
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
651 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1.getErrorStream()
651 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1.getInputStream()
651 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1.getOutputStream()
651 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1.waitFor()
651 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1.exitValue()
651 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1.destroy()
651 - Declaração do método: org.apache.commons.io.FileUtilsWaitForTestCase.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.FileUtilsWaitForTestCase.suite()
junit.textui.TestRunner.run(junit.framework.Test)
652 - Declaração do método: org.apache.commons.io.FileUtilsWaitForTestCase.suite()
652 - Declaração do método: org.apache.commons.io.FileUtilsWaitForTestCase.FileUtilsWaitForTestCase(java.lang.String)
652 - Declaração do método: org.apache.commons.io.FileUtilsWaitForTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
653 - Declaração do método: org.apache.commons.io.FileUtilsWaitForTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
654 - Declaração do método: org.apache.commons.io.FileUtilsWaitForTestCase.testWaitFor()
Métodos invocados: 
org.apache.commons.io.FileUtils.waitFor(java.io.File, I)
org.apache.commons.io.FileUtils.waitFor(java.io.File, I)
655 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.IOUtilsWriteTestCase.suite()
junit.textui.TestRunner.run(junit.framework.Test)
656 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.suite()
656 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.IOUtilsWriteTestCase(java.lang.String)
656 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.setUp()
656 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.tearDown()
656 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
657 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
658 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.OutputStream)
junit.framework.Assert.fail()
659 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
660 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
661 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullWriter()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.Writer)
junit.framework.Assert.fail()
662 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.Writer, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.lang.String.getBytes(java.lang.String)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
663 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.Writer, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
664 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullWriter()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.Writer, java.lang.String)
junit.framework.Assert.fail()
665 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.Writer, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
666 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
667 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
668 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream)
junit.framework.Assert.fail()
669 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.lang.String.getBytes(java.lang.String)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
670 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
671 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream)
junit.framework.Assert.fail()
672 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
673 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
674 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
675 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.Writer)
junit.framework.Assert.fail()
676 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
677 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
678 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream)
junit.framework.Assert.fail()
679 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.lang.String.getBytes(java.lang.String)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
680 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
681 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream)
junit.framework.Assert.fail()
682 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
683 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
684 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
685 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.Writer)
junit.framework.Assert.fail()
686 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream()
Métodos invocados: 
java.lang.String.toCharArray()
org.apache.commons.io.IOUtils.write([C, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
687 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([C, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
688 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullStream()
Métodos invocados: 
java.lang.String.toCharArray()
org.apache.commons.io.IOUtils.write([C, java.io.OutputStream)
junit.framework.Assert.fail()
689 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding()
Métodos invocados: 
java.lang.String.toCharArray()
org.apache.commons.io.IOUtils.write([C, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.lang.String.getBytes(java.lang.String)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
690 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([C, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
691 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullStream()
Métodos invocados: 
java.lang.String.toCharArray()
org.apache.commons.io.IOUtils.write([C, java.io.OutputStream)
junit.framework.Assert.fail()
692 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding()
Métodos invocados: 
java.lang.String.toCharArray()
org.apache.commons.io.IOUtils.write([C, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
693 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter()
Métodos invocados: 
java.lang.String.toCharArray()
org.apache.commons.io.IOUtils.write([C, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
694 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([C, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
695 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullStream()
Métodos invocados: 
java.lang.String.toCharArray()
org.apache.commons.io.IOUtils.write([C, java.io.Writer)
junit.framework.Assert.fail()
696 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
697 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
698 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
699 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullStream()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream)
junit.framework.Assert.fail()
700 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toString(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
701 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
702 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
703 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullStream()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String)
junit.framework.Assert.fail()
704 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
705 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
706 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
707 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
708 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullStream()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.Writer)
junit.framework.Assert.fail()
709 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.lang.Throwable.getMessage()
710 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
711 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.IOUtilsTestCase(java.lang.String)
711 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testConstants()
Métodos invocados: 
junit.framework.Assert.assertEquals(C, C)
junit.framework.Assert.assertEquals(C, C)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(C, C)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(C, C)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
712 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.assertEqualContent([B, [B)
Métodos invocados: 
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
713 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testInputStreamToString()
Métodos invocados: 
org.apache.commons.io.IOUtils.toString(java.io.InputStream)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.io.FileInputStream.available()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.lang.String.length()
java.lang.String.length()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.FileInputStream.close()
714 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testReaderToString()
Métodos invocados: 
org.apache.commons.io.IOUtils.toString(java.io.Reader)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.lang.String.length()
java.lang.String.length()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.InputStreamReader.close()
715 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.IOUtils.toString(java.io.Reader)
java.io.InputStreamReader.close()
org.apache.commons.io.CopyUtils.copy(java.lang.String, java.io.OutputStream)
org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File, java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(java.io.OutputStream)
java.io.FileOutputStream.close()
org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)
716 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testStringToWriter()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.IOUtils.toString(java.io.Reader)
java.io.InputStreamReader.close()
org.apache.commons.io.CopyUtils.copy(java.lang.String, java.io.Writer)
java.io.OutputStreamWriter.flush()
org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File, java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(java.io.Writer)
java.io.OutputStreamWriter.close()
org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)
717 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray()
Métodos invocados: 
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.io.FileInputStream.available()
junit.framework.Assert.assertTrue(java.lang.String, Z)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([B, java.io.File)
java.io.FileInputStream.close()
718 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testStringToByteArray()
Métodos invocados: 
org.apache.commons.io.IOUtils.toString(java.io.Reader)
org.apache.commons.io.IOUtils.toByteArray(java.lang.String)
java.lang.String.getBytes()
org.apache.commons.io.IOUtilsTestCase.assertEqualContent([B, [B)
java.io.InputStreamReader.close()
719 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testByteArrayToWriter()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
java.io.FileInputStream.close()
org.apache.commons.io.CopyUtils.copy([B, java.io.Writer)
java.io.OutputStreamWriter.flush()
org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File, java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(java.io.Writer)
java.io.OutputStreamWriter.close()
org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)
720 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testByteArrayToString()
Métodos invocados: 
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
org.apache.commons.io.IOUtils.toString([B)
java.lang.String.getBytes()
org.apache.commons.io.IOUtilsTestCase.assertEqualContent([B, [B)
java.io.FileInputStream.close()
721 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testCharSequenceToInputStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
java.lang.CharSequence.toString()
java.lang.String.getBytes()
org.apache.commons.io.IOUtilsTestCase.assertEqualContent([B, [B)
org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence, java.lang.String)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
java.lang.CharSequence.toString()
java.lang.String.getBytes()
org.apache.commons.io.IOUtilsTestCase.assertEqualContent([B, [B)
org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence, java.lang.String)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
java.lang.CharSequence.toString()
java.lang.String.getBytes(java.lang.String)
org.apache.commons.io.IOUtilsTestCase.assertEqualContent([B, [B)
722 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testStringToInputStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.toInputStream(java.lang.String)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
java.lang.String.getBytes()
org.apache.commons.io.IOUtilsTestCase.assertEqualContent([B, [B)
org.apache.commons.io.IOUtils.toInputStream(java.lang.String, java.lang.String)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
java.lang.String.getBytes()
org.apache.commons.io.IOUtilsTestCase.assertEqualContent([B, [B)
org.apache.commons.io.IOUtils.toInputStream(java.lang.String, java.lang.String)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
java.lang.String.getBytes(java.lang.String)
org.apache.commons.io.IOUtilsTestCase.assertEqualContent([B, [B)
723 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testByteArrayToOutputStream()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
java.io.FileInputStream.close()
org.apache.commons.io.CopyUtils.copy([B, java.io.OutputStream)
java.io.OutputStream.flush()
org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File, java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(java.io.OutputStream)
java.io.FileOutputStream.close()
org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)
724 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArray()
Métodos invocados: 
org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.io.FileInputStream.available()
junit.framework.Assert.assertTrue(java.lang.String, Z)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([C, java.io.File)
java.io.FileInputStream.close()
725 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArrayWithEncoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream, java.lang.String)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.io.FileInputStream.available()
junit.framework.Assert.assertTrue(java.lang.String, Z)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([C, java.io.File)
java.io.FileInputStream.close()
726 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testReaderToCharArray()
Métodos invocados: 
org.apache.commons.io.IOUtils.toCharArray(java.io.Reader)
junit.framework.Assert.assertNotNull(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([C, java.io.File)
java.io.InputStreamReader.close()
727 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File, [Ljava.lang.String;)
org.apache.commons.io.IOUtils.readLines(java.io.InputStream)
java.util.Arrays.asList([Ljava.lang.String;)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)
728 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File, [Ljava.lang.String;)
org.apache.commons.io.IOUtils.readLines(java.io.InputStream, java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)
729 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File, [Ljava.lang.String;)
org.apache.commons.io.IOUtils.readLines(java.io.Reader)
java.util.Arrays.asList([Ljava.lang.String;)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.io.Reader.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)
org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)
730 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.IOUtilsCopyTestCase.suite()
junit.textui.TestRunner.run(junit.framework.Test)
731 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.suite()
731 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.IOUtilsCopyTestCase(java.lang.String)
731 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.setUp()
731 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.tearDown()
731 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream)
java.io.InputStream.available()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
732 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullIn()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream)
junit.framework.Assert.fail()
733 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullOut()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream)
junit.framework.Assert.fail()
734 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream)
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.close()
org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
735 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
java.io.InputStream.available()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
736 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer)
junit.framework.Assert.fail()
737 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullOut()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer)
junit.framework.Assert.fail()
738 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
java.io.InputStream.available()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.lang.String.getBytes(java.lang.String)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
739 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)
junit.framework.Assert.fail()
740 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullOut()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)
junit.framework.Assert.fail()
741 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
java.io.InputStream.available()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
742 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
743 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullIn()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream)
junit.framework.Assert.fail()
744 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullOut()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream)
junit.framework.Assert.fail()
745 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream, java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.lang.String.getBytes(java.lang.String)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
746 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullIn()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream, java.lang.String)
junit.framework.Assert.fail()
747 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullOut()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream, java.lang.String)
junit.framework.Assert.fail()
748 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream, java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
749 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
750 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
junit.framework.Assert.fail()
751 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullOut()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
junit.framework.Assert.fail()
752 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
junit.framework.Assert.assertEquals(I, I)
java.io.Reader.close()
org.apache.commons.io.IOUtils.copyLarge(java.io.Reader, java.io.Writer)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
753 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.FilenameUtilsTestCase.suite()
junit.textui.TestRunner.run(junit.framework.Test)
754 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.suite()
754 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.FilenameUtilsTestCase(java.lang.String)
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.length()
java.io.File.length()
755 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
756 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
757 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testNormalize()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
758 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
759 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testConcat()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
760 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
761 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
762 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
763 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
764 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testIndexOfLastSeparator()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
765 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testIndexOfExtension()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
766 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
767 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testGetPath()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
768 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
769 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
770 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
771 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testGetName()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
772 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
773 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testGetExtension()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
774 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
775 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testEquals()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
776 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
777 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
778 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
779 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedError_IO_128()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
780 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String, Z, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String, Z, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String, Z, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String, Z, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
781 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testIsExtension()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
782 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
783 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
784 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.suite()
784 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.DirectoryWalkerTestCase(java.lang.String)
784 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.setUp()
784 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.tearDown()
784 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testFilter()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
785 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
786 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
787 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
788 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
789 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
790 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile2()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
791 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
org.apache.commons.io.DirectoryWalkerTestCase.directoriesOnly(java.util.Collection)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
792 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
org.apache.commons.io.DirectoryWalkerTestCase.filesOnly(java.util.Collection)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
793 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testLimitToCurrent()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
794 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testMissingStartDirectory()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
junit.framework.Assert.fail(java.lang.String)
795 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testHandleStartDirectoryFalse()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
796 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
Métodos invocados: 
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
797 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.directoriesOnly(java.util.Collection)
Métodos invocados: 
java.util.Collection.size()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.io.File.isDirectory()
java.util.List.add(java.lang.Object)
798 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.filesOnly(java.util.Collection)
Métodos invocados: 
java.util.Collection.size()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.io.File.isFile()
java.util.List.add(java.lang.Object)
799 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.createNameFilter([Ljava.io.File;)
Métodos invocados: 
java.io.File.getName()
800 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testCancel()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.find(java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getFile()
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getDepth()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.find(java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getFile()
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getDepth()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.find(java.io.File)
java.util.List.size()
java.util.List.get(I)
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
801 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.find(java.io.File)
junit.framework.Assert.fail(java.lang.String)
java.util.List.size()
java.util.List.get(I)
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getDepth()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.find(java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getFile()
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getDepth()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.find(java.io.File)
java.util.List.size()
java.util.List.get(I)
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
802 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.TestFileFinder(java.io.FileFilter, I)
802 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.TestFileFinder(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter, I)
802 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
Métodos invocados: 
org.apache.commons.io.DirectoryWalker.walk(java.io.File, java.util.Collection)
java.lang.Throwable.toString()
junit.framework.Assert.fail(java.lang.String)
803 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.handleDirectoryEnd(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.lang.Object)
804 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.handleFile(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.lang.Object)
805 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestFalseFileFinder.TestFalseFileFinder(java.io.FileFilter, I)
805 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestFalseFileFinder.handleDirectory(java.io.File, I, java.util.Collection)
805 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.TestCancelWalker(java.lang.String, Z)
805 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.find(java.io.File)
Métodos invocados: 
org.apache.commons.io.DirectoryWalker.walk(java.io.File, java.util.Collection)
806 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.handleDirectoryEnd(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.lang.Object)
java.io.File.getName()
java.lang.String.equals(java.lang.Object)
807 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.handleFile(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.lang.Object)
java.io.File.getName()
java.lang.String.equals(java.lang.Object)
808 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.handleCancelled(java.io.File, java.util.Collection, org.apache.commons.io.DirectoryWalker$CancelException)
808 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.TestMultiThreadCancelWalker(java.lang.String, Z)
808 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.find(java.io.File)
Métodos invocados: 
org.apache.commons.io.DirectoryWalker.walk(java.io.File, java.util.Collection)
809 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.handleDirectoryEnd(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.lang.Object)
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.getName()
java.lang.String.equals(java.lang.Object)
810 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.handleFile(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.lang.Object)
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.getName()
java.lang.String.equals(java.lang.Object)
811 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.handleIsCancelled(java.io.File, I, java.util.Collection)
811 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.handleCancelled(java.io.File, java.util.Collection, org.apache.commons.io.DirectoryWalker$CancelException)
811 - Declaração do método: org.apache.commons.io.PackageTestSuite.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.PackageTestSuite.suite()
junit.textui.TestRunner.run(junit.framework.Test)
812 - Declaração do método: org.apache.commons.io.PackageTestSuite.suite()
Métodos invocados: 
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
813 - Declaração do método: org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionStringThrowable()
Métodos invocados: 
org.apache.commons.io.IOExceptionWithCauseTestCase.validate(java.lang.Throwable, java.lang.Throwable, java.lang.String)
814 - Declaração do método: org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionThrowable()
Métodos invocados: 
org.apache.commons.io.IOExceptionWithCauseTestCase.validate(java.lang.Throwable, java.lang.Throwable, java.lang.String)
815 - Declaração do método: org.apache.commons.io.IOExceptionWithCauseTestCase.validate(java.lang.Throwable, java.lang.Throwable, java.lang.String)
Métodos invocados: 
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.lang.Throwable.getCause()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Throwable.getCause()
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
816 - Declaração do método: org.apache.commons.io.IOCaseTestCase.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.IOCaseTestCase.suite()
junit.textui.TestRunner.run(junit.framework.Test)
817 - Declaração do método: org.apache.commons.io.IOCaseTestCase.suite()
817 - Declaração do método: org.apache.commons.io.IOCaseTestCase.IOCaseTestCase(java.lang.String)
817 - Declaração do método: org.apache.commons.io.IOCaseTestCase.setUp()
817 - Declaração do método: org.apache.commons.io.IOCaseTestCase.tearDown()
817 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_forName()
Métodos invocados: 
org.apache.commons.io.IOCase.forName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.apache.commons.io.IOCase.forName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.apache.commons.io.IOCase.forName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.apache.commons.io.IOCase.forName(java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.forName(java.lang.String)
junit.framework.Assert.fail()
818 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_serialization()
Métodos invocados: 
org.apache.commons.io.IOCaseTestCase.serialize(org.apache.commons.io.IOCase)
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
org.apache.commons.io.IOCaseTestCase.serialize(org.apache.commons.io.IOCase)
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
org.apache.commons.io.IOCaseTestCase.serialize(org.apache.commons.io.IOCase)
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
819 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_getName()
Métodos invocados: 
org.apache.commons.io.IOCase.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.IOCase.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.IOCase.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
820 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_toString()
Métodos invocados: 
org.apache.commons.io.IOCase.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.IOCase.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.IOCase.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
821 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_isCaseSensitive()
Métodos invocados: 
org.apache.commons.io.IOCase.isCaseSensitive()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.isCaseSensitive()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.isCaseSensitive()
junit.framework.Assert.assertEquals(Z, Z)
822 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkCompare_functionality()
Métodos invocados: 
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
823 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkCompare_case()
Métodos invocados: 
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
824 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkEquals_functionality()
Métodos invocados: 
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
825 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkEquals_case()
Métodos invocados: 
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
826 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_functionality()
Métodos invocados: 
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
827 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_case()
Métodos invocados: 
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
828 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_functionality()
Métodos invocados: 
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
829 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_case()
Métodos invocados: 
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
830 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_functionality()
Métodos invocados: 
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.fail()
831 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case()
Métodos invocados: 
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
832 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_functionality()
Métodos invocados: 
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.fail()
833 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_case()
Métodos invocados: 
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
834 - Declaração do método: org.apache.commons.io.IOCaseTestCase.serialize(org.apache.commons.io.IOCase)
Métodos invocados: 
java.io.ObjectOutputStream.writeObject(java.lang.Object)
java.io.ObjectOutputStream.flush()
java.io.ObjectOutputStream.close()
java.io.ByteArrayOutputStream.toByteArray()
java.io.ObjectInputStream.readObject()
835 - Declaração do método: org.apache.commons.io.DemuxTestCase.DemuxTestCase(java.lang.String)
835 - Declaração do método: org.apache.commons.io.DemuxTestCase.getOutput(java.lang.String)
Métodos invocados: 
java.util.HashMap.get(java.lang.Object)
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
org.apache.commons.io.output.ByteArrayOutputStream.toString()
836 - Declaração do método: org.apache.commons.io.DemuxTestCase.getInput(java.lang.String)
Métodos invocados: 
java.util.HashMap.get(java.lang.Object)
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
org.apache.commons.io.DemuxTestCase$ReaderThread.getData()
837 - Declaração do método: org.apache.commons.io.DemuxTestCase.doStart()
Métodos invocados: 
java.util.HashMap.keySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.HashMap.get(java.lang.Object)
java.lang.Thread.start()
838 - Declaração do método: org.apache.commons.io.DemuxTestCase.doJoin()
Métodos invocados: 
java.util.HashMap.keySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.HashMap.get(java.lang.Object)
java.lang.Thread.join()
839 - Declaração do método: org.apache.commons.io.DemuxTestCase.startWriter(java.lang.String, java.lang.String, org.apache.commons.io.output.DemuxOutputStream)
Métodos invocados: 
java.util.HashMap.put(java.lang.Object, java.lang.Object)
java.util.HashMap.put(java.lang.Object, java.lang.Object)
840 - Declaração do método: org.apache.commons.io.DemuxTestCase.startReader(java.lang.String, java.lang.String, org.apache.commons.io.input.DemuxInputStream)
Métodos invocados: 
java.lang.String.getBytes()
java.util.HashMap.put(java.lang.Object, java.lang.Object)
841 - Declaração do método: org.apache.commons.io.DemuxTestCase.testOutputStream()
Métodos invocados: 
org.apache.commons.io.DemuxTestCase.startWriter(java.lang.String, java.lang.String, org.apache.commons.io.output.DemuxOutputStream)
org.apache.commons.io.DemuxTestCase.startWriter(java.lang.String, java.lang.String, org.apache.commons.io.output.DemuxOutputStream)
org.apache.commons.io.DemuxTestCase.startWriter(java.lang.String, java.lang.String, org.apache.commons.io.output.DemuxOutputStream)
org.apache.commons.io.DemuxTestCase.startWriter(java.lang.String, java.lang.String, org.apache.commons.io.output.DemuxOutputStream)
org.apache.commons.io.DemuxTestCase.doStart()
org.apache.commons.io.DemuxTestCase.doJoin()
org.apache.commons.io.DemuxTestCase.getOutput(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DemuxTestCase.getOutput(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DemuxTestCase.getOutput(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DemuxTestCase.getOutput(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
842 - Declaração do método: org.apache.commons.io.DemuxTestCase.testInputStream()
Métodos invocados: 
org.apache.commons.io.DemuxTestCase.startReader(java.lang.String, java.lang.String, org.apache.commons.io.input.DemuxInputStream)
org.apache.commons.io.DemuxTestCase.startReader(java.lang.String, java.lang.String, org.apache.commons.io.input.DemuxInputStream)
org.apache.commons.io.DemuxTestCase.startReader(java.lang.String, java.lang.String, org.apache.commons.io.input.DemuxInputStream)
org.apache.commons.io.DemuxTestCase.startReader(java.lang.String, java.lang.String, org.apache.commons.io.input.DemuxInputStream)
org.apache.commons.io.DemuxTestCase.doStart()
org.apache.commons.io.DemuxTestCase.doJoin()
org.apache.commons.io.DemuxTestCase.getInput(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DemuxTestCase.getInput(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DemuxTestCase.getInput(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DemuxTestCase.getInput(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
843 - Declaração do método: org.apache.commons.io.DemuxTestCase$ReaderThread.ReaderThread(java.lang.String, java.io.InputStream, org.apache.commons.io.input.DemuxInputStream)
843 - Declaração do método: org.apache.commons.io.DemuxTestCase$ReaderThread.getData()
Métodos invocados: 
java.lang.StringBuffer.toString()
844 - Declaração do método: org.apache.commons.io.DemuxTestCase$ReaderThread.run()
Métodos invocados: 
org.apache.commons.io.input.DemuxInputStream.bindStream(java.io.InputStream)
org.apache.commons.io.input.DemuxInputStream.read()
java.lang.StringBuffer.append(C)
java.util.Random.nextInt()
java.lang.Math.abs(I)
java.lang.Thread.sleep(J)
org.apache.commons.io.input.DemuxInputStream.read()
java.lang.Throwable.printStackTrace()
845 - Declaração do método: org.apache.commons.io.DemuxTestCase$WriterThread.WriterThread(java.lang.String, java.lang.String, java.io.OutputStream, org.apache.commons.io.output.DemuxOutputStream)
Métodos invocados: 
java.lang.String.getBytes()
846 - Declaração do método: org.apache.commons.io.DemuxTestCase$WriterThread.run()
Métodos invocados: 
org.apache.commons.io.output.DemuxOutputStream.bindStream(java.io.OutputStream)
org.apache.commons.io.output.DemuxOutputStream.write(I)
java.util.Random.nextInt()
java.lang.Math.abs(I)
java.lang.Thread.sleep(J)
java.lang.Throwable.printStackTrace()
847 - Declaração do método: org.apache.commons.io.AllIOTestSuite.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.AllIOTestSuite.suite()
junit.textui.TestRunner.run(junit.framework.Test)
848 - Declaração do método: org.apache.commons.io.AllIOTestSuite.suite()
Métodos invocados: 
org.apache.commons.io.PackageTestSuite.suite()
junit.framework.TestSuite.addTest(junit.framework.Test)
org.apache.commons.io.filefilter.PackageTestSuite.suite()
junit.framework.TestSuite.addTest(junit.framework.Test)
org.apache.commons.io.input.PackageTestSuite.suite()
junit.framework.TestSuite.addTest(junit.framework.Test)
org.apache.commons.io.output.PackageTestSuite.suite()
junit.framework.TestSuite.addTest(junit.framework.Test)
849 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.suite()
junit.textui.TestRunner.run(junit.framework.Test)
850 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.suite()
850 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.FileUtilsCleanDirectoryTestCase(java.lang.String)
850 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.getLocalTestDirectory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
851 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.setUp()
Métodos invocados: 
java.io.File.mkdirs()
852 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod(java.io.File, I, Z)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
853 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testCleanEmpty()
Métodos invocados: 
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
854 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesRegular()
Métodos invocados: 
org.apache.commons.io.FileUtils.touch(java.io.File)
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
855 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested()
Métodos invocados: 
java.io.File.mkdirs()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
856 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnNullList()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
java.lang.String.startsWith(java.lang.String)
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod(java.io.File, I, Z)
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
junit.framework.Assert.fail(java.lang.String)
java.io.File.getAbsolutePath()
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
857 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile()
Métodos invocados: 
org.apache.commons.io.FileUtils.touch(java.io.File)
java.lang.System.getProperty(java.lang.String)
java.lang.String.startsWith(java.lang.String)
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod(java.io.File, I, Z)
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
junit.framework.Assert.fail(java.lang.String)
java.io.File.getAbsolutePath()
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
858 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod(java.io.File, I, Z)
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.lang.Integer.toString(I)
java.util.List.add(java.lang.Object)
java.io.File.getAbsolutePath()
java.util.List.add(java.lang.Object)
java.lang.Runtime.getRuntime()
java.util.List.size()
java.util.List.toArray([Ljava.lang.Object;)
java.lang.Runtime.exec([Ljava.lang.String;)
java.lang.Process.waitFor()
859 - Declaração do método: org.apache.commons.io.HexDumpTest.HexDumpTest(java.lang.String)
859 - Declaração do método: org.apache.commons.io.HexDumpTest.toHex(I)
859 - Declaração do método: org.apache.commons.io.HexDumpTest.testDump()
Métodos invocados: 
org.apache.commons.io.HexDump.dump([B, J, java.io.OutputStream, I)
java.lang.String.length()
java.lang.String.length()
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toAscii(I)
java.lang.String.getBytes()
java.lang.String.getBytes()
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, B, B)
org.apache.commons.io.HexDump.dump([B, J, java.io.OutputStream, I)
java.lang.String.length()
java.lang.String.length()
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toAscii(I)
java.lang.String.getBytes()
java.lang.String.getBytes()
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, B, B)
org.apache.commons.io.HexDump.dump([B, J, java.io.OutputStream, I)
java.lang.String.length()
java.lang.String.length()
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toAscii(I)
java.lang.String.getBytes()
java.lang.String.getBytes()
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, B, B)
org.apache.commons.io.HexDump.dump([B, J, java.io.OutputStream, I)
java.lang.String.length()
java.lang.String.length()
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toAscii(I)
java.lang.String.getBytes()
java.lang.String.getBytes()
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, B, B)
org.apache.commons.io.HexDump.dump([B, J, java.io.OutputStream, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.HexDump.dump([B, J, java.io.OutputStream, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.HexDump.dump([B, J, java.io.OutputStream, I)
junit.framework.Assert.fail(java.lang.String)
860 - Declaração do método: org.apache.commons.io.HexDumpTest.toAscii(I)
860 - Declaração do método: org.apache.commons.io.HexDumpTest.main([Ljava.lang.String;)
Métodos invocados: 
java.io.PrintStream.println(java.lang.String)
junit.textui.TestRunner.run(java.lang.Class)
861 - Declaração do método: org.apache.commons.io.FileUtilsFileNewerTestCase.FileUtilsFileNewerTestCase(java.lang.String)
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
862 - Declaração do método: org.apache.commons.io.FileUtilsFileNewerTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
863 - Declaração do método: org.apache.commons.io.FileUtilsFileNewerTestCase.tearDown()
Métodos invocados: 
java.io.File.delete()
java.io.File.delete()
864 - Declaração do método: org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer()
Métodos invocados: 
java.io.File.exists()
java.io.File.lastModified()
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(java.lang.String, java.io.File, J, Z)
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(java.lang.String, java.io.File, J, Z)
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(java.lang.String, java.io.File, J, Z)
865 - Declaração do método: org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
java.io.File.lastModified()
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(java.lang.String, java.io.File, J, Z)
866 - Declaração do método: org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(java.lang.String, java.io.File, J, Z)
Métodos invocados: 
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, J)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.util.Date)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.io.File.setLastModified(J)
java.io.File.lastModified()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
867 - Declaração do método: org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFile()
Métodos invocados: 
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, J)
junit.framework.Assert.fail(java.lang.String)
868 - Declaração do método: org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoDate()
Métodos invocados: 
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.util.Date)
junit.framework.Assert.fail(java.lang.String)
869 - Declaração do método: org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFileReference()
Métodos invocados: 
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
870 - Declaração do método: org.apache.commons.io.comparator.SizeFileComparatorTest.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.comparator.SizeFileComparatorTest.suite()
junit.textui.TestRunner.run(junit.framework.Test)
871 - Declaração do método: org.apache.commons.io.comparator.SizeFileComparatorTest.suite()
871 - Declaração do método: org.apache.commons.io.comparator.SizeFileComparatorTest.SizeFileComparatorTest(java.lang.String)
871 - Declaração do método: org.apache.commons.io.comparator.SizeFileComparatorTest.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
java.io.File.mkdir()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
872 - Declaração do método: org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile()
Métodos invocados: 
java.io.File.exists()
junit.framework.Assert.assertFalse(Z)
java.util.Comparator.compare(java.lang.Object, java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
873 - Declaração do método: org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes()
Métodos invocados: 
java.util.Comparator.compare(java.lang.Object, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
874 - Declaração do método: org.apache.commons.io.comparator.PathFileComparatorTest.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.comparator.PathFileComparatorTest.suite()
junit.textui.TestRunner.run(junit.framework.Test)
875 - Declaração do método: org.apache.commons.io.comparator.PathFileComparatorTest.suite()
875 - Declaração do método: org.apache.commons.io.comparator.PathFileComparatorTest.PathFileComparatorTest(java.lang.String)
875 - Declaração do método: org.apache.commons.io.comparator.PathFileComparatorTest.setUp()
875 - Declaração do método: org.apache.commons.io.comparator.PackageTestSuite.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.comparator.PackageTestSuite.suite()
junit.textui.TestRunner.run(junit.framework.Test)
876 - Declaração do método: org.apache.commons.io.comparator.PackageTestSuite.suite()
Métodos invocados: 
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
877 - Declaração do método: org.apache.commons.io.comparator.DefaultFileComparatorTest.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.comparator.DefaultFileComparatorTest.suite()
junit.textui.TestRunner.run(junit.framework.Test)
878 - Declaração do método: org.apache.commons.io.comparator.DefaultFileComparatorTest.suite()
878 - Declaração do método: org.apache.commons.io.comparator.DefaultFileComparatorTest.DefaultFileComparatorTest(java.lang.String)
878 - Declaração do método: org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp()
878 - Declaração do método: org.apache.commons.io.comparator.ComparatorAbstractTestCase.ComparatorAbstractTestCase(java.lang.String)
878 - Declaração do método: org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp()
878 - Declaração do método: org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown()
878 - Declaração do método: org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator()
Métodos invocados: 
java.util.Comparator.compare(java.lang.Object, java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.lang.Object, java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.lang.Object, java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
879 - Declaração do método: org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator()
Métodos invocados: 
java.util.Comparator.compare(java.lang.Object, java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.lang.Object, java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.lang.Object, java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
880 - Declaração do método: org.apache.commons.io.comparator.NameFileComparatorTest.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.comparator.NameFileComparatorTest.suite()
junit.textui.TestRunner.run(junit.framework.Test)
881 - Declaração do método: org.apache.commons.io.comparator.NameFileComparatorTest.suite()
881 - Declaração do método: org.apache.commons.io.comparator.NameFileComparatorTest.NameFileComparatorTest(java.lang.String)
881 - Declaração do método: org.apache.commons.io.comparator.NameFileComparatorTest.setUp()
881 - Declaração do método: org.apache.commons.io.comparator.ExtensionFileComparatorTest.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.comparator.ExtensionFileComparatorTest.suite()
junit.textui.TestRunner.run(junit.framework.Test)
882 - Declaração do método: org.apache.commons.io.comparator.ExtensionFileComparatorTest.suite()
882 - Declaração do método: org.apache.commons.io.comparator.ExtensionFileComparatorTest.ExtensionFileComparatorTest(java.lang.String)
882 - Declaração do método: org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp()
882 - Declaração do método: org.apache.commons.io.comparator.LastModifiedFileComparatorTest.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.comparator.LastModifiedFileComparatorTest.suite()
junit.textui.TestRunner.run(junit.framework.Test)
883 - Declaração do método: org.apache.commons.io.comparator.LastModifiedFileComparatorTest.suite()
883 - Declaração do método: org.apache.commons.io.comparator.LastModifiedFileComparatorTest.LastModifiedFileComparatorTest(java.lang.String)
883 - Declaração do método: org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.lang.Thread.sleep(J)
java.lang.System.currentTimeMillis()
java.io.File.setLastModified(J)
java.io.File.lastModified()
java.io.File.lastModified()
884 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.FileFilterTestCase(java.lang.String)
884 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.suite()
junit.textui.TestRunner.run(junit.framework.Test)
885 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.suite()
885 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
886 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
887 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.getParentFile()
java.lang.Object.getClass()
java.lang.Class.getName()
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
888 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.orFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.util.Arrays.asList([Ljava.lang.String;)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail()
junit.framework.Assert.fail()
junit.framework.Assert.fail()
889 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
junit.framework.Assert.fail()
junit.framework.Assert.fail()
junit.framework.Assert.fail()
890 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
891 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testFiles()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
892 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.util.Arrays.asList([Ljava.lang.String;)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail()
junit.framework.Assert.fail()
junit.framework.Assert.fail()
893 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
junit.framework.Assert.fail()
junit.framework.Assert.fail()
junit.framework.Assert.fail()
894 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.util.ArrayList.add(java.lang.Object)
java.util.ArrayList.add(java.lang.Object)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
895 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArgument()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
896 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArrayArgument()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
897 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullListArgument()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
898 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testTrue()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
899 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testFalse()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.falseFileFilter()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
900 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testNot()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()
org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
junit.framework.Assert.fail()
901 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testAnd()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
junit.framework.Assert.fail()
org.apache.commons.io.filefilter.AndFileFilter.getFileFilters()
java.util.List.isEmpty()
junit.framework.Assert.assertEquals(Z, Z)
902 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testOr()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.OrFileFilter.getFileFilters()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.apache.commons.io.filefilter.OrFileFilter.removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.OrFileFilter.setFileFilters(java.util.List)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.OrFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.filefilter.OrFileFilter.removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.OrFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail()
org.apache.commons.io.filefilter.OrFileFilter.getFileFilters()
java.util.List.isEmpty()
junit.framework.Assert.assertEquals(Z, Z)
903 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail()
junit.framework.Assert.fail()
junit.framework.Assert.fail()
904 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail()
junit.framework.Assert.fail()
junit.framework.Assert.fail()
905 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
junit.framework.Assert.fail()
junit.framework.Assert.fail()
906 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
907 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
908 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.lang.Thread.sleep(J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.lastModified()
java.io.File.lastModified()
java.util.Date.getTime()
java.lang.Thread.sleep(J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.lastModified()
java.io.File.lastModified()
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(J)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(J, Z)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(J, Z)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.util.Date)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.util.Date, Z)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.util.Date, Z)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.io.File)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
909 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(J)
org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(J, Z)
org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(J, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(J, J)
org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(J, J)
org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(J, J)
org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(J, J)
org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(J, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(J)
junit.framework.Assert.fail()
910 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testHidden()
Métodos invocados: 
java.io.File.exists()
java.io.File.isHidden()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.io.File.isHidden()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
911 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.setReadOnly()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.io.File.delete()
912 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testCanWrite()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.setReadOnly()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.io.File.delete()
913 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.FileUtils.forceDelete(java.io.File)
914 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter)
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
java.io.File.mkdirs()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.io.File.delete()
java.io.File.delete()
915 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter)
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
java.io.File.mkdirs()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.io.File.delete()
java.io.File.delete()
916 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.filefilter.OrFileFilterTestCase.suite()
junit.textui.TestRunner.run(junit.framework.Test)
917 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.suite()
917 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.OrFileFilterTestCase(java.lang.String)
917 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.filefilter.OrFileFilterTestCase.setUpTestFilters()
918 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingAdd(java.util.List)
Métodos invocados: 
java.util.List.size()
java.util.List.get(I)
org.apache.commons.io.filefilter.OrFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
919 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingConstructor(java.util.List)
919 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.getConditionalFileFilter()
919 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.getDefaultWorkingPath()
919 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.getFalseResults()
919 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.getFileResults()
919 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.getFilenameResults()
919 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.getTestFilters()
919 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.getTrueResults()
919 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.getWorkingPathNamePropertyKey()
919 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.setUpTestFilters()
Métodos invocados: 
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
920 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.IOFileFilterAbstractTestCase(java.lang.String)
920 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering(I, org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
921 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering(I, org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
922 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFiltering(I, org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.getParentFile()
java.lang.Object.getClass()
java.lang.Class.getName()
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
923 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;, [Z)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.isInvoked()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
924 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;, [Z)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.isInvoked()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
925 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.determineWorkingDirectoryPath(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.System.getProperty(java.lang.String, java.lang.String)
926 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.reset()
927 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.reset()
928 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.accept(java.io.File)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.setInvoked(Z)
929 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.setInvoked(Z)
930 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.isInvoked()
930 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.setInvoked(Z)
930 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.reset()
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.setInvoked(Z)
931 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.accept(java.io.File)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.setInvoked(Z)
932 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.setInvoked(Z)
933 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.isInvoked()
933 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.setInvoked(Z)
933 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.reset()
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.setInvoked(Z)
934 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.filefilter.AndFileFilterTestCase.suite()
junit.textui.TestRunner.run(junit.framework.Test)
935 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.suite()
935 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.AndFileFilterTestCase(java.lang.String)
935 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.filefilter.AndFileFilterTestCase.setUpTestFilters()
936 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingAdd(java.util.List)
Métodos invocados: 
java.util.List.size()
java.util.List.get(I)
org.apache.commons.io.filefilter.AndFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
937 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingConstructor(java.util.List)
937 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.getConditionalFileFilter()
937 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.getDefaultWorkingPath()
937 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.getFalseResults()
937 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.getFileResults()
937 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.getFilenameResults()
937 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.getTestFilters()
937 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.getTrueResults()
937 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.getWorkingPathNamePropertyKey()
937 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.setUpTestFilters()
Métodos invocados: 
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
java.util.List.add(I, java.lang.Object)
938 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.ConditionalFileFilterAbstractTestCase(java.lang.String)
938 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getWorkingPathNamePropertyKey()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getDefaultWorkingPath()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.determineWorkingDirectoryPath(java.lang.String, java.lang.String)
939 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testAdd()
Métodos invocados: 
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getConditionalFileFilter()
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.size()
org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters()
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.get(I)
org.apache.commons.io.filefilter.ConditionalFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters()
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters()
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.size()
org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters()
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
940 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testRemove()
Métodos invocados: 
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getConditionalFileFilter()
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.size()
java.util.List.get(I)
org.apache.commons.io.filefilter.ConditionalFileFilter.removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters()
java.util.List.get(I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters()
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
941 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testNoFilters()
Métodos invocados: 
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getConditionalFileFilter()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering(I, org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering(I, org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
942 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor()
Métodos invocados: 
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTestFilters()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTrueResults()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFalseResults()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFileResults()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFilenameResults()
java.util.List.size()
java.util.List.get(I)
java.util.List.get(I)
java.util.List.get(I)
java.util.List.get(I)
java.lang.Boolean.booleanValue()
java.util.List.get(I)
java.lang.Boolean.booleanValue()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.buildFilterUsingConstructor(java.util.List)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering(I, org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;, [Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;, [Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering(I, org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;, [Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;, [Z)
943 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd()
Métodos invocados: 
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTestFilters()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTrueResults()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFalseResults()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFileResults()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFilenameResults()
java.util.List.size()
java.util.List.get(I)
java.util.List.get(I)
java.util.List.get(I)
java.util.List.get(I)
java.lang.Boolean.booleanValue()
java.util.List.get(I)
java.lang.Boolean.booleanValue()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.buildFilterUsingAdd(java.util.List)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering(I, org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;, [Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;, [Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering(I, org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;, [Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;, [Z)
944 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getConditionalFileFilter()
944 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.buildFilterUsingAdd(java.util.List)
944 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.buildFilterUsingConstructor(java.util.List)
944 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTestFilters()
944 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTrueResults()
944 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFalseResults()
944 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFileResults()
944 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFilenameResults()
944 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getWorkingPathNamePropertyKey()
944 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getDefaultWorkingPath()
944 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilterTestCase.RegexFileFilterTestCase(java.lang.String)
944 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilterTestCase.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.filefilter.RegexFileFilterTestCase.suite()
junit.textui.TestRunner.run(junit.framework.Test)
945 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilterTestCase.suite()
945 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilterTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
946 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilterTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
947 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.getParentFile()
java.lang.Object.getClass()
java.lang.Class.getName()
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
948 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex()
Métodos invocados: 
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.util.regex.Pattern.compile(java.lang.String, I)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
junit.framework.Assert.fail()
junit.framework.Assert.fail()
junit.framework.Assert.fail()
junit.framework.Assert.fail()
949 - Declaração do método: org.apache.commons.io.filefilter.PackageTestSuite.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.filefilter.PackageTestSuite.suite()
junit.textui.TestRunner.run(junit.framework.Test)
950 - Declaração do método: org.apache.commons.io.filefilter.PackageTestSuite.suite()
Métodos invocados: 
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
951 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest.NullInputStreamTest(java.lang.String)
951 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest.setUp()
951 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest.tearDown()
951 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest.testRead()
Métodos invocados: 
java.io.InputStream.available()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.available()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.available()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.io.InputStream.close()
java.io.InputStream.available()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
952 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest.testReadByteArray()
Métodos invocados: 
java.io.InputStream.read([B)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read([B)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read([B)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read([B)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.io.InputStream.close()
java.io.InputStream.read([B, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
953 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest.testEOFException()
Métodos invocados: 
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read()
junit.framework.Assert.fail(java.lang.String)
954 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset()
Métodos invocados: 
java.io.InputStream.markSupported()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.InputStream.reset()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.mark(I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.reset()
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.reset()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
955 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported()
Métodos invocados: 
java.io.InputStream.markSupported()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.InputStream.mark(I)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
java.io.InputStream.reset()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
956 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest.testSkip()
Métodos invocados: 
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.skip(J)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.skip(J)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.InputStream.skip(J)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.InputStream.skip(J)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
957 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream.TestNullInputStream(I)
957 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream.TestNullInputStream(I, Z, Z)
957 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream.processByte()
Métodos invocados: 
org.apache.commons.io.input.NullInputStream.getPosition()
958 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream.processBytes([B, I, I)
Métodos invocados: 
org.apache.commons.io.input.NullInputStream.getPosition()
959 - Declaração do método: org.apache.commons.io.input.NullReaderTest.NullReaderTest(java.lang.String)
959 - Declaração do método: org.apache.commons.io.input.NullReaderTest.setUp()
959 - Declaração do método: org.apache.commons.io.input.NullReaderTest.tearDown()
959 - Declaração do método: org.apache.commons.io.input.NullReaderTest.testRead()
Métodos invocados: 
org.apache.commons.io.input.NullReader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.input.NullReader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.input.NullReader.read()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.input.NullReader.close()
org.apache.commons.io.input.NullReader.getPosition()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
960 - Declaração do método: org.apache.commons.io.input.NullReaderTest.testReadCharArray()
Métodos invocados: 
java.io.Reader.read([C)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.read([C)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.read([C)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.read([C)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.io.Reader.close()
java.io.Reader.read([C, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
961 - Declaração do método: org.apache.commons.io.input.NullReaderTest.testEOFException()
Métodos invocados: 
java.io.Reader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.read()
junit.framework.Assert.fail(java.lang.String)
962 - Declaração do método: org.apache.commons.io.input.NullReaderTest.testMarkAndReset()
Métodos invocados: 
java.io.Reader.markSupported()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.Reader.reset()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
java.io.Reader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.mark(I)
java.io.Reader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.reset()
java.io.Reader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.reset()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
963 - Declaração do método: org.apache.commons.io.input.NullReaderTest.testMarkNotSupported()
Métodos invocados: 
java.io.Reader.markSupported()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.Reader.mark(I)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
java.io.Reader.reset()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
964 - Declaração do método: org.apache.commons.io.input.NullReaderTest.testSkip()
Métodos invocados: 
java.io.Reader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.skip(J)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.Reader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.skip(J)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.Reader.skip(J)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.Reader.skip(J)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
965 - Declaração do método: org.apache.commons.io.input.NullReaderTest$TestNullReader.TestNullReader(I)
965 - Declaração do método: org.apache.commons.io.input.NullReaderTest$TestNullReader.TestNullReader(I, Z, Z)
965 - Declaração do método: org.apache.commons.io.input.NullReaderTest$TestNullReader.processChar()
Métodos invocados: 
org.apache.commons.io.input.NullReader.getPosition()
966 - Declaração do método: org.apache.commons.io.input.NullReaderTest$TestNullReader.processChars([C, I, I)
Métodos invocados: 
org.apache.commons.io.input.NullReader.getPosition()
967 - Declaração do método: org.apache.commons.io.input.TeeInputStreamTest.setUp()
Métodos invocados: 
java.lang.String.getBytes(java.lang.String)
968 - Declaração do método: org.apache.commons.io.input.TeeInputStreamTest.testReadNothing()
Métodos invocados: 
java.io.ByteArrayOutputStream.toString(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
969 - Declaração do método: org.apache.commons.io.input.TeeInputStreamTest.testReadOneByte()
Métodos invocados: 
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.ByteArrayOutputStream.toString(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
970 - Declaração do método: org.apache.commons.io.input.TeeInputStreamTest.testReadEverything()
Métodos invocados: 
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.ByteArrayOutputStream.toString(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
971 - Declaração do método: org.apache.commons.io.input.TeeInputStreamTest.testReadToArray()
Métodos invocados: 
java.io.InputStream.read([B)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read([B)
junit.framework.Assert.assertEquals(I, I)
java.io.ByteArrayOutputStream.toString(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
972 - Declaração do método: org.apache.commons.io.input.TeeInputStreamTest.testReadToArrayWithOffset()
Métodos invocados: 
java.io.InputStream.read([B, I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read([B, I, I)
junit.framework.Assert.assertEquals(I, I)
java.io.ByteArrayOutputStream.toString(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
973 - Declaração do método: org.apache.commons.io.input.TeeInputStreamTest.testSkip()
Métodos invocados: 
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.skip(J)
junit.framework.Assert.assertEquals(J, J)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.ByteArrayOutputStream.toString(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
974 - Declaração do método: org.apache.commons.io.input.TeeInputStreamTest.testMarkReset()
Métodos invocados: 
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.mark(I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.reset()
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.ByteArrayOutputStream.toString(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
975 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.SwappedDataInputStreamTest(java.lang.String)
975 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.setUp()
975 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.tearDown()
975 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readBoolean()
junit.framework.Assert.assertEquals(Z, Z)
976 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadByte()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readByte()
junit.framework.Assert.assertEquals(I, I)
977 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadChar()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readChar()
junit.framework.Assert.assertEquals(C, C)
978 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadDouble()
Métodos invocados: 
java.lang.Double.longBitsToDouble(J)
org.apache.commons.io.input.SwappedDataInputStream.readDouble()
junit.framework.Assert.assertEquals(D, D, D)
979 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFloat()
Métodos invocados: 
java.lang.Float.intBitsToFloat(I)
org.apache.commons.io.input.SwappedDataInputStream.readFloat()
junit.framework.Assert.assertEquals(F, F, F)
980 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readFully([B)
junit.framework.Assert.assertEquals(B, B)
981 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadInt()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readInt()
junit.framework.Assert.assertEquals(I, I)
982 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLine()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readLine()
junit.framework.Assert.fail(java.lang.String)
983 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readLong()
junit.framework.Assert.assertEquals(J, J)
984 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadShort()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readShort()
junit.framework.Assert.assertEquals(S, S)
985 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedByte()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readUnsignedByte()
junit.framework.Assert.assertEquals(I, I)
986 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readUnsignedShort()
junit.framework.Assert.assertEquals(I, I)
987 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUTF()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readUTF()
junit.framework.Assert.fail(java.lang.String)
988 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.skipBytes(I)
org.apache.commons.io.input.SwappedDataInputStream.readInt()
junit.framework.Assert.assertEquals(I, I)
989 - Declaração do método: org.apache.commons.io.input.PackageTestSuite.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.input.PackageTestSuite.suite()
junit.textui.TestRunner.run(junit.framework.Test)
990 - Declaração do método: org.apache.commons.io.input.PackageTestSuite.suite()
Métodos invocados: 
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
991 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.CountingInputStreamTest(java.lang.String)
991 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testCounting()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.io.input.CountingInputStream.read([B)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.read()
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.read([B, I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.read([B, I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
java.lang.String.trim()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
992 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84()
Métodos invocados: 
org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.input.CountingInputStream.resetCount()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.input.NullInputStream.close()
org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream)
org.apache.commons.io.input.CountingInputStream.getByteCount()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
org.apache.commons.io.input.CountingInputStream.resetByteCount()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
993 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testResetting()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.io.input.CountingInputStream.read([B, I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.resetCount()
org.apache.commons.io.input.CountingInputStream.read([B, I, I)
junit.framework.Assert.assertEquals(I, I)
994 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testZeroLength1()
Métodos invocados: 
org.apache.commons.io.input.CountingInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
995 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testZeroLength2()
Métodos invocados: 
org.apache.commons.io.input.CountingInputStream.read([B)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
996 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3()
Métodos invocados: 
org.apache.commons.io.input.CountingInputStream.read([B, I, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
997 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testEOF1()
Métodos invocados: 
org.apache.commons.io.input.CountingInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
998 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testEOF2()
Métodos invocados: 
org.apache.commons.io.input.CountingInputStream.read([B)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
999 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testEOF3()
Métodos invocados: 
org.apache.commons.io.input.CountingInputStream.read([B, I, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
1000 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testSkipping()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.io.input.CountingInputStream.skip(J)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.read([B)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
1001 - Declaração do método: org.apache.commons.io.input.ClosedInputStreamTest.testRead()
Métodos invocados: 
org.apache.commons.io.input.ClosedInputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1002 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.CharSequenceReaderTest(java.lang.String)
1002 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.testClose()
Métodos invocados: 
org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader, java.lang.String)
java.io.Reader.close()
org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader, java.lang.String)
1003 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.testMarkSupported()
Métodos invocados: 
java.io.Reader.markSupported()
junit.framework.Assert.assertTrue(Z)
1004 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.testMark()
Métodos invocados: 
org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader, java.lang.String)
java.io.Reader.mark(I)
org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader, java.lang.String)
java.io.Reader.reset()
org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader, java.lang.String)
java.io.Reader.close()
org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader, java.lang.String)
java.io.Reader.reset()
org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader, java.lang.String)
1005 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.testSkip()
Métodos invocados: 
java.io.Reader.skip(J)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader, java.lang.String)
java.io.Reader.skip(J)
junit.framework.Assert.assertEquals(J, J)
java.io.Reader.reset()
java.io.Reader.skip(J)
junit.framework.Assert.assertEquals(J, J)
java.io.Reader.skip(J)
junit.framework.Assert.assertEquals(J, J)
java.io.Reader.skip(J)
junit.framework.Assert.assertEquals(J, J)
java.io.Reader.close()
java.io.Reader.skip(J)
junit.framework.Assert.assertEquals(J, J)
java.io.Reader.read()
junit.framework.Assert.assertEquals(I, I)
1006 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.testRead()
Métodos invocados: 
java.io.Reader.read()
junit.framework.Assert.assertEquals(I, I)
java.io.Reader.read()
junit.framework.Assert.assertEquals(I, I)
java.io.Reader.read()
junit.framework.Assert.assertEquals(I, I)
java.io.Reader.read()
junit.framework.Assert.assertEquals(I, I)
java.io.Reader.read()
junit.framework.Assert.assertEquals(I, I)
1007 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray()
Métodos invocados: 
java.io.Reader.read([C)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CharSequenceReaderTest.checkArray([C, [C)
java.io.Reader.read([C)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CharSequenceReaderTest.checkArray([C, [C)
java.io.Reader.read([C)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CharSequenceReaderTest.checkArray([C, [C)
java.io.Reader.read([C)
junit.framework.Assert.assertEquals(I, I)
1008 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion()
Métodos invocados: 
java.io.Reader.read([C, I, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CharSequenceReaderTest.checkArray([C, [C)
java.io.Reader.read([C, I, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CharSequenceReaderTest.checkArray([C, [C)
java.io.Reader.read([C)
junit.framework.Assert.assertEquals(I, I)
1009 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader, java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.charAt(I)
java.io.Reader.read()
junit.framework.Assert.assertEquals(java.lang.String, C, C)
1010 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.checkArray([C, [C)
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.String, C, C)
1011 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStreamTest.setUp()
1011 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStreamTest$1.close()
1011 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStreamTest.testClose()
Métodos invocados: 
java.io.InputStream.close()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1012 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStreamTest.testRead()
Métodos invocados: 
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1013 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBuffer()
Métodos invocados: 
java.io.InputStream.read([B)
junit.framework.Assert.assertFalse(java.lang.String, Z)
junit.framework.Assert.assertEquals(java.lang.String, B, B)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.InputStream.read([B)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1014 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBufferOffsetLength()
Métodos invocados: 
java.io.InputStream.read([B, I, I)
junit.framework.Assert.assertFalse(java.lang.String, Z)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, B, B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.InputStream.read([B, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1015 - Declaração do método: org.apache.commons.io.input.CloseShieldInputStreamTest.setUp()
1015 - Declaração do método: org.apache.commons.io.input.CloseShieldInputStreamTest$1.close()
1015 - Declaração do método: org.apache.commons.io.input.CloseShieldInputStreamTest.testClose()
Métodos invocados: 
java.io.InputStream.close()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1016 - Declaração do método: org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.ClassLoaderObjectInputStreamTest(java.lang.String)
1016 - Declaração do método: org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testExpected()
Métodos invocados: 
java.io.ObjectOutputStream.writeObject(java.lang.Object)
java.io.ByteArrayOutputStream.toByteArray()
java.lang.Object.getClass()
java.lang.Class.getClassLoader()
java.io.ObjectInputStream.readObject()
java.lang.Boolean.booleanValue()
junit.framework.Assert.assertTrue(Z)
1017 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserverTestCase.FilesystemObserverTestCase(java.lang.String)
1017 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserverTestCase.setUp()
Métodos invocados: 
java.io.File.exists()
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
java.io.File.mkdir()
org.apache.commons.io.filefilter.FileFilterUtils.fileFileFilter()
org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter()
org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.orFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.monitor.FilesystemObserverTestCase.createObserver(java.io.File, java.io.FileFilter)
1018 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserverTestCase.createObserver(java.io.File, java.io.FileFilter)
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemObserver.addListener(org.apache.commons.io.monitor.FilesystemListener)
org.apache.commons.io.monitor.FilesystemObserver.initialize()
junit.framework.Assert.fail(java.lang.String)
1019 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserverTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
1020 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserverTestCase.testDirectory()
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionsEmpty(java.lang.String)
java.io.File.mkdir()
java.io.File.mkdir()
java.io.File.mkdir()
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedDirectories()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedDirectories()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedDirectories()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionsEmpty(java.lang.String)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedDirectories()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getChangedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedDirectories()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.mkdir()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionsEmpty(java.lang.String)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionsEmpty(java.lang.String)
java.lang.Throwable.printStackTrace()
junit.framework.Assert.fail(java.lang.String)
1021 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserverTestCase.testFileCreate()
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionsEmpty(java.lang.String)
java.io.File.mkdir()
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionsEmpty(java.lang.String)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
junit.framework.Assert.fail(java.lang.String)
1022 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserverTestCase.testFileUpdate()
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionsEmpty(java.lang.String)
java.io.File.mkdir()
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionsEmpty(java.lang.String)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFilesystemListener.getChangedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFilesystemListener.getChangedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFilesystemListener.getChangedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
junit.framework.Assert.fail(java.lang.String)
1023 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserverTestCase.testFileDelete()
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionsEmpty(java.lang.String)
java.io.File.mkdir()
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionsEmpty(java.lang.String)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
junit.framework.Assert.fail(java.lang.String)
1024 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserverTestCase.testObserveSingleFile()
Métodos invocados: 
java.io.File.mkdir()
java.io.File.getName()
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.monitor.FilesystemObserverTestCase.createObserver(java.io.File, java.io.FileFilter)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionsEmpty(java.lang.String)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFilesystemListener.getChangedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getChangedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getChangedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
junit.framework.Assert.fail(java.lang.String)
1025 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserverTestCase.checkAndNotify()
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemObserver.checkAndNotify()
1026 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionsEmpty(java.lang.String)
Métodos invocados: 
org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
1027 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserverTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
Métodos invocados: 
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedDirectories()
java.util.Collection.size()
org.apache.commons.io.monitor.CollectionFilesystemListener.getChangedDirectories()
java.util.Collection.size()
org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedDirectories()
java.util.Collection.size()
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.size()
org.apache.commons.io.monitor.CollectionFilesystemListener.getChangedFiles()
java.util.Collection.size()
org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedFiles()
java.util.Collection.size()
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedDirectories()
java.util.Collection.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.monitor.CollectionFilesystemListener.getChangedDirectories()
java.util.Collection.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedDirectories()
java.util.Collection.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
java.util.Collection.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.monitor.CollectionFilesystemListener.getChangedFiles()
java.util.Collection.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedFiles()
java.util.Collection.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1028 - Declaração do método: org.apache.commons.io.monitor.FilesystemObserverTestCase.touch(java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.lastModified()
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.lastModified()
java.lang.Thread.sleep(J)
org.apache.commons.io.FileUtils.touch(java.io.File)
junit.framework.Assert.fail(java.lang.String)
1029 - Declaração do método: org.apache.commons.io.monitor.CollectionFilesystemListener.onStart(org.apache.commons.io.monitor.FilesystemObserver)
Métodos invocados: 
java.util.Collection.clear()
java.util.Collection.clear()
java.util.Collection.clear()
java.util.Collection.clear()
java.util.Collection.clear()
java.util.Collection.clear()
1030 - Declaração do método: org.apache.commons.io.monitor.CollectionFilesystemListener.getChangedDirectories()
1030 - Declaração do método: org.apache.commons.io.monitor.CollectionFilesystemListener.getChangedFiles()
1030 - Declaração do método: org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedDirectories()
1030 - Declaração do método: org.apache.commons.io.monitor.CollectionFilesystemListener.getCreatedFiles()
1030 - Declaração do método: org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedDirectories()
1030 - Declaração do método: org.apache.commons.io.monitor.CollectionFilesystemListener.getDeletedFiles()
1030 - Declaração do método: org.apache.commons.io.monitor.CollectionFilesystemListener.onDirectoryCreate(java.io.File)
Métodos invocados: 
java.util.Collection.add(java.io.File)
1031 - Declaração do método: org.apache.commons.io.monitor.CollectionFilesystemListener.onDirectoryChange(java.io.File)
Métodos invocados: 
java.util.Collection.add(java.io.File)
1032 - Declaração do método: org.apache.commons.io.monitor.CollectionFilesystemListener.onDirectoryDelete(java.io.File)
Métodos invocados: 
java.util.Collection.add(java.io.File)
1033 - Declaração do método: org.apache.commons.io.monitor.CollectionFilesystemListener.onFileCreate(java.io.File)
Métodos invocados: 
java.util.Collection.add(java.io.File)
1034 - Declaração do método: org.apache.commons.io.monitor.CollectionFilesystemListener.onFileChange(java.io.File)
Métodos invocados: 
java.util.Collection.add(java.io.File)
1035 - Declaração do método: org.apache.commons.io.monitor.CollectionFilesystemListener.onFileDelete(java.io.File)
Métodos invocados: 
java.util.Collection.add(java.io.File)
1036 - Declaração do método: org.apache.commons.io.monitor.CollectionFilesystemListener.onStop(org.apache.commons.io.monitor.FilesystemObserver)
1036 - Declaração do método: org.apache.commons.io.output.NullWriterTest.NullWriterTest(java.lang.String)
1036 - Declaração do método: org.apache.commons.io.output.NullWriterTest.testNull()
Métodos invocados: 
org.apache.commons.io.output.NullWriter.write(I)
org.apache.commons.io.output.NullWriter.write([C)
org.apache.commons.io.output.NullWriter.write([C, I, I)
org.apache.commons.io.output.NullWriter.write(java.lang.String)
org.apache.commons.io.output.NullWriter.write(java.lang.String, I, I)
org.apache.commons.io.output.NullWriter.flush()
org.apache.commons.io.output.NullWriter.close()
1037 - Declaração do método: org.apache.commons.io.output.CloseShieldOutputStreamTest.setUp()
1037 - Declaração do método: org.apache.commons.io.output.CloseShieldOutputStreamTest$1.close()
1037 - Declaração do método: org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose()
Métodos invocados: 
java.io.OutputStream.close()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.OutputStream.write(I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStream.write(I)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(I, I)
1038 - Declaração do método: org.apache.commons.io.output.NullOutputStreamTest.NullOutputStreamTest(java.lang.String)
1038 - Declaração do método: org.apache.commons.io.output.NullOutputStreamTest.testNull()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.io.output.NullOutputStream.write([B)
java.lang.String.getBytes()
org.apache.commons.io.output.NullOutputStream.write([B, I, I)
org.apache.commons.io.output.NullOutputStream.write(I)
org.apache.commons.io.output.NullOutputStream.write(I)
java.io.OutputStream.flush()
java.io.OutputStream.close()
java.lang.String.getBytes()
org.apache.commons.io.output.NullOutputStream.write([B)
org.apache.commons.io.output.NullOutputStream.write(I)
1039 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.DeferredFileOutputStreamTest(java.lang.String)
1039 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold()
Métodos invocados: 
org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
org.apache.commons.io.output.DeferredFileOutputStream.close()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.output.DeferredFileOutputStream.getData()
junit.framework.Assert.assertTrue(Z)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(Z)
1040 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold()
Métodos invocados: 
org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
org.apache.commons.io.output.DeferredFileOutputStream.close()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.output.DeferredFileOutputStream.getData()
junit.framework.Assert.assertTrue(Z)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(Z)
1041 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold()
Métodos invocados: 
java.io.File.delete()
org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
org.apache.commons.io.output.DeferredFileOutputStream.close()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.output.DeferredFileOutputStream.getData()
junit.framework.Assert.assertNull(java.lang.Object)
org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(java.io.File)
java.io.File.delete()
1042 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached()
Métodos invocados: 
java.io.File.delete()
org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
org.apache.commons.io.output.DeferredFileOutputStream.close()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.output.DeferredFileOutputStream.getData()
junit.framework.Assert.assertNull(java.lang.Object)
org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(java.io.File)
java.io.File.delete()
1043 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall()
Métodos invocados: 
java.io.File.delete()
org.apache.commons.io.output.ThresholdingOutputStream.write([B)
java.io.File.exists()
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.output.DeferredFileOutputStream.writeTo(java.io.OutputStream)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.close()
org.apache.commons.io.output.DeferredFileOutputStream.writeTo(java.io.OutputStream)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(Z)
java.io.File.delete()
1044 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge()
Métodos invocados: 
java.io.File.delete()
org.apache.commons.io.output.ThresholdingOutputStream.write([B)
java.io.File.exists()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.output.DeferredFileOutputStream.writeTo(java.io.OutputStream)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.close()
org.apache.commons.io.output.DeferredFileOutputStream.writeTo(java.io.OutputStream)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(java.io.File)
java.io.File.delete()
1045 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold()
Métodos invocados: 
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
org.apache.commons.io.output.DeferredFileOutputStream.close()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
1046 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold()
Métodos invocados: 
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
org.apache.commons.io.output.DeferredFileOutputStream.close()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.output.DeferredFileOutputStream.getData()
junit.framework.Assert.assertNull(java.lang.Object)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
java.io.File.getName()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
java.io.File.getName()
java.lang.String.endsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.getPath()
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
java.io.File.getParent()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(java.io.File)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
java.io.File.delete()
1047 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly()
Métodos invocados: 
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
org.apache.commons.io.output.DeferredFileOutputStream.close()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.output.DeferredFileOutputStream.getData()
junit.framework.Assert.assertNull(java.lang.Object)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
java.io.File.getName()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
java.io.File.getName()
java.lang.String.endsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(java.io.File)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
java.io.File.delete()
1048 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
1049 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(java.io.File)
Métodos invocados: 
java.io.FileInputStream.available()
junit.framework.Assert.assertTrue(Z)
java.io.FileInputStream.read([B)
junit.framework.Assert.assertTrue(Z)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(Z)
java.io.FileInputStream.read([B)
junit.framework.Assert.assertTrue(Z)
java.io.FileInputStream.close()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
1050 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncodingTest.FileWriterWithEncodingTest(java.lang.String)
1050 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncodingTest.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.OutputStreamWriter.getEncoding()
java.lang.Throwable.getMessage()
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
1051 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncodingTest.tearDown()
Métodos invocados: 
java.io.File.delete()
java.io.File.delete()
1052 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding()
Métodos invocados: 
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.Writer.write(java.lang.String)
org.apache.commons.io.output.FileWriterWithEncoding.write(java.lang.String)
java.io.OutputStreamWriter.flush()
org.apache.commons.io.output.FileWriterWithEncoding.flush()
org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File, java.io.File)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1053 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding()
Métodos invocados: 
java.nio.charset.Charset.availableCharsets()
java.util.Map.containsKey(java.lang.Object)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.Writer.write(java.lang.String)
org.apache.commons.io.output.FileWriterWithEncoding.write(java.lang.String)
java.io.OutputStreamWriter.flush()
org.apache.commons.io.output.FileWriterWithEncoding.flush()
org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File, java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.util.Map.containsKey(java.lang.Object)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.Writer.write(java.lang.String)
org.apache.commons.io.output.FileWriterWithEncoding.write(java.lang.String)
java.io.OutputStreamWriter.flush()
org.apache.commons.io.output.FileWriterWithEncoding.flush()
org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File, java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1054 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_encoding_badEncoding()
Métodos invocados: 
junit.framework.Assert.fail()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1055 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.Assert.fail()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1056 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile()
Métodos invocados: 
junit.framework.Assert.fail()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1057 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_fileName_nullFile()
Métodos invocados: 
junit.framework.Assert.fail()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1058 - Declaração do método: org.apache.commons.io.output.PackageTestSuite.main([Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.output.PackageTestSuite.suite()
junit.textui.TestRunner.run(junit.framework.Test)
1059 - Declaração do método: org.apache.commons.io.output.PackageTestSuite.suite()
Métodos invocados: 
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
junit.framework.TestSuite.addTest(junit.framework.Test)
1060 - Declaração do método: org.apache.commons.io.output.ClosedOutputStreamTest.testRead()
Métodos invocados: 
org.apache.commons.io.output.ClosedOutputStream.write(I)
junit.framework.Assert.fail(java.lang.String)
1061 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.LockableFileWriterTest(java.lang.String)
1061 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.lang.System.getProperty(java.lang.String)
java.io.File.getName()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.getName()
1062 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.tearDown()
Métodos invocados: 
java.io.File.delete()
java.io.File.delete()
java.io.File.delete()
1063 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.testFileLocked()
Métodos invocados: 
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1064 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir()
Métodos invocados: 
java.io.File.getAbsolutePath()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.getAbsolutePath()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1065 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked()
Métodos invocados: 
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1066 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding()
Métodos invocados: 
junit.framework.Assert.fail()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1067 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.Assert.fail()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1068 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile()
Métodos invocados: 
junit.framework.Assert.fail()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1069 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile()
Métodos invocados: 
junit.framework.Assert.fail()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1070 - Declaração do método: org.apache.commons.io.output.CountingOutputStreamTest.CountingOutputStreamTest(java.lang.String)
1070 - Declaração do método: org.apache.commons.io.output.CountingOutputStreamTest.testCounting()
Métodos invocados: 
org.apache.commons.io.output.CountingOutputStream.write(I)
java.io.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals(java.lang.String, [B, I, I)
org.apache.commons.io.output.CountingOutputStream.getCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.CountingOutputStream.write([B)
java.io.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals(java.lang.String, [B, I, I)
org.apache.commons.io.output.CountingOutputStream.getCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.CountingOutputStream.write([B, I, I)
java.io.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals(java.lang.String, [B, I, I)
org.apache.commons.io.output.CountingOutputStream.getCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.CountingOutputStream.resetCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.CountingOutputStream.write(I)
java.io.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals(java.lang.String, [B, I, I)
org.apache.commons.io.output.CountingOutputStream.getCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1071 - Declaração do método: org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84()
Métodos invocados: 
org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream)
org.apache.commons.io.output.CountingOutputStream.getCount()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.CountingOutputStream.resetCount()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.input.NullInputStream.close()
org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream)
org.apache.commons.io.output.CountingOutputStream.getByteCount()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
org.apache.commons.io.output.CountingOutputStream.resetByteCount()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
1072 - Declaração do método: org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals(java.lang.String, [B, I, I)
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1073 - Declaração do método: org.apache.commons.io.output.TeeOutputStreamTest.TeeOutputStreamTest(java.lang.String)
1073 - Declaração do método: org.apache.commons.io.output.TeeOutputStreamTest.testTee()
Métodos invocados: 
org.apache.commons.io.output.TeeOutputStream.write(I)
java.io.ByteArrayOutputStream.toByteArray()
java.io.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.TeeOutputStreamTest.assertByteArrayEquals(java.lang.String, [B, [B)
org.apache.commons.io.output.TeeOutputStream.write([B)
java.io.ByteArrayOutputStream.toByteArray()
java.io.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.TeeOutputStreamTest.assertByteArrayEquals(java.lang.String, [B, [B)
org.apache.commons.io.output.TeeOutputStream.write([B, I, I)
java.io.ByteArrayOutputStream.toByteArray()
java.io.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.TeeOutputStreamTest.assertByteArrayEquals(java.lang.String, [B, [B)
1074 - Declaração do método: org.apache.commons.io.output.TeeOutputStreamTest.assertByteArrayEquals(java.lang.String, [B, [B)
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, B, B)
1075 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.StringBuilderWriterTest(java.lang.String)
1075 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructCapacity()
Métodos invocados: 
java.io.Writer.append(java.lang.CharSequence)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1076 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder()
Métodos invocados: 
org.apache.commons.io.output.StringBuilderWriter.append(java.lang.CharSequence)
org.apache.commons.io.output.StringBuilderWriter.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.output.StringBuilderWriter.getBuilder()
junit.framework.Assert.assertTrue(Z)
1077 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructNull()
Métodos invocados: 
java.io.Writer.append(java.lang.CharSequence)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1078 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testAppendChar()
Métodos invocados: 
java.io.Writer.append(C)
java.io.Writer.append(C)
java.io.Writer.append(C)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1079 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequence()
Métodos invocados: 
java.io.Writer.append(java.lang.CharSequence)
java.io.Writer.append(java.lang.CharSequence)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1080 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequencePortion()
Métodos invocados: 
java.io.Writer.append(java.lang.CharSequence, I, I)
java.io.Writer.append(java.lang.CharSequence, I, I)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1081 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testClose()
Métodos invocados: 
java.io.Writer.append(java.lang.CharSequence)
java.io.Writer.close()
java.io.Writer.append(java.lang.CharSequence)
junit.framework.Assert.fail(java.lang.String)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1082 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testWriteChar()
Métodos invocados: 
java.io.Writer.write(I)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.io.Writer.write(I)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.io.Writer.write(I)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1083 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArray()
Métodos invocados: 
java.io.Writer.write([C)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.io.Writer.write([C)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1084 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArrayPortion()
Métodos invocados: 
java.io.Writer.write([C, I, I)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.io.Writer.write([C, I, I)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1085 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testWriteString()
Métodos invocados: 
java.io.Writer.write(java.lang.String)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.io.Writer.write(java.lang.String)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1086 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testWriteStringPortion()
Métodos invocados: 
java.io.Writer.write(java.lang.String, I, I)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.io.Writer.write(java.lang.String, I, I)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1087 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStreamTestCase.ByteArrayOutputStreamTestCase(java.lang.String)
1087 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream, I)
Métodos invocados: 
org.apache.commons.io.output.ByteArrayOutputStream.write(I)
java.io.ByteArrayOutputStream.write(I)
org.apache.commons.io.output.ByteArrayOutputStream.write([B, I, I)
java.io.ByteArrayOutputStream.write([B, I, I)
1088 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream, [I)
Métodos invocados: 
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream, I)
1089 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStreamTestCase.byteCmp([B, [B)
1089 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkByteArrays([B, [B)
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.byteCmp([B, [B)
junit.framework.Assert.fail(java.lang.String)
1090 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream)
Métodos invocados: 
java.io.ByteArrayOutputStream.size()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.io.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkByteArrays([B, [B)
1091 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream()
Métodos invocados: 
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream, [I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream)
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream, [I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.reset()
java.io.ByteArrayOutputStream.reset()
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream, [I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.reset()
java.io.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.ByteArrayOutputStream.write(java.io.InputStream)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream)
java.io.ByteArrayOutputStream.writeTo(java.io.OutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.writeTo(java.io.OutputStream)
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.toString(java.lang.String)
java.io.ByteArrayOutputStream.toString(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
1092 - Declaração do método: org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(java.io.InputStream)
1092 - Declaração do método: org.apache.commons.io.testtools.YellOnCloseInputStream.close()
1092 - Declaração do método: org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(java.io.OutputStream, Z, Z)
1092 - Declaração do método: org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
1092 - Declaração do método: org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.close()
1092 - Declaração do método: org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
1092 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(java.lang.String)
1092 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
Métodos invocados: 
java.io.File.getAbsoluteFile()
java.io.File.mkdirs()
1093 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
Métodos invocados: 
java.io.File.getParentFile()
java.io.File.exists()
org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(java.io.OutputStream, J)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
1094 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(J)
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(java.io.OutputStream, J)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.lang.Throwable.getMessage()
1095 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(java.io.OutputStream, J)
Métodos invocados: 
java.io.OutputStream.write(I)
1096 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File, [Ljava.lang.String;)
Métodos invocados: 
java.io.File.getParentFile()
java.io.File.getParentFile()
java.io.File.exists()
java.io.PrintWriter.println(java.lang.String)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
1097 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
org.apache.commons.io.FileUtils.forceDelete(java.io.File)
1098 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(java.io.File, java.io.File)
1099 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(java.io.File, java.io.File)
Métodos invocados: 
java.io.InputStream.read([B)
java.io.InputStream.read([B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.InputStream.close()
java.io.InputStream.close()
1100 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([B, java.io.File)
Métodos invocados: 
java.io.InputStream.read([B, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, B, B)
java.io.InputStream.close()
1101 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([C, java.io.File)
Métodos invocados: 
java.io.Reader.read([C, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, C, C)
java.io.Reader.close()
1102 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(java.io.OutputStream)
Métodos invocados: 
java.io.PrintStream.write(I)
java.lang.Throwable.getMessage()
1103 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(java.io.Writer)
Métodos invocados: 
java.io.PrintWriter.write(I)
java.lang.Throwable.getMessage()
1104 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.delete()
junit.framework.Assert.assertTrue(java.lang.String, Z)
