1 - Declaração do método: org.springframework.security.acls.AclPermissionEvaluator.AclPermissionEvaluator(org.springframework.security.acls.model.AclService)
1 - Declaração do método: org.springframework.security.acls.AclPermissionEvaluator.hasPermission(org.springframework.security.core.Authentication, java.lang.Object, java.lang.Object)
Métodos invocados: 
org.springframework.security.acls.model.ObjectIdentityRetrievalStrategy.getObjectIdentity(java.lang.Object)
org.springframework.security.acls.AclPermissionEvaluator.checkPermission(org.springframework.security.core.Authentication, org.springframework.security.acls.model.ObjectIdentity, java.lang.Object)
2 - Declaração do método: org.springframework.security.acls.AclPermissionEvaluator.hasPermission(org.springframework.security.core.Authentication, java.io.Serializable, java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.security.acls.model.ObjectIdentityGenerator.createObjectIdentity(java.io.Serializable, java.lang.String)
org.springframework.security.acls.AclPermissionEvaluator.checkPermission(org.springframework.security.core.Authentication, org.springframework.security.acls.model.ObjectIdentity, java.lang.Object)
3 - Declaração do método: org.springframework.security.acls.AclPermissionEvaluator.checkPermission(org.springframework.security.core.Authentication, org.springframework.security.acls.model.ObjectIdentity, java.lang.Object)
Métodos invocados: 
org.springframework.security.acls.model.SidRetrievalStrategy.getSids(org.springframework.security.core.Authentication)
org.springframework.security.acls.AclPermissionEvaluator.resolvePermission(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acls.model.AclService.readAclById(org.springframework.security.acls.model.ObjectIdentity, java.util.List)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
4 - Declaração do método: org.springframework.security.acls.AclPermissionEvaluator.resolvePermission(java.lang.Object)
Métodos invocados: 
java.lang.Integer.intValue()
org.springframework.security.acls.domain.PermissionFactory.buildFromMask(I)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Permission;)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Permission;)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Permission;)
org.springframework.security.acls.domain.PermissionFactory.buildFromName(java.lang.String)
java.lang.String.toUpperCase()
org.springframework.security.acls.domain.PermissionFactory.buildFromName(java.lang.String)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Permission;)
5 - Declaração do método: org.springframework.security.acls.AclPermissionEvaluator.setObjectIdentityRetrievalStrategy(org.springframework.security.acls.model.ObjectIdentityRetrievalStrategy)
5 - Declaração do método: org.springframework.security.acls.AclPermissionEvaluator.setObjectIdentityGenerator(org.springframework.security.acls.model.ObjectIdentityGenerator)
5 - Declaração do método: org.springframework.security.acls.AclPermissionEvaluator.setSidRetrievalStrategy(org.springframework.security.acls.model.SidRetrievalStrategy)
5 - Declaração do método: org.springframework.security.acls.AclPermissionEvaluator.setPermissionFactory(org.springframework.security.acls.domain.PermissionFactory)
5 - Declaração do método: org.springframework.security.acls.AclEntryVoter.AclEntryVoter(org.springframework.security.acls.model.AclService, java.lang.String, [Lorg.springframework.security.acls.model.Permission;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Permission;)
6 - Declaração do método: org.springframework.security.acls.AclEntryVoter.getInternalMethod()
6 - Declaração do método: org.springframework.security.acls.AclEntryVoter.setInternalMethod(java.lang.String)
6 - Declaração do método: org.springframework.security.acls.AclEntryVoter.getProcessConfigAttribute()
6 - Declaração do método: org.springframework.security.acls.AclEntryVoter.setObjectIdentityRetrievalStrategy(org.springframework.security.acls.model.ObjectIdentityRetrievalStrategy)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
7 - Declaração do método: org.springframework.security.acls.AclEntryVoter.setSidRetrievalStrategy(org.springframework.security.acls.model.SidRetrievalStrategy)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
8 - Declaração do método: org.springframework.security.acls.AclEntryVoter.supports(org.springframework.security.access.ConfigAttribute)
Métodos invocados: 
org.springframework.security.access.ConfigAttribute.getAttribute()
org.springframework.security.access.ConfigAttribute.getAttribute()
org.springframework.security.acls.AclEntryVoter.getProcessConfigAttribute()
java.lang.String.equals(java.lang.Object)
9 - Declaração do método: org.springframework.security.acls.AclEntryVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
Métodos invocados: 
org.springframework.security.acls.AclEntryVoter.supports(org.springframework.security.access.ConfigAttribute)
org.springframework.security.access.vote.AbstractAclVoter.getDomainObjectInstance(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
java.lang.Object.getClass()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.springframework.security.acls.model.ObjectIdentityRetrievalStrategy.getObjectIdentity(java.lang.Object)
org.springframework.security.acls.model.SidRetrievalStrategy.getSids(org.springframework.security.core.Authentication)
org.springframework.security.acls.model.AclService.readAclById(org.springframework.security.acls.model.ObjectIdentity, java.util.List)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
10 - Declaração do método: org.springframework.security.acls.AclPermissionCacheOptimizer.AclPermissionCacheOptimizer(org.springframework.security.acls.model.AclService)
10 - Declaração do método: org.springframework.security.acls.AclPermissionCacheOptimizer.cachePermissionsFor(org.springframework.security.core.Authentication, java.util.Collection)
Métodos invocados: 
java.util.Collection.size()
org.springframework.security.acls.model.ObjectIdentityRetrievalStrategy.getObjectIdentity(java.lang.Object)
java.util.List.add(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.SidRetrievalStrategy.getSids(org.springframework.security.core.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
java.util.List.size()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acls.model.AclService.readAclsById(java.util.List, java.util.List)
11 - Declaração do método: org.springframework.security.acls.AclPermissionCacheOptimizer.setObjectIdentityRetrievalStrategy(org.springframework.security.acls.model.ObjectIdentityRetrievalStrategy)
11 - Declaração do método: org.springframework.security.acls.AclPermissionCacheOptimizer.setSidRetrievalStrategy(org.springframework.security.acls.model.SidRetrievalStrategy)
11 - Declaração do método: org.springframework.security.acls.afterinvocation.ArrayFilterer.ArrayFilterer([Ljava.lang.Object;)
11 - Declaração do método: org.springframework.security.acls.afterinvocation.ArrayFilterer.getFilteredObject()
Métodos invocados: 
java.util.Set.size()
java.lang.Object.getClass()
java.lang.Class.getComponentType()
java.lang.reflect.Array.newInstance(java.lang.Class, I)
java.util.Set.contains(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
12 - Declaração do método: org.springframework.security.acls.afterinvocation.ArrayFilterer.iterator()
Métodos invocados: 
org.springframework.security.acls.afterinvocation.ArrayFilterer$1.hasNext()
13 - Declaração do método: org.springframework.security.acls.afterinvocation.ArrayFilterer$1.hasNext()
13 - Declaração do método: org.springframework.security.acls.afterinvocation.ArrayFilterer$1.next()
Métodos invocados: 
org.springframework.security.acls.afterinvocation.ArrayFilterer$1.hasNext()
14 - Declaração do método: org.springframework.security.acls.afterinvocation.ArrayFilterer$1.remove()
14 - Declaração do método: org.springframework.security.acls.afterinvocation.ArrayFilterer.remove(org.springframework.security.acls.afterinvocation.ArrayFilterer$T)
Métodos invocados: 
java.util.Set.add(org.springframework.security.acls.afterinvocation.ArrayFilterer$T)
15 - Declaração do método: org.springframework.security.acls.afterinvocation.AclEntryAfterInvocationCollectionFilteringProvider.AclEntryAfterInvocationCollectionFilteringProvider(org.springframework.security.acls.model.AclService, java.util.List)
15 - Declaração do método: org.springframework.security.acls.afterinvocation.AclEntryAfterInvocationCollectionFilteringProvider.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection, java.lang.Object)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acls.afterinvocation.AbstractAclProvider.supports(org.springframework.security.access.ConfigAttribute)
java.lang.Object.getClass()
java.lang.Class.isArray()
org.springframework.security.acls.afterinvocation.AbstractAclProvider.getProcessDomainObjectClass()
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
org.springframework.security.acls.afterinvocation.AbstractAclProvider.hasPermission(org.springframework.security.core.Authentication, java.lang.Object)
org.springframework.security.acls.afterinvocation.Filterer.remove(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acls.afterinvocation.Filterer.getFilteredObject()
16 - Declaração do método: org.springframework.security.acls.afterinvocation.CollectionFilterer.CollectionFilterer(java.util.Collection)
16 - Declaração do método: org.springframework.security.acls.afterinvocation.CollectionFilterer.getFilteredObject()
Métodos invocados: 
java.util.Set.iterator()
java.util.Collection.size()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Collection.remove(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
java.util.Collection.size()
org.apache.commons.logging.Log.debug(java.lang.Object)
17 - Declaração do método: org.springframework.security.acls.afterinvocation.CollectionFilterer.iterator()
Métodos invocados: 
java.util.Collection.iterator()
18 - Declaração do método: org.springframework.security.acls.afterinvocation.CollectionFilterer.remove(org.springframework.security.acls.afterinvocation.CollectionFilterer$T)
Métodos invocados: 
java.util.Set.add(org.springframework.security.acls.afterinvocation.CollectionFilterer$T)
19 - Declaração do método: org.springframework.security.acls.afterinvocation.AbstractAclProvider.AbstractAclProvider(org.springframework.security.acls.model.AclService, java.lang.String, java.util.List)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.List.isEmpty()
20 - Declaração do método: org.springframework.security.acls.afterinvocation.AbstractAclProvider.getProcessDomainObjectClass()
20 - Declaração do método: org.springframework.security.acls.afterinvocation.AbstractAclProvider.hasPermission(org.springframework.security.core.Authentication, java.lang.Object)
Métodos invocados: 
org.springframework.security.acls.model.ObjectIdentityRetrievalStrategy.getObjectIdentity(java.lang.Object)
org.springframework.security.acls.model.SidRetrievalStrategy.getSids(org.springframework.security.core.Authentication)
org.springframework.security.acls.model.AclService.readAclById(org.springframework.security.acls.model.ObjectIdentity, java.util.List)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
21 - Declaração do método: org.springframework.security.acls.afterinvocation.AbstractAclProvider.setObjectIdentityRetrievalStrategy(org.springframework.security.acls.model.ObjectIdentityRetrievalStrategy)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
22 - Declaração do método: org.springframework.security.acls.afterinvocation.AbstractAclProvider.setProcessConfigAttribute(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
23 - Declaração do método: org.springframework.security.acls.afterinvocation.AbstractAclProvider.setProcessDomainObjectClass(java.lang.Class)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
24 - Declaração do método: org.springframework.security.acls.afterinvocation.AbstractAclProvider.setSidRetrievalStrategy(org.springframework.security.acls.model.SidRetrievalStrategy)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
25 - Declaração do método: org.springframework.security.acls.afterinvocation.AbstractAclProvider.supports(org.springframework.security.access.ConfigAttribute)
Métodos invocados: 
org.springframework.security.access.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
26 - Declaração do método: org.springframework.security.acls.afterinvocation.AbstractAclProvider.supports(java.lang.Class)
26 - Declaração do método: org.springframework.security.acls.afterinvocation.Filterer.getFilteredObject()
26 - Declaração do método: org.springframework.security.acls.afterinvocation.Filterer.iterator()
26 - Declaração do método: org.springframework.security.acls.afterinvocation.Filterer.remove(org.springframework.security.acls.afterinvocation.Filterer$T)
26 - Declaração do método: org.springframework.security.acls.afterinvocation.AclEntryAfterInvocationProvider.AclEntryAfterInvocationProvider(org.springframework.security.acls.model.AclService, java.util.List)
26 - Declaração do método: org.springframework.security.acls.afterinvocation.AclEntryAfterInvocationProvider.AclEntryAfterInvocationProvider(org.springframework.security.acls.model.AclService, java.lang.String, java.util.List)
26 - Declaração do método: org.springframework.security.acls.afterinvocation.AclEntryAfterInvocationProvider.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection, java.lang.Object)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acls.afterinvocation.AbstractAclProvider.getProcessDomainObjectClass()
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acls.afterinvocation.AbstractAclProvider.supports(org.springframework.security.access.ConfigAttribute)
org.springframework.security.acls.afterinvocation.AbstractAclProvider.hasPermission(org.springframework.security.core.Authentication, java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.security.Principal.getName()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
27 - Declaração do método: org.springframework.security.acls.afterinvocation.AclEntryAfterInvocationProvider.setMessageSource(org.springframework.context.MessageSource)
27 - Declaração do método: org.springframework.security.acls.domain.AclFormattingUtils.demergePatterns(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.String.length()
java.lang.String.length()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
java.lang.String.length()
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.String.charAt(I)
28 - Declaração do método: org.springframework.security.acls.domain.AclFormattingUtils.mergePatterns(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.String.length()
java.lang.String.length()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
java.lang.String.length()
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.String.charAt(I)
java.lang.String.charAt(I)
29 - Declaração do método: org.springframework.security.acls.domain.AclFormattingUtils.printBinary(I)
Métodos invocados: 
org.springframework.security.acls.domain.AclFormattingUtils.printBinary(I, C, C)
30 - Declaração do método: org.springframework.security.acls.domain.AclFormattingUtils.printBinary(I, C)
Métodos invocados: 
java.lang.Character.toString(C)
java.lang.Character.toString(C)
org.springframework.util.Assert.doesNotContain(java.lang.String, java.lang.String, java.lang.String)
java.lang.Character.toString(C)
java.lang.Character.toString(C)
org.springframework.util.Assert.doesNotContain(java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.acls.domain.AclFormattingUtils.printBinary(I, C, C)
java.lang.String.replace(C, C)
31 - Declaração do método: org.springframework.security.acls.domain.AclFormattingUtils.printBinary(I, C, C)
Métodos invocados: 
java.lang.Integer.toString(I, I)
java.lang.String.length()
java.lang.String.length()
java.lang.String.substring(I, I)
java.lang.String.replace(C, C)
java.lang.String.replace(C, C)
32 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityRetrievalStrategyImpl.getObjectIdentity(java.lang.Object)
32 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityRetrievalStrategyImpl.createObjectIdentity(java.io.Serializable, java.lang.String)
32 - Declaração do método: org.springframework.security.acls.domain.SidRetrievalStrategyImpl.SidRetrievalStrategyImpl()
32 - Declaração do método: org.springframework.security.acls.domain.SidRetrievalStrategyImpl.SidRetrievalStrategyImpl(org.springframework.security.access.hierarchicalroles.RoleHierarchy)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
33 - Declaração do método: org.springframework.security.acls.domain.SidRetrievalStrategyImpl.getSids(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.core.Authentication.getAuthorities()
org.springframework.security.access.hierarchicalroles.RoleHierarchy.getReachableGrantedAuthorities(java.util.Collection)
java.util.Collection.size()
java.util.List.add(org.springframework.security.acls.model.Sid)
java.util.List.add(org.springframework.security.acls.model.Sid)
34 - Declaração do método: org.springframework.security.acls.domain.AbstractPermission.AbstractPermission(I)
34 - Declaração do método: org.springframework.security.acls.domain.AbstractPermission.AbstractPermission(I, C)
34 - Declaração do método: org.springframework.security.acls.domain.AbstractPermission.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.acls.model.Permission.getMask()
35 - Declaração do método: org.springframework.security.acls.domain.AbstractPermission.getMask()
35 - Declaração do método: org.springframework.security.acls.domain.AbstractPermission.getPattern()
Métodos invocados: 
org.springframework.security.acls.domain.AclFormattingUtils.printBinary(I, C)
36 - Declaração do método: org.springframework.security.acls.domain.AbstractPermission.toString()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getSimpleName()
org.springframework.security.acls.domain.AbstractPermission.getPattern()
37 - Declaração do método: org.springframework.security.acls.domain.AbstractPermission.hashCode()
37 - Declaração do método: org.springframework.security.acls.domain.EhCacheBasedAclCache.EhCacheBasedAclCache(net.sf.ehcache.Ehcache)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
38 - Declaração do método: org.springframework.security.acls.domain.EhCacheBasedAclCache.evictFromCache(java.io.Serializable)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.domain.EhCacheBasedAclCache.getFromCache(java.io.Serializable)
org.springframework.security.acls.model.MutableAcl.getId()
net.sf.ehcache.Ehcache.remove(java.io.Serializable)
org.springframework.security.acls.model.Acl.getObjectIdentity()
net.sf.ehcache.Ehcache.remove(java.io.Serializable)
39 - Declaração do método: org.springframework.security.acls.domain.EhCacheBasedAclCache.evictFromCache(org.springframework.security.acls.model.ObjectIdentity)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.domain.EhCacheBasedAclCache.getFromCache(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.MutableAcl.getId()
net.sf.ehcache.Ehcache.remove(java.io.Serializable)
org.springframework.security.acls.model.Acl.getObjectIdentity()
net.sf.ehcache.Ehcache.remove(java.io.Serializable)
40 - Declaração do método: org.springframework.security.acls.domain.EhCacheBasedAclCache.getFromCache(org.springframework.security.acls.model.ObjectIdentity)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
net.sf.ehcache.Ehcache.get(java.io.Serializable)
net.sf.ehcache.Element.getValue()
org.springframework.security.acls.domain.EhCacheBasedAclCache.initializeTransientFields(org.springframework.security.acls.model.MutableAcl)
41 - Declaração do método: org.springframework.security.acls.domain.EhCacheBasedAclCache.getFromCache(java.io.Serializable)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
net.sf.ehcache.Ehcache.get(java.io.Serializable)
net.sf.ehcache.Element.getValue()
org.springframework.security.acls.domain.EhCacheBasedAclCache.initializeTransientFields(org.springframework.security.acls.model.MutableAcl)
42 - Declaração do método: org.springframework.security.acls.domain.EhCacheBasedAclCache.putInCache(org.springframework.security.acls.model.MutableAcl)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.model.Acl.getObjectIdentity()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.model.MutableAcl.getId()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.util.FieldUtils.getProtectedFieldValue(java.lang.String, java.lang.Object)
org.springframework.security.util.FieldUtils.getProtectedFieldValue(java.lang.String, java.lang.Object)
org.springframework.security.acls.model.Acl.getParentAcl()
org.springframework.security.acls.model.Acl.getParentAcl()
org.springframework.security.acls.model.Acl.getParentAcl()
org.springframework.security.acls.domain.EhCacheBasedAclCache.putInCache(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.model.Acl.getObjectIdentity()
net.sf.ehcache.Ehcache.put(net.sf.ehcache.Element)
org.springframework.security.acls.model.MutableAcl.getId()
net.sf.ehcache.Ehcache.put(net.sf.ehcache.Element)
43 - Declaração do método: org.springframework.security.acls.domain.EhCacheBasedAclCache.initializeTransientFields(org.springframework.security.acls.model.MutableAcl)
Métodos invocados: 
org.springframework.security.util.FieldUtils.setProtectedFieldValue(java.lang.String, java.lang.Object, java.lang.Object)
org.springframework.security.util.FieldUtils.setProtectedFieldValue(java.lang.String, java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getParentAcl()
org.springframework.security.acls.model.Acl.getParentAcl()
org.springframework.security.acls.domain.EhCacheBasedAclCache.initializeTransientFields(org.springframework.security.acls.model.MutableAcl)
44 - Declaração do método: org.springframework.security.acls.domain.EhCacheBasedAclCache.clearCache()
Métodos invocados: 
net.sf.ehcache.Ehcache.removeAll()
45 - Declaração do método: org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
45 - Declaração do método: org.springframework.security.acls.domain.CumulativePermission.CumulativePermission()
45 - Declaração do método: org.springframework.security.acls.domain.CumulativePermission.clear(org.springframework.security.acls.model.Permission)
Métodos invocados: 
org.springframework.security.acls.model.Permission.getMask()
org.springframework.security.acls.model.Permission.getPattern()
org.springframework.security.acls.domain.AclFormattingUtils.demergePatterns(java.lang.String, java.lang.String)
46 - Declaração do método: org.springframework.security.acls.domain.CumulativePermission.clear()
46 - Declaração do método: org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
Métodos invocados: 
org.springframework.security.acls.model.Permission.getMask()
org.springframework.security.acls.model.Permission.getPattern()
org.springframework.security.acls.domain.AclFormattingUtils.mergePatterns(java.lang.String, java.lang.String)
47 - Declaração do método: org.springframework.security.acls.domain.CumulativePermission.getPattern()
47 - Declaração do método: org.springframework.security.acls.domain.ConsoleAuditLogger.logIfNeeded(Z, org.springframework.security.acls.model.AccessControlEntry)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditSuccess()
java.io.PrintStream.println(java.lang.String)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditFailure()
java.io.PrintStream.println(java.lang.String)
48 - Declaração do método: org.springframework.security.acls.domain.AclAuthorizationStrategyImpl.AclAuthorizationStrategyImpl([Lorg.springframework.security.core.GrantedAuthority;)
Métodos invocados: 
org.springframework.util.Assert.isTrue(Z, java.lang.String)
49 - Declaração do método: org.springframework.security.acls.domain.AclAuthorizationStrategyImpl.securityCheck(org.springframework.security.acls.model.Acl, I)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.isAuthenticated()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.acls.model.Acl.getOwner()
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
org.springframework.security.core.Authentication.getAuthorities()
java.util.Collection.contains(java.lang.Object)
org.springframework.security.acls.model.SidRetrievalStrategy.getSids(org.springframework.security.core.Authentication)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Permission;)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
50 - Declaração do método: org.springframework.security.acls.domain.AclAuthorizationStrategyImpl.setSidRetrievalStrategy(org.springframework.security.acls.model.SidRetrievalStrategy)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
51 - Declaração do método: org.springframework.security.acls.domain.BasePermission.BasePermission(I)
51 - Declaração do método: org.springframework.security.acls.domain.BasePermission.BasePermission(I, C)
51 - Declaração do método: org.springframework.security.acls.domain.DefaultPermissionGrantingStrategy.DefaultPermissionGrantingStrategy(org.springframework.security.acls.domain.AuditLogger)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
52 - Declaração do método: org.springframework.security.acls.domain.DefaultPermissionGrantingStrategy.isGranted(org.springframework.security.acls.model.Acl, java.util.List, java.util.List, Z)
Métodos invocados: 
org.springframework.security.acls.model.Acl.getEntries()
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.springframework.security.acls.model.Permission.getMask()
org.springframework.security.acls.model.Permission.getMask()
org.springframework.security.acls.model.AccessControlEntry.getSid()
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
org.springframework.security.acls.model.AccessControlEntry.isGranting()
org.springframework.security.acls.domain.AuditLogger.logIfNeeded(Z, org.springframework.security.acls.model.AccessControlEntry)
org.springframework.security.acls.domain.AuditLogger.logIfNeeded(Z, org.springframework.security.acls.model.AccessControlEntry)
org.springframework.security.acls.model.Acl.isEntriesInheriting()
org.springframework.security.acls.model.Acl.getParentAcl()
org.springframework.security.acls.model.Acl.getParentAcl()
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
53 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImpl.ObjectIdentityImpl(java.lang.String, java.io.Serializable)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
54 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImpl.ObjectIdentityImpl(java.lang.Class, java.io.Serializable)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.Class.getName()
55 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImpl.ObjectIdentityImpl(java.lang.Object)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.Object.getClass()
org.springframework.util.ClassUtils.getUserClass(java.lang.Class)
java.lang.Class.getName()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
56 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImpl.equals(java.lang.Object)
Métodos invocados: 
java.lang.Number.longValue()
java.lang.Number.longValue()
java.lang.Object.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
57 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImpl.getIdentifier()
57 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImpl.getType()
57 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImpl.hashCode()
Métodos invocados: 
java.lang.String.hashCode()
java.lang.Object.hashCode()
58 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImpl.toString()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
59 - Declaração do método: org.springframework.security.acls.domain.PrincipalSid.PrincipalSid(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
60 - Declaração do método: org.springframework.security.acls.domain.PrincipalSid.PrincipalSid(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.core.Authentication.getPrincipal()
java.lang.Object.toString()
61 - Declaração do método: org.springframework.security.acls.domain.PrincipalSid.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.acls.domain.PrincipalSid.getPrincipal()
org.springframework.security.acls.domain.PrincipalSid.getPrincipal()
java.lang.String.equals(java.lang.Object)
62 - Declaração do método: org.springframework.security.acls.domain.PrincipalSid.hashCode()
Métodos invocados: 
org.springframework.security.acls.domain.PrincipalSid.getPrincipal()
java.lang.String.hashCode()
63 - Declaração do método: org.springframework.security.acls.domain.PrincipalSid.getPrincipal()
63 - Declaração do método: org.springframework.security.acls.domain.PrincipalSid.toString()
63 - Declaração do método: org.springframework.security.acls.domain.PermissionFactory.buildFromMask(I)
63 - Declaração do método: org.springframework.security.acls.domain.PermissionFactory.buildFromName(java.lang.String)
63 - Declaração do método: org.springframework.security.acls.domain.PermissionFactory.buildFromNames(java.util.List)
63 - Declaração do método: org.springframework.security.acls.domain.GrantedAuthoritySid.GrantedAuthoritySid(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
64 - Declaração do método: org.springframework.security.acls.domain.GrantedAuthoritySid.GrantedAuthoritySid(org.springframework.security.core.GrantedAuthority)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.core.GrantedAuthority.getAuthority()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.core.GrantedAuthority.getAuthority()
65 - Declaração do método: org.springframework.security.acls.domain.GrantedAuthoritySid.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.acls.domain.GrantedAuthoritySid.getGrantedAuthority()
org.springframework.security.acls.domain.GrantedAuthoritySid.getGrantedAuthority()
java.lang.String.equals(java.lang.Object)
66 - Declaração do método: org.springframework.security.acls.domain.GrantedAuthoritySid.hashCode()
Métodos invocados: 
org.springframework.security.acls.domain.GrantedAuthoritySid.getGrantedAuthority()
java.lang.String.hashCode()
67 - Declaração do método: org.springframework.security.acls.domain.GrantedAuthoritySid.getGrantedAuthority()
67 - Declaração do método: org.springframework.security.acls.domain.GrantedAuthoritySid.toString()
67 - Declaração do método: org.springframework.security.acls.domain.DefaultPermissionFactory.DefaultPermissionFactory()
Métodos invocados: 
org.springframework.security.acls.domain.DefaultPermissionFactory.registerPublicPermissions(java.lang.Class)
68 - Declaração do método: org.springframework.security.acls.domain.DefaultPermissionFactory.DefaultPermissionFactory(java.lang.Class)
Métodos invocados: 
org.springframework.security.acls.domain.DefaultPermissionFactory.registerPublicPermissions(java.lang.Class)
69 - Declaração do método: org.springframework.security.acls.domain.DefaultPermissionFactory.DefaultPermissionFactory(java.util.Map)
Métodos invocados: 
java.util.Map.keySet()
java.util.Map.get(java.lang.Object)
org.springframework.security.acls.domain.DefaultPermissionFactory.registerPermission(org.springframework.security.acls.model.Permission, java.lang.String)
70 - Declaração do método: org.springframework.security.acls.domain.DefaultPermissionFactory.registerPublicPermissions(java.lang.Class)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.Class.getFields()
java.lang.reflect.Field.get(java.lang.Object)
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.reflect.Field.getName()
org.springframework.security.acls.domain.DefaultPermissionFactory.registerPermission(org.springframework.security.acls.model.Permission, java.lang.String)
71 - Declaração do método: org.springframework.security.acls.domain.DefaultPermissionFactory.registerPermission(org.springframework.security.acls.model.Permission, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.security.acls.model.Permission.getMask()
java.util.Map.containsKey(java.lang.Object)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
java.util.Map.containsKey(java.lang.Object)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
java.util.Map.put(java.lang.Integer, org.springframework.security.acls.model.Permission)
java.util.Map.put(java.lang.String, org.springframework.security.acls.model.Permission)
72 - Declaração do método: org.springframework.security.acls.domain.DefaultPermissionFactory.buildFromMask(I)
Métodos invocados: 
java.lang.Integer.valueOf(I)
java.util.Map.containsKey(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.lang.Integer.valueOf(I)
java.util.Map.get(java.lang.Object)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
73 - Declaração do método: org.springframework.security.acls.domain.DefaultPermissionFactory.buildFromName(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
74 - Declaração do método: org.springframework.security.acls.domain.DefaultPermissionFactory.buildFromNames(java.util.List)
Métodos invocados: 
java.util.List.size()
java.util.Collections.emptyList()
java.util.List.size()
org.springframework.security.acls.domain.DefaultPermissionFactory.buildFromName(java.lang.String)
java.util.List.add(org.springframework.security.acls.model.Permission)
75 - Declaração do método: org.springframework.security.acls.domain.AclImpl.AclImpl(org.springframework.security.acls.model.ObjectIdentity, java.io.Serializable, org.springframework.security.acls.domain.AclAuthorizationStrategy, org.springframework.security.acls.domain.AuditLogger)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
76 - Declaração do método: org.springframework.security.acls.domain.AclImpl.AclImpl(org.springframework.security.acls.model.ObjectIdentity, java.io.Serializable, org.springframework.security.acls.domain.AclAuthorizationStrategy, org.springframework.security.acls.domain.AuditLogger, org.springframework.security.acls.model.Acl, java.util.List, Z, org.springframework.security.acls.model.Sid)
76 - Declaração do método: org.springframework.security.acls.domain.AclImpl.AclImpl(org.springframework.security.acls.model.ObjectIdentity, java.io.Serializable, org.springframework.security.acls.domain.AclAuthorizationStrategy, org.springframework.security.acls.model.PermissionGrantingStrategy, org.springframework.security.acls.model.Acl, java.util.List, Z, org.springframework.security.acls.model.Sid)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
77 - Declaração do método: org.springframework.security.acls.domain.AclImpl.AclImpl()
77 - Declaração do método: org.springframework.security.acls.domain.AclImpl.deleteAce(I)
Métodos invocados: 
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.springframework.security.acls.domain.AclImpl.verifyAceIndexExists(I)
java.util.List.remove(I)
78 - Declaração do método: org.springframework.security.acls.domain.AclImpl.verifyAceIndexExists(I)
Métodos invocados: 
java.util.List.size()
java.util.List.size()
79 - Declaração do método: org.springframework.security.acls.domain.AclImpl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
Métodos invocados: 
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.List.size()
java.util.List.add(I, org.springframework.security.acls.model.AccessControlEntry)
80 - Declaração do método: org.springframework.security.acls.domain.AclImpl.getEntries()
80 - Declaração do método: org.springframework.security.acls.domain.AclImpl.getId()
80 - Declaração do método: org.springframework.security.acls.domain.AclImpl.getObjectIdentity()
80 - Declaração do método: org.springframework.security.acls.domain.AclImpl.isEntriesInheriting()
80 - Declaração do método: org.springframework.security.acls.domain.AclImpl.isGranted(java.util.List, java.util.List, Z)
Métodos invocados: 
org.springframework.util.Assert.notEmpty(java.util.Collection, java.lang.String)
org.springframework.util.Assert.notEmpty(java.util.Collection, java.lang.String)
org.springframework.security.acls.domain.AclImpl.isSidLoaded(java.util.List)
org.springframework.security.acls.model.PermissionGrantingStrategy.isGranted(org.springframework.security.acls.model.Acl, java.util.List, java.util.List, Z)
81 - Declaração do método: org.springframework.security.acls.domain.AclImpl.isSidLoaded(java.util.List)
Métodos invocados: 
java.util.List.size()
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
82 - Declaração do método: org.springframework.security.acls.domain.AclImpl.setEntriesInheriting(Z)
Métodos invocados: 
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
83 - Declaração do método: org.springframework.security.acls.domain.AclImpl.setOwner(org.springframework.security.acls.model.Sid)
Métodos invocados: 
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
84 - Declaração do método: org.springframework.security.acls.domain.AclImpl.getOwner()
84 - Declaração do método: org.springframework.security.acls.domain.AclImpl.setParent(org.springframework.security.acls.model.Acl)
Métodos invocados: 
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
java.lang.Object.equals(java.lang.Object)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
85 - Declaração do método: org.springframework.security.acls.domain.AclImpl.getParentAcl()
85 - Declaração do método: org.springframework.security.acls.domain.AclImpl.updateAce(I, org.springframework.security.acls.model.Permission)
Métodos invocados: 
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.springframework.security.acls.domain.AclImpl.verifyAceIndexExists(I)
java.util.List.get(I)
org.springframework.security.acls.domain.AccessControlEntryImpl.setPermission(org.springframework.security.acls.model.Permission)
86 - Declaração do método: org.springframework.security.acls.domain.AclImpl.updateAuditing(I, Z, Z)
Métodos invocados: 
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.springframework.security.acls.domain.AclImpl.verifyAceIndexExists(I)
java.util.List.get(I)
org.springframework.security.acls.domain.AccessControlEntryImpl.setAuditSuccess(Z)
org.springframework.security.acls.domain.AccessControlEntryImpl.setAuditFailure(Z)
87 - Declaração do método: org.springframework.security.acls.domain.AclImpl.equals(java.lang.Object)
Métodos invocados: 
java.util.List.equals(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
org.springframework.security.acls.model.ObjectIdentity.equals(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
java.util.List.size()
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
java.util.List.get(I)
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
88 - Declaração do método: org.springframework.security.acls.domain.AclImpl.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(Z)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
org.springframework.security.acls.model.Acl.getObjectIdentity()
java.lang.Object.toString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
89 - Declaração do método: org.springframework.security.acls.domain.AuditLogger.logIfNeeded(Z, org.springframework.security.acls.model.AccessControlEntry)
89 - Declaração do método: org.springframework.security.acls.domain.IdentityUnavailableException.IdentityUnavailableException(java.lang.String)
89 - Declaração do método: org.springframework.security.acls.domain.IdentityUnavailableException.IdentityUnavailableException(java.lang.String, java.lang.Throwable)
89 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.AccessControlEntryImpl(java.io.Serializable, org.springframework.security.acls.model.Acl, org.springframework.security.acls.model.Sid, org.springframework.security.acls.model.Permission, Z, Z, Z)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
90 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.acls.domain.AccessControlEntryImpl.getAcl()
org.springframework.security.acls.domain.AccessControlEntryImpl.getAcl()
org.springframework.security.acls.model.Acl.getObjectIdentity()
org.springframework.security.acls.model.Acl.getObjectIdentity()
org.springframework.security.acls.model.Acl.getObjectIdentity()
org.springframework.security.acls.domain.AccessControlEntryImpl.getAcl()
org.springframework.security.acls.model.Acl.getObjectIdentity()
org.springframework.security.acls.model.ObjectIdentity.equals(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
org.springframework.security.acls.domain.AccessControlEntryImpl.isAuditFailure()
org.springframework.security.acls.domain.AccessControlEntryImpl.isAuditSuccess()
org.springframework.security.acls.domain.AccessControlEntryImpl.isGranting()
org.springframework.security.acls.domain.AccessControlEntryImpl.getPermission()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.acls.domain.AccessControlEntryImpl.getSid()
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
91 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.getAcl()
91 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.getId()
91 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.getPermission()
91 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.getSid()
91 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.isAuditFailure()
91 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.isAuditSuccess()
91 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.isGranting()
91 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.setAuditFailure(Z)
91 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.setAuditSuccess(Z)
91 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.setPermission(org.springframework.security.acls.model.Permission)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
92 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(Z)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(Z)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(Z)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
93 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.BasicLookupStrategy(javax.sql.DataSource, org.springframework.security.acls.model.AclCache, org.springframework.security.acls.domain.AclAuthorizationStrategy, org.springframework.security.acls.domain.AuditLogger)
93 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.BasicLookupStrategy(javax.sql.DataSource, org.springframework.security.acls.model.AclCache, org.springframework.security.acls.domain.AclAuthorizationStrategy, org.springframework.security.acls.model.PermissionGrantingStrategy)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.reflect.AccessibleObject.setAccessible(Z)
java.lang.reflect.AccessibleObject.setAccessible(Z)
94 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.computeRepeatingSql(java.lang.String, I)
Métodos invocados: 
java.lang.String.length()
java.lang.String.length()
java.lang.String.length()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
95 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.readAces(org.springframework.security.acls.domain.AclImpl)
Métodos invocados: 
java.lang.reflect.Field.get(java.lang.Object)
96 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.setAclOnAce(org.springframework.security.acls.domain.AccessControlEntryImpl, org.springframework.security.acls.domain.AclImpl)
Métodos invocados: 
java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)
97 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.setAces(org.springframework.security.acls.domain.AclImpl, java.util.List)
Métodos invocados: 
java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)
98 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.lookupPrimaryKeys(java.util.Map, java.util.Set, java.util.List)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notEmpty(java.util.Collection, java.lang.String)
java.util.Set.size()
org.springframework.security.acls.jdbc.BasicLookupStrategy.computeRepeatingSql(java.lang.String, I)
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter, org.springframework.jdbc.core.ResultSetExtractor)
java.sql.PreparedStatement.setLong(I, J)
java.util.Set.size()
org.springframework.security.acls.jdbc.BasicLookupStrategy.lookupPrimaryKeys(java.util.Map, java.util.Set, java.util.List)
99 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$1.setValues(java.sql.PreparedStatement)
Métodos invocados: 
java.sql.PreparedStatement.setLong(I, J)
100 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.readAclsById(java.util.List, java.util.List)
Métodos invocados: 
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.util.Assert.notEmpty(java.util.Collection, java.lang.String)
java.util.List.size()
java.util.List.get(I)
java.util.Map.containsKey(java.lang.Object)
org.springframework.security.acls.model.AclCache.getFromCache(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.Acl.isSidLoaded(java.util.List)
org.springframework.security.acls.model.Acl.getObjectIdentity()
java.util.Map.put(org.springframework.security.acls.model.ObjectIdentity, org.springframework.security.acls.model.Acl)
java.util.Set.add(org.springframework.security.acls.model.ObjectIdentity)
java.util.Set.size()
java.util.List.size()
java.util.Set.size()
org.springframework.security.acls.jdbc.BasicLookupStrategy.lookupObjectIdentities(java.util.Collection, java.util.List)
java.util.Map.putAll(java.util.Map)
java.util.Map.values()
org.springframework.security.acls.model.AclCache.putInCache(org.springframework.security.acls.model.MutableAcl)
java.util.Set.clear()
101 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.lookupObjectIdentities(java.util.Collection, java.util.List)
Métodos invocados: 
org.springframework.util.Assert.notEmpty(java.util.Collection, java.lang.String)
java.util.Collection.size()
org.springframework.security.acls.jdbc.BasicLookupStrategy.computeRepeatingSql(java.lang.String, I)
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter, org.springframework.jdbc.core.ResultSetExtractor)
org.springframework.security.acls.model.ObjectIdentity.getType()
org.springframework.security.acls.model.ObjectIdentity.getIdentifier()
java.lang.Object.toString()
java.lang.Long.valueOf(java.lang.String)
java.lang.Long.longValue()
java.sql.PreparedStatement.setLong(I, J)
java.sql.PreparedStatement.setString(I, java.lang.String)
java.util.Set.size()
org.springframework.security.acls.jdbc.BasicLookupStrategy.lookupPrimaryKeys(java.util.Map, java.util.Set, java.util.List)
java.util.Map.values()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.acls.domain.AclImpl.getId()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.acls.domain.AclImpl.getId()
org.springframework.security.acls.jdbc.BasicLookupStrategy.convert(java.util.Map, java.lang.Long)
org.springframework.security.acls.model.Acl.getObjectIdentity()
java.util.Map.put(org.springframework.security.acls.model.ObjectIdentity, org.springframework.security.acls.model.Acl)
102 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$2.setValues(java.sql.PreparedStatement)
Métodos invocados: 
org.springframework.security.acls.model.ObjectIdentity.getType()
org.springframework.security.acls.model.ObjectIdentity.getIdentifier()
java.lang.Object.toString()
java.lang.Long.valueOf(java.lang.String)
java.lang.Long.longValue()
java.sql.PreparedStatement.setLong(I, J)
java.sql.PreparedStatement.setString(I, java.lang.String)
103 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.convert(java.util.Map, java.lang.Long)
Métodos invocados: 
org.springframework.util.Assert.notEmpty(java.util.Map, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.Map.get(java.lang.Object)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.acls.domain.AclImpl.getParentAcl()
org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.getId()
org.springframework.security.acls.jdbc.BasicLookupStrategy.convert(java.util.Map, java.lang.Long)
org.springframework.security.acls.domain.AclImpl.getObjectIdentity()
org.springframework.security.acls.domain.AclImpl.getId()
org.springframework.security.acls.domain.AclImpl.isEntriesInheriting()
org.springframework.security.acls.domain.AclImpl.getOwner()
org.springframework.security.acls.jdbc.BasicLookupStrategy.readAces(org.springframework.security.acls.domain.AclImpl)
org.springframework.security.acls.jdbc.BasicLookupStrategy.setAclOnAce(org.springframework.security.acls.domain.AccessControlEntryImpl, org.springframework.security.acls.domain.AclImpl)
java.util.List.add(org.springframework.security.acls.domain.AccessControlEntryImpl)
org.springframework.security.acls.jdbc.BasicLookupStrategy.setAces(org.springframework.security.acls.domain.AclImpl, java.util.List)
104 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.setPermissionFactory(org.springframework.security.acls.domain.PermissionFactory)
104 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.setBatchSize(I)
104 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.setSelectClause(java.lang.String)
104 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.setLookupPrimaryKeysWhereClause(java.lang.String)
104 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.setLookupObjectIdentitiesWhereClause(java.lang.String)
104 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.setOrderByClause(java.lang.String)
104 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$ProcessResultSet.ProcessResultSet(java.util.Map, java.util.List)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
105 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$ProcessResultSet.extractData(java.sql.ResultSet)
Métodos invocados: 
java.sql.ResultSet.next()
org.springframework.security.acls.jdbc.BasicLookupStrategy$ProcessResultSet.convertCurrentResultIntoObject(java.util.Map, java.sql.ResultSet)
java.sql.ResultSet.getLong(java.lang.String)
java.util.Map.containsKey(java.lang.Object)
org.springframework.security.acls.model.AclCache.getFromCache(java.io.Serializable)
org.springframework.security.acls.model.Acl.isSidLoaded(java.util.List)
java.util.Set.add(java.lang.Long)
org.springframework.security.acls.model.MutableAcl.getId()
java.util.Map.put(java.io.Serializable, org.springframework.security.acls.model.Acl)
106 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$ProcessResultSet.convertCurrentResultIntoObject(java.util.Map, java.sql.ResultSet)
Métodos invocados: 
java.sql.ResultSet.getLong(java.lang.String)
java.util.Map.get(java.lang.Object)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getLong(java.lang.String)
java.lang.Long.valueOf(J)
java.sql.ResultSet.getLong(java.lang.String)
java.lang.Long.valueOf(J)
java.sql.ResultSet.getBoolean(java.lang.String)
java.sql.ResultSet.getBoolean(java.lang.String)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getString(java.lang.String)
java.util.Map.put(java.io.Serializable, org.springframework.security.acls.model.Acl)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getLong(java.lang.String)
java.sql.ResultSet.getBoolean(java.lang.String)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getInt(java.lang.String)
org.springframework.security.acls.domain.PermissionFactory.buildFromMask(I)
java.sql.ResultSet.getBoolean(java.lang.String)
java.sql.ResultSet.getBoolean(java.lang.String)
java.sql.ResultSet.getBoolean(java.lang.String)
org.springframework.security.acls.jdbc.BasicLookupStrategy.readAces(org.springframework.security.acls.domain.AclImpl)
java.util.List.contains(java.lang.Object)
java.util.List.add(org.springframework.security.acls.domain.AccessControlEntryImpl)
107 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.StubAclParent(java.lang.Long)
107 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.getEntries()
107 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.getId()
107 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.getObjectIdentity()
107 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.getOwner()
107 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.getParentAcl()
107 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.isEntriesInheriting()
107 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.isGranted(java.util.List, java.util.List, Z)
107 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.isSidLoaded(java.util.List)
107 - Declaração do método: org.springframework.security.acls.jdbc.LookupStrategy.readAclsById(java.util.List, java.util.List)
107 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclService.JdbcAclService(javax.sql.DataSource, org.springframework.security.acls.jdbc.LookupStrategy)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
108 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclService.findChildren(org.springframework.security.acls.model.ObjectIdentity)
Métodos invocados: 
org.springframework.security.acls.model.ObjectIdentity.getIdentifier()
org.springframework.security.acls.model.ObjectIdentity.getType()
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, [Ljava.lang.Object;, org.springframework.jdbc.core.RowMapper)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getLong(java.lang.String)
java.util.List.size()
109 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclService$1.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getLong(java.lang.String)
110 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.model.ObjectIdentity, java.util.List)
Métodos invocados: 
java.util.Arrays.asList([Lorg.springframework.security.acls.model.ObjectIdentity;)
org.springframework.security.acls.jdbc.JdbcAclService.readAclsById(java.util.List, java.util.List)
java.util.Map.containsKey(java.lang.Object)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
java.util.Map.get(java.lang.Object)
111 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
Métodos invocados: 
org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.model.ObjectIdentity, java.util.List)
112 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclService.readAclsById(java.util.List)
Métodos invocados: 
org.springframework.security.acls.jdbc.JdbcAclService.readAclsById(java.util.List, java.util.List)
113 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclService.readAclsById(java.util.List, java.util.List)
Métodos invocados: 
org.springframework.security.acls.jdbc.LookupStrategy.readAclsById(java.util.List, java.util.List)
java.util.List.size()
java.util.List.get(I)
java.util.Map.containsKey(java.lang.Object)
java.util.List.get(I)
114 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclService.setFindChildrenQuery(java.lang.String)
114 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.JdbcMutableAclService(javax.sql.DataSource, org.springframework.security.acls.jdbc.LookupStrategy, org.springframework.security.acls.model.AclCache)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
115 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.jdbc.JdbcMutableAclService.retrieveObjectIdentityPrimaryKey(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.acls.jdbc.JdbcMutableAclService.createObjectIdentity(org.springframework.security.acls.model.ObjectIdentity, org.springframework.security.acls.model.Sid)
org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
116 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.createEntries(org.springframework.security.acls.model.MutableAcl)
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.batchUpdate(java.lang.String, org.springframework.jdbc.core.BatchPreparedStatementSetter)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.acls.model.MutableAcl.getId()
java.lang.Long.longValue()
java.sql.PreparedStatement.setLong(I, J)
java.sql.PreparedStatement.setInt(I, I)
org.springframework.security.acls.domain.AccessControlEntryImpl.getSid()
org.springframework.security.acls.jdbc.JdbcMutableAclService.createOrRetrieveSidPrimaryKey(org.springframework.security.acls.model.Sid, Z)
java.lang.Long.longValue()
java.sql.PreparedStatement.setLong(I, J)
org.springframework.security.acls.domain.AccessControlEntryImpl.getPermission()
org.springframework.security.acls.model.Permission.getMask()
java.sql.PreparedStatement.setInt(I, I)
org.springframework.security.acls.domain.AccessControlEntryImpl.isGranting()
java.sql.PreparedStatement.setBoolean(I, Z)
org.springframework.security.acls.domain.AccessControlEntryImpl.isAuditSuccess()
java.sql.PreparedStatement.setBoolean(I, Z)
org.springframework.security.acls.domain.AccessControlEntryImpl.isAuditFailure()
java.sql.PreparedStatement.setBoolean(I, Z)
117 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService$1.getBatchSize()
Métodos invocados: 
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
118 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService$1.setValues(java.sql.PreparedStatement, I)
Métodos invocados: 
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.acls.model.MutableAcl.getId()
java.lang.Long.longValue()
java.sql.PreparedStatement.setLong(I, J)
java.sql.PreparedStatement.setInt(I, I)
org.springframework.security.acls.domain.AccessControlEntryImpl.getSid()
org.springframework.security.acls.jdbc.JdbcMutableAclService.createOrRetrieveSidPrimaryKey(org.springframework.security.acls.model.Sid, Z)
java.lang.Long.longValue()
java.sql.PreparedStatement.setLong(I, J)
org.springframework.security.acls.domain.AccessControlEntryImpl.getPermission()
org.springframework.security.acls.model.Permission.getMask()
java.sql.PreparedStatement.setInt(I, I)
org.springframework.security.acls.domain.AccessControlEntryImpl.isGranting()
java.sql.PreparedStatement.setBoolean(I, Z)
org.springframework.security.acls.domain.AccessControlEntryImpl.isAuditSuccess()
java.sql.PreparedStatement.setBoolean(I, Z)
org.springframework.security.acls.domain.AccessControlEntryImpl.isAuditFailure()
java.sql.PreparedStatement.setBoolean(I, Z)
119 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.createObjectIdentity(org.springframework.security.acls.model.ObjectIdentity, org.springframework.security.acls.model.Sid)
Métodos invocados: 
org.springframework.security.acls.jdbc.JdbcMutableAclService.createOrRetrieveSidPrimaryKey(org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.ObjectIdentity.getType()
org.springframework.security.acls.jdbc.JdbcMutableAclService.createOrRetrieveClassPrimaryKey(java.lang.String, Z)
org.springframework.security.acls.model.ObjectIdentity.getIdentifier()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
120 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.createOrRetrieveClassPrimaryKey(java.lang.String, Z)
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String, [Ljava.lang.Object;, java.lang.Class)
java.util.List.isEmpty()
java.util.List.get(I)
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
org.springframework.transaction.support.TransactionSynchronizationManager.isSynchronizationActive()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.queryForLong(java.lang.String)
121 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.createOrRetrieveSidPrimaryKey(org.springframework.security.acls.model.Sid, Z)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.domain.PrincipalSid.getPrincipal()
org.springframework.security.acls.domain.GrantedAuthoritySid.getGrantedAuthority()
java.lang.Boolean.valueOf(Z)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String, [Ljava.lang.Object;, java.lang.Class)
java.util.List.isEmpty()
java.util.List.get(I)
java.lang.Boolean.valueOf(Z)
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
org.springframework.transaction.support.TransactionSynchronizationManager.isSynchronizationActive()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.queryForLong(java.lang.String)
122 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteAcl(org.springframework.security.acls.model.ObjectIdentity, Z)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.model.ObjectIdentity.getIdentifier()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.jdbc.JdbcAclService.findChildren(org.springframework.security.acls.model.ObjectIdentity)
java.util.List.size()
java.util.List.get(I)
org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteAcl(org.springframework.security.acls.model.ObjectIdentity, Z)
org.springframework.security.acls.jdbc.JdbcAclService.findChildren(org.springframework.security.acls.model.ObjectIdentity)
java.util.List.size()
org.springframework.security.acls.jdbc.JdbcMutableAclService.retrieveObjectIdentityPrimaryKey(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteEntries(java.lang.Long)
org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteObjectIdentity(java.lang.Long)
org.springframework.security.acls.model.AclCache.evictFromCache(org.springframework.security.acls.model.ObjectIdentity)
123 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteEntries(java.lang.Long)
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
124 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteObjectIdentity(java.lang.Long)
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
125 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.retrieveObjectIdentityPrimaryKey(org.springframework.security.acls.model.ObjectIdentity)
Métodos invocados: 
org.springframework.security.acls.model.ObjectIdentity.getType()
org.springframework.security.acls.model.ObjectIdentity.getIdentifier()
org.springframework.jdbc.core.JdbcTemplate.queryForLong(java.lang.String, [Ljava.lang.Object;)
126 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
Métodos invocados: 
org.springframework.security.acls.model.MutableAcl.getId()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.model.Acl.getObjectIdentity()
org.springframework.security.acls.jdbc.JdbcMutableAclService.retrieveObjectIdentityPrimaryKey(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteEntries(java.lang.Long)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createEntries(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateObjectIdentity(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.model.Acl.getObjectIdentity()
org.springframework.security.acls.jdbc.JdbcMutableAclService.clearCacheIncludingChildren(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.Acl.getObjectIdentity()
127 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.clearCacheIncludingChildren(org.springframework.security.acls.model.ObjectIdentity)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.jdbc.JdbcAclService.findChildren(org.springframework.security.acls.model.ObjectIdentity)
java.util.List.size()
java.util.List.get(I)
org.springframework.security.acls.jdbc.JdbcMutableAclService.clearCacheIncludingChildren(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.AclCache.evictFromCache(org.springframework.security.acls.model.ObjectIdentity)
128 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.updateObjectIdentity(org.springframework.security.acls.model.MutableAcl)
Métodos invocados: 
org.springframework.security.acls.model.Acl.getParentAcl()
org.springframework.security.acls.model.Acl.getParentAcl()
org.springframework.security.acls.model.Acl.getObjectIdentity()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.acls.model.Acl.getParentAcl()
org.springframework.security.acls.model.Acl.getObjectIdentity()
org.springframework.security.acls.jdbc.JdbcMutableAclService.retrieveObjectIdentityPrimaryKey(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.Acl.getOwner()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.model.Acl.getOwner()
org.springframework.security.acls.jdbc.JdbcMutableAclService.createOrRetrieveSidPrimaryKey(org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.Acl.isEntriesInheriting()
org.springframework.security.acls.model.MutableAcl.getId()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
129 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.setClassIdentityQuery(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
130 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.setSidIdentityQuery(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
131 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.setDeleteEntryByObjectIdentityForeignKeySql(java.lang.String)
131 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.setDeleteObjectIdentityByPrimaryKeySql(java.lang.String)
131 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.setInsertClassSql(java.lang.String)
131 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.setInsertEntrySql(java.lang.String)
131 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.setInsertObjectIdentitySql(java.lang.String)
131 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.setInsertSidSql(java.lang.String)
131 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.setClassPrimaryKeyQuery(java.lang.String)
131 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.setObjectIdentityPrimaryKeyQuery(java.lang.String)
131 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.setSidPrimaryKeyQuery(java.lang.String)
131 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.setUpdateObjectIdentity(java.lang.String)
131 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.setForeignKeysInDatabase(Z)
131 - Declaração do método: org.springframework.security.acls.model.AclService.findChildren(org.springframework.security.acls.model.ObjectIdentity)
131 - Declaração do método: org.springframework.security.acls.model.AclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
131 - Declaração do método: org.springframework.security.acls.model.AclService.readAclById(org.springframework.security.acls.model.ObjectIdentity, java.util.List)
131 - Declaração do método: org.springframework.security.acls.model.AclService.readAclsById(java.util.List)
131 - Declaração do método: org.springframework.security.acls.model.AclService.readAclsById(java.util.List, java.util.List)
131 - Declaração do método: org.springframework.security.acls.model.Sid.equals(java.lang.Object)
131 - Declaração do método: org.springframework.security.acls.model.Sid.hashCode()
131 - Declaração do método: org.springframework.security.acls.model.ChildrenExistException.ChildrenExistException(java.lang.String)
131 - Declaração do método: org.springframework.security.acls.model.ChildrenExistException.ChildrenExistException(java.lang.String, java.lang.Throwable)
131 - Declaração do método: org.springframework.security.acls.model.NotFoundException.NotFoundException(java.lang.String)
131 - Declaração do método: org.springframework.security.acls.model.NotFoundException.NotFoundException(java.lang.String, java.lang.Throwable)
131 - Declaração do método: org.springframework.security.acls.model.AclDataAccessException.AclDataAccessException(java.lang.String, java.lang.Throwable)
131 - Declaração do método: org.springframework.security.acls.model.AclDataAccessException.AclDataAccessException(java.lang.String)
131 - Declaração do método: org.springframework.security.acls.model.MutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
131 - Declaração do método: org.springframework.security.acls.model.MutableAclService.deleteAcl(org.springframework.security.acls.model.ObjectIdentity, Z)
131 - Declaração do método: org.springframework.security.acls.model.MutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
131 - Declaração do método: org.springframework.security.acls.model.SidRetrievalStrategy.getSids(org.springframework.security.core.Authentication)
131 - Declaração do método: org.springframework.security.acls.model.PermissionGrantingStrategy.isGranted(org.springframework.security.acls.model.Acl, java.util.List, java.util.List, Z)
131 - Declaração do método: org.springframework.security.acls.model.AuditableAcl.updateAuditing(I, Z, Z)
131 - Declaração do método: org.springframework.security.acls.model.AccessControlEntry.getAcl()
131 - Declaração do método: org.springframework.security.acls.model.AccessControlEntry.getId()
131 - Declaração do método: org.springframework.security.acls.model.AccessControlEntry.getPermission()
131 - Declaração do método: org.springframework.security.acls.model.AccessControlEntry.getSid()
131 - Declaração do método: org.springframework.security.acls.model.AccessControlEntry.isGranting()
131 - Declaração do método: org.springframework.security.acls.model.Acl.getEntries()
131 - Declaração do método: org.springframework.security.acls.model.Acl.getObjectIdentity()
131 - Declaração do método: org.springframework.security.acls.model.Acl.getOwner()
131 - Declaração do método: org.springframework.security.acls.model.Acl.getParentAcl()
131 - Declaração do método: org.springframework.security.acls.model.Acl.isEntriesInheriting()
131 - Declaração do método: org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
131 - Declaração do método: org.springframework.security.acls.model.Acl.isSidLoaded(java.util.List)
131 - Declaração do método: org.springframework.security.acls.model.AclCache.evictFromCache(java.io.Serializable)
131 - Declaração do método: org.springframework.security.acls.model.AclCache.evictFromCache(org.springframework.security.acls.model.ObjectIdentity)
131 - Declaração do método: org.springframework.security.acls.model.AclCache.getFromCache(org.springframework.security.acls.model.ObjectIdentity)
131 - Declaração do método: org.springframework.security.acls.model.AclCache.getFromCache(java.io.Serializable)
131 - Declaração do método: org.springframework.security.acls.model.AclCache.putInCache(org.springframework.security.acls.model.MutableAcl)
131 - Declaração do método: org.springframework.security.acls.model.AclCache.clearCache()
131 - Declaração do método: org.springframework.security.acls.model.AlreadyExistsException.AlreadyExistsException(java.lang.String)
131 - Declaração do método: org.springframework.security.acls.model.AlreadyExistsException.AlreadyExistsException(java.lang.String, java.lang.Throwable)
131 - Declaração do método: org.springframework.security.acls.model.MutableAcl.deleteAce(I)
131 - Declaração do método: org.springframework.security.acls.model.MutableAcl.getId()
131 - Declaração do método: org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
131 - Declaração do método: org.springframework.security.acls.model.MutableAcl.setOwner(org.springframework.security.acls.model.Sid)
131 - Declaração do método: org.springframework.security.acls.model.MutableAcl.setEntriesInheriting(Z)
131 - Declaração do método: org.springframework.security.acls.model.MutableAcl.setParent(org.springframework.security.acls.model.Acl)
131 - Declaração do método: org.springframework.security.acls.model.MutableAcl.updateAce(I, org.springframework.security.acls.model.Permission)
131 - Declaração do método: org.springframework.security.acls.model.ObjectIdentityRetrievalStrategy.getObjectIdentity(java.lang.Object)
131 - Declaração do método: org.springframework.security.acls.model.OwnershipAcl.setOwner(org.springframework.security.acls.model.Sid)
131 - Declaração do método: org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditFailure()
131 - Declaração do método: org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditSuccess()
131 - Declaração do método: org.springframework.security.acls.model.ObjectIdentity.equals(java.lang.Object)
131 - Declaração do método: org.springframework.security.acls.model.ObjectIdentity.getIdentifier()
131 - Declaração do método: org.springframework.security.acls.model.ObjectIdentity.getType()
131 - Declaração do método: org.springframework.security.acls.model.ObjectIdentity.hashCode()
131 - Declaração do método: org.springframework.security.acls.model.UnloadedSidException.UnloadedSidException(java.lang.String)
131 - Declaração do método: org.springframework.security.acls.model.UnloadedSidException.UnloadedSidException(java.lang.String, java.lang.Throwable)
131 - Declaração do método: org.springframework.security.acls.model.ObjectIdentityGenerator.createObjectIdentity(java.io.Serializable, java.lang.String)
131 - Declaração do método: org.springframework.security.acls.model.Permission.getMask()
131 - Declaração do método: org.springframework.security.acls.model.Permission.getPattern()
131 - Declaração do método: org.springframework.security.config.SecurityNamespaceHandler.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.security.config.SecurityNamespaceHandler.namespaceMatchesVersion(org.w3c.dom.Element)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.fatal(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getDelegate()
org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.getLocalName(org.w3c.dom.Node)
java.util.Map.get(java.lang.Object)
org.springframework.security.config.SecurityNamespaceHandler.loadParsers()
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.springframework.security.config.SecurityNamespaceHandler.reportMissingWebClasses(java.lang.String, org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Node)
org.springframework.security.config.SecurityNamespaceHandler.reportUnsupportedNodeType(java.lang.String, org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Node)
org.springframework.beans.factory.xml.BeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
132 - Declaração do método: org.springframework.security.config.SecurityNamespaceHandler.decorate(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.getDelegate()
org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.getLocalName(org.w3c.dom.Node)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.xml.BeanDefinitionDecorator.decorate(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.xml.ParserContext)
java.lang.String.equals(java.lang.Object)
org.springframework.security.config.SecurityNamespaceHandler.loadParsers()
org.springframework.security.config.SecurityNamespaceHandler.reportMissingWebClasses(java.lang.String, org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Node)
org.springframework.beans.factory.xml.BeanDefinitionDecorator.decorate(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.xml.ParserContext)
org.springframework.security.config.SecurityNamespaceHandler.reportUnsupportedNodeType(java.lang.String, org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Node)
133 - Declaração do método: org.springframework.security.config.SecurityNamespaceHandler.reportUnsupportedNodeType(java.lang.String, org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Node)
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.fatal(java.lang.String, java.lang.Object)
134 - Declaração do método: org.springframework.security.config.SecurityNamespaceHandler.reportMissingWebClasses(java.lang.String, org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Node)
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.fatal(java.lang.String, java.lang.Object)
135 - Declaração do método: org.springframework.security.config.SecurityNamespaceHandler.init()
Métodos invocados: 
org.springframework.security.config.SecurityNamespaceHandler.loadParsers()
136 - Declaração do método: org.springframework.security.config.SecurityNamespaceHandler.loadParsers()
Métodos invocados: 
java.util.Map.put(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
java.util.Map.put(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
java.util.Map.put(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
java.util.Map.put(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
java.util.Map.put(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
java.util.Map.put(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
java.util.Map.put(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
java.util.Map.put(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
java.util.Map.put(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
java.lang.Object.getClass()
java.lang.Class.getClassLoader()
org.springframework.util.ClassUtils.isPresent(java.lang.String, java.lang.ClassLoader)
java.util.Map.put(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
java.util.Map.put(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
java.util.Map.put(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
137 - Declaração do método: org.springframework.security.config.SecurityNamespaceHandler.namespaceMatchesVersion(org.w3c.dom.Element)
Métodos invocados: 
org.springframework.security.config.SecurityNamespaceHandler.matchesVersionInternal(org.w3c.dom.Element)
org.w3c.dom.Node.getOwnerDocument()
org.w3c.dom.Document.getDocumentElement()
org.springframework.security.config.SecurityNamespaceHandler.matchesVersionInternal(org.w3c.dom.Element)
138 - Declaração do método: org.springframework.security.config.SecurityNamespaceHandler.matchesVersionInternal(org.w3c.dom.Element)
Métodos invocados: 
org.w3c.dom.Element.getAttributeNS(java.lang.String, java.lang.String)
java.lang.String.matches(java.lang.String)
java.lang.String.matches(java.lang.String)
java.lang.String.matches(java.lang.String)
139 - Declaração do método: org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.security.config.authentication.PasswordEncoderParser.getPasswordEncoder()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.security.config.authentication.PasswordEncoderParser.getSaltSource()
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.security.config.authentication.PasswordEncoderParser.getSaltSource()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.add(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getDelegate()
org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(org.w3c.dom.Element, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
140 - Declaração do método: org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParser.getBeanClassName(org.w3c.dom.Element)
140 - Declaração do método: org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParser.doParse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyReference(java.lang.String, java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
141 - Declaração do método: org.springframework.security.config.authentication.UserServiceBeanDefinitionParser.getBeanClassName(org.w3c.dom.Element)
Métodos invocados: 
java.lang.Class.getName()
142 - Declaração do método: org.springframework.security.config.authentication.UserServiceBeanDefinitionParser.doParse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.xml.DomUtils.getChildElementsByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.CollectionUtils.isEmpty(java.util.Collection)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.util.CollectionUtils.isEmpty(java.util.Collection)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasLength(java.lang.String)
org.springframework.security.config.authentication.UserServiceBeanDefinitionParser.generateRandomPassword()
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.setFactoryMethod(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
java.util.ArrayList.add(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
143 - Declaração do método: org.springframework.security.config.authentication.UserServiceBeanDefinitionParser.generateRandomPassword()
Métodos invocados: 
java.security.SecureRandom.getInstance(java.lang.String)
java.util.Random.nextLong()
java.lang.Long.toString(J)
144 - Declaração do método: org.springframework.security.config.authentication.AbstractUserDetailsServiceBeanDefinitionParser.getBeanClassName(org.w3c.dom.Element)
144 - Declaração do método: org.springframework.security.config.authentication.AbstractUserDetailsServiceBeanDefinitionParser.doParse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)
144 - Declaração do método: org.springframework.security.config.authentication.AbstractUserDetailsServiceBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.security.config.authentication.AbstractUserDetailsServiceBeanDefinitionParser.getBeanClassName(org.w3c.dom.Element)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.String)
org.springframework.security.config.authentication.AbstractUserDetailsServiceBeanDefinitionParser.doParse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.security.config.authentication.AbstractUserDetailsServiceBeanDefinitionParser.resolveId(org.w3c.dom.Element, org.springframework.beans.factory.support.AbstractBeanDefinition, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgReference(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
145 - Declaração do método: org.springframework.security.config.authentication.AbstractUserDetailsServiceBeanDefinitionParser.resolveId(org.w3c.dom.Element, org.springframework.beans.factory.support.AbstractBeanDefinition, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.isNested()
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.getContainingBeanDefinition()
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.add(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.containsBeanDefinition(java.lang.String)
146 - Declaração do método: org.springframework.security.config.authentication.PasswordEncoderParser.PasswordEncoderParser(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.security.config.authentication.PasswordEncoderParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
147 - Declaração do método: org.springframework.security.config.authentication.PasswordEncoderParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.Boolean.booleanValue()
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.authentication.PasswordEncoderParser.createPasswordEncoderBeanDefinition(java.lang.String, Z)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.security.config.authentication.SaltSourceBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
148 - Declaração do método: org.springframework.security.config.authentication.PasswordEncoderParser.createPasswordEncoderBeanDefinition(java.lang.String, Z)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
java.lang.Class.isAssignableFrom(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.apache.commons.logging.Log.warn(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
149 - Declaração do método: org.springframework.security.config.authentication.PasswordEncoderParser.getPasswordEncoder()
149 - Declaração do método: org.springframework.security.config.authentication.PasswordEncoderParser.getSaltSource()
149 - Declaração do método: org.springframework.security.config.authentication.CachingUserDetailsService.CachingUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
149 - Declaração do método: org.springframework.security.config.authentication.CachingUserDetailsService.getUserCache()
149 - Declaração do método: org.springframework.security.config.authentication.CachingUserDetailsService.setUserCache(org.springframework.security.core.userdetails.UserCache)
149 - Declaração do método: org.springframework.security.config.authentication.CachingUserDetailsService.loadUserByUsername(java.lang.String)
Métodos invocados: 
org.springframework.security.core.userdetails.UserCache.getUserFromCache(java.lang.String)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.core.userdetails.UserCache.putUserInCache(org.springframework.security.core.userdetails.UserDetails)
150 - Declaração do método: org.springframework.security.config.authentication.AuthenticationManagerBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.containsBeanDefinition(java.lang.String)
org.springframework.util.Assert.state(Z, java.lang.String)
org.w3c.dom.Element.getTagName()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.pushContainingComponent(org.springframework.beans.factory.parsing.CompositeComponentDefinition)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.security.config.authentication.AuthenticationManagerBeanDefinitionParser.checkForDeprecatedSessionControllerRef(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.getNamespaceHandlerResolver()
org.w3c.dom.Node.getChildNodes()
org.w3c.dom.NodeList.getLength()
org.w3c.dom.NodeList.item(I)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.w3c.dom.Node.getAttributes()
org.w3c.dom.NamedNodeMap.getLength()
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.w3c.dom.Node.getChildNodes()
org.w3c.dom.NodeList.getLength()
org.w3c.dom.NodeList.item(I)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
java.util.List.add(org.springframework.beans.BeanMetadataElement)
org.w3c.dom.Node.getNamespaceURI()
org.springframework.beans.factory.xml.NamespaceHandlerResolver.resolve(java.lang.String)
org.springframework.beans.factory.xml.NamespaceHandler.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.w3c.dom.Node.getNodeName()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
java.util.List.add(org.springframework.beans.BeanMetadataElement)
java.util.List.isEmpty()
java.util.List.add(org.springframework.beans.BeanMetadataElement)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyReference(java.lang.String, java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.core.AliasRegistry.registerAlias(java.lang.String, java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.fireAliasRegistered(java.lang.String, java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.popAndRegisterContainingComponent()
151 - Declaração do método: org.springframework.security.config.authentication.AuthenticationManagerBeanDefinitionParser.checkForDeprecatedSessionControllerRef(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.warning(java.lang.String, java.lang.Object)
152 - Declaração do método: org.springframework.security.config.authentication.AuthenticationManagerBeanDefinitionParser$NullAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
152 - Declaração do método: org.springframework.security.config.authentication.AuthenticationManagerBeanDefinitionParser$NullAuthenticationProvider.supports(java.lang.Class)
152 - Declaração do método: org.springframework.security.config.authentication.AuthenticationManagerFactoryBean.getObject()
Métodos invocados: 
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
org.springframework.beans.factory.NoSuchBeanDefinitionException.getBeanName()
java.lang.String.equals(java.lang.Object)
153 - Declaração do método: org.springframework.security.config.authentication.AuthenticationManagerFactoryBean.getObjectType()
153 - Declaração do método: org.springframework.security.config.authentication.AuthenticationManagerFactoryBean.isSingleton()
153 - Declaração do método: org.springframework.security.config.authentication.AuthenticationManagerFactoryBean.setBeanFactory(org.springframework.beans.factory.BeanFactory)
153 - Declaração do método: org.springframework.security.config.authentication.SaltSourceBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.setRole(I)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.setRole(I)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
154 - Declaração do método: org.springframework.security.config.http.FilterInvocationSecurityMetadataSourceParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementsByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasLength(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasLength(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.security.config.http.FilterInvocationSecurityMetadataSourceParser.createSecurityMetadataSource(java.util.List, org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.registerComponent(org.springframework.beans.factory.parsing.ComponentDefinition)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
155 - Declaração do método: org.springframework.security.config.http.FilterInvocationSecurityMetadataSourceParser.createSecurityMetadataSource(java.util.List, org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.security.config.http.MatcherType.fromElement(org.w3c.dom.Element)
org.springframework.security.config.http.FilterInvocationSecurityMetadataSourceParser.isUseExpressions(org.w3c.dom.Element)
org.springframework.security.config.http.FilterInvocationSecurityMetadataSourceParser.parseInterceptUrlsForFilterInvocationRequestMap(org.springframework.security.config.http.MatcherType, java.util.List, Z, org.springframework.beans.factory.xml.ParserContext)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.security.config.http.FilterInvocationSecurityMetadataSourceParser.registerDefaultExpressionHandler(org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgReference(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getRawBeanDefinition()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
156 - Declaração do método: org.springframework.security.config.http.FilterInvocationSecurityMetadataSourceParser.registerDefaultExpressionHandler(org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
157 - Declaração do método: org.springframework.security.config.http.FilterInvocationSecurityMetadataSourceParser.isUseExpressions(org.w3c.dom.Element)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.String.equals(java.lang.Object)
158 - Declaração do método: org.springframework.security.config.http.FilterInvocationSecurityMetadataSourceParser.parseInterceptUrlsForFilterInvocationRequestMap(org.springframework.security.config.http.MatcherType, java.util.List, Z, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.http.MatcherType.createMatcher(java.lang.String, java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.setFactoryMethod(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.setFactoryMethod(java.lang.String)
java.util.HashMap.containsKey(java.lang.Object)
org.apache.commons.logging.Log.warn(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
java.util.HashMap.put(org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.config.BeanDefinition)
159 - Declaração do método: org.springframework.security.config.http.HttpSecurityBeanDefinitionParser.HttpSecurityBeanDefinitionParser()
159 - Declaração do método: org.springframework.security.config.http.HttpSecurityBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getTagName()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.pushContainingComponent(org.springframework.beans.factory.parsing.CompositeComponentDefinition)
org.springframework.security.config.http.MatcherType.fromElement(org.w3c.dom.Element)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.http.MatcherType.createMatcher(java.lang.String, java.lang.String)
org.springframework.security.config.http.HttpSecurityBeanDefinitionParser.createFilterChain(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.security.config.http.MatcherType)
java.util.HashMap.put(org.springframework.beans.factory.config.BeanDefinition, java.util.List)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.security.config.http.HttpSecurityBeanDefinitionParser.registerFilterChainProxy(org.springframework.beans.factory.xml.ParserContext, java.util.Map, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.popAndRegisterContainingComponent()
160 - Declaração do método: org.springframework.security.config.http.HttpSecurityBeanDefinitionParser.createFilterChain(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.security.config.http.MatcherType)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.w3c.dom.Node.getChildNodes()
org.w3c.dom.NodeList.getLength()
org.w3c.dom.Node.getChildNodes()
org.w3c.dom.NodeList.item(I)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.util.Collections.emptyList()
org.springframework.security.config.http.HttpSecurityBeanDefinitionParser.createPortMapper(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.security.config.http.HttpSecurityBeanDefinitionParser.createAuthenticationManager(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.ManagedList, org.springframework.beans.factory.config.BeanReference)
org.springframework.security.config.http.HttpConfigurationBuilder.getSessionCreationPolicy()
org.springframework.security.config.http.HttpConfigurationBuilder.getRequestCache()
org.springframework.security.config.http.HttpConfigurationBuilder.getSessionStrategy()
org.springframework.security.config.http.AuthenticationConfigBuilder.getProviders()
java.util.ArrayList.addAll(java.util.Collection)
org.springframework.security.config.http.HttpConfigurationBuilder.getFilters()
java.util.List.addAll(java.util.Collection)
org.springframework.security.config.http.AuthenticationConfigBuilder.getFilters()
java.util.List.addAll(java.util.Collection)
org.springframework.security.config.http.HttpSecurityBeanDefinitionParser.buildCustomFilterList(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
java.util.List.addAll(java.util.Collection)
java.util.Collections.sort(java.util.List, java.util.Comparator)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.security.config.http.HttpSecurityBeanDefinitionParser.checkFilterChainOrder(java.util.List, org.springframework.beans.factory.xml.ParserContext, java.lang.Object)
java.util.List.add(org.springframework.beans.BeanMetadataElement)
161 - Declaração do método: org.springframework.security.config.http.HttpSecurityBeanDefinitionParser.createPortMapper(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.security.config.http.PortMappingsBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
162 - Declaração do método: org.springframework.security.config.http.HttpSecurityBeanDefinitionParser.createAuthenticationManager(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.ManagedList, org.springframework.beans.factory.config.BeanReference)
Métodos invocados: 
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getRawBeanDefinition()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
163 - Declaração do método: org.springframework.security.config.http.HttpSecurityBeanDefinitionParser.checkFilterChainOrder(java.util.List, org.springframework.beans.factory.xml.ParserContext, java.lang.Object)
Métodos invocados: 
org.apache.commons.logging.Log.info(java.lang.Object)
java.util.List.size()
java.util.List.get(I)
java.util.List.get(I)
org.springframework.security.config.http.OrderDecorator.getOrder()
org.springframework.security.config.http.OrderDecorator.getOrder()
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
164 - Declaração do método: org.springframework.security.config.http.HttpSecurityBeanDefinitionParser.buildCustomFilterList(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementsByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.security.config.http.WebConfigUtils.countNonEmpty([Ljava.lang.String;)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.http.SecurityFilters.valueOf(java.lang.String)
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.http.SecurityFilters.valueOf(java.lang.String)
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
org.springframework.security.config.http.SecurityFilters.getOrder()
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.http.SecurityFilters.valueOf(java.lang.String)
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
org.springframework.security.config.http.SecurityFilters.getOrder()
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
165 - Declaração do método: org.springframework.security.config.http.HttpSecurityBeanDefinitionParser.registerFilterChainProxy(org.springframework.beans.factory.xml.ParserContext, java.util.Map, java.lang.Object)
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.containsBeanDefinition(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.getBeanDefinition(java.lang.String)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.getPropertyValue(java.lang.String)
org.springframework.beans.PropertyValue.getValue()
java.util.Map.keySet()
java.util.Map.containsKey(java.lang.Object)
org.springframework.beans.factory.config.BeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.getIndexedArgumentValues()
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
java.util.Map.get(java.lang.Object)
org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder.getValue()
java.util.Map.get(java.lang.Object)
org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder.getValue()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
java.util.Map.putAll(java.util.Map)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getRawBeanDefinition()
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.core.AliasRegistry.registerAlias(java.lang.String, java.lang.String)
166 - Declaração do método: org.springframework.security.config.http.OrderDecorator.OrderDecorator(org.springframework.beans.BeanMetadataElement, org.springframework.security.config.http.SecurityFilters)
Métodos invocados: 
org.springframework.security.config.http.SecurityFilters.getOrder()
167 - Declaração do método: org.springframework.security.config.http.OrderDecorator.OrderDecorator(org.springframework.beans.BeanMetadataElement, I)
167 - Declaração do método: org.springframework.security.config.http.OrderDecorator.getOrder()
167 - Declaração do método: org.springframework.security.config.http.OrderDecorator.toString()
167 - Declaração do método: org.springframework.security.config.http.LogoutBeanDefinitionParser.LogoutBeanDefinitionParser(java.lang.String)
167 - Declaração do método: org.springframework.security.config.http.LogoutBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getRawBeanDefinition()
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.security.config.http.WebConfigUtils.validateHttpRedirect(java.lang.String, org.springframework.beans.factory.xml.ParserContext, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.security.config.http.WebConfigUtils.validateHttpRedirect(java.lang.String, org.springframework.beans.factory.xml.ParserContext, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgReference(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler.setInvalidateHttpSession(Z)
org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler.setInvalidateHttpSession(Z)
java.util.ArrayList.add(java.lang.Object)
java.util.ArrayList.add(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
168 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.AuthenticationConfigBuilder(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.security.config.http.SessionCreationPolicy, org.springframework.beans.factory.config.BeanReference, org.springframework.beans.factory.config.BeanReference, org.springframework.beans.factory.config.BeanReference)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.String.equals(java.lang.Object)
java.security.SecureRandom.getInstance(java.lang.String)
org.springframework.security.config.http.AuthenticationConfigBuilder.createAnonymousFilter()
org.springframework.security.config.http.AuthenticationConfigBuilder.createRememberMeFilter(org.springframework.beans.factory.config.BeanReference)
org.springframework.security.config.http.AuthenticationConfigBuilder.createBasicFilter(org.springframework.beans.factory.config.BeanReference)
org.springframework.security.config.http.AuthenticationConfigBuilder.createFormLoginFilter(org.springframework.beans.factory.config.BeanReference, org.springframework.beans.factory.config.BeanReference)
org.springframework.security.config.http.AuthenticationConfigBuilder.createOpenIDLoginFilter(org.springframework.beans.factory.config.BeanReference, org.springframework.beans.factory.config.BeanReference)
org.springframework.security.config.http.AuthenticationConfigBuilder.createX509Filter(org.springframework.beans.factory.config.BeanReference)
org.springframework.security.config.http.AuthenticationConfigBuilder.createJeeFilter(org.springframework.beans.factory.config.BeanReference)
org.springframework.security.config.http.AuthenticationConfigBuilder.createLogoutFilter()
org.springframework.security.config.http.AuthenticationConfigBuilder.createLoginPageFilterIfNeeded()
org.springframework.security.config.http.AuthenticationConfigBuilder.createUserDetailsServiceFactory()
org.springframework.security.config.http.AuthenticationConfigBuilder.createExceptionTranslationFilter()
169 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.createRememberMeFilter(org.springframework.beans.factory.config.BeanReference)
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.http.RememberMeBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.getPropertyValue(java.lang.String)
org.springframework.beans.PropertyValue.getValue()
org.springframework.beans.factory.config.RuntimeBeanReference.getBeanName()
org.springframework.security.config.http.AuthenticationConfigBuilder.createRememberMeProvider(java.lang.String)
170 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.createRememberMeProvider(java.lang.String)
Métodos invocados: 
org.springframework.beans.BeanMetadataElement.getSource()
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
171 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.createFormLoginFilter(org.springframework.beans.factory.config.BeanReference, org.springframework.beans.factory.config.BeanReference)
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.security.config.http.FormLoginBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.security.config.http.FormLoginBeanDefinitionParser.getFilterBean()
org.springframework.security.config.http.FormLoginBeanDefinitionParser.getEntryPointBean()
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
org.springframework.security.config.http.AuthenticationConfigBuilder.injectRememberMeServicesRef(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String)
172 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.createOpenIDLoginFilter(org.springframework.beans.factory.config.BeanReference, org.springframework.beans.factory.config.BeanReference)
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.security.config.http.FormLoginBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.security.config.http.FormLoginBeanDefinitionParser.getFilterBean()
org.springframework.security.config.http.FormLoginBeanDefinitionParser.getEntryPointBean()
org.springframework.util.xml.DomUtils.getChildElementsByTagName(org.w3c.dom.Element, java.lang.String)
java.util.List.isEmpty()
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.util.List.size()
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.security.config.http.AuthenticationConfigBuilder.parseOpenIDAttributes(org.w3c.dom.Element)
java.util.HashMap.put(java.lang.String, org.springframework.beans.factory.support.ManagedList)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
org.springframework.security.config.http.AuthenticationConfigBuilder.injectRememberMeServicesRef(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String)
org.springframework.security.config.http.AuthenticationConfigBuilder.createOpenIDProvider()
173 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.parseOpenIDAttributes(org.w3c.dom.Element)
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementsByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.util.StringUtils.hasLength(java.lang.String)
java.lang.Boolean.valueOf(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasLength(java.lang.String)
java.lang.Integer.parseInt(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
java.util.ArrayList.add(org.springframework.beans.factory.config.BeanDefinition)
174 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.createOpenIDProvider()
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.setFactoryBeanName(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.setFactoryMethodName(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)
175 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.injectRememberMeServicesRef(org.springframework.beans.factory.support.RootBeanDefinition, java.lang.String)
Métodos invocados: 
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
176 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.createBasicFilter(org.springframework.beans.factory.config.BeanReference)
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
177 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.createX509Filter(org.springframework.beans.factory.config.BeanReference)
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getRawBeanDefinition()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.security.config.http.AuthenticationConfigBuilder.createPrauthEntryPoint(org.w3c.dom.Element)
org.springframework.security.config.http.AuthenticationConfigBuilder.createX509Provider()
178 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.createX509Provider()
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.setFactoryBeanName(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.setFactoryMethodName(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)
179 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.createPrauthEntryPoint(org.w3c.dom.Element)
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
180 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.createJeeFilter(org.springframework.beans.factory.config.BeanReference)
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getRawBeanDefinition()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.Assert.state(Z)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.setFactoryMethod(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.security.config.http.AuthenticationConfigBuilder.createPrauthEntryPoint(org.w3c.dom.Element)
org.springframework.security.config.http.AuthenticationConfigBuilder.createJeeProvider()
181 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.createJeeProvider()
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.setFactoryBeanName(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.setFactoryMethodName(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)
182 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.createLoginPageFilterIfNeeded()
Métodos invocados: 
org.springframework.security.config.http.AuthenticationConfigBuilder.getLoginFormUrl(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.security.config.http.AuthenticationConfigBuilder.getLoginFormUrl(org.springframework.beans.factory.config.BeanDefinition)
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgReference(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgReference(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
183 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.createLogoutFilter()
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.security.config.http.LogoutBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
184 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.createAnonymousFilter()
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.util.Random.nextLong()
java.lang.Long.toString(J)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(org.springframework.beans.PropertyValue)
org.springframework.beans.BeanMetadataAttributeAccessor.getSource()
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(org.springframework.beans.PropertyValue)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
185 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.createExceptionTranslationFilter()
Métodos invocados: 
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.security.config.http.AuthenticationConfigBuilder.createAccessDeniedHandler(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.security.config.http.AuthenticationConfigBuilder.selectEntryPoint()
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
186 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.createAccessDeniedHandler(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.security.config.http.WebConfigUtils.validateHttpRedirect(java.lang.String, org.springframework.beans.factory.xml.ParserContext, java.lang.Object)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
187 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.selectEntryPoint()
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.security.config.http.AuthenticationConfigBuilder.getLoginFormUrl(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.security.config.http.AuthenticationConfigBuilder.getLoginFormUrl(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
188 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.getLoginFormUrl(org.springframework.beans.factory.config.BeanDefinition)
Métodos invocados: 
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.PropertyValues.getPropertyValue(java.lang.String)
org.springframework.beans.PropertyValue.getValue()
java.lang.String.equals(java.lang.Object)
org.springframework.beans.PropertyValue.getValue()
189 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.createUserDetailsServiceFactory()
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.containsBeanDefinition(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.setRole(I)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
190 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.getFilters()
Métodos invocados: 
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
191 - Declaração do método: org.springframework.security.config.http.AuthenticationConfigBuilder.getProviders()
Métodos invocados: 
java.util.List.add(org.springframework.beans.factory.config.BeanReference)
java.util.List.add(org.springframework.beans.factory.config.BeanReference)
java.util.List.add(org.springframework.beans.factory.config.BeanReference)
java.util.List.add(org.springframework.beans.factory.config.BeanReference)
java.util.List.add(org.springframework.beans.factory.config.BeanReference)
192 - Declaração do método: org.springframework.security.config.http.RememberMeBeanDefinitionParser.RememberMeBeanDefinitionParser(java.lang.String)
192 - Declaração do método: org.springframework.security.config.http.RememberMeBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getTagName()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.pushContainingComponent(org.springframework.beans.factory.parsing.CompositeComponentDefinition)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.setFactoryBeanName(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.setFactoryMethodName(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
java.lang.Integer.intValue()
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.core.AliasRegistry.registerAlias(java.lang.String, java.lang.String)
org.springframework.security.config.http.RememberMeBeanDefinitionParser.createFilter(org.springframework.beans.factory.xml.ParserContext, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.popAndRegisterContainingComponent()
193 - Declaração do método: org.springframework.security.config.http.RememberMeBeanDefinitionParser.createFilter(org.springframework.beans.factory.xml.ParserContext, java.lang.Object)
Métodos invocados: 
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getRawBeanDefinition()
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyReference(java.lang.String, java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
194 - Declaração do método: org.springframework.security.config.http.FilterChainMapBeanDefinitionDecorator.decorate(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.config.BeanDefinitionHolder.getBeanDefinition()
org.springframework.security.config.http.MatcherType.fromElement(org.w3c.dom.Element)
org.springframework.util.xml.DomUtils.getChildElementsByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.security.config.http.MatcherType.createMatcher(java.lang.String, java.lang.String)
java.lang.String.equals(java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.util.StringUtils.tokenizeToStringArray(java.lang.String, java.lang.String)
java.util.ArrayList.add(java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.size()
java.util.HashMap.putAll(java.util.Map)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
195 - Declaração do método: org.springframework.security.config.http.PortMappingsBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.util.xml.DomUtils.getChildElementsByTagName(org.w3c.dom.Element, java.lang.String)
java.util.List.isEmpty()
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
196 - Declaração do método: org.springframework.security.config.http.SecurityFilters.SecurityFilters()
Métodos invocados: 
java.lang.Enum.ordinal()
197 - Declaração do método: org.springframework.security.config.http.SecurityFilters.SecurityFilters(I)
197 - Declaração do método: org.springframework.security.config.http.SecurityFilters.getOrder()
197 - Declaração do método: org.springframework.security.config.http.WebConfigUtils.countNonEmpty([Ljava.lang.String;)
Métodos invocados: 
org.springframework.util.StringUtils.hasText(java.lang.String)
198 - Declaração do método: org.springframework.security.config.http.WebConfigUtils.validateHttpRedirect(java.lang.String, org.springframework.beans.factory.xml.ParserContext, java.lang.Object)
Métodos invocados: 
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.web.util.UrlUtils.isValidRedirectUrl(java.lang.String)
java.lang.String.startsWith(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.warning(java.lang.String, java.lang.Object)
199 - Declaração do método: org.springframework.security.config.http.HttpConfigurationBuilder.HttpConfigurationBuilder(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.security.config.http.MatcherType, java.lang.String, org.springframework.beans.factory.config.BeanReference)
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementsByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.http.SessionCreationPolicy.valueOf(java.lang.String)
org.springframework.security.config.http.HttpConfigurationBuilder.createSecurityContextPersistenceFilter()
org.springframework.security.config.http.HttpConfigurationBuilder.createSessionManagementFilters()
org.springframework.security.config.http.HttpConfigurationBuilder.createRequestCacheFilter()
org.springframework.security.config.http.HttpConfigurationBuilder.createServletApiFilter()
org.springframework.security.config.http.HttpConfigurationBuilder.createChannelProcessingFilter()
org.springframework.security.config.http.HttpConfigurationBuilder.createFilterSecurityInterceptor(org.springframework.beans.factory.config.BeanReference)
200 - Declaração do método: org.springframework.security.config.http.HttpConfigurationBuilder.createPath(java.lang.String, Z)
Métodos invocados: 
java.lang.String.toLowerCase()
201 - Declaração do método: org.springframework.security.config.http.HttpConfigurationBuilder.createSecurityContextPersistenceFilter()
Métodos invocados: 
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
202 - Declaração do método: org.springframework.security.config.http.HttpConfigurationBuilder.createSessionManagementFilters()
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.security.config.http.HttpConfigurationBuilder.createConcurrencyControlFilterAndSessionRegistry(org.w3c.dom.Element)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
java.lang.String.equals(java.lang.Object)
java.lang.Boolean.valueOf(Z)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyReference(java.lang.String, java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
203 - Declaração do método: org.springframework.security.config.http.HttpConfigurationBuilder.createConcurrencyControlFilterAndSessionRegistry(org.w3c.dom.Element)
Métodos invocados: 
org.w3c.dom.Element.getTagName()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.pushContainingComponent(org.springframework.beans.factory.parsing.CompositeComponentDefinition)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerComponent(org.springframework.beans.factory.parsing.ComponentDefinition)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.core.AliasRegistry.registerAlias(java.lang.String, java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyReference(java.lang.String, java.lang.String)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getRawBeanDefinition()
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.setRole(I)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.http.WebConfigUtils.validateHttpRedirect(java.lang.String, org.springframework.beans.factory.xml.ParserContext, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.popAndRegisterContainingComponent()
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
204 - Declaração do método: org.springframework.security.config.http.HttpConfigurationBuilder.createServletApiFilter()
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.lang.String.equals(java.lang.Object)
205 - Declaração do método: org.springframework.security.config.http.HttpConfigurationBuilder.createChannelProcessingFilter()
Métodos invocados: 
org.springframework.security.config.http.HttpConfigurationBuilder.parseInterceptUrlsForChannelSecurity()
java.util.HashMap.isEmpty()
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
java.util.ArrayList.add(org.springframework.beans.factory.support.RootBeanDefinition)
java.util.ArrayList.add(org.springframework.beans.factory.support.RootBeanDefinition)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
206 - Declaração do método: org.springframework.security.config.http.HttpConfigurationBuilder.parseInterceptUrlsForChannelSecurity()
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.http.MatcherType.createMatcher(java.lang.String, java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.setFactoryMethodName(java.lang.String)
java.util.HashMap.put(org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.config.BeanDefinition)
207 - Declaração do método: org.springframework.security.config.http.HttpConfigurationBuilder.createRequestCacheFilter()
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyReference(java.lang.String, java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
208 - Declaração do método: org.springframework.security.config.http.HttpConfigurationBuilder.createFilterSecurityInterceptor(org.springframework.beans.factory.config.BeanReference)
Métodos invocados: 
org.springframework.security.config.http.FilterInvocationSecurityMetadataSourceParser.isUseExpressions(org.w3c.dom.Element)
org.springframework.security.config.http.FilterInvocationSecurityMetadataSourceParser.createSecurityMetadataSource(java.util.List, org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.security.config.http.FilterInvocationSecurityMetadataSourceParser.registerDefaultExpressionHandler(org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
java.util.ArrayList.add(org.springframework.beans.factory.config.BeanDefinition)
java.util.ArrayList.add(org.springframework.beans.factory.config.BeanDefinition)
java.util.ArrayList.add(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyReference(java.lang.String, java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
org.springframework.beans.factory.config.BeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
209 - Declaração do método: org.springframework.security.config.http.HttpConfigurationBuilder.getSessionStrategy()
209 - Declaração do método: org.springframework.security.config.http.HttpConfigurationBuilder.getSessionCreationPolicy()
209 - Declaração do método: org.springframework.security.config.http.HttpConfigurationBuilder.getRequestCache()
209 - Declaração do método: org.springframework.security.config.http.HttpConfigurationBuilder.getFilters()
Métodos invocados: 
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
java.util.List.add(org.springframework.security.config.http.OrderDecorator)
210 - Declaração do método: org.springframework.security.config.http.UserDetailsServiceFactoryBean.userDetailsService(java.lang.String)
Métodos invocados: 
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.http.UserDetailsServiceFactoryBean.getUserDetailsService()
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
211 - Declaração do método: org.springframework.security.config.http.UserDetailsServiceFactoryBean.cachingUserDetailsService(java.lang.String)
Métodos invocados: 
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.http.UserDetailsServiceFactoryBean.getUserDetailsService()
org.springframework.beans.factory.ListableBeanFactory.containsBeanDefinition(java.lang.String)
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
212 - Declaração do método: org.springframework.security.config.http.UserDetailsServiceFactoryBean.authenticationUserDetailsService(java.lang.String)
Métodos invocados: 
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.http.UserDetailsServiceFactoryBean.getBeansOfType(java.lang.Class)
java.util.Map.isEmpty()
java.util.Map.size()
java.util.Map.values()
java.util.Collection.toArray()
org.springframework.security.config.http.UserDetailsServiceFactoryBean.getUserDetailsService()
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
org.springframework.security.config.http.UserDetailsServiceFactoryBean.cachingUserDetailsService(java.lang.String)
213 - Declaração do método: org.springframework.security.config.http.UserDetailsServiceFactoryBean.getUserDetailsService()
Métodos invocados: 
org.springframework.security.config.http.UserDetailsServiceFactoryBean.getBeansOfType(java.lang.Class)
java.util.Map.size()
org.springframework.security.config.http.UserDetailsServiceFactoryBean.getBeansOfType(java.lang.Class)
java.util.Map.size()
java.util.Map.size()
java.util.Map.values()
java.util.Collection.toArray()
214 - Declaração do método: org.springframework.security.config.http.UserDetailsServiceFactoryBean.setApplicationContext(org.springframework.context.ApplicationContext)
214 - Declaração do método: org.springframework.security.config.http.UserDetailsServiceFactoryBean.getBeansOfType(java.lang.Class)
Métodos invocados: 
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
org.springframework.beans.factory.HierarchicalBeanFactory.getParentBeanFactory()
java.util.Map.size()
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
org.springframework.beans.factory.HierarchicalBeanFactory.getParentBeanFactory()
215 - Declaração do método: org.springframework.security.config.http.DefaultFilterChainValidator.validate(org.springframework.security.web.FilterChainProxy)
Métodos invocados: 
org.springframework.security.web.FilterChainProxy.getFilterChainMap()
java.util.Map.values()
org.springframework.security.config.http.DefaultFilterChainValidator.checkLoginPageIsntProtected(org.springframework.security.web.FilterChainProxy, java.util.List)
org.springframework.security.config.http.DefaultFilterChainValidator.checkFilterStack(java.util.List)
216 - Declaração do método: org.springframework.security.config.http.DefaultFilterChainValidator.getFilter(java.lang.Class, java.util.List)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
217 - Declaração do método: org.springframework.security.config.http.DefaultFilterChainValidator.checkFilterStack(java.util.List)
Métodos invocados: 
org.springframework.security.config.http.DefaultFilterChainValidator.checkForDuplicates(java.lang.Class, java.util.List)
org.springframework.security.config.http.DefaultFilterChainValidator.checkForDuplicates(java.lang.Class, java.util.List)
org.springframework.security.config.http.DefaultFilterChainValidator.checkForDuplicates(java.lang.Class, java.util.List)
org.springframework.security.config.http.DefaultFilterChainValidator.checkForDuplicates(java.lang.Class, java.util.List)
org.springframework.security.config.http.DefaultFilterChainValidator.checkForDuplicates(java.lang.Class, java.util.List)
org.springframework.security.config.http.DefaultFilterChainValidator.checkForDuplicates(java.lang.Class, java.util.List)
org.springframework.security.config.http.DefaultFilterChainValidator.checkForDuplicates(java.lang.Class, java.util.List)
218 - Declaração do método: org.springframework.security.config.http.DefaultFilterChainValidator.checkForDuplicates(java.lang.Class, java.util.List)
Métodos invocados: 
java.util.List.size()
java.util.List.get(I)
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
java.util.List.size()
java.util.List.get(I)
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.getName()
org.apache.commons.logging.Log.warn(java.lang.Object)
219 - Declaração do método: org.springframework.security.config.http.DefaultFilterChainValidator.checkLoginPageIsntProtected(org.springframework.security.web.FilterChainProxy, java.util.List)
Métodos invocados: 
org.springframework.security.config.http.DefaultFilterChainValidator.getFilter(java.lang.Class, java.util.List)
org.springframework.security.web.access.ExceptionTranslationFilter.getAuthenticationEntryPoint()
org.springframework.security.web.access.ExceptionTranslationFilter.getAuthenticationEntryPoint()
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.getLoginFormUrl()
org.springframework.security.web.FilterChainProxy.getFilters(java.lang.String)
org.apache.commons.logging.Log.info(java.lang.Object)
java.util.List.isEmpty()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.config.http.DefaultFilterChainValidator.getFilter(java.lang.Class, java.util.List)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.config.http.DefaultFilterChainValidator.getFilter(java.lang.Class, java.util.List)
org.springframework.security.web.access.intercept.FilterSecurityInterceptor.getSecurityMetadataSource()
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource.getAttributes(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.isRejectPublicInvocations()
org.apache.commons.logging.Log.warn(java.lang.Object)
org.springframework.security.config.http.DefaultFilterChainValidator.getFilter(java.lang.Class, java.util.List)
org.apache.commons.logging.Log.warn(java.lang.Object)
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.getUserAttribute()
org.springframework.security.core.userdetails.memory.UserAttribute.getPassword()
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.getUserAttribute()
org.springframework.security.core.userdetails.memory.UserAttribute.getAuthorities()
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getAccessDecisionManager()
org.springframework.security.access.AccessDecisionManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.apache.commons.logging.Log.warn(java.lang.Object)
220 - Declaração do método: org.springframework.security.config.http.ChannelAttributeFactory.createChannelAttributes(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
221 - Declaração do método: org.springframework.security.config.http.FormLoginBeanDefinitionParser.FormLoginBeanDefinitionParser(java.lang.String, java.lang.String, org.springframework.beans.factory.config.BeanReference, org.springframework.beans.factory.config.BeanReference, Z)
221 - Declaração do método: org.springframework.security.config.http.FormLoginBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.security.config.http.WebConfigUtils.validateHttpRedirect(java.lang.String, org.springframework.beans.factory.xml.ParserContext, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.security.config.http.WebConfigUtils.validateHttpRedirect(java.lang.String, org.springframework.beans.factory.xml.ParserContext, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.security.config.http.WebConfigUtils.validateHttpRedirect(java.lang.String, org.springframework.beans.factory.xml.ParserContext, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.http.WebConfigUtils.validateHttpRedirect(java.lang.String, org.springframework.beans.factory.xml.ParserContext, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.security.config.http.FormLoginBeanDefinitionParser.createFilterBean(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getRawBeanDefinition()
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
222 - Declaração do método: org.springframework.security.config.http.FormLoginBeanDefinitionParser.createFilterBean(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyReference(java.lang.String, java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyReference(java.lang.String, java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
223 - Declaração do método: org.springframework.security.config.http.FormLoginBeanDefinitionParser.getFilterBean()
223 - Declaração do método: org.springframework.security.config.http.FormLoginBeanDefinitionParser.getEntryPointBean()
223 - Declaração do método: org.springframework.security.config.http.FormLoginBeanDefinitionParser.getLoginPage()
223 - Declaração do método: org.springframework.security.config.http.MatcherType.MatcherType(java.lang.Class)
223 - Declaração do método: org.springframework.security.config.http.MatcherType.createMatcher(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
224 - Declaração do método: org.springframework.security.config.http.MatcherType.fromElement(org.w3c.dom.Element)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.security.config.http.MatcherType.valueOf(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.apache.commons.logging.Log.warn(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.security.config.http.MatcherType.valueOf(java.lang.String)
225 - Declaração do método: org.springframework.security.config.ldap.LdapProviderBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser.parseServerReference(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser.parseSearchBean(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getRawBeanDefinition()
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.String)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.warning(java.lang.String, java.lang.Object)
org.springframework.security.config.authentication.PasswordEncoderParser.getPasswordEncoder()
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.security.config.authentication.PasswordEncoderParser.getSaltSource()
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.warning(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.authentication.PasswordEncoderParser.createPasswordEncoderBeanDefinition(java.lang.String, Z)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser.parseAuthoritiesPopulator(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser.parseUserDetailsClassOrUserMapperRef(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
226 - Declaração do método: org.springframework.security.config.ldap.ContextSourceSettingPostProcessor.postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
Métodos invocados: 
org.springframework.util.ClassUtils.getDefaultClassLoader()
org.springframework.util.ClassUtils.forName(java.lang.String, java.lang.ClassLoader)
org.springframework.beans.factory.ListableBeanFactory.getBeanNamesForType(java.lang.Class)
org.springframework.beans.factory.BeanFactory.containsBean(java.lang.String)
org.springframework.beans.factory.config.ConfigurableBeanFactory.registerAlias(java.lang.String, java.lang.String)
227 - Declaração do método: org.springframework.security.config.ldap.ContextSourceSettingPostProcessor.setDefaultNameRequired(Z)
227 - Declaração do método: org.springframework.security.config.ldap.ContextSourceSettingPostProcessor.getOrder()
227 - Declaração do método: org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser.getBeanClassName(org.w3c.dom.Element)
227 - Declaração do método: org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser.doParse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser.parseSearchBean(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getRawBeanDefinition()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser.parseAuthoritiesPopulator(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser.parseUserDetailsClassOrUserMapperRef(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
228 - Declaração do método: org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser.parseSearchBean(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getRawBeanDefinition()
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser.parseServerReference(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
229 - Declaração do método: org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser.parseServerReference(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.config.RuntimeBeanReference.setSource(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser.registerPostProcessorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry, Z)
230 - Declaração do método: org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser.registerPostProcessorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry, Z)
Métodos invocados: 
org.springframework.beans.factory.support.BeanDefinitionRegistry.containsBeanDefinition(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionRegistry.getBeanDefinition(java.lang.String)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
java.lang.Boolean.valueOf(Z)
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
java.lang.Boolean.valueOf(Z)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
231 - Declaração do método: org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser.parseUserDetailsClassOrUserMapperRef(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
232 - Declaração do método: org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser.parseAuthoritiesPopulator(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getRawBeanDefinition()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser.parseServerReference(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasLength(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
233 - Declaração do método: org.springframework.security.config.ldap.LdapServerBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.ldap.LdapServerBeanDefinitionParser.createEmbeddedServer(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.AbstractBeanDefinition.setBeanClassName(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addIndexedArgumentValue(I, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
234 - Declaração do método: org.springframework.security.config.ldap.LdapServerBeanDefinitionParser.createEmbeddedServer(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.containsBeanDefinition(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
235 - Declaração do método: org.springframework.security.config.method.MethodConfigUtils.registerDefaultMethodAccessManagerIfNecessary(org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.containsBeanDefinition(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.security.config.method.MethodConfigUtils.createAccessManagerBean([Ljava.lang.Class;)
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
236 - Declaração do método: org.springframework.security.config.method.MethodConfigUtils.createAccessManagerBean([Ljava.lang.Class;)
Métodos invocados: 
java.util.ArrayList.add(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
237 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getTagName()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.pushContainingComponent(org.springframework.beans.factory.parsing.CompositeComponentDefinition)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgReference(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgReference(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgReference(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyReference(java.lang.String, java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgReference(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgReference(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArgValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
java.util.ArrayList.add(org.springframework.beans.BeanMetadataElement)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
java.util.ArrayList.add(org.springframework.beans.BeanMetadataElement)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
java.util.ArrayList.add(org.springframework.beans.BeanMetadataElement)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
java.util.ArrayList.add(org.springframework.beans.BeanMetadataElement)
org.springframework.util.xml.DomUtils.getChildElementsByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParser.parseProtectPointcuts(org.springframework.beans.factory.xml.ParserContext, java.util.List)
java.util.Map.size()
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
java.util.ArrayList.add(org.springframework.beans.BeanMetadataElement)
org.springframework.beans.factory.config.BeanReference.getBeanName()
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParser.registerProtectPointcutPostProcessor(org.springframework.beans.factory.xml.ParserContext, java.util.Map, org.springframework.beans.factory.config.BeanReference, java.lang.Object)
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParser.registerDelegatingMethodSecurityMetadataSource(org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.ManagedList, java.lang.Object)
org.springframework.util.xml.DomUtils.getChildElementsByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
java.util.ArrayList.add(org.springframework.beans.BeanMetadataElement)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParser.registerAccessManager(org.springframework.beans.factory.xml.ParserContext, Z, org.springframework.beans.factory.config.BeanDefinition)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParser.registerMethodSecurityInterceptor(org.springframework.beans.factory.xml.ParserContext, java.lang.String, java.lang.String, org.springframework.beans.factory.config.BeanReference, java.util.List, java.lang.Object, Z)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.setFactoryMethod(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.setRole(I)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.xml.XmlReaderContext.registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParser.registerAdvisor(org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.config.BeanReference, org.springframework.beans.factory.config.BeanReference, java.lang.Object, java.lang.String)
org.springframework.aop.config.AopNamespaceUtils.registerAutoProxyCreatorIfNecessary(org.springframework.beans.factory.xml.ParserContext, org.w3c.dom.Element)
org.springframework.beans.factory.xml.ParserContext.popAndRegisterContainingComponent()
238 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParser.registerAccessManager(org.springframework.beans.factory.xml.ParserContext, Z, org.springframework.beans.factory.config.BeanDefinition)
Métodos invocados: 
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
java.util.ArrayList.add(java.lang.Object)
java.util.ArrayList.add(java.lang.Object)
java.util.ArrayList.add(java.lang.Object)
java.util.ArrayList.add(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
239 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParser.registerDelegatingMethodSecurityMetadataSource(org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.ManagedList, java.lang.Object)
Métodos invocados: 
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
240 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParser.registerProtectPointcutPostProcessor(org.springframework.beans.factory.xml.ParserContext, java.util.Map, org.springframework.beans.factory.config.BeanReference, java.lang.Object)
Métodos invocados: 
org.springframework.beans.factory.support.AbstractBeanDefinition.setRole(I)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.registerWithGeneratedName(org.springframework.beans.factory.config.BeanDefinition)
241 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParser.parseProtectPointcuts(org.springframework.beans.factory.xml.ParserContext, java.util.List)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
java.util.List.add(org.springframework.security.access.ConfigAttribute)
java.util.Map.put(java.lang.String, java.util.List)
242 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParser.registerMethodSecurityInterceptor(org.springframework.beans.factory.xml.ParserContext, java.lang.String, java.lang.String, org.springframework.beans.factory.config.BeanReference, java.util.List, java.lang.Object, Z)
Métodos invocados: 
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getRawBeanDefinition()
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyReference(java.lang.String, java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyReference(java.lang.String, java.lang.String)
java.util.List.isEmpty()
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)
243 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParser.registerAdvisor(org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.config.BeanReference, org.springframework.beans.factory.config.BeanReference, java.lang.Object, java.lang.String)
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.containsBeanDefinition(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.setRole(I)
org.springframework.beans.BeanMetadataAttributeAccessor.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.BeanReference.getBeanName()
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.BeanReference.getBeanName()
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
244 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParser$AuthenticationManagerDelegator.authenticate(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.util.Assert.state(Z, java.lang.String)
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String, java.lang.Class)
org.springframework.beans.factory.NoSuchBeanDefinitionException.getBeanName()
java.lang.String.equals(java.lang.Object)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
245 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParser$AuthenticationManagerDelegator.setBeanFactory(org.springframework.beans.factory.BeanFactory)
245 - Declaração do método: org.springframework.security.config.method.MethodSecurityMetadataSourceBeanDefinitionParser.parseInternal(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementsByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
java.util.Map.put(java.lang.String, java.util.List)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
246 - Declaração do método: org.springframework.security.config.method.InterceptMethodsBeanDefinitionDecorator.decorate(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.security.config.method.MethodConfigUtils.registerDefaultMethodAccessManagerIfNecessary(org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.xml.BeanDefinitionDecorator.decorate(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.xml.ParserContext)
247 - Declaração do método: org.springframework.security.config.method.InternalInterceptMethodsBeanDefinitionDecorator.createInterceptorDefinition(org.w3c.dom.Node)
Métodos invocados: 
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.setAutowireMode(I)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.w3c.dom.Node.getParentNode()
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.xml.DomUtils.getChildElementsByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
java.util.Map.put(java.lang.String, java.util.List)
org.springframework.beans.factory.config.BeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
248 - Declaração do método: org.springframework.security.config.method.ProtectPointcutPostProcessor.ProtectPointcutPostProcessor(org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.Set.add(org.aspectj.weaver.tools.PointcutPrimitive)
java.util.Set.add(org.aspectj.weaver.tools.PointcutPrimitive)
java.util.Set.add(org.aspectj.weaver.tools.PointcutPrimitive)
org.aspectj.weaver.tools.PointcutParser.getPointcutParserSupportingSpecifiedPrimitivesAndUsingContextClassloaderForResolution(java.util.Set)
249 - Declaração do método: org.springframework.security.config.method.ProtectPointcutPostProcessor.postProcessAfterInitialization(java.lang.Object, java.lang.String)
249 - Declaração do método: org.springframework.security.config.method.ProtectPointcutPostProcessor.postProcessBeforeInitialization(java.lang.Object, java.lang.String)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getMethods()
java.lang.Throwable.getMessage()
java.lang.Object.getClass()
org.springframework.security.config.method.ProtectPointcutPostProcessor.attemptMatch(java.lang.Class, java.lang.reflect.Method, org.aspectj.weaver.tools.PointcutExpression, java.lang.String)
250 - Declaração do método: org.springframework.security.config.method.ProtectPointcutPostProcessor.attemptMatch(java.lang.Class, java.lang.reflect.Method, org.aspectj.weaver.tools.PointcutExpression, java.lang.String)
Métodos invocados: 
org.aspectj.weaver.tools.PointcutExpression.matchesMethodExecution(java.lang.reflect.Method)
org.aspectj.weaver.tools.ShadowMatch.alwaysMatches()
org.aspectj.weaver.tools.PointcutExpression.getPointcutExpression()
java.util.Map.get(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.aspectj.weaver.tools.PointcutExpression.getPointcutExpression()
java.lang.Class.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.addSecureMethod(java.lang.Class, java.lang.reflect.Method, java.util.List)
251 - Declaração do método: org.springframework.security.config.method.ProtectPointcutPostProcessor.setPointcutMap(java.util.Map)
Métodos invocados: 
org.springframework.util.Assert.notEmpty(java.util.Map)
java.util.Map.keySet()
java.util.Map.get(java.lang.Object)
org.springframework.security.config.method.ProtectPointcutPostProcessor.addPointcut(java.lang.String, java.util.List)
252 - Declaração do método: org.springframework.security.config.method.ProtectPointcutPostProcessor.addPointcut(java.lang.String, java.util.List)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.config.method.ProtectPointcutPostProcessor.replaceBooleanOperators(java.lang.String)
java.util.Map.put(java.lang.String, java.util.List)
org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(java.lang.String)
java.util.Set.add(org.aspectj.weaver.tools.PointcutExpression)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
253 - Declaração do método: org.springframework.security.config.method.ProtectPointcutPostProcessor.replaceBooleanOperators(java.lang.String)
Métodos invocados: 
org.springframework.util.StringUtils.replace(java.lang.String, java.lang.String, java.lang.String)
org.springframework.util.StringUtils.replace(java.lang.String, java.lang.String, java.lang.String)
org.springframework.util.StringUtils.replace(java.lang.String, java.lang.String, java.lang.String)
254 - Declaração do método: org.springframework.security.acls.AclFormattingUtilsTests.testDemergePatternsParametersConstraints()
Métodos invocados: 
org.springframework.security.acls.domain.AclFormattingUtils.demergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.domain.AclFormattingUtils.demergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.domain.AclFormattingUtils.demergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.domain.AclFormattingUtils.demergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
255 - Declaração do método: org.springframework.security.acls.AclFormattingUtilsTests.testDemergePatterns()
Métodos invocados: 
org.springframework.security.acls.domain.AclFormattingUtils.demergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acls.domain.AclFormattingUtils.demergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acls.domain.AclFormattingUtils.demergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
256 - Declaração do método: org.springframework.security.acls.AclFormattingUtilsTests.testMergePatternsParametersConstraints()
Métodos invocados: 
org.springframework.security.acls.domain.AclFormattingUtils.mergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.domain.AclFormattingUtils.mergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.domain.AclFormattingUtils.mergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.domain.AclFormattingUtils.mergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
257 - Declaração do método: org.springframework.security.acls.AclFormattingUtilsTests.testMergePatterns()
Métodos invocados: 
org.springframework.security.acls.domain.AclFormattingUtils.mergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acls.domain.AclFormattingUtils.mergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acls.domain.AclFormattingUtils.mergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
258 - Declaração do método: org.springframework.security.acls.AclFormattingUtilsTests.testBinaryPrints()
Métodos invocados: 
org.springframework.security.acls.domain.AclFormattingUtils.printBinary(I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acls.domain.AclFormattingUtils.printBinary(I, C)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.domain.AclFormattingUtils.printBinary(I, C)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.domain.AclFormattingUtils.printBinary(I, C)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
259 - Declaração do método: org.springframework.security.acls.AclPermissionEvaluatorTests.hasPermissionReturnsTrueIfAclGrantsPermission()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Matchers.anyObject()
org.springframework.security.acls.model.ObjectIdentityRetrievalStrategy.getObjectIdentity(java.lang.Object)
org.mockito.Mockito.when(org.springframework.security.acls.model.ObjectIdentity)
org.mockito.stubbing.OngoingStubbing.thenReturn(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.AclPermissionEvaluator.setObjectIdentityRetrievalStrategy(org.springframework.security.acls.model.ObjectIdentityRetrievalStrategy)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.acls.AclPermissionEvaluator.setSidRetrievalStrategy(org.springframework.security.acls.model.SidRetrievalStrategy)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.anyList()
org.springframework.security.acls.model.AclService.readAclById(org.springframework.security.acls.model.ObjectIdentity, java.util.List)
org.mockito.Mockito.when(org.springframework.security.acls.model.Acl)
org.mockito.stubbing.OngoingStubbing.thenReturn(org.springframework.security.acls.model.Acl)
org.mockito.Matchers.anyList()
org.mockito.Matchers.anyList()
org.mockito.Matchers.eq(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.mockito.Mockito.when(java.lang.Boolean)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.lang.Boolean)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.acls.AclPermissionEvaluator.hasPermission(org.springframework.security.core.Authentication, java.lang.Object, java.lang.Object)
org.junit.Assert.assertTrue(Z)
260 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests.setUp()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Expectations.allowing(org.springframework.security.acls.model.AuditableAccessControlEntry)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditSuccess()
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.allowing(org.springframework.security.acls.model.AuditableAccessControlEntry)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditFailure()
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.allowing(org.springframework.security.acls.model.AuditableAccessControlEntry)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditSuccess()
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.allowing(org.springframework.security.acls.model.AuditableAccessControlEntry)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditFailure()
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
java.lang.System.setOut(java.io.PrintStream)
261 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests.tearDown()
Métodos invocados: 
java.lang.System.setOut(java.io.PrintStream)
java.io.ByteArrayOutputStream.reset()
262 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests.nonAuditableAceIsIgnored()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.acls.domain.ConsoleAuditLogger.logIfNeeded(Z, org.springframework.security.acls.model.AccessControlEntry)
java.io.ByteArrayOutputStream.size()
org.junit.Assert.assertEquals(J, J)
263 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests.successIsNotLoggedIfAceDoesntRequireSuccessAudit()
Métodos invocados: 
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.springframework.security.acls.domain.ConsoleAuditLogger.logIfNeeded(Z, org.springframework.security.acls.model.AccessControlEntry)
java.io.ByteArrayOutputStream.size()
org.junit.Assert.assertEquals(J, J)
264 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests.successIsLoggedIfAceRequiresSuccessAudit()
Métodos invocados: 
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.springframework.security.acls.domain.ConsoleAuditLogger.logIfNeeded(Z, org.springframework.security.acls.model.AccessControlEntry)
java.io.ByteArrayOutputStream.toString()
java.lang.String.startsWith(java.lang.String)
org.junit.Assert.assertTrue(Z)
265 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests.failureIsntLoggedIfAceDoesntRequireFailureAudit()
Métodos invocados: 
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.springframework.security.acls.domain.ConsoleAuditLogger.logIfNeeded(Z, org.springframework.security.acls.model.AccessControlEntry)
java.io.ByteArrayOutputStream.size()
org.junit.Assert.assertEquals(J, J)
266 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests.failureIsLoggedIfAceRequiresFailureAudit()
Métodos invocados: 
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.springframework.security.acls.domain.ConsoleAuditLogger.logIfNeeded(Z, org.springframework.security.acls.model.AccessControlEntry)
java.io.ByteArrayOutputStream.toString()
java.lang.String.startsWith(java.lang.String)
org.junit.Assert.assertTrue(Z)
267 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImplTests.constructorsRespectRequiredFields()
Métodos invocados: 
org.junit.Assert.fail(java.lang.String)
java.lang.Long.valueOf(J)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.fail(java.lang.String)
java.lang.Long.valueOf(J)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.fail(java.lang.String)
268 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImplTests.gettersReturnExpectedValues()
Métodos invocados: 
java.lang.Long.valueOf(J)
java.lang.Long.valueOf(J)
org.springframework.security.acls.model.ObjectIdentity.getIdentifier()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Class.getName()
org.springframework.security.acls.model.ObjectIdentity.getType()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
269 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImplTests.testGetIdMethodConstraints()
Métodos invocados: 
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.acls.domain.ObjectIdentityImplTests$MockIdDomainObject.setId(java.lang.Object)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.acls.domain.ObjectIdentityImplTests$MockIdDomainObject.setId(java.lang.Object)
270 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImplTests.constructorRejectsInvalidTypeParameter()
Métodos invocados: 
java.lang.Long.valueOf(J)
271 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImplTests.testEquals()
Métodos invocados: 
java.lang.Long.valueOf(J)
java.lang.Long.valueOf(J)
org.springframework.security.acls.domain.ObjectIdentityImplTests$MockIdDomainObject.setId(java.lang.Object)
org.junit.Assert.assertNotSame(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.ObjectIdentity.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
org.springframework.security.acls.model.ObjectIdentity.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
java.lang.Long.valueOf(J)
org.springframework.security.acls.model.ObjectIdentity.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
java.lang.Long.valueOf(J)
org.springframework.security.acls.model.ObjectIdentity.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
java.lang.Long.valueOf(J)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
272 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImplTests.hashcodeIsDifferentForDifferentJavaTypes()
Métodos invocados: 
java.lang.Long.valueOf(J)
java.lang.Long.valueOf(J)
org.springframework.security.acls.model.ObjectIdentity.hashCode()
org.springframework.security.acls.model.ObjectIdentity.hashCode()
org.junit.Assert.assertFalse(Z)
273 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImplTests.longAndIntegerIdsWithSameValueAreEqualAndHaveSameHashcode()
Métodos invocados: 
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.ObjectIdentity.hashCode()
org.springframework.security.acls.model.ObjectIdentity.hashCode()
org.junit.Assert.assertEquals(J, J)
274 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImplTests.equalStringIdsAreEqualAndHaveSameHashcode()
Métodos invocados: 
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.ObjectIdentity.hashCode()
org.springframework.security.acls.model.ObjectIdentity.hashCode()
org.junit.Assert.assertEquals(J, J)
275 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImplTests.stringAndNumericIdsAreNotEqual()
Métodos invocados: 
java.lang.Long.valueOf(J)
org.springframework.security.acls.model.ObjectIdentity.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
276 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImplTests$MockIdDomainObject.getId()
276 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImplTests$MockIdDomainObject.setId(java.lang.Object)
276 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImplTests$MockOtherIdDomainObject.getId()
276 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityImplTests$MockOtherIdDomainObject.setId(java.lang.Object)
276 - Declaração do método: org.springframework.security.acls.domain.AclImplementationSecurityCheckTests.setUp()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
277 - Declaração do método: org.springframework.security.acls.domain.AclImplementationSecurityCheckTests.tearDown()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
278 - Declaração do método: org.springframework.security.acls.domain.AclImplementationSecurityCheckTests.testSecurityCheckNoACEs()
Métodos invocados: 
org.springframework.security.core.Authentication.setAuthenticated(Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.junit.Assert.fail(java.lang.String)
279 - Declaração do método: org.springframework.security.acls.domain.AclImplementationSecurityCheckTests.testSecurityCheckWithMultipleACEs()
Métodos invocados: 
org.springframework.security.core.Authentication.setAuthenticated(Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.junit.Assert.assertTrue(Z)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.junit.Assert.assertTrue(Z)
org.junit.Assert.fail(java.lang.String)
280 - Declaração do método: org.springframework.security.acls.domain.AclImplementationSecurityCheckTests.testSecurityCheckWithInheritableACEs()
Métodos invocados: 
org.springframework.security.core.Authentication.setAuthenticated(Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.MutableAcl.setParent(org.springframework.security.acls.model.Acl)
org.springframework.security.acls.model.MutableAcl.setEntriesInheriting(Z)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.junit.Assert.assertTrue(Z)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.setEntriesInheriting(Z)
org.springframework.security.acls.model.MutableAcl.setParent(org.springframework.security.acls.model.Acl)
org.springframework.security.acls.model.MutableAcl.setParent(org.springframework.security.acls.model.Acl)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.junit.Assert.assertTrue(Z)
org.junit.Assert.fail(java.lang.String)
281 - Declaração do método: org.springframework.security.acls.domain.AclImplementationSecurityCheckTests.testSecurityCheckPrincipalOwner()
Métodos invocados: 
org.springframework.security.core.Authentication.setAuthenticated(Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.model.Acl, I)
org.junit.Assert.fail(java.lang.String)
282 - Declaração do método: org.springframework.security.acls.domain.AccessControlImplEntryTests.testConstructorRequiredFields()
Métodos invocados: 
org.junit.Assert.fail(java.lang.String)
org.jmock.Mockery.mock(java.lang.Class)
org.junit.Assert.fail(java.lang.String)
org.jmock.Mockery.mock(java.lang.Class)
org.junit.Assert.fail(java.lang.String)
283 - Declaração do método: org.springframework.security.acls.domain.AccessControlImplEntryTests.testAccessControlEntryImplGetters()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.acls.model.AccessControlEntry.getId()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.AccessControlEntry.getAcl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.AccessControlEntry.getSid()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.AccessControlEntry.isGranting()
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditFailure()
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditSuccess()
org.junit.Assert.assertTrue(Z)
284 - Declaração do método: org.springframework.security.acls.domain.AccessControlImplEntryTests.testEquals()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.allowing(org.springframework.security.acls.model.Acl)
org.springframework.security.acls.model.Acl.getObjectIdentity()
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
java.lang.Object.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
java.lang.Object.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
java.lang.Object.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.lang.Object.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.lang.Object.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
java.lang.Object.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
java.lang.Object.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
java.lang.Object.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
java.lang.Object.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
java.lang.Object.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
285 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityRetrievalStrategyImplTests.testObjectIdentityCreation()
Métodos invocados: 
org.springframework.security.acls.domain.ObjectIdentityRetrievalStrategyImplTests$MockIdDomainObject.setId(java.lang.Object)
org.springframework.security.acls.model.ObjectIdentityRetrievalStrategy.getObjectIdentity(java.lang.Object)
junit.framework.Assert.assertNotNull(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
286 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityRetrievalStrategyImplTests$MockIdDomainObject.getId()
286 - Declaração do método: org.springframework.security.acls.domain.ObjectIdentityRetrievalStrategyImplTests$MockIdDomainObject.setId(java.lang.Object)
286 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.setUp()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.core.Authentication.setAuthenticated(Z)
287 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.tearDown()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
288 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.constructorsRejectNullObjectIdentity()
Métodos invocados: 
org.junit.Assert.fail(java.lang.String)
289 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.constructorsRejectNullId()
Métodos invocados: 
org.junit.Assert.fail(java.lang.String)
290 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.constructorsRejectNullAclAuthzStrategy()
Métodos invocados: 
org.junit.Assert.fail(java.lang.String)
291 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.insertAceRejectsNullParameters()
Métodos invocados: 
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.junit.Assert.fail(java.lang.String)
292 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.insertAceAddsElementAtCorrectIndex()
Métodos invocados: 
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getAcl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getSid()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getAcl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getSid()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getSid()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getSid()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getSid()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
293 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.insertAceFailsForNonExistentElement()
Métodos invocados: 
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
294 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.deleteAceKeepsInitialOrdering()
Métodos invocados: 
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.model.MutableAcl.deleteAce(I)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getSid()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getSid()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.model.MutableAcl.deleteAce(I)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getSid()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getSid()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.MutableAcl.deleteAce(I)
org.springframework.security.acls.model.MutableAcl.deleteAce(I)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
295 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.deleteAceFailsForNonExistentElement()
Métodos invocados: 
org.springframework.security.acls.model.MutableAcl.deleteAce(I)
org.junit.Assert.fail(java.lang.String)
296 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.isGrantingRejectsEmptyParameters()
Métodos invocados: 
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Sid;)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.fail(java.lang.String)
297 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.isGrantingGrantsAccessForAclWithNoParent()
Métodos invocados: 
org.springframework.security.core.Authentication.setAuthenticated(Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Permission;)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Sid;)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertTrue(Z)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Sid;)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertFalse(Z)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Sid;)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertTrue(Z)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Sid;)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.fail(java.lang.String)
298 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.isGrantingGrantsAccessForInheritableAcls()
Métodos invocados: 
org.springframework.security.core.Authentication.setAuthenticated(Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.acls.model.MutableAcl.setParent(org.springframework.security.acls.model.Acl)
org.springframework.security.acls.model.MutableAcl.setParent(org.springframework.security.acls.model.Acl)
org.springframework.security.acls.model.MutableAcl.setParent(org.springframework.security.acls.model.Acl)
org.springframework.security.acls.model.MutableAcl.setParent(org.springframework.security.acls.model.Acl)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertTrue(Z)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Sid;)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertTrue(Z)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Sid;)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertTrue(Z)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Sid;)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertTrue(Z)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
299 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.updatedAceValuesAreCorrectlyReflectedInAcl()
Métodos invocados: 
org.springframework.security.core.Authentication.setAuthenticated(Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.MutableAcl.updateAce(I, org.springframework.security.acls.model.Permission)
org.springframework.security.acls.model.MutableAcl.updateAce(I, org.springframework.security.acls.model.Permission)
org.springframework.security.acls.model.MutableAcl.updateAce(I, org.springframework.security.acls.model.Permission)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
300 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.auditableEntryFlagsAreUpdatedCorrectly()
Métodos invocados: 
org.springframework.security.core.Authentication.setAuthenticated(Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditFailure()
org.junit.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditFailure()
org.junit.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditSuccess()
org.junit.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditSuccess()
org.junit.Assert.assertFalse(Z)
org.springframework.security.acls.model.AuditableAcl.updateAuditing(I, Z, Z)
org.springframework.security.acls.model.AuditableAcl.updateAuditing(I, Z, Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditFailure()
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditFailure()
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditSuccess()
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditSuccess()
org.junit.Assert.assertTrue(Z)
301 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.gettersAndSettersAreConsistent()
Métodos invocados: 
org.springframework.security.core.Authentication.setAuthenticated(Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.model.MutableAcl.getId()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getObjectIdentity()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getOwner()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getParentAcl()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.acls.model.Acl.isEntriesInheriting()
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.MutableAcl.setParent(org.springframework.security.acls.model.Acl)
org.springframework.security.acls.model.Acl.getParentAcl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.MutableAcl.setEntriesInheriting(Z)
org.springframework.security.acls.model.Acl.isEntriesInheriting()
org.junit.Assert.assertFalse(Z)
org.springframework.security.acls.model.OwnershipAcl.setOwner(org.springframework.security.acls.model.Sid)
org.springframework.security.acls.model.Acl.getOwner()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
302 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.isSidLoadedBehavesAsExpected()
Métodos invocados: 
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Sid;)
org.springframework.security.acls.model.Acl.isSidLoaded(java.util.List)
org.junit.Assert.assertTrue(Z)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Sid;)
org.springframework.security.acls.model.Acl.isSidLoaded(java.util.List)
org.junit.Assert.assertTrue(Z)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Sid;)
org.springframework.security.acls.model.Acl.isSidLoaded(java.util.List)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.isSidLoaded(java.util.List)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.isSidLoaded(java.util.List)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.isSidLoaded(java.util.List)
org.junit.Assert.assertTrue(Z)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Sid;)
org.springframework.security.acls.model.Acl.isSidLoaded(java.util.List)
org.junit.Assert.assertTrue(Z)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Sid;)
org.springframework.security.acls.model.Acl.isSidLoaded(java.util.List)
org.junit.Assert.assertFalse(Z)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Sid;)
org.springframework.security.acls.model.Acl.isSidLoaded(java.util.List)
org.junit.Assert.assertFalse(Z)
303 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.insertAceRaisesNotFoundExceptionForIndexLessThanZero()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.acls.domain.AclImpl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
304 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.deleteAceRaisesNotFoundExceptionForIndexLessThanZero()
Métodos invocados: 
org.springframework.security.acls.domain.AclImpl.deleteAce(I)
305 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.insertAceRaisesNotFoundExceptionForIndexGreaterThanSize()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.acls.domain.AclImpl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.acls.domain.AclImpl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
306 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.deleteAceRaisesNotFoundExceptionForIndexEqualToSize()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.acls.domain.AclImpl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.domain.AclImpl.deleteAce(I)
307 - Declaração do método: org.springframework.security.acls.domain.AclImplTests$MockAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
307 - Declaração do método: org.springframework.security.acls.domain.AclImplTests$MockAclService.deleteAcl(org.springframework.security.acls.model.ObjectIdentity, Z)
307 - Declaração do método: org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
Métodos invocados: 
org.springframework.security.acls.model.Acl.getEntries()
org.springframework.security.util.FieldUtils.getField(java.lang.Class, java.lang.String)
java.lang.reflect.AccessibleObject.setAccessible(Z)
java.lang.reflect.Field.get(java.lang.Object)
java.util.List.clear()
java.util.List.size()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getAcl()
org.springframework.security.acls.model.AccessControlEntry.getSid()
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.springframework.security.acls.model.AccessControlEntry.isGranting()
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditSuccess()
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditFailure()
java.util.List.add(java.lang.Object)
java.lang.Throwable.printStackTrace()
308 - Declaração do método: org.springframework.security.acls.domain.AclImplTests$MockAclService.findChildren(org.springframework.security.acls.model.ObjectIdentity)
308 - Declaração do método: org.springframework.security.acls.domain.AclImplTests$MockAclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
308 - Declaração do método: org.springframework.security.acls.domain.AclImplTests$MockAclService.readAclById(org.springframework.security.acls.model.ObjectIdentity, java.util.List)
308 - Declaração do método: org.springframework.security.acls.domain.AclImplTests$MockAclService.readAclsById(java.util.List)
308 - Declaração do método: org.springframework.security.acls.domain.AclImplTests$MockAclService.readAclsById(java.util.List, java.util.List)
308 - Declaração do método: org.springframework.security.acls.domain.PermissionTests.createPermissionfactory()
308 - Declaração do método: org.springframework.security.acls.domain.PermissionTests.basePermissionTest()
Métodos invocados: 
org.springframework.security.acls.domain.DefaultPermissionFactory.buildFromName(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
309 - Declaração do método: org.springframework.security.acls.domain.PermissionTests.expectedIntegerValues()
Métodos invocados: 
org.springframework.security.acls.model.Permission.getMask()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.Permission.getMask()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.AbstractPermission.getMask()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.AbstractPermission.getMask()
org.junit.Assert.assertEquals(J, J)
310 - Declaração do método: org.springframework.security.acls.domain.PermissionTests.fromInteger()
Métodos invocados: 
org.springframework.security.acls.domain.DefaultPermissionFactory.buildFromMask(I)
java.lang.Object.toString()
java.io.PrintStream.println(java.lang.String)
org.springframework.security.acls.domain.DefaultPermissionFactory.buildFromMask(I)
java.lang.Object.toString()
java.io.PrintStream.println(java.lang.String)
311 - Declaração do método: org.springframework.security.acls.domain.PermissionTests.stringConversion()
Métodos invocados: 
org.springframework.security.acls.domain.DefaultPermissionFactory.registerPublicPermissions(java.lang.Class)
java.lang.Object.toString()
java.io.PrintStream.println(java.lang.String)
java.lang.Object.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Object.toString()
java.io.PrintStream.println(java.lang.String)
java.lang.Object.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.AbstractPermission.toString()
java.io.PrintStream.println(java.lang.String)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.AbstractPermission.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.AbstractPermission.toString()
java.io.PrintStream.println(java.lang.String)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.AbstractPermission.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.AbstractPermission.toString()
java.io.PrintStream.println(java.lang.String)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.AbstractPermission.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.CumulativePermission.clear(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.AbstractPermission.toString()
java.io.PrintStream.println(java.lang.String)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.CumulativePermission.clear(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.AbstractPermission.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.CumulativePermission.clear(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.CumulativePermission.clear(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.AbstractPermission.toString()
java.io.PrintStream.println(java.lang.String)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.CumulativePermission.clear(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.CumulativePermission.clear(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.AbstractPermission.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
312 - Declaração do método: org.springframework.security.acls.domain.SpecialPermission.SpecialPermission(I, C)
312 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.initCacheManaer()
Métodos invocados: 
net.sf.ehcache.CacheManager.addCache(net.sf.ehcache.Cache)
313 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.shutdownCacheManager()
Métodos invocados: 
net.sf.ehcache.CacheManager.removalAll()
net.sf.ehcache.CacheManager.shutdown()
314 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.clearContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
315 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.getCache()
Métodos invocados: 
net.sf.ehcache.CacheManager.getCache(java.lang.String)
net.sf.ehcache.Ehcache.removeAll()
316 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.constructorRejectsNullParameters()
316 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.methodsRejectNullParameters()
Métodos invocados: 
org.springframework.security.acls.domain.EhCacheBasedAclCache.evictFromCache(java.io.Serializable)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.domain.EhCacheBasedAclCache.evictFromCache(org.springframework.security.acls.model.ObjectIdentity)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.domain.EhCacheBasedAclCache.getFromCache(java.io.Serializable)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.domain.EhCacheBasedAclCache.getFromCache(org.springframework.security.acls.model.ObjectIdentity)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.domain.EhCacheBasedAclCache.putInCache(org.springframework.security.acls.model.MutableAcl)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
317 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.testDiskSerializationOfMutableAclObjectInstance()
Métodos invocados: 
java.io.File.createTempFile(java.lang.String, java.lang.String)
java.io.ObjectOutputStream.writeObject(java.lang.Object)
java.io.ObjectOutputStream.close()
java.io.ObjectInputStream.readObject()
java.io.ObjectInputStream.close()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.util.FieldUtils.getProtectedFieldValue(java.lang.String, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.util.FieldUtils.getProtectedFieldValue(java.lang.String, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
318 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.cacheOperationsAclWithoutParent()
Métodos invocados: 
org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.getCache()
net.sf.ehcache.Ehcache.getDiskStoreSize()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.domain.EhCacheBasedAclCache.putInCache(org.springframework.security.acls.model.MutableAcl)
net.sf.ehcache.Ehcache.getSize()
org.junit.Assert.assertEquals(J, J)
net.sf.ehcache.Ehcache.getDiskStoreSize()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.Acl.getObjectIdentity()
net.sf.ehcache.Ehcache.isElementOnDisk(java.io.Serializable)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.getObjectIdentity()
net.sf.ehcache.Ehcache.isElementInMemory(java.io.Serializable)
org.junit.Assert.assertFalse(Z)
org.springframework.security.acls.domain.EhCacheBasedAclCache.getFromCache(java.io.Serializable)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.domain.EhCacheBasedAclCache.getFromCache(org.springframework.security.acls.model.ObjectIdentity)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.domain.EhCacheBasedAclCache.putInCache(org.springframework.security.acls.model.MutableAcl)
net.sf.ehcache.Ehcache.getSize()
org.junit.Assert.assertEquals(J, J)
net.sf.ehcache.Ehcache.getDiskStoreSize()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.domain.EhCacheBasedAclCache.evictFromCache(java.io.Serializable)
org.springframework.security.acls.domain.EhCacheBasedAclCache.evictFromCache(org.springframework.security.acls.model.ObjectIdentity)
net.sf.ehcache.Ehcache.getSize()
org.junit.Assert.assertEquals(J, J)
net.sf.ehcache.Ehcache.getDiskStoreSize()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.domain.EhCacheBasedAclCache.evictFromCache(java.io.Serializable)
net.sf.ehcache.Ehcache.getSize()
org.junit.Assert.assertEquals(J, J)
net.sf.ehcache.Ehcache.getDiskStoreSize()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.domain.EhCacheBasedAclCache.getFromCache(java.io.Serializable)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.domain.EhCacheBasedAclCache.getFromCache(org.springframework.security.acls.model.ObjectIdentity)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.domain.EhCacheBasedAclCache.evictFromCache(org.springframework.security.acls.model.ObjectIdentity)
net.sf.ehcache.Ehcache.getSize()
org.junit.Assert.assertEquals(J, J)
319 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.cacheOperationsAclWithParent()
Métodos invocados: 
org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.getCache()
org.springframework.security.core.Authentication.setAuthenticated(Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.acls.model.MutableAcl.setParent(org.springframework.security.acls.model.Acl)
net.sf.ehcache.Ehcache.getDiskStoreSize()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.domain.EhCacheBasedAclCache.putInCache(org.springframework.security.acls.model.MutableAcl)
net.sf.ehcache.Ehcache.getSize()
org.junit.Assert.assertEquals(J, J)
net.sf.ehcache.Ehcache.getDiskStoreSize()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.Acl.getObjectIdentity()
net.sf.ehcache.Ehcache.isElementOnDisk(java.io.Serializable)
org.junit.Assert.assertTrue(Z)
java.lang.Long.valueOf(J)
net.sf.ehcache.Ehcache.isElementOnDisk(java.io.Serializable)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.getObjectIdentity()
net.sf.ehcache.Ehcache.isElementInMemory(java.io.Serializable)
org.junit.Assert.assertFalse(Z)
java.lang.Long.valueOf(J)
net.sf.ehcache.Ehcache.isElementInMemory(java.io.Serializable)
org.junit.Assert.assertFalse(Z)
net.sf.ehcache.Ehcache.flush()
org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
java.util.Map.size()
java.lang.Thread.sleep(J)
org.springframework.security.acls.domain.EhCacheBasedAclCache.getFromCache(java.io.Serializable)
org.junit.Assert.assertFalse(Z)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.domain.AclImpl.getParentAcl()
org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.domain.AclImpl.getParentAcl()
org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.domain.EhCacheBasedAclCache.getFromCache(org.springframework.security.acls.model.ObjectIdentity)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.domain.EhCacheBasedAclCache.getFromCache(java.io.Serializable)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.domain.EhCacheBasedAclCache.getFromCache(org.springframework.security.acls.model.ObjectIdentity)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
320 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests$MockEhcache.MockEhcache()
320 - Declaração do método: org.springframework.security.acls.jdbc.DatabaseSeeder.DatabaseSeeder(javax.sql.DataSource, org.springframework.core.io.Resource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.core.io.InputStreamSource.getInputStream()
org.springframework.util.FileCopyUtils.copyToByteArray(java.io.InputStream)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
321 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.initCacheManaer()
Métodos invocados: 
net.sf.ehcache.CacheManager.addCache(net.sf.ehcache.Cache)
322 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.createDatabase()
Métodos invocados: 
org.springframework.jdbc.datasource.DriverManagerDataSource.setDriverClassName(java.lang.String)
org.springframework.core.io.InputStreamSource.getInputStream()
org.springframework.util.FileCopyUtils.copyToByteArray(java.io.InputStream)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
323 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.dropDatabase()
Métodos invocados: 
org.springframework.jdbc.datasource.SingleConnectionDataSource.destroy()
324 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.shutdownCacheManager()
Métodos invocados: 
net.sf.ehcache.CacheManager.removalAll()
net.sf.ehcache.CacheManager.shutdown()
325 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.populateDatabase()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
326 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.initializeBeans()
Métodos invocados: 
org.springframework.security.acls.jdbc.BasicLookupStrategyTests.getCache()
org.springframework.security.acls.jdbc.BasicLookupStrategy.setPermissionFactory(org.springframework.security.acls.domain.PermissionFactory)
327 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.emptyDatabase()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
328 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.getCache()
Métodos invocados: 
net.sf.ehcache.CacheManager.getCache(java.lang.String)
net.sf.ehcache.Ehcache.removeAll()
329 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.testAclsRetrievalWithDefaultBatchSize()
Métodos invocados: 
java.util.Arrays.asList([Lorg.springframework.security.acls.model.ObjectIdentity;)
org.springframework.security.acls.jdbc.BasicLookupStrategy.readAclsById(java.util.List, java.util.List)
org.springframework.security.acls.jdbc.BasicLookupStrategyTests.checkEntries(org.springframework.security.acls.model.ObjectIdentity, org.springframework.security.acls.model.ObjectIdentity, org.springframework.security.acls.model.ObjectIdentity, java.util.Map)
330 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.testAclsRetrievalFromCacheOnly()
Métodos invocados: 
java.util.Arrays.asList([Lorg.springframework.security.acls.model.ObjectIdentity;)
org.springframework.security.acls.jdbc.BasicLookupStrategy.readAclsById(java.util.List, java.util.List)
org.springframework.security.acls.jdbc.BasicLookupStrategyTests.emptyDatabase()
java.util.Arrays.asList([Lorg.springframework.security.acls.model.ObjectIdentity;)
org.springframework.security.acls.jdbc.BasicLookupStrategy.readAclsById(java.util.List, java.util.List)
org.springframework.security.acls.jdbc.BasicLookupStrategyTests.checkEntries(org.springframework.security.acls.model.ObjectIdentity, org.springframework.security.acls.model.ObjectIdentity, org.springframework.security.acls.model.ObjectIdentity, java.util.Map)
331 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.testAclsRetrievalWithCustomBatchSize()
Métodos invocados: 
org.springframework.security.acls.jdbc.BasicLookupStrategy.setBatchSize(I)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.ObjectIdentity;)
org.springframework.security.acls.jdbc.BasicLookupStrategy.readAclsById(java.util.List, java.util.List)
org.springframework.security.acls.jdbc.BasicLookupStrategyTests.checkEntries(org.springframework.security.acls.model.ObjectIdentity, org.springframework.security.acls.model.ObjectIdentity, org.springframework.security.acls.model.ObjectIdentity, java.util.Map)
332 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.checkEntries(org.springframework.security.acls.model.ObjectIdentity, org.springframework.security.acls.model.ObjectIdentity, org.springframework.security.acls.model.ObjectIdentity, java.util.Map)
Métodos invocados: 
java.util.Map.size()
junit.framework.Assert.assertEquals(I, I)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
org.springframework.security.acls.model.MutableAcl.getId()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.model.MutableAcl.getId()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.model.MutableAcl.getId()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.model.Acl.getParentAcl()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.acls.model.Acl.getParentAcl()
org.springframework.security.acls.model.Acl.getObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getParentAcl()
org.springframework.security.acls.model.Acl.getObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.model.Acl.getObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.isEntriesInheriting()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.model.MutableAcl.getId()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getOwner()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getId()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getSid()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditFailure()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditSuccess()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.isGranting()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getId()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getSid()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditFailure()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditSuccess()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.isGranting()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.isEntriesInheriting()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.model.MutableAcl.getId()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getOwner()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getId()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getSid()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditFailure()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditSuccess()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.isGranting()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.isEntriesInheriting()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.model.MutableAcl.getId()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getOwner()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getId()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getSid()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditFailure()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AuditableAccessControlEntry.isAuditSuccess()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.isGranting()
junit.framework.Assert.assertFalse(Z)
333 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.testAllParentsAreRetrievedWhenChildIsLoaded()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.ObjectIdentity;)
org.springframework.security.acls.jdbc.BasicLookupStrategy.readAclsById(java.util.List, java.util.List)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.util.Map.get(java.lang.Object)
org.springframework.security.acls.model.Acl.getObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.util.Map.get(java.lang.Object)
org.springframework.security.acls.model.Acl.getObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.util.Map.get(java.lang.Object)
org.springframework.security.acls.model.Acl.getObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertNull(java.lang.Object)
334 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.testReadAllObjectIdentitiesWhenLastElementIsAlreadyCached()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Permission;)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Sid;)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.ObjectIdentity;)
org.springframework.security.acls.jdbc.BasicLookupStrategy.setBatchSize(I)
org.springframework.security.acls.jdbc.BasicLookupStrategy.readAclsById(java.util.List, java.util.List)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
junit.framework.Assert.assertTrue(Z)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.ObjectIdentity;)
org.springframework.security.acls.jdbc.BasicLookupStrategy.readAclsById(java.util.List, java.util.List)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
junit.framework.Assert.assertTrue(Z)
335 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.nullOwnerIsNotSupported()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.ObjectIdentity;)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Sid;)
org.springframework.security.acls.jdbc.BasicLookupStrategy.readAclsById(java.util.List, java.util.List)
336 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclServiceTests.createTables()
Métodos invocados: 
java.lang.Throwable.printStackTrace()
337 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclServiceTests.clearContextAndData()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
338 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclServiceTests.testLifecycle()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.MutableAcl.setParent(org.springframework.security.acls.model.Acl)
org.springframework.security.acls.model.MutableAcl.setParent(org.springframework.security.acls.model.Acl)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.ObjectIdentity;)
org.springframework.security.acls.jdbc.JdbcAclService.readAclsById(java.util.List)
java.util.Map.size()
org.junit.Assert.assertEquals(J, J)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
org.springframework.security.acls.model.MutableAcl.getId()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.model.MutableAcl.getId()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.model.MutableAcl.getId()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.model.Acl.getParentAcl()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.acls.model.Acl.getParentAcl()
org.springframework.security.acls.model.Acl.getObjectIdentity()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getParentAcl()
org.springframework.security.acls.model.Acl.getObjectIdentity()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Permission;)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Permission;)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Permission;)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Sid;)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertFalse(Z)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Permission;)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertFalse(Z)
org.springframework.security.acls.model.MutableAcl.setEntriesInheriting(Z)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.Acl.isEntriesInheriting()
org.junit.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertFalse(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
java.io.PrintStream.println(java.lang.Object)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertFalse(Z)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Permission;)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.Permission.getMask()
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.springframework.security.acls.model.Permission.getMask()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.AccessControlEntry.getSid()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.AccessControlEntry.isGranting()
org.junit.Assert.assertFalse(Z)
org.springframework.security.acls.model.AccessControlEntry.getId()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.model.MutableAcl.deleteAce(I)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
339 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclServiceTests.deleteAclAlsoDeletesChildren()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.MutableAcl.setParent(org.springframework.security.acls.model.Acl)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.Acl.getParentAcl()
org.springframework.security.acls.model.Acl.getObjectIdentity()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteAcl(org.springframework.security.acls.model.ObjectIdentity, Z)
org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.model.Acl.getObjectIdentity()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
340 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclServiceTests.constructorRejectsNullParameters()
Métodos invocados: 
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.fail(java.lang.String)
341 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclServiceTests.createAclRejectsNullParameter()
Métodos invocados: 
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
org.junit.Assert.fail(java.lang.String)
342 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclServiceTests.createAclForADuplicateDomainObject()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
java.lang.Long.valueOf(J)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
org.junit.Assert.fail(java.lang.String)
343 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclServiceTests.deleteAclRejectsNullParameters()
Métodos invocados: 
org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteAcl(org.springframework.security.acls.model.ObjectIdentity, Z)
org.junit.Assert.fail(java.lang.String)
344 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclServiceTests.deleteAclWithChildrenThrowsException()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.MutableAcl.setParent(org.springframework.security.acls.model.Acl)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.jdbc.JdbcMutableAclService.setForeignKeysInDatabase(Z)
org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteAcl(org.springframework.security.acls.model.ObjectIdentity, Z)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.acls.jdbc.JdbcMutableAclService.setForeignKeysInDatabase(Z)
345 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclServiceTests.deleteAclRemovesRowsFromDatabase()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteAcl(org.springframework.security.acls.model.ObjectIdentity, Z)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String, [Ljava.lang.Object;)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.AclCache.getFromCache(org.springframework.security.acls.model.ObjectIdentity)
org.junit.Assert.assertNull(java.lang.Object)
java.lang.Long.valueOf(J)
org.springframework.security.acls.model.AclCache.getFromCache(java.io.Serializable)
org.junit.Assert.assertNull(java.lang.Object)
346 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclServiceTests.identityWithIntegerIdIsSupportedByCreateAcl()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
java.lang.Integer.valueOf(I)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
java.lang.Long.valueOf(J)
org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
org.junit.Assert.assertNotNull(java.lang.Object)
347 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclServiceTests.childrenAreClearedFromCacheWhenParentIsUpdated()
Métodos invocados: 
org.springframework.security.core.Authentication.setAuthenticated(Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
java.lang.Long.valueOf(J)
java.lang.Long.valueOf(J)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.MutableAcl.setParent(org.springframework.security.acls.model.Acl)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.Acl.getParentAcl()
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.junit.Assert.assertEquals(java.lang.String, J, J)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.springframework.security.acls.model.Permission.getMask()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getSid()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.springframework.security.acls.model.Permission.getMask()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getSid()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
348 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclServiceTests.childrenAreClearedFromCacheWhenParentisUpdated2()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
java.lang.Long.valueOf(J)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
java.lang.Long.valueOf(J)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.MutableAcl.setParent(org.springframework.security.acls.model.Acl)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
java.lang.Long.valueOf(J)
org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.Acl.getParentAcl()
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.springframework.security.acls.model.Permission.getMask()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getSid()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.springframework.security.acls.model.Permission.getMask()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getSid()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
349 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclServiceTests.cumulativePermissions()
Métodos invocados: 
org.springframework.security.core.Authentication.setAuthenticated(Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
java.lang.Long.valueOf(J)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.model.Permission.getMask()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
org.springframework.security.acls.model.Permission.getMask()
org.junit.Assert.assertEquals(J, J)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Permission;)
java.util.Arrays.asList([Lorg.springframework.security.acls.model.Sid;)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
350 - Declaração do método: org.springframework.security.acls.sid.SidTests.testPrincipalSidConstructorsRequiredFields()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
351 - Declaração do método: org.springframework.security.acls.sid.SidTests.testGrantedAuthoritySidConstructorsRequiredFields()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
352 - Declaração do método: org.springframework.security.acls.sid.SidTests.testPrincipalSidEquals()
Métodos invocados: 
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
353 - Declaração do método: org.springframework.security.acls.sid.SidTests.testGrantedAuthoritySidEquals()
Métodos invocados: 
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
354 - Declaração do método: org.springframework.security.acls.sid.SidTests.testPrincipalSidHashCode()
Métodos invocados: 
org.springframework.security.acls.model.Sid.hashCode()
java.lang.String.hashCode()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.model.Sid.hashCode()
org.springframework.security.acls.domain.PrincipalSid.hashCode()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.model.Sid.hashCode()
org.springframework.security.acls.domain.PrincipalSid.hashCode()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.model.Sid.hashCode()
org.springframework.security.acls.domain.PrincipalSid.hashCode()
junit.framework.Assert.assertTrue(Z)
355 - Declaração do método: org.springframework.security.acls.sid.SidTests.testGrantedAuthoritySidHashCode()
Métodos invocados: 
org.springframework.security.acls.model.Sid.hashCode()
java.lang.String.hashCode()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.model.Sid.hashCode()
org.springframework.security.acls.domain.GrantedAuthoritySid.hashCode()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.model.Sid.hashCode()
org.springframework.security.acls.domain.GrantedAuthoritySid.hashCode()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.model.Sid.hashCode()
org.springframework.security.acls.domain.GrantedAuthoritySid.hashCode()
junit.framework.Assert.assertTrue(Z)
356 - Declaração do método: org.springframework.security.acls.sid.SidTests.testGetters()
Métodos invocados: 
org.springframework.security.acls.domain.PrincipalSid.getPrincipal()
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.domain.PrincipalSid.getPrincipal()
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.domain.GrantedAuthoritySid.getGrantedAuthority()
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.domain.GrantedAuthoritySid.getGrantedAuthority()
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
357 - Declaração do método: org.springframework.security.acls.sid.SidRetrievalStrategyTests.correctSidsAreRetrieved()
Métodos invocados: 
org.springframework.security.acls.model.SidRetrievalStrategy.getSids(org.springframework.security.core.Authentication)
org.junit.Assert.assertNotNull(java.lang.Object)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.junit.Assert.assertNotNull(java.lang.Object)
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
java.util.List.size()
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
java.util.List.get(I)
org.springframework.security.acls.domain.PrincipalSid.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.List.get(I)
org.springframework.security.acls.domain.GrantedAuthoritySid.getGrantedAuthority()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.List.get(I)
org.springframework.security.acls.domain.GrantedAuthoritySid.getGrantedAuthority()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.List.get(I)
org.springframework.security.acls.domain.GrantedAuthoritySid.getGrantedAuthority()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
358 - Declaração do método: org.springframework.security.acls.sid.SidRetrievalStrategyTests.roleHierarchyIsUsedWhenSet()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.mockito.Matchers.anyList()
org.springframework.security.access.hierarchicalroles.RoleHierarchy.getReachableGrantedAuthorities(java.util.Collection)
org.mockito.Mockito.when(java.util.Collection)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.util.Collection)
org.springframework.security.acls.model.SidRetrievalStrategy.getSids(org.springframework.security.core.Authentication)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.junit.Assert.assertNotNull(java.lang.Object)
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
java.util.List.get(I)
org.springframework.security.acls.domain.GrantedAuthoritySid.getGrantedAuthority()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
359 - Declaração do método: org.springframework.security.access.SecurityConfig.SecurityConfig(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
360 - Declaração do método: org.springframework.security.access.SecurityConfig.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.access.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
361 - Declaração do método: org.springframework.security.access.SecurityConfig.getAttribute()
361 - Declaração do método: org.springframework.security.access.SecurityConfig.hashCode()
Métodos invocados: 
java.lang.String.hashCode()
362 - Declaração do método: org.springframework.security.access.SecurityConfig.toString()
362 - Declaração do método: org.springframework.security.access.SecurityConfig.createListFromCommaDelimitedString(java.lang.String)
Métodos invocados: 
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
363 - Declaração do método: org.springframework.security.access.SecurityConfig.createSingleAttributeList(java.lang.String)
Métodos invocados: 
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
364 - Declaração do método: org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.String.trim()
java.util.List.add(org.springframework.security.access.ConfigAttribute)
365 - Declaração do método: org.springframework.security.access.PermissionEvaluator.hasPermission(org.springframework.security.core.Authentication, java.lang.Object, java.lang.Object)
365 - Declaração do método: org.springframework.security.access.PermissionEvaluator.hasPermission(org.springframework.security.core.Authentication, java.io.Serializable, java.lang.String, java.lang.Object)
365 - Declaração do método: org.springframework.security.access.ConfigAttribute.getAttribute()
365 - Declaração do método: org.springframework.security.access.ConfigAttributeEditor.setAsText(java.lang.String)
Métodos invocados: 
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
java.beans.PropertyEditorSupport.setValue(java.lang.Object)
java.beans.PropertyEditorSupport.setValue(java.lang.Object)
366 - Declaração do método: org.springframework.security.access.AccessDeniedException.AccessDeniedException(java.lang.String)
366 - Declaração do método: org.springframework.security.access.AccessDeniedException.AccessDeniedException(java.lang.String, java.lang.Throwable)
366 - Declaração do método: org.springframework.security.access.PermissionCacheOptimizer.cachePermissionsFor(org.springframework.security.core.Authentication, java.util.Collection)
366 - Declaração do método: org.springframework.security.access.AuthorizationServiceException.AuthorizationServiceException(java.lang.String)
366 - Declaração do método: org.springframework.security.access.AuthorizationServiceException.AuthorizationServiceException(java.lang.String, java.lang.Throwable)
366 - Declaração do método: org.springframework.security.access.AccessDecisionManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
366 - Declaração do método: org.springframework.security.access.AccessDecisionManager.supports(org.springframework.security.access.ConfigAttribute)
366 - Declaração do método: org.springframework.security.access.AccessDecisionManager.supports(java.lang.Class)
366 - Declaração do método: org.springframework.security.access.SecurityMetadataSource.getAttributes(java.lang.Object)
366 - Declaração do método: org.springframework.security.access.SecurityMetadataSource.getAllConfigAttributes()
366 - Declaração do método: org.springframework.security.access.SecurityMetadataSource.supports(java.lang.Class)
366 - Declaração do método: org.springframework.security.access.AccessDecisionVoter.supports(org.springframework.security.access.ConfigAttribute)
366 - Declaração do método: org.springframework.security.access.AccessDecisionVoter.supports(java.lang.Class)
366 - Declaração do método: org.springframework.security.access.AccessDecisionVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
366 - Declaração do método: org.springframework.security.access.AfterInvocationProvider.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection, java.lang.Object)
366 - Declaração do método: org.springframework.security.access.AfterInvocationProvider.supports(org.springframework.security.access.ConfigAttribute)
366 - Declaração do método: org.springframework.security.access.AfterInvocationProvider.supports(java.lang.Class)
366 - Declaração do método: org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataSource.findAttributes(java.lang.Class)
Métodos invocados: 
java.lang.Class.getAnnotation(java.lang.Class)
org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataSource.processAnnotation(java.lang.annotation.Annotation)
367 - Declaração do método: org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataSource.findAttributes(java.lang.reflect.Method, java.lang.Class)
Métodos invocados: 
org.springframework.core.annotation.AnnotationUtils.findAnnotation(java.lang.reflect.Method, java.lang.Class)
org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataSource.processAnnotation(java.lang.annotation.Annotation)
368 - Declaração do método: org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataSource.getAllConfigAttributes()
368 - Declaração do método: org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataSource.processAnnotation(java.lang.annotation.Annotation)
Métodos invocados: 
org.springframework.security.access.annotation.Secured.value()
java.util.List.add(org.springframework.security.access.ConfigAttribute)
369 - Declaração do método: org.springframework.security.access.annotation.Jsr250SecurityConfig.Jsr250SecurityConfig(java.lang.String)
369 - Declaração do método: org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource.findAttributes(java.lang.Class)
Métodos invocados: 
java.lang.Class.getAnnotations()
org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource.processAnnotations([Ljava.lang.annotation.Annotation;)
370 - Declaração do método: org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource.findAttributes(java.lang.reflect.Method, java.lang.Class)
Métodos invocados: 
org.springframework.core.annotation.AnnotationUtils.getAnnotations(java.lang.reflect.Method)
org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource.processAnnotations([Ljava.lang.annotation.Annotation;)
371 - Declaração do método: org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource.getAllConfigAttributes()
371 - Declaração do método: org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource.processAnnotations([Ljava.lang.annotation.Annotation;)
Métodos invocados: 
java.util.List.add(org.springframework.security.access.ConfigAttribute)
java.util.List.add(org.springframework.security.access.ConfigAttribute)
javax.annotation.security.RolesAllowed.value()
java.util.List.add(org.springframework.security.access.ConfigAttribute)
372 - Declaração do método: org.springframework.security.access.annotation.Jsr250Voter.supports(org.springframework.security.access.ConfigAttribute)
372 - Declaração do método: org.springframework.security.access.annotation.Jsr250Voter.supports(java.lang.Class)
372 - Declaração do método: org.springframework.security.access.annotation.Jsr250Voter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
Métodos invocados: 
org.springframework.security.access.SecurityConfig.equals(java.lang.Object)
org.springframework.security.access.SecurityConfig.equals(java.lang.Object)
org.springframework.security.access.annotation.Jsr250Voter.supports(org.springframework.security.access.ConfigAttribute)
org.springframework.security.core.Authentication.getAuthorities()
org.springframework.security.access.ConfigAttribute.getAttribute()
org.springframework.security.core.GrantedAuthority.getAuthority()
java.lang.String.equals(java.lang.Object)
373 - Declaração do método: org.springframework.security.access.event.AuthenticationCredentialsNotFoundEvent.AuthenticationCredentialsNotFoundEvent(java.lang.Object, java.util.Collection, org.springframework.security.authentication.AuthenticationCredentialsNotFoundException)
373 - Declaração do método: org.springframework.security.access.event.AuthenticationCredentialsNotFoundEvent.getConfigAttributes()
373 - Declaração do método: org.springframework.security.access.event.AuthenticationCredentialsNotFoundEvent.getCredentialsNotFoundException()
373 - Declaração do método: org.springframework.security.access.event.LoggerListener.onApplicationEvent(org.springframework.security.access.event.AbstractAuthorizationEvent)
Métodos invocados: 
org.apache.commons.logging.Log.isWarnEnabled()
org.springframework.security.access.event.AuthenticationCredentialsNotFoundEvent.getCredentialsNotFoundException()
java.util.EventObject.getSource()
org.springframework.security.access.event.AuthenticationCredentialsNotFoundEvent.getConfigAttributes()
org.apache.commons.logging.Log.warn(java.lang.Object)
org.apache.commons.logging.Log.isWarnEnabled()
org.springframework.security.access.event.AuthorizationFailureEvent.getAccessDeniedException()
org.springframework.security.access.event.AuthorizationFailureEvent.getAuthentication()
java.util.EventObject.getSource()
org.springframework.security.access.event.AuthorizationFailureEvent.getConfigAttributes()
org.apache.commons.logging.Log.warn(java.lang.Object)
org.apache.commons.logging.Log.isInfoEnabled()
org.springframework.security.access.event.AuthorizedEvent.getAuthentication()
java.util.EventObject.getSource()
org.springframework.security.access.event.AuthorizedEvent.getConfigAttributes()
org.apache.commons.logging.Log.info(java.lang.Object)
org.apache.commons.logging.Log.isInfoEnabled()
java.util.EventObject.getSource()
org.apache.commons.logging.Log.info(java.lang.Object)
374 - Declaração do método: org.springframework.security.access.event.AbstractAuthorizationEvent.AbstractAuthorizationEvent(java.lang.Object)
374 - Declaração do método: org.springframework.security.access.event.PublicInvocationEvent.PublicInvocationEvent(java.lang.Object)
374 - Declaração do método: org.springframework.security.access.event.AuthorizedEvent.AuthorizedEvent(java.lang.Object, java.util.Collection, org.springframework.security.core.Authentication)
374 - Declaração do método: org.springframework.security.access.event.AuthorizedEvent.getAuthentication()
374 - Declaração do método: org.springframework.security.access.event.AuthorizedEvent.getConfigAttributes()
374 - Declaração do método: org.springframework.security.access.event.AuthorizationFailureEvent.AuthorizationFailureEvent(java.lang.Object, java.util.Collection, org.springframework.security.core.Authentication, org.springframework.security.access.AccessDeniedException)
374 - Declaração do método: org.springframework.security.access.event.AuthorizationFailureEvent.getAccessDeniedException()
374 - Declaração do método: org.springframework.security.access.event.AuthorizationFailureEvent.getAuthentication()
374 - Declaração do método: org.springframework.security.access.event.AuthorizationFailureEvent.getConfigAttributes()
374 - Declaração do método: org.springframework.security.access.expression.ExpressionUtils.evaluateAsBoolean(org.springframework.expression.Expression, org.springframework.expression.EvaluationContext)
Métodos invocados: 
org.springframework.expression.Expression.getValue(org.springframework.expression.EvaluationContext, java.lang.Class)
java.lang.Boolean.booleanValue()
org.springframework.expression.Expression.getExpressionString()
375 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRootPropertyAccessor.canRead(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)
Métodos invocados: 
org.springframework.security.access.expression.SecurityExpressionRoot.getApplicationContext()
org.springframework.beans.factory.BeanFactory.containsBean(java.lang.String)
376 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRootPropertyAccessor.read(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)
Métodos invocados: 
org.springframework.security.access.expression.SecurityExpressionRoot.getApplicationContext()
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
377 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRootPropertyAccessor.canWrite(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String)
377 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRootPropertyAccessor.write(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String, java.lang.Object)
377 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRootPropertyAccessor.getSpecificTargetClasses()
377 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRoot.SecurityExpressionRoot(org.springframework.security.core.Authentication)
377 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRoot.hasRole(java.lang.String)
Métodos invocados: 
org.springframework.security.access.expression.SecurityExpressionRoot.getAuthoritySet()
java.util.Set.contains(java.lang.Object)
378 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRoot.hasAnyRole([Ljava.lang.String;)
Métodos invocados: 
org.springframework.security.access.expression.SecurityExpressionRoot.getAuthoritySet()
java.util.Set.contains(java.lang.Object)
379 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRoot.getAuthentication()
379 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRoot.permitAll()
379 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRoot.denyAll()
379 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRoot.isAnonymous()
Métodos invocados: 
org.springframework.security.authentication.AuthenticationTrustResolver.isAnonymous(org.springframework.security.core.Authentication)
380 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRoot.isAuthenticated()
Métodos invocados: 
org.springframework.security.access.expression.SecurityExpressionRoot.isAnonymous()
381 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRoot.isRememberMe()
Métodos invocados: 
org.springframework.security.authentication.AuthenticationTrustResolver.isRememberMe(org.springframework.security.core.Authentication)
382 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRoot.isFullyAuthenticated()
Métodos invocados: 
org.springframework.security.authentication.AuthenticationTrustResolver.isAnonymous(org.springframework.security.core.Authentication)
org.springframework.security.authentication.AuthenticationTrustResolver.isRememberMe(org.springframework.security.core.Authentication)
383 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRoot.getPrincipal()
Métodos invocados: 
org.springframework.security.core.Authentication.getPrincipal()
384 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRoot.setTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)
384 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRoot.setRoleHierarchy(org.springframework.security.access.hierarchicalroles.RoleHierarchy)
384 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRoot.getApplicationContext()
384 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRoot.setApplicationContext(org.springframework.context.ApplicationContext)
384 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRoot.getAuthoritySet()
Métodos invocados: 
org.springframework.security.core.Authentication.getAuthorities()
org.springframework.security.access.hierarchicalroles.RoleHierarchy.getReachableGrantedAuthorities(java.util.Collection)
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
385 - Declaração do método: org.springframework.security.access.expression.method.PostInvocationExpressionAttribute.PostInvocationExpressionAttribute(java.lang.String, java.lang.String)
385 - Declaração do método: org.springframework.security.access.expression.method.PostInvocationExpressionAttribute.PostInvocationExpressionAttribute(org.springframework.expression.Expression, org.springframework.expression.Expression)
385 - Declaração do método: org.springframework.security.access.expression.method.PostInvocationExpressionAttribute.toString()
Métodos invocados: 
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getAuthorizeExpression()
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getFilterExpression()
java.lang.StringBuilder.append(java.lang.String)
org.springframework.expression.Expression.getExpressionString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
org.springframework.expression.Expression.getExpressionString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
386 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityExpressionHandler.getExpressionParser()
386 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityExpressionHandler.createEvaluationContext(org.springframework.security.core.Authentication, org.aopalliance.intercept.MethodInvocation)
386 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityExpressionHandler.filter(java.lang.Object, org.springframework.expression.Expression, org.springframework.expression.EvaluationContext)
386 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityExpressionHandler.setReturnObject(java.lang.Object, org.springframework.expression.EvaluationContext)
386 - Declaração do método: org.springframework.security.access.expression.method.DenyAllPermissionEvaluator.hasPermission(org.springframework.security.core.Authentication, java.lang.Object, java.lang.Object)
Métodos invocados: 
java.security.Principal.getName()
org.apache.commons.logging.Log.warn(java.lang.Object)
387 - Declaração do método: org.springframework.security.access.expression.method.DenyAllPermissionEvaluator.hasPermission(org.springframework.security.core.Authentication, java.io.Serializable, java.lang.String, java.lang.Object)
Métodos invocados: 
java.security.Principal.getName()
org.apache.commons.logging.Log.warn(java.lang.Object)
388 - Declaração do método: org.springframework.security.access.expression.method.ExpressionBasedAnnotationAttributeFactory.ExpressionBasedAnnotationAttributeFactory(org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)
Métodos invocados: 
org.springframework.security.access.expression.method.MethodSecurityExpressionHandler.getExpressionParser()
389 - Declaração do método: org.springframework.security.access.expression.method.ExpressionBasedAnnotationAttributeFactory.createPreInvocationAttribute(org.springframework.security.access.prepost.PreFilter, org.springframework.security.access.prepost.PreAuthorize)
Métodos invocados: 
org.springframework.expression.ExpressionParser.parseExpression(java.lang.String)
org.springframework.security.access.prepost.PreAuthorize.value()
org.springframework.expression.ExpressionParser.parseExpression(java.lang.String)
org.springframework.security.access.prepost.PreFilter.value()
org.springframework.expression.ExpressionParser.parseExpression(java.lang.String)
org.springframework.security.access.prepost.PreFilter.filterTarget()
org.springframework.expression.ExpressionException.getExpressionString()
390 - Declaração do método: org.springframework.security.access.expression.method.ExpressionBasedAnnotationAttributeFactory.createPostInvocationAttribute(org.springframework.security.access.prepost.PostFilter, org.springframework.security.access.prepost.PostAuthorize)
Métodos invocados: 
org.springframework.security.access.prepost.PostAuthorize.value()
org.springframework.expression.ExpressionParser.parseExpression(java.lang.String)
org.springframework.security.access.prepost.PostFilter.value()
org.springframework.expression.ExpressionParser.parseExpression(java.lang.String)
org.springframework.expression.ExpressionException.getExpressionString()
391 - Declaração do método: org.springframework.security.access.expression.method.ExpressionBasedPostInvocationAdvice.ExpressionBasedPostInvocationAdvice(org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)
391 - Declaração do método: org.springframework.security.access.expression.method.ExpressionBasedPostInvocationAdvice.after(org.springframework.security.core.Authentication, org.aopalliance.intercept.MethodInvocation, org.springframework.security.access.prepost.PostInvocationAttribute, java.lang.Object)
Métodos invocados: 
org.springframework.security.access.expression.method.MethodSecurityExpressionHandler.createEvaluationContext(org.springframework.security.core.Authentication, org.aopalliance.intercept.MethodInvocation)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getFilterExpression()
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getAuthorizeExpression()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.access.expression.method.MethodSecurityExpressionHandler.filter(java.lang.Object, org.springframework.expression.Expression, org.springframework.expression.EvaluationContext)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.access.expression.method.MethodSecurityExpressionHandler.setReturnObject(java.lang.Object, org.springframework.expression.EvaluationContext)
org.springframework.security.access.expression.ExpressionUtils.evaluateAsBoolean(org.springframework.expression.Expression, org.springframework.expression.EvaluationContext)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
392 - Declaração do método: org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler.DefaultMethodSecurityExpressionHandler()
392 - Declaração do método: org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler.createEvaluationContext(org.springframework.security.core.Authentication, org.aopalliance.intercept.MethodInvocation)
Métodos invocados: 
org.springframework.security.access.expression.SecurityExpressionRoot.setTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)
org.springframework.security.access.expression.method.MethodSecurityExpressionRoot.setPermissionEvaluator(org.springframework.security.access.PermissionEvaluator)
org.springframework.security.access.expression.SecurityExpressionRoot.setRoleHierarchy(org.springframework.security.access.hierarchicalroles.RoleHierarchy)
org.springframework.security.access.expression.SecurityExpressionRoot.setApplicationContext(org.springframework.context.ApplicationContext)
org.springframework.expression.spel.support.StandardEvaluationContext.setRootObject(java.lang.Object)
org.springframework.expression.spel.support.StandardEvaluationContext.addPropertyAccessor(org.springframework.expression.PropertyAccessor)
393 - Declaração do método: org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler.filter(java.lang.Object, org.springframework.expression.Expression, org.springframework.expression.EvaluationContext)
Métodos invocados: 
org.springframework.expression.EvaluationContext.getRootObject()
org.springframework.expression.TypedValue.getValue()
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.expression.Expression.getExpressionString()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Collection.size()
java.util.Collection.size()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.access.expression.SecurityExpressionRoot.getAuthentication()
org.springframework.security.access.PermissionCacheOptimizer.cachePermissionsFor(org.springframework.security.core.Authentication, java.util.Collection)
org.springframework.security.access.expression.method.MethodSecurityExpressionRoot.setFilterObject(java.lang.Object)
org.springframework.security.access.expression.ExpressionUtils.evaluateAsBoolean(org.springframework.expression.Expression, org.springframework.expression.EvaluationContext)
java.util.List.add(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Collection.clear()
java.util.Collection.addAll(java.util.Collection)
java.lang.Object.getClass()
java.lang.Class.isArray()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.access.expression.SecurityExpressionRoot.getAuthentication()
java.util.Arrays.asList([Ljava.lang.Object;)
org.springframework.security.access.PermissionCacheOptimizer.cachePermissionsFor(org.springframework.security.core.Authentication, java.util.Collection)
org.springframework.security.access.expression.method.MethodSecurityExpressionRoot.setFilterObject(java.lang.Object)
org.springframework.security.access.expression.ExpressionUtils.evaluateAsBoolean(org.springframework.expression.Expression, org.springframework.expression.EvaluationContext)
java.util.List.add(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.Object.getClass()
java.lang.Class.getComponentType()
java.util.List.size()
java.lang.reflect.Array.newInstance(java.lang.Class, I)
java.util.List.size()
java.util.List.get(I)
394 - Declaração do método: org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler.getExpressionParser()
394 - Declaração do método: org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler.setParameterNameDiscoverer(org.springframework.core.ParameterNameDiscoverer)
394 - Declaração do método: org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler.setPermissionEvaluator(org.springframework.security.access.PermissionEvaluator)
394 - Declaração do método: org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler.setPermissionCacheOptimizer(org.springframework.security.access.PermissionCacheOptimizer)
394 - Declaração do método: org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler.setTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)
394 - Declaração do método: org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler.setReturnObject(java.lang.Object, org.springframework.expression.EvaluationContext)
Métodos invocados: 
org.springframework.expression.EvaluationContext.getRootObject()
org.springframework.expression.TypedValue.getValue()
org.springframework.security.access.expression.method.MethodSecurityExpressionRoot.setReturnObject(java.lang.Object)
395 - Declaração do método: org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler.setRoleHierarchy(org.springframework.security.access.hierarchicalroles.RoleHierarchy)
395 - Declaração do método: org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler.setApplicationContext(org.springframework.context.ApplicationContext)
395 - Declaração do método: org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.AbstractExpressionBasedMethodConfigAttribute(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(java.lang.String)
org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(java.lang.String)
396 - Declaração do método: org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.AbstractExpressionBasedMethodConfigAttribute(org.springframework.expression.Expression, org.springframework.expression.Expression)
Métodos invocados: 
org.springframework.util.Assert.isTrue(Z, java.lang.String)
397 - Declaração do método: org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getFilterExpression()
397 - Declaração do método: org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getAuthorizeExpression()
397 - Declaração do método: org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getAttribute()
397 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityEvaluationContext.MethodSecurityEvaluationContext(org.springframework.security.core.Authentication, org.aopalliance.intercept.MethodInvocation)
397 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityEvaluationContext.MethodSecurityEvaluationContext(org.springframework.security.core.Authentication, org.aopalliance.intercept.MethodInvocation, org.springframework.core.ParameterNameDiscoverer)
397 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityEvaluationContext.lookupVariable(java.lang.String)
Métodos invocados: 
org.springframework.security.access.expression.method.MethodSecurityEvaluationContext.addArgumentsAsVariables()
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
398 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityEvaluationContext.setParameterNameDiscoverer(org.springframework.core.ParameterNameDiscoverer)
398 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityEvaluationContext.addArgumentsAsVariables()
Métodos invocados: 
org.aopalliance.intercept.Invocation.getArguments()
org.aopalliance.intercept.Joinpoint.getThis()
org.aopalliance.intercept.MethodInvocation.getMethod()
java.lang.Object.getClass()
org.springframework.aop.support.AopUtils.getMostSpecificMethod(java.lang.reflect.Method, java.lang.Class)
org.springframework.core.ParameterNameDiscoverer.getParameterNames(java.lang.reflect.Method)
org.apache.commons.logging.Log.warn(java.lang.Object)
399 - Declaração do método: org.springframework.security.access.expression.method.PreInvocationExpressionAttribute.PreInvocationExpressionAttribute(java.lang.String, java.lang.String, java.lang.String)
399 - Declaração do método: org.springframework.security.access.expression.method.PreInvocationExpressionAttribute.PreInvocationExpressionAttribute(org.springframework.expression.Expression, java.lang.String, org.springframework.expression.Expression)
399 - Declaração do método: org.springframework.security.access.expression.method.PreInvocationExpressionAttribute.getFilterTarget()
399 - Declaração do método: org.springframework.security.access.expression.method.PreInvocationExpressionAttribute.toString()
Métodos invocados: 
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getAuthorizeExpression()
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getFilterExpression()
java.lang.StringBuilder.append(java.lang.String)
org.springframework.expression.Expression.getExpressionString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
org.springframework.expression.Expression.getExpressionString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
400 - Declaração do método: org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice.before(org.springframework.security.core.Authentication, org.aopalliance.intercept.MethodInvocation, org.springframework.security.access.prepost.PreInvocationAttribute)
Métodos invocados: 
org.springframework.security.access.expression.method.MethodSecurityExpressionHandler.createEvaluationContext(org.springframework.security.core.Authentication, org.aopalliance.intercept.MethodInvocation)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getFilterExpression()
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getAuthorizeExpression()
org.springframework.security.access.expression.method.PreInvocationExpressionAttribute.getFilterTarget()
org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice.findFilterTarget(java.lang.String, org.springframework.expression.EvaluationContext, org.aopalliance.intercept.MethodInvocation)
org.springframework.security.access.expression.method.MethodSecurityExpressionHandler.filter(java.lang.Object, org.springframework.expression.Expression, org.springframework.expression.EvaluationContext)
org.springframework.security.access.expression.ExpressionUtils.evaluateAsBoolean(org.springframework.expression.Expression, org.springframework.expression.EvaluationContext)
401 - Declaração do método: org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice.findFilterTarget(java.lang.String, org.springframework.expression.EvaluationContext, org.aopalliance.intercept.MethodInvocation)
Métodos invocados: 
java.lang.String.length()
org.springframework.expression.EvaluationContext.lookupVariable(java.lang.String)
org.aopalliance.intercept.Invocation.getArguments()
org.aopalliance.intercept.Invocation.getArguments()
java.lang.Object.getClass()
java.lang.Class.isArray()
java.lang.Object.getClass()
java.lang.Object.getClass()
java.lang.Class.isArray()
402 - Declaração do método: org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice.setExpressionHandler(org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)
402 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityExpressionRoot.MethodSecurityExpressionRoot(org.springframework.security.core.Authentication)
402 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityExpressionRoot.hasPermission(java.lang.Object, java.lang.Object)
Métodos invocados: 
org.springframework.security.access.PermissionEvaluator.hasPermission(org.springframework.security.core.Authentication, java.lang.Object, java.lang.Object)
403 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityExpressionRoot.hasPermission(java.lang.Object, java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.security.access.PermissionEvaluator.hasPermission(org.springframework.security.core.Authentication, java.io.Serializable, java.lang.String, java.lang.Object)
404 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityExpressionRoot.setFilterObject(java.lang.Object)
404 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityExpressionRoot.getFilterObject()
404 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityExpressionRoot.setReturnObject(java.lang.Object)
404 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityExpressionRoot.getReturnObject()
404 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityExpressionRoot.setPermissionEvaluator(org.springframework.security.access.PermissionEvaluator)
404 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsServiceWrapper.setRoleHierarchy(org.springframework.security.access.hierarchicalroles.RoleHierarchy)
404 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsServiceWrapper.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
404 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsServiceWrapper.loadUserByUsername(java.lang.String)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
405 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsServiceWrapper.getWrappedUserDetailsService()
405 - Declaração do método: org.springframework.security.access.hierarchicalroles.RoleHierarchy.getReachableGrantedAuthorities(java.util.Collection)
405 - Declaração do método: org.springframework.security.access.hierarchicalroles.NullRoleHierarchy.getReachableGrantedAuthorities(java.util.Collection)
405 - Declaração do método: org.springframework.security.access.hierarchicalroles.CycleInRoleHierarchyException.CycleInRoleHierarchyException()
405 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.UserDetailsWrapper(org.springframework.security.core.userdetails.UserDetails, org.springframework.security.access.hierarchicalroles.RoleHierarchy)
405 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.isAccountNonExpired()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.isAccountNonExpired()
406 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.isAccountNonLocked()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.isAccountNonLocked()
407 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.getAuthorities()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.access.hierarchicalroles.RoleHierarchy.getReachableGrantedAuthorities(java.util.Collection)
408 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.isCredentialsNonExpired()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.isCredentialsNonExpired()
409 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.isEnabled()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.isEnabled()
410 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.getPassword()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getPassword()
411 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.getUsername()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getUsername()
412 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.getUnwrappedUserDetails()
412 - Declaração do método: org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.buildRolesReachableInOneStepMap()
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.buildRolesReachableInOneOrMoreStepsMap()
413 - Declaração do método: org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities(java.util.Collection)
Métodos invocados: 
java.util.Collection.isEmpty()
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.addReachableRoles(java.util.Set, org.springframework.security.core.GrantedAuthority)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.getRolesReachableInOneOrMoreSteps(org.springframework.security.core.GrantedAuthority)
java.util.Set.addAll(java.util.Collection)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Set.size()
java.util.List.addAll(java.util.Collection)
414 - Declaração do método: org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.addReachableRoles(java.util.Set, org.springframework.security.core.GrantedAuthority)
Métodos invocados: 
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.core.GrantedAuthority.getAuthority()
org.springframework.security.core.GrantedAuthority.getAuthority()
java.lang.String.equals(java.lang.Object)
java.util.Set.add(org.springframework.security.core.GrantedAuthority)
415 - Declaração do método: org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.getRolesReachableInOneOrMoreSteps(org.springframework.security.core.GrantedAuthority)
Métodos invocados: 
org.springframework.security.core.GrantedAuthority.getAuthority()
java.util.Map.keySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.core.GrantedAuthority.getAuthority()
org.springframework.security.core.GrantedAuthority.getAuthority()
java.lang.String.equals(java.lang.Object)
java.util.Map.get(java.lang.Object)
416 - Declaração do método: org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.buildRolesReachableInOneStepMap()
Métodos invocados: 
java.util.regex.Pattern.compile(java.lang.String)
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.util.regex.Matcher.find()
java.util.regex.Matcher.group(I)
java.util.regex.Matcher.group(I)
java.util.Map.containsKey(java.lang.Object)
java.util.Map.put(org.springframework.security.core.GrantedAuthority, java.util.Set)
java.util.Map.get(java.lang.Object)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.addReachableRoles(java.util.Set, org.springframework.security.core.GrantedAuthority)
org.apache.commons.logging.Log.debug(java.lang.Object)
417 - Declaração do método: org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.buildRolesReachableInOneOrMoreStepsMap()
Métodos invocados: 
java.util.Map.keySet()
java.util.Map.containsKey(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Set.addAll(java.util.Collection)
java.util.Set.isEmpty()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Set.remove(java.lang.Object)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.addReachableRoles(java.util.Set, org.springframework.security.core.GrantedAuthority)
java.util.Map.containsKey(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Set.contains(java.lang.Object)
java.util.Set.contains(java.lang.Object)
java.util.Set.addAll(java.util.Collection)
java.util.Map.put(org.springframework.security.core.GrantedAuthority, java.util.Set)
org.apache.commons.logging.Log.debug(java.lang.Object)
418 - Declaração do método: org.springframework.security.access.intercept.NullRunAsManager.buildRunAs(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
418 - Declaração do método: org.springframework.security.access.intercept.NullRunAsManager.supports(org.springframework.security.access.ConfigAttribute)
418 - Declaração do método: org.springframework.security.access.intercept.NullRunAsManager.supports(java.lang.Class)
418 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationProviderManager.afterPropertiesSet()
Métodos invocados: 
org.springframework.security.access.intercept.AfterInvocationProviderManager.checkIfValidList(java.util.List)
419 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationProviderManager.checkIfValidList(java.util.List)
Métodos invocados: 
java.util.List.size()
420 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationProviderManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection, java.lang.Object)
Métodos invocados: 
org.springframework.security.access.AfterInvocationProvider.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection, java.lang.Object)
421 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationProviderManager.getProviders()
421 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationProviderManager.setProviders(java.util.List)
Métodos invocados: 
org.springframework.security.access.intercept.AfterInvocationProviderManager.checkIfValidList(java.util.List)
java.util.List.size()
java.lang.Object.getClass()
java.lang.Class.getName()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
java.util.List.add(org.springframework.security.access.AfterInvocationProvider)
422 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationProviderManager.supports(org.springframework.security.access.ConfigAttribute)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.access.AfterInvocationProvider.supports(org.springframework.security.access.ConfigAttribute)
423 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationProviderManager.supports(java.lang.Class)
Métodos invocados: 
org.springframework.security.access.AfterInvocationProvider.supports(java.lang.Class)
424 - Declaração do método: org.springframework.security.access.intercept.RunAsManager.buildRunAs(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
424 - Declaração do método: org.springframework.security.access.intercept.RunAsManager.supports(org.springframework.security.access.ConfigAttribute)
424 - Declaração do método: org.springframework.security.access.intercept.RunAsManager.supports(java.lang.Class)
424 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection, java.lang.Object)
424 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationManager.supports(org.springframework.security.access.ConfigAttribute)
424 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationManager.supports(java.lang.Class)
424 - Declaração do método: org.springframework.security.access.intercept.RunAsUserToken.RunAsUserToken(java.lang.String, java.lang.Object, java.lang.Object, [Lorg.springframework.security.core.GrantedAuthority;, java.lang.Class)
Métodos invocados: 
java.util.Arrays.asList([Lorg.springframework.security.core.GrantedAuthority;)
425 - Declaração do método: org.springframework.security.access.intercept.RunAsUserToken.RunAsUserToken(java.lang.String, java.lang.Object, java.lang.Object, java.util.Collection, java.lang.Class)
Métodos invocados: 
java.lang.String.hashCode()
org.springframework.security.authentication.AbstractAuthenticationToken.setAuthenticated(Z)
426 - Declaração do método: org.springframework.security.access.intercept.RunAsUserToken.getCredentials()
426 - Declaração do método: org.springframework.security.access.intercept.RunAsUserToken.getKeyHash()
426 - Declaração do método: org.springframework.security.access.intercept.RunAsUserToken.getOriginalAuthentication()
426 - Declaração do método: org.springframework.security.access.intercept.RunAsUserToken.getPrincipal()
426 - Declaração do método: org.springframework.security.access.intercept.RunAsUserToken.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.Class.getName()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
427 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
Métodos invocados: 
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.obtainSecurityMetadataSource()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.obtainSecurityMetadataSource()
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.security.access.SecurityMetadataSource.supports(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.security.access.intercept.RunAsManager.supports(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.security.access.AccessDecisionManager.supports(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.security.access.intercept.AfterInvocationManager.supports(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.obtainSecurityMetadataSource()
org.springframework.security.access.SecurityMetadataSource.getAllConfigAttributes()
org.apache.commons.logging.Log.warn(java.lang.Object)
org.springframework.security.access.intercept.RunAsManager.supports(org.springframework.security.access.ConfigAttribute)
org.springframework.security.access.AccessDecisionManager.supports(org.springframework.security.access.ConfigAttribute)
org.springframework.security.access.intercept.AfterInvocationManager.supports(org.springframework.security.access.ConfigAttribute)
java.util.Set.add(org.springframework.security.access.ConfigAttribute)
java.util.Set.size()
org.apache.commons.logging.Log.info(java.lang.Object)
428 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.beforeInvocation(java.lang.Object)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Object.getClass()
java.lang.Class.getName()
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.security.access.intercept.AbstractSecurityInterceptor.obtainSecurityMetadataSource()
org.springframework.security.access.SecurityMetadataSource.getAttributes(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.publishEvent(org.springframework.context.ApplicationEvent)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.credentialsNotFound(java.lang.String, java.lang.Object, java.util.Collection)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.authenticateIfRequired()
org.springframework.security.access.AccessDecisionManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.publishEvent(org.springframework.context.ApplicationEvent)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.publishEvent(org.springframework.context.ApplicationEvent)
org.springframework.security.access.intercept.RunAsManager.buildRunAs(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
429 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.afterInvocation(org.springframework.security.access.intercept.InterceptorStatusToken, java.lang.Object)
Métodos invocados: 
org.springframework.security.access.intercept.InterceptorStatusToken.isContextHolderRefreshRequired()
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.access.intercept.InterceptorStatusToken.getAuthentication()
java.security.Principal.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.access.intercept.InterceptorStatusToken.getAuthentication()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.access.intercept.InterceptorStatusToken.getAuthentication()
org.springframework.security.access.intercept.InterceptorStatusToken.getSecureObject()
org.springframework.security.access.intercept.InterceptorStatusToken.getAttributes()
org.springframework.security.access.intercept.AfterInvocationManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection, java.lang.Object)
org.springframework.security.access.intercept.InterceptorStatusToken.getSecureObject()
org.springframework.security.access.intercept.InterceptorStatusToken.getAttributes()
org.springframework.security.access.intercept.InterceptorStatusToken.getAuthentication()
org.springframework.security.access.intercept.AbstractSecurityInterceptor.publishEvent(org.springframework.context.ApplicationEvent)
430 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.authenticateIfRequired()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.isAuthenticated()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
431 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.credentialsNotFound(java.lang.String, java.lang.Object, java.util.Collection)
Métodos invocados: 
org.springframework.security.access.intercept.AbstractSecurityInterceptor.publishEvent(org.springframework.context.ApplicationEvent)
432 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.getAccessDecisionManager()
432 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.getAfterInvocationManager()
432 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.getAuthenticationManager()
432 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.getRunAsManager()
432 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
432 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.isAlwaysReauthenticate()
432 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.isRejectPublicInvocations()
432 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.isValidateConfigAttributes()
432 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.obtainSecurityMetadataSource()
432 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.access.AccessDecisionManager)
432 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAfterInvocationManager(org.springframework.security.access.intercept.AfterInvocationManager)
432 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAlwaysReauthenticate(Z)
432 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
432 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
432 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.setMessageSource(org.springframework.context.MessageSource)
432 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.setRejectPublicInvocations(Z)
432 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.access.intercept.RunAsManager)
432 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.setValidateConfigAttributes(Z)
432 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptor.publishEvent(org.springframework.context.ApplicationEvent)
Métodos invocados: 
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
433 - Declaração do método: org.springframework.security.access.intercept.RunAsImplAuthenticationProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
434 - Declaração do método: org.springframework.security.access.intercept.RunAsImplAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.access.intercept.RunAsUserToken.getKeyHash()
java.lang.String.hashCode()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
435 - Declaração do método: org.springframework.security.access.intercept.RunAsImplAuthenticationProvider.getKey()
435 - Declaração do método: org.springframework.security.access.intercept.RunAsImplAuthenticationProvider.setKey(java.lang.String)
435 - Declaração do método: org.springframework.security.access.intercept.RunAsImplAuthenticationProvider.setMessageSource(org.springframework.context.MessageSource)
435 - Declaração do método: org.springframework.security.access.intercept.RunAsImplAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
436 - Declaração do método: org.springframework.security.access.intercept.InterceptorStatusToken.InterceptorStatusToken(org.springframework.security.core.Authentication, Z, java.util.Collection, java.lang.Object)
436 - Declaração do método: org.springframework.security.access.intercept.InterceptorStatusToken.getAttributes()
436 - Declaração do método: org.springframework.security.access.intercept.InterceptorStatusToken.getAuthentication()
436 - Declaração do método: org.springframework.security.access.intercept.InterceptorStatusToken.getSecureObject()
436 - Declaração do método: org.springframework.security.access.intercept.InterceptorStatusToken.isContextHolderRefreshRequired()
436 - Declaração do método: org.springframework.security.access.intercept.RunAsManagerImpl.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
437 - Declaração do método: org.springframework.security.access.intercept.RunAsManagerImpl.buildRunAs(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
Métodos invocados: 
org.springframework.security.access.intercept.RunAsManagerImpl.supports(org.springframework.security.access.ConfigAttribute)
org.springframework.security.access.intercept.RunAsManagerImpl.getRolePrefix()
org.springframework.security.access.ConfigAttribute.getAttribute()
java.util.List.add(org.springframework.security.core.GrantedAuthority)
java.util.List.size()
org.springframework.security.core.Authentication.getAuthorities()
java.util.List.addAll(java.util.Collection)
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.Authentication.getCredentials()
java.lang.Object.getClass()
438 - Declaração do método: org.springframework.security.access.intercept.RunAsManagerImpl.getKey()
438 - Declaração do método: org.springframework.security.access.intercept.RunAsManagerImpl.getRolePrefix()
438 - Declaração do método: org.springframework.security.access.intercept.RunAsManagerImpl.setKey(java.lang.String)
438 - Declaração do método: org.springframework.security.access.intercept.RunAsManagerImpl.setRolePrefix(java.lang.String)
438 - Declaração do método: org.springframework.security.access.intercept.RunAsManagerImpl.supports(org.springframework.security.access.ConfigAttribute)
Métodos invocados: 
org.springframework.security.access.ConfigAttribute.getAttribute()
org.springframework.security.access.ConfigAttribute.getAttribute()
java.lang.String.startsWith(java.lang.String)
439 - Declaração do método: org.springframework.security.access.intercept.RunAsManagerImpl.supports(java.lang.Class)
439 - Declaração do método: org.springframework.security.access.intercept.MethodInvocationPrivilegeEvaluator.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
440 - Declaração do método: org.springframework.security.access.intercept.MethodInvocationPrivilegeEvaluator.isAllowed(org.aopalliance.intercept.MethodInvocation, org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.aopalliance.intercept.MethodInvocation.getMethod()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.obtainSecurityMetadataSource()
org.springframework.security.access.SecurityMetadataSource.getAttributes(java.lang.Object)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.isRejectPublicInvocations()
org.springframework.security.core.Authentication.getAuthorities()
java.util.Collection.isEmpty()
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getAccessDecisionManager()
org.springframework.security.access.AccessDecisionManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.toString()
java.security.Principal.toString()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
441 - Declaração do método: org.springframework.security.access.intercept.MethodInvocationPrivilegeEvaluator.setSecurityInterceptor(org.springframework.security.access.intercept.AbstractSecurityInterceptor)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
java.lang.Object.equals(java.lang.Object)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getAccessDecisionManager()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
442 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.getSecureObjectClass()
442 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(org.aopalliance.intercept.MethodInvocation)
Métodos invocados: 
org.aopalliance.intercept.Joinpoint.proceed()
443 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.getSecurityMetadataSource()
443 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.obtainSecurityMetadataSource()
443 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.setSecurityMetadataSource(org.springframework.security.access.method.MethodSecurityMetadataSource)
443 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor.MethodSecurityMetadataSourceAdvisor(java.lang.String, org.springframework.security.access.method.MethodSecurityMetadataSource, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
444 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor.getPointcut()
444 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor.getAdvice()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.state(Z, java.lang.String)
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String, java.lang.Class)
445 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor.setBeanFactory(org.springframework.beans.factory.BeanFactory)
445 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor.readObject(java.io.ObjectInputStream)
Métodos invocados: 
java.io.ObjectInputStream.defaultReadObject()
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String, java.lang.Class)
446 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor$MethodSecurityMetadataSourcePointcut.matches(java.lang.reflect.Method, java.lang.Class)
Métodos invocados: 
org.springframework.security.access.method.MethodSecurityMetadataSource.getAttributes(java.lang.reflect.Method, java.lang.Class)
447 - Declaração do método: org.springframework.security.access.intercept.aspectj.AspectJAnnotationCallback.proceedWithObject()
447 - Declaração do método: org.springframework.security.access.intercept.aspectj.AspectJCallback.proceedWithObject()
447 - Declaração do método: org.springframework.security.access.intercept.aspectj.AspectJAnnotationSecurityInterceptor.getSecurityMetadataSource()
447 - Declaração do método: org.springframework.security.access.intercept.aspectj.AspectJAnnotationSecurityInterceptor.getSecureObjectClass()
447 - Declaração do método: org.springframework.security.access.intercept.aspectj.AspectJAnnotationSecurityInterceptor.invoke(org.aspectj.lang.JoinPoint, org.springframework.security.access.intercept.aspectj.AspectJAnnotationCallback)
Métodos invocados: 
org.springframework.security.access.intercept.aspectj.AspectJAnnotationCallback.proceedWithObject()
448 - Declaração do método: org.springframework.security.access.intercept.aspectj.AspectJAnnotationSecurityInterceptor.obtainSecurityMetadataSource()
448 - Declaração do método: org.springframework.security.access.intercept.aspectj.AspectJAnnotationSecurityInterceptor.setSecurityMetadataSource(org.springframework.security.access.method.MethodSecurityMetadataSource)
448 - Declaração do método: org.springframework.security.access.intercept.aspectj.MethodInvocationAdapter.MethodInvocationAdapter(org.aspectj.lang.JoinPoint)
Métodos invocados: 
org.aspectj.lang.JoinPoint.getTarget()
org.aspectj.lang.JoinPoint.getTarget()
org.aspectj.lang.JoinPoint.getSignature()
org.aspectj.lang.Signature.getDeclaringType()
org.aspectj.lang.JoinPoint.getStaticPart()
org.aspectj.lang.JoinPoint$StaticPart.getSignature()
org.aspectj.lang.Signature.getName()
org.aspectj.lang.JoinPoint.getStaticPart()
org.aspectj.lang.JoinPoint$StaticPart.getSignature()
org.aspectj.lang.reflect.CodeSignature.getParameterTypes()
org.aspectj.lang.JoinPoint.getStaticPart()
org.aspectj.lang.JoinPoint$StaticPart.getSignature()
org.aspectj.lang.Signature.getDeclaringType()
org.springframework.util.ClassUtils.getMethodIfAvailable(java.lang.Class, java.lang.String, [Ljava.lang.Class;)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
449 - Declaração do método: org.springframework.security.access.intercept.aspectj.MethodInvocationAdapter.getMethod()
449 - Declaração do método: org.springframework.security.access.intercept.aspectj.MethodInvocationAdapter.getArguments()
Métodos invocados: 
org.aspectj.lang.JoinPoint.getArgs()
450 - Declaração do método: org.springframework.security.access.intercept.aspectj.MethodInvocationAdapter.getStaticPart()
450 - Declaração do método: org.springframework.security.access.intercept.aspectj.MethodInvocationAdapter.getThis()
450 - Declaração do método: org.springframework.security.access.intercept.aspectj.MethodInvocationAdapter.proceed()
Métodos invocados: 
org.aspectj.lang.ProceedingJoinPoint.proceed()
451 - Declaração do método: org.springframework.security.access.intercept.aspectj.AspectJSecurityInterceptor.getSecureObjectClass()
451 - Declaração do método: org.springframework.security.access.intercept.aspectj.AspectJSecurityInterceptor.invoke(org.aspectj.lang.JoinPoint, org.springframework.security.access.intercept.aspectj.AspectJCallback)
Métodos invocados: 
org.springframework.security.access.intercept.aspectj.AspectJCallback.proceedWithObject()
452 - Declaração do método: org.springframework.security.access.intercept.aspectj.AspectJSecurityInterceptor.obtainSecurityMetadataSource()
452 - Declaração do método: org.springframework.security.access.intercept.aspectj.AspectJSecurityInterceptor.setSecurityMetadataSource(org.springframework.security.access.method.MethodSecurityMetadataSource)
452 - Declaração do método: org.springframework.security.access.intercept.aspectj.AspectJMethodSecurityInterceptor.invoke(org.aspectj.lang.JoinPoint)
452 - Declaração do método: org.springframework.security.access.intercept.aspectj.AspectJMethodSecurityInterceptor.invoke(org.aspectj.lang.JoinPoint, org.springframework.security.access.intercept.aspectj.AspectJCallback)
Métodos invocados: 
org.springframework.security.access.intercept.aspectj.AspectJCallback.proceedWithObject()
453 - Declaração do método: org.springframework.security.access.method.AbstractFallbackMethodSecurityMetadataSource.getAttributes(java.lang.reflect.Method, java.lang.Class)
Métodos invocados: 
org.springframework.aop.support.AopUtils.getMostSpecificMethod(java.lang.reflect.Method, java.lang.Class)
org.springframework.security.access.method.AbstractFallbackMethodSecurityMetadataSource.findAttributes(java.lang.reflect.Method, java.lang.Class)
java.lang.reflect.Method.getDeclaringClass()
org.springframework.security.access.method.AbstractFallbackMethodSecurityMetadataSource.findAttributes(java.lang.Class)
java.lang.reflect.Method.getDeclaringClass()
org.springframework.security.access.method.AbstractFallbackMethodSecurityMetadataSource.findAttributes(java.lang.reflect.Method, java.lang.Class)
java.lang.reflect.Method.getDeclaringClass()
org.springframework.security.access.method.AbstractFallbackMethodSecurityMetadataSource.findAttributes(java.lang.Class)
454 - Declaração do método: org.springframework.security.access.method.AbstractFallbackMethodSecurityMetadataSource.findAttributes(java.lang.reflect.Method, java.lang.Class)
454 - Declaração do método: org.springframework.security.access.method.AbstractFallbackMethodSecurityMetadataSource.findAttributes(java.lang.Class)
454 - Declaração do método: org.springframework.security.access.method.MethodSecurityMetadataSource.getAttributes(java.lang.reflect.Method, java.lang.Class)
454 - Declaração do método: org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource.DelegatingMethodSecurityMetadataSource(java.util.List)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
455 - Declaração do método: org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource.getAttributes(java.lang.reflect.Method, java.lang.Class)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
org.springframework.security.access.method.MethodSecurityMetadataSource.getAttributes(java.lang.reflect.Method, java.lang.Class)
java.util.Map.put(org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource$DefaultCacheKey, java.util.Collection)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Map.put(org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource$DefaultCacheKey, java.util.Collection)
456 - Declaração do método: org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource.getAllConfigAttributes()
Métodos invocados: 
org.springframework.security.access.SecurityMetadataSource.getAllConfigAttributes()
java.util.Set.addAll(java.util.Collection)
457 - Declaração do método: org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource$DefaultCacheKey.DefaultCacheKey(java.lang.reflect.Method, java.lang.Class)
457 - Declaração do método: org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource$DefaultCacheKey.equals(java.lang.Object)
Métodos invocados: 
java.lang.reflect.Method.equals(java.lang.Object)
org.springframework.util.ObjectUtils.nullSafeEquals(java.lang.Object, java.lang.Object)
458 - Declaração do método: org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource$DefaultCacheKey.hashCode()
Métodos invocados: 
java.lang.reflect.Method.hashCode()
java.lang.Object.hashCode()
459 - Declaração do método: org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource$DefaultCacheKey.toString()
Métodos invocados: 
java.lang.Class.getName()
460 - Declaração do método: org.springframework.security.access.method.AbstractMethodSecurityMetadataSource.getAttributes(java.lang.Object)
Métodos invocados: 
org.aopalliance.intercept.Joinpoint.getThis()
java.lang.Object.getClass()
org.aopalliance.intercept.MethodInvocation.getMethod()
org.springframework.security.access.method.MethodSecurityMetadataSource.getAttributes(java.lang.reflect.Method, java.lang.Class)
461 - Declaração do método: org.springframework.security.access.method.AbstractMethodSecurityMetadataSource.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.isAssignableFrom(java.lang.Class)
462 - Declaração do método: org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.MapBasedMethodSecurityMetadataSource()
462 - Declaração do método: org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.MapBasedMethodSecurityMetadataSource(java.util.Map)
Métodos invocados: 
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.addSecureMethod(java.lang.String, java.util.List)
463 - Declaração do método: org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.findAttributes(java.lang.Class)
463 - Declaração do método: org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.findAttributes(java.lang.reflect.Method, java.lang.Class)
Métodos invocados: 
org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.findAttributesSpecifiedAgainst(java.lang.reflect.Method, java.lang.Class)
464 - Declaração do método: org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.findAttributesSpecifiedAgainst(java.lang.reflect.Method, java.lang.Class)
Métodos invocados: 
java.util.Map.containsKey(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.lang.Class.getSuperclass()
java.lang.Class.getSuperclass()
org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.findAttributesSpecifiedAgainst(java.lang.reflect.Method, java.lang.Class)
465 - Declaração do método: org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.addSecureMethod(java.lang.String, java.util.List)
Métodos invocados: 
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.substring(I)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
java.lang.String.substring(I, I)
org.springframework.util.ClassUtils.resolveClassName(java.lang.String, java.lang.ClassLoader)
org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.addSecureMethod(java.lang.Class, java.lang.String, java.util.List)
466 - Declaração do método: org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.addSecureMethod(java.lang.Class, java.lang.String, java.util.List)
Métodos invocados: 
java.lang.Class.getName()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.Class.getMethods()
java.lang.reflect.Method.getName()
java.lang.String.equals(java.lang.Object)
java.lang.reflect.Method.getName()
org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.isMatch(java.lang.String, java.lang.String)
java.util.List.add(java.lang.reflect.Method)
java.util.List.isEmpty()
java.util.Map.get(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.length()
java.lang.String.length()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Map.put(org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource$RegisteredMethod, java.lang.String)
org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.addSecureMethod(org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource$RegisteredMethod, java.util.List)
org.apache.commons.logging.Log.debug(java.lang.Object)
467 - Declaração do método: org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.addSecureMethod(java.lang.Class, java.lang.reflect.Method, java.util.List)
Métodos invocados: 
java.util.Map.containsKey(java.lang.Object)
java.util.Map.get(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Map.put(org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource$RegisteredMethod, java.util.List)
468 - Declaração do método: org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.addSecureMethod(org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource$RegisteredMethod, java.util.List)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.apache.commons.logging.Log.isInfoEnabled()
org.apache.commons.logging.Log.info(java.lang.Object)
java.util.Map.put(org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource$RegisteredMethod, java.util.List)
469 - Declaração do método: org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.getAllConfigAttributes()
Métodos invocados: 
java.util.Map.values()
java.util.Set.addAll(java.util.Collection)
470 - Declaração do método: org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.isMatch(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.endsWith(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I, I)
java.lang.String.startsWith(java.lang.String)
java.lang.String.startsWith(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I, I)
java.lang.String.endsWith(java.lang.String)
471 - Declaração do método: org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.setBeanClassLoader(java.lang.ClassLoader)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
472 - Declaração do método: org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.getMethodMapSize()
Métodos invocados: 
java.util.Map.size()
473 - Declaração do método: org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource$RegisteredMethod.RegisteredMethod(java.lang.reflect.Method, java.lang.Class)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
474 - Declaração do método: org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource$RegisteredMethod.equals(java.lang.Object)
Métodos invocados: 
java.lang.reflect.Method.equals(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
475 - Declaração do método: org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource$RegisteredMethod.hashCode()
Métodos invocados: 
java.lang.reflect.Method.hashCode()
java.lang.Object.hashCode()
476 - Declaração do método: org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource$RegisteredMethod.toString()
Métodos invocados: 
java.lang.Class.getName()
477 - Declaração do método: org.springframework.security.access.prepost.PostInvocationAdviceProvider.PostInvocationAdviceProvider(org.springframework.security.access.prepost.PostInvocationAuthorizationAdvice)
477 - Declaração do método: org.springframework.security.access.prepost.PostInvocationAdviceProvider.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection, java.lang.Object)
Métodos invocados: 
org.springframework.security.access.prepost.PostInvocationAdviceProvider.findPostInvocationAttribute(java.util.Collection)
org.springframework.security.access.prepost.PostInvocationAuthorizationAdvice.after(org.springframework.security.core.Authentication, org.aopalliance.intercept.MethodInvocation, org.springframework.security.access.prepost.PostInvocationAttribute, java.lang.Object)
478 - Declaração do método: org.springframework.security.access.prepost.PostInvocationAdviceProvider.findPostInvocationAttribute(java.util.Collection)
478 - Declaração do método: org.springframework.security.access.prepost.PostInvocationAdviceProvider.supports(org.springframework.security.access.ConfigAttribute)
478 - Declaração do método: org.springframework.security.access.prepost.PostInvocationAdviceProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
479 - Declaração do método: org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource.PrePostAnnotationSecurityMetadataSource(org.springframework.security.access.prepost.PrePostInvocationAttributeFactory)
479 - Declaração do método: org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource.getAttributes(java.lang.reflect.Method, java.lang.Class)
Métodos invocados: 
java.lang.reflect.Method.getDeclaringClass()
java.lang.reflect.Method.getName()
org.apache.commons.logging.Log.trace(java.lang.Object)
org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource.findAnnotation(java.lang.reflect.Method, java.lang.Class, java.lang.Class)
org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource.findAnnotation(java.lang.reflect.Method, java.lang.Class, java.lang.Class)
org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource.findAnnotation(java.lang.reflect.Method, java.lang.Class, java.lang.Class)
org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource.findAnnotation(java.lang.reflect.Method, java.lang.Class, java.lang.Class)
org.apache.commons.logging.Log.trace(java.lang.Object)
org.springframework.security.access.prepost.PrePostInvocationAttributeFactory.createPreInvocationAttribute(org.springframework.security.access.prepost.PreFilter, org.springframework.security.access.prepost.PreAuthorize)
java.util.ArrayList.add(org.springframework.security.access.ConfigAttribute)
org.springframework.security.access.prepost.PrePostInvocationAttributeFactory.createPostInvocationAttribute(org.springframework.security.access.prepost.PostFilter, org.springframework.security.access.prepost.PostAuthorize)
java.util.ArrayList.add(org.springframework.security.access.ConfigAttribute)
java.util.ArrayList.trimToSize()
java.util.ArrayList.isEmpty()
480 - Declaração do método: org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource.getAllConfigAttributes()
480 - Declaração do método: org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource.findAnnotation(java.lang.reflect.Method, java.lang.Class, java.lang.Class)
Métodos invocados: 
org.springframework.util.ClassUtils.getMostSpecificMethod(java.lang.reflect.Method, java.lang.Class)
org.springframework.core.annotation.AnnotationUtils.findAnnotation(java.lang.reflect.Method, java.lang.Class)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.core.annotation.AnnotationUtils.findAnnotation(java.lang.reflect.Method, java.lang.Class)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.reflect.Method.getDeclaringClass()
java.lang.Class.getAnnotation(java.lang.Class)
java.lang.reflect.Method.getDeclaringClass()
java.lang.Class.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.reflect.Method.getDeclaringClass()
java.lang.Class.getAnnotation(java.lang.Class)
java.lang.reflect.Method.getDeclaringClass()
java.lang.Class.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
481 - Declaração do método: org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter.PreInvocationAuthorizationAdviceVoter(org.springframework.security.access.prepost.PreInvocationAuthorizationAdvice)
481 - Declaração do método: org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter.supports(org.springframework.security.access.ConfigAttribute)
481 - Declaração do método: org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
482 - Declaração do método: org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
Métodos invocados: 
org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter.findPreInvocationAttribute(java.util.Collection)
org.springframework.security.access.prepost.PreInvocationAuthorizationAdvice.before(org.springframework.security.core.Authentication, org.aopalliance.intercept.MethodInvocation, org.springframework.security.access.prepost.PreInvocationAttribute)
483 - Declaração do método: org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter.findPreInvocationAttribute(java.util.Collection)
483 - Declaração do método: org.springframework.security.access.prepost.PrePostInvocationAttributeFactory.createPreInvocationAttribute(org.springframework.security.access.prepost.PreFilter, org.springframework.security.access.prepost.PreAuthorize)
483 - Declaração do método: org.springframework.security.access.prepost.PrePostInvocationAttributeFactory.createPostInvocationAttribute(org.springframework.security.access.prepost.PostFilter, org.springframework.security.access.prepost.PostAuthorize)
483 - Declaração do método: org.springframework.security.access.prepost.PreInvocationAuthorizationAdvice.before(org.springframework.security.core.Authentication, org.aopalliance.intercept.MethodInvocation, org.springframework.security.access.prepost.PreInvocationAttribute)
483 - Declaração do método: org.springframework.security.access.prepost.PostInvocationAuthorizationAdvice.after(org.springframework.security.core.Authentication, org.aopalliance.intercept.MethodInvocation, org.springframework.security.access.prepost.PostInvocationAttribute, java.lang.Object)
483 - Declaração do método: org.springframework.security.access.vote.UnanimousBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
Métodos invocados: 
java.util.List.add(org.springframework.security.access.ConfigAttribute)
java.util.List.set(I, org.springframework.security.access.ConfigAttribute)
org.springframework.security.access.vote.AbstractAccessDecisionManager.getDecisionVoters()
org.springframework.security.access.AccessDecisionVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.access.vote.AbstractAccessDecisionManager.checkAllowIfAllAbstainDecisions()
484 - Declaração do método: org.springframework.security.access.vote.ConsensusBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
Métodos invocados: 
org.springframework.security.access.vote.AbstractAccessDecisionManager.getDecisionVoters()
org.springframework.security.access.AccessDecisionVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.access.vote.AbstractAccessDecisionManager.checkAllowIfAllAbstainDecisions()
485 - Declaração do método: org.springframework.security.access.vote.ConsensusBased.isAllowIfEqualGrantedDeniedDecisions()
485 - Declaração do método: org.springframework.security.access.vote.ConsensusBased.setAllowIfEqualGrantedDeniedDecisions(Z)
485 - Declaração do método: org.springframework.security.access.vote.RoleVoter.getRolePrefix()
485 - Declaração do método: org.springframework.security.access.vote.RoleVoter.setRolePrefix(java.lang.String)
485 - Declaração do método: org.springframework.security.access.vote.RoleVoter.supports(org.springframework.security.access.ConfigAttribute)
Métodos invocados: 
org.springframework.security.access.ConfigAttribute.getAttribute()
org.springframework.security.access.ConfigAttribute.getAttribute()
org.springframework.security.access.vote.RoleVoter.getRolePrefix()
java.lang.String.startsWith(java.lang.String)
486 - Declaração do método: org.springframework.security.access.vote.RoleVoter.supports(java.lang.Class)
486 - Declaração do método: org.springframework.security.access.vote.RoleVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
Métodos invocados: 
org.springframework.security.access.vote.RoleVoter.extractAuthorities(org.springframework.security.core.Authentication)
org.springframework.security.access.vote.RoleVoter.supports(org.springframework.security.access.ConfigAttribute)
org.springframework.security.access.ConfigAttribute.getAttribute()
org.springframework.security.core.GrantedAuthority.getAuthority()
java.lang.String.equals(java.lang.Object)
487 - Declaração do método: org.springframework.security.access.vote.RoleVoter.extractAuthorities(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.core.Authentication.getAuthorities()
488 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManager.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notEmpty(java.util.Collection, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
489 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManager.checkAllowIfAllAbstainDecisions()
Métodos invocados: 
org.springframework.security.access.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
490 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManager.getDecisionVoters()
490 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
490 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManager.setAllowIfAllAbstainDecisions(Z)
490 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
Métodos invocados: 
org.springframework.util.Assert.notEmpty(java.util.Collection)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.Object.getClass()
java.lang.Class.getName()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
491 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManager.setMessageSource(org.springframework.context.MessageSource)
491 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManager.supports(org.springframework.security.access.ConfigAttribute)
Métodos invocados: 
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.access.AccessDecisionVoter.supports(org.springframework.security.access.ConfigAttribute)
492 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManager.supports(java.lang.Class)
Métodos invocados: 
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.access.AccessDecisionVoter.supports(java.lang.Class)
493 - Declaração do método: org.springframework.security.access.vote.RoleHierarchyVoter.RoleHierarchyVoter(org.springframework.security.access.hierarchicalroles.RoleHierarchy)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
494 - Declaração do método: org.springframework.security.access.vote.RoleHierarchyVoter.extractAuthorities(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.core.Authentication.getAuthorities()
org.springframework.security.access.hierarchicalroles.RoleHierarchy.getReachableGrantedAuthorities(java.util.Collection)
495 - Declaração do método: org.springframework.security.access.vote.AuthenticatedVoter.isFullyAuthenticated(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.authentication.AuthenticationTrustResolver.isAnonymous(org.springframework.security.core.Authentication)
org.springframework.security.authentication.AuthenticationTrustResolver.isRememberMe(org.springframework.security.core.Authentication)
496 - Declaração do método: org.springframework.security.access.vote.AuthenticatedVoter.setAuthenticationTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
497 - Declaração do método: org.springframework.security.access.vote.AuthenticatedVoter.supports(org.springframework.security.access.ConfigAttribute)
Métodos invocados: 
org.springframework.security.access.ConfigAttribute.getAttribute()
org.springframework.security.access.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
org.springframework.security.access.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
org.springframework.security.access.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
498 - Declaração do método: org.springframework.security.access.vote.AuthenticatedVoter.supports(java.lang.Class)
498 - Declaração do método: org.springframework.security.access.vote.AuthenticatedVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
Métodos invocados: 
org.springframework.security.access.vote.AuthenticatedVoter.supports(org.springframework.security.access.ConfigAttribute)
org.springframework.security.access.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
org.springframework.security.access.vote.AuthenticatedVoter.isFullyAuthenticated(org.springframework.security.core.Authentication)
org.springframework.security.access.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
org.springframework.security.authentication.AuthenticationTrustResolver.isRememberMe(org.springframework.security.core.Authentication)
org.springframework.security.access.vote.AuthenticatedVoter.isFullyAuthenticated(org.springframework.security.core.Authentication)
org.springframework.security.access.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
org.springframework.security.authentication.AuthenticationTrustResolver.isAnonymous(org.springframework.security.core.Authentication)
org.springframework.security.access.vote.AuthenticatedVoter.isFullyAuthenticated(org.springframework.security.core.Authentication)
org.springframework.security.authentication.AuthenticationTrustResolver.isRememberMe(org.springframework.security.core.Authentication)
499 - Declaração do método: org.springframework.security.access.vote.AbstractAclVoter.getDomainObjectInstance(java.lang.Object)
Métodos invocados: 
org.aopalliance.intercept.MethodInvocation.getMethod()
java.lang.reflect.Method.getParameterTypes()
org.aopalliance.intercept.Invocation.getArguments()
org.aspectj.lang.JoinPoint.getStaticPart()
org.aspectj.lang.JoinPoint$StaticPart.getSignature()
org.aspectj.lang.reflect.CodeSignature.getParameterTypes()
org.aspectj.lang.JoinPoint.getArgs()
java.lang.Class.isAssignableFrom(java.lang.Class)
500 - Declaração do método: org.springframework.security.access.vote.AbstractAclVoter.getProcessDomainObjectClass()
500 - Declaração do método: org.springframework.security.access.vote.AbstractAclVoter.setProcessDomainObjectClass(java.lang.Class)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
501 - Declaração do método: org.springframework.security.access.vote.AbstractAclVoter.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.isAssignableFrom(java.lang.Class)
502 - Declaração do método: org.springframework.security.access.vote.AffirmativeBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
Métodos invocados: 
org.springframework.security.access.vote.AbstractAccessDecisionManager.getDecisionVoters()
org.springframework.security.access.AccessDecisionVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.access.vote.AbstractAccessDecisionManager.checkAllowIfAllAbstainDecisions()
503 - Declaração do método: org.springframework.security.authentication.AuthenticationDetails.AuthenticationDetails(java.lang.Object)
Métodos invocados: 
java.lang.Object.toString()
org.springframework.security.authentication.AuthenticationDetails.doPopulateAdditionalInformation(java.lang.Object)
504 - Declaração do método: org.springframework.security.authentication.AuthenticationDetails.doPopulateAdditionalInformation(java.lang.Object)
504 - Declaração do método: org.springframework.security.authentication.AuthenticationDetails.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.authentication.AuthenticationDetails.getContext()
java.lang.String.equals(java.lang.Object)
505 - Declaração do método: org.springframework.security.authentication.AuthenticationDetails.getContext()
505 - Declaração do método: org.springframework.security.authentication.AuthenticationDetails.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
org.springframework.security.authentication.AuthenticationDetails.getContext()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
506 - Declaração do método: org.springframework.security.authentication.RememberMeAuthenticationProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
507 - Declaração do método: org.springframework.security.authentication.RememberMeAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.security.authentication.RememberMeAuthenticationProvider.supports(java.lang.Class)
java.lang.String.hashCode()
org.springframework.security.authentication.RememberMeAuthenticationToken.getKeyHash()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
508 - Declaração do método: org.springframework.security.authentication.RememberMeAuthenticationProvider.getKey()
508 - Declaração do método: org.springframework.security.authentication.RememberMeAuthenticationProvider.setKey(java.lang.String)
508 - Declaração do método: org.springframework.security.authentication.RememberMeAuthenticationProvider.setMessageSource(org.springframework.context.MessageSource)
508 - Declaração do método: org.springframework.security.authentication.RememberMeAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
509 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationToken.AbstractAuthenticationToken(java.util.Collection)
Métodos invocados: 
java.util.Collection.size()
java.util.ArrayList.addAll(java.util.Collection)
java.util.Collections.unmodifiableList(java.util.List)
510 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
510 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationToken.getName()
Métodos invocados: 
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.Authentication.getPrincipal()
java.security.Principal.getName()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.Authentication.getPrincipal()
java.lang.Object.toString()
511 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
511 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationToken.setAuthenticated(Z)
511 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationToken.getDetails()
511 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
511 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationToken.eraseCredentials()
Métodos invocados: 
org.springframework.security.core.Authentication.getCredentials()
org.springframework.security.authentication.AbstractAuthenticationToken.eraseSecret(java.lang.Object)
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.authentication.AbstractAuthenticationToken.eraseSecret(java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.eraseSecret(java.lang.Object)
512 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationToken.eraseSecret(java.lang.Object)
Métodos invocados: 
org.springframework.security.core.CredentialsContainer.eraseCredentials()
513 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationToken.equals(java.lang.Object)
Métodos invocados: 
java.util.Collection.equals(java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.getDetails()
org.springframework.security.authentication.AbstractAuthenticationToken.getDetails()
org.springframework.security.authentication.AbstractAuthenticationToken.getDetails()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.core.Authentication.getCredentials()
org.springframework.security.core.Authentication.getCredentials()
org.springframework.security.core.Authentication.getCredentials()
org.springframework.security.core.Authentication.getCredentials()
org.springframework.security.core.Authentication.getCredentials()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.Authentication.getPrincipal()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
514 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationToken.hashCode()
Métodos invocados: 
java.lang.Object.hashCode()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.Authentication.getPrincipal()
java.lang.Object.hashCode()
org.springframework.security.core.Authentication.getCredentials()
org.springframework.security.core.Authentication.getCredentials()
java.lang.Object.hashCode()
org.springframework.security.authentication.AbstractAuthenticationToken.getDetails()
org.springframework.security.authentication.AbstractAuthenticationToken.getDetails()
java.lang.Object.hashCode()
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
515 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationToken.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
org.springframework.security.core.Authentication.getPrincipal()
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
java.lang.StringBuilder.append(Z)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
org.springframework.security.authentication.AbstractAuthenticationToken.getDetails()
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.util.Collection.isEmpty()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
516 - Declaração do método: org.springframework.security.authentication.AuthenticationDetailsSource.buildDetails(java.lang.Object)
516 - Declaração do método: org.springframework.security.authentication.ProviderNotFoundException.ProviderNotFoundException(java.lang.String)
516 - Declaração do método: org.springframework.security.authentication.ProviderNotFoundException.ProviderNotFoundException(java.lang.String, java.lang.Throwable)
516 - Declaração do método: org.springframework.security.authentication.AuthenticationCredentialsNotFoundException.AuthenticationCredentialsNotFoundException(java.lang.String)
516 - Declaração do método: org.springframework.security.authentication.AuthenticationCredentialsNotFoundException.AuthenticationCredentialsNotFoundException(java.lang.String, java.lang.Throwable)
516 - Declaração do método: org.springframework.security.authentication.AuthenticationEventPublisher.publishAuthenticationSuccess(org.springframework.security.core.Authentication)
516 - Declaração do método: org.springframework.security.authentication.AuthenticationEventPublisher.publishAuthenticationFailure(org.springframework.security.core.AuthenticationException, org.springframework.security.core.Authentication)
516 - Declaração do método: org.springframework.security.authentication.AnonymousAuthenticationProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
517 - Declaração do método: org.springframework.security.authentication.AnonymousAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.security.authentication.AnonymousAuthenticationProvider.supports(java.lang.Class)
java.lang.String.hashCode()
org.springframework.security.authentication.AnonymousAuthenticationToken.getKeyHash()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
518 - Declaração do método: org.springframework.security.authentication.AnonymousAuthenticationProvider.getKey()
518 - Declaração do método: org.springframework.security.authentication.AnonymousAuthenticationProvider.setKey(java.lang.String)
518 - Declaração do método: org.springframework.security.authentication.AnonymousAuthenticationProvider.setMessageSource(org.springframework.context.MessageSource)
518 - Declaração do método: org.springframework.security.authentication.AnonymousAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
519 - Declaração do método: org.springframework.security.authentication.AnonymousAuthenticationToken.AnonymousAuthenticationToken(java.lang.String, java.lang.Object, java.util.List)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.util.List.isEmpty()
java.lang.String.hashCode()
org.springframework.security.authentication.AbstractAuthenticationToken.setAuthenticated(Z)
520 - Declaração do método: org.springframework.security.authentication.AnonymousAuthenticationToken.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.authentication.AnonymousAuthenticationToken.getKeyHash()
org.springframework.security.authentication.AnonymousAuthenticationToken.getKeyHash()
521 - Declaração do método: org.springframework.security.authentication.AnonymousAuthenticationToken.getCredentials()
521 - Declaração do método: org.springframework.security.authentication.AnonymousAuthenticationToken.getKeyHash()
521 - Declaração do método: org.springframework.security.authentication.AnonymousAuthenticationToken.getPrincipal()
521 - Declaração do método: org.springframework.security.authentication.CredentialsExpiredException.CredentialsExpiredException(java.lang.String)
521 - Declaração do método: org.springframework.security.authentication.CredentialsExpiredException.CredentialsExpiredException(java.lang.String, java.lang.Throwable)
521 - Declaração do método: org.springframework.security.authentication.CredentialsExpiredException.CredentialsExpiredException(java.lang.String, java.lang.Object)
521 - Declaração do método: org.springframework.security.authentication.DefaultAuthenticationEventPublisher.DefaultAuthenticationEventPublisher()
521 - Declaração do método: org.springframework.security.authentication.DefaultAuthenticationEventPublisher.DefaultAuthenticationEventPublisher(org.springframework.context.ApplicationEventPublisher)
Métodos invocados: 
java.lang.Class.getName()
java.lang.Class.getName()
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.lang.Class.getName()
java.lang.Class.getName()
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.lang.Class.getName()
java.lang.Class.getName()
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.lang.Class.getName()
java.lang.Class.getName()
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.lang.Class.getName()
java.lang.Class.getName()
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.lang.Class.getName()
java.lang.Class.getName()
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.lang.Class.getName()
java.lang.Class.getName()
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.lang.Class.getName()
java.lang.Class.getName()
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.lang.Class.getName()
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
522 - Declaração do método: org.springframework.security.authentication.DefaultAuthenticationEventPublisher.publishAuthenticationSuccess(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
523 - Declaração do método: org.springframework.security.authentication.DefaultAuthenticationEventPublisher.publishAuthenticationFailure(org.springframework.security.core.AuthenticationException, org.springframework.security.core.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
java.util.Properties.getProperty(java.lang.String)
java.lang.Object.getClass()
java.lang.Class.getClassLoader()
java.lang.ClassLoader.loadClass(java.lang.String)
java.lang.Class.getConstructor([Ljava.lang.Class;)
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
524 - Declaração do método: org.springframework.security.authentication.DefaultAuthenticationEventPublisher.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
524 - Declaração do método: org.springframework.security.authentication.DefaultAuthenticationEventPublisher.setAdditionalExceptionMappings(java.util.Properties)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.Hashtable.putAll(java.util.Map)
525 - Declaração do método: org.springframework.security.authentication.UsernamePasswordAuthenticationToken.UsernamePasswordAuthenticationToken(java.lang.Object, java.lang.Object)
Métodos invocados: 
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.setAuthenticated(Z)
526 - Declaração do método: org.springframework.security.authentication.UsernamePasswordAuthenticationToken.UsernamePasswordAuthenticationToken(java.lang.Object, java.lang.Object, java.util.Collection)
526 - Declaração do método: org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getCredentials()
526 - Declaração do método: org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getPrincipal()
526 - Declaração do método: org.springframework.security.authentication.UsernamePasswordAuthenticationToken.setAuthenticated(Z)
526 - Declaração do método: org.springframework.security.authentication.UsernamePasswordAuthenticationToken.eraseCredentials()
526 - Declaração do método: org.springframework.security.authentication.AccountExpiredException.AccountExpiredException(java.lang.String)
526 - Declaração do método: org.springframework.security.authentication.AccountExpiredException.AccountExpiredException(java.lang.String, java.lang.Throwable)
526 - Declaração do método: org.springframework.security.authentication.AccountExpiredException.AccountExpiredException(java.lang.String, java.lang.Object)
526 - Declaração do método: org.springframework.security.authentication.AccountStatusUserDetailsChecker.check(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.isAccountNonLocked()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.UserDetails.isEnabled()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.UserDetails.isAccountNonExpired()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.UserDetails.isCredentialsNonExpired()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
527 - Declaração do método: org.springframework.security.authentication.RememberMeAuthenticationToken.RememberMeAuthenticationToken(java.lang.String, java.lang.Object, java.util.Collection)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.hashCode()
org.springframework.security.authentication.AbstractAuthenticationToken.setAuthenticated(Z)
528 - Declaração do método: org.springframework.security.authentication.RememberMeAuthenticationToken.getCredentials()
528 - Declaração do método: org.springframework.security.authentication.RememberMeAuthenticationToken.getKeyHash()
528 - Declaração do método: org.springframework.security.authentication.RememberMeAuthenticationToken.getPrincipal()
528 - Declaração do método: org.springframework.security.authentication.RememberMeAuthenticationToken.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.authentication.RememberMeAuthenticationToken.getKeyHash()
org.springframework.security.authentication.RememberMeAuthenticationToken.getKeyHash()
529 - Declaração do método: org.springframework.security.authentication.LockedException.LockedException(java.lang.String)
529 - Declaração do método: org.springframework.security.authentication.LockedException.LockedException(java.lang.String, java.lang.Throwable)
529 - Declaração do método: org.springframework.security.authentication.LockedException.LockedException(java.lang.String, java.lang.Object)
529 - Declaração do método: org.springframework.security.authentication.BadCredentialsException.BadCredentialsException(java.lang.String)
529 - Declaração do método: org.springframework.security.authentication.BadCredentialsException.BadCredentialsException(java.lang.String, java.lang.Object)
529 - Declaração do método: org.springframework.security.authentication.BadCredentialsException.BadCredentialsException(java.lang.String, java.lang.Throwable)
529 - Declaração do método: org.springframework.security.authentication.AuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
529 - Declaração do método: org.springframework.security.authentication.AuthenticationProvider.supports(java.lang.Class)
529 - Declaração do método: org.springframework.security.authentication.DisabledException.DisabledException(java.lang.String)
529 - Declaração do método: org.springframework.security.authentication.DisabledException.DisabledException(java.lang.String, java.lang.Throwable)
529 - Declaração do método: org.springframework.security.authentication.DisabledException.DisabledException(java.lang.String, java.lang.Object)
529 - Declaração do método: org.springframework.security.authentication.TestingAuthenticationToken.TestingAuthenticationToken(java.lang.Object, java.lang.Object)
529 - Declaração do método: org.springframework.security.authentication.TestingAuthenticationToken.TestingAuthenticationToken(java.lang.Object, java.lang.Object, [Ljava.lang.String;)
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.authentication.AbstractAuthenticationToken.setAuthenticated(Z)
530 - Declaração do método: org.springframework.security.authentication.TestingAuthenticationToken.TestingAuthenticationToken(java.lang.Object, java.lang.Object, [Lorg.springframework.security.core.GrantedAuthority;)
Métodos invocados: 
java.util.Arrays.asList([Lorg.springframework.security.core.GrantedAuthority;)
531 - Declaração do método: org.springframework.security.authentication.TestingAuthenticationToken.TestingAuthenticationToken(java.lang.Object, java.lang.Object, java.util.List)
531 - Declaração do método: org.springframework.security.authentication.TestingAuthenticationToken.getCredentials()
531 - Declaração do método: org.springframework.security.authentication.TestingAuthenticationToken.getPrincipal()
531 - Declaração do método: org.springframework.security.authentication.AuthenticationTrustResolverImpl.getAnonymousClass()
531 - Declaração do método: org.springframework.security.authentication.AuthenticationTrustResolverImpl.getRememberMeClass()
531 - Declaração do método: org.springframework.security.authentication.AuthenticationTrustResolverImpl.isAnonymous(org.springframework.security.core.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
532 - Declaração do método: org.springframework.security.authentication.AuthenticationTrustResolverImpl.isRememberMe(org.springframework.security.core.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
533 - Declaração do método: org.springframework.security.authentication.AuthenticationTrustResolverImpl.setAnonymousClass(java.lang.Class)
533 - Declaração do método: org.springframework.security.authentication.AuthenticationTrustResolverImpl.setRememberMeClass(java.lang.Class)
533 - Declaração do método: org.springframework.security.authentication.InsufficientAuthenticationException.InsufficientAuthenticationException(java.lang.String)
533 - Declaração do método: org.springframework.security.authentication.InsufficientAuthenticationException.InsufficientAuthenticationException(java.lang.String, java.lang.Throwable)
533 - Declaração do método: org.springframework.security.authentication.ProviderManager.afterPropertiesSet()
Métodos invocados: 
java.util.List.isEmpty()
534 - Declaração do método: org.springframework.security.authentication.ProviderManager.authenticate(org.springframework.security.core.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.authentication.ProviderManager.getProviders()
org.springframework.security.authentication.AuthenticationProvider.supports(java.lang.Class)
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.authentication.AuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.authentication.ProviderManager.copyDetails(org.springframework.security.core.Authentication, org.springframework.security.core.Authentication)
org.springframework.security.authentication.ProviderManager.prepareException(org.springframework.security.core.AuthenticationException, org.springframework.security.core.Authentication)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.core.CredentialsContainer.eraseCredentials()
org.springframework.security.authentication.AuthenticationEventPublisher.publishAuthenticationSuccess(org.springframework.security.core.Authentication)
java.lang.Class.getName()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
org.springframework.security.authentication.AuthenticationEventPublisher.publishAuthenticationFailure(org.springframework.security.core.AuthenticationException, org.springframework.security.core.Authentication)
org.springframework.security.authentication.ProviderManager.prepareException(org.springframework.security.core.AuthenticationException, org.springframework.security.core.Authentication)
535 - Declaração do método: org.springframework.security.authentication.ProviderManager.prepareException(org.springframework.security.core.AuthenticationException, org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.core.AuthenticationException.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.core.AuthenticationException.clearExtraInformation()
536 - Declaração do método: org.springframework.security.authentication.ProviderManager.copyDetails(org.springframework.security.core.Authentication, org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.core.Authentication.getDetails()
org.springframework.security.core.Authentication.getDetails()
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
537 - Declaração do método: org.springframework.security.authentication.ProviderManager.getProviders()
537 - Declaração do método: org.springframework.security.authentication.ProviderManager.setMessageSource(org.springframework.context.MessageSource)
537 - Declaração do método: org.springframework.security.authentication.ProviderManager.setParent(org.springframework.security.authentication.AuthenticationManager)
537 - Declaração do método: org.springframework.security.authentication.ProviderManager.setAuthenticationEventPublisher(org.springframework.security.authentication.AuthenticationEventPublisher)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
538 - Declaração do método: org.springframework.security.authentication.ProviderManager.setEraseCredentialsAfterAuthentication(Z)
538 - Declaração do método: org.springframework.security.authentication.ProviderManager.isEraseCredentialsAfterAuthentication()
538 - Declaração do método: org.springframework.security.authentication.ProviderManager.setProviders(java.util.List)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
539 - Declaração do método: org.springframework.security.authentication.ProviderManager.setClearExtraInformation(Z)
539 - Declaração do método: org.springframework.security.authentication.ProviderManager$NullEventPublisher.publishAuthenticationFailure(org.springframework.security.core.AuthenticationException, org.springframework.security.core.Authentication)
539 - Declaração do método: org.springframework.security.authentication.ProviderManager$NullEventPublisher.publishAuthenticationSuccess(org.springframework.security.core.Authentication)
539 - Declaração do método: org.springframework.security.authentication.AuthenticationDetailsSourceImpl.buildDetails(java.lang.Object)
Métodos invocados: 
org.springframework.security.authentication.AuthenticationDetailsSourceImpl.getFirstMatchingConstructor(java.lang.Object)
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
540 - Declaração do método: org.springframework.security.authentication.AuthenticationDetailsSourceImpl.getFirstMatchingConstructor(java.lang.Object)
Métodos invocados: 
java.lang.Class.getDeclaredConstructors()
java.lang.reflect.Constructor.getParameterTypes()
java.lang.Class.isInstance(java.lang.Object)
java.lang.Object.getClass()
541 - Declaração do método: org.springframework.security.authentication.AuthenticationDetailsSourceImpl.setClazz(java.lang.Class)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
542 - Declaração do método: org.springframework.security.authentication.AuthenticationServiceException.AuthenticationServiceException(java.lang.String)
542 - Declaração do método: org.springframework.security.authentication.AuthenticationServiceException.AuthenticationServiceException(java.lang.String, java.lang.Throwable)
542 - Declaração do método: org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
542 - Declaração do método: org.springframework.security.authentication.AccountStatusException.AccountStatusException(java.lang.String)
542 - Declaração do método: org.springframework.security.authentication.AccountStatusException.AccountStatusException(java.lang.String, java.lang.Throwable)
542 - Declaração do método: org.springframework.security.authentication.AccountStatusException.AccountStatusException(java.lang.String, java.lang.Object)
542 - Declaração do método: org.springframework.security.authentication.TestingAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
542 - Declaração do método: org.springframework.security.authentication.TestingAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
543 - Declaração do método: org.springframework.security.authentication.AuthenticationTrustResolver.isAnonymous(org.springframework.security.core.Authentication)
543 - Declaração do método: org.springframework.security.authentication.AuthenticationTrustResolver.isRememberMe(org.springframework.security.core.Authentication)
543 - Declaração do método: org.springframework.security.authentication.dao.ReflectionSaltSource.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
544 - Declaração do método: org.springframework.security.authentication.dao.ReflectionSaltSource.getSalt(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.authentication.dao.ReflectionSaltSource.findSaltMethod(org.springframework.security.core.userdetails.UserDetails)
java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
java.lang.Throwable.getMessage()
545 - Declaração do método: org.springframework.security.authentication.dao.ReflectionSaltSource.findSaltMethod(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.util.ReflectionUtils.findMethod(java.lang.Class, java.lang.String, [Ljava.lang.Class;)
java.lang.Object.getClass()
org.springframework.beans.BeanUtils.getPropertyDescriptor(java.lang.Class, java.lang.String)
java.beans.PropertyDescriptor.getReadMethod()
java.lang.Object.getClass()
java.lang.Class.getName()
546 - Declaração do método: org.springframework.security.authentication.dao.ReflectionSaltSource.getUserPropertyToUse()
546 - Declaração do método: org.springframework.security.authentication.dao.ReflectionSaltSource.setUserPropertyToUse(java.lang.String)
546 - Declaração do método: org.springframework.security.authentication.dao.ReflectionSaltSource.toString()
546 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProvider.additionalAuthenticationChecks(org.springframework.security.core.userdetails.UserDetails, org.springframework.security.authentication.UsernamePasswordAuthenticationToken)
Métodos invocados: 
org.springframework.security.authentication.dao.SaltSource.getSalt(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getCredentials()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getCredentials()
java.lang.Object.toString()
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.springframework.security.authentication.encoding.PasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
547 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProvider.doAfterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
548 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(java.lang.String, org.springframework.security.authentication.UsernamePasswordAuthenticationToken)
Métodos invocados: 
org.springframework.security.authentication.dao.DaoAuthenticationProvider.getUserDetailsService()
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
java.lang.Throwable.getMessage()
549 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProvider.setPasswordEncoder(org.springframework.security.authentication.encoding.PasswordEncoder)
549 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProvider.getPasswordEncoder()
549 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProvider.setSaltSource(org.springframework.security.authentication.dao.SaltSource)
549 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProvider.getSaltSource()
549 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
549 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProvider.getUserDetailsService()
549 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProvider.isIncludeDetailsObject()
549 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProvider.setIncludeDetailsObject(Z)
549 - Declaração do método: org.springframework.security.authentication.dao.SystemWideSaltSource.afterPropertiesSet()
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
550 - Declaração do método: org.springframework.security.authentication.dao.SystemWideSaltSource.getSalt(org.springframework.security.core.userdetails.UserDetails)
550 - Declaração do método: org.springframework.security.authentication.dao.SystemWideSaltSource.getSystemWideSalt()
550 - Declaração do método: org.springframework.security.authentication.dao.SystemWideSaltSource.setSystemWideSalt(java.lang.String)
550 - Declaração do método: org.springframework.security.authentication.dao.SaltSource.getSalt(org.springframework.security.core.userdetails.UserDetails)
550 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.additionalAuthenticationChecks(org.springframework.security.core.userdetails.UserDetails, org.springframework.security.authentication.UsernamePasswordAuthenticationToken)
550 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.doAfterPropertiesSet()
551 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.core.Authentication.getPrincipal()
java.security.Principal.getName()
org.springframework.security.core.userdetails.UserCache.getUserFromCache(java.lang.String)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.retrieveUser(java.lang.String, org.springframework.security.authentication.UsernamePasswordAuthenticationToken)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.core.userdetails.UserDetailsChecker.check(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.additionalAuthenticationChecks(org.springframework.security.core.userdetails.UserDetails, org.springframework.security.authentication.UsernamePasswordAuthenticationToken)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.retrieveUser(java.lang.String, org.springframework.security.authentication.UsernamePasswordAuthenticationToken)
org.springframework.security.core.userdetails.UserDetailsChecker.check(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.additionalAuthenticationChecks(org.springframework.security.core.userdetails.UserDetails, org.springframework.security.authentication.UsernamePasswordAuthenticationToken)
org.springframework.security.core.userdetails.UserDetailsChecker.check(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.userdetails.UserCache.putUserInCache(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.createSuccessAuthentication(java.lang.Object, org.springframework.security.core.Authentication, org.springframework.security.core.userdetails.UserDetails)
552 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.createSuccessAuthentication(java.lang.Object, org.springframework.security.core.Authentication, org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.core.Authentication.getCredentials()
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.Authentication.getDetails()
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
553 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.doAfterPropertiesSet()
553 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.getUserCache()
553 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.isForcePrincipalAsString()
553 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.isHideUserNotFoundExceptions()
553 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.retrieveUser(java.lang.String, org.springframework.security.authentication.UsernamePasswordAuthenticationToken)
553 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setForcePrincipalAsString(Z)
553 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setHideUserNotFoundExceptions(Z)
553 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setMessageSource(org.springframework.context.MessageSource)
553 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
553 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
554 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.getPreAuthenticationChecks()
554 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setPreAuthenticationChecks(org.springframework.security.core.userdetails.UserDetailsChecker)
554 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.getPostAuthenticationChecks()
554 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setPostAuthenticationChecks(org.springframework.security.core.userdetails.UserDetailsChecker)
554 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider$DefaultPreAuthenticationChecks.check(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.isAccountNonLocked()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.UserDetails.isEnabled()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.UserDetails.isAccountNonExpired()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
555 - Declaração do método: org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider$DefaultPostAuthenticationChecks.check(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.isCredentialsNonExpired()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
556 - Declaração do método: org.springframework.security.authentication.encoding.Md4PasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.security.authentication.encoding.BasePasswordEncoder.mergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
java.lang.String.getBytes(java.lang.String)
org.springframework.security.authentication.encoding.Md4.update([B, I, I)
org.springframework.security.authentication.encoding.Md4.digest()
org.springframework.security.authentication.encoding.BaseDigestPasswordEncoder.getEncodeHashAsBase64()
org.springframework.security.core.codec.Base64.encode([B)
org.springframework.security.core.codec.Hex.encode([B)
557 - Declaração do método: org.springframework.security.authentication.encoding.Md4PasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.security.authentication.encoding.Md4PasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
java.lang.String.equals(java.lang.Object)
558 - Declaração do método: org.springframework.security.authentication.encoding.Md4PasswordEncoder.getAlgorithm()
558 - Declaração do método: org.springframework.security.authentication.encoding.Md4.Md4()
Métodos invocados: 
org.springframework.security.authentication.encoding.Md4.reset()
559 - Declaração do método: org.springframework.security.authentication.encoding.Md4.reset()
559 - Declaração do método: org.springframework.security.authentication.encoding.Md4.digest()
Métodos invocados: 
org.springframework.security.authentication.encoding.Md4.digest([B, I, I)
560 - Declaração do método: org.springframework.security.authentication.encoding.Md4.digest([B, I)
560 - Declaração do método: org.springframework.security.authentication.encoding.Md4.digest([B, I, I)
Métodos invocados: 
org.springframework.security.authentication.encoding.Md4.update([B, I)
org.springframework.security.authentication.encoding.Md4.update([B, I)
org.springframework.security.authentication.encoding.Md4.digest([B, I)
561 - Declaração do método: org.springframework.security.authentication.encoding.Md4.update([B, I, I)
Métodos invocados: 
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
org.springframework.security.authentication.encoding.Md4.update([B, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
562 - Declaração do método: org.springframework.security.authentication.encoding.Md4.update([B, I)
Métodos invocados: 
org.springframework.security.authentication.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.authentication.encoding.Md4.HH(I, I, I, I, I, I)
563 - Declaração do método: org.springframework.security.authentication.encoding.Md4.FF(I, I, I, I, I, I)
563 - Declaração do método: org.springframework.security.authentication.encoding.Md4.GG(I, I, I, I, I, I)
563 - Declaração do método: org.springframework.security.authentication.encoding.Md4.HH(I, I, I, I, I, I)
563 - Declaração do método: org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.LdapShaPasswordEncoder()
563 - Declaração do método: org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.combineHashAndSalt([B, [B)
Métodos invocados: 
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
564 - Declaração do método: org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
Métodos invocados: 
java.security.MessageDigest.getInstance(java.lang.String)
java.lang.String.getBytes(java.lang.String)
java.security.MessageDigest.update([B)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
java.security.MessageDigest.update([B)
java.security.MessageDigest.digest()
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.combineHashAndSalt([B, [B)
org.springframework.security.core.codec.Base64.encode([B)
565 - Declaração do método: org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.extractSalt(java.lang.String)
Métodos invocados: 
java.lang.String.substring(I)
java.lang.String.getBytes()
org.springframework.security.core.codec.Base64.decode([B)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
566 - Declaração do método: org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.extractPrefix(java.lang.String)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.extractSalt(java.lang.String)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.length()
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
java.lang.String.substring(I)
java.lang.String.substring(I)
java.lang.String.equals(java.lang.Object)
567 - Declaração do método: org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.extractPrefix(java.lang.String)
Métodos invocados: 
java.lang.String.startsWith(java.lang.String)
java.lang.String.lastIndexOf(I)
java.lang.String.substring(I, I)
568 - Declaração do método: org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.setForceLowerCasePrefix(Z)
568 - Declaração do método: org.springframework.security.authentication.encoding.ShaPasswordEncoder.ShaPasswordEncoder()
568 - Declaração do método: org.springframework.security.authentication.encoding.ShaPasswordEncoder.ShaPasswordEncoder(I)
568 - Declaração do método: org.springframework.security.authentication.encoding.BaseDigestPasswordEncoder.getEncodeHashAsBase64()
568 - Declaração do método: org.springframework.security.authentication.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
568 - Declaração do método: org.springframework.security.authentication.encoding.BasePasswordEncoder.demergePasswordAndSalt(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.length()
java.lang.String.length()
java.lang.String.substring(I, I)
java.lang.String.substring(I, I)
569 - Declaração do método: org.springframework.security.authentication.encoding.BasePasswordEncoder.mergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
Métodos invocados: 
java.lang.Object.toString()
java.lang.String.lastIndexOf(java.lang.String)
java.lang.Object.toString()
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.equals(java.lang.Object)
java.lang.Object.toString()
570 - Declaração do método: org.springframework.security.authentication.encoding.PasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
570 - Declaração do método: org.springframework.security.authentication.encoding.PasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
570 - Declaração do método: org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.MessageDigestPasswordEncoder(java.lang.String)
570 - Declaração do método: org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.MessageDigestPasswordEncoder(java.lang.String, Z)
Métodos invocados: 
org.springframework.security.authentication.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.getMessageDigest()
571 - Declaração do método: org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.security.authentication.encoding.BasePasswordEncoder.mergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.getMessageDigest()
java.lang.String.getBytes(java.lang.String)
java.security.MessageDigest.digest([B)
java.security.MessageDigest.digest([B)
org.springframework.security.authentication.encoding.BaseDigestPasswordEncoder.getEncodeHashAsBase64()
org.springframework.security.core.codec.Base64.encode([B)
org.springframework.security.core.codec.Hex.encode([B)
572 - Declaração do método: org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.getMessageDigest()
Métodos invocados: 
java.security.MessageDigest.getInstance(java.lang.String)
573 - Declaração do método: org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
java.lang.String.equals(java.lang.Object)
574 - Declaração do método: org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.getAlgorithm()
574 - Declaração do método: org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.setIterations(I)
Métodos invocados: 
org.springframework.util.Assert.isTrue(Z, java.lang.String)
575 - Declaração do método: org.springframework.security.authentication.encoding.PlaintextPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.security.authentication.encoding.BasePasswordEncoder.mergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
576 - Declaração do método: org.springframework.security.authentication.encoding.PlaintextPasswordEncoder.isIgnorePasswordCase()
576 - Declaração do método: org.springframework.security.authentication.encoding.PlaintextPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.security.authentication.encoding.BasePasswordEncoder.mergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
java.lang.String.equals(java.lang.Object)
java.lang.String.equalsIgnoreCase(java.lang.String)
577 - Declaração do método: org.springframework.security.authentication.encoding.PlaintextPasswordEncoder.obtainPasswordAndSalt(java.lang.String)
Métodos invocados: 
org.springframework.security.authentication.encoding.BasePasswordEncoder.demergePasswordAndSalt(java.lang.String)
578 - Declaração do método: org.springframework.security.authentication.encoding.PlaintextPasswordEncoder.setIgnorePasswordCase(Z)
578 - Declaração do método: org.springframework.security.authentication.encoding.Md5PasswordEncoder.Md5PasswordEncoder()
578 - Declaração do método: org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent.AuthenticationFailureProviderNotFoundEvent(org.springframework.security.core.Authentication, org.springframework.security.core.AuthenticationException)
578 - Declaração do método: org.springframework.security.authentication.event.AbstractAuthenticationEvent.AbstractAuthenticationEvent(org.springframework.security.core.Authentication)
578 - Declaração do método: org.springframework.security.authentication.event.AbstractAuthenticationEvent.getAuthentication()
578 - Declaração do método: org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent.AuthenticationFailureBadCredentialsEvent(org.springframework.security.core.Authentication, org.springframework.security.core.AuthenticationException)
578 - Declaração do método: org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent.AuthenticationFailureExpiredEvent(org.springframework.security.core.Authentication, org.springframework.security.core.AuthenticationException)
578 - Declaração do método: org.springframework.security.authentication.event.InteractiveAuthenticationSuccessEvent.InteractiveAuthenticationSuccessEvent(org.springframework.security.core.Authentication, java.lang.Class)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
579 - Declaração do método: org.springframework.security.authentication.event.InteractiveAuthenticationSuccessEvent.getGeneratedBy()
579 - Declaração do método: org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent.AuthenticationFailureServiceExceptionEvent(org.springframework.security.core.Authentication, org.springframework.security.core.AuthenticationException)
579 - Declaração do método: org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent.AuthenticationFailureProxyUntrustedEvent(org.springframework.security.core.Authentication, org.springframework.security.core.AuthenticationException)
579 - Declaração do método: org.springframework.security.authentication.event.AuthenticationSuccessEvent.AuthenticationSuccessEvent(org.springframework.security.core.Authentication)
579 - Declaração do método: org.springframework.security.authentication.event.AbstractAuthenticationFailureEvent.AbstractAuthenticationFailureEvent(org.springframework.security.core.Authentication, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
580 - Declaração do método: org.springframework.security.authentication.event.AbstractAuthenticationFailureEvent.getException()
580 - Declaração do método: org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent.AuthenticationFailureCredentialsExpiredEvent(org.springframework.security.core.Authentication, org.springframework.security.core.AuthenticationException)
580 - Declaração do método: org.springframework.security.authentication.event.LoggerListener.onApplicationEvent(org.springframework.security.authentication.event.AbstractAuthenticationEvent)
Métodos invocados: 
org.apache.commons.logging.Log.isWarnEnabled()
java.lang.StringBuilder.append(java.lang.String)
java.lang.Object.getClass()
org.springframework.util.ClassUtils.getShortName(java.lang.Class)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
org.springframework.security.authentication.event.AbstractAuthenticationEvent.getAuthentication()
java.security.Principal.getName()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
org.springframework.security.authentication.event.AbstractAuthenticationEvent.getAuthentication()
org.springframework.security.core.Authentication.getDetails()
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
org.springframework.security.authentication.event.AbstractAuthenticationFailureEvent.getException()
java.lang.Throwable.getMessage()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
org.apache.commons.logging.Log.warn(java.lang.Object)
581 - Declaração do método: org.springframework.security.authentication.event.LoggerListener.isLogInteractiveAuthenticationSuccessEvents()
581 - Declaração do método: org.springframework.security.authentication.event.LoggerListener.setLogInteractiveAuthenticationSuccessEvents(Z)
581 - Declaração do método: org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent.AuthenticationFailureDisabledEvent(org.springframework.security.core.Authentication, org.springframework.security.core.AuthenticationException)
581 - Declaração do método: org.springframework.security.authentication.event.AuthenticationFailureLockedEvent.AuthenticationFailureLockedEvent(org.springframework.security.core.Authentication, org.springframework.security.core.AuthenticationException)
581 - Declaração do método: org.springframework.security.authentication.jaas.DefaultLoginExceptionResolver.resolveException(javax.security.auth.login.LoginException)
Métodos invocados: 
java.lang.Throwable.getMessage()
582 - Declaração do método: org.springframework.security.authentication.jaas.JaasGrantedAuthority.JaasGrantedAuthority(java.lang.String, java.security.Principal)
582 - Declaração do método: org.springframework.security.authentication.jaas.JaasGrantedAuthority.getPrincipal()
582 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.afterPropertiesSet()
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.Object.getClass()
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.configureJaas(org.springframework.core.io.Resource)
javax.security.auth.login.Configuration.getConfiguration()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
583 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
Métodos invocados: 
javax.security.auth.login.LoginContext.login()
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
java.util.Set.addAll(java.util.Collection)
javax.security.auth.login.LoginContext.getSubject()
javax.security.auth.Subject.getPrincipals()
org.springframework.security.authentication.jaas.AuthorityGranter.grant(java.security.Principal)
java.util.Set.isEmpty()
java.util.Set.add(org.springframework.security.core.GrantedAuthority)
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getPrincipal()
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getCredentials()
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.publishSuccessEvent(org.springframework.security.authentication.UsernamePasswordAuthenticationToken)
org.springframework.security.authentication.jaas.LoginExceptionResolver.resolveException(javax.security.auth.login.LoginException)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.publishFailureEvent(org.springframework.security.authentication.UsernamePasswordAuthenticationToken, org.springframework.security.core.AuthenticationException)
584 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.configureJaas(org.springframework.core.io.Resource)
Métodos invocados: 
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.configureJaasUsingLoop()
javax.security.auth.login.Configuration.getConfiguration()
javax.security.auth.login.Configuration.refresh()
585 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.configureJaasUsingLoop()
Métodos invocados: 
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.convertLoginConfigToUrl()
java.security.Security.getProperty(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.security.Security.setProperty(java.lang.String, java.lang.String)
586 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.convertLoginConfigToUrl()
Métodos invocados: 
org.springframework.core.io.Resource.getFile()
java.io.File.getAbsolutePath()
java.lang.String.replace(C, C)
java.lang.String.startsWith(java.lang.String)
java.net.URL.toString()
587 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.handleLogout(org.springframework.security.core.session.SessionDestroyedEvent)
Métodos invocados: 
org.springframework.security.core.session.SessionDestroyedEvent.getSecurityContext()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.authentication.jaas.JaasAuthenticationToken.getLoginContext()
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getPrincipal()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.security.auth.login.LoginContext.logout()
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getPrincipal()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.warn(java.lang.Object, java.lang.Throwable)
588 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.onApplicationEvent(org.springframework.security.core.session.SessionDestroyedEvent)
Métodos invocados: 
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.handleLogout(org.springframework.security.core.session.SessionDestroyedEvent)
589 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.publishFailureEvent(org.springframework.security.authentication.UsernamePasswordAuthenticationToken, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
590 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.publishSuccessEvent(org.springframework.security.authentication.UsernamePasswordAuthenticationToken)
Métodos invocados: 
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
591 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getAuthorityGranters()
591 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setAuthorityGranters([Lorg.springframework.security.authentication.jaas.AuthorityGranter;)
591 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getCallbackHandlers()
591 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setCallbackHandlers([Lorg.springframework.security.authentication.jaas.JaasAuthenticationCallbackHandler;)
591 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getLoginConfig()
591 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setLoginConfig(org.springframework.core.io.Resource)
591 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getLoginContextName()
591 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setLoginContextName(java.lang.String)
591 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getLoginExceptionResolver()
591 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setLoginExceptionResolver(org.springframework.security.authentication.jaas.LoginExceptionResolver)
591 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setRefreshConfigurationOnStartup(Z)
591 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
592 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
592 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getApplicationEventPublisher()
592 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider$InternalCallbackHandler.InternalCallbackHandler(org.springframework.security.core.Authentication)
592 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProvider$InternalCallbackHandler.handle([Ljavax.security.auth.callback.Callback;)
Métodos invocados: 
org.springframework.security.authentication.jaas.JaasAuthenticationCallbackHandler.handle(javax.security.auth.callback.Callback, org.springframework.security.core.Authentication)
593 - Declaração do método: org.springframework.security.authentication.jaas.SecurityContextLoginModule.abort()
593 - Declaração do método: org.springframework.security.authentication.jaas.SecurityContextLoginModule.commit()
Métodos invocados: 
javax.security.auth.Subject.getPrincipals()
java.util.Set.add(java.security.Principal)
594 - Declaração do método: org.springframework.security.authentication.jaas.SecurityContextLoginModule.getAuthentication()
594 - Declaração do método: org.springframework.security.authentication.jaas.SecurityContextLoginModule.getSubject()
594 - Declaração do método: org.springframework.security.authentication.jaas.SecurityContextLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
java.lang.String.equals(java.lang.Object)
595 - Declaração do método: org.springframework.security.authentication.jaas.SecurityContextLoginModule.login()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.warn(java.lang.Object)
596 - Declaração do método: org.springframework.security.authentication.jaas.SecurityContextLoginModule.logout()
Métodos invocados: 
javax.security.auth.Subject.getPrincipals()
java.util.Set.remove(java.lang.Object)
597 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationToken.JaasAuthenticationToken(java.lang.Object, java.lang.Object, javax.security.auth.login.LoginContext)
597 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationToken.JaasAuthenticationToken(java.lang.Object, java.lang.Object, java.util.List, javax.security.auth.login.LoginContext)
597 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationToken.getLoginContext()
597 - Declaração do método: org.springframework.security.authentication.jaas.AuthorityGranter.grant(java.security.Principal)
597 - Declaração do método: org.springframework.security.authentication.jaas.LoginExceptionResolver.resolveException(javax.security.auth.login.LoginException)
597 - Declaração do método: org.springframework.security.authentication.jaas.JaasNameCallbackHandler.handle(javax.security.auth.callback.Callback, org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.userdetails.UserDetails.getUsername()
java.lang.Object.toString()
javax.security.auth.callback.NameCallback.setName(java.lang.String)
598 - Declaração do método: org.springframework.security.authentication.jaas.JaasPasswordCallbackHandler.handle(javax.security.auth.callback.Callback, org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.core.Authentication.getCredentials()
java.lang.Object.toString()
java.lang.String.toCharArray()
javax.security.auth.callback.PasswordCallback.setPassword([C)
599 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationCallbackHandler.handle(javax.security.auth.callback.Callback, org.springframework.security.core.Authentication)
599 - Declaração do método: org.springframework.security.authentication.jaas.event.JaasAuthenticationFailedEvent.JaasAuthenticationFailedEvent(org.springframework.security.core.Authentication, java.lang.Exception)
599 - Declaração do método: org.springframework.security.authentication.jaas.event.JaasAuthenticationFailedEvent.getException()
599 - Declaração do método: org.springframework.security.authentication.jaas.event.JaasAuthenticationSuccessEvent.JaasAuthenticationSuccessEvent(org.springframework.security.core.Authentication)
599 - Declaração do método: org.springframework.security.authentication.jaas.event.JaasAuthenticationEvent.JaasAuthenticationEvent(org.springframework.security.core.Authentication)
599 - Declaração do método: org.springframework.security.authentication.jaas.event.JaasAuthenticationEvent.getAuthentication()
599 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationManagerImpl.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
600 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationManagerImpl.attemptAuthentication(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.core.Authentication.getAuthorities()
java.lang.Throwable.getMessage()
601 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationManagerImpl.getAuthenticationManager()
601 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationManagerImpl.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
601 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationManager.attemptAuthentication(java.lang.String, java.lang.String)
601 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
602 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.core.Authentication.getPrincipal()
java.lang.Object.toString()
org.springframework.security.core.Authentication.getCredentials()
java.lang.Object.toString()
org.springframework.security.authentication.rcp.RemoteAuthenticationManager.attemptAuthentication(java.lang.String, java.lang.String)
603 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationProvider.getRemoteAuthenticationManager()
603 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationProvider.setRemoteAuthenticationManager(org.springframework.security.authentication.rcp.RemoteAuthenticationManager)
603 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
604 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationException.RemoteAuthenticationException(java.lang.String)
604 - Declaração do método: org.springframework.security.core.AuthenticationException.AuthenticationException(java.lang.String, java.lang.Throwable)
604 - Declaração do método: org.springframework.security.core.AuthenticationException.AuthenticationException(java.lang.String)
604 - Declaração do método: org.springframework.security.core.AuthenticationException.AuthenticationException(java.lang.String, java.lang.Object)
604 - Declaração do método: org.springframework.security.core.AuthenticationException.getAuthentication()
604 - Declaração do método: org.springframework.security.core.AuthenticationException.setAuthentication(org.springframework.security.core.Authentication)
604 - Declaração do método: org.springframework.security.core.AuthenticationException.getExtraInformation()
604 - Declaração do método: org.springframework.security.core.AuthenticationException.clearExtraInformation()
604 - Declaração do método: org.springframework.security.core.CredentialsContainer.eraseCredentials()
604 - Declaração do método: org.springframework.security.core.Authentication.getAuthorities()
604 - Declaração do método: org.springframework.security.core.Authentication.getCredentials()
604 - Declaração do método: org.springframework.security.core.Authentication.getDetails()
604 - Declaração do método: org.springframework.security.core.Authentication.getPrincipal()
604 - Declaração do método: org.springframework.security.core.Authentication.isAuthenticated()
604 - Declaração do método: org.springframework.security.core.Authentication.setAuthenticated(Z)
604 - Declaração do método: org.springframework.security.core.GrantedAuthority.getAuthority()
604 - Declaração do método: org.springframework.security.core.SpringSecurityMessageSource.SpringSecurityMessageSource()
Métodos invocados: 
org.springframework.context.support.ResourceBundleMessageSource.setBasename(java.lang.String)
605 - Declaração do método: org.springframework.security.core.SpringSecurityMessageSource.getAccessor()
605 - Declaração do método: org.springframework.security.core.authority.MutableGrantedAuthoritiesContainer.setGrantedAuthorities(java.util.List)
605 - Declaração do método: org.springframework.security.core.authority.GrantedAuthoritiesContainerImpl.setGrantedAuthorities(java.util.List)
Métodos invocados: 
java.util.Collections.unmodifiableList(java.util.List)
606 - Declaração do método: org.springframework.security.core.authority.GrantedAuthoritiesContainerImpl.getGrantedAuthorities()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
607 - Declaração do método: org.springframework.security.core.authority.GrantedAuthoritiesContainerImpl.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.toString()
608 - Declaração do método: org.springframework.security.core.authority.GrantedAuthorityImpl.GrantedAuthorityImpl(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
609 - Declaração do método: org.springframework.security.core.authority.GrantedAuthorityImpl.equals(java.lang.Object)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
org.springframework.security.core.GrantedAuthority.getAuthority()
java.lang.String.equals(java.lang.Object)
610 - Declaração do método: org.springframework.security.core.authority.GrantedAuthorityImpl.getAuthority()
610 - Declaração do método: org.springframework.security.core.authority.GrantedAuthorityImpl.hashCode()
Métodos invocados: 
java.lang.String.hashCode()
611 - Declaração do método: org.springframework.security.core.authority.GrantedAuthorityImpl.toString()
611 - Declaração do método: org.springframework.security.core.authority.GrantedAuthoritiesContainer.getGrantedAuthorities()
611 - Declaração do método: org.springframework.security.core.authority.AuthorityUtils.commaSeparatedStringToAuthorityList(java.lang.String)
Métodos invocados: 
org.springframework.util.StringUtils.tokenizeToStringArray(java.lang.String, java.lang.String)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
612 - Declaração do método: org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
Métodos invocados: 
java.util.Collection.size()
org.springframework.security.core.GrantedAuthority.getAuthority()
java.util.Set.add(java.lang.String)
613 - Declaração do método: org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
Métodos invocados: 
java.util.List.add(org.springframework.security.core.GrantedAuthority)
614 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
615 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.getGrantedAuthorities(java.util.Collection)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
java.util.ArrayList.addAll(java.util.Collection)
java.util.ArrayList.trimToSize()
616 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.getAttributes2grantedAuthoritiesMap()
616 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.setAttributes2grantedAuthoritiesMap(java.util.Map)
Métodos invocados: 
org.springframework.util.Assert.notEmpty(java.util.Map, java.lang.String)
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.preProcessMap(java.util.Map)
java.util.Map.keySet()
java.util.Collections.unmodifiableSet(java.util.Set)
617 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.preProcessMap(java.util.Map)
Métodos invocados: 
java.util.Map.size()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.getGrantedAuthorityCollection(java.lang.Object)
java.util.Map.put(java.lang.String, java.util.Collection)
618 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.getGrantedAuthorityCollection(java.lang.Object)
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.addGrantedAuthorityCollection(java.util.Collection, java.lang.Object)
619 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.addGrantedAuthorityCollection(java.util.Collection, java.lang.Object)
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.addGrantedAuthorityCollection(java.util.Collection, java.util.Collection)
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.addGrantedAuthorityCollection(java.util.Collection, [Ljava.lang.Object;)
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.addGrantedAuthorityCollection(java.util.Collection, java.lang.String)
java.util.Collection.add(org.springframework.security.core.GrantedAuthority)
java.lang.Object.getClass()
java.lang.Class.getName()
620 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.addGrantedAuthorityCollection(java.util.Collection, java.util.Collection)
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.addGrantedAuthorityCollection(java.util.Collection, java.lang.Object)
621 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.addGrantedAuthorityCollection(java.util.Collection, [Ljava.lang.Object;)
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.addGrantedAuthorityCollection(java.util.Collection, java.lang.Object)
622 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.addGrantedAuthorityCollection(java.util.Collection, java.lang.String)
Métodos invocados: 
java.util.StringTokenizer.hasMoreTokens()
java.util.StringTokenizer.nextToken()
org.springframework.util.StringUtils.hasText(java.lang.String)
java.util.Collection.add(org.springframework.security.core.GrantedAuthority)
623 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.getMappableAttributes()
623 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.getStringSeparator()
623 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.setStringSeparator(java.lang.String)
623 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleMappableAttributesRetriever.getMappableAttributes()
623 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleMappableAttributesRetriever.setMappableAttributes(java.util.Set)
Métodos invocados: 
java.util.Set.addAll(java.util.Collection)
java.util.Collections.unmodifiableSet(java.util.Set)
624 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.afterPropertiesSet()
Métodos invocados: 
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.isConvertAttributeToUpperCase()
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.isConvertAttributeToLowerCase()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
625 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.getGrantedAuthorities(java.util.Collection)
Métodos invocados: 
java.util.Collection.size()
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.getGrantedAuthority(java.lang.String)
java.util.List.add(org.springframework.security.core.GrantedAuthority)
626 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.getGrantedAuthority(java.lang.String)
Métodos invocados: 
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.isConvertAttributeToLowerCase()
java.util.Locale.getDefault()
java.lang.String.toLowerCase(java.util.Locale)
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.isConvertAttributeToUpperCase()
java.util.Locale.getDefault()
java.lang.String.toUpperCase(java.util.Locale)
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.isAddPrefixIfAlreadyExisting()
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.getAttributePrefix()
java.lang.String.startsWith(java.lang.String)
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.getAttributePrefix()
627 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.isConvertAttributeToLowerCase()
627 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToLowerCase(Z)
627 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.isConvertAttributeToUpperCase()
627 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToUpperCase(Z)
627 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.getAttributePrefix()
627 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setAttributePrefix(java.lang.String)
627 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.isAddPrefixIfAlreadyExisting()
627 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setAddPrefixIfAlreadyExisting(Z)
627 - Declaração do método: org.springframework.security.core.authority.mapping.MappableAttributesRetriever.getMappableAttributes()
627 - Declaração do método: org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper.getGrantedAuthorities(java.util.Collection)
627 - Declaração do método: org.springframework.security.core.codec.Hex.encode([B)
627 - Declaração do método: org.springframework.security.core.codec.Base64.decode([B)
Métodos invocados: 
org.springframework.security.core.codec.Base64.decode([B, I, I, I)
628 - Declaração do método: org.springframework.security.core.codec.Base64.encode([B)
Métodos invocados: 
org.springframework.security.core.codec.Base64.encodeBytesToBytes([B, I, I, I)
629 - Declaração do método: org.springframework.security.core.codec.Base64.isBase64([B)
Métodos invocados: 
org.springframework.security.core.codec.Base64.decode([B)
630 - Declaração do método: org.springframework.security.core.codec.Base64.getAlphabet(I)
630 - Declaração do método: org.springframework.security.core.codec.Base64.getDecodabet(I)
630 - Declaração do método: org.springframework.security.core.codec.Base64.encode3to4([B, I, I, [B, I, I)
Métodos invocados: 
org.springframework.security.core.codec.Base64.getAlphabet(I)
631 - Declaração do método: org.springframework.security.core.codec.Base64.encodeBytesToBytes([B, I, I, I)
Métodos invocados: 
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.springframework.security.core.codec.Base64.encode3to4([B, I, I, [B, I, I)
org.springframework.security.core.codec.Base64.encode3to4([B, I, I, [B, I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
632 - Declaração do método: org.springframework.security.core.codec.Base64.decode4to3([B, I, [B, I, I)
Métodos invocados: 
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.springframework.security.core.codec.Base64.getDecodabet(I)
633 - Declaração do método: org.springframework.security.core.codec.Base64.decode([B, I, I, I)
Métodos invocados: 
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.springframework.security.core.codec.Base64.getDecodabet(I)
org.springframework.security.core.codec.Base64.decode4to3([B, I, [B, I, I)
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
634 - Declaração do método: org.springframework.security.core.codec.InvalidBase64CharacterException.InvalidBase64CharacterException(java.lang.String)
634 - Declaração do método: org.springframework.security.core.context.ThreadLocalSecurityContextHolderStrategy.clearContext()
Métodos invocados: 
java.lang.ThreadLocal.set(org.springframework.security.core.context.SecurityContext)
635 - Declaração do método: org.springframework.security.core.context.ThreadLocalSecurityContextHolderStrategy.getContext()
Métodos invocados: 
java.lang.ThreadLocal.get()
org.springframework.security.core.context.ThreadLocalSecurityContextHolderStrategy.createEmptyContext()
java.lang.ThreadLocal.set(org.springframework.security.core.context.SecurityContext)
636 - Declaração do método: org.springframework.security.core.context.ThreadLocalSecurityContextHolderStrategy.setContext(org.springframework.security.core.context.SecurityContext)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.ThreadLocal.set(org.springframework.security.core.context.SecurityContext)
637 - Declaração do método: org.springframework.security.core.context.ThreadLocalSecurityContextHolderStrategy.createEmptyContext()
637 - Declaração do método: org.springframework.security.core.context.SecurityContextImpl.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextImpl.getAuthentication()
org.springframework.security.core.context.SecurityContextImpl.getAuthentication()
org.springframework.security.core.context.SecurityContextImpl.getAuthentication()
org.springframework.security.core.context.SecurityContextImpl.getAuthentication()
org.springframework.security.core.context.SecurityContextImpl.getAuthentication()
org.springframework.security.core.context.SecurityContextImpl.getAuthentication()
java.security.Principal.equals(java.lang.Object)
638 - Declaração do método: org.springframework.security.core.context.SecurityContextImpl.getAuthentication()
638 - Declaração do método: org.springframework.security.core.context.SecurityContextImpl.hashCode()
Métodos invocados: 
java.security.Principal.hashCode()
639 - Declaração do método: org.springframework.security.core.context.SecurityContextImpl.setAuthentication(org.springframework.security.core.Authentication)
639 - Declaração do método: org.springframework.security.core.context.SecurityContextImpl.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.toString()
640 - Declaração do método: org.springframework.security.core.context.SecurityContextHolderStrategy.clearContext()
640 - Declaração do método: org.springframework.security.core.context.SecurityContextHolderStrategy.getContext()
640 - Declaração do método: org.springframework.security.core.context.SecurityContextHolderStrategy.setContext(org.springframework.security.core.context.SecurityContext)
640 - Declaração do método: org.springframework.security.core.context.SecurityContextHolderStrategy.createEmptyContext()
640 - Declaração do método: org.springframework.security.core.context.SecurityContextHolder.clearContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolderStrategy.clearContext()
641 - Declaração do método: org.springframework.security.core.context.SecurityContextHolder.getContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolderStrategy.getContext()
642 - Declaração do método: org.springframework.security.core.context.SecurityContextHolder.getInitializeCount()
642 - Declaração do método: org.springframework.security.core.context.SecurityContextHolder.initialize()
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.Class.forName(java.lang.String)
java.lang.Class.getConstructor([Ljava.lang.Class;)
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
643 - Declaração do método: org.springframework.security.core.context.SecurityContextHolder.setContext(org.springframework.security.core.context.SecurityContext)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolderStrategy.setContext(org.springframework.security.core.context.SecurityContext)
644 - Declaração do método: org.springframework.security.core.context.SecurityContextHolder.setStrategyName(java.lang.String)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.initialize()
645 - Declaração do método: org.springframework.security.core.context.SecurityContextHolder.getContextHolderStrategy()
645 - Declaração do método: org.springframework.security.core.context.SecurityContextHolder.createEmptyContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolderStrategy.createEmptyContext()
646 - Declaração do método: org.springframework.security.core.context.SecurityContextHolder.toString()
646 - Declaração do método: org.springframework.security.core.context.InheritableThreadLocalSecurityContextHolderStrategy.clearContext()
Métodos invocados: 
java.lang.ThreadLocal.set(org.springframework.security.core.context.SecurityContext)
647 - Declaração do método: org.springframework.security.core.context.InheritableThreadLocalSecurityContextHolderStrategy.getContext()
Métodos invocados: 
java.lang.ThreadLocal.get()
org.springframework.security.core.context.InheritableThreadLocalSecurityContextHolderStrategy.createEmptyContext()
java.lang.ThreadLocal.set(org.springframework.security.core.context.SecurityContext)
648 - Declaração do método: org.springframework.security.core.context.InheritableThreadLocalSecurityContextHolderStrategy.setContext(org.springframework.security.core.context.SecurityContext)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.ThreadLocal.set(org.springframework.security.core.context.SecurityContext)
649 - Declaração do método: org.springframework.security.core.context.InheritableThreadLocalSecurityContextHolderStrategy.createEmptyContext()
649 - Declaração do método: org.springframework.security.core.context.GlobalSecurityContextHolderStrategy.clearContext()
649 - Declaração do método: org.springframework.security.core.context.GlobalSecurityContextHolderStrategy.getContext()
649 - Declaração do método: org.springframework.security.core.context.GlobalSecurityContextHolderStrategy.setContext(org.springframework.security.core.context.SecurityContext)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
650 - Declaração do método: org.springframework.security.core.context.GlobalSecurityContextHolderStrategy.createEmptyContext()
650 - Declaração do método: org.springframework.security.core.context.SecurityContext.getAuthentication()
650 - Declaração do método: org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
650 - Declaração do método: org.springframework.security.core.session.SessionInformation.SessionInformation(java.lang.Object, java.lang.String, java.util.Date)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
651 - Declaração do método: org.springframework.security.core.session.SessionInformation.expireNow()
651 - Declaração do método: org.springframework.security.core.session.SessionInformation.getLastRequest()
651 - Declaração do método: org.springframework.security.core.session.SessionInformation.getPrincipal()
651 - Declaração do método: org.springframework.security.core.session.SessionInformation.getSessionId()
651 - Declaração do método: org.springframework.security.core.session.SessionInformation.isExpired()
651 - Declaração do método: org.springframework.security.core.session.SessionInformation.refreshLastRequest()
651 - Declaração do método: org.springframework.security.core.session.SessionIdentifierAware.getSessionId()
651 - Declaração do método: org.springframework.security.core.session.SessionCreationEvent.SessionCreationEvent(java.lang.Object)
651 - Declaração do método: org.springframework.security.core.session.SessionRegistryImpl.getAllPrincipals()
Métodos invocados: 
java.util.Map.keySet()
java.util.Set.toArray()
java.util.Arrays.asList([Ljava.lang.Object;)
652 - Declaração do método: org.springframework.security.core.session.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
java.util.Collections.emptyList()
java.util.Set.size()
org.springframework.security.core.session.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.core.session.SessionInformation.isExpired()
java.util.List.add(org.springframework.security.core.session.SessionInformation)
653 - Declaração do método: org.springframework.security.core.session.SessionRegistryImpl.getSessionInformation(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
654 - Declaração do método: org.springframework.security.core.session.SessionRegistryImpl.onApplicationEvent(org.springframework.security.core.session.SessionDestroyedEvent)
Métodos invocados: 
org.springframework.security.core.session.SessionDestroyedEvent.getId()
org.springframework.security.core.session.SessionRegistryImpl.removeSessionInformation(java.lang.String)
655 - Declaração do método: org.springframework.security.core.session.SessionRegistryImpl.refreshLastRequest(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.security.core.session.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.core.session.SessionInformation.refreshLastRequest()
656 - Declaração do método: org.springframework.security.core.session.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.session.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.core.session.SessionRegistryImpl.removeSessionInformation(java.lang.String)
java.util.Map.put(java.lang.String, org.springframework.security.core.session.SessionInformation)
java.util.Map.get(java.lang.Object)
java.util.Collections.synchronizedSet(java.util.Set)
java.util.Map.put(java.lang.Object, java.util.Set)
java.util.Set.add(java.lang.String)
org.apache.commons.logging.Log.isTraceEnabled()
org.apache.commons.logging.Log.trace(java.lang.Object)
657 - Declaração do método: org.springframework.security.core.session.SessionRegistryImpl.removeSessionInformation(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.security.core.session.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.apache.commons.logging.Log.isTraceEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Map.remove(java.lang.Object)
org.springframework.security.core.session.SessionInformation.getPrincipal()
java.util.Map.get(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Set.remove(java.lang.Object)
java.util.Set.size()
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.core.session.SessionInformation.getPrincipal()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.session.SessionInformation.getPrincipal()
java.util.Map.remove(java.lang.Object)
org.apache.commons.logging.Log.isTraceEnabled()
org.springframework.security.core.session.SessionInformation.getPrincipal()
org.apache.commons.logging.Log.trace(java.lang.Object)
658 - Declaração do método: org.springframework.security.core.session.SessionRegistry.getAllPrincipals()
658 - Declaração do método: org.springframework.security.core.session.SessionRegistry.getAllSessions(java.lang.Object, Z)
658 - Declaração do método: org.springframework.security.core.session.SessionRegistry.getSessionInformation(java.lang.String)
658 - Declaração do método: org.springframework.security.core.session.SessionRegistry.refreshLastRequest(java.lang.String)
658 - Declaração do método: org.springframework.security.core.session.SessionRegistry.registerNewSession(java.lang.String, java.lang.Object)
658 - Declaração do método: org.springframework.security.core.session.SessionRegistry.removeSessionInformation(java.lang.String)
658 - Declaração do método: org.springframework.security.core.session.SessionDestroyedEvent.SessionDestroyedEvent(java.lang.Object)
658 - Declaração do método: org.springframework.security.core.session.SessionDestroyedEvent.getSecurityContext()
658 - Declaração do método: org.springframework.security.core.session.SessionDestroyedEvent.getId()
658 - Declaração do método: org.springframework.security.core.token.Sha512DigestUtils.getDigest(java.lang.String)
Métodos invocados: 
java.security.MessageDigest.getInstance(java.lang.String)
java.lang.Throwable.getMessage()
659 - Declaração do método: org.springframework.security.core.token.Sha512DigestUtils.getSha512Digest()
Métodos invocados: 
org.springframework.security.core.token.Sha512DigestUtils.getDigest(java.lang.String)
660 - Declaração do método: org.springframework.security.core.token.Sha512DigestUtils.sha([B)
Métodos invocados: 
org.springframework.security.core.token.Sha512DigestUtils.getSha512Digest()
java.security.MessageDigest.digest([B)
661 - Declaração do método: org.springframework.security.core.token.Sha512DigestUtils.sha(java.lang.String)
Métodos invocados: 
java.lang.String.getBytes()
org.springframework.security.core.token.Sha512DigestUtils.sha([B)
662 - Declaração do método: org.springframework.security.core.token.Sha512DigestUtils.shaHex([B)
Métodos invocados: 
org.springframework.security.core.token.Sha512DigestUtils.sha([B)
org.springframework.security.core.codec.Hex.encode([B)
663 - Declaração do método: org.springframework.security.core.token.Sha512DigestUtils.shaHex(java.lang.String)
Métodos invocados: 
org.springframework.security.core.token.Sha512DigestUtils.sha(java.lang.String)
org.springframework.security.core.codec.Hex.encode([B)
664 - Declaração do método: org.springframework.security.core.token.DefaultToken.DefaultToken(java.lang.String, J, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
665 - Declaração do método: org.springframework.security.core.token.DefaultToken.getKey()
665 - Declaração do método: org.springframework.security.core.token.DefaultToken.getKeyCreationTime()
665 - Declaração do método: org.springframework.security.core.token.DefaultToken.getExtendedInformation()
665 - Declaração do método: org.springframework.security.core.token.DefaultToken.equals(java.lang.Object)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
666 - Declaração do método: org.springframework.security.core.token.DefaultToken.hashCode()
Métodos invocados: 
java.lang.String.hashCode()
java.lang.Long.hashCode()
java.lang.String.hashCode()
667 - Declaração do método: org.springframework.security.core.token.DefaultToken.toString()
667 - Declaração do método: org.springframework.security.core.token.KeyBasedPersistenceTokenService.allocateToken(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.Date.getTime()
org.springframework.security.core.token.KeyBasedPersistenceTokenService.computeServerSecretApplicableAt(J)
org.springframework.security.core.token.KeyBasedPersistenceTokenService.generatePseudoRandomNumber()
java.lang.Long.toString()
org.springframework.security.core.token.Sha512DigestUtils.shaHex(java.lang.String)
org.springframework.security.core.token.KeyBasedPersistenceTokenService.convertToBytes(java.lang.String)
org.springframework.security.core.codec.Base64.encode([B)
org.springframework.security.core.token.KeyBasedPersistenceTokenService.convertToString([B)
668 - Declaração do método: org.springframework.security.core.token.KeyBasedPersistenceTokenService.verifyToken(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
org.springframework.security.core.token.KeyBasedPersistenceTokenService.convertToBytes(java.lang.String)
org.springframework.security.core.codec.Base64.decode([B)
org.springframework.security.core.token.KeyBasedPersistenceTokenService.convertToString([B)
org.springframework.util.StringUtils.delimitedListToStringArray(java.lang.String, java.lang.String)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
java.lang.Long.decode(java.lang.String)
java.lang.Long.longValue()
org.springframework.security.core.token.KeyBasedPersistenceTokenService.computeServerSecretApplicableAt(J)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.Long.toString()
java.lang.StringBuilder.toString()
org.springframework.security.core.token.Sha512DigestUtils.shaHex(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
java.lang.StringBuilder.toString()
669 - Declaração do método: org.springframework.security.core.token.KeyBasedPersistenceTokenService.convertToBytes(java.lang.String)
Métodos invocados: 
java.lang.String.getBytes(java.lang.String)
670 - Declaração do método: org.springframework.security.core.token.KeyBasedPersistenceTokenService.convertToString([B)
670 - Declaração do método: org.springframework.security.core.token.KeyBasedPersistenceTokenService.generatePseudoRandomNumber()
Métodos invocados: 
java.security.SecureRandom.nextBytes([B)
org.springframework.security.core.codec.Hex.encode([B)
671 - Declaração do método: org.springframework.security.core.token.KeyBasedPersistenceTokenService.computeServerSecretApplicableAt(J)
Métodos invocados: 
java.lang.Integer.intValue()
java.lang.Long.intValue()
672 - Declaração do método: org.springframework.security.core.token.KeyBasedPersistenceTokenService.setServerSecret(java.lang.String)
672 - Declaração do método: org.springframework.security.core.token.KeyBasedPersistenceTokenService.setSecureRandom(java.security.SecureRandom)
672 - Declaração do método: org.springframework.security.core.token.KeyBasedPersistenceTokenService.setPseudoRandomNumberBits(I)
Métodos invocados: 
org.springframework.util.Assert.isTrue(Z, java.lang.String)
673 - Declaração do método: org.springframework.security.core.token.KeyBasedPersistenceTokenService.setServerInteger(java.lang.Integer)
673 - Declaração do método: org.springframework.security.core.token.KeyBasedPersistenceTokenService.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
674 - Declaração do método: org.springframework.security.core.token.TokenService.allocateToken(java.lang.String)
674 - Declaração do método: org.springframework.security.core.token.TokenService.verifyToken(java.lang.String)
674 - Declaração do método: org.springframework.security.core.token.SecureRandomFactoryBean.getObject()
Métodos invocados: 
java.security.SecureRandom.getInstance(java.lang.String)
org.springframework.core.io.InputStreamSource.getInputStream()
org.springframework.util.FileCopyUtils.copyToByteArray(java.io.InputStream)
java.security.SecureRandom.setSeed([B)
java.security.SecureRandom.nextBytes([B)
675 - Declaração do método: org.springframework.security.core.token.SecureRandomFactoryBean.getObjectType()
675 - Declaração do método: org.springframework.security.core.token.SecureRandomFactoryBean.isSingleton()
675 - Declaração do método: org.springframework.security.core.token.SecureRandomFactoryBean.setAlgorithm(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
676 - Declaração do método: org.springframework.security.core.token.SecureRandomFactoryBean.setSeed(org.springframework.core.io.Resource)
676 - Declaração do método: org.springframework.security.core.token.Token.getKey()
676 - Declaração do método: org.springframework.security.core.token.Token.getKeyCreationTime()
676 - Declaração do método: org.springframework.security.core.token.Token.getExtendedInformation()
676 - Declaração do método: org.springframework.security.core.userdetails.UserCache.getUserFromCache(java.lang.String)
676 - Declaração do método: org.springframework.security.core.userdetails.UserCache.putUserInCache(org.springframework.security.core.userdetails.UserDetails)
676 - Declaração do método: org.springframework.security.core.userdetails.UserCache.removeUserFromCache(java.lang.String)
676 - Declaração do método: org.springframework.security.core.userdetails.UserDetails.getAuthorities()
676 - Declaração do método: org.springframework.security.core.userdetails.UserDetails.getPassword()
676 - Declaração do método: org.springframework.security.core.userdetails.UserDetails.getUsername()
676 - Declaração do método: org.springframework.security.core.userdetails.UserDetails.isAccountNonExpired()
676 - Declaração do método: org.springframework.security.core.userdetails.UserDetails.isAccountNonLocked()
676 - Declaração do método: org.springframework.security.core.userdetails.UserDetails.isCredentialsNonExpired()
676 - Declaração do método: org.springframework.security.core.userdetails.UserDetails.isEnabled()
676 - Declaração do método: org.springframework.security.core.userdetails.AuthenticationUserDetailsService.loadUserDetails(org.springframework.security.core.userdetails.AuthenticationUserDetailsService$T)
676 - Declaração do método: org.springframework.security.core.userdetails.UserDetailsChecker.check(org.springframework.security.core.userdetails.UserDetails)
676 - Declaração do método: org.springframework.security.core.userdetails.UsernameNotFoundException.UsernameNotFoundException(java.lang.String)
676 - Declaração do método: org.springframework.security.core.userdetails.UsernameNotFoundException.UsernameNotFoundException(java.lang.String, java.lang.Object)
676 - Declaração do método: org.springframework.security.core.userdetails.UsernameNotFoundException.UsernameNotFoundException(java.lang.String, java.lang.Throwable)
676 - Declaração do método: org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper.UserDetailsByNameServiceWrapper()
676 - Declaração do método: org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper.UserDetailsByNameServiceWrapper(org.springframework.security.core.userdetails.UserDetailsService)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
677 - Declaração do método: org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
678 - Declaração do método: org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper.loadUserDetails(org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper$T)
Métodos invocados: 
java.security.Principal.getName()
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
679 - Declaração do método: org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
679 - Declaração do método: org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
679 - Declaração do método: org.springframework.security.core.userdetails.User.User(java.lang.String, java.lang.String, java.util.Collection)
679 - Declaração do método: org.springframework.security.core.userdetails.User.User(java.lang.String, java.lang.String, Z, Z, Z, Z, java.util.Collection)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
org.springframework.security.core.userdetails.User.sortAuthorities(java.util.Collection)
java.util.Collections.unmodifiableSet(java.util.Set)
680 - Declaração do método: org.springframework.security.core.userdetails.User.getAuthorities()
680 - Declaração do método: org.springframework.security.core.userdetails.User.getPassword()
680 - Declaração do método: org.springframework.security.core.userdetails.User.getUsername()
680 - Declaração do método: org.springframework.security.core.userdetails.User.isEnabled()
680 - Declaração do método: org.springframework.security.core.userdetails.User.isAccountNonExpired()
680 - Declaração do método: org.springframework.security.core.userdetails.User.isAccountNonLocked()
680 - Declaração do método: org.springframework.security.core.userdetails.User.isCredentialsNonExpired()
680 - Declaração do método: org.springframework.security.core.userdetails.User.eraseCredentials()
680 - Declaração do método: org.springframework.security.core.userdetails.User.sortAuthorities(java.util.Collection)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.Set.add(org.springframework.security.core.GrantedAuthority)
681 - Declaração do método: org.springframework.security.core.userdetails.User$AuthorityComparator.compare(org.springframework.security.core.GrantedAuthority, org.springframework.security.core.GrantedAuthority)
Métodos invocados: 
org.springframework.security.core.GrantedAuthority.getAuthority()
org.springframework.security.core.GrantedAuthority.getAuthority()
org.springframework.security.core.GrantedAuthority.getAuthority()
org.springframework.security.core.GrantedAuthority.getAuthority()
java.lang.String.compareTo(java.lang.String)
682 - Declaração do método: org.springframework.security.core.userdetails.User.equals(java.lang.Object)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
683 - Declaração do método: org.springframework.security.core.userdetails.User.hashCode()
Métodos invocados: 
java.lang.String.hashCode()
684 - Declaração do método: org.springframework.security.core.userdetails.User.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(Z)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(Z)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(Z)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(Z)
java.lang.StringBuilder.append(java.lang.String)
java.util.Set.isEmpty()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
685 - Declaração do método: org.springframework.security.core.userdetails.cache.NullUserCache.getUserFromCache(java.lang.String)
685 - Declaração do método: org.springframework.security.core.userdetails.cache.NullUserCache.putUserInCache(org.springframework.security.core.userdetails.UserDetails)
685 - Declaração do método: org.springframework.security.core.userdetails.cache.NullUserCache.removeUserFromCache(java.lang.String)
685 - Declaração do método: org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
686 - Declaração do método: org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache.getCache()
686 - Declaração do método: org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache.getUserFromCache(java.lang.String)
Métodos invocados: 
net.sf.ehcache.Ehcache.get(java.io.Serializable)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
net.sf.ehcache.Element.getValue()
687 - Declaração do método: org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache.putUserInCache(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.apache.commons.logging.Log.isDebugEnabled()
net.sf.ehcache.Element.getKey()
org.apache.commons.logging.Log.debug(java.lang.Object)
net.sf.ehcache.Ehcache.put(net.sf.ehcache.Element)
688 - Declaração do método: org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache.removeUserFromCache(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache.removeUserFromCache(java.lang.String)
689 - Declaração do método: org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache.removeUserFromCache(java.lang.String)
Métodos invocados: 
net.sf.ehcache.Ehcache.remove(java.io.Serializable)
690 - Declaração do método: org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache.setCache(net.sf.ehcache.Ehcache)
690 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.JdbcDaoImpl()
690 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.addCustomAuthorities(java.lang.String, java.util.List)
690 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.getUsersByUsernameQuery()
690 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.initDao()
Métodos invocados: 
org.springframework.util.Assert.isTrue(Z, java.lang.String)
691 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
Métodos invocados: 
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUsersByUsername(java.lang.String)
java.util.List.size()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
java.util.List.get(I)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserAuthorities(java.lang.String)
java.util.Set.addAll(java.util.Collection)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadGroupAuthorities(java.lang.String)
java.util.Set.addAll(java.util.Collection)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.addCustomAuthorities(java.lang.String, java.util.List)
java.util.List.size()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.createUserDetails(java.lang.String, org.springframework.security.core.userdetails.UserDetails, java.util.List)
692 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUsersByUsername(java.lang.String)
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, [Ljava.lang.Object;, org.springframework.jdbc.core.RowMapper)
java.sql.ResultSet.getString(I)
java.sql.ResultSet.getString(I)
java.sql.ResultSet.getBoolean(I)
693 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl$1.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getString(I)
java.sql.ResultSet.getString(I)
java.sql.ResultSet.getBoolean(I)
694 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserAuthorities(java.lang.String)
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, [Ljava.lang.Object;, org.springframework.jdbc.core.RowMapper)
java.sql.ResultSet.getString(I)
695 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl$2.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getString(I)
696 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadGroupAuthorities(java.lang.String)
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, [Ljava.lang.Object;, org.springframework.jdbc.core.RowMapper)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.getRolePrefix()
java.sql.ResultSet.getString(I)
697 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl$3.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.getRolePrefix()
java.sql.ResultSet.getString(I)
698 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.createUserDetails(java.lang.String, org.springframework.security.core.userdetails.UserDetails, java.util.List)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.springframework.security.core.userdetails.UserDetails.isEnabled()
699 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.setAuthoritiesByUsernameQuery(java.lang.String)
699 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.getAuthoritiesByUsernameQuery()
699 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.setGroupAuthoritiesByUsernameQuery(java.lang.String)
699 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.setRolePrefix(java.lang.String)
699 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.getRolePrefix()
699 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.setUsernameBasedPrimaryKey(Z)
699 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.isUsernameBasedPrimaryKey()
699 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.setUsersByUsernameQuery(java.lang.String)
699 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.getEnableAuthorities()
699 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.setEnableAuthorities(Z)
699 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.getEnableGroups()
699 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.setEnableGroups(Z)
699 - Declaração do método: org.springframework.security.core.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
Métodos invocados: 
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
java.lang.String.trim()
org.springframework.security.core.userdetails.memory.UserAttribute.setPassword(java.lang.String)
java.lang.String.toLowerCase()
java.lang.String.equals(java.lang.Object)
org.springframework.security.core.userdetails.memory.UserAttribute.setEnabled(Z)
java.lang.String.toLowerCase()
java.lang.String.equals(java.lang.Object)
org.springframework.security.core.userdetails.memory.UserAttribute.setEnabled(Z)
java.util.List.add(java.lang.String)
org.springframework.security.core.userdetails.memory.UserAttribute.setAuthoritiesAsString(java.util.List)
org.springframework.security.core.userdetails.memory.UserAttribute.isValid()
java.beans.PropertyEditorSupport.setValue(java.lang.Object)
java.beans.PropertyEditorSupport.setValue(java.lang.Object)
java.beans.PropertyEditorSupport.setValue(java.lang.Object)
700 - Declaração do método: org.springframework.security.core.userdetails.memory.UserAttribute.addAuthority(org.springframework.security.core.GrantedAuthority)
Métodos invocados: 
java.util.List.add(org.springframework.security.core.GrantedAuthority)
701 - Declaração do método: org.springframework.security.core.userdetails.memory.UserAttribute.getAuthorities()
701 - Declaração do método: org.springframework.security.core.userdetails.memory.UserAttribute.setAuthorities(java.util.List)
701 - Declaração do método: org.springframework.security.core.userdetails.memory.UserAttribute.setAuthoritiesAsString(java.util.List)
Métodos invocados: 
java.util.List.size()
org.springframework.security.core.userdetails.memory.UserAttribute.setAuthorities(java.util.List)
org.springframework.security.core.userdetails.memory.UserAttribute.addAuthority(org.springframework.security.core.GrantedAuthority)
702 - Declaração do método: org.springframework.security.core.userdetails.memory.UserAttribute.getPassword()
702 - Declaração do método: org.springframework.security.core.userdetails.memory.UserAttribute.isEnabled()
702 - Declaração do método: org.springframework.security.core.userdetails.memory.UserAttribute.isValid()
Métodos invocados: 
java.util.List.size()
703 - Declaração do método: org.springframework.security.core.userdetails.memory.UserAttribute.setEnabled(Z)
703 - Declaração do método: org.springframework.security.core.userdetails.memory.UserAttribute.setPassword(java.lang.String)
703 - Declaração do método: org.springframework.security.core.userdetails.memory.UserMapEditor.addUsersFromProperties(org.springframework.security.core.userdetails.memory.UserMap, java.util.Properties)
Métodos invocados: 
java.util.Hashtable.keySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Properties.getProperty(java.lang.String)
org.springframework.security.core.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.core.userdetails.memory.UserAttribute.getPassword()
org.springframework.security.core.userdetails.memory.UserAttribute.isEnabled()
org.springframework.security.core.userdetails.memory.UserAttribute.getAuthorities()
org.springframework.security.core.userdetails.memory.UserMap.addUser(org.springframework.security.core.userdetails.UserDetails)
704 - Declaração do método: org.springframework.security.core.userdetails.memory.UserMapEditor.setAsText(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
org.springframework.beans.propertyeditors.PropertiesEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.core.userdetails.memory.UserMapEditor.addUsersFromProperties(org.springframework.security.core.userdetails.memory.UserMap, java.util.Properties)
java.beans.PropertyEditorSupport.setValue(java.lang.Object)
705 - Declaração do método: org.springframework.security.core.userdetails.memory.UserMap.addUser(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.security.core.userdetails.UserDetails.getUsername()
java.lang.String.toLowerCase()
java.util.Map.put(java.lang.String, org.springframework.security.core.userdetails.UserDetails)
706 - Declaração do método: org.springframework.security.core.userdetails.memory.UserMap.getUser(java.lang.String)
Métodos invocados: 
java.lang.String.toLowerCase()
java.util.Map.get(java.lang.Object)
707 - Declaração do método: org.springframework.security.core.userdetails.memory.UserMap.getUserCount()
Métodos invocados: 
java.util.Map.size()
708 - Declaração do método: org.springframework.security.core.userdetails.memory.UserMap.setUsers(java.util.Map)
Métodos invocados: 
java.util.Map.clear()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.lang.String.toLowerCase()
java.util.Map$Entry.getValue()
java.util.Map.put(java.lang.String, org.springframework.security.core.userdetails.UserDetails)
709 - Declaração do método: org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
710 - Declaração do método: org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.getUserMap()
710 - Declaração do método: org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.loadUserByUsername(java.lang.String)
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserMap.getUser(java.lang.String)
711 - Declaração do método: org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.setUserMap(org.springframework.security.core.userdetails.memory.UserMap)
711 - Declaração do método: org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.setUserProperties(java.util.Properties)
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserMapEditor.addUsersFromProperties(org.springframework.security.core.userdetails.memory.UserMap, java.util.Properties)
712 - Declaração do método: org.springframework.security.provisioning.GroupManager.findAllGroups()
712 - Declaração do método: org.springframework.security.provisioning.GroupManager.findUsersInGroup(java.lang.String)
712 - Declaração do método: org.springframework.security.provisioning.GroupManager.createGroup(java.lang.String, java.util.List)
712 - Declaração do método: org.springframework.security.provisioning.GroupManager.deleteGroup(java.lang.String)
712 - Declaração do método: org.springframework.security.provisioning.GroupManager.renameGroup(java.lang.String, java.lang.String)
712 - Declaração do método: org.springframework.security.provisioning.GroupManager.addUserToGroup(java.lang.String, java.lang.String)
712 - Declaração do método: org.springframework.security.provisioning.GroupManager.removeUserFromGroup(java.lang.String, java.lang.String)
712 - Declaração do método: org.springframework.security.provisioning.GroupManager.findGroupAuthorities(java.lang.String)
712 - Declaração do método: org.springframework.security.provisioning.GroupManager.addGroupAuthority(java.lang.String, org.springframework.security.core.GrantedAuthority)
712 - Declaração do método: org.springframework.security.provisioning.GroupManager.removeGroupAuthority(java.lang.String, org.springframework.security.core.GrantedAuthority)
712 - Declaração do método: org.springframework.security.provisioning.InMemoryUserDetailsManager.InMemoryUserDetailsManager(java.util.Collection)
Métodos invocados: 
org.springframework.security.provisioning.InMemoryUserDetailsManager.createUser(org.springframework.security.core.userdetails.UserDetails)
713 - Declaração do método: org.springframework.security.provisioning.InMemoryUserDetailsManager.InMemoryUserDetailsManager(java.util.Properties)
Métodos invocados: 
java.util.Properties.propertyNames()
java.util.Enumeration.hasMoreElements()
java.util.Enumeration.nextElement()
java.util.Properties.getProperty(java.lang.String)
org.springframework.security.core.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.core.userdetails.memory.UserAttribute.getPassword()
org.springframework.security.core.userdetails.memory.UserAttribute.isEnabled()
org.springframework.security.core.userdetails.memory.UserAttribute.getAuthorities()
org.springframework.security.provisioning.InMemoryUserDetailsManager.createUser(org.springframework.security.core.userdetails.UserDetails)
714 - Declaração do método: org.springframework.security.provisioning.InMemoryUserDetailsManager.createUser(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.provisioning.InMemoryUserDetailsManager.userExists(java.lang.String)
org.springframework.util.Assert.isTrue(Z)
org.springframework.security.core.userdetails.UserDetails.getUsername()
java.lang.String.toLowerCase()
java.util.Map.put(java.lang.String, org.springframework.security.provisioning.MutableUserDetails)
715 - Declaração do método: org.springframework.security.provisioning.InMemoryUserDetailsManager.deleteUser(java.lang.String)
Métodos invocados: 
java.lang.String.toLowerCase()
java.util.Map.remove(java.lang.Object)
716 - Declaração do método: org.springframework.security.provisioning.InMemoryUserDetailsManager.updateUser(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.provisioning.InMemoryUserDetailsManager.userExists(java.lang.String)
org.springframework.util.Assert.isTrue(Z)
org.springframework.security.core.userdetails.UserDetails.getUsername()
java.lang.String.toLowerCase()
java.util.Map.put(java.lang.String, org.springframework.security.provisioning.MutableUserDetails)
717 - Declaração do método: org.springframework.security.provisioning.InMemoryUserDetailsManager.userExists(java.lang.String)
Métodos invocados: 
java.lang.String.toLowerCase()
java.util.Map.containsKey(java.lang.Object)
718 - Declaração do método: org.springframework.security.provisioning.InMemoryUserDetailsManager.changePassword(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
java.security.Principal.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Map.get(java.lang.Object)
org.springframework.security.provisioning.MutableUserDetails.setPassword(java.lang.String)
719 - Declaração do método: org.springframework.security.provisioning.InMemoryUserDetailsManager.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.toLowerCase()
java.util.Map.get(java.lang.Object)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.springframework.security.core.userdetails.UserDetails.isEnabled()
org.springframework.security.core.userdetails.UserDetails.isAccountNonExpired()
org.springframework.security.core.userdetails.UserDetails.isCredentialsNonExpired()
org.springframework.security.core.userdetails.UserDetails.isAccountNonLocked()
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
720 - Declaração do método: org.springframework.security.provisioning.MutableUser.MutableUser(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getPassword()
721 - Declaração do método: org.springframework.security.provisioning.MutableUser.getPassword()
721 - Declaração do método: org.springframework.security.provisioning.MutableUser.setPassword(java.lang.String)
721 - Declaração do método: org.springframework.security.provisioning.MutableUser.getAuthorities()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
722 - Declaração do método: org.springframework.security.provisioning.MutableUser.getUsername()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getUsername()
723 - Declaração do método: org.springframework.security.provisioning.MutableUser.isAccountNonExpired()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.isAccountNonExpired()
724 - Declaração do método: org.springframework.security.provisioning.MutableUser.isAccountNonLocked()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.isAccountNonLocked()
725 - Declaração do método: org.springframework.security.provisioning.MutableUser.isCredentialsNonExpired()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.isCredentialsNonExpired()
726 - Declaração do método: org.springframework.security.provisioning.MutableUser.isEnabled()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.isEnabled()
727 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.initDao()
Métodos invocados: 
org.apache.commons.logging.Log.info(java.lang.Object)
728 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.createUser(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManager.validateUserDetails(org.springframework.security.core.userdetails.UserDetails)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter)
org.springframework.security.core.userdetails.UserDetails.getUsername()
java.sql.PreparedStatement.setString(I, java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
java.sql.PreparedStatement.setString(I, java.lang.String)
org.springframework.security.core.userdetails.UserDetails.isEnabled()
java.sql.PreparedStatement.setBoolean(I, Z)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.getEnableAuthorities()
org.springframework.security.provisioning.JdbcUserDetailsManager.insertUserAuthorities(org.springframework.security.core.userdetails.UserDetails)
729 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager$1.setValues(java.sql.PreparedStatement)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getUsername()
java.sql.PreparedStatement.setString(I, java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
java.sql.PreparedStatement.setString(I, java.lang.String)
org.springframework.security.core.userdetails.UserDetails.isEnabled()
java.sql.PreparedStatement.setBoolean(I, Z)
730 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.updateUser(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManager.validateUserDetails(org.springframework.security.core.userdetails.UserDetails)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter)
org.springframework.security.core.userdetails.UserDetails.getPassword()
java.sql.PreparedStatement.setString(I, java.lang.String)
org.springframework.security.core.userdetails.UserDetails.isEnabled()
java.sql.PreparedStatement.setBoolean(I, Z)
org.springframework.security.core.userdetails.UserDetails.getUsername()
java.sql.PreparedStatement.setString(I, java.lang.String)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.getEnableAuthorities()
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.provisioning.JdbcUserDetailsManager.deleteUserAuthorities(java.lang.String)
org.springframework.security.provisioning.JdbcUserDetailsManager.insertUserAuthorities(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.core.userdetails.UserCache.removeUserFromCache(java.lang.String)
731 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager$2.setValues(java.sql.PreparedStatement)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getPassword()
java.sql.PreparedStatement.setString(I, java.lang.String)
org.springframework.security.core.userdetails.UserDetails.isEnabled()
java.sql.PreparedStatement.setBoolean(I, Z)
org.springframework.security.core.userdetails.UserDetails.getUsername()
java.sql.PreparedStatement.setString(I, java.lang.String)
732 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.insertUserAuthorities(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.core.GrantedAuthority.getAuthority()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
733 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.deleteUser(java.lang.String)
Métodos invocados: 
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.getEnableAuthorities()
org.springframework.security.provisioning.JdbcUserDetailsManager.deleteUserAuthorities(java.lang.String)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
org.springframework.security.core.userdetails.UserCache.removeUserFromCache(java.lang.String)
734 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.deleteUserAuthorities(java.lang.String)
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
735 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.changePassword(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
java.security.Principal.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.provisioning.JdbcUserDetailsManager.createNewAuthentication(org.springframework.security.core.Authentication, java.lang.String)
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.core.userdetails.UserCache.removeUserFromCache(java.lang.String)
736 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.createNewAuthentication(org.springframework.security.core.Authentication, java.lang.String)
Métodos invocados: 
java.security.Principal.getName()
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.Authentication.getDetails()
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
737 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.userExists(java.lang.String)
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String, [Ljava.lang.Object;, java.lang.Class)
java.util.List.size()
java.util.List.size()
738 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.findAllGroups()
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String, java.lang.Class)
739 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.findUsersInGroup(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String, [Ljava.lang.Object;, java.lang.Class)
740 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.createGroup(java.lang.String, java.util.List)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object)
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
org.springframework.security.provisioning.JdbcUserDetailsManager.findGroupId(java.lang.String)
java.util.List.size()
java.util.List.get(I)
org.springframework.security.core.GrantedAuthority.getAuthority()
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter)
java.sql.PreparedStatement.setInt(I, I)
java.sql.PreparedStatement.setString(I, java.lang.String)
741 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager$3.setValues(java.sql.PreparedStatement)
Métodos invocados: 
java.sql.PreparedStatement.setInt(I, I)
java.sql.PreparedStatement.setString(I, java.lang.String)
742 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.deleteGroup(java.lang.String)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.security.provisioning.JdbcUserDetailsManager.findGroupId(java.lang.String)
java.sql.PreparedStatement.setInt(I, I)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter)
743 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager$4.setValues(java.sql.PreparedStatement)
Métodos invocados: 
java.sql.PreparedStatement.setInt(I, I)
744 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.renameGroup(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
745 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.addUserToGroup(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.security.provisioning.JdbcUserDetailsManager.findGroupId(java.lang.String)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter)
java.sql.PreparedStatement.setInt(I, I)
java.sql.PreparedStatement.setString(I, java.lang.String)
org.springframework.security.core.userdetails.UserCache.removeUserFromCache(java.lang.String)
746 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager$5.setValues(java.sql.PreparedStatement)
Métodos invocados: 
java.sql.PreparedStatement.setInt(I, I)
java.sql.PreparedStatement.setString(I, java.lang.String)
747 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.removeUserFromGroup(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.security.provisioning.JdbcUserDetailsManager.findGroupId(java.lang.String)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter)
java.sql.PreparedStatement.setInt(I, I)
java.sql.PreparedStatement.setString(I, java.lang.String)
org.springframework.security.core.userdetails.UserCache.removeUserFromCache(java.lang.String)
748 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager$6.setValues(java.sql.PreparedStatement)
Métodos invocados: 
java.sql.PreparedStatement.setInt(I, I)
java.sql.PreparedStatement.setString(I, java.lang.String)
749 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.findGroupAuthorities(java.lang.String)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, [Ljava.lang.Object;, org.springframework.jdbc.core.RowMapper)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.getRolePrefix()
java.sql.ResultSet.getString(I)
750 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager$7.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.getRolePrefix()
java.sql.ResultSet.getString(I)
751 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.removeGroupAuthority(java.lang.String, org.springframework.security.core.GrantedAuthority)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object)
org.springframework.security.provisioning.JdbcUserDetailsManager.findGroupId(java.lang.String)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter)
java.sql.PreparedStatement.setInt(I, I)
org.springframework.security.core.GrantedAuthority.getAuthority()
java.sql.PreparedStatement.setString(I, java.lang.String)
752 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager$8.setValues(java.sql.PreparedStatement)
Métodos invocados: 
java.sql.PreparedStatement.setInt(I, I)
org.springframework.security.core.GrantedAuthority.getAuthority()
java.sql.PreparedStatement.setString(I, java.lang.String)
753 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.addGroupAuthority(java.lang.String, org.springframework.security.core.GrantedAuthority)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object)
org.springframework.security.provisioning.JdbcUserDetailsManager.findGroupId(java.lang.String)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter)
java.sql.PreparedStatement.setInt(I, I)
org.springframework.security.core.GrantedAuthority.getAuthority()
java.sql.PreparedStatement.setString(I, java.lang.String)
754 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager$9.setValues(java.sql.PreparedStatement)
Métodos invocados: 
java.sql.PreparedStatement.setInt(I, I)
org.springframework.security.core.GrantedAuthority.getAuthority()
java.sql.PreparedStatement.setString(I, java.lang.String)
755 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.findGroupId(java.lang.String)
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.queryForInt(java.lang.String, [Ljava.lang.Object;)
756 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
756 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setCreateUserSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
757 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setDeleteUserSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
758 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setUpdateUserSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
759 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setCreateAuthoritySql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
760 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setDeleteUserAuthoritiesSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
761 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setUserExistsSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
762 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setChangePasswordSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
763 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setFindAllGroupsSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
764 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setFindUsersInGroupSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
765 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setInsertGroupSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
766 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setFindGroupIdSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
767 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setInsertGroupAuthoritySql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
768 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setDeleteGroupSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
769 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setDeleteGroupAuthoritiesSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
770 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setDeleteGroupMembersSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
771 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setRenameGroupSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
772 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setInsertGroupMemberSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
773 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setDeleteGroupMemberSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
774 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setGroupAuthoritiesSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
775 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setDeleteGroupAuthoritySql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
776 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.setUserCache(org.springframework.security.core.userdetails.UserCache)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
777 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.validateUserDetails(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.provisioning.JdbcUserDetailsManager.validateAuthorities(java.util.Collection)
778 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManager.validateAuthorities(java.util.Collection)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.core.GrantedAuthority.getAuthority()
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
779 - Declaração do método: org.springframework.security.provisioning.UserDetailsManager.createUser(org.springframework.security.core.userdetails.UserDetails)
779 - Declaração do método: org.springframework.security.provisioning.UserDetailsManager.updateUser(org.springframework.security.core.userdetails.UserDetails)
779 - Declaração do método: org.springframework.security.provisioning.UserDetailsManager.deleteUser(java.lang.String)
779 - Declaração do método: org.springframework.security.provisioning.UserDetailsManager.changePassword(java.lang.String, java.lang.String)
779 - Declaração do método: org.springframework.security.provisioning.UserDetailsManager.userExists(java.lang.String)
779 - Declaração do método: org.springframework.security.provisioning.MutableUserDetails.setPassword(java.lang.String)
779 - Declaração do método: org.springframework.security.remoting.dns.InitialContextFactory.getCtx()
779 - Declaração do método: org.springframework.security.remoting.dns.DnsLookupException.DnsLookupException(java.lang.String, java.lang.Throwable)
779 - Declaração do método: org.springframework.security.remoting.dns.DnsLookupException.DnsLookupException(java.lang.String)
779 - Declaração do método: org.springframework.security.remoting.dns.JndiDnsResolver.setCtxFactory(org.springframework.security.remoting.dns.InitialContextFactory)
779 - Declaração do método: org.springframework.security.remoting.dns.JndiDnsResolver.resolveIpAddress(java.lang.String)
Métodos invocados: 
org.springframework.security.remoting.dns.InitialContextFactory.getCtx()
org.springframework.security.remoting.dns.JndiDnsResolver.resolveIpAddress(java.lang.String, javax.naming.directory.DirContext)
780 - Declaração do método: org.springframework.security.remoting.dns.JndiDnsResolver.resolveServiceEntry(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.remoting.dns.InitialContextFactory.getCtx()
org.springframework.security.remoting.dns.JndiDnsResolver.resolveServiceEntry(java.lang.String, java.lang.String, javax.naming.directory.DirContext)
781 - Declaração do método: org.springframework.security.remoting.dns.JndiDnsResolver.resolveServiceIpAddress(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.remoting.dns.InitialContextFactory.getCtx()
org.springframework.security.remoting.dns.JndiDnsResolver.resolveServiceEntry(java.lang.String, java.lang.String, javax.naming.directory.DirContext)
org.springframework.security.remoting.dns.JndiDnsResolver.resolveIpAddress(java.lang.String, javax.naming.directory.DirContext)
782 - Declaração do método: org.springframework.security.remoting.dns.JndiDnsResolver.resolveIpAddress(java.lang.String, javax.naming.directory.DirContext)
Métodos invocados: 
org.springframework.security.remoting.dns.JndiDnsResolver.lookup(java.lang.String, javax.naming.directory.DirContext, java.lang.String)
javax.naming.directory.Attribute.get()
java.lang.Object.toString()
783 - Declaração do método: org.springframework.security.remoting.dns.JndiDnsResolver.resolveServiceEntry(java.lang.String, java.lang.String, javax.naming.directory.DirContext)
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
org.springframework.security.remoting.dns.JndiDnsResolver.lookup(java.lang.String, javax.naming.directory.DirContext, java.lang.String)
javax.naming.directory.Attribute.getAll()
java.util.Enumeration.hasMoreElements()
javax.naming.NamingEnumeration.next()
java.lang.Object.toString()
java.lang.String.split(java.lang.String)
java.lang.Integer.parseInt(java.lang.String)
java.lang.Integer.parseInt(java.lang.String)
java.lang.String.trim()
java.lang.String.trim()
java.lang.String.endsWith(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I, I)
784 - Declaração do método: org.springframework.security.remoting.dns.JndiDnsResolver.lookup(java.lang.String, javax.naming.directory.DirContext, java.lang.String)
Métodos invocados: 
javax.naming.directory.DirContext.getAttributes(java.lang.String, [Ljava.lang.String;)
javax.naming.directory.Attributes.get(java.lang.String)
785 - Declaração do método: org.springframework.security.remoting.dns.JndiDnsResolver$DefaultInitialContextFactory.getCtx()
Métodos invocados: 
java.util.Hashtable.put(java.lang.String, java.lang.String)
java.util.Hashtable.put(java.lang.String, java.lang.String)
786 - Declaração do método: org.springframework.security.remoting.dns.DnsResolver.resolveIpAddress(java.lang.String)
786 - Declaração do método: org.springframework.security.remoting.dns.DnsResolver.resolveServiceEntry(java.lang.String, java.lang.String)
786 - Declaração do método: org.springframework.security.remoting.dns.DnsResolver.resolveServiceIpAddress(java.lang.String, java.lang.String)
786 - Declaração do método: org.springframework.security.remoting.dns.DnsEntryNotFoundException.DnsEntryNotFoundException(java.lang.String)
786 - Declaração do método: org.springframework.security.remoting.dns.DnsEntryNotFoundException.DnsEntryNotFoundException(java.lang.String, java.lang.Throwable)
786 - Declaração do método: org.springframework.security.remoting.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutor.doPrepareConnection(java.net.HttpURLConnection, I)
786 - Declaração do método: org.springframework.security.remoting.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutor.prepareConnection(java.net.HttpURLConnection, I)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
java.security.Principal.getName()
org.springframework.security.core.Authentication.getCredentials()
java.security.Principal.getName()
org.springframework.security.core.Authentication.getCredentials()
java.lang.Object.toString()
java.lang.String.getBytes()
org.springframework.security.core.codec.Base64.encode([B)
java.net.URLConnection.setRequestProperty(java.lang.String, java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
java.security.Principal.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.remoting.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutor.doPrepareConnection(java.net.HttpURLConnection, I)
787 - Declaração do método: org.springframework.security.remoting.rmi.ContextPropagatingRemoteInvocation.ContextPropagatingRemoteInvocation(org.aopalliance.intercept.MethodInvocation)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
788 - Declaração do método: org.springframework.security.remoting.rmi.ContextPropagatingRemoteInvocation.invoke(java.lang.Object)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.setContext(org.springframework.security.core.context.SecurityContext)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.setAuthenticated(Z)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
789 - Declaração do método: org.springframework.security.remoting.rmi.ContextPropagatingRemoteInvocationFactory.createRemoteInvocation(org.aopalliance.intercept.MethodInvocation)
789 - Declaração do método: org.springframework.security.util.MethodInvocationUtils.MethodInvocationUtils()
789 - Declaração do método: org.springframework.security.util.MethodInvocationUtils.create(java.lang.Object, java.lang.String, [Ljava.lang.Object;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.Object.getClass()
org.springframework.aop.support.AopUtils.getTargetClass(java.lang.Object)
org.springframework.aop.framework.Advised.isProxyTargetClass()
org.springframework.aop.framework.Advised.getProxiedInterfaces()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.util.MethodInvocationUtils.createFromClass(java.lang.Object, java.lang.Class, java.lang.String, [Ljava.lang.Class;, [Ljava.lang.Object;)
790 - Declaração do método: org.springframework.security.util.MethodInvocationUtils.createFromClass(java.lang.Class, java.lang.String)
Métodos invocados: 
org.springframework.security.util.MethodInvocationUtils.createFromClass(java.lang.Object, java.lang.Class, java.lang.String, [Ljava.lang.Class;, [Ljava.lang.Object;)
java.lang.Class.getDeclaredMethods()
java.lang.reflect.Method.getName()
java.lang.String.equals(java.lang.Object)
791 - Declaração do método: org.springframework.security.util.MethodInvocationUtils.createFromClass(java.lang.Object, java.lang.Class, java.lang.String, [Ljava.lang.Class;, [Ljava.lang.Object;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
792 - Declaração do método: org.springframework.security.util.SimpleMethodInvocation.SimpleMethodInvocation(java.lang.Object, java.lang.reflect.Method, [Ljava.lang.Object;)
792 - Declaração do método: org.springframework.security.util.SimpleMethodInvocation.SimpleMethodInvocation()
792 - Declaração do método: org.springframework.security.util.SimpleMethodInvocation.getArguments()
792 - Declaração do método: org.springframework.security.util.SimpleMethodInvocation.getMethod()
792 - Declaração do método: org.springframework.security.util.SimpleMethodInvocation.getStaticPart()
792 - Declaração do método: org.springframework.security.util.SimpleMethodInvocation.getThis()
792 - Declaração do método: org.springframework.security.util.SimpleMethodInvocation.proceed()
792 - Declaração do método: org.springframework.security.util.InMemoryResource.InMemoryResource(java.lang.String)
Métodos invocados: 
java.lang.String.getBytes()
793 - Declaração do método: org.springframework.security.util.InMemoryResource.InMemoryResource([B)
793 - Declaração do método: org.springframework.security.util.InMemoryResource.InMemoryResource([B, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
794 - Declaração do método: org.springframework.security.util.InMemoryResource.getDescription()
794 - Declaração do método: org.springframework.security.util.InMemoryResource.getInputStream()
794 - Declaração do método: org.springframework.security.util.InMemoryResource.hashCode()
Métodos invocados: 
java.lang.Object.hashCode()
795 - Declaração do método: org.springframework.security.util.InMemoryResource.equals(java.lang.Object)
Métodos invocados: 
java.util.Arrays.equals([B, [B)
796 - Declaração do método: org.springframework.security.util.FieldUtils.FieldUtils()
796 - Declaração do método: org.springframework.security.util.FieldUtils.getAccessorName(java.lang.String, java.lang.Class)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.Class.getName()
java.lang.String.equals(java.lang.Object)
org.springframework.util.StringUtils.capitalize(java.lang.String)
org.springframework.util.StringUtils.capitalize(java.lang.String)
797 - Declaração do método: org.springframework.security.util.FieldUtils.getField(java.lang.Class, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
java.lang.Class.getDeclaredField(java.lang.String)
java.lang.Class.getSuperclass()
java.lang.Class.getSuperclass()
org.springframework.security.util.FieldUtils.getField(java.lang.Class, java.lang.String)
798 - Declaração do método: org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.StringUtils.tokenizeToStringArray(java.lang.String, java.lang.String)
java.lang.Object.getClass()
org.springframework.security.util.FieldUtils.getField(java.lang.Class, java.lang.String)
java.lang.reflect.AccessibleObject.setAccessible(Z)
java.lang.reflect.Field.get(java.lang.Object)
java.lang.Object.getClass()
799 - Declaração do método: org.springframework.security.util.FieldUtils.getMutatorName(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.StringUtils.capitalize(java.lang.String)
800 - Declaração do método: org.springframework.security.util.FieldUtils.getProtectedFieldValue(java.lang.String, java.lang.Object)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.security.util.FieldUtils.getField(java.lang.Class, java.lang.String)
java.lang.reflect.AccessibleObject.setAccessible(Z)
java.lang.reflect.Field.get(java.lang.Object)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
801 - Declaração do método: org.springframework.security.util.FieldUtils.setProtectedFieldValue(java.lang.String, java.lang.Object, java.lang.Object)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.security.util.FieldUtils.getField(java.lang.Class, java.lang.String)
java.lang.reflect.AccessibleObject.setAccessible(Z)
java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
802 - Declaração do método: org.springframework.security.MockJoinPoint.MockJoinPoint(java.lang.Object, java.lang.reflect.Method, [Ljava.lang.Object;)
Métodos invocados: 
java.lang.Object.getClass()
803 - Declaração do método: org.springframework.security.MockJoinPoint.getArgs()
803 - Declaração do método: org.springframework.security.MockJoinPoint.getKind()
803 - Declaração do método: org.springframework.security.MockJoinPoint.getSignature()
803 - Declaração do método: org.springframework.security.MockJoinPoint.getSourceLocation()
803 - Declaração do método: org.springframework.security.MockJoinPoint.getStaticPart()
803 - Declaração do método: org.springframework.security.MockJoinPoint.getTarget()
803 - Declaração do método: org.springframework.security.MockJoinPoint.getThis()
803 - Declaração do método: org.springframework.security.MockJoinPoint.toLongString()
803 - Declaração do método: org.springframework.security.MockJoinPoint.toShortString()
803 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.MockCodeSignature(java.lang.reflect.Method, java.lang.Class)
803 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.getDeclaringType()
803 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.getDeclaringTypeName()
803 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.getExceptionTypes()
803 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.getModifiers()
803 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.getName()
Métodos invocados: 
java.lang.reflect.Method.getName()
804 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.getParameterNames()
804 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.getParameterTypes()
Métodos invocados: 
java.lang.reflect.Method.getParameterTypes()
805 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.toLongString()
805 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.toShortString()
805 - Declaração do método: org.springframework.security.MockJoinPoint$MockStaticPart.MockStaticPart(java.lang.reflect.Method, java.lang.Class)
805 - Declaração do método: org.springframework.security.MockJoinPoint$MockStaticPart.getKind()
805 - Declaração do método: org.springframework.security.MockJoinPoint$MockStaticPart.getSignature()
805 - Declaração do método: org.springframework.security.MockJoinPoint$MockStaticPart.getSourceLocation()
805 - Declaração do método: org.springframework.security.MockJoinPoint$MockStaticPart.toLongString()
805 - Declaração do método: org.springframework.security.MockJoinPoint$MockStaticPart.toShortString()
805 - Declaração do método: org.springframework.security.MockJoinPoint$MockStaticPart.getId()
805 - Declaração do método: org.springframework.security.OtherTargetObject.makeLowerCase(java.lang.String)
805 - Declaração do método: org.springframework.security.OtherTargetObject.makeUpperCase(java.lang.String)
805 - Declaração do método: org.springframework.security.OtherTargetObject.publicMakeLowerCase(java.lang.String)
805 - Declaração do método: org.springframework.security.ITargetObject.computeHashCode(java.lang.String)
805 - Declaração do método: org.springframework.security.ITargetObject.countLength(java.lang.String)
805 - Declaração do método: org.springframework.security.ITargetObject.makeLowerCase(java.lang.String)
805 - Declaração do método: org.springframework.security.ITargetObject.makeUpperCase(java.lang.String)
805 - Declaração do método: org.springframework.security.ITargetObject.publicMakeLowerCase(java.lang.String)
805 - Declaração do método: org.springframework.security.TestDataSource.TestDataSource(java.lang.String)
Métodos invocados: 
java.io.PrintStream.println(java.lang.String)
org.springframework.jdbc.datasource.DriverManagerDataSource.setDriverClassName(java.lang.String)
org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.setUrl(java.lang.String)
org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.setUsername(java.lang.String)
org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.setPassword(java.lang.String)
806 - Declaração do método: org.springframework.security.TestDataSource.destroy()
Métodos invocados: 
java.io.PrintStream.println(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
807 - Declaração do método: org.springframework.security.TargetObject.computeHashCode(java.lang.String)
Métodos invocados: 
java.lang.String.hashCode()
808 - Declaração do método: org.springframework.security.TargetObject.countLength(java.lang.String)
Métodos invocados: 
java.lang.String.length()
809 - Declaração do método: org.springframework.security.TargetObject.makeLowerCase(java.lang.String)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
java.lang.String.toLowerCase()
java.lang.String.toLowerCase()
java.lang.Object.getClass()
java.lang.Class.getName()
org.springframework.security.core.Authentication.isAuthenticated()
810 - Declaração do método: org.springframework.security.TargetObject.makeUpperCase(java.lang.String)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
java.lang.String.toUpperCase()
java.lang.Object.getClass()
java.lang.Class.getName()
org.springframework.security.core.Authentication.isAuthenticated()
811 - Declaração do método: org.springframework.security.TargetObject.publicMakeLowerCase(java.lang.String)
Métodos invocados: 
org.springframework.security.TargetObject.makeLowerCase(java.lang.String)
812 - Declaração do método: org.springframework.security.PopulatedDatabase.PopulatedDatabase()
812 - Declaração do método: org.springframework.security.PopulatedDatabase.getDataSource()
Métodos invocados: 
org.springframework.security.PopulatedDatabase.setupDataSource()
813 - Declaração do método: org.springframework.security.PopulatedDatabase.setupDataSource()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.PopulatedDatabase.createGroupTables(org.springframework.jdbc.core.JdbcTemplate)
org.springframework.security.PopulatedDatabase.insertGroupData(org.springframework.jdbc.core.JdbcTemplate)
814 - Declaração do método: org.springframework.security.PopulatedDatabase.createGroupTables(org.springframework.jdbc.core.JdbcTemplate)
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
815 - Declaração do método: org.springframework.security.PopulatedDatabase.insertGroupData(org.springframework.jdbc.core.JdbcTemplate)
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
816 - Declaração do método: org.springframework.security.access.AuthorizedEventTests.testRejectsNulls()
Métodos invocados: 
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
817 - Declaração do método: org.springframework.security.access.AuthorizedEventTests.testRejectsNulls2()
817 - Declaração do método: org.springframework.security.access.AuthorizedEventTests.testRejectsNulls3()
Métodos invocados: 
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
818 - Declaração do método: org.springframework.security.access.AuthorizationFailureEventTests.testRejectsNulls()
Métodos invocados: 
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
819 - Declaração do método: org.springframework.security.access.AuthorizationFailureEventTests.testRejectsNulls2()
819 - Declaração do método: org.springframework.security.access.AuthorizationFailureEventTests.testRejectsNulls3()
Métodos invocados: 
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
820 - Declaração do método: org.springframework.security.access.AuthorizationFailureEventTests.testRejectsNulls4()
Métodos invocados: 
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
821 - Declaração do método: org.springframework.security.access.SecurityConfigTests.testHashCode()
Métodos invocados: 
java.lang.String.hashCode()
org.springframework.security.access.SecurityConfig.hashCode()
junit.framework.Assert.assertEquals(I, I)
822 - Declaração do método: org.springframework.security.access.SecurityConfigTests.testCannotConstructWithNullAttribute()
822 - Declaração do método: org.springframework.security.access.SecurityConfigTests.testCannotConstructWithEmptyAttribute()
822 - Declaração do método: org.springframework.security.access.SecurityConfigTests.testNoArgConstructorDoesntExist()
Métodos invocados: 
java.lang.Class.getDeclaredConstructor([Ljava.lang.Class;)
823 - Declaração do método: org.springframework.security.access.SecurityConfigTests.testObjectEquals()
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)
org.springframework.security.access.SecurityConfig.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.SecurityConfig.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.SecurityConfig.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.SecurityConfig.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
824 - Declaração do método: org.springframework.security.access.SecurityConfigTests.testToString()
Métodos invocados: 
org.springframework.security.access.SecurityConfig.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
825 - Declaração do método: org.springframework.security.access.SecurityConfigTests$MockConfigAttribute.MockConfigAttribute(java.lang.String)
825 - Declaração do método: org.springframework.security.access.SecurityConfigTests$MockConfigAttribute.getAttribute()
825 - Declaração do método: org.springframework.security.access.AuthenticationCredentialsNotFoundEventTests.testRejectsNulls()
Métodos invocados: 
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
826 - Declaração do método: org.springframework.security.access.AuthenticationCredentialsNotFoundEventTests.testRejectsNulls2()
826 - Declaração do método: org.springframework.security.access.AuthenticationCredentialsNotFoundEventTests.testRejectsNulls3()
Métodos invocados: 
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
827 - Declaração do método: org.springframework.security.access.annotation.Department.Department(java.lang.String)
827 - Declaração do método: org.springframework.security.access.annotation.Department.isActive()
827 - Declaração do método: org.springframework.security.access.annotation.Department.deactive()
827 - Declaração do método: org.springframework.security.access.annotation.BusinessService.someAdminMethod()
827 - Declaração do método: org.springframework.security.access.annotation.BusinessService.someUserAndAdminMethod()
827 - Declaração do método: org.springframework.security.access.annotation.BusinessService.someUserMethod1()
827 - Declaração do método: org.springframework.security.access.annotation.BusinessService.someUserMethod2()
827 - Declaração do método: org.springframework.security.access.annotation.BusinessService.someOther(java.lang.String)
827 - Declaração do método: org.springframework.security.access.annotation.BusinessService.someOther(I)
827 - Declaração do método: org.springframework.security.access.annotation.BusinessService.methodReturningAList(java.util.List)
827 - Declaração do método: org.springframework.security.access.annotation.BusinessService.methodReturningAnArray([Ljava.lang.Object;)
827 - Declaração do método: org.springframework.security.access.annotation.BusinessService.methodReturningAList(java.lang.String, java.lang.String)
827 - Declaração do método: org.springframework.security.access.annotation.DepartmentServiceImpl.someUserMethod3(org.springframework.security.access.annotation.Department)
827 - Declaração do método: org.springframework.security.access.annotation.ExpressionProtectedBusinessServiceImpl.someAdminMethod()
827 - Declaração do método: org.springframework.security.access.annotation.ExpressionProtectedBusinessServiceImpl.someOther(java.lang.String)
827 - Declaração do método: org.springframework.security.access.annotation.ExpressionProtectedBusinessServiceImpl.someOther(I)
827 - Declaração do método: org.springframework.security.access.annotation.ExpressionProtectedBusinessServiceImpl.someUserAndAdminMethod()
827 - Declaração do método: org.springframework.security.access.annotation.ExpressionProtectedBusinessServiceImpl.someUserMethod1()
827 - Declaração do método: org.springframework.security.access.annotation.ExpressionProtectedBusinessServiceImpl.someUserMethod2()
827 - Declaração do método: org.springframework.security.access.annotation.ExpressionProtectedBusinessServiceImpl.methodReturningAList(java.util.List)
827 - Declaração do método: org.springframework.security.access.annotation.ExpressionProtectedBusinessServiceImpl.methodReturningAList(java.lang.String, java.lang.String)
827 - Declaração do método: org.springframework.security.access.annotation.ExpressionProtectedBusinessServiceImpl.methodReturningAnArray([Ljava.lang.Object;)
827 - Declaração do método: org.springframework.security.access.annotation.ExpressionProtectedBusinessServiceImpl.methodWithBeanNamePropertyAccessExpression(java.lang.String)
827 - Declaração do método: org.springframework.security.access.annotation.Jsr250VoterTests.supportsMultipleRolesCorrectly()
Métodos invocados: 
java.util.List.add(org.springframework.security.access.ConfigAttribute)
java.util.List.add(org.springframework.security.access.ConfigAttribute)
java.util.List.add(org.springframework.security.access.ConfigAttribute)
org.springframework.security.access.annotation.Jsr250Voter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.junit.Assert.assertEquals(J, J)
org.springframework.security.access.annotation.Jsr250Voter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.junit.Assert.assertEquals(J, J)
org.springframework.security.access.annotation.Jsr250Voter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.junit.Assert.assertEquals(J, J)
org.springframework.security.access.annotation.Jsr250Voter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.junit.Assert.assertEquals(J, J)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.annotation.Jsr250Voter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.junit.Assert.assertEquals(J, J)
828 - Declaração do método: org.springframework.security.access.annotation.Jsr250BusinessServiceImpl.someUserMethod1()
828 - Declaração do método: org.springframework.security.access.annotation.Jsr250BusinessServiceImpl.someUserMethod2()
828 - Declaração do método: org.springframework.security.access.annotation.Jsr250BusinessServiceImpl.someUserAndAdminMethod()
828 - Declaração do método: org.springframework.security.access.annotation.Jsr250BusinessServiceImpl.someAdminMethod()
828 - Declaração do método: org.springframework.security.access.annotation.Jsr250BusinessServiceImpl.someOther(java.lang.String)
828 - Declaração do método: org.springframework.security.access.annotation.Jsr250BusinessServiceImpl.someOther(I)
828 - Declaração do método: org.springframework.security.access.annotation.Jsr250BusinessServiceImpl.methodReturningAList(java.util.List)
828 - Declaração do método: org.springframework.security.access.annotation.Jsr250BusinessServiceImpl.methodReturningAList(java.lang.String, java.lang.String)
828 - Declaração do método: org.springframework.security.access.annotation.Jsr250BusinessServiceImpl.methodReturningAnArray([Ljava.lang.Object;)
828 - Declaração do método: org.springframework.security.access.annotation.DepartmentService.someUserMethod3(org.springframework.security.access.annotation.Department)
828 - Declaração do método: org.springframework.security.access.annotation.BusinessServiceImpl.someUserMethod1()
828 - Declaração do método: org.springframework.security.access.annotation.BusinessServiceImpl.someUserMethod2()
828 - Declaração do método: org.springframework.security.access.annotation.BusinessServiceImpl.someUserAndAdminMethod()
828 - Declaração do método: org.springframework.security.access.annotation.BusinessServiceImpl.someAdminMethod()
828 - Declaração do método: org.springframework.security.access.annotation.BusinessServiceImpl.someUserMethod3(org.springframework.security.access.annotation.BusinessServiceImpl$E)
828 - Declaração do método: org.springframework.security.access.annotation.BusinessServiceImpl.someOther(java.lang.String)
828 - Declaração do método: org.springframework.security.access.annotation.BusinessServiceImpl.someOther(I)
828 - Declaração do método: org.springframework.security.access.annotation.BusinessServiceImpl.methodReturningAList(java.util.List)
828 - Declaração do método: org.springframework.security.access.annotation.BusinessServiceImpl.methodReturningAList(java.lang.String, java.lang.String)
828 - Declaração do método: org.springframework.security.access.annotation.BusinessServiceImpl.methodReturningAnArray([Ljava.lang.Object;)
828 - Declaração do método: org.springframework.security.access.annotation.Jsr250MethodDefinitionSourceTests.findAttributes(java.lang.String)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource.findAttributes(java.lang.reflect.Method, java.lang.Class)
java.util.Collection.toArray([Lorg.springframework.security.access.ConfigAttribute;)
829 - Declaração do método: org.springframework.security.access.annotation.Jsr250MethodDefinitionSourceTests.methodWithRolesAllowedHasCorrectAttribute()
Métodos invocados: 
org.springframework.security.access.annotation.Jsr250MethodDefinitionSourceTests.findAttributes(java.lang.String)
org.junit.Assert.assertEquals(J, J)
java.lang.Object.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
830 - Declaração do método: org.springframework.security.access.annotation.Jsr250MethodDefinitionSourceTests.permitAllMethodHasPermitAllAttribute()
Métodos invocados: 
org.springframework.security.access.annotation.Jsr250MethodDefinitionSourceTests.findAttributes(java.lang.String)
org.junit.Assert.assertEquals(J, J)
java.lang.Object.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
831 - Declaração do método: org.springframework.security.access.annotation.Jsr250MethodDefinitionSourceTests.noRoleMethodHasNoAttributes()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource.findAttributes(java.lang.reflect.Method, java.lang.Class)
junit.framework.Assert.assertNull(java.lang.Object)
832 - Declaração do método: org.springframework.security.access.annotation.Jsr250MethodDefinitionSourceTests.classRoleIsAppliedToNoRoleMethod()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource.findAttributes(java.lang.reflect.Method, java.lang.Class)
junit.framework.Assert.assertNull(java.lang.Object)
833 - Declaração do método: org.springframework.security.access.annotation.Jsr250MethodDefinitionSourceTests.methodRoleOverridesClassRole()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource.findAttributes(java.lang.reflect.Method, java.lang.Class)
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
java.util.Collection.toArray()
java.lang.Object.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
834 - Declaração do método: org.springframework.security.access.annotation.Jsr250MethodDefinitionSourceTests$A.noRoleMethod()
834 - Declaração do método: org.springframework.security.access.annotation.Jsr250MethodDefinitionSourceTests$A.adminMethod()
834 - Declaração do método: org.springframework.security.access.annotation.Jsr250MethodDefinitionSourceTests$A.permitAllMethod()
834 - Declaração do método: org.springframework.security.access.annotation.Jsr250MethodDefinitionSourceTests$UserAllowedClass.noRoleMethod()
834 - Declaração do método: org.springframework.security.access.annotation.Jsr250MethodDefinitionSourceTests$UserAllowedClass.adminMethod()
834 - Declaração do método: org.springframework.security.access.annotation.Entity.Entity(java.lang.String)
834 - Declaração do método: org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataDefinitionSourceTests.testGenericsSuperclassDeclarationsAreIncludedWhenSubclassesOverride()
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataSource.findAttributes(java.lang.reflect.Method, java.lang.Class)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.util.Collection.size()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.springframework.security.access.ConfigAttribute.getAttribute()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataSource.findAttributes(java.lang.reflect.Method, java.lang.Class)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.util.Collection.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.springframework.security.access.ConfigAttribute.getAttribute()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
835 - Declaração do método: org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataDefinitionSourceTests.testGetAttributesClass()
Métodos invocados: 
org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataSource.findAttributes(java.lang.Class)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
java.util.Collection.toArray()
org.springframework.security.access.SecurityConfig.getAttribute()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
836 - Declaração do método: org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataDefinitionSourceTests.testGetAttributesMethod()
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataSource.findAttributes(java.lang.reflect.Method, java.lang.Class)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
org.springframework.security.access.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
837 - Declaração do método: org.springframework.security.access.annotation.test.ServiceImpl.countElements(java.util.Collection)
837 - Declaração do método: org.springframework.security.access.annotation.test.ServiceImpl.makeLowerCase(org.springframework.security.access.annotation.test.ServiceImpl$E)
Métodos invocados: 
org.springframework.security.access.annotation.test.Entity.makeLowercase()
838 - Declaração do método: org.springframework.security.access.annotation.test.ServiceImpl.makeUpperCase(org.springframework.security.access.annotation.test.ServiceImpl$E)
Métodos invocados: 
org.springframework.security.access.annotation.test.Entity.makeUppercase()
839 - Declaração do método: org.springframework.security.access.annotation.test.ServiceImpl.publicMakeLowerCase(org.springframework.security.access.annotation.test.ServiceImpl$E)
Métodos invocados: 
org.springframework.security.access.annotation.test.Entity.makeUppercase()
840 - Declaração do método: org.springframework.security.access.annotation.test.OrganisationServiceImpl.deactive(org.springframework.security.access.annotation.test.Organisation)
Métodos invocados: 
org.springframework.security.access.annotation.test.Organisation.deactive()
841 - Declaração do método: org.springframework.security.access.annotation.test.OrganisationService.deactive(org.springframework.security.access.annotation.test.Organisation)
841 - Declaração do método: org.springframework.security.access.annotation.test.Organisation.Organisation(java.lang.String)
841 - Declaração do método: org.springframework.security.access.annotation.test.Organisation.deactive()
841 - Declaração do método: org.springframework.security.access.annotation.test.Organisation.isActive()
841 - Declaração do método: org.springframework.security.access.annotation.test.Entity.Entity(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
842 - Declaração do método: org.springframework.security.access.annotation.test.Entity.getInfo()
842 - Declaração do método: org.springframework.security.access.annotation.test.Entity.makeLowercase()
Métodos invocados: 
java.lang.String.toLowerCase()
843 - Declaração do método: org.springframework.security.access.annotation.test.Entity.makeUppercase()
Métodos invocados: 
java.lang.String.toUpperCase()
844 - Declaração do método: org.springframework.security.access.annotation.test.PersonService.deactive(org.springframework.security.access.annotation.test.Person)
844 - Declaração do método: org.springframework.security.access.annotation.test.PersonServiceImpl.deactive(org.springframework.security.access.annotation.test.Person)
Métodos invocados: 
org.springframework.security.access.annotation.test.Person.deactive()
845 - Declaração do método: org.springframework.security.access.annotation.test.Person.Person(java.lang.String)
845 - Declaração do método: org.springframework.security.access.annotation.test.Person.deactive()
845 - Declaração do método: org.springframework.security.access.annotation.test.Person.isActive()
845 - Declaração do método: org.springframework.security.access.annotation.test.Service.countElements(java.util.Collection)
845 - Declaração do método: org.springframework.security.access.annotation.test.Service.makeLowerCase(org.springframework.security.access.annotation.test.Service$E)
845 - Declaração do método: org.springframework.security.access.annotation.test.Service.makeUpperCase(org.springframework.security.access.annotation.test.Service$E)
845 - Declaração do método: org.springframework.security.access.annotation.test.Service.publicMakeLowerCase(org.springframework.security.access.annotation.test.Service$E)
845 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRootTests.roleHierarchySupportIsCorrectlyUsedInEvaluatingRoles()
Métodos invocados: 
org.springframework.security.access.expression.SecurityExpressionRoot.setRoleHierarchy(org.springframework.security.access.hierarchicalroles.RoleHierarchy)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.access.expression.SecurityExpressionRoot.hasRole(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.expression.SecurityExpressionRoot.hasRole(java.lang.String)
org.junit.Assert.assertFalse(Z)
org.springframework.security.access.expression.SecurityExpressionRoot.hasRole(java.lang.String)
org.junit.Assert.assertFalse(Z)
org.springframework.security.access.expression.SecurityExpressionRoot.hasAnyRole([Ljava.lang.String;)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.expression.SecurityExpressionRoot.hasAnyRole([Ljava.lang.String;)
org.junit.Assert.assertFalse(Z)
846 - Declaração do método: org.springframework.security.access.expression.SecurityExpressionRootTests$2.getReachableGrantedAuthorities(java.util.Collection)
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
847 - Declaração do método: org.springframework.security.access.expression.method.PrePostAnnotationSecurityMetadataSourceTests.setUpData()
847 - Declaração do método: org.springframework.security.access.expression.method.PrePostAnnotationSecurityMetadataSourceTests.classLevelPreAnnotationIsPickedUpWhenNoMethodLevelExists()
Métodos invocados: 
org.springframework.security.access.method.AbstractMethodSecurityMetadataSource.getAttributes(java.lang.Object)
java.util.Collection.toArray([Lorg.springframework.security.access.ConfigAttribute;)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getAuthorizeExpression()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getAuthorizeExpression()
org.springframework.expression.Expression.getExpressionString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getFilterExpression()
org.junit.Assert.assertNull(java.lang.Object)
848 - Declaração do método: org.springframework.security.access.expression.method.PrePostAnnotationSecurityMetadataSourceTests.mixedClassAndMethodPreAnnotationsAreBothIncluded()
Métodos invocados: 
org.springframework.security.access.method.AbstractMethodSecurityMetadataSource.getAttributes(java.lang.Object)
java.util.Collection.toArray([Lorg.springframework.security.access.ConfigAttribute;)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getAuthorizeExpression()
org.springframework.expression.Expression.getExpressionString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getFilterExpression()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getFilterExpression()
org.springframework.expression.Expression.getExpressionString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
849 - Declaração do método: org.springframework.security.access.expression.method.PrePostAnnotationSecurityMetadataSourceTests.methodWithPreFilterOnlyIsAllowed()
Métodos invocados: 
org.springframework.security.access.method.AbstractMethodSecurityMetadataSource.getAttributes(java.lang.Object)
java.util.Collection.toArray([Lorg.springframework.security.access.ConfigAttribute;)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getAuthorizeExpression()
org.springframework.expression.Expression.getExpressionString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getFilterExpression()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getFilterExpression()
org.springframework.expression.Expression.getExpressionString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
850 - Declaração do método: org.springframework.security.access.expression.method.PrePostAnnotationSecurityMetadataSourceTests.methodWithPostFilterOnlyIsAllowed()
Métodos invocados: 
org.springframework.security.access.method.AbstractMethodSecurityMetadataSource.getAttributes(java.lang.Object)
java.util.Collection.toArray([Lorg.springframework.security.access.ConfigAttribute;)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertTrue(Z)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getAuthorizeExpression()
org.springframework.expression.Expression.getExpressionString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getFilterExpression()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getFilterExpression()
org.springframework.expression.Expression.getExpressionString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
851 - Declaração do método: org.springframework.security.access.expression.method.PrePostAnnotationSecurityMetadataSourceTests.interfaceAttributesAreIncluded()
Métodos invocados: 
org.springframework.security.access.method.AbstractMethodSecurityMetadataSource.getAttributes(java.lang.Object)
java.util.Collection.toArray([Lorg.springframework.security.access.ConfigAttribute;)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getFilterExpression()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getAuthorizeExpression()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getAuthorizeExpression()
org.springframework.expression.Expression.getExpressionString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getFilterExpression()
org.springframework.expression.Expression.getExpressionString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
852 - Declaração do método: org.springframework.security.access.expression.method.PrePostAnnotationSecurityMetadataSourceTests.classAttributesTakesPrecedeceOverInterfaceAttributes()
Métodos invocados: 
org.springframework.security.access.method.AbstractMethodSecurityMetadataSource.getAttributes(java.lang.Object)
java.util.Collection.toArray([Lorg.springframework.security.access.ConfigAttribute;)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getFilterExpression()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getAuthorizeExpression()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getAuthorizeExpression()
org.springframework.expression.Expression.getExpressionString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute.getFilterExpression()
org.springframework.expression.Expression.getExpressionString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
853 - Declaração do método: org.springframework.security.access.expression.method.PrePostAnnotationSecurityMetadataSourceTests$ReturnVoid.doSomething(java.util.List)
853 - Declaração do método: org.springframework.security.access.expression.method.PrePostAnnotationSecurityMetadataSourceTests$ReturnAList.doSomething(java.util.List)
853 - Declaração do método: org.springframework.security.access.expression.method.PrePostAnnotationSecurityMetadataSourceTests$ReturnAnotherList.doSomething(java.util.List)
853 - Declaração do método: org.springframework.security.access.expression.method.PrePostAnnotationSecurityMetadataSourceTests$ReturnVoidImpl1.doSomething(java.util.List)
853 - Declaração do método: org.springframework.security.access.expression.method.PrePostAnnotationSecurityMetadataSourceTests$ReturnVoidImpl2.doSomething(java.util.List)
853 - Declaração do método: org.springframework.security.access.expression.method.PrePostAnnotationSecurityMetadataSourceTests$ReturnVoidImpl3.doSomething(java.util.List)
853 - Declaração do método: org.springframework.security.access.expression.method.PrePostAnnotationSecurityMetadataSourceTests$ReturnAListImpl1.doSomething(java.util.List)
853 - Declaração do método: org.springframework.security.access.expression.method.PrePostAnnotationSecurityMetadataSourceTests$ReturnAListImpl2.doSomething(java.util.List)
853 - Declaração do método: org.springframework.security.access.expression.method.PrePostAnnotationSecurityMetadataSourceTests$ReturnAnotherListImpl1.doSomething(java.util.List)
853 - Declaração do método: org.springframework.security.access.expression.method.PrePostAnnotationSecurityMetadataSourceTests$ReturnAnotherListImpl2.doSomething(java.util.List)
853 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityExpressionRootTests.createContext()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.expression.spel.support.StandardEvaluationContext.setRootObject(java.lang.Object)
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.access.expression.SecurityExpressionRoot.setTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)
854 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityExpressionRootTests.canCallMethodsOnVariables()
Métodos invocados: 
org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(java.lang.String, java.lang.Object)
org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(java.lang.String)
org.springframework.security.access.expression.ExpressionUtils.evaluateAsBoolean(org.springframework.expression.Expression, org.springframework.expression.EvaluationContext)
org.junit.Assert.assertTrue(Z)
855 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityExpressionRootTests.isAnonymousReturnsTrueIfTrustResolverReportsAnonymous()
Métodos invocados: 
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.authentication.AuthenticationTrustResolver)
org.springframework.security.authentication.AuthenticationTrustResolver.isAnonymous(org.springframework.security.core.Authentication)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.access.expression.SecurityExpressionRoot.isAnonymous()
org.junit.Assert.assertTrue(Z)
856 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityExpressionRootTests.isAnonymousReturnsFalseIfTrustResolverReportsNonAnonymous()
Métodos invocados: 
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.authentication.AuthenticationTrustResolver)
org.springframework.security.authentication.AuthenticationTrustResolver.isAnonymous(org.springframework.security.core.Authentication)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.access.expression.SecurityExpressionRoot.isAnonymous()
org.junit.Assert.assertFalse(Z)
857 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityExpressionRootTests.hasPermissionOnDomainObjectReturnsFalseIfPermissionEvaluatorDoes()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(java.lang.String, java.lang.Object)
org.springframework.security.access.expression.method.MethodSecurityExpressionRoot.setPermissionEvaluator(org.springframework.security.access.PermissionEvaluator)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.access.PermissionEvaluator)
org.springframework.security.access.PermissionEvaluator.hasPermission(org.springframework.security.core.Authentication, java.lang.Object, java.lang.Object)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.access.expression.method.MethodSecurityExpressionRoot.hasPermission(java.lang.Object, java.lang.Object)
org.junit.Assert.assertFalse(Z)
858 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityExpressionRootTests.hasPermissionOnDomainObjectReturnsTrueIfPermissionEvaluatorDoes()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(java.lang.String, java.lang.Object)
org.springframework.security.access.expression.method.MethodSecurityExpressionRoot.setPermissionEvaluator(org.springframework.security.access.PermissionEvaluator)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.access.PermissionEvaluator)
org.springframework.security.access.PermissionEvaluator.hasPermission(org.springframework.security.core.Authentication, java.lang.Object, java.lang.Object)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.access.expression.method.MethodSecurityExpressionRoot.hasPermission(java.lang.Object, java.lang.Object)
org.junit.Assert.assertTrue(Z)
859 - Declaração do método: org.springframework.security.access.expression.method.MethodSecurityExpressionRootTests.hasPermissionOnDomainObjectWorksWithIntegerExpressions()
Métodos invocados: 
org.springframework.expression.spel.support.StandardEvaluationContext.setVariable(java.lang.String, java.lang.Object)
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.access.expression.method.MethodSecurityExpressionRoot.setPermissionEvaluator(org.springframework.security.access.PermissionEvaluator)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.exactly(I)
org.jmock.syntax.ReceiverClause.of(org.springframework.security.access.PermissionEvaluator)
org.jmock.Expectations.with(org.springframework.security.core.Authentication)
org.jmock.Expectations.with(java.lang.Object)
org.jmock.Expectations.any(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.springframework.security.access.PermissionEvaluator.hasPermission(org.springframework.security.core.Authentication, java.lang.Object, java.lang.Object)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.onConsecutiveCalls([Lorg.jmock.api.Action;)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(java.lang.String)
org.springframework.security.access.expression.ExpressionUtils.evaluateAsBoolean(org.springframework.expression.Expression, org.springframework.expression.EvaluationContext)
org.junit.Assert.assertTrue(Z)
org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(java.lang.String)
org.springframework.security.access.expression.ExpressionUtils.evaluateAsBoolean(org.springframework.expression.Expression, org.springframework.expression.EvaluationContext)
org.junit.Assert.assertTrue(Z)
org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(java.lang.String)
org.springframework.security.access.expression.ExpressionUtils.evaluateAsBoolean(org.springframework.expression.Expression, org.springframework.expression.EvaluationContext)
org.junit.Assert.assertFalse(Z)
860 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests.hasRoleExpressionAllowsUserWithRole()
Métodos invocados: 
org.springframework.security.access.expression.method.MethodExpressionVoterTests.methodTakingAnArray()
org.springframework.security.access.expression.method.MethodExpressionVoterTests.createAttributes([Lorg.springframework.security.access.ConfigAttribute;)
org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.junit.Assert.assertEquals(J, J)
861 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests.hasRoleExpressionDeniesUserWithoutRole()
Métodos invocados: 
java.util.List.add(org.springframework.security.access.ConfigAttribute)
org.springframework.security.access.expression.method.MethodExpressionVoterTests.methodTakingAnArray()
org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.junit.Assert.assertEquals(J, J)
862 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests.matchingArgAgainstAuthenticationNameIsSuccessful()
Métodos invocados: 
org.springframework.security.access.expression.method.MethodExpressionVoterTests.methodTakingAString()
org.springframework.security.access.expression.method.MethodExpressionVoterTests.createAttributes([Lorg.springframework.security.access.ConfigAttribute;)
org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.junit.Assert.assertEquals(J, J)
863 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests.accessIsGrantedIfNoPreAuthorizeAttributeIsUsed()
Métodos invocados: 
org.springframework.security.access.expression.method.MethodExpressionVoterTests.createCollectionArg([Ljava.lang.Object;)
org.springframework.security.access.expression.method.MethodExpressionVoterTests.methodTakingACollection()
org.springframework.security.access.expression.method.MethodExpressionVoterTests.createAttributes([Lorg.springframework.security.access.ConfigAttribute;)
org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.junit.Assert.assertEquals(J, J)
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
864 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests.collectionPreFilteringIsSuccessful()
Métodos invocados: 
org.springframework.security.access.expression.method.MethodExpressionVoterTests.createCollectionArg([Ljava.lang.Object;)
org.springframework.security.access.expression.method.MethodExpressionVoterTests.methodTakingACollection()
org.springframework.security.access.expression.method.MethodExpressionVoterTests.createAttributes([Lorg.springframework.security.access.ConfigAttribute;)
org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
java.util.List.size()
org.junit.Assert.assertEquals(java.lang.String, J, J)
java.util.List.get(I)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.List.get(I)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
865 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests.arraysCannotBePrefiltered()
Métodos invocados: 
org.springframework.security.access.expression.method.MethodExpressionVoterTests.methodTakingAnArray()
org.springframework.security.access.expression.method.MethodExpressionVoterTests.createArrayArg([Ljava.lang.Object;)
org.springframework.security.access.expression.method.MethodExpressionVoterTests.createAttributes([Lorg.springframework.security.access.ConfigAttribute;)
org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
866 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests.incorrectFilterTargetNameIsRejected()
Métodos invocados: 
org.springframework.security.access.expression.method.MethodExpressionVoterTests.methodTakingACollection()
org.springframework.security.access.expression.method.MethodExpressionVoterTests.createCollectionArg([Ljava.lang.Object;)
org.springframework.security.access.expression.method.MethodExpressionVoterTests.createAttributes([Lorg.springframework.security.access.ConfigAttribute;)
org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
867 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests.nullNamedFilterTargetIsRejected()
Métodos invocados: 
org.springframework.security.access.expression.method.MethodExpressionVoterTests.methodTakingACollection()
org.springframework.security.access.expression.method.MethodExpressionVoterTests.createAttributes([Lorg.springframework.security.access.ConfigAttribute;)
org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
868 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests.ruleDefinedInAClassMethodIsApplied()
Métodos invocados: 
org.springframework.security.access.expression.method.MethodExpressionVoterTests.methodTakingAString()
org.springframework.security.access.expression.method.MethodExpressionVoterTests.createAttributes([Lorg.springframework.security.access.ConfigAttribute;)
org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.junit.Assert.assertEquals(J, J)
869 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests.createAttributes([Lorg.springframework.security.access.ConfigAttribute;)
Métodos invocados: 
java.util.Arrays.asList([Lorg.springframework.security.access.ConfigAttribute;)
870 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests.createCollectionArg([Ljava.lang.Object;)
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
java.util.ArrayList.addAll(java.util.Collection)
871 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests.createArrayArg([Ljava.lang.Object;)
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
java.util.ArrayList.addAll(java.util.Collection)
java.util.ArrayList.toArray([Ljava.lang.Object;)
872 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests.methodTakingAnArray()
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
873 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests.methodTakingAString()
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
874 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests.methodTakingACollection()
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
875 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests$Target.methodTakingAnArray([Ljava.lang.Object;)
875 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests$Target.methodTakingAString(java.lang.String)
875 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests$Target.methodTakingACollection(java.util.Collection)
875 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests$TargetImpl.methodTakingAnArray([Ljava.lang.Object;)
875 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests$TargetImpl.methodTakingAString(java.lang.String)
875 - Declaração do método: org.springframework.security.access.expression.method.MethodExpressionVoterTests$TargetImpl.methodTakingACollection(java.util.Collection)
875 - Declaração do método: org.springframework.security.access.expression.method.SecurityRules.disallow()
875 - Declaração do método: org.springframework.security.access.expression.method.SecurityRules.allow()
875 - Declaração do método: org.springframework.security.access.expression.method.SecurityRules.isJoe(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
876 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapperTests.UserDetailsWrapperTests()
876 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapperTests.UserDetailsWrapperTests(java.lang.String)
876 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapperTests.setUp()
Métodos invocados: 
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
877 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapperTests.testIsAccountNonExpired()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.isAccountNonExpired()
org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.isAccountNonExpired()
junit.framework.Assert.assertEquals(Z, Z)
org.springframework.security.core.userdetails.UserDetails.isAccountNonExpired()
org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.isAccountNonExpired()
junit.framework.Assert.assertEquals(Z, Z)
878 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapperTests.testIsAccountNonLocked()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.isAccountNonLocked()
org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.isAccountNonLocked()
junit.framework.Assert.assertEquals(Z, Z)
org.springframework.security.core.userdetails.UserDetails.isAccountNonLocked()
org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.isAccountNonLocked()
junit.framework.Assert.assertEquals(Z, Z)
879 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapperTests.testGetAuthorities()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.getAuthorities()
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.getAuthorities()
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
junit.framework.Assert.assertTrue(Z)
880 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapperTests.testIsCredentialsNonExpired()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.isCredentialsNonExpired()
org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.isCredentialsNonExpired()
junit.framework.Assert.assertEquals(Z, Z)
org.springframework.security.core.userdetails.UserDetails.isCredentialsNonExpired()
org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.isCredentialsNonExpired()
junit.framework.Assert.assertEquals(Z, Z)
881 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapperTests.testIsEnabled()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.isEnabled()
org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.isEnabled()
junit.framework.Assert.assertEquals(Z, Z)
org.springframework.security.core.userdetails.UserDetails.isEnabled()
org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.isEnabled()
junit.framework.Assert.assertEquals(Z, Z)
882 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapperTests.testGetPassword()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
883 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapperTests.testGetUsername()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
884 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsWrapperTests.testGetUnwrappedUserDetails()
Métodos invocados: 
org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.getUnwrappedUserDetails()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.UserDetailsWrapper.getUnwrappedUserDetails()
junit.framework.Assert.assertTrue(Z)
885 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsServiceWrapperTests.setUp()
Métodos invocados: 
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.allowing(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.allowing(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.jmock.Expectations.throwException(java.lang.Throwable)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.access.hierarchicalroles.UserDetailsServiceWrapper.setRoleHierarchy(org.springframework.security.access.hierarchicalroles.RoleHierarchy)
org.springframework.security.access.hierarchicalroles.UserDetailsServiceWrapper.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
886 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsServiceWrapperTests.testLoadUserByUsername()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.access.hierarchicalroles.UserDetailsServiceWrapper.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.UserDetails.isAccountNonExpired()
org.springframework.security.core.userdetails.UserDetails.isAccountNonExpired()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.UserDetails.isAccountNonLocked()
org.springframework.security.core.userdetails.UserDetails.isAccountNonLocked()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.UserDetails.isCredentialsNonExpired()
org.springframework.security.core.userdetails.UserDetails.isCredentialsNonExpired()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.UserDetails.isEnabled()
org.springframework.security.core.userdetails.UserDetails.isEnabled()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.UserDetailsServiceWrapper.loadUserByUsername(java.lang.String)
org.junit.Assert.fail(java.lang.String)
887 - Declaração do método: org.springframework.security.access.hierarchicalroles.UserDetailsServiceWrapperTests.testGetWrappedUserDetailsService()
Métodos invocados: 
org.springframework.security.access.hierarchicalroles.UserDetailsServiceWrapper.getWrappedUserDetailsService()
org.junit.Assert.assertTrue(Z)
888 - Declaração do método: org.springframework.security.access.hierarchicalroles.TestHelperTests.testContainTheSameGrantedAuthorities()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertFalse(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertFalse(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertFalse(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertFalse(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertFalse(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertFalse(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertFalse(Z)
889 - Declaração do método: org.springframework.security.access.hierarchicalroles.TestHelperTests.testToListOfAuthorityStrings()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.toCollectionOfAuthorityStrings(java.util.Collection)
org.apache.commons.collections.CollectionUtils.isEqualCollection(java.util.Collection, java.util.Collection)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.toCollectionOfAuthorityStrings(java.util.Collection)
org.apache.commons.collections.CollectionUtils.isEqualCollection(java.util.Collection, java.util.Collection)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.toCollectionOfAuthorityStrings(java.util.Collection)
org.apache.commons.collections.CollectionUtils.isEqualCollection(java.util.Collection, java.util.Collection)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.toCollectionOfAuthorityStrings(java.util.Collection)
org.apache.commons.collections.CollectionUtils.isEqualCollection(java.util.Collection, java.util.Collection)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.toCollectionOfAuthorityStrings(java.util.Collection)
org.apache.commons.collections.CollectionUtils.isEqualCollection(java.util.Collection, java.util.Collection)
org.junit.Assert.assertTrue(Z)
890 - Declaração do método: org.springframework.security.access.hierarchicalroles.TestHelperTests.testContainTheSameGrantedAuthoritiesCompareByAuthorityString()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertFalse(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertFalse(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertFalse(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertFalse(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertFalse(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertFalse(Z)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
org.junit.Assert.assertFalse(Z)
891 - Declaração do método: org.springframework.security.access.hierarchicalroles.TestHelperTests.testContainTheSameGrantedAuthoritiesCompareByAuthorityStringWithAuthorityLists()
Métodos invocados: 
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthoritiesCompareByAuthorityString(java.util.Collection, java.util.Collection)
org.junit.Assert.assertTrue(Z)
892 - Declaração do método: org.springframework.security.access.hierarchicalroles.TestHelperTests.testCreateAuthorityList()
Métodos invocados: 
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.createAuthorityList([Ljava.lang.String;)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.springframework.security.core.GrantedAuthority.getAuthority()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.createAuthorityList([Ljava.lang.String;)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.springframework.security.core.GrantedAuthority.getAuthority()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.List.get(I)
org.springframework.security.core.GrantedAuthority.getAuthority()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
893 - Declaração do método: org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
Métodos invocados: 
org.apache.commons.collections.CollectionUtils.isEqualCollection(java.util.Collection, java.util.Collection)
894 - Declaração do método: org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthoritiesCompareByAuthorityString(java.util.Collection, java.util.Collection)
Métodos invocados: 
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.toCollectionOfAuthorityStrings(java.util.Collection)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.toCollectionOfAuthorityStrings(java.util.Collection)
org.apache.commons.collections.CollectionUtils.isEqualCollection(java.util.Collection, java.util.Collection)
895 - Declaração do método: org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.toCollectionOfAuthorityStrings(java.util.Collection)
Métodos invocados: 
java.util.Collection.size()
org.springframework.security.core.GrantedAuthority.getAuthority()
java.util.List.add(java.lang.String)
896 - Declaração do método: org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.createAuthorityList([Ljava.lang.String;)
Métodos invocados: 
java.util.List.add(org.springframework.security.core.GrantedAuthority)
897 - Declaração do método: org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper$1.getAuthority()
897 - Declaração do método: org.springframework.security.access.hierarchicalroles.RoleHierarchyImplTests.testRoleHierarchyWithNullOrEmptyAuthorities()
Métodos invocados: 
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities(java.util.Collection)
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities(java.util.Collection)
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities(java.util.Collection)
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities(java.util.Collection)
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
898 - Declaração do método: org.springframework.security.access.hierarchicalroles.RoleHierarchyImplTests.testSimpleRoleHierarchy()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities(java.util.Collection)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities(java.util.Collection)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities(java.util.Collection)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
junit.framework.Assert.assertTrue(Z)
899 - Declaração do método: org.springframework.security.access.hierarchicalroles.RoleHierarchyImplTests.testTransitiveRoleHierarchies()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities(java.util.Collection)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities(java.util.Collection)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
junit.framework.Assert.assertTrue(Z)
900 - Declaração do método: org.springframework.security.access.hierarchicalroles.RoleHierarchyImplTests.testComplexRoleHierarchy()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities(java.util.Collection)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities(java.util.Collection)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities(java.util.Collection)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities(java.util.Collection)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities(java.util.Collection, java.util.Collection)
junit.framework.Assert.assertTrue(Z)
901 - Declaração do método: org.springframework.security.access.hierarchicalroles.RoleHierarchyImplTests.testCyclesInRoleHierarchy()
Métodos invocados: 
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
902 - Declaração do método: org.springframework.security.access.hierarchicalroles.RoleHierarchyImplTests.testNoCyclesInRoleHierarchy()
Métodos invocados: 
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
903 - Declaração do método: org.springframework.security.access.hierarchicalroles.RoleHierarchyImplTests.testSimpleRoleHierarchyWithCustomGrantedAuthorityImplementation()
Métodos invocados: 
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.createAuthorityList([Ljava.lang.String;)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.createAuthorityList([Ljava.lang.String;)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.createAuthorityList([Ljava.lang.String;)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities(java.util.Collection)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthoritiesCompareByAuthorityString(java.util.Collection, java.util.Collection)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities(java.util.Collection)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthoritiesCompareByAuthorityString(java.util.Collection, java.util.Collection)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities(java.util.Collection)
org.springframework.security.access.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthoritiesCompareByAuthorityString(java.util.Collection, java.util.Collection)
junit.framework.Assert.assertTrue(Z)
904 - Declaração do método: org.springframework.security.access.intercept.RunAsManagerImplTests.testAlwaysSupportsClass()
Métodos invocados: 
org.springframework.security.access.intercept.RunAsManagerImpl.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
905 - Declaração do método: org.springframework.security.access.intercept.RunAsManagerImplTests.testDoesNotReturnAdditionalAuthoritiesIfCalledWithoutARunAsSetting()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.access.intercept.RunAsManagerImpl.setKey(java.lang.String)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.intercept.RunAsManagerImpl.buildRunAs(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
906 - Declaração do método: org.springframework.security.access.intercept.RunAsManagerImplTests.testRespectsRolePrefix()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.access.intercept.RunAsManagerImpl.setKey(java.lang.String)
org.springframework.security.access.intercept.RunAsManagerImpl.setRolePrefix(java.lang.String)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.intercept.RunAsManagerImpl.buildRunAs(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getPrincipal()
org.springframework.security.core.Authentication.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getCredentials()
org.springframework.security.core.Authentication.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.Authentication.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.lang.String.hashCode()
org.springframework.security.access.intercept.RunAsUserToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
907 - Declaração do método: org.springframework.security.access.intercept.RunAsManagerImplTests.testReturnsAdditionalGrantedAuthorities()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.access.intercept.RunAsManagerImpl.setKey(java.lang.String)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.intercept.RunAsManagerImpl.buildRunAs(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getPrincipal()
org.springframework.security.core.Authentication.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getCredentials()
org.springframework.security.core.Authentication.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.Authentication.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.lang.String.hashCode()
org.springframework.security.access.intercept.RunAsUserToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
908 - Declaração do método: org.springframework.security.access.intercept.RunAsManagerImplTests.testStartupDetectsMissingKey()
Métodos invocados: 
org.springframework.security.access.intercept.RunAsManagerImpl.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
909 - Declaração do método: org.springframework.security.access.intercept.RunAsManagerImplTests.testStartupSuccessfulWithKey()
Métodos invocados: 
org.springframework.security.access.intercept.RunAsManagerImpl.setKey(java.lang.String)
org.springframework.security.access.intercept.RunAsManagerImpl.afterPropertiesSet()
org.springframework.security.access.intercept.RunAsManagerImpl.getKey()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
910 - Declaração do método: org.springframework.security.access.intercept.RunAsManagerImplTests.testSupports()
Métodos invocados: 
org.springframework.security.access.intercept.RunAsManager.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.intercept.RunAsManager.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.intercept.RunAsManager.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
911 - Declaração do método: org.springframework.security.access.intercept.NullRunAsManagerTests.setUp()
911 - Declaração do método: org.springframework.security.access.intercept.NullRunAsManagerTests.testAlwaysReturnsNull()
Métodos invocados: 
org.springframework.security.access.intercept.NullRunAsManager.buildRunAs(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.assertNull(java.lang.Object)
912 - Declaração do método: org.springframework.security.access.intercept.NullRunAsManagerTests.testAlwaysSupportsClass()
Métodos invocados: 
org.springframework.security.access.intercept.NullRunAsManager.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
913 - Declaração do método: org.springframework.security.access.intercept.NullRunAsManagerTests.testNeverSupportsAttribute()
Métodos invocados: 
org.springframework.security.access.intercept.NullRunAsManager.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertFalse(Z)
914 - Declaração do método: org.springframework.security.access.intercept.RunAsUserTokenTests.RunAsUserTokenTests()
914 - Declaração do método: org.springframework.security.access.intercept.RunAsUserTokenTests.RunAsUserTokenTests(java.lang.String)
914 - Declaração do método: org.springframework.security.access.intercept.RunAsUserTokenTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
915 - Declaração do método: org.springframework.security.access.intercept.RunAsUserTokenTests.setUp()
915 - Declaração do método: org.springframework.security.access.intercept.RunAsUserTokenTests.testAuthenticationSetting()
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.setAuthenticated(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
916 - Declaração do método: org.springframework.security.access.intercept.RunAsUserTokenTests.testGetters()
Métodos invocados: 
org.springframework.security.access.intercept.RunAsUserToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.intercept.RunAsUserToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.String.hashCode()
org.springframework.security.access.intercept.RunAsUserToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.access.intercept.RunAsUserToken.getOriginalAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
917 - Declaração do método: org.springframework.security.access.intercept.RunAsUserTokenTests.testNoArgConstructorDoesntExist()
Métodos invocados: 
java.lang.Class.getDeclaredConstructor([Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
918 - Declaração do método: org.springframework.security.access.intercept.RunAsUserTokenTests.testToString()
Métodos invocados: 
org.springframework.security.access.intercept.RunAsUserToken.toString()
java.lang.String.lastIndexOf(java.lang.String)
junit.framework.Assert.assertTrue(Z)
919 - Declaração do método: org.springframework.security.access.intercept.RunAsImplAuthenticationProviderTests.RunAsImplAuthenticationProviderTests()
919 - Declaração do método: org.springframework.security.access.intercept.RunAsImplAuthenticationProviderTests.RunAsImplAuthenticationProviderTests(java.lang.String)
919 - Declaração do método: org.springframework.security.access.intercept.RunAsImplAuthenticationProviderTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
920 - Declaração do método: org.springframework.security.access.intercept.RunAsImplAuthenticationProviderTests.setUp()
920 - Declaração do método: org.springframework.security.access.intercept.RunAsImplAuthenticationProviderTests.testAuthenticationFailDueToWrongKey()
Métodos invocados: 
org.springframework.security.access.intercept.RunAsImplAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.access.intercept.RunAsImplAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
921 - Declaração do método: org.springframework.security.access.intercept.RunAsImplAuthenticationProviderTests.testAuthenticationSuccess()
Métodos invocados: 
org.springframework.security.access.intercept.RunAsImplAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.access.intercept.RunAsImplAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
java.lang.String.hashCode()
org.springframework.security.access.intercept.RunAsUserToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
922 - Declaração do método: org.springframework.security.access.intercept.RunAsImplAuthenticationProviderTests.testStartupFailsIfNoKey()
Métodos invocados: 
org.springframework.security.access.intercept.RunAsImplAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
923 - Declaração do método: org.springframework.security.access.intercept.RunAsImplAuthenticationProviderTests.testStartupSuccess()
Métodos invocados: 
org.springframework.security.access.intercept.RunAsImplAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.access.intercept.RunAsImplAuthenticationProvider.getKey()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.access.intercept.RunAsImplAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.assertTrue(Z)
924 - Declaração do método: org.springframework.security.access.intercept.RunAsImplAuthenticationProviderTests.testSupports()
Métodos invocados: 
org.springframework.security.access.intercept.RunAsImplAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.intercept.RunAsImplAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
925 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptorTests.detectsIfInvocationPassedIncompatibleSecureObject()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.access.intercept.RunAsManager)
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAfterInvocationManager(org.springframework.security.access.intercept.AfterInvocationManager)
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.access.AccessDecisionManager)
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptorTests$MockSecurityInterceptorWhichOnlySupportsStrings.setSecurityMetadataSource(org.springframework.security.access.SecurityMetadataSource)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.anything()
org.jmock.Expectations.ignoring(org.hamcrest.Matcher)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.beforeInvocation(java.lang.Object)
926 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptorTests.detectsViolationOfGetSecureObjectClassMethod()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.access.intercept.RunAsManager)
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAfterInvocationManager(org.springframework.security.access.intercept.AfterInvocationManager)
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.access.AccessDecisionManager)
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptorTests$MockSecurityInterceptorReturnsNull.setSecurityMetadataSource(org.springframework.security.access.SecurityMetadataSource)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.anything()
org.jmock.Expectations.ignoring(org.hamcrest.Matcher)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
927 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptorTests$MockSecurityInterceptorReturnsNull.getSecureObjectClass()
927 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptorTests$MockSecurityInterceptorReturnsNull.obtainSecurityMetadataSource()
927 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptorTests$MockSecurityInterceptorReturnsNull.setSecurityMetadataSource(org.springframework.security.access.SecurityMetadataSource)
927 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptorTests$MockSecurityInterceptorWhichOnlySupportsStrings.getSecureObjectClass()
927 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptorTests$MockSecurityInterceptorWhichOnlySupportsStrings.obtainSecurityMetadataSource()
927 - Declaração do método: org.springframework.security.access.intercept.AbstractSecurityInterceptorTests$MockSecurityInterceptorWhichOnlySupportsStrings.setSecurityMetadataSource(org.springframework.security.access.SecurityMetadataSource)
927 - Declaração do método: org.springframework.security.access.intercept.InterceptorStatusTokenTests.testOperation()
Métodos invocados: 
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.intercept.InterceptorStatusToken.isContextHolderRefreshRequired()
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.intercept.InterceptorStatusToken.getAttributes()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.intercept.InterceptorStatusToken.getSecureObject()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.intercept.InterceptorStatusToken.getAuthentication()
org.springframework.security.core.Authentication.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
928 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationProviderManagerTests.testCorrectOperation()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.access.intercept.AfterInvocationProviderManager.setProviders(java.util.List)
org.springframework.security.access.intercept.AfterInvocationProviderManager.getProviders()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.intercept.AfterInvocationProviderManager.afterPropertiesSet()
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.intercept.AfterInvocationProviderManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.intercept.AfterInvocationProviderManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.intercept.AfterInvocationProviderManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.intercept.AfterInvocationProviderManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.intercept.AfterInvocationProviderManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
929 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationProviderManagerTests.testRejectsEmptyProvidersList()
Métodos invocados: 
org.springframework.security.access.intercept.AfterInvocationProviderManager.setProviders(java.util.List)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
930 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationProviderManagerTests.testRejectsNonAfterInvocationProviders()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.access.intercept.AfterInvocationProviderManager.setProviders(java.util.List)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
931 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationProviderManagerTests.testRejectsNullProvidersList()
Métodos invocados: 
org.springframework.security.access.intercept.AfterInvocationProviderManager.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
932 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationProviderManagerTests.testSupportsConfigAttributeIteration()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.access.intercept.AfterInvocationProviderManager.setProviders(java.util.List)
org.springframework.security.access.intercept.AfterInvocationProviderManager.afterPropertiesSet()
org.springframework.security.access.intercept.AfterInvocationProviderManager.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.access.intercept.AfterInvocationProviderManager.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
933 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationProviderManagerTests.testSupportsSecureObjectIteration()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.access.intercept.AfterInvocationProviderManager.setProviders(java.util.List)
org.springframework.security.access.intercept.AfterInvocationProviderManager.afterPropertiesSet()
org.springframework.security.access.intercept.AfterInvocationProviderManager.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
934 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationProviderManagerTests$MockAfterInvocationProvider.MockAfterInvocationProvider(java.lang.Object, java.lang.Class, org.springframework.security.access.ConfigAttribute)
934 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationProviderManagerTests$MockAfterInvocationProvider.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection, java.lang.Object)
Métodos invocados: 
java.util.Collection.contains(java.lang.Object)
935 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationProviderManagerTests$MockAfterInvocationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
936 - Declaração do método: org.springframework.security.access.intercept.AfterInvocationProviderManagerTests$MockAfterInvocationProvider.supports(org.springframework.security.access.ConfigAttribute)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
937 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisorTests.testAdvisorReturnsFalseWhenMethodInvocationNotDefined()
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.access.method.MethodSecurityMetadataSource.getAttributes(java.lang.reflect.Method, java.lang.Class)
org.mockito.Mockito.when(java.util.Collection)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.util.Collection)
org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor.getPointcut()
org.springframework.aop.Pointcut.getMethodMatcher()
org.springframework.aop.MethodMatcher.matches(java.lang.reflect.Method, java.lang.Class)
junit.framework.Assert.assertFalse(Z)
938 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisorTests.testAdvisorReturnsTrueWhenMethodInvocationIsDefined()
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.access.method.MethodSecurityMetadataSource.getAttributes(java.lang.reflect.Method, java.lang.Class)
org.mockito.Mockito.when(java.util.Collection)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.util.Collection)
org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor.getPointcut()
org.springframework.aop.Pointcut.getMethodMatcher()
org.springframework.aop.MethodMatcher.matches(java.lang.reflect.Method, java.lang.Class)
junit.framework.Assert.assertTrue(Z)
939 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.setUp()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.access.AccessDecisionManager)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.setSecurityMetadataSource(org.springframework.security.access.method.MethodSecurityMetadataSource)
org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.createTarget(Z)
org.jmock.Expectations.oneOf(org.springframework.security.access.method.MethodSecurityMetadataSource)
org.jmock.Expectations.any(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.springframework.security.access.SecurityMetadataSource.getAttributes(java.lang.Object)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.oneOf(org.springframework.security.access.method.MethodSecurityMetadataSource)
org.jmock.Expectations.any(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.springframework.security.access.SecurityMetadataSource.getAttributes(java.lang.Object)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
940 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.tearDown()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
941 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.createTarget(Z)
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.aop.framework.AdvisedSupport.addAdvice(org.aopalliance.aop.Advice)
org.springframework.aop.framework.ProxyFactory.getProxy()
942 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.gettersReturnExpectedData()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.access.intercept.RunAsManager)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAfterInvocationManager(org.springframework.security.access.intercept.AfterInvocationManager)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getAccessDecisionManager()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getRunAsManager()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getAuthenticationManager()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.getSecurityMetadataSource()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getAfterInvocationManager()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
943 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.missingAccessDecisionManagerIsDetected()
Métodos invocados: 
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.access.AccessDecisionManager)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
944 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.missingAuthenticationManagerIsDetected()
Métodos invocados: 
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
945 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.missingMethodSecurityMetadataSourceIsRejected()
Métodos invocados: 
org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.setSecurityMetadataSource(org.springframework.security.access.method.MethodSecurityMetadataSource)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
946 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.missingRunAsManagerIsRejected()
Métodos invocados: 
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.access.intercept.RunAsManager)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
947 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.initializationRejectsSecurityMetadataSourceThatDoesNotSupportMethodInvocation()
Métodos invocados: 
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.access.method.MethodSecurityMetadataSource)
org.springframework.security.access.SecurityMetadataSource.supports(java.lang.Class)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
948 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.initializationRejectsAccessDecisionManagerThatDoesNotSupportMethodInvocation()
Métodos invocados: 
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.access.method.MethodSecurityMetadataSource)
org.springframework.security.access.SecurityMetadataSource.supports(java.lang.Class)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.oneOf(org.springframework.security.access.AccessDecisionManager)
org.springframework.security.access.AccessDecisionManager.supports(java.lang.Class)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
949 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.intitalizationRejectsRunAsManagerThatDoesNotSupportMethodInvocation()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.ignoring(org.springframework.security.access.method.MethodSecurityMetadataSource)
org.jmock.Expectations.oneOf(org.springframework.security.access.intercept.RunAsManager)
org.springframework.security.access.intercept.RunAsManager.supports(java.lang.Class)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.access.intercept.RunAsManager)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
950 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.intitalizationRejectsAfterInvocationManagerThatDoesNotSupportMethodInvocation()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.access.intercept.AfterInvocationManager)
org.springframework.security.access.intercept.AfterInvocationManager.supports(java.lang.Class)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.anything()
org.jmock.Expectations.ignoring(org.hamcrest.Matcher)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAfterInvocationManager(org.springframework.security.access.intercept.AfterInvocationManager)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
951 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.initializationFailsIfAccessDecisionManagerRejectsConfigAttributes()
Métodos invocados: 
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.access.AccessDecisionManager)
org.jmock.Expectations.aNonNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.springframework.security.access.AccessDecisionManager.supports(org.springframework.security.access.ConfigAttribute)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.anything()
org.jmock.Expectations.ignoring(org.hamcrest.Matcher)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
952 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.validationNotAttemptedIfIsValidateConfigAttributesSetToFalse()
Métodos invocados: 
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.access.method.MethodSecurityMetadataSource)
org.springframework.security.access.SecurityMetadataSource.supports(java.lang.Class)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.oneOf(org.springframework.security.access.AccessDecisionManager)
org.springframework.security.access.AccessDecisionManager.supports(java.lang.Class)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.never(org.springframework.security.access.method.MethodSecurityMetadataSource)
org.springframework.security.access.SecurityMetadataSource.getAllConfigAttributes()
org.jmock.Expectations.never(org.springframework.security.access.AccessDecisionManager)
org.jmock.Expectations.any(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.springframework.security.access.AccessDecisionManager.supports(org.springframework.security.access.ConfigAttribute)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setValidateConfigAttributes(Z)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
953 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.validationNotAttemptedIfMethodSecurityMetadataSourceReturnsNullForAttributes()
Métodos invocados: 
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.access.method.MethodSecurityMetadataSource)
org.springframework.security.access.SecurityMetadataSource.supports(java.lang.Class)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.oneOf(org.springframework.security.access.AccessDecisionManager)
org.springframework.security.access.AccessDecisionManager.supports(java.lang.Class)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.oneOf(org.springframework.security.access.method.MethodSecurityMetadataSource)
org.springframework.security.access.SecurityMetadataSource.getAllConfigAttributes()
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.never(org.springframework.security.access.AccessDecisionManager)
org.jmock.Expectations.any(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.springframework.security.access.AccessDecisionManager.supports(org.springframework.security.access.ConfigAttribute)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setValidateConfigAttributes(Z)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
954 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.callingAPublicMethodFacadeWillNotRepeatSecurityChecksWhenPassedToTheSecuredMethodItFronts()
Métodos invocados: 
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.springframework.security.ITargetObject.publicMakeLowerCase(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.jmock.Mockery.assertIsSatisfied()
955 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.callingAPublicMethodWhenPresentingAnAuthenticationObjectDoesntChangeItsAuthenticatedProperty()
Métodos invocados: 
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.ITargetObject.publicMakeLowerCase(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
org.junit.Assert.assertTrue(Z)
956 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.callIsWhenAuthenticationManagerRejectsAuthentication()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.jmock.Expectations.throwException(java.lang.Throwable)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.ITargetObject.makeLowerCase(java.lang.String)
957 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.callSucceedsIfAccessDecisionManagerGrantsAccess()
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.setAuthenticated(Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.access.AccessDecisionManager)
org.jmock.Expectations.with(org.springframework.security.authentication.TestingAuthenticationToken)
org.jmock.Expectations.aNonNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.jmock.Expectations.aNonNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.springframework.security.access.AccessDecisionManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.springframework.security.ITargetObject.makeLowerCase(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
958 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.callIsntMadeWhenAccessDecisionManagerRejectsAccess()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.createTarget(Z)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.oneOf(org.springframework.security.access.AccessDecisionManager)
org.jmock.Expectations.with(org.springframework.security.authentication.TestingAuthenticationToken)
org.jmock.Expectations.aNonNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.jmock.Expectations.aNonNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.springframework.security.access.AccessDecisionManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.jmock.Expectations.throwException(java.lang.Throwable)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.ITargetObject.makeUpperCase(java.lang.String)
959 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.rejectsNullSecuredObjects()
Métodos invocados: 
org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(org.aopalliance.intercept.MethodInvocation)
960 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.runAsReplacementIsCorrectlySet()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.authentication.AbstractAuthenticationToken.setAuthenticated(Z)
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.access.intercept.RunAsManager)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.access.intercept.RunAsManager)
org.jmock.Expectations.with(org.springframework.security.authentication.TestingAuthenticationToken)
org.jmock.Expectations.aNonNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.jmock.Expectations.aNonNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.springframework.security.access.intercept.RunAsManager.buildRunAs(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.anything()
org.jmock.Expectations.ignoring(org.hamcrest.Matcher)
org.springframework.security.ITargetObject.makeUpperCase(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
961 - Declaração do método: org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptorTests.emptySecurityContextIsRejected()
Métodos invocados: 
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.anything()
org.jmock.Expectations.ignoring(org.hamcrest.Matcher)
org.springframework.security.ITargetObject.makeUpperCase(java.lang.String)
962 - Declaração do método: org.springframework.security.access.intercept.aspectj.AspectJSecurityInterceptorTests.setUp()
Métodos invocados: 
org.mockito.MockitoAnnotations.initMocks(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.access.AccessDecisionManager)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.access.intercept.aspectj.AspectJSecurityInterceptor.setSecurityMetadataSource(org.springframework.security.access.method.MethodSecurityMetadataSource)
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.access.SecurityMetadataSource.getAttributes(java.lang.Object)
org.mockito.Mockito.when(java.util.Collection)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.util.Collection)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenReturn(org.springframework.security.core.Authentication)
963 - Declaração do método: org.springframework.security.access.intercept.aspectj.AspectJSecurityInterceptorTests.clearContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
964 - Declaração do método: org.springframework.security.access.intercept.aspectj.AspectJSecurityInterceptorTests.callbackIsInvokedWhenPermissionGranted()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.access.intercept.aspectj.AspectJSecurityInterceptor.invoke(org.aspectj.lang.JoinPoint, org.springframework.security.access.intercept.aspectj.AspectJCallback)
org.mockito.Mockito.verify(org.springframework.security.access.intercept.aspectj.AspectJCallback)
org.springframework.security.access.intercept.aspectj.AspectJCallback.proceedWithObject()
965 - Declaração do método: org.springframework.security.access.intercept.aspectj.AspectJSecurityInterceptorTests.callbackIsNotInvokedWhenPermissionDenied()
Métodos invocados: 
org.mockito.Mockito.doThrow(java.lang.Throwable)
org.mockito.stubbing.Stubber.when(org.springframework.security.access.AccessDecisionManager)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any()
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.access.AccessDecisionManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.access.intercept.aspectj.AspectJSecurityInterceptor.invoke(org.aspectj.lang.JoinPoint, org.springframework.security.access.intercept.aspectj.AspectJCallback)
org.junit.Assert.fail(java.lang.String)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(org.springframework.security.access.intercept.aspectj.AspectJCallback, org.mockito.internal.verification.api.VerificationMode)
org.springframework.security.access.intercept.aspectj.AspectJCallback.proceedWithObject()
966 - Declaração do método: org.springframework.security.access.intercept.method.MapBasedMethodSecurityMetadataSourceTests.initialize()
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
967 - Declaração do método: org.springframework.security.access.intercept.method.MapBasedMethodSecurityMetadataSourceTests.wildcardedMatchIsOverwrittenByMoreSpecificMatch()
Métodos invocados: 
org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.addSecureMethod(java.lang.Class, java.lang.String, java.util.List)
org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.addSecureMethod(java.lang.Class, java.lang.String, java.util.List)
org.springframework.security.access.method.AbstractFallbackMethodSecurityMetadataSource.getAttributes(java.lang.reflect.Method, java.lang.Class)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
968 - Declaração do método: org.springframework.security.access.intercept.method.MapBasedMethodSecurityMetadataSourceTests.methodsWithDifferentArgumentsAreMatchedCorrectly()
Métodos invocados: 
org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.addSecureMethod(java.lang.Class, java.lang.reflect.Method, java.util.List)
org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource.addSecureMethod(java.lang.Class, java.lang.reflect.Method, java.util.List)
org.springframework.security.access.method.AbstractFallbackMethodSecurityMetadataSource.getAttributes(java.lang.reflect.Method, java.lang.Class)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.access.method.AbstractFallbackMethodSecurityMetadataSource.getAttributes(java.lang.reflect.Method, java.lang.Class)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
969 - Declaração do método: org.springframework.security.access.intercept.method.MapBasedMethodSecurityMetadataSourceTests$MockService.someMethod(java.lang.String)
969 - Declaração do método: org.springframework.security.access.intercept.method.MapBasedMethodSecurityMetadataSourceTests$MockService.someMethod(java.lang.Integer)
969 - Declaração do método: org.springframework.security.access.intercept.method.MockMethodInvocation.MockMethodInvocation(java.lang.Object, java.lang.Class, java.lang.String, [Ljava.lang.Class;)
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
970 - Declaração do método: org.springframework.security.access.intercept.method.MockMethodInvocation.getArguments()
970 - Declaração do método: org.springframework.security.access.intercept.method.MockMethodInvocation.getMethod()
970 - Declaração do método: org.springframework.security.access.intercept.method.MockMethodInvocation.getStaticPart()
970 - Declaração do método: org.springframework.security.access.intercept.method.MockMethodInvocation.getThis()
970 - Declaração do método: org.springframework.security.access.intercept.method.MockMethodInvocation.proceed()
970 - Declaração do método: org.springframework.security.access.intercept.method.MockMethodSecurityMetadataSource.MockMethodSecurityMetadataSource(Z, Z)
Métodos invocados: 
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
java.util.List.addAll(java.util.Collection)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
java.util.List.addAll(java.util.Collection)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
java.util.List.addAll(java.util.Collection)
971 - Declaração do método: org.springframework.security.access.intercept.method.MockMethodSecurityMetadataSource.getAllConfigAttributes()
971 - Declaração do método: org.springframework.security.access.intercept.method.MockMethodSecurityMetadataSource.getAttributes(java.lang.Object)
971 - Declaração do método: org.springframework.security.access.intercept.method.MockMethodSecurityMetadataSource.getAttributes(java.lang.reflect.Method, java.lang.Class)
971 - Declaração do método: org.springframework.security.access.intercept.method.MockMethodSecurityMetadataSource.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.isAssignableFrom(java.lang.Class)
972 - Declaração do método: org.springframework.security.access.intercept.method.MethodInvocationPrivilegeEvaluatorTests.setUp()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.access.AccessDecisionManager)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.setSecurityMetadataSource(org.springframework.security.access.method.MethodSecurityMetadataSource)
973 - Declaração do método: org.springframework.security.access.intercept.method.MethodInvocationPrivilegeEvaluatorTests.allowsAccessUsingCreate()
Métodos invocados: 
org.springframework.security.util.MethodInvocationUtils.create(java.lang.Object, java.lang.String, [Ljava.lang.Object;)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.access.method.MethodSecurityMetadataSource)
org.springframework.security.access.SecurityMetadataSource.getAttributes(java.lang.Object)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.oneOf(org.springframework.security.access.AccessDecisionManager)
org.springframework.security.access.AccessDecisionManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.springframework.security.access.intercept.MethodInvocationPrivilegeEvaluator.setSecurityInterceptor(org.springframework.security.access.intercept.AbstractSecurityInterceptor)
org.springframework.security.access.intercept.MethodInvocationPrivilegeEvaluator.afterPropertiesSet()
org.springframework.security.access.intercept.MethodInvocationPrivilegeEvaluator.isAllowed(org.aopalliance.intercept.MethodInvocation, org.springframework.security.core.Authentication)
org.junit.Assert.assertTrue(Z)
974 - Declaração do método: org.springframework.security.access.intercept.method.MethodInvocationPrivilegeEvaluatorTests.allowsAccessUsingCreateFromClass()
Métodos invocados: 
org.springframework.security.util.MethodInvocationUtils.createFromClass(java.lang.Object, java.lang.Class, java.lang.String, [Ljava.lang.Class;, [Ljava.lang.Object;)
org.springframework.security.access.intercept.MethodInvocationPrivilegeEvaluator.setSecurityInterceptor(org.springframework.security.access.intercept.AbstractSecurityInterceptor)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.access.method.MethodSecurityMetadataSource)
org.springframework.security.access.SecurityMetadataSource.getAttributes(java.lang.Object)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.oneOf(org.springframework.security.access.AccessDecisionManager)
org.springframework.security.access.AccessDecisionManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.springframework.security.access.intercept.MethodInvocationPrivilegeEvaluator.isAllowed(org.aopalliance.intercept.MethodInvocation, org.springframework.security.core.Authentication)
org.junit.Assert.assertTrue(Z)
975 - Declaração do método: org.springframework.security.access.intercept.method.MethodInvocationPrivilegeEvaluatorTests.declinesAccessUsingCreate()
Métodos invocados: 
org.springframework.security.util.MethodInvocationUtils.create(java.lang.Object, java.lang.String, [Ljava.lang.Object;)
org.springframework.security.access.intercept.MethodInvocationPrivilegeEvaluator.setSecurityInterceptor(org.springframework.security.access.intercept.AbstractSecurityInterceptor)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.access.method.MethodSecurityMetadataSource)
org.springframework.security.access.SecurityMetadataSource.getAttributes(java.lang.Object)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.oneOf(org.springframework.security.access.AccessDecisionManager)
org.springframework.security.access.AccessDecisionManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.jmock.Expectations.throwException(java.lang.Throwable)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.access.intercept.MethodInvocationPrivilegeEvaluator.isAllowed(org.aopalliance.intercept.MethodInvocation, org.springframework.security.core.Authentication)
org.junit.Assert.assertFalse(Z)
976 - Declaração do método: org.springframework.security.access.intercept.method.MethodInvocationPrivilegeEvaluatorTests.declinesAccessUsingCreateFromClass()
Métodos invocados: 
org.springframework.security.util.MethodInvocationUtils.createFromClass(java.lang.Object, java.lang.Class, java.lang.String, [Ljava.lang.Class;, [Ljava.lang.Object;)
org.springframework.security.access.intercept.MethodInvocationPrivilegeEvaluator.setSecurityInterceptor(org.springframework.security.access.intercept.AbstractSecurityInterceptor)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.access.method.MethodSecurityMetadataSource)
org.springframework.security.access.SecurityMetadataSource.getAttributes(java.lang.Object)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.oneOf(org.springframework.security.access.AccessDecisionManager)
org.springframework.security.access.AccessDecisionManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.jmock.Expectations.throwException(java.lang.Throwable)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.access.intercept.MethodInvocationPrivilegeEvaluator.isAllowed(org.aopalliance.intercept.MethodInvocation, org.springframework.security.core.Authentication)
org.junit.Assert.assertFalse(Z)
977 - Declaração do método: org.springframework.security.access.vote.AbstractAclVoterTests$1.supports(org.springframework.security.access.ConfigAttribute)
977 - Declaração do método: org.springframework.security.access.vote.AbstractAclVoterTests$1.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
977 - Declaração do método: org.springframework.security.access.vote.AbstractAclVoterTests.supportsMethodInvocationsAndJoinPoints()
Métodos invocados: 
org.springframework.security.access.vote.AbstractAclVoter.supports(java.lang.Class)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.vote.AbstractAclVoter.supports(java.lang.Class)
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.vote.AbstractAclVoter.supports(java.lang.Class)
org.junit.Assert.assertFalse(Z)
978 - Declaração do método: org.springframework.security.access.vote.AbstractAclVoterTests.expectedDomainObjectArgumentIsReturnedFromMethodInvocation()
Métodos invocados: 
org.springframework.security.access.vote.AbstractAclVoter.setProcessDomainObjectClass(java.lang.Class)
org.springframework.security.util.MethodInvocationUtils.create(java.lang.Object, java.lang.String, [Ljava.lang.Object;)
org.springframework.security.access.vote.AbstractAclVoter.getDomainObjectInstance(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
979 - Declaração do método: org.springframework.security.access.vote.AbstractAclVoterTests.expectedDomainObjectArgumentIsReturnedFromJoinPoint()
Métodos invocados: 
org.springframework.security.access.vote.AbstractAclVoter.setProcessDomainObjectClass(java.lang.Class)
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.access.vote.AbstractAclVoter.getDomainObjectInstance(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
980 - Declaração do método: org.springframework.security.access.vote.AbstractAclVoterTests.correctArgumentIsSelectedFromMultipleArgs()
Métodos invocados: 
org.springframework.security.access.vote.AbstractAclVoter.setProcessDomainObjectClass(java.lang.Class)
org.springframework.security.util.MethodInvocationUtils.create(java.lang.Object, java.lang.String, [Ljava.lang.Object;)
org.springframework.security.access.vote.AbstractAclVoter.getDomainObjectInstance(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
981 - Declaração do método: org.springframework.security.access.vote.AbstractAclVoterTests$TestClass.methodTakingAString(java.lang.String)
981 - Declaração do método: org.springframework.security.access.vote.AbstractAclVoterTests$TestClass.methodTaking2Strings(java.lang.String, java.lang.String)
981 - Declaração do método: org.springframework.security.access.vote.AbstractAclVoterTests$TestClass.methodTakingAListAndAString(java.util.ArrayList, java.lang.String)
981 - Declaração do método: org.springframework.security.access.vote.DenyVoter.supports(org.springframework.security.access.ConfigAttribute)
Métodos invocados: 
org.springframework.security.access.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
982 - Declaração do método: org.springframework.security.access.vote.DenyVoter.supports(java.lang.Class)
982 - Declaração do método: org.springframework.security.access.vote.DenyVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
Métodos invocados: 
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.access.vote.DenyVoter.supports(org.springframework.security.access.ConfigAttribute)
983 - Declaração do método: org.springframework.security.access.vote.RoleHierarchyVoterTests.hierarchicalRoleIsIncludedInDecision()
Métodos invocados: 
org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.vote.RoleVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.junit.Assert.assertEquals(J, J)
984 - Declaração do método: org.springframework.security.access.vote.AuthenticatedVoterTests.createAnonymous()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
985 - Declaração do método: org.springframework.security.access.vote.AuthenticatedVoterTests.createFullyAuthenticated()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
986 - Declaração do método: org.springframework.security.access.vote.AuthenticatedVoterTests.createRememberMe()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
987 - Declaração do método: org.springframework.security.access.vote.AuthenticatedVoterTests.testAnonymousWorks()
Métodos invocados: 
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.vote.AuthenticatedVoterTests.createAnonymous()
org.springframework.security.access.vote.AuthenticatedVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.access.vote.AuthenticatedVoterTests.createRememberMe()
org.springframework.security.access.vote.AuthenticatedVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.access.vote.AuthenticatedVoterTests.createFullyAuthenticated()
org.springframework.security.access.vote.AuthenticatedVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.assertEquals(I, I)
988 - Declaração do método: org.springframework.security.access.vote.AuthenticatedVoterTests.testFullyWorks()
Métodos invocados: 
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.vote.AuthenticatedVoterTests.createAnonymous()
org.springframework.security.access.vote.AuthenticatedVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.access.vote.AuthenticatedVoterTests.createRememberMe()
org.springframework.security.access.vote.AuthenticatedVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.access.vote.AuthenticatedVoterTests.createFullyAuthenticated()
org.springframework.security.access.vote.AuthenticatedVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.assertEquals(I, I)
989 - Declaração do método: org.springframework.security.access.vote.AuthenticatedVoterTests.testRememberMeWorks()
Métodos invocados: 
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.vote.AuthenticatedVoterTests.createAnonymous()
org.springframework.security.access.vote.AuthenticatedVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.access.vote.AuthenticatedVoterTests.createRememberMe()
org.springframework.security.access.vote.AuthenticatedVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.access.vote.AuthenticatedVoterTests.createFullyAuthenticated()
org.springframework.security.access.vote.AuthenticatedVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.assertEquals(I, I)
990 - Declaração do método: org.springframework.security.access.vote.AuthenticatedVoterTests.testSetterRejectsNull()
Métodos invocados: 
org.springframework.security.access.vote.AuthenticatedVoter.setAuthenticationTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
991 - Declaração do método: org.springframework.security.access.vote.AuthenticatedVoterTests.testSupports()
Métodos invocados: 
org.springframework.security.access.vote.AuthenticatedVoter.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.vote.AuthenticatedVoter.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.vote.AuthenticatedVoter.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.vote.AuthenticatedVoter.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.vote.AuthenticatedVoter.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertFalse(Z)
992 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManagerTests.testAllowIfAccessDecisionManagerDefaults()
Métodos invocados: 
org.springframework.security.access.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.vote.AbstractAccessDecisionManager.setAllowIfAllAbstainDecisions(Z)
org.springframework.security.access.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
junit.framework.Assert.assertTrue(Z)
993 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManagerTests.testDelegatesSupportsClassRequests()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.access.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
java.lang.Object.getClass()
org.springframework.security.access.vote.AbstractAccessDecisionManager.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
java.lang.Object.getClass()
org.springframework.security.access.vote.AbstractAccessDecisionManager.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
994 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManagerTests.testDelegatesSupportsRequests()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.access.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
org.springframework.security.access.vote.AbstractAccessDecisionManager.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.vote.AbstractAccessDecisionManager.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
995 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManagerTests.testProperlyStoresListOfVoters()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.access.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
java.util.List.size()
org.springframework.security.access.vote.AbstractAccessDecisionManager.getDecisionVoters()
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
996 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManagerTests.testRejectsEmptyList()
Métodos invocados: 
org.springframework.security.access.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
997 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManagerTests.testRejectsListContainingInvalidObjectTypes()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.access.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
998 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManagerTests.testRejectsNullVotersList()
Métodos invocados: 
org.springframework.security.access.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
999 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManagerTests.testRoleVoterAlwaysReturnsTrueToSupports()
Métodos invocados: 
org.springframework.security.access.vote.RoleVoter.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
1000 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManagerTests.testWillNotStartIfDecisionVotersNotSet()
Métodos invocados: 
org.springframework.security.access.vote.AbstractAccessDecisionManager.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1001 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManagerTests$MockDecisionManagerImpl.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
1001 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManagerTests$MockStringOnlyVoter.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
1002 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManagerTests$MockStringOnlyVoter.supports(org.springframework.security.access.ConfigAttribute)
1002 - Declaração do método: org.springframework.security.access.vote.AbstractAccessDecisionManagerTests$MockStringOnlyVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
1002 - Declaração do método: org.springframework.security.access.vote.UnanimousBasedTests.makeDecisionManager()
Métodos invocados: 
java.util.List.add(org.springframework.security.access.AccessDecisionVoter)
java.util.List.add(org.springframework.security.access.AccessDecisionVoter)
java.util.List.add(org.springframework.security.access.AccessDecisionVoter)
org.springframework.security.access.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
1003 - Declaração do método: org.springframework.security.access.vote.UnanimousBasedTests.makeDecisionManagerWithFooBarPrefix()
Métodos invocados: 
org.springframework.security.access.vote.RoleVoter.setRolePrefix(java.lang.String)
java.util.List.add(org.springframework.security.access.AccessDecisionVoter)
java.util.List.add(org.springframework.security.access.AccessDecisionVoter)
java.util.List.add(org.springframework.security.access.AccessDecisionVoter)
org.springframework.security.access.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
1004 - Declaração do método: org.springframework.security.access.vote.UnanimousBasedTests.makeTestToken()
1004 - Declaração do método: org.springframework.security.access.vote.UnanimousBasedTests.makeTestTokenWithFooBarPrefix()
1004 - Declaração do método: org.springframework.security.access.vote.UnanimousBasedTests.testOneAffirmativeVoteOneDenyVoteOneAbstainVoteDeniesAccess()
Métodos invocados: 
org.springframework.security.access.vote.UnanimousBasedTests.makeTestToken()
org.springframework.security.access.vote.UnanimousBasedTests.makeDecisionManager()
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.vote.UnanimousBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1005 - Declaração do método: org.springframework.security.access.vote.UnanimousBasedTests.testOneAffirmativeVoteTwoAbstainVotesGrantsAccess()
Métodos invocados: 
org.springframework.security.access.vote.UnanimousBasedTests.makeTestToken()
org.springframework.security.access.vote.UnanimousBasedTests.makeDecisionManager()
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.vote.UnanimousBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.assertTrue(Z)
1006 - Declaração do método: org.springframework.security.access.vote.UnanimousBasedTests.testOneDenyVoteTwoAbstainVotesDeniesAccess()
Métodos invocados: 
org.springframework.security.access.vote.UnanimousBasedTests.makeTestToken()
org.springframework.security.access.vote.UnanimousBasedTests.makeDecisionManager()
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.vote.UnanimousBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1007 - Declaração do método: org.springframework.security.access.vote.UnanimousBasedTests.testRoleVoterPrefixObserved()
Métodos invocados: 
org.springframework.security.access.vote.UnanimousBasedTests.makeTestTokenWithFooBarPrefix()
org.springframework.security.access.vote.UnanimousBasedTests.makeDecisionManagerWithFooBarPrefix()
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.vote.UnanimousBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.assertTrue(Z)
1008 - Declaração do método: org.springframework.security.access.vote.UnanimousBasedTests.testThreeAbstainVotesDeniesAccessWithDefault()
Métodos invocados: 
org.springframework.security.access.vote.UnanimousBasedTests.makeTestToken()
org.springframework.security.access.vote.UnanimousBasedTests.makeDecisionManager()
org.springframework.security.access.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.vote.UnanimousBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1009 - Declaração do método: org.springframework.security.access.vote.UnanimousBasedTests.testThreeAbstainVotesGrantsAccessWithoutDefault()
Métodos invocados: 
org.springframework.security.access.vote.UnanimousBasedTests.makeTestToken()
org.springframework.security.access.vote.UnanimousBasedTests.makeDecisionManager()
org.springframework.security.access.vote.AbstractAccessDecisionManager.setAllowIfAllAbstainDecisions(Z)
org.springframework.security.access.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.vote.UnanimousBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.assertTrue(Z)
1010 - Declaração do método: org.springframework.security.access.vote.UnanimousBasedTests.testTwoAffirmativeVotesTwoAbstainVotesGrantsAccess()
Métodos invocados: 
org.springframework.security.access.vote.UnanimousBasedTests.makeTestToken()
org.springframework.security.access.vote.UnanimousBasedTests.makeDecisionManager()
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.vote.UnanimousBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
junit.framework.Assert.assertTrue(Z)
1011 - Declaração do método: org.springframework.security.access.vote.SomeDomainObjectManager.someServiceMethod(org.springframework.security.access.vote.SomeDomainObject)
1011 - Declaração do método: org.springframework.security.access.vote.AffirmativeBasedTests.setup()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.access.AccessDecisionVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.mockito.Mockito.when(java.lang.Integer)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.lang.Integer)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.access.AccessDecisionVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.mockito.Mockito.when(java.lang.Integer)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.lang.Integer)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.access.AccessDecisionVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.mockito.Mockito.when(java.lang.Integer)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.lang.Integer)
1012 - Declaração do método: org.springframework.security.access.vote.AffirmativeBasedTests.oneAffirmativeVoteOneDenyVoteOneAbstainVoteGrantsAccess()
Métodos invocados: 
java.util.Arrays.asList([Lorg.springframework.security.access.AccessDecisionVoter;)
org.springframework.security.access.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
org.springframework.security.access.vote.AbstractAccessDecisionManager.afterPropertiesSet()
org.springframework.security.access.vote.AffirmativeBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
1013 - Declaração do método: org.springframework.security.access.vote.AffirmativeBasedTests.oneDenyVoteOneAbstainVoteOneAffirmativeVoteGrantsAccess()
Métodos invocados: 
java.util.Arrays.asList([Lorg.springframework.security.access.AccessDecisionVoter;)
org.springframework.security.access.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
org.springframework.security.access.vote.AffirmativeBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
1014 - Declaração do método: org.springframework.security.access.vote.AffirmativeBasedTests.oneAffirmativeVoteTwoAbstainVotesGrantsAccess()
Métodos invocados: 
java.util.Arrays.asList([Lorg.springframework.security.access.AccessDecisionVoter;)
org.springframework.security.access.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
org.springframework.security.access.vote.AffirmativeBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
1015 - Declaração do método: org.springframework.security.access.vote.AffirmativeBasedTests.oneDenyVoteTwoAbstainVotesDeniesAccess()
Métodos invocados: 
java.util.Arrays.asList([Lorg.springframework.security.access.AccessDecisionVoter;)
org.springframework.security.access.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
org.springframework.security.access.vote.AffirmativeBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
1016 - Declaração do método: org.springframework.security.access.vote.AffirmativeBasedTests.onlyAbstainVotesDeniesAccessWithDefault()
Métodos invocados: 
java.util.Arrays.asList([Lorg.springframework.security.access.AccessDecisionVoter;)
org.springframework.security.access.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
org.springframework.security.access.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.vote.AffirmativeBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
1017 - Declaração do método: org.springframework.security.access.vote.AffirmativeBasedTests.testThreeAbstainVotesGrantsAccessIfAllowIfAllAbstainDecisionsIsSet()
Métodos invocados: 
java.util.Arrays.asList([Lorg.springframework.security.access.AccessDecisionVoter;)
org.springframework.security.access.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
org.springframework.security.access.vote.AbstractAccessDecisionManager.setAllowIfAllAbstainDecisions(Z)
org.springframework.security.access.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.vote.AffirmativeBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
1018 - Declaração do método: org.springframework.security.access.vote.SomeDomainObject.SomeDomainObject(java.lang.String)
1018 - Declaração do método: org.springframework.security.access.vote.SomeDomainObject.getParent()
1018 - Declaração do método: org.springframework.security.access.vote.RoleVoterTests.oneMatchingAttributeGrantsAccess()
Métodos invocados: 
org.springframework.security.access.vote.RoleVoter.setRolePrefix(java.lang.String)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.vote.RoleVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.junit.Assert.assertEquals(J, J)
1019 - Declaração do método: org.springframework.security.access.vote.DenyAgainVoter.supports(org.springframework.security.access.ConfigAttribute)
Métodos invocados: 
org.springframework.security.access.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
1020 - Declaração do método: org.springframework.security.access.vote.DenyAgainVoter.supports(java.lang.Class)
1020 - Declaração do método: org.springframework.security.access.vote.DenyAgainVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
Métodos invocados: 
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.access.vote.DenyAgainVoter.supports(org.springframework.security.access.ConfigAttribute)
1021 - Declaração do método: org.springframework.security.access.vote.ConsensusBasedTests.testOneAffirmativeVoteOneDenyVoteOneAbstainVoteDeniesAccessWithoutDefault()
Métodos invocados: 
org.springframework.security.access.vote.ConsensusBasedTests.makeTestToken()
org.springframework.security.access.vote.ConsensusBasedTests.makeDecisionManager()
org.springframework.security.access.vote.ConsensusBased.setAllowIfEqualGrantedDeniedDecisions(Z)
org.springframework.security.access.vote.ConsensusBased.isAllowIfEqualGrantedDeniedDecisions()
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.vote.ConsensusBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
1022 - Declaração do método: org.springframework.security.access.vote.ConsensusBasedTests.testOneAffirmativeVoteOneDenyVoteOneAbstainVoteGrantsAccessWithDefault()
Métodos invocados: 
org.springframework.security.access.vote.ConsensusBasedTests.makeTestToken()
org.springframework.security.access.vote.ConsensusBasedTests.makeDecisionManager()
org.springframework.security.access.vote.ConsensusBased.isAllowIfEqualGrantedDeniedDecisions()
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.vote.ConsensusBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.junit.Assert.assertTrue(Z)
1023 - Declaração do método: org.springframework.security.access.vote.ConsensusBasedTests.testOneAffirmativeVoteTwoAbstainVotesGrantsAccess()
Métodos invocados: 
org.springframework.security.access.vote.ConsensusBasedTests.makeTestToken()
org.springframework.security.access.vote.ConsensusBasedTests.makeDecisionManager()
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.vote.ConsensusBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.junit.Assert.assertTrue(Z)
1024 - Declaração do método: org.springframework.security.access.vote.ConsensusBasedTests.testOneDenyVoteTwoAbstainVotesDeniesAccess()
Métodos invocados: 
org.springframework.security.access.vote.ConsensusBasedTests.makeTestToken()
org.springframework.security.access.vote.ConsensusBasedTests.makeDecisionManager()
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.vote.ConsensusBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.junit.Assert.fail(java.lang.String)
1025 - Declaração do método: org.springframework.security.access.vote.ConsensusBasedTests.testThreeAbstainVotesDeniesAccessWithDefault()
Métodos invocados: 
org.springframework.security.access.vote.ConsensusBasedTests.makeTestToken()
org.springframework.security.access.vote.ConsensusBasedTests.makeDecisionManager()
org.springframework.security.access.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.vote.ConsensusBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
1026 - Declaração do método: org.springframework.security.access.vote.ConsensusBasedTests.testThreeAbstainVotesGrantsAccessWithoutDefault()
Métodos invocados: 
org.springframework.security.access.vote.ConsensusBasedTests.makeTestToken()
org.springframework.security.access.vote.ConsensusBasedTests.makeDecisionManager()
org.springframework.security.access.vote.AbstractAccessDecisionManager.setAllowIfAllAbstainDecisions(Z)
org.springframework.security.access.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
org.junit.Assert.assertTrue(Z)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.vote.ConsensusBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
1027 - Declaração do método: org.springframework.security.access.vote.ConsensusBasedTests.testTwoAffirmativeVotesTwoAbstainVotesGrantsAccess()
Métodos invocados: 
org.springframework.security.access.vote.ConsensusBasedTests.makeTestToken()
org.springframework.security.access.vote.ConsensusBasedTests.makeDecisionManager()
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.access.vote.ConsensusBased.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
1028 - Declaração do método: org.springframework.security.access.vote.ConsensusBasedTests.makeDecisionManager()
Métodos invocados: 
java.util.List.add(org.springframework.security.access.AccessDecisionVoter)
java.util.List.add(org.springframework.security.access.AccessDecisionVoter)
java.util.List.add(org.springframework.security.access.AccessDecisionVoter)
org.springframework.security.access.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
1029 - Declaração do método: org.springframework.security.access.vote.ConsensusBasedTests.makeTestToken()
1029 - Declaração do método: org.springframework.security.authentication.TestingAuthenticationProviderTests.testAuthenticates()
Métodos invocados: 
org.springframework.security.authentication.TestingAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.TestingAuthenticationToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.TestingAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
1030 - Declaração do método: org.springframework.security.authentication.TestingAuthenticationProviderTests.testSupports()
Métodos invocados: 
org.springframework.security.authentication.TestingAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.TestingAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
1031 - Declaração do método: org.springframework.security.authentication.UsernamePasswordAuthenticationTokenTests.authenticatedPropertyContractIsSatisfied()
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.setAuthenticated(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.setAuthenticated(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.setAuthenticated(Z)
org.junit.Assert.fail(java.lang.String)
1032 - Declaração do método: org.springframework.security.authentication.UsernamePasswordAuthenticationTokenTests.gettersReturnCorrectData()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
1033 - Declaração do método: org.springframework.security.authentication.UsernamePasswordAuthenticationTokenTests.testNoArgConstructorDoesntExist()
Métodos invocados: 
java.lang.Class.getDeclaredConstructor([Ljava.lang.Class;)
1034 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests.authenticationFailsWithUnsupportedToken()
Métodos invocados: 
org.springframework.security.authentication.ProviderManagerTests.makeProviderManager()
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.authentication.ProviderManager.setMessageSource(org.springframework.context.MessageSource)
org.springframework.security.authentication.ProviderManager.authenticate(org.springframework.security.core.Authentication)
1035 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests$1.getCredentials()
1035 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests$1.getPrincipal()
1035 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests.credentialsAreClearedByDefault()
Métodos invocados: 
org.springframework.security.authentication.ProviderManagerTests.makeProviderManager()
org.springframework.security.authentication.ProviderManager.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.core.Authentication.getCredentials()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.authentication.ProviderManager.setEraseCredentialsAfterAuthentication(Z)
org.springframework.security.authentication.ProviderManager.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.core.Authentication.getCredentials()
org.junit.Assert.assertNotNull(java.lang.Object)
1036 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests.authenticationSucceedsWithSupportedTokenAndReturnsExpectedObject()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.authentication.ProviderManager.setAuthenticationEventPublisher(org.springframework.security.authentication.AuthenticationEventPublisher)
org.springframework.security.authentication.ProviderManagerTests.createProviderWhichReturns(org.springframework.security.core.Authentication)
java.util.Arrays.asList([Lorg.springframework.security.authentication.AuthenticationProvider;)
org.springframework.security.authentication.ProviderManager.setProviders(java.util.List)
org.springframework.security.authentication.ProviderManager.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.mockito.Mockito.verify(org.springframework.security.authentication.AuthenticationEventPublisher)
org.springframework.security.authentication.AuthenticationEventPublisher.publishAuthenticationSuccess(org.springframework.security.core.Authentication)
1037 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests.authenticationSucceedsWhenFirstProviderReturnsNullButSecondAuthenticates()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.authentication.ProviderManager.setAuthenticationEventPublisher(org.springframework.security.authentication.AuthenticationEventPublisher)
org.springframework.security.authentication.ProviderManagerTests.createProviderWhichReturns(org.springframework.security.core.Authentication)
org.springframework.security.authentication.ProviderManagerTests.createProviderWhichReturns(org.springframework.security.core.Authentication)
java.util.Arrays.asList([Lorg.springframework.security.authentication.AuthenticationProvider;)
org.springframework.security.authentication.ProviderManager.setProviders(java.util.List)
org.springframework.security.authentication.ProviderManager.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
org.mockito.Mockito.verify(org.springframework.security.authentication.AuthenticationEventPublisher)
org.springframework.security.authentication.AuthenticationEventPublisher.publishAuthenticationSuccess(org.springframework.security.core.Authentication)
1038 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests.startupFailsIfProviderListDoesNotContainProviders()
Métodos invocados: 
java.util.List.add(java.lang.Object)
org.springframework.security.authentication.ProviderManager.setProviders(java.util.List)
1039 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests.testStartupFailsIfProvidersNotSet()
Métodos invocados: 
org.springframework.security.authentication.ProviderManager.afterPropertiesSet()
1040 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests.detailsAreNotSetOnAuthenticationTokenIfAlreadySetByProvider()
Métodos invocados: 
org.springframework.security.authentication.ProviderManagerTests.makeProviderManager()
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
java.util.Arrays.asList([Lorg.springframework.security.authentication.AuthenticationProvider;)
org.springframework.security.authentication.ProviderManager.setProviders(java.util.List)
org.springframework.security.authentication.ProviderManagerTests.createAuthenticationToken()
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.authentication.ProviderManager.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.core.Authentication.getDetails()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1041 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests$2.authenticate(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
1042 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests$2.supports(java.lang.Class)
1042 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests.detailsAreSetOnAuthenticationTokenIfNotAlreadySetByProvider()
Métodos invocados: 
org.springframework.security.authentication.ProviderManagerTests.makeProviderManager()
org.springframework.security.authentication.ProviderManagerTests.createAuthenticationToken()
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.authentication.ProviderManager.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.core.Authentication.getCredentials()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.Authentication.getDetails()
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
1043 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests.authenticationExceptionIsIgnoredIfLaterProviderAuthenticates()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.authentication.ProviderManagerTests.createProviderWhichThrows(org.springframework.security.core.AuthenticationException)
org.springframework.security.authentication.ProviderManagerTests.createProviderWhichReturns(org.springframework.security.core.Authentication)
java.util.Arrays.asList([Lorg.springframework.security.authentication.AuthenticationProvider;)
org.springframework.security.authentication.ProviderManager.setProviders(java.util.List)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.authentication.ProviderManager.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
1044 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests.authenticationExceptionIsRethrownIfNoLaterProviderAuthenticates()
Métodos invocados: 
org.springframework.security.authentication.ProviderManagerTests.createProviderWhichThrows(org.springframework.security.core.AuthenticationException)
org.springframework.security.authentication.ProviderManagerTests.createProviderWhichReturns(org.springframework.security.core.Authentication)
java.util.Arrays.asList([Lorg.springframework.security.authentication.AuthenticationProvider;)
org.springframework.security.authentication.ProviderManager.setProviders(java.util.List)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.authentication.ProviderManager.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.fail(java.lang.String)
1045 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests.accountStatusExceptionPreventsCallsToSubsequentProviders()
Métodos invocados: 
org.springframework.security.authentication.ProviderManagerTests.makeProviderManager()
org.springframework.security.authentication.ProviderManagerTests.createProviderWhichThrows(org.springframework.security.core.AuthenticationException)
org.mockito.Mockito.mock(java.lang.Class)
java.util.Arrays.asList([Lorg.springframework.security.authentication.AuthenticationProvider;)
org.springframework.security.authentication.ProviderManager.setProviders(java.util.List)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.authentication.ProviderManager.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.fail(java.lang.String)
org.mockito.Mockito.verifyZeroInteractions([Ljava.lang.Object;)
1046 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests.parentAuthenticationIsUsedIfProvidersDontAuthenticate()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
java.util.Arrays.asList([Lorg.springframework.security.authentication.AuthenticationProvider;)
org.springframework.security.authentication.ProviderManager.setProviders(java.util.List)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenReturn(org.springframework.security.core.Authentication)
org.springframework.security.authentication.ProviderManager.setParent(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.authentication.ProviderManager.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
1047 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests.parentIsNotCalledIfAccountStatusExceptionIsThrown()
Métodos invocados: 
org.springframework.security.authentication.ProviderManagerTests.createProviderWhichThrows(org.springframework.security.core.AuthenticationException)
java.util.Arrays.asList([Lorg.springframework.security.authentication.AuthenticationProvider;)
org.springframework.security.authentication.ProviderManager.setProviders(java.util.List)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.authentication.ProviderManager.setParent(org.springframework.security.authentication.AuthenticationManager)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.authentication.ProviderManager.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.fail(java.lang.String)
org.mockito.Mockito.verifyZeroInteractions([Ljava.lang.Object;)
1048 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests.providerNotFoundFromParentIsIgnored()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.authentication.ProviderManager.setAuthenticationEventPublisher(org.springframework.security.authentication.AuthenticationEventPublisher)
org.springframework.security.authentication.ProviderManagerTests.createProviderWhichThrows(org.springframework.security.core.AuthenticationException)
java.util.Arrays.asList([Lorg.springframework.security.authentication.AuthenticationProvider;)
org.springframework.security.authentication.ProviderManager.setProviders(java.util.List)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenThrow([Ljava.lang.Throwable;)
org.springframework.security.authentication.ProviderManager.setParent(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.authentication.ProviderManager.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.fail(java.lang.String)
org.mockito.Mockito.verify(org.springframework.security.authentication.AuthenticationEventPublisher)
org.springframework.security.authentication.AuthenticationEventPublisher.publishAuthenticationFailure(org.springframework.security.core.AuthenticationException, org.springframework.security.core.Authentication)
1049 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests.authenticationExceptionFromParentOverridesPreviousOnes()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.authentication.ProviderManager.setAuthenticationEventPublisher(org.springframework.security.authentication.AuthenticationEventPublisher)
org.springframework.security.authentication.ProviderManagerTests.createProviderWhichThrows(org.springframework.security.core.AuthenticationException)
java.util.Arrays.asList([Lorg.springframework.security.authentication.AuthenticationProvider;)
org.springframework.security.authentication.ProviderManager.setProviders(java.util.List)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenThrow([Ljava.lang.Throwable;)
org.springframework.security.authentication.ProviderManager.setParent(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.authentication.ProviderManager.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
org.mockito.Mockito.verify(org.springframework.security.authentication.AuthenticationEventPublisher)
org.springframework.security.authentication.AuthenticationEventPublisher.publishAuthenticationFailure(org.springframework.security.core.AuthenticationException, org.springframework.security.core.Authentication)
1050 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests.createProviderWhichThrows(org.springframework.security.core.AuthenticationException)
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.authentication.AuthenticationProvider.supports(java.lang.Class)
org.mockito.Mockito.when(java.lang.Boolean)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.lang.Boolean)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.authentication.AuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenThrow([Ljava.lang.Throwable;)
1051 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests.createProviderWhichReturns(org.springframework.security.core.Authentication)
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.authentication.AuthenticationProvider.supports(java.lang.Class)
org.mockito.Mockito.when(java.lang.Boolean)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.lang.Boolean)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.authentication.AuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenReturn(org.springframework.security.core.Authentication)
1052 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests.createAuthenticationToken()
1052 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests.makeProviderManager()
Métodos invocados: 
java.util.List.add(org.springframework.security.authentication.AuthenticationProvider)
org.springframework.security.authentication.ProviderManager.setProviders(java.util.List)
1053 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests$MockProvider.authenticate(org.springframework.security.core.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.security.authentication.ProviderManagerTests$MockProvider.supports(java.lang.Class)
1054 - Declaração do método: org.springframework.security.authentication.ProviderManagerTests$MockProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.isAssignableFrom(java.lang.Class)
1055 - Declaração do método: org.springframework.security.authentication.AuthenticationDetailsSourceImplTests.buildDetailsReturnsExpectedAuthenticationDetails()
Métodos invocados: 
org.springframework.security.authentication.AuthenticationDetailsSourceImpl.buildDetails(java.lang.Object)
org.springframework.security.authentication.AuthenticationDetails.getContext()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AuthenticationDetailsSourceImpl.setClazz(java.lang.Class)
org.springframework.security.authentication.AuthenticationDetailsSourceImpl.buildDetails(java.lang.Object)
org.springframework.security.authentication.AuthenticationDetails.getContext()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1056 - Declaração do método: org.springframework.security.authentication.AuthenticationDetailsSourceImplTests.nonMatchingConstructorIsRejected()
Métodos invocados: 
org.springframework.security.authentication.AuthenticationDetailsSourceImpl.setClazz(java.lang.Class)
org.springframework.security.authentication.AuthenticationDetailsSourceImpl.buildDetails(java.lang.Object)
1057 - Declaração do método: org.springframework.security.authentication.AuthenticationDetailsSourceImplTests.constructorTakingMultipleArgumentsIsRejected()
Métodos invocados: 
org.springframework.security.authentication.AuthenticationDetailsSourceImpl.setClazz(java.lang.Class)
org.springframework.security.authentication.AuthenticationDetailsSourceImpl.buildDetails(java.lang.Object)
1058 - Declaração do método: org.springframework.security.authentication.AuthenticationDetailsSourceImplTests.authenticationDetailsEqualsBehavesAsExpected()
Métodos invocados: 
org.springframework.security.authentication.AuthenticationDetails.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
org.springframework.security.authentication.AuthenticationDetails.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
org.springframework.security.authentication.AuthenticationDetails.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
org.springframework.security.authentication.AuthenticationDetails.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
org.springframework.security.authentication.AuthenticationDetails.toString()
org.springframework.security.authentication.AuthenticationDetails.toString()
1059 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationTokenTests.setUp()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
1060 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationTokenTests.testAuthoritiesAreImmutable()
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
org.junit.Assert.assertNotSame(java.lang.Object, java.lang.Object)
java.util.List.set(I, org.springframework.security.core.GrantedAuthority)
1061 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationTokenTests.testGetters()
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationTokenTests$MockAuthenticationImpl.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationTokenTests$MockAuthenticationImpl.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.getName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1062 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationTokenTests.testHashCode()
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.hashCode()
org.springframework.security.authentication.AbstractAuthenticationToken.hashCode()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.authentication.AbstractAuthenticationToken.hashCode()
org.springframework.security.authentication.AbstractAuthenticationToken.hashCode()
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.setAuthenticated(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.hashCode()
org.springframework.security.authentication.AbstractAuthenticationToken.hashCode()
org.junit.Assert.assertTrue(Z)
1063 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationTokenTests.testObjectsEquals()
Métodos invocados: 
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.authentication.AbstractAuthenticationToken.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.authentication.AbstractAuthenticationToken.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
1064 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationTokenTests.testSetAuthenticated()
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.setAuthenticated(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
org.junit.Assert.assertTrue(Z)
1065 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationTokenTests.testToStringWithAuthorities()
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.toString()
java.lang.String.lastIndexOf(java.lang.String)
org.junit.Assert.assertTrue(Z)
1066 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationTokenTests.testToStringWithNullAuthorities()
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.toString()
java.lang.String.lastIndexOf(java.lang.String)
org.junit.Assert.assertTrue(Z)
1067 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationTokenTests$MockAuthenticationImpl.MockAuthenticationImpl(java.lang.Object, java.lang.Object, java.util.List)
1067 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationTokenTests$MockAuthenticationImpl.getCredentials()
1067 - Declaração do método: org.springframework.security.authentication.AbstractAuthenticationTokenTests$MockAuthenticationImpl.getPrincipal()
1067 - Declaração do método: org.springframework.security.authentication.AuthenticationTrustResolverImplTests.testCorrectOperationIsAnonymous()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.authentication.AuthenticationTrustResolverImpl.isAnonymous(org.springframework.security.core.Authentication)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.authentication.AuthenticationTrustResolverImpl.isAnonymous(org.springframework.security.core.Authentication)
junit.framework.Assert.assertFalse(Z)
1068 - Declaração do método: org.springframework.security.authentication.AuthenticationTrustResolverImplTests.testCorrectOperationIsRememberMe()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.authentication.AuthenticationTrustResolverImpl.isRememberMe(org.springframework.security.core.Authentication)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.authentication.AuthenticationTrustResolverImpl.isAnonymous(org.springframework.security.core.Authentication)
junit.framework.Assert.assertFalse(Z)
1069 - Declaração do método: org.springframework.security.authentication.AuthenticationTrustResolverImplTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.authentication.AuthenticationTrustResolverImpl.getAnonymousClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AuthenticationTrustResolverImpl.setAnonymousClass(java.lang.Class)
org.springframework.security.authentication.AuthenticationTrustResolverImpl.getAnonymousClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AuthenticationTrustResolverImpl.getRememberMeClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AuthenticationTrustResolverImpl.setRememberMeClass(java.lang.Class)
org.springframework.security.authentication.AuthenticationTrustResolverImpl.getRememberMeClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1070 - Declaração do método: org.springframework.security.authentication.anonymous.AnonymousAuthenticationTokenTests.testConstructorRejectsNulls()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
1071 - Declaração do método: org.springframework.security.authentication.anonymous.AnonymousAuthenticationTokenTests.testEqualsWhenEqual()
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1072 - Declaração do método: org.springframework.security.authentication.anonymous.AnonymousAuthenticationTokenTests.testGetters()
Métodos invocados: 
java.lang.String.hashCode()
org.springframework.security.authentication.AnonymousAuthenticationToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.authentication.AnonymousAuthenticationToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AnonymousAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
1073 - Declaração do método: org.springframework.security.authentication.anonymous.AnonymousAuthenticationTokenTests.testNoArgConstructorDoesntExist()
Métodos invocados: 
java.lang.Class.getDeclaredConstructor([Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
1074 - Declaração do método: org.springframework.security.authentication.anonymous.AnonymousAuthenticationTokenTests.testNotEqualsDueToAbstractParentEqualsCheck()
Métodos invocados: 
org.springframework.security.authentication.AnonymousAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1075 - Declaração do método: org.springframework.security.authentication.anonymous.AnonymousAuthenticationTokenTests.testNotEqualsDueToDifferentAuthenticationClass()
Métodos invocados: 
org.springframework.security.authentication.AnonymousAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1076 - Declaração do método: org.springframework.security.authentication.anonymous.AnonymousAuthenticationTokenTests.testNotEqualsDueToKey()
Métodos invocados: 
org.springframework.security.authentication.AnonymousAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1077 - Declaração do método: org.springframework.security.authentication.anonymous.AnonymousAuthenticationTokenTests.testSetAuthenticatedIgnored()
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.setAuthenticated(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
1078 - Declaração do método: org.springframework.security.authentication.anonymous.AnonymousAuthenticationProviderTests.testDetectsAnInvalidKey()
Métodos invocados: 
org.springframework.security.authentication.AnonymousAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.authentication.AnonymousAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
1079 - Declaração do método: org.springframework.security.authentication.anonymous.AnonymousAuthenticationProviderTests.testDetectsMissingKey()
Métodos invocados: 
org.springframework.security.authentication.AnonymousAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1080 - Declaração do método: org.springframework.security.authentication.anonymous.AnonymousAuthenticationProviderTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.authentication.AnonymousAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.authentication.AnonymousAuthenticationProvider.afterPropertiesSet()
org.springframework.security.authentication.AnonymousAuthenticationProvider.getKey()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1081 - Declaração do método: org.springframework.security.authentication.anonymous.AnonymousAuthenticationProviderTests.testIgnoresClassesItDoesNotSupport()
Métodos invocados: 
org.springframework.security.authentication.AnonymousAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.authentication.AnonymousAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.authentication.AnonymousAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.assertNull(java.lang.Object)
1082 - Declaração do método: org.springframework.security.authentication.anonymous.AnonymousAuthenticationProviderTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.authentication.AnonymousAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.authentication.AnonymousAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1083 - Declaração do método: org.springframework.security.authentication.anonymous.AnonymousAuthenticationProviderTests.testSupports()
Métodos invocados: 
org.springframework.security.authentication.AnonymousAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.AnonymousAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertFalse(Z)
1084 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testAuthenticateFailsForIncorrectPasswordCase()
Métodos invocados: 
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1085 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testReceivedBadCredentialsWhenCredentialsNotProvided()
Métodos invocados: 
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1086 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testAuthenticateFailsIfAccountExpired()
Métodos invocados: 
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1087 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testAuthenticateFailsIfAccountLocked()
Métodos invocados: 
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1088 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testAuthenticateFailsIfCredentialsExpired()
Métodos invocados: 
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1089 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testAuthenticateFailsIfUserDisabled()
Métodos invocados: 
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1090 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testAuthenticateFailsWhenAuthenticationDaoHasBackendFailure()
Métodos invocados: 
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1091 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testAuthenticateFailsWithEmptyUsername()
Métodos invocados: 
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1092 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testAuthenticateFailsWithInvalidPassword()
Métodos invocados: 
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1093 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testAuthenticateFailsWithInvalidUsernameAndHideUserNotFoundExceptionFalse()
Métodos invocados: 
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setHideUserNotFoundExceptions(Z)
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1094 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testAuthenticateFailsWithInvalidUsernameAndHideUserNotFoundExceptionsWithDefaultOfTrue()
Métodos invocados: 
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.isHideUserNotFoundExceptions()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1095 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testAuthenticateFailsWithMixedCaseUsernameIfDefaultChanged()
Métodos invocados: 
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1096 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testAuthenticates()
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getPrincipal()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.getDetails()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1097 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testAuthenticatesASecondTime()
Métodos invocados: 
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.core.Authentication.getCredentials()
org.springframework.security.core.Authentication.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1098 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testAuthenticatesWhenASaltIsUsed()
Métodos invocados: 
org.springframework.security.authentication.dao.SystemWideSaltSource.setSystemWideSalt(java.lang.String)
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setSaltSource(org.springframework.security.authentication.dao.SaltSource)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.core.Authentication.getPrincipal()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.Authentication.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.Authentication.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.core.Authentication.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
1099 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testAuthenticatesWithForcePrincipalAsString()
Métodos invocados: 
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setForcePrincipalAsString(Z)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getPrincipal()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1100 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testDetectsNullBeingReturnedFromAuthenticationDao()
Métodos invocados: 
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1101 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setPasswordEncoder(org.springframework.security.authentication.encoding.PasswordEncoder)
org.springframework.security.authentication.dao.DaoAuthenticationProvider.getPasswordEncoder()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setSaltSource(org.springframework.security.authentication.dao.SaltSource)
org.springframework.security.authentication.dao.DaoAuthenticationProvider.getSaltSource()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.getUserCache()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.isForcePrincipalAsString()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setForcePrincipalAsString(Z)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.isForcePrincipalAsString()
junit.framework.Assert.assertTrue(Z)
1102 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testGoesBackToAuthenticationDaoToObtainLatestPasswordIfCachedPasswordSeemsIncorrect()
Métodos invocados: 
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.authentication.dao.MockUserCache.getUserFromCache(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.authentication.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoUserrod.setPassword(java.lang.String)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.authentication.dao.MockUserCache.getUserFromCache(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1103 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testStartupFailsIfNoAuthenticationDao()
Métodos invocados: 
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1104 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testStartupFailsIfNoUserCacheSet()
Métodos invocados: 
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.getUserCache()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1105 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testStartupSuccess()
Métodos invocados: 
org.springframework.security.authentication.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.authentication.dao.DaoAuthenticationProvider.getUserDetailsService()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.assertTrue(Z)
1106 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests.testSupports()
Métodos invocados: 
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
1107 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoReturnsNull.loadUserByUsername(java.lang.String)
1107 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoSimulateBackendError.loadUserByUsername(java.lang.String)
1107 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoUserrod.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
1108 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoUserrod.setPassword(java.lang.String)
1108 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoUserrodWithSalt.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
1109 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoUserPeter.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
1110 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoUserPeterAccountExpired.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
1111 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoUserPeterAccountLocked.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
1112 - Declaração do método: org.springframework.security.authentication.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoUserPeterCredentialsExpired.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
1113 - Declaração do método: org.springframework.security.authentication.dao.MockUserCache.getUserFromCache(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
1114 - Declaração do método: org.springframework.security.authentication.dao.MockUserCache.putUserInCache(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getUsername()
java.util.Map.put(java.lang.String, org.springframework.security.core.userdetails.UserDetails)
1115 - Declaração do método: org.springframework.security.authentication.dao.MockUserCache.removeUserFromCache(java.lang.String)
Métodos invocados: 
java.util.Map.remove(java.lang.Object)
1116 - Declaração do método: org.springframework.security.authentication.dao.salt.ReflectionSaltSourceTests.detectsMissingUserPropertyToUse()
Métodos invocados: 
org.springframework.security.authentication.dao.ReflectionSaltSource.afterPropertiesSet()
1117 - Declaração do método: org.springframework.security.authentication.dao.salt.ReflectionSaltSourceTests.exceptionIsThrownWhenInvalidPropertyRequested()
Métodos invocados: 
org.springframework.security.authentication.dao.ReflectionSaltSource.setUserPropertyToUse(java.lang.String)
org.springframework.security.authentication.dao.ReflectionSaltSource.afterPropertiesSet()
org.springframework.security.authentication.dao.ReflectionSaltSource.getSalt(org.springframework.security.core.userdetails.UserDetails)
1118 - Declaração do método: org.springframework.security.authentication.dao.salt.ReflectionSaltSourceTests.methodNameAsPropertyToUseReturnsCorrectSaltValue()
Métodos invocados: 
org.springframework.security.authentication.dao.ReflectionSaltSource.setUserPropertyToUse(java.lang.String)
org.springframework.security.authentication.dao.ReflectionSaltSource.getSalt(org.springframework.security.core.userdetails.UserDetails)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1119 - Declaração do método: org.springframework.security.authentication.dao.salt.ReflectionSaltSourceTests.propertyNameAsPropertyToUseReturnsCorrectSaltValue()
Métodos invocados: 
org.springframework.security.authentication.dao.ReflectionSaltSource.setUserPropertyToUse(java.lang.String)
org.springframework.security.authentication.dao.ReflectionSaltSource.getSalt(org.springframework.security.core.userdetails.UserDetails)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1120 - Declaração do método: org.springframework.security.authentication.dao.salt.SystemWideSaltSourceTests.SystemWideSaltSourceTests()
1120 - Declaração do método: org.springframework.security.authentication.dao.salt.SystemWideSaltSourceTests.SystemWideSaltSourceTests(java.lang.String)
1120 - Declaração do método: org.springframework.security.authentication.dao.salt.SystemWideSaltSourceTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1121 - Declaração do método: org.springframework.security.authentication.dao.salt.SystemWideSaltSourceTests.setUp()
1121 - Declaração do método: org.springframework.security.authentication.dao.salt.SystemWideSaltSourceTests.testDetectsMissingSystemWideSalt()
Métodos invocados: 
org.springframework.security.authentication.dao.SystemWideSaltSource.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1122 - Declaração do método: org.springframework.security.authentication.dao.salt.SystemWideSaltSourceTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.authentication.dao.SystemWideSaltSource.setSystemWideSalt(java.lang.String)
org.springframework.security.authentication.dao.SystemWideSaltSource.getSystemWideSalt()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1123 - Declaração do método: org.springframework.security.authentication.dao.salt.SystemWideSaltSourceTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.authentication.dao.SystemWideSaltSource.setSystemWideSalt(java.lang.String)
org.springframework.security.authentication.dao.SystemWideSaltSource.afterPropertiesSet()
org.springframework.security.authentication.dao.SystemWideSaltSource.getSalt(org.springframework.security.core.userdetails.UserDetails)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1124 - Declaração do método: org.springframework.security.authentication.encoding.Md5PasswordEncoderTests.testBasicFunctionality()
Métodos invocados: 
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertFalse(Z)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.getAlgorithm()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1125 - Declaração do método: org.springframework.security.authentication.encoding.Md5PasswordEncoderTests.nonAsciiPasswordHasCorrectHash()
Métodos invocados: 
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1126 - Declaração do método: org.springframework.security.authentication.encoding.Md5PasswordEncoderTests.testBase64()
Métodos invocados: 
org.springframework.security.authentication.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertFalse(Z)
java.lang.String.length()
org.junit.Assert.assertTrue(Z)
1127 - Declaração do método: org.springframework.security.authentication.encoding.Md5PasswordEncoderTests.stretchFactorIsProcessedCorrectly()
Métodos invocados: 
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.setIterations(I)
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1128 - Declaração do método: org.springframework.security.authentication.encoding.Md4PasswordEncoderTests.testEncodeUnsaltedPassword()
Métodos invocados: 
org.springframework.security.authentication.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
org.springframework.security.authentication.encoding.Md4PasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1129 - Declaração do método: org.springframework.security.authentication.encoding.Md4PasswordEncoderTests.testEncodeSaltedPassword()
Métodos invocados: 
org.springframework.security.authentication.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
org.springframework.security.authentication.encoding.Md4PasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1130 - Declaração do método: org.springframework.security.authentication.encoding.Md4PasswordEncoderTests.testEncodeNullPassword()
Métodos invocados: 
org.springframework.security.authentication.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
org.springframework.security.authentication.encoding.Md4PasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1131 - Declaração do método: org.springframework.security.authentication.encoding.Md4PasswordEncoderTests.testEncodeEmptyPassword()
Métodos invocados: 
org.springframework.security.authentication.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
org.springframework.security.authentication.encoding.Md4PasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1132 - Declaração do método: org.springframework.security.authentication.encoding.Md4PasswordEncoderTests.testNonAsciiPasswordHasCorrectHash()
Métodos invocados: 
org.springframework.security.authentication.encoding.Md4PasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1133 - Declaração do método: org.springframework.security.authentication.encoding.Md4PasswordEncoderTests.testIsHexPasswordValid()
Métodos invocados: 
org.springframework.security.authentication.encoding.Md4PasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
1134 - Declaração do método: org.springframework.security.authentication.encoding.Md4PasswordEncoderTests.testIsPasswordValid()
Métodos invocados: 
org.springframework.security.authentication.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
org.springframework.security.authentication.encoding.Md4PasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
1135 - Declaração do método: org.springframework.security.authentication.encoding.Md4PasswordEncoderTests.testIsSaltedPasswordValid()
Métodos invocados: 
org.springframework.security.authentication.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
org.springframework.security.authentication.encoding.Md4PasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
1136 - Declaração do método: org.springframework.security.authentication.encoding.PlaintextPasswordEncoderTests.testBasicFunctionality()
Métodos invocados: 
org.springframework.security.authentication.encoding.PlaintextPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.authentication.encoding.PlaintextPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.encoding.PlaintextPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.authentication.encoding.PlaintextPasswordEncoder.isIgnorePasswordCase()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.authentication.encoding.PlaintextPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.springframework.security.authentication.encoding.PlaintextPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.authentication.encoding.PlaintextPasswordEncoder.setIgnorePasswordCase(Z)
org.springframework.security.authentication.encoding.PlaintextPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.springframework.security.authentication.encoding.PlaintextPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.encoding.PlaintextPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1137 - Declaração do método: org.springframework.security.authentication.encoding.PlaintextPasswordEncoderTests.testMergeDemerge()
Métodos invocados: 
org.springframework.security.authentication.encoding.PlaintextPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.springframework.security.authentication.encoding.PlaintextPasswordEncoder.obtainPasswordAndSalt(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1138 - Declaração do método: org.springframework.security.authentication.encoding.ShaPasswordEncoderTests.testBasicFunctionality()
Métodos invocados: 
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertFalse(Z)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1139 - Declaração do método: org.springframework.security.authentication.encoding.ShaPasswordEncoderTests.testBase64()
Métodos invocados: 
org.springframework.security.authentication.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertFalse(Z)
java.lang.String.length()
junit.framework.Assert.assertTrue(Z)
1140 - Declaração do método: org.springframework.security.authentication.encoding.ShaPasswordEncoderTests.test256()
Métodos invocados: 
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1141 - Declaração do método: org.springframework.security.authentication.encoding.ShaPasswordEncoderTests.testInvalidStrength()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
1142 - Declaração do método: org.springframework.security.authentication.encoding.BasePasswordEncoderTests.testDemergeHandlesEmptyAndNullSalts()
Métodos invocados: 
org.springframework.security.authentication.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowMergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
org.springframework.security.authentication.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowDemergePasswordAndSalt(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.authentication.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowMergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
org.springframework.security.authentication.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowDemergePasswordAndSalt(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1143 - Declaração do método: org.springframework.security.authentication.encoding.BasePasswordEncoderTests.testDemergeWithEmptyStringIsRejected()
Métodos invocados: 
org.springframework.security.authentication.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowDemergePasswordAndSalt(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1144 - Declaração do método: org.springframework.security.authentication.encoding.BasePasswordEncoderTests.testDemergeWithNullIsRejected()
Métodos invocados: 
org.springframework.security.authentication.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowDemergePasswordAndSalt(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1145 - Declaração do método: org.springframework.security.authentication.encoding.BasePasswordEncoderTests.testMergeDemerge()
Métodos invocados: 
org.springframework.security.authentication.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowMergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.authentication.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowDemergePasswordAndSalt(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1146 - Declaração do método: org.springframework.security.authentication.encoding.BasePasswordEncoderTests.testMergeDemergeWithDelimitersInPassword()
Métodos invocados: 
org.springframework.security.authentication.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowMergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.authentication.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowDemergePasswordAndSalt(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1147 - Declaração do método: org.springframework.security.authentication.encoding.BasePasswordEncoderTests.testMergeDemergeWithNullAsPassword()
Métodos invocados: 
org.springframework.security.authentication.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowMergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.authentication.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowDemergePasswordAndSalt(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1148 - Declaração do método: org.springframework.security.authentication.encoding.BasePasswordEncoderTests.testStrictMergeRejectsDelimitersInSalt1()
Métodos invocados: 
org.springframework.security.authentication.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowMergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1149 - Declaração do método: org.springframework.security.authentication.encoding.BasePasswordEncoderTests.testStrictMergeRejectsDelimitersInSalt2()
Métodos invocados: 
org.springframework.security.authentication.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowMergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1150 - Declaração do método: org.springframework.security.authentication.encoding.BasePasswordEncoderTests$MockPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
1150 - Declaração do método: org.springframework.security.authentication.encoding.BasePasswordEncoderTests$MockPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
1150 - Declaração do método: org.springframework.security.authentication.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowDemergePasswordAndSalt(java.lang.String)
Métodos invocados: 
org.springframework.security.authentication.encoding.BasePasswordEncoder.demergePasswordAndSalt(java.lang.String)
1151 - Declaração do método: org.springframework.security.authentication.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowMergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
Métodos invocados: 
org.springframework.security.authentication.encoding.BasePasswordEncoder.mergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
1152 - Declaração do método: org.springframework.security.authentication.event.AuthenticationEventTests.getAuthentication()
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
1153 - Declaração do método: org.springframework.security.authentication.event.AuthenticationEventTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1154 - Declaração do método: org.springframework.security.authentication.event.AuthenticationEventTests.setUp()
1154 - Declaração do método: org.springframework.security.authentication.event.AuthenticationEventTests.testAbstractAuthenticationEvent()
Métodos invocados: 
org.springframework.security.authentication.event.AuthenticationEventTests.getAuthentication()
org.springframework.security.authentication.event.AbstractAuthenticationEvent.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1155 - Declaração do método: org.springframework.security.authentication.event.AuthenticationEventTests.testAbstractAuthenticationFailureEvent()
Métodos invocados: 
org.springframework.security.authentication.event.AuthenticationEventTests.getAuthentication()
org.springframework.security.authentication.event.AbstractAuthenticationEvent.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.event.AbstractAuthenticationFailureEvent.getException()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1156 - Declaração do método: org.springframework.security.authentication.event.AuthenticationEventTests.testRejectsNullAuthentication()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1157 - Declaração do método: org.springframework.security.authentication.event.AuthenticationEventTests.testRejectsNullAuthenticationException()
Métodos invocados: 
org.springframework.security.authentication.event.AuthenticationEventTests.getAuthentication()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1158 - Declaração do método: org.springframework.security.authentication.event.LoggerListenerTests.getAuthentication()
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
1159 - Declaração do método: org.springframework.security.authentication.event.LoggerListenerTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1160 - Declaração do método: org.springframework.security.authentication.event.LoggerListenerTests.setUp()
1160 - Declaração do método: org.springframework.security.authentication.event.LoggerListenerTests.testLogsEvents()
Métodos invocados: 
org.springframework.security.authentication.event.LoggerListenerTests.getAuthentication()
org.springframework.security.authentication.event.LoggerListener.onApplicationEvent(org.springframework.security.authentication.event.AbstractAuthenticationEvent)
junit.framework.Assert.assertTrue(Z)
1161 - Declaração do método: org.springframework.security.authentication.jaas.TestAuthorityGranter.grant(java.security.Principal)
Métodos invocados: 
java.security.Principal.getName()
java.lang.String.equals(java.lang.Object)
java.util.Set.add(java.lang.String)
java.util.Set.add(java.lang.String)
1162 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProviderTests.setUp()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
java.lang.String.replace(C, C)
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
1163 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProviderTests.testBadPassword()
Métodos invocados: 
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)
org.springframework.security.authentication.jaas.event.JaasAuthenticationFailedEvent.getException()
org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)
org.junit.Assert.assertNull(java.lang.String, java.lang.Object)
1164 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProviderTests.testBadUser()
Métodos invocados: 
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)
org.springframework.security.authentication.jaas.event.JaasAuthenticationFailedEvent.getException()
org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)
org.junit.Assert.assertNull(java.lang.String, java.lang.Object)
1165 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProviderTests.testConfigurationLoop()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
java.lang.String.replace(C, C)
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
java.net.URL.toString()
java.security.Security.setProperty(java.lang.String, java.lang.String)
org.springframework.security.authentication.jaas.JaasAuthenticationProviderTests.setUp()
org.springframework.security.authentication.jaas.JaasAuthenticationProviderTests.testFull()
1166 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProviderTests.detectsMissingLoginConfig()
Métodos invocados: 
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getAuthorityGranters()
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setAuthorityGranters([Lorg.springframework.security.authentication.jaas.AuthorityGranter;)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getCallbackHandlers()
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setCallbackHandlers([Lorg.springframework.security.authentication.jaas.JaasAuthenticationCallbackHandler;)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getLoginContextName()
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setLoginContextName(java.lang.String)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.afterPropertiesSet()
org.junit.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
org.junit.Assert.assertTrue(Z)
1167 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProviderTests.spacesInLoginConfigPathAreAccepted()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
java.io.File.deleteOnExit()
java.io.File.exists()
java.io.File.delete()
java.io.File.mkdir()
java.io.File.createTempFile(java.lang.String, java.lang.String, java.io.File)
java.io.File.deleteOnExit()
java.io.PrintWriter.append(java.lang.CharSequence)
java.io.PrintWriter.flush()
java.io.PrintWriter.close()
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setLoginConfig(org.springframework.core.io.Resource)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getAuthorityGranters()
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setAuthorityGranters([Lorg.springframework.security.authentication.jaas.AuthorityGranter;)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getCallbackHandlers()
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setCallbackHandlers([Lorg.springframework.security.authentication.jaas.JaasAuthenticationCallbackHandler;)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getLoginContextName()
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setLoginContextName(java.lang.String)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.afterPropertiesSet()
1168 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProviderTests.detectsMissingLoginContextName()
Métodos invocados: 
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getAuthorityGranters()
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setAuthorityGranters([Lorg.springframework.security.authentication.jaas.AuthorityGranter;)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getCallbackHandlers()
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setCallbackHandlers([Lorg.springframework.security.authentication.jaas.JaasAuthenticationCallbackHandler;)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getLoginConfig()
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setLoginConfig(org.springframework.core.io.Resource)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setLoginContextName(java.lang.String)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.afterPropertiesSet()
org.junit.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setLoginContextName(java.lang.String)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.afterPropertiesSet()
org.junit.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
org.junit.Assert.assertTrue(Z)
1169 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProviderTests.testFull()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.supports(java.lang.Class)
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getAuthorityGranters()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getCallbackHandlers()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getLoginConfig()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getLoginContextName()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.Authentication.getAuthorities()
java.util.Collection.contains(java.lang.Object)
org.junit.Assert.assertTrue(java.lang.String, Z)
java.util.Collection.contains(java.lang.Object)
org.junit.Assert.assertTrue(java.lang.String, Z)
java.util.List.get(I)
java.util.Collection.contains(java.lang.Object)
org.junit.Assert.assertTrue(java.lang.String, Z)
java.util.List.get(I)
java.util.Collection.contains(java.lang.Object)
org.junit.Assert.assertTrue(java.lang.String, Z)
org.springframework.security.authentication.jaas.JaasGrantedAuthority.getPrincipal()
org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(java.lang.String, Z)
org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)
org.springframework.security.authentication.jaas.event.JaasAuthenticationEvent.getAuthentication()
org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
org.junit.Assert.assertNull(java.lang.String, java.lang.Object)
1170 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProviderTests.testGetApplicationEventPublisher()
Métodos invocados: 
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getApplicationEventPublisher()
org.junit.Assert.assertNotNull(java.lang.Object)
1171 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProviderTests.testLoginExceptionResolver()
Métodos invocados: 
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getLoginExceptionResolver()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setLoginExceptionResolver(org.springframework.security.authentication.jaas.LoginExceptionResolver)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.fail(java.lang.String)
1172 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProviderTests$1.resolveException(javax.security.auth.login.LoginException)
1172 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProviderTests.testLogout()
Métodos invocados: 
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.getLoginContextName()
org.springframework.security.core.context.SecurityContextImpl.setAuthentication(org.springframework.security.core.Authentication)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.core.session.SessionDestroyedEvent.getSecurityContext()
org.mockito.Mockito.when(org.springframework.security.core.context.SecurityContext)
org.mockito.stubbing.OngoingStubbing.thenReturn(org.springframework.security.core.context.SecurityContext)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.handleLogout(org.springframework.security.core.session.SessionDestroyedEvent)
org.junit.Assert.assertTrue(Z)
1173 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProviderTests.testNullDefaultAuthorities()
Métodos invocados: 
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.supports(java.lang.Class)
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.core.Authentication.getAuthorities()
java.util.Collection.size()
org.junit.Assert.assertTrue(java.lang.String, Z)
1174 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProviderTests.testUnsupportedAuthenticationObjectReturnsNull()
Métodos invocados: 
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.assertNull(java.lang.Object)
1175 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProviderTests$MockLoginContext.MockLoginContext(java.lang.String)
1175 - Declaração do método: org.springframework.security.authentication.jaas.JaasAuthenticationProviderTests$MockLoginContext.logout()
1175 - Declaração do método: org.springframework.security.authentication.jaas.TestCallbackHandler.handle(javax.security.auth.callback.Callback, org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.core.Authentication.getPrincipal()
java.lang.Object.toString()
javax.security.auth.callback.TextInputCallback.setText(java.lang.String)
1176 - Declaração do método: org.springframework.security.authentication.jaas.SecurityContextLoginModuleTests.setUp()
Métodos invocados: 
org.springframework.security.authentication.jaas.SecurityContextLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1177 - Declaração do método: org.springframework.security.authentication.jaas.SecurityContextLoginModuleTests.tearDown()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1178 - Declaração do método: org.springframework.security.authentication.jaas.SecurityContextLoginModuleTests.testAbort()
Métodos invocados: 
org.springframework.security.authentication.jaas.SecurityContextLoginModule.abort()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.authentication.jaas.SecurityContextLoginModule.login()
org.springframework.security.authentication.jaas.SecurityContextLoginModule.commit()
org.springframework.security.authentication.jaas.SecurityContextLoginModule.abort()
junit.framework.Assert.assertTrue(Z)
1179 - Declaração do método: org.springframework.security.authentication.jaas.SecurityContextLoginModuleTests.testLoginException()
Métodos invocados: 
org.springframework.security.authentication.jaas.SecurityContextLoginModule.login()
junit.framework.Assert.fail(java.lang.String)
1180 - Declaração do método: org.springframework.security.authentication.jaas.SecurityContextLoginModuleTests.testLoginSuccess()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.authentication.jaas.SecurityContextLoginModule.login()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.springframework.security.authentication.jaas.SecurityContextLoginModule.commit()
junit.framework.Assert.assertTrue(java.lang.String, Z)
javax.security.auth.Subject.getPrincipals()
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1181 - Declaração do método: org.springframework.security.authentication.jaas.SecurityContextLoginModuleTests.testLogout()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.authentication.jaas.SecurityContextLoginModule.login()
org.springframework.security.authentication.jaas.SecurityContextLoginModule.logout()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.springframework.security.authentication.jaas.SecurityContextLoginModule.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
javax.security.auth.Subject.getPrincipals()
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
1182 - Declaração do método: org.springframework.security.authentication.jaas.SecurityContextLoginModuleTests.testNullAuthenticationInSecurityContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.authentication.jaas.SecurityContextLoginModule.login()
junit.framework.Assert.fail(java.lang.String)
1183 - Declaração do método: org.springframework.security.authentication.jaas.SecurityContextLoginModuleTests.testNullAuthenticationInSecurityContextIgnored()
Métodos invocados: 
java.util.Map.put(java.lang.String, java.lang.String)
org.springframework.security.authentication.jaas.SecurityContextLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.authentication.jaas.SecurityContextLoginModule.login()
junit.framework.Assert.assertFalse(java.lang.String, Z)
1184 - Declaração do método: org.springframework.security.authentication.jaas.SecurityContextLoginModuleTests.testNullLogout()
Métodos invocados: 
org.springframework.security.authentication.jaas.SecurityContextLoginModule.logout()
junit.framework.Assert.assertFalse(Z)
1185 - Declaração do método: org.springframework.security.authentication.jaas.TestLoginModule.abort()
1185 - Declaração do método: org.springframework.security.authentication.jaas.TestLoginModule.commit()
1185 - Declaração do método: org.springframework.security.authentication.jaas.TestLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
Métodos invocados: 
javax.security.auth.callback.CallbackHandler.handle([Ljavax.security.auth.callback.Callback;)
javax.security.auth.callback.PasswordCallback.getPassword()
javax.security.auth.callback.NameCallback.getName()
1186 - Declaração do método: org.springframework.security.authentication.jaas.TestLoginModule.login()
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
javax.security.auth.Subject.getPrincipals()
java.util.Set.add(java.security.Principal)
javax.security.auth.Subject.getPrincipals()
java.util.Set.add(java.security.Principal)
1187 - Declaração do método: org.springframework.security.authentication.jaas.TestLoginModule$1.getName()
1187 - Declaração do método: org.springframework.security.authentication.jaas.TestLoginModule$2.getName()
1187 - Declaração do método: org.springframework.security.authentication.jaas.TestLoginModule.logout()
1187 - Declaração do método: org.springframework.security.authentication.jaas.Sec760Tests.resolveConfigFile(java.lang.String)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getPackage()
java.lang.Package.getName()
java.lang.String.replace(C, C)
1188 - Declaração do método: org.springframework.security.authentication.jaas.Sec760Tests.testConfigureJaasCase(org.springframework.security.authentication.jaas.JaasAuthenticationProvider, org.springframework.security.authentication.jaas.JaasAuthenticationProvider)
Métodos invocados: 
org.springframework.security.authentication.jaas.Sec760Tests.resolveConfigFile(java.lang.String)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setLoginConfig(org.springframework.core.io.Resource)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setLoginContextName(java.lang.String)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setCallbackHandlers([Lorg.springframework.security.authentication.jaas.JaasAuthenticationCallbackHandler;)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setAuthorityGranters([Lorg.springframework.security.authentication.jaas.AuthorityGranter;)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.afterPropertiesSet()
org.springframework.security.authentication.jaas.Sec760Tests.testAuthenticate(org.springframework.security.authentication.jaas.JaasAuthenticationProvider)
org.springframework.security.authentication.jaas.Sec760Tests.resolveConfigFile(java.lang.String)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setLoginConfig(org.springframework.core.io.Resource)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setLoginContextName(java.lang.String)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setCallbackHandlers([Lorg.springframework.security.authentication.jaas.JaasAuthenticationCallbackHandler;)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.setAuthorityGranters([Lorg.springframework.security.authentication.jaas.AuthorityGranter;)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.afterPropertiesSet()
org.springframework.security.authentication.jaas.Sec760Tests.testAuthenticate(org.springframework.security.authentication.jaas.JaasAuthenticationProvider)
1189 - Declaração do método: org.springframework.security.authentication.jaas.Sec760Tests.testAuthenticate(org.springframework.security.authentication.jaas.JaasAuthenticationProvider)
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.authentication.jaas.JaasAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.assertNotNull(java.lang.Object)
1190 - Declaração do método: org.springframework.security.authentication.jaas.Sec760Tests.testConfigureJaas()
Métodos invocados: 
org.springframework.security.authentication.jaas.Sec760Tests.testConfigureJaasCase(org.springframework.security.authentication.jaas.JaasAuthenticationProvider, org.springframework.security.authentication.jaas.JaasAuthenticationProvider)
1191 - Declaração do método: org.springframework.security.authentication.jaas.JaasEventCheck.onApplicationEvent(org.springframework.security.authentication.jaas.event.JaasAuthenticationEvent)
1191 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationManagerImplTests.testFailedAuthenticationReturnsRemoteAuthenticationException()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenThrow([Ljava.lang.Throwable;)
org.springframework.security.authentication.rcp.RemoteAuthenticationManagerImpl.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.authentication.rcp.RemoteAuthenticationManagerImpl.attemptAuthentication(java.lang.String, java.lang.String)
1192 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationManagerImplTests.testStartupChecksAuthenticationManagerSet()
Métodos invocados: 
org.springframework.security.authentication.rcp.RemoteAuthenticationManagerImpl.afterPropertiesSet()
org.junit.Assert.fail(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.authentication.rcp.RemoteAuthenticationManagerImpl.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.authentication.rcp.RemoteAuthenticationManagerImpl.afterPropertiesSet()
org.junit.Assert.assertTrue(Z)
1193 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationManagerImplTests.testSuccessfulAuthentication()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenReturn(org.springframework.security.core.Authentication)
org.springframework.security.authentication.rcp.RemoteAuthenticationManagerImpl.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.authentication.rcp.RemoteAuthenticationManagerImpl.attemptAuthentication(java.lang.String, java.lang.String)
1194 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationProviderTests.testExceptionsGetPassedBackToCaller()
Métodos invocados: 
org.springframework.security.authentication.rcp.RemoteAuthenticationProvider.setRemoteAuthenticationManager(org.springframework.security.authentication.rcp.RemoteAuthenticationManager)
org.springframework.security.authentication.rcp.RemoteAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1195 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationProviderTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.authentication.rcp.RemoteAuthenticationProvider.setRemoteAuthenticationManager(org.springframework.security.authentication.rcp.RemoteAuthenticationManager)
org.springframework.security.authentication.rcp.RemoteAuthenticationProvider.getRemoteAuthenticationManager()
junit.framework.Assert.assertNotNull(java.lang.Object)
1196 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationProviderTests.testStartupChecksAuthenticationManagerSet()
Métodos invocados: 
org.springframework.security.authentication.rcp.RemoteAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.rcp.RemoteAuthenticationProvider.setRemoteAuthenticationManager(org.springframework.security.authentication.rcp.RemoteAuthenticationManager)
org.springframework.security.authentication.rcp.RemoteAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.assertTrue(Z)
1197 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationProviderTests.testSuccessfulAuthenticationCreatesObject()
Métodos invocados: 
org.springframework.security.authentication.rcp.RemoteAuthenticationProvider.setRemoteAuthenticationManager(org.springframework.security.authentication.rcp.RemoteAuthenticationManager)
org.springframework.security.authentication.rcp.RemoteAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.core.Authentication.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.Authentication.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.Authentication.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
1198 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationProviderTests.testSupports()
Métodos invocados: 
org.springframework.security.authentication.rcp.RemoteAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
1199 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationProviderTests$MockRemoteAuthenticationManager.MockRemoteAuthenticationManager(Z)
1199 - Declaração do método: org.springframework.security.authentication.rcp.RemoteAuthenticationProviderTests$MockRemoteAuthenticationManager.attemptAuthentication(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
1200 - Declaração do método: org.springframework.security.authentication.rememberme.RememberMeAuthenticationTokenTests.testConstructorRejectsNulls()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.util.List.add(org.springframework.security.core.GrantedAuthority)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1201 - Declaração do método: org.springframework.security.authentication.rememberme.RememberMeAuthenticationTokenTests.testEqualsWhenEqual()
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1202 - Declaração do método: org.springframework.security.authentication.rememberme.RememberMeAuthenticationTokenTests.testGetters()
Métodos invocados: 
java.lang.String.hashCode()
org.springframework.security.authentication.RememberMeAuthenticationToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.authentication.RememberMeAuthenticationToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.RememberMeAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
1203 - Declaração do método: org.springframework.security.authentication.rememberme.RememberMeAuthenticationTokenTests.testNotEqualsDueToAbstractParentEqualsCheck()
Métodos invocados: 
org.springframework.security.authentication.RememberMeAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1204 - Declaração do método: org.springframework.security.authentication.rememberme.RememberMeAuthenticationTokenTests.testNotEqualsDueToDifferentAuthenticationClass()
Métodos invocados: 
org.springframework.security.authentication.RememberMeAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1205 - Declaração do método: org.springframework.security.authentication.rememberme.RememberMeAuthenticationTokenTests.testNotEqualsDueToKey()
Métodos invocados: 
org.springframework.security.authentication.RememberMeAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1206 - Declaração do método: org.springframework.security.authentication.rememberme.RememberMeAuthenticationTokenTests.testSetAuthenticatedIgnored()
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.setAuthenticated(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
1207 - Declaração do método: org.springframework.security.authentication.rememberme.RememberMeAuthenticationProviderTests.testDetectsAnInvalidKey()
Métodos invocados: 
org.springframework.security.authentication.RememberMeAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.authentication.RememberMeAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
1208 - Declaração do método: org.springframework.security.authentication.rememberme.RememberMeAuthenticationProviderTests.testDetectsMissingKey()
Métodos invocados: 
org.springframework.security.authentication.RememberMeAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1209 - Declaração do método: org.springframework.security.authentication.rememberme.RememberMeAuthenticationProviderTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.authentication.RememberMeAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.authentication.RememberMeAuthenticationProvider.afterPropertiesSet()
org.springframework.security.authentication.RememberMeAuthenticationProvider.getKey()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1210 - Declaração do método: org.springframework.security.authentication.rememberme.RememberMeAuthenticationProviderTests.testIgnoresClassesItDoesNotSupport()
Métodos invocados: 
org.springframework.security.authentication.RememberMeAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.authentication.RememberMeAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.authentication.RememberMeAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.assertNull(java.lang.Object)
1211 - Declaração do método: org.springframework.security.authentication.rememberme.RememberMeAuthenticationProviderTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.authentication.RememberMeAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.authentication.RememberMeAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1212 - Declaração do método: org.springframework.security.authentication.rememberme.RememberMeAuthenticationProviderTests.testSupports()
Métodos invocados: 
org.springframework.security.authentication.RememberMeAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.RememberMeAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertFalse(Z)
1213 - Declaração do método: org.springframework.security.core.SpringSecurityMessageSourceTests.testOperation()
Métodos invocados: 
org.springframework.context.support.AbstractMessageSource.getMessage(java.lang.String, [Ljava.lang.Object;, java.util.Locale)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1214 - Declaração do método: org.springframework.security.core.SpringSecurityMessageSourceTests.testReplacableLookup()
Métodos invocados: 
org.springframework.context.i18n.LocaleContextHolder.getLocale()
org.springframework.context.i18n.LocaleContextHolder.setLocale(java.util.Locale)
org.springframework.security.core.SpringSecurityMessageSource.getAccessor()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.context.i18n.LocaleContextHolder.setLocale(java.util.Locale)
1215 - Declaração do método: org.springframework.security.core.authority.AuthorityUtilsTests.commaSeparatedStringIsParsedCorrectly()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.commaSeparatedStringToAuthorityList(java.lang.String)
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
1216 - Declaração do método: org.springframework.security.core.authority.GrantedAuthorityImplTests.equalsBehavesAsExpected()
Métodos invocados: 
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.authority.GrantedAuthorityImpl.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.authority.GrantedAuthorityImpl.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.authority.GrantedAuthorityImpl.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.authority.GrantedAuthorityImpl.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
1217 - Declaração do método: org.springframework.security.core.authority.GrantedAuthorityImplTests.toStringReturnsAuthorityValue()
Métodos invocados: 
org.springframework.security.core.authority.GrantedAuthorityImpl.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1218 - Declaração do método: org.springframework.security.core.authority.GrantedAuthorityImplTests$MockGrantedAuthority.MockGrantedAuthority(java.lang.String)
1218 - Declaração do método: org.springframework.security.core.authority.GrantedAuthorityImplTests$MockGrantedAuthority.getAuthority()
1218 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.testAfterPropertiesSetConvertToUpperAndLowerCase()
Métodos invocados: 
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToLowerCase(Z)
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToUpperCase(Z)
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
1219 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.testAfterPropertiesSet()
Métodos invocados: 
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
1220 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthoritiesNoConversion()
Métodos invocados: 
org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.getDefaultMapper()
org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1221 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthoritiesToUpperCase()
Métodos invocados: 
org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.getDefaultMapper()
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToUpperCase(Z)
org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1222 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthoritiesToLowerCase()
Métodos invocados: 
org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.getDefaultMapper()
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToLowerCase(Z)
org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1223 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthoritiesAddPrefixIfAlreadyExisting()
Métodos invocados: 
org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.getDefaultMapper()
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setAddPrefixIfAlreadyExisting(Z)
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setAttributePrefix(java.lang.String)
org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1224 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthoritiesDontAddPrefixIfAlreadyExisting1()
Métodos invocados: 
org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.getDefaultMapper()
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setAddPrefixIfAlreadyExisting(Z)
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setAttributePrefix(java.lang.String)
org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1225 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthoritiesDontAddPrefixIfAlreadyExisting2()
Métodos invocados: 
org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.getDefaultMapper()
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setAddPrefixIfAlreadyExisting(Z)
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setAttributePrefix(java.lang.String)
org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1226 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthoritiesCombination1()
Métodos invocados: 
org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.getDefaultMapper()
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setAddPrefixIfAlreadyExisting(Z)
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToUpperCase(Z)
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setAttributePrefix(java.lang.String)
org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1227 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.String;)
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.getGrantedAuthorities(java.util.Collection)
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
org.springframework.security.core.GrantedAuthority.getAuthority()
java.util.Collection.add(java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Collection.containsAll(java.util.Collection)
java.util.Collection.containsAll(java.util.Collection)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1228 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleRoles2GrantedAuthoritiesMapperTests.getDefaultMapper()
Métodos invocados: 
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setAttributePrefix(java.lang.String)
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToLowerCase(Z)
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToUpperCase(Z)
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setAddPrefixIfAlreadyExisting(Z)
1229 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testAfterPropertiesSetNoMap()
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.afterPropertiesSet()
1230 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testAfterPropertiesSetEmptyMap()
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.setAttributes2grantedAuthoritiesMap(java.util.Map)
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.afterPropertiesSet()
1231 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testAfterPropertiesSetInvalidKeyTypeMap()
Métodos invocados: 
java.util.HashMap.put(java.lang.Object, java.lang.Object)
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.setAttributes2grantedAuthoritiesMap(java.util.Map)
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.afterPropertiesSet()
1232 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testAfterPropertiesSetInvalidValueTypeMap1()
Métodos invocados: 
java.util.HashMap.put(java.lang.Object, java.lang.Object)
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.setAttributes2grantedAuthoritiesMap(java.util.Map)
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.afterPropertiesSet()
1233 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testAfterPropertiesSetInvalidValueTypeMap2()
Métodos invocados: 
java.util.HashMap.put(java.lang.Object, java.lang.Object)
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.setAttributes2grantedAuthoritiesMap(java.util.Map)
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.afterPropertiesSet()
1234 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testAfterPropertiesSetValidMap()
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.getValidAttributes2GrantedAuthoritiesMap()
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.setAttributes2grantedAuthoritiesMap(java.util.Map)
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.afterPropertiesSet()
1235 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testMapping1()
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.getDefaultMapper()
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1236 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testMapping2()
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.getDefaultMapper()
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1237 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testMapping3()
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.getDefaultMapper()
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1238 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testMapping4()
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.getDefaultMapper()
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1239 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testMapping5()
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.getDefaultMapper()
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1240 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testMapping6()
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.getDefaultMapper()
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1241 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testMapping7()
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.getDefaultMapper()
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1242 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testMapping8()
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.getDefaultMapper()
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1243 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testMapping9()
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.getDefaultMapper()
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1244 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testMapping10()
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.getDefaultMapper()
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1245 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testMapping11()
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.getDefaultMapper()
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1246 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testNonExistingMapping()
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.getDefaultMapper()
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1247 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testMappingCombination()
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.getDefaultMapper()
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1248 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.getValidAttributes2GrantedAuthoritiesMap()
Métodos invocados: 
java.util.HashMap.put(java.lang.Object, java.lang.Object)
java.util.HashMap.put(java.lang.Object, java.lang.Object)
java.util.Arrays.asList([Ljava.lang.Object;)
java.util.HashMap.put(java.lang.Object, java.lang.Object)
java.util.HashMap.put(java.lang.Object, java.lang.Object)
java.util.Arrays.asList([Ljava.lang.Object;)
java.util.HashMap.put(java.lang.Object, java.lang.Object)
java.util.HashMap.put(java.lang.Object, java.lang.Object)
java.util.HashMap.put(java.lang.Object, java.lang.Object)
java.util.HashMap.put(java.lang.Object, java.lang.Object)
java.util.HashMap.put(java.lang.Object, java.lang.Object)
java.util.HashMap.put(java.lang.Object, java.lang.Object)
java.util.Arrays.asList([Ljava.lang.Object;)
java.util.HashMap.put(java.lang.Object, java.lang.Object)
1249 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.getDefaultMapper()
Métodos invocados: 
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.getValidAttributes2GrantedAuthoritiesMap()
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.setAttributes2grantedAuthoritiesMap(java.util.Map)
org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper.afterPropertiesSet()
1250 - Declaração do método: org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapperTest.testGetGrantedAuthorities(org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.String;)
org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper.getGrantedAuthorities(java.util.Collection)
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
org.springframework.security.core.GrantedAuthority.getAuthority()
java.util.Collection.add(java.lang.Object)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Collection.containsAll(java.util.Collection)
java.util.Collection.containsAll(java.util.Collection)
org.junit.Assert.assertTrue(java.lang.String, Z)
1251 - Declaração do método: org.springframework.security.core.authority.mapping.SimpleMappableRolesRetrieverTests.testGetSetMappableRoles()
Métodos invocados: 
org.springframework.util.StringUtils.commaDelimitedListToSet(java.lang.String)
org.springframework.security.core.authority.mapping.SimpleMappableAttributesRetriever.setMappableAttributes(java.util.Set)
org.springframework.security.core.authority.mapping.SimpleMappableAttributesRetriever.getMappableAttributes()
java.util.Set.containsAll(java.util.Collection)
java.util.Set.containsAll(java.util.Collection)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1252 - Declaração do método: org.springframework.security.core.context.SecurityContextImplTests.SecurityContextImplTests()
1252 - Declaração do método: org.springframework.security.core.context.SecurityContextImplTests.SecurityContextImplTests(java.lang.String)
1252 - Declaração do método: org.springframework.security.core.context.SecurityContextImplTests.testEmptyObjectsAreEquals()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextImpl.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
1253 - Declaração do método: org.springframework.security.core.context.SecurityContextImplTests.testSecurityContextCorrectOperation()
Métodos invocados: 
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.core.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Object.toString()
java.lang.String.lastIndexOf(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1254 - Declaração do método: org.springframework.security.core.context.SecurityContextHolderTests.setUp()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.setStrategyName(java.lang.String)
1255 - Declaração do método: org.springframework.security.core.context.SecurityContextHolderTests.testContextHolderGetterSetterClearer()
Métodos invocados: 
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.core.context.SecurityContextHolder.setContext(org.springframework.security.core.context.SecurityContext)
org.springframework.security.core.context.SecurityContextHolder.getContext()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.springframework.security.core.context.SecurityContextHolder.getContext()
junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1256 - Declaração do método: org.springframework.security.core.context.SecurityContextHolderTests.testNeverReturnsNull()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1257 - Declaração do método: org.springframework.security.core.context.SecurityContextHolderTests.testRejectsNulls()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.setContext(org.springframework.security.core.context.SecurityContext)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1258 - Declaração do método: org.springframework.security.core.session.SessionInformationTests.testObject()
Métodos invocados: 
org.springframework.security.core.session.SessionInformation.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.session.SessionInformation.getSessionId()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.session.SessionInformation.getLastRequest()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Thread.sleep(J)
org.springframework.security.core.session.SessionInformation.refreshLastRequest()
org.springframework.security.core.session.SessionInformation.getLastRequest()
java.util.Date.after(java.util.Date)
junit.framework.Assert.assertTrue(Z)
1259 - Declaração do método: org.springframework.security.core.session.SessionRegistryImplTests.setUp()
1259 - Declaração do método: org.springframework.security.core.session.SessionRegistryImplTests.sessionDestroyedEventRemovesSessionFromRegistry()
Métodos invocados: 
org.springframework.security.core.session.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.security.core.session.SessionRegistryImpl.onApplicationEvent(org.springframework.security.core.session.SessionDestroyedEvent)
org.springframework.security.core.session.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
1260 - Declaração do método: org.springframework.security.core.session.SessionRegistryImplTests$1.getId()
1260 - Declaração do método: org.springframework.security.core.session.SessionRegistryImplTests$1.getSecurityContext()
1260 - Declaração do método: org.springframework.security.core.session.SessionRegistryImplTests.testMultiplePrincipals()
Métodos invocados: 
org.springframework.security.core.session.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.security.core.session.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.security.core.session.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.security.core.session.SessionRegistryImpl.getAllPrincipals()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.core.session.SessionRegistryImpl.getAllPrincipals()
java.util.List.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.session.SessionRegistryImpl.getAllPrincipals()
java.util.List.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
1261 - Declaração do método: org.springframework.security.core.session.SessionRegistryImplTests.testSessionInformationLifecycle()
Métodos invocados: 
org.springframework.security.core.session.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.security.core.session.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.core.session.SessionInformation.getLastRequest()
org.springframework.security.core.session.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.core.session.SessionInformation.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.session.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.core.session.SessionInformation.getSessionId()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.session.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.core.session.SessionInformation.getLastRequest()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.session.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.lang.Thread.sleep(J)
org.springframework.security.core.session.SessionRegistryImpl.refreshLastRequest(java.lang.String)
org.springframework.security.core.session.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.core.session.SessionInformation.getLastRequest()
java.util.Date.after(java.util.Date)
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.session.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
java.util.List.get(I)
org.springframework.security.core.session.SessionInformation.getLastRequest()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.session.SessionRegistryImpl.removeSessionInformation(java.lang.String)
org.springframework.security.core.session.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.core.session.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
1262 - Declaração do método: org.springframework.security.core.session.SessionRegistryImplTests.testTwoSessionsOnePrincipalExpiring()
Métodos invocados: 
org.springframework.security.core.session.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.security.core.session.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.core.session.SessionRegistryImplTests.contains(java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.session.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.security.core.session.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.core.session.SessionRegistryImplTests.contains(java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.session.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.core.session.SessionInformation.expireNow()
org.springframework.security.core.session.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.core.session.SessionInformation.isExpired()
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.session.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.core.session.SessionInformation.isExpired()
org.junit.Assert.assertFalse(Z)
1263 - Declaração do método: org.springframework.security.core.session.SessionRegistryImplTests.testTwoSessionsOnePrincipalHandling()
Métodos invocados: 
org.springframework.security.core.session.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.security.core.session.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.core.session.SessionRegistryImplTests.contains(java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.session.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.security.core.session.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.core.session.SessionRegistryImplTests.contains(java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.session.SessionRegistryImpl.removeSessionInformation(java.lang.String)
org.springframework.security.core.session.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.core.session.SessionRegistryImplTests.contains(java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.session.SessionRegistryImpl.removeSessionInformation(java.lang.String)
org.springframework.security.core.session.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.core.session.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
1264 - Declaração do método: org.springframework.security.core.session.SessionRegistryImplTests.contains(java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.security.core.session.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
java.util.List.size()
java.util.List.get(I)
org.springframework.security.core.session.SessionInformation.getSessionId()
java.lang.String.equals(java.lang.Object)
1265 - Declaração do método: org.springframework.security.core.token.SecureRandomFactoryBeanTests.testObjectType()
Métodos invocados: 
org.springframework.security.core.token.SecureRandomFactoryBean.getObjectType()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1266 - Declaração do método: org.springframework.security.core.token.SecureRandomFactoryBeanTests.testIsSingleton()
Métodos invocados: 
org.springframework.security.core.token.SecureRandomFactoryBean.isSingleton()
junit.framework.Assert.assertFalse(Z)
1267 - Declaração do método: org.springframework.security.core.token.SecureRandomFactoryBeanTests.testCreatesUsingDefaults()
Métodos invocados: 
org.springframework.security.core.token.SecureRandomFactoryBean.getObject()
junit.framework.Assert.assertTrue(Z)
java.util.Random.nextInt()
junit.framework.Assert.assertTrue(Z)
1268 - Declaração do método: org.springframework.security.core.token.SecureRandomFactoryBeanTests.testCreatesUsingSeed()
Métodos invocados: 
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.token.SecureRandomFactoryBean.setSeed(org.springframework.core.io.Resource)
org.springframework.security.core.token.SecureRandomFactoryBean.getObject()
junit.framework.Assert.assertTrue(Z)
java.util.Random.nextInt()
junit.framework.Assert.assertTrue(Z)
1269 - Declaração do método: org.springframework.security.core.token.DefaultTokenTests.testEquality()
Métodos invocados: 
java.util.Date.getTime()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1270 - Declaração do método: org.springframework.security.core.token.DefaultTokenTests.testRejectsNullExtendedInformation()
Métodos invocados: 
java.util.Date.getTime()
1271 - Declaração do método: org.springframework.security.core.token.DefaultTokenTests.testEqualityWithDifferentExtendedInformation3()
Métodos invocados: 
java.util.Date.getTime()
org.springframework.security.core.token.DefaultToken.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1272 - Declaração do método: org.springframework.security.core.token.KeyBasedPersistenceTokenServiceTests.getService()
Métodos invocados: 
org.springframework.security.core.token.KeyBasedPersistenceTokenService.setServerSecret(java.lang.String)
org.springframework.security.core.token.KeyBasedPersistenceTokenService.setServerInteger(java.lang.Integer)
org.springframework.security.core.token.SecureRandomFactoryBean.getObject()
org.springframework.security.core.token.KeyBasedPersistenceTokenService.setSecureRandom(java.security.SecureRandom)
org.springframework.security.core.token.KeyBasedPersistenceTokenService.afterPropertiesSet()
1273 - Declaração do método: org.springframework.security.core.token.KeyBasedPersistenceTokenServiceTests.testOperationWithSimpleExtendedInformation()
Métodos invocados: 
org.springframework.security.core.token.KeyBasedPersistenceTokenServiceTests.getService()
org.springframework.security.core.token.KeyBasedPersistenceTokenService.allocateToken(java.lang.String)
org.springframework.security.core.token.Token.getKey()
org.springframework.security.core.token.KeyBasedPersistenceTokenService.verifyToken(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1274 - Declaração do método: org.springframework.security.core.token.KeyBasedPersistenceTokenServiceTests.testOperationWithComplexExtendedInformation()
Métodos invocados: 
org.springframework.security.core.token.KeyBasedPersistenceTokenServiceTests.getService()
org.springframework.security.core.token.KeyBasedPersistenceTokenService.allocateToken(java.lang.String)
org.springframework.security.core.token.Token.getKey()
org.springframework.security.core.token.KeyBasedPersistenceTokenService.verifyToken(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1275 - Declaração do método: org.springframework.security.core.token.KeyBasedPersistenceTokenServiceTests.testOperationWithEmptyRandomNumber()
Métodos invocados: 
org.springframework.security.core.token.KeyBasedPersistenceTokenServiceTests.getService()
org.springframework.security.core.token.KeyBasedPersistenceTokenService.setPseudoRandomNumberBits(I)
org.springframework.security.core.token.KeyBasedPersistenceTokenService.allocateToken(java.lang.String)
org.springframework.security.core.token.Token.getKey()
org.springframework.security.core.token.KeyBasedPersistenceTokenService.verifyToken(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1276 - Declaração do método: org.springframework.security.core.token.KeyBasedPersistenceTokenServiceTests.testOperationWithNoExtendedInformation()
Métodos invocados: 
org.springframework.security.core.token.KeyBasedPersistenceTokenServiceTests.getService()
org.springframework.security.core.token.KeyBasedPersistenceTokenService.allocateToken(java.lang.String)
org.springframework.security.core.token.Token.getKey()
org.springframework.security.core.token.KeyBasedPersistenceTokenService.verifyToken(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1277 - Declaração do método: org.springframework.security.core.token.KeyBasedPersistenceTokenServiceTests.testOperationWithMissingKey()
Métodos invocados: 
org.springframework.security.core.token.KeyBasedPersistenceTokenServiceTests.getService()
java.util.Date.getTime()
org.springframework.security.core.token.Token.getKey()
org.springframework.security.core.token.KeyBasedPersistenceTokenService.verifyToken(java.lang.String)
1278 - Declaração do método: org.springframework.security.core.token.KeyBasedPersistenceTokenServiceTests.testOperationWithTamperedKey()
Métodos invocados: 
org.springframework.security.core.token.KeyBasedPersistenceTokenServiceTests.getService()
org.springframework.security.core.token.KeyBasedPersistenceTokenService.allocateToken(java.lang.String)
org.springframework.security.core.token.Token.getKey()
java.lang.String.toUpperCase()
java.util.Date.getTime()
org.springframework.security.core.token.Token.getKey()
org.springframework.security.core.token.KeyBasedPersistenceTokenService.verifyToken(java.lang.String)
1279 - Declaração do método: org.springframework.security.core.userdetails.UserTests.equalsReturnsTrueIfUsernamesAreTheSame()
Métodos invocados: 
org.springframework.security.core.userdetails.User.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
org.springframework.security.core.userdetails.User.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
org.springframework.security.core.userdetails.User.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.User.equals(java.lang.Object)
org.junit.Assert.assertTrue(Z)
1280 - Declaração do método: org.springframework.security.core.userdetails.UserTests.hashLookupOnlyDependsOnUsername()
Métodos invocados: 
java.util.Set.add(org.springframework.security.core.userdetails.UserDetails)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertFalse(Z)
1281 - Declaração do método: org.springframework.security.core.userdetails.UserTests.testNoArgConstructorDoesntExist()
Métodos invocados: 
java.lang.Class.getDeclaredConstructor([Ljava.lang.Class;)
org.junit.Assert.fail(java.lang.String)
1282 - Declaração do método: org.springframework.security.core.userdetails.UserTests.testNullValuesRejected()
Métodos invocados: 
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
java.util.List.add(org.springframework.security.core.GrantedAuthority)
org.junit.Assert.fail(java.lang.String)
1283 - Declaração do método: org.springframework.security.core.userdetails.UserTests.testNullWithinGrantedAuthorityElementIsRejected()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
java.util.List.add(org.springframework.security.core.GrantedAuthority)
java.util.List.add(org.springframework.security.core.GrantedAuthority)
org.junit.Assert.fail(java.lang.String)
1284 - Declaração do método: org.springframework.security.core.userdetails.UserTests.testUserGettersSetter()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.UserDetails.isEnabled()
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.lang.Object.toString()
java.lang.String.indexOf(java.lang.String)
org.junit.Assert.assertTrue(Z)
1285 - Declaração do método: org.springframework.security.core.userdetails.UserTests.enabledFlagIsFalseForDisabledAccount()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.isEnabled()
org.junit.Assert.assertFalse(Z)
1286 - Declaração do método: org.springframework.security.core.userdetails.UserTests.useIsSerializable()
Métodos invocados: 
java.io.ObjectOutputStream.writeObject(java.lang.Object)
java.io.ObjectOutputStream.close()
1287 - Declaração do método: org.springframework.security.core.userdetails.MockUserDetailsService.MockUserDetailsService()
Métodos invocados: 
java.util.Map.put(java.lang.String, org.springframework.security.core.userdetails.User)
java.util.Map.put(java.lang.String, org.springframework.security.core.userdetails.User)
java.util.Map.put(java.lang.String, org.springframework.security.core.userdetails.User)
java.util.Map.put(java.lang.String, org.springframework.security.core.userdetails.User)
java.util.Map.put(java.lang.String, org.springframework.security.core.userdetails.User)
1288 - Declaração do método: org.springframework.security.core.userdetails.MockUserDetailsService.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
1289 - Declaração do método: org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapperTests.testAfterPropertiesSet()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
1290 - Declaração do método: org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapperTests.testGetUserDetails()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.core.userdetails.User.getUsername()
java.lang.String.equals(java.lang.Object)
org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper.afterPropertiesSet()
org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper.loadUserDetails(org.springframework.security.core.Authentication)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper.loadUserDetails(org.springframework.security.core.Authentication)
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
1291 - Declaração do método: org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapperTests$1.loadUserByUsername(java.lang.String)
Métodos invocados: 
org.springframework.security.core.userdetails.User.getUsername()
java.lang.String.equals(java.lang.Object)
1292 - Declaração do método: org.springframework.security.core.userdetails.cache.EhCacheBasedUserCacheTests.initCacheManaer()
Métodos invocados: 
net.sf.ehcache.CacheManager.addCache(net.sf.ehcache.Cache)
1293 - Declaração do método: org.springframework.security.core.userdetails.cache.EhCacheBasedUserCacheTests.shutdownCacheManager()
Métodos invocados: 
net.sf.ehcache.CacheManager.removalAll()
net.sf.ehcache.CacheManager.shutdown()
1294 - Declaração do método: org.springframework.security.core.userdetails.cache.EhCacheBasedUserCacheTests.getCache()
Métodos invocados: 
net.sf.ehcache.CacheManager.getCache(java.lang.String)
net.sf.ehcache.Ehcache.removeAll()
1295 - Declaração do método: org.springframework.security.core.userdetails.cache.EhCacheBasedUserCacheTests.getUser()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
1296 - Declaração do método: org.springframework.security.core.userdetails.cache.EhCacheBasedUserCacheTests.cacheOperationsAreSuccessful()
Métodos invocados: 
org.springframework.security.core.userdetails.cache.EhCacheBasedUserCacheTests.getCache()
org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache.setCache(net.sf.ehcache.Ehcache)
org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache.afterPropertiesSet()
org.springframework.security.core.userdetails.cache.EhCacheBasedUserCacheTests.getUser()
org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache.putUserInCache(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.userdetails.cache.EhCacheBasedUserCacheTests.getUser()
org.springframework.security.core.userdetails.User.getPassword()
org.springframework.security.core.userdetails.cache.EhCacheBasedUserCacheTests.getUser()
org.springframework.security.core.userdetails.User.getUsername()
org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache.getUserFromCache(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.cache.EhCacheBasedUserCacheTests.getUser()
org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache.removeUserFromCache(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.userdetails.cache.EhCacheBasedUserCacheTests.getUser()
org.springframework.security.core.userdetails.User.getUsername()
org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache.getUserFromCache(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache.getUserFromCache(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache.getUserFromCache(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
1297 - Declaração do método: org.springframework.security.core.userdetails.cache.EhCacheBasedUserCacheTests.startupDetectsMissingCache()
Métodos invocados: 
org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache.afterPropertiesSet()
org.junit.Assert.fail(java.lang.String)
org.springframework.security.core.userdetails.cache.EhCacheBasedUserCacheTests.getCache()
org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache.setCache(net.sf.ehcache.Ehcache)
org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache.getCache()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1298 - Declaração do método: org.springframework.security.core.userdetails.cache.NullUserCacheTests.getUser()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
1299 - Declaração do método: org.springframework.security.core.userdetails.cache.NullUserCacheTests.testCacheOperation()
Métodos invocados: 
org.springframework.security.core.userdetails.cache.NullUserCacheTests.getUser()
org.springframework.security.core.userdetails.cache.NullUserCache.putUserInCache(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.userdetails.cache.NullUserCache.getUserFromCache(java.lang.String)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.core.userdetails.cache.NullUserCache.removeUserFromCache(java.lang.String)
1300 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
Métodos invocados: 
org.springframework.security.PopulatedDatabase.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.setDataSource(javax.sql.DataSource)
org.springframework.dao.support.DaoSupport.afterPropertiesSet()
1301 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDaoWithRolePrefix()
Métodos invocados: 
org.springframework.security.PopulatedDatabase.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.setDataSource(javax.sql.DataSource)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.setRolePrefix(java.lang.String)
org.springframework.dao.support.DaoSupport.afterPropertiesSet()
1302 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.testCheckDaoAccessUserSuccess()
Métodos invocados: 
org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.UserDetails.isEnabled()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
1303 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.testCheckDaoOnlyReturnsGrantedAuthoritiesGrantedToUser()
Métodos invocados: 
org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
1304 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.testCheckDaoReturnsCorrectDisabledProperty()
Métodos invocados: 
org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.isEnabled()
junit.framework.Assert.assertTrue(Z)
1305 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.setAuthoritiesByUsernameQuery(java.lang.String)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.getAuthoritiesByUsernameQuery()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.setUsersByUsernameQuery(java.lang.String)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.getUsersByUsernameQuery()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1306 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.testLookupFailsIfUserHasNoGrantedAuthorities()
Métodos invocados: 
org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1307 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.testLookupFailsWithWrongUsername()
Métodos invocados: 
org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1308 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.testLookupSuccessWithMixedCase()
Métodos invocados: 
org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1309 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.testRolePrefixWorks()
Métodos invocados: 
org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDaoWithRolePrefix()
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.getRolePrefix()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
1310 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.testGroupAuthoritiesAreLoadedCorrectly()
Métodos invocados: 
org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.setEnableAuthorities(Z)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.setEnableGroups(Z)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
1311 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.testDuplicateGroupAuthoritiesAreRemoved()
Métodos invocados: 
org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.setEnableAuthorities(Z)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.setEnableGroups(Z)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
1312 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.testStartupFailsIfDataSourceNotSet()
Métodos invocados: 
org.springframework.dao.support.DaoSupport.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1313 - Declaração do método: org.springframework.security.core.userdetails.jdbc.JdbcDaoImplTests.testStartupFailsIfUserMapSetToNull()
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.setDataSource(javax.sql.DataSource)
org.springframework.dao.support.DaoSupport.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1314 - Declaração do método: org.springframework.security.core.userdetails.memory.UserAttributeEditorTests.testCorrectOperationWithTrailingSpaces()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.core.userdetails.memory.UserAttribute.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.memory.UserAttribute.getAuthorities()
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.core.userdetails.memory.UserAttribute.getAuthorities()
java.util.List.get(I)
org.springframework.security.core.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.memory.UserAttribute.getAuthorities()
java.util.List.get(I)
org.springframework.security.core.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1315 - Declaração do método: org.springframework.security.core.userdetails.memory.UserAttributeEditorTests.testCorrectOperationWithoutEnabledDisabledKeyword()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.core.userdetails.memory.UserAttribute.isValid()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.memory.UserAttribute.isEnabled()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.memory.UserAttribute.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.memory.UserAttribute.getAuthorities()
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.core.userdetails.memory.UserAttribute.getAuthorities()
java.util.List.get(I)
org.springframework.security.core.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.memory.UserAttribute.getAuthorities()
java.util.List.get(I)
org.springframework.security.core.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1316 - Declaração do método: org.springframework.security.core.userdetails.memory.UserAttributeEditorTests.testDisabledKeyword()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.core.userdetails.memory.UserAttribute.isValid()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.memory.UserAttribute.isEnabled()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.memory.UserAttribute.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.memory.UserAttribute.getAuthorities()
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.core.userdetails.memory.UserAttribute.getAuthorities()
java.util.List.get(I)
org.springframework.security.core.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.memory.UserAttribute.getAuthorities()
java.util.List.get(I)
org.springframework.security.core.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1317 - Declaração do método: org.springframework.security.core.userdetails.memory.UserAttributeEditorTests.testEmptyStringReturnsNull()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
junit.framework.Assert.assertTrue(Z)
1318 - Declaração do método: org.springframework.security.core.userdetails.memory.UserAttributeEditorTests.testEnabledKeyword()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.core.userdetails.memory.UserAttribute.isValid()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.memory.UserAttribute.isEnabled()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.memory.UserAttribute.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.memory.UserAttribute.getAuthorities()
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.core.userdetails.memory.UserAttribute.getAuthorities()
java.util.List.get(I)
org.springframework.security.core.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.memory.UserAttribute.getAuthorities()
java.util.List.get(I)
org.springframework.security.core.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1319 - Declaração do método: org.springframework.security.core.userdetails.memory.UserAttributeEditorTests.testMalformedStringReturnsNull()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
junit.framework.Assert.assertTrue(Z)
1320 - Declaração do método: org.springframework.security.core.userdetails.memory.UserAttributeEditorTests.testNoPasswordOrRolesReturnsNull()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
junit.framework.Assert.assertTrue(Z)
1321 - Declaração do método: org.springframework.security.core.userdetails.memory.UserAttributeEditorTests.testNoRolesReturnsNull()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
junit.framework.Assert.assertTrue(Z)
1322 - Declaração do método: org.springframework.security.core.userdetails.memory.UserAttributeEditorTests.testNullReturnsNull()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
junit.framework.Assert.assertTrue(Z)
1323 - Declaração do método: org.springframework.security.core.userdetails.memory.UserMapEditorTests.testConvertedIntoUserSuccessfullyWhenDisabled()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserMapEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.core.userdetails.memory.UserMap.getUser(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.isEnabled()
junit.framework.Assert.assertTrue(Z)
1324 - Declaração do método: org.springframework.security.core.userdetails.memory.UserMapEditorTests.testConvertedIntoUserSuccessfullyWhenEnabled()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserMapEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.core.userdetails.memory.UserMap.getUser(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.memory.UserMap.getUser(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.memory.UserMap.getUser(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.memory.UserMap.getUser(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.memory.UserMap.getUser(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.isEnabled()
junit.framework.Assert.assertTrue(Z)
1325 - Declaração do método: org.springframework.security.core.userdetails.memory.UserMapEditorTests.testEmptyStringReturnsEmptyMap()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserMapEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.core.userdetails.memory.UserMap.getUserCount()
junit.framework.Assert.assertEquals(I, I)
1326 - Declaração do método: org.springframework.security.core.userdetails.memory.UserMapEditorTests.testMalformedStringReturnsEmptyMap()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserMapEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.core.userdetails.memory.UserMap.getUserCount()
junit.framework.Assert.assertEquals(I, I)
1327 - Declaração do método: org.springframework.security.core.userdetails.memory.UserMapEditorTests.testMultiUserParsing()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserMapEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.core.userdetails.memory.UserMap.getUser(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.memory.UserMap.getUser(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1328 - Declaração do método: org.springframework.security.core.userdetails.memory.UserMapEditorTests.testNullReturnsEmptyMap()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserMapEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.core.userdetails.memory.UserMap.getUserCount()
junit.framework.Assert.assertEquals(I, I)
1329 - Declaração do método: org.springframework.security.core.userdetails.memory.InMemoryDaoTests.makeUserMap()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserMapEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
1330 - Declaração do método: org.springframework.security.core.userdetails.memory.InMemoryDaoTests.setUp()
1330 - Declaração do método: org.springframework.security.core.userdetails.memory.InMemoryDaoTests.testLookupFails()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.InMemoryDaoTests.makeUserMap()
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.setUserMap(org.springframework.security.core.userdetails.memory.UserMap)
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.afterPropertiesSet()
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.loadUserByUsername(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1331 - Declaração do método: org.springframework.security.core.userdetails.memory.InMemoryDaoTests.testLookupSuccess()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.InMemoryDaoTests.makeUserMap()
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.setUserMap(org.springframework.security.core.userdetails.memory.UserMap)
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.afterPropertiesSet()
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1332 - Declaração do método: org.springframework.security.core.userdetails.memory.InMemoryDaoTests.testLookupSuccessWithMixedCase()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.InMemoryDaoTests.makeUserMap()
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.setUserMap(org.springframework.security.core.userdetails.memory.UserMap)
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.afterPropertiesSet()
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1333 - Declaração do método: org.springframework.security.core.userdetails.memory.InMemoryDaoTests.testStartupFailsIfUserMapNotSet()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1334 - Declaração do método: org.springframework.security.core.userdetails.memory.InMemoryDaoTests.testStartupFailsIfUserMapSetToNull()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.setUserMap(org.springframework.security.core.userdetails.memory.UserMap)
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1335 - Declaração do método: org.springframework.security.core.userdetails.memory.InMemoryDaoTests.testStartupSuccessIfUserMapSet()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.InMemoryDaoTests.makeUserMap()
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.setUserMap(org.springframework.security.core.userdetails.memory.UserMap)
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.afterPropertiesSet()
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.getUserMap()
org.springframework.security.core.userdetails.memory.UserMap.getUserCount()
junit.framework.Assert.assertEquals(I, I)
1336 - Declaração do método: org.springframework.security.core.userdetails.memory.InMemoryDaoTests.testUseOfExternalPropertiesObject()
Métodos invocados: 
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.setUserProperties(java.util.Properties)
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.memory.InMemoryDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1337 - Declaração do método: org.springframework.security.core.userdetails.memory.UserMapTests.testAddAndRetrieveUser()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.userdetails.memory.UserMap.addUser(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.userdetails.memory.UserMap.addUser(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.userdetails.memory.UserMap.addUser(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.userdetails.memory.UserMap.getUserCount()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.core.userdetails.memory.UserMap.getUser(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.memory.UserMap.getUser(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.memory.UserMap.getUser(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1338 - Declaração do método: org.springframework.security.core.userdetails.memory.UserMapTests.nullUserCannotBeAdded()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserMap.getUserCount()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.core.userdetails.memory.UserMap.addUser(org.springframework.security.core.userdetails.UserDetails)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
1339 - Declaração do método: org.springframework.security.core.userdetails.memory.UserMapTests.unknownUserIsNotRetrieved()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.userdetails.memory.UserMap.getUserCount()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.core.userdetails.memory.UserMap.addUser(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.userdetails.memory.UserMap.getUserCount()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.core.userdetails.memory.UserMap.getUser(java.lang.String)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
1340 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.createDataSource()
1340 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.clearDataSource()
Métodos invocados: 
org.springframework.security.TestDataSource.destroy()
1341 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.initializeManagerAndCreateTables()
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManager.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.jdbc.core.support.JdbcDaoSupport.setDataSource(javax.sql.DataSource)
org.springframework.security.provisioning.JdbcUserDetailsManager.setCreateUserSql(java.lang.String)
org.springframework.security.provisioning.JdbcUserDetailsManager.setUpdateUserSql(java.lang.String)
org.springframework.security.provisioning.JdbcUserDetailsManager.setUserExistsSql(java.lang.String)
org.springframework.security.provisioning.JdbcUserDetailsManager.setCreateAuthoritySql(java.lang.String)
org.springframework.security.provisioning.JdbcUserDetailsManager.setDeleteUserAuthoritiesSql(java.lang.String)
org.springframework.security.provisioning.JdbcUserDetailsManager.setDeleteUserSql(java.lang.String)
org.springframework.security.provisioning.JdbcUserDetailsManager.setChangePasswordSql(java.lang.String)
org.springframework.security.provisioning.JdbcUserDetailsManager.initDao()
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.PopulatedDatabase.createGroupTables(org.springframework.jdbc.core.JdbcTemplate)
org.springframework.security.PopulatedDatabase.insertGroupData(org.springframework.jdbc.core.JdbcTemplate)
1342 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.dropTablesAndClearContext()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1343 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.createUserInsertsCorrectData()
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManager.createUser(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1344 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.deleteUserRemovesUserDataAndAuthoritiesAndClearsCache()
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManagerTests.insertJoe()
org.springframework.security.provisioning.JdbcUserDetailsManager.deleteUser(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.provisioning.JdbcUserDetailsManagerTests$MockUserCache.getUserMap()
java.util.Map.containsKey(java.lang.Object)
org.junit.Assert.assertFalse(Z)
1345 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.updateUserChangesDataCorrectlyAndClearsCache()
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManagerTests.insertJoe()
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.provisioning.JdbcUserDetailsManager.updateUser(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.provisioning.JdbcUserDetailsManagerTests$MockUserCache.getUserMap()
java.util.Map.containsKey(java.lang.Object)
org.junit.Assert.assertFalse(Z)
1346 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.userExistsReturnsFalseForNonExistentUsername()
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManager.userExists(java.lang.String)
org.junit.Assert.assertFalse(Z)
1347 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.userExistsReturnsTrueForExistingUsername()
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManagerTests.insertJoe()
org.springframework.security.provisioning.JdbcUserDetailsManager.userExists(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.provisioning.JdbcUserDetailsManagerTests$MockUserCache.getUserMap()
java.util.Map.containsKey(java.lang.Object)
org.junit.Assert.assertTrue(Z)
1348 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.changePasswordFailsForUnauthenticatedUser()
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManager.changePassword(java.lang.String, java.lang.String)
1349 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.changePasswordSucceedsWithAuthenticatedUserAndNoAuthenticationManagerSet()
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManagerTests.insertJoe()
org.springframework.security.provisioning.JdbcUserDetailsManagerTests.authenticateJoe()
org.springframework.security.provisioning.JdbcUserDetailsManager.changePassword(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.provisioning.JdbcUserDetailsManagerTests$MockUserCache.getUserMap()
java.util.Map.containsKey(java.lang.Object)
org.junit.Assert.assertFalse(Z)
1350 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.changePasswordSucceedsWithIfReAuthenticationSucceeds()
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManagerTests.insertJoe()
org.springframework.security.provisioning.JdbcUserDetailsManagerTests.authenticateJoe()
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenReturn(org.springframework.security.core.Authentication)
org.springframework.security.provisioning.JdbcUserDetailsManager.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.provisioning.JdbcUserDetailsManager.changePassword(java.lang.String, java.lang.String)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
java.security.Principal.getName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.Authentication.getDetails()
org.springframework.security.core.Authentication.getDetails()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.Authentication.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.provisioning.JdbcUserDetailsManagerTests$MockUserCache.getUserMap()
java.util.Map.containsKey(java.lang.Object)
org.junit.Assert.assertFalse(Z)
1351 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.changePasswordFailsIfReAuthenticationFails()
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManagerTests.insertJoe()
org.springframework.security.provisioning.JdbcUserDetailsManagerTests.authenticateJoe()
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenThrow([Ljava.lang.Throwable;)
org.springframework.security.provisioning.JdbcUserDetailsManager.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.provisioning.JdbcUserDetailsManager.changePassword(java.lang.String, java.lang.String)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.provisioning.JdbcUserDetailsManagerTests$MockUserCache.getUserMap()
java.util.Map.containsKey(java.lang.Object)
org.junit.Assert.assertTrue(Z)
1352 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.findAllGroupsReturnsExpectedGroupNames()
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManager.findAllGroups()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.Collections.sort(java.util.List)
java.util.List.get(I)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.List.get(I)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.List.get(I)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.List.get(I)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1353 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.findGroupMembersReturnsCorrectData()
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManager.findUsersInGroup(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.provisioning.JdbcUserDetailsManager.findUsersInGroup(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
1354 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.createGroupInsertsCorrectData()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.provisioning.JdbcUserDetailsManager.createGroup(java.lang.String, java.util.List)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
1355 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.deleteGroupRemovesData()
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManager.deleteGroup(java.lang.String)
org.springframework.security.provisioning.JdbcUserDetailsManager.deleteGroup(java.lang.String)
org.springframework.security.provisioning.JdbcUserDetailsManager.deleteGroup(java.lang.String)
org.springframework.security.provisioning.JdbcUserDetailsManager.deleteGroup(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
1356 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.renameGroupIsSuccessful()
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManager.renameGroup(java.lang.String, java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.queryForInt(java.lang.String)
org.junit.Assert.assertEquals(J, J)
1357 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.addingGroupUserSetsCorrectData()
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManager.addUserToGroup(java.lang.String, java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
1358 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.removeUserFromGroupDeletesGroupMemberRow()
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManager.removeUserFromGroup(java.lang.String, java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
1359 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.findGroupAuthoritiesReturnsCorrectAuthorities()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.provisioning.JdbcUserDetailsManager.findGroupAuthorities(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1360 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.addGroupAuthorityInsertsCorrectGroupAuthorityRow()
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManager.addGroupAuthority(java.lang.String, org.springframework.security.core.GrantedAuthority)
org.springframework.jdbc.core.JdbcTemplate.queryForObject(java.lang.String, java.lang.Class)
1361 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.deleteGroupAuthorityRemovesCorrectRows()
Métodos invocados: 
org.springframework.security.provisioning.JdbcUserDetailsManager.removeGroupAuthority(java.lang.String, org.springframework.security.core.GrantedAuthority)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.provisioning.JdbcUserDetailsManager.removeGroupAuthority(java.lang.String, org.springframework.security.core.GrantedAuthority)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
1362 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.createUserDoesNotSaveAuthoritiesIfEnableAuthoritiesIsFalse()
Métodos invocados: 
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.setEnableAuthorities(Z)
org.springframework.security.provisioning.JdbcUserDetailsManager.createUser(org.springframework.security.core.userdetails.UserDetails)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
1363 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.updateUserDoesNotSaveAuthoritiesIfEnableAuthoritiesIsFalse()
Métodos invocados: 
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.setEnableAuthorities(Z)
org.springframework.security.provisioning.JdbcUserDetailsManagerTests.insertJoe()
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.provisioning.JdbcUserDetailsManager.updateUser(org.springframework.security.core.userdetails.UserDetails)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
1364 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.authenticateJoe()
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
1365 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests.insertJoe()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.provisioning.JdbcUserDetailsManagerTests$MockUserCache.putUserInCache(org.springframework.security.core.userdetails.UserDetails)
1366 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests$MockUserCache.getUserFromCache(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
1367 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests$MockUserCache.putUserInCache(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getUsername()
java.util.Map.put(java.lang.String, org.springframework.security.core.userdetails.UserDetails)
1368 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests$MockUserCache.removeUserFromCache(java.lang.String)
Métodos invocados: 
java.util.Map.remove(java.lang.Object)
1369 - Declaração do método: org.springframework.security.provisioning.JdbcUserDetailsManagerTests$MockUserCache.getUserMap()
1369 - Declaração do método: org.springframework.security.remoting.dns.JndiDnsResolverTest.setup()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.remoting.dns.JndiDnsResolver.setCtxFactory(org.springframework.security.remoting.dns.InitialContextFactory)
org.springframework.security.remoting.dns.InitialContextFactory.getCtx()
org.mockito.Mockito.when(javax.naming.directory.DirContext)
org.mockito.stubbing.OngoingStubbing.thenReturn(javax.naming.directory.DirContext)
1370 - Declaração do método: org.springframework.security.remoting.dns.JndiDnsResolverTest.testResolveIpAddress()
Métodos invocados: 
javax.naming.directory.DirContext.getAttributes(java.lang.String, [Ljava.lang.String;)
org.mockito.Mockito.when(javax.naming.directory.Attributes)
org.mockito.stubbing.OngoingStubbing.thenReturn(javax.naming.directory.Attributes)
org.springframework.security.remoting.dns.JndiDnsResolver.resolveIpAddress(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1371 - Declaração do método: org.springframework.security.remoting.dns.JndiDnsResolverTest.testResolveIpAddressNotExisting()
Métodos invocados: 
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.naming.directory.DirContext.getAttributes(java.lang.String, [Ljava.lang.String;)
org.mockito.Mockito.when(javax.naming.directory.Attributes)
org.mockito.stubbing.OngoingStubbing.thenThrow([Ljava.lang.Throwable;)
org.springframework.security.remoting.dns.JndiDnsResolver.resolveIpAddress(java.lang.String)
1372 - Declaração do método: org.springframework.security.remoting.dns.JndiDnsResolverTest.testResolveServiceEntry()
Métodos invocados: 
org.springframework.security.remoting.dns.JndiDnsResolverTest.createSrvRecords()
javax.naming.directory.DirContext.getAttributes(java.lang.String, [Ljava.lang.String;)
org.mockito.Mockito.when(javax.naming.directory.Attributes)
org.mockito.stubbing.OngoingStubbing.thenReturn(javax.naming.directory.Attributes)
org.springframework.security.remoting.dns.JndiDnsResolver.resolveServiceEntry(java.lang.String, java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1373 - Declaração do método: org.springframework.security.remoting.dns.JndiDnsResolverTest.testResolveServiceEntryNotExisting()
Métodos invocados: 
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.naming.directory.DirContext.getAttributes(java.lang.String, [Ljava.lang.String;)
org.mockito.Mockito.when(javax.naming.directory.Attributes)
org.mockito.stubbing.OngoingStubbing.thenThrow([Ljava.lang.Throwable;)
org.springframework.security.remoting.dns.JndiDnsResolver.resolveServiceEntry(java.lang.String, java.lang.String)
1374 - Declaração do método: org.springframework.security.remoting.dns.JndiDnsResolverTest.testResolveServiceIpAddress()
Métodos invocados: 
org.springframework.security.remoting.dns.JndiDnsResolverTest.createSrvRecords()
javax.naming.directory.DirContext.getAttributes(java.lang.String, [Ljava.lang.String;)
org.mockito.Mockito.when(javax.naming.directory.Attributes)
org.mockito.stubbing.OngoingStubbing.thenReturn(javax.naming.directory.Attributes)
javax.naming.directory.DirContext.getAttributes(java.lang.String, [Ljava.lang.String;)
org.mockito.Mockito.when(javax.naming.directory.Attributes)
org.mockito.stubbing.OngoingStubbing.thenReturn(javax.naming.directory.Attributes)
org.springframework.security.remoting.dns.JndiDnsResolver.resolveServiceIpAddress(java.lang.String, java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1375 - Declaração do método: org.springframework.security.remoting.dns.JndiDnsResolverTest.testUnknowError()
Métodos invocados: 
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.naming.directory.DirContext.getAttributes(java.lang.String, [Ljava.lang.String;)
org.mockito.Mockito.when(javax.naming.directory.Attributes)
org.mockito.stubbing.OngoingStubbing.thenThrow([Ljava.lang.Throwable;)
org.springframework.security.remoting.dns.JndiDnsResolver.resolveIpAddress(java.lang.String)
1376 - Declaração do método: org.springframework.security.remoting.dns.JndiDnsResolverTest.createSrvRecords()
Métodos invocados: 
javax.naming.directory.BasicAttribute.add(java.lang.Object)
javax.naming.directory.BasicAttribute.add(java.lang.Object)
javax.naming.directory.BasicAttribute.add(java.lang.Object)
javax.naming.directory.BasicAttribute.add(java.lang.Object)
javax.naming.directory.BasicAttributes.put(javax.naming.directory.Attribute)
1377 - Declaração do método: org.springframework.security.remoting.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests.tearDown()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1378 - Declaração do método: org.springframework.security.remoting.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.remoting.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutor.prepareConnection(java.net.HttpURLConnection, I)
java.net.URLConnection.getRequestProperty(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1379 - Declaração do método: org.springframework.security.remoting.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests.testNullContextHolderIsNull()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.remoting.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutor.prepareConnection(java.net.HttpURLConnection, I)
java.net.URLConnection.getRequestProperty(java.lang.String)
junit.framework.Assert.assertNull(java.lang.Object)
1380 - Declaração do método: org.springframework.security.remoting.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests$MockHttpURLConnection.MockHttpURLConnection(java.net.URL)
1380 - Declaração do método: org.springframework.security.remoting.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests$MockHttpURLConnection.connect()
1380 - Declaração do método: org.springframework.security.remoting.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests$MockHttpURLConnection.disconnect()
1380 - Declaração do método: org.springframework.security.remoting.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests$MockHttpURLConnection.getRequestProperty(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
1381 - Declaração do método: org.springframework.security.remoting.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests$MockHttpURLConnection.setRequestProperty(java.lang.String, java.lang.String)
Métodos invocados: 
java.util.Map.put(java.lang.String, java.lang.String)
1382 - Declaração do método: org.springframework.security.remoting.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests$MockHttpURLConnection.usingProxy()
1382 - Declaração do método: org.springframework.security.remoting.rmi.ContextPropagatingRemoteInvocationTests.tearDown()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1383 - Declaração do método: org.springframework.security.remoting.rmi.ContextPropagatingRemoteInvocationTests.getRemoteInvocation()
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.remoting.rmi.ContextPropagatingRemoteInvocationFactory.createRemoteInvocation(org.aopalliance.intercept.MethodInvocation)
1384 - Declaração do método: org.springframework.security.remoting.rmi.ContextPropagatingRemoteInvocationTests.testContextIsResetEvenIfExceptionOccurs()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.remoting.rmi.ContextPropagatingRemoteInvocationTests.getRemoteInvocation()
org.springframework.remoting.support.RemoteInvocation.setArguments([Ljava.lang.Object;)
java.lang.Class.newInstance()
org.springframework.security.remoting.rmi.ContextPropagatingRemoteInvocation.invoke(java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
1385 - Declaração do método: org.springframework.security.remoting.rmi.ContextPropagatingRemoteInvocationTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.remoting.rmi.ContextPropagatingRemoteInvocationTests.getRemoteInvocation()
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.springframework.security.remoting.rmi.ContextPropagatingRemoteInvocation.invoke(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1386 - Declaração do método: org.springframework.security.remoting.rmi.ContextPropagatingRemoteInvocationTests.testNullContextHolderDoesNotCauseInvocationProblems()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.remoting.rmi.ContextPropagatingRemoteInvocationTests.getRemoteInvocation()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.remoting.rmi.ContextPropagatingRemoteInvocation.invoke(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1387 - Declaração do método: org.springframework.security.util.MethodInvocationUtilsTests.createFromClassReturnsMethodWithNoArgInfoForMethodWithNoArgs()
Métodos invocados: 
org.springframework.security.util.MethodInvocationUtils.createFromClass(java.lang.Class, java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
1388 - Declaração do método: org.springframework.security.util.MethodInvocationUtilsTests.createFromClassReturnsMethodIfArgInfoOmittedAndMethodNameIsUnique()
Métodos invocados: 
org.springframework.security.util.MethodInvocationUtils.createFromClass(java.lang.Class, java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
1389 - Declaração do método: org.springframework.security.util.MethodInvocationUtilsTests.exceptionIsRaisedIfArgInfoOmittedAndMethodNameIsNotUnique()
Métodos invocados: 
org.springframework.security.util.MethodInvocationUtils.createFromClass(java.lang.Class, java.lang.String)
1390 - Declaração do método: org.springframework.security.util.MethodInvocationUtilsTests.createFromClassReturnsMethodIfGivenArgInfoForMethodWithArgs()
Métodos invocados: 
org.springframework.security.util.MethodInvocationUtils.createFromClass(java.lang.Object, java.lang.Class, java.lang.String, [Ljava.lang.Class;, [Ljava.lang.Object;)
org.junit.Assert.assertNotNull(java.lang.Object)
1391 - Declaração do método: org.springframework.security.openid.RegexBasedAxFetchListFactory.RegexBasedAxFetchListFactory(java.util.Map)
Métodos invocados: 
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.regex.Pattern.compile(java.lang.String)
java.util.Map$Entry.getValue()
java.util.Map.put(java.util.regex.Pattern, java.util.List)
1392 - Declaração do método: org.springframework.security.openid.RegexBasedAxFetchListFactory.createAttributeList(java.lang.String)
Métodos invocados: 
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.util.regex.Matcher.matches()
java.util.Map$Entry.getValue()
java.util.Collections.emptyList()
1393 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationFilter.OpenIDAuthenticationFilter()
1393 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationFilter.afterPropertiesSet()
Métodos invocados: 
java.util.Set.isEmpty()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getRememberMeServices()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getRememberMeServices()
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getParameter()
java.util.Set.add(java.lang.String)
1394 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
javax.servlet.ServletRequest.getParameter(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.openid.OpenIDAuthenticationFilter.obtainUsername(javax.servlet.http.HttpServletRequest)
org.springframework.security.openid.OpenIDAuthenticationFilter.setLastUsername(java.lang.String, javax.servlet.http.HttpServletRequest)
org.springframework.security.openid.OpenIDAuthenticationFilter.buildReturnToUrl(javax.servlet.http.HttpServletRequest)
org.springframework.security.openid.OpenIDAuthenticationFilter.lookupRealm(java.lang.String)
org.springframework.security.openid.OpenIDConsumer.beginConsumption(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.openid.OpenIDConsumer.endConsumption(javax.servlet.http.HttpServletRequest)
org.springframework.security.authentication.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getAuthenticationManager()
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.core.Authentication.isAuthenticated()
org.springframework.security.openid.OpenIDAuthenticationToken.getIdentityUrl()
org.springframework.security.openid.OpenIDAuthenticationFilter.setLastUsername(java.lang.String, javax.servlet.http.HttpServletRequest)
1395 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationFilter.setLastUsername(java.lang.String, javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getSession(Z)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getAllowSessionCreation()
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
1396 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationFilter.lookupRealm(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
java.net.URL.getPort()
java.lang.String.length()
java.net.URL.getProtocol()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.net.URL.getHost()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(I)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
org.apache.commons.logging.Log.warn(java.lang.Object, java.lang.Throwable)
1397 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationFilter.buildReturnToUrl(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getRequestURL()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
javax.servlet.ServletRequest.getParameter(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.util.Iterator.hasNext()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
1398 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationFilter.obtainUsername(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getParameter(java.lang.String)
1399 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationFilter.setRealmMapping(java.util.Map)
1399 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationFilter.setClaimedIdentityFieldName(java.lang.String)
1399 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationFilter.setConsumer(org.springframework.security.openid.OpenIDConsumer)
1399 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationFilter.setReturnToUrlParameters(java.util.Set)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1400 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationStatus.OpenIDAuthenticationStatus(java.lang.String)
1400 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationStatus.readResolve()
1400 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationStatus.toString()
1400 - Declaração do método: org.springframework.security.openid.AxFetchListFactory.createAttributeList(java.lang.String)
1400 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationToken.OpenIDAuthenticationToken(org.springframework.security.openid.OpenIDAuthenticationStatus, java.lang.String, java.lang.String, java.util.List)
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.setAuthenticated(Z)
1401 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationToken.OpenIDAuthenticationToken(java.lang.Object, java.util.Collection, java.lang.String, java.util.List)
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.setAuthenticated(Z)
1402 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationToken.getCredentials()
1402 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationToken.getIdentityUrl()
1402 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationToken.getMessage()
1402 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationToken.getPrincipal()
1402 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationToken.getStatus()
1402 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationToken.getAttributes()
1402 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationToken.toString()
1402 - Declaração do método: org.springframework.security.openid.OpenIDAttribute.OpenIDAttribute(java.lang.String, java.lang.String)
1402 - Declaração do método: org.springframework.security.openid.OpenIDAttribute.OpenIDAttribute(java.lang.String, java.lang.String, java.util.List)
Métodos invocados: 
org.springframework.util.Assert.notEmpty(java.util.Collection)
1403 - Declaração do método: org.springframework.security.openid.OpenIDAttribute.getName()
1403 - Declaração do método: org.springframework.security.openid.OpenIDAttribute.getType()
1403 - Declaração do método: org.springframework.security.openid.OpenIDAttribute.isRequired()
1403 - Declaração do método: org.springframework.security.openid.OpenIDAttribute.setRequired(Z)
1403 - Declaração do método: org.springframework.security.openid.OpenIDAttribute.getCount()
1403 - Declaração do método: org.springframework.security.openid.OpenIDAttribute.setCount(I)
1403 - Declaração do método: org.springframework.security.openid.OpenIDAttribute.getValues()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1404 - Declaração do método: org.springframework.security.openid.OpenIDAttribute.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.Object.toString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
1405 - Declaração do método: org.springframework.security.openid.OpenIDConsumerException.OpenIDConsumerException(java.lang.String)
1405 - Declaração do método: org.springframework.security.openid.OpenIDConsumerException.OpenIDConsumerException(java.lang.String, java.lang.Throwable)
1405 - Declaração do método: org.springframework.security.openid.OpenID4JavaConsumer.OpenID4JavaConsumer()
1405 - Declaração do método: org.springframework.security.openid.OpenID4JavaConsumer.OpenID4JavaConsumer(java.util.List)
1405 - Declaração do método: org.springframework.security.openid.OpenID4JavaConsumer.OpenID4JavaConsumer(org.openid4java.consumer.ConsumerManager, java.util.List)
Métodos invocados: 
java.util.Collections.unmodifiableList(java.util.List)
1406 - Declaração do método: org.springframework.security.openid.OpenID4JavaConsumer$1.createAttributeList(java.lang.String)
1406 - Declaração do método: org.springframework.security.openid.OpenID4JavaConsumer.OpenID4JavaConsumer(org.springframework.security.openid.AxFetchListFactory)
1406 - Declaração do método: org.springframework.security.openid.OpenID4JavaConsumer.beginConsumption(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.openid4java.consumer.ConsumerManager.discover(java.lang.String)
org.openid4java.consumer.ConsumerManager.associate(java.util.List)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.openid4java.consumer.ConsumerManager.authenticate(org.openid4java.discovery.DiscoveryInformation, java.lang.String, java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.openid.AxFetchListFactory.createAttributeList(java.lang.String)
java.util.List.isEmpty()
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.openid4java.message.ax.FetchRequest.createFetchRequest()
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.openid.OpenIDAttribute.getType()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.openid.OpenIDAttribute.getName()
org.springframework.security.openid.OpenIDAttribute.getType()
org.springframework.security.openid.OpenIDAttribute.isRequired()
org.springframework.security.openid.OpenIDAttribute.getCount()
org.openid4java.message.ax.FetchRequest.addAttribute(java.lang.String, java.lang.String, Z, I)
org.openid4java.message.Message.addExtension(org.openid4java.message.MessageExtension)
org.openid4java.message.Message.getDestinationUrl(Z)
1407 - Declaração do método: org.springframework.security.openid.OpenID4JavaConsumer.endConsumption(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
javax.servlet.ServletRequest.getParameterMap()
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.removeAttribute(java.lang.String)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.removeAttribute(java.lang.String)
javax.servlet.http.HttpServletRequest.getRequestURL()
javax.servlet.http.HttpServletRequest.getQueryString()
java.lang.String.length()
java.lang.StringBuffer.append(java.lang.String)
javax.servlet.http.HttpServletRequest.getQueryString()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
org.openid4java.consumer.ConsumerManager.verify(java.lang.String, org.openid4java.message.ParameterList, org.openid4java.discovery.DiscoveryInformation)
org.openid4java.consumer.VerificationResult.getVerifiedId()
org.openid4java.discovery.DiscoveryInformation.getClaimedIdentifier()
org.openid4java.discovery.Identifier.getIdentifier()
org.openid4java.consumer.VerificationResult.getStatusMsg()
org.openid4java.consumer.VerificationResult.getAuthResponse()
org.openid4java.message.Message.hasExtension(java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.openid4java.message.Message.getExtension(java.lang.String)
org.springframework.security.openid.OpenIDAttribute.getName()
org.openid4java.message.ax.AxPayload.getAttributeValues(java.lang.String)
java.util.List.isEmpty()
org.springframework.security.openid.OpenIDAttribute.getName()
org.springframework.security.openid.OpenIDAttribute.getType()
org.springframework.security.openid.OpenIDAttribute.isRequired()
org.springframework.security.openid.OpenIDAttribute.setRequired(Z)
java.util.List.add(org.springframework.security.openid.OpenIDAttribute)
java.util.List.clear()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.openid4java.discovery.Identifier.getIdentifier()
1408 - Declaração do método: org.springframework.security.openid.NullAxFetchListFactory.createAttributeList(java.lang.String)
Métodos invocados: 
java.util.Collections.emptyList()
1409 - Declaração do método: org.springframework.security.openid.OpenIDConsumer.beginConsumption(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String, java.lang.String)
1409 - Declaração do método: org.springframework.security.openid.OpenIDConsumer.endConsumption(javax.servlet.http.HttpServletRequest)
1409 - Declaração do método: org.springframework.security.openid.AuthenticationCancelledException.AuthenticationCancelledException(java.lang.String)
1409 - Declaração do método: org.springframework.security.openid.AuthenticationCancelledException.AuthenticationCancelledException(java.lang.String, java.lang.Throwable)
1409 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1410 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.security.openid.OpenIDAuthenticationProvider.supports(java.lang.Class)
org.springframework.security.openid.OpenIDAuthenticationToken.getStatus()
org.springframework.security.core.userdetails.AuthenticationUserDetailsService.loadUserDetails(org.springframework.security.openid.OpenIDAuthenticationToken)
org.springframework.security.openid.OpenIDAuthenticationProvider.createSuccessfulAuthentication(org.springframework.security.core.userdetails.UserDetails, org.springframework.security.openid.OpenIDAuthenticationToken)
org.springframework.security.openid.OpenIDAuthenticationToken.getMessage()
org.springframework.security.openid.OpenIDAuthenticationStatus.toString()
1411 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationProvider.createSuccessfulAuthentication(org.springframework.security.core.userdetails.UserDetails, org.springframework.security.openid.OpenIDAuthenticationToken)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.openid.OpenIDAuthenticationToken.getIdentityUrl()
org.springframework.security.openid.OpenIDAuthenticationToken.getAttributes()
1412 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
1412 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationProvider.setAuthenticationUserDetailsService(org.springframework.security.core.userdetails.AuthenticationUserDetailsService)
1412 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
1413 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationFilterTests.setUp()
Métodos invocados: 
org.springframework.security.openid.OpenIDAuthenticationFilter.setConsumer(org.springframework.security.openid.OpenIDConsumer)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationSuccessHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setDefaultTargetUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.openid.OpenIDAuthenticationFilter.afterPropertiesSet()
1414 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationFilterTests$1.authenticate(org.springframework.security.core.Authentication)
1414 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationFilterTests.testFilterOperation()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setParameter(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRemoteHost(java.lang.String)
org.springframework.security.openid.OpenIDAuthenticationFilter.setConsumer(org.springframework.security.openid.OpenIDConsumer)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(javax.servlet.FilterChain, org.mockito.internal.verification.api.VerificationMode)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1415 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationFilterTests$2.beginConsumption(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1416 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationProviderTests.testAuthenticateCancel()
Métodos invocados: 
org.springframework.security.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.core.Authentication.isAuthenticated()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.openid.OpenIDAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1417 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationProviderTests.testAuthenticateError()
Métodos invocados: 
org.springframework.security.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.core.Authentication.isAuthenticated()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.openid.OpenIDAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1418 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationProviderTests.testAuthenticateFailure()
Métodos invocados: 
org.springframework.security.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.core.Authentication.isAuthenticated()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.openid.OpenIDAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1419 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationProviderTests.testAuthenticateSetupNeeded()
Métodos invocados: 
org.springframework.security.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.core.Authentication.isAuthenticated()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.openid.OpenIDAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1420 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationProviderTests.testAuthenticateSuccess()
Métodos invocados: 
org.springframework.security.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.core.Authentication.isAuthenticated()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.openid.OpenIDAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.assertNotNull(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.core.Authentication.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.core.Authentication.getPrincipal()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.Authentication.getPrincipal()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.core.Authentication.getAuthorities()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.Authentication.getAuthorities()
java.util.Collection.size()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.openid.OpenIDAuthenticationToken.getStatus()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.openid.OpenIDAuthenticationToken.getMessage()
junit.framework.Assert.assertTrue(Z)
1421 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationProviderTests.testDetectsMissingAuthoritiesPopulator()
Métodos invocados: 
org.springframework.security.openid.OpenIDAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
1422 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationProviderTests.testDoesntSupport()
Métodos invocados: 
org.springframework.security.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.openid.OpenIDAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertFalse(Z)
1423 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationProviderTests.testIgnoresUserPassAuthToken()
Métodos invocados: 
org.springframework.security.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.openid.OpenIDAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1424 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationProviderTests.testSupports()
Métodos invocados: 
org.springframework.security.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.openid.OpenIDAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
1425 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationProviderTests.testValidation()
Métodos invocados: 
org.springframework.security.openid.OpenIDAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.openid.OpenIDAuthenticationProvider.afterPropertiesSet()
1426 - Declaração do método: org.springframework.security.openid.OpenIDAuthenticationProviderTests$MockUserDetailsService.loadUserByUsername(java.lang.String)
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
1427 - Declaração do método: org.springframework.security.openid.MockOpenIDConsumer.MockOpenIDConsumer()
1427 - Declaração do método: org.springframework.security.openid.MockOpenIDConsumer.MockOpenIDConsumer(java.lang.String, org.springframework.security.openid.OpenIDAuthenticationToken)
1427 - Declaração do método: org.springframework.security.openid.MockOpenIDConsumer.MockOpenIDConsumer(java.lang.String)
1427 - Declaração do método: org.springframework.security.openid.MockOpenIDConsumer.MockOpenIDConsumer(org.springframework.security.openid.OpenIDAuthenticationToken)
1427 - Declaração do método: org.springframework.security.openid.MockOpenIDConsumer.beginConsumption(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String, java.lang.String)
1427 - Declaração do método: org.springframework.security.openid.MockOpenIDConsumer.endConsumption(javax.servlet.http.HttpServletRequest)
1427 - Declaração do método: org.springframework.security.openid.MockOpenIDConsumer.setRedirectUrl(java.lang.String)
1427 - Declaração do método: org.springframework.security.openid.MockOpenIDConsumer.setReturnToUrl(java.lang.String)
1427 - Declaração do método: org.springframework.security.openid.MockOpenIDConsumer.setToken(org.springframework.security.openid.OpenIDAuthenticationToken)
1427 - Declaração do método: sample.contact.ClientApplication.ClientApplication(org.springframework.beans.factory.ListableBeanFactory)
1427 - Declaração do método: sample.contact.ClientApplication.invokeContactManager(org.springframework.security.core.Authentication, I)
Métodos invocados: 
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class, Z, Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
java.util.Map.keySet()
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
java.lang.Object.getClass()
java.lang.Class.getName()
java.io.PrintStream.println(java.lang.String)
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.core.Authentication.getPrincipal()
java.io.PrintStream.println(java.lang.String)
org.springframework.security.core.Authentication.getPrincipal()
java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
java.io.PrintStream.println(java.lang.String)
java.lang.Throwable.printStackTrace()
java.lang.Throwable.printStackTrace()
java.lang.Object.getClass()
java.lang.Class.getName()
java.io.PrintStream.println(java.lang.String)
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.core.Authentication.getCredentials()
java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
org.springframework.security.core.Authentication.getCredentials()
java.io.PrintStream.println(java.lang.String)
java.io.PrintStream.println(java.lang.String)
java.util.Map.get(java.lang.Object)
java.io.PrintStream.println(java.lang.String)
org.springframework.util.StopWatch.start(java.lang.String)
sample.contact.ContactManager.getAll()
org.springframework.util.StopWatch.stop()
java.util.List.size()
java.io.PrintStream.println(java.lang.String)
java.io.PrintStream.println(java.lang.String)
java.io.PrintStream.println()
org.springframework.util.StopWatch.prettyPrint()
java.io.PrintStream.println(java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1428 - Declaração do método: sample.contact.ClientApplication.main([Ljava.lang.String;)
Métodos invocados: 
java.lang.System.getProperty(java.lang.String, java.lang.String)
java.lang.System.getProperty(java.lang.String, java.lang.String)
java.lang.System.getProperty(java.lang.String, java.lang.String)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.io.PrintStream.println(java.lang.String)
java.lang.System.exit(I)
java.lang.String.equals(java.lang.Object)
java.lang.Integer.parseInt(java.lang.String)
sample.contact.ClientApplication.invokeContactManager(org.springframework.security.core.Authentication, I)
java.lang.System.exit(I)
1429 - Declaração do método: sample.contact.ContactManagerBackend.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1430 - Declaração do método: sample.contact.ContactManagerBackend.addPermission(sample.contact.Contact, org.springframework.security.acls.model.Sid, org.springframework.security.acls.model.Permission)
Métodos invocados: 
sample.contact.Contact.getId()
org.springframework.security.acls.model.AclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.MutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.apache.commons.logging.Log.debug(java.lang.Object)
1431 - Declaração do método: sample.contact.ContactManagerBackend.create(sample.contact.Contact)
Métodos invocados: 
sample.contact.Contact.setId(java.lang.Long)
sample.contact.ContactDao.create(sample.contact.Contact)
sample.contact.ContactManagerBackend.getUsername()
sample.contact.ContactManagerBackend.addPermission(sample.contact.Contact, org.springframework.security.acls.model.Sid, org.springframework.security.acls.model.Permission)
org.apache.commons.logging.Log.isDebugEnabled()
sample.contact.ContactManagerBackend.getUsername()
org.apache.commons.logging.Log.debug(java.lang.Object)
1432 - Declaração do método: sample.contact.ContactManagerBackend.delete(sample.contact.Contact)
Métodos invocados: 
sample.contact.Contact.getId()
sample.contact.ContactDao.delete(java.lang.Long)
sample.contact.Contact.getId()
org.springframework.security.acls.model.MutableAclService.deleteAcl(org.springframework.security.acls.model.ObjectIdentity, Z)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1433 - Declaração do método: sample.contact.ContactManagerBackend.deletePermission(sample.contact.Contact, org.springframework.security.acls.model.Sid, org.springframework.security.acls.model.Permission)
Métodos invocados: 
sample.contact.Contact.getId()
org.springframework.security.acls.model.AclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getSid()
org.springframework.security.acls.model.Sid.equals(java.lang.Object)
java.util.List.get(I)
org.springframework.security.acls.model.AccessControlEntry.getPermission()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.acls.model.MutableAcl.deleteAce(I)
org.springframework.security.acls.model.MutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1434 - Declaração do método: sample.contact.ContactManagerBackend.getAll()
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
sample.contact.ContactDao.findAll()
1435 - Declaração do método: sample.contact.ContactManagerBackend.getAllRecipients()
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
sample.contact.ContactDao.findAllPrincipals()
1436 - Declaração do método: sample.contact.ContactManagerBackend.getById(java.lang.Long)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
sample.contact.ContactDao.getById(java.lang.Long)
1437 - Declaração do método: sample.contact.ContactManagerBackend.getRandomContact()
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
sample.contact.ContactDao.findAll()
java.util.List.size()
java.util.Random.nextInt(I)
java.util.List.get(I)
1438 - Declaração do método: sample.contact.ContactManagerBackend.getUsername()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.core.Authentication.getPrincipal()
java.lang.Object.toString()
1439 - Declaração do método: sample.contact.ContactManagerBackend.setContactDao(sample.contact.ContactDao)
1439 - Declaração do método: sample.contact.ContactManagerBackend.setMutableAclService(org.springframework.security.acls.model.MutableAclService)
1439 - Declaração do método: sample.contact.ContactManagerBackend.update(sample.contact.Contact)
Métodos invocados: 
sample.contact.ContactDao.update(sample.contact.Contact)
org.apache.commons.logging.Log.debug(java.lang.Object)
1440 - Declaração do método: sample.contact.AddPermission.getContact()
1440 - Declaração do método: sample.contact.AddPermission.getPermission()
1440 - Declaração do método: sample.contact.AddPermission.getRecipient()
1440 - Declaração do método: sample.contact.AddPermission.setContact(sample.contact.Contact)
1440 - Declaração do método: sample.contact.AddPermission.setPermission(java.lang.Integer)
1440 - Declaração do método: sample.contact.AddPermission.setRecipient(java.lang.String)
1440 - Declaração do método: sample.contact.ContactDao.create(sample.contact.Contact)
1440 - Declaração do método: sample.contact.ContactDao.delete(java.lang.Long)
1440 - Declaração do método: sample.contact.ContactDao.findAll()
1440 - Declaração do método: sample.contact.ContactDao.findAllPrincipals()
1440 - Declaração do método: sample.contact.ContactDao.findAllRoles()
1440 - Declaração do método: sample.contact.ContactDao.getById(java.lang.Long)
1440 - Declaração do método: sample.contact.ContactDao.update(sample.contact.Contact)
1440 - Declaração do método: sample.contact.ContactDaoSpring.create(sample.contact.Contact)
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter)
sample.contact.Contact.getId()
java.sql.PreparedStatement.setLong(I, J)
sample.contact.Contact.getName()
java.sql.PreparedStatement.setString(I, java.lang.String)
sample.contact.Contact.getEmail()
java.sql.PreparedStatement.setString(I, java.lang.String)
1441 - Declaração do método: sample.contact.ContactDaoSpring$1.setValues(java.sql.PreparedStatement)
Métodos invocados: 
sample.contact.Contact.getId()
java.sql.PreparedStatement.setLong(I, J)
sample.contact.Contact.getName()
java.sql.PreparedStatement.setString(I, java.lang.String)
sample.contact.Contact.getEmail()
java.sql.PreparedStatement.setString(I, java.lang.String)
1442 - Declaração do método: sample.contact.ContactDaoSpring.delete(java.lang.Long)
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter)
java.sql.PreparedStatement.setLong(I, J)
1443 - Declaração do método: sample.contact.ContactDaoSpring$2.setValues(java.sql.PreparedStatement)
Métodos invocados: 
java.sql.PreparedStatement.setLong(I, J)
1444 - Declaração do método: sample.contact.ContactDaoSpring.update(sample.contact.Contact)
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter)
sample.contact.Contact.getName()
java.sql.PreparedStatement.setString(I, java.lang.String)
sample.contact.Contact.getEmail()
java.sql.PreparedStatement.setString(I, java.lang.String)
sample.contact.Contact.getId()
java.sql.PreparedStatement.setLong(I, J)
1445 - Declaração do método: sample.contact.ContactDaoSpring$3.setValues(java.sql.PreparedStatement)
Métodos invocados: 
sample.contact.Contact.getName()
java.sql.PreparedStatement.setString(I, java.lang.String)
sample.contact.Contact.getEmail()
java.sql.PreparedStatement.setString(I, java.lang.String)
sample.contact.Contact.getId()
java.sql.PreparedStatement.setLong(I, J)
1446 - Declaração do método: sample.contact.ContactDaoSpring.findAll()
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, org.springframework.jdbc.core.RowMapper)
sample.contact.ContactDaoSpring.mapContact(java.sql.ResultSet)
1447 - Declaração do método: sample.contact.ContactDaoSpring$4.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
sample.contact.ContactDaoSpring.mapContact(java.sql.ResultSet)
1448 - Declaração do método: sample.contact.ContactDaoSpring.findAllPrincipals()
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String, java.lang.Class)
1449 - Declaração do método: sample.contact.ContactDaoSpring.findAllRoles()
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String, java.lang.Class)
1450 - Declaração do método: sample.contact.ContactDaoSpring.getById(java.lang.Long)
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, org.springframework.jdbc.core.RowMapper, [Ljava.lang.Object;)
sample.contact.ContactDaoSpring.mapContact(java.sql.ResultSet)
java.util.List.size()
java.util.List.get(I)
1451 - Declaração do método: sample.contact.ContactDaoSpring$5.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
sample.contact.ContactDaoSpring.mapContact(java.sql.ResultSet)
1452 - Declaração do método: sample.contact.ContactDaoSpring.mapContact(java.sql.ResultSet)
Métodos invocados: 
java.sql.ResultSet.getLong(java.lang.String)
sample.contact.Contact.setId(java.lang.Long)
java.sql.ResultSet.getString(java.lang.String)
sample.contact.Contact.setName(java.lang.String)
java.sql.ResultSet.getString(java.lang.String)
sample.contact.Contact.setEmail(java.lang.String)
1453 - Declaração do método: sample.contact.IndexController.displayPublicIndex()
Métodos invocados: 
sample.contact.ContactManager.getRandomContact()
1454 - Declaração do método: sample.contact.IndexController.displayUserContacts()
Métodos invocados: 
sample.contact.ContactManager.getAll()
java.util.List.size()
java.util.List.size()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.access.PermissionEvaluator.hasPermission(org.springframework.security.core.Authentication, java.lang.Object, java.lang.Object)
java.lang.Boolean.valueOf(Z)
java.util.Map.put(sample.contact.Contact, java.lang.Boolean)
org.springframework.security.access.PermissionEvaluator.hasPermission(org.springframework.security.core.Authentication, java.lang.Object, java.lang.Object)
java.lang.Boolean.valueOf(Z)
java.util.Map.put(sample.contact.Contact, java.lang.Boolean)
java.util.Map.put(java.lang.String, java.lang.Object)
java.util.Map.put(java.lang.String, java.lang.Object)
java.util.Map.put(java.lang.String, java.lang.Object)
1455 - Declaração do método: sample.contact.AddPermissionValidator.supports(java.lang.Class)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
1456 - Declaração do método: sample.contact.AddPermissionValidator.validate(java.lang.Object, org.springframework.validation.Errors)
Métodos invocados: 
org.springframework.validation.ValidationUtils.rejectIfEmptyOrWhitespace(org.springframework.validation.Errors, java.lang.String, java.lang.String, java.lang.String)
org.springframework.validation.ValidationUtils.rejectIfEmptyOrWhitespace(org.springframework.validation.Errors, java.lang.String, java.lang.String, java.lang.String)
sample.contact.AddPermission.getPermission()
sample.contact.AddPermission.getPermission()
java.lang.Integer.intValue()
org.springframework.security.acls.model.Permission.getMask()
org.springframework.security.acls.model.Permission.getMask()
org.springframework.security.acls.model.Permission.getMask()
org.springframework.validation.Errors.rejectValue(java.lang.String, java.lang.String, java.lang.String)
sample.contact.AddPermission.getRecipient()
sample.contact.AddPermission.getRecipient()
java.lang.String.length()
org.springframework.validation.Errors.rejectValue(java.lang.String, java.lang.String, java.lang.String)
1457 - Declaração do método: sample.contact.WebContactValidator.supports(java.lang.Class)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
1458 - Declaração do método: sample.contact.WebContactValidator.validate(java.lang.Object, org.springframework.validation.Errors)
Métodos invocados: 
sample.contact.WebContact.getName()
sample.contact.WebContact.getName()
java.lang.String.length()
sample.contact.WebContact.getName()
java.lang.String.length()
org.springframework.validation.Errors.rejectValue(java.lang.String, java.lang.String, java.lang.String)
sample.contact.WebContact.getEmail()
sample.contact.WebContact.getEmail()
java.lang.String.length()
sample.contact.WebContact.getEmail()
java.lang.String.length()
org.springframework.validation.Errors.rejectValue(java.lang.String, java.lang.String, java.lang.String)
1459 - Declaração do método: sample.contact.AdminPermissionController.displayAdminPage(I)
Métodos invocados: 
java.lang.Long.valueOf(J)
sample.contact.ContactManager.getById(java.lang.Long)
org.springframework.security.acls.model.AclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
java.util.Map.put(java.lang.String, java.lang.Object)
java.util.Map.put(java.lang.String, java.lang.Object)
1460 - Declaração do método: sample.contact.AdminPermissionController.displayAddPermissionPageForContact(I)
Métodos invocados: 
sample.contact.ContactManager.getById(java.lang.Long)
sample.contact.AddPermission.setContact(sample.contact.Contact)
java.util.Map.put(java.lang.String, java.lang.Object)
sample.contact.AdminPermissionController.listRecipients()
java.util.Map.put(java.lang.String, java.lang.Object)
sample.contact.AdminPermissionController.listPermissions()
java.util.Map.put(java.lang.String, java.lang.Object)
1461 - Declaração do método: sample.contact.AdminPermissionController.initBinder(org.springframework.web.bind.WebDataBinder)
Métodos invocados: 
org.springframework.validation.DataBinder.setAllowedFields([Ljava.lang.String;)
1462 - Declaração do método: sample.contact.AdminPermissionController.addPermission(sample.contact.AddPermission, org.springframework.validation.BindingResult, org.springframework.ui.ModelMap)
Métodos invocados: 
org.springframework.validation.Validator.validate(java.lang.Object, org.springframework.validation.Errors)
org.springframework.validation.Errors.hasErrors()
sample.contact.AdminPermissionController.listRecipients()
java.util.HashMap.put(java.lang.String, java.lang.Object)
sample.contact.AdminPermissionController.listPermissions()
java.util.HashMap.put(java.lang.String, java.lang.Object)
sample.contact.AddPermission.getRecipient()
sample.contact.AddPermission.getPermission()
org.springframework.security.acls.domain.PermissionFactory.buildFromMask(I)
sample.contact.AddPermission.getContact()
sample.contact.ContactManager.addPermission(sample.contact.Contact, org.springframework.security.acls.model.Sid, org.springframework.security.acls.model.Permission)
java.lang.Throwable.printStackTrace()
org.springframework.validation.Errors.rejectValue(java.lang.String, java.lang.String, java.lang.String)
sample.contact.AdminPermissionController.listRecipients()
java.util.HashMap.put(java.lang.String, java.lang.Object)
sample.contact.AdminPermissionController.listPermissions()
java.util.HashMap.put(java.lang.String, java.lang.Object)
1463 - Declaração do método: sample.contact.AdminPermissionController.deletePermission(I, java.lang.String, I)
Métodos invocados: 
sample.contact.ContactManager.getById(java.lang.Long)
org.springframework.security.acls.domain.PermissionFactory.buildFromMask(I)
sample.contact.ContactManager.deletePermission(sample.contact.Contact, org.springframework.security.acls.model.Sid, org.springframework.security.acls.model.Permission)
java.util.Map.put(java.lang.String, java.lang.Object)
java.util.Map.put(java.lang.String, java.lang.Object)
java.util.Map.put(java.lang.String, java.lang.Object)
1464 - Declaração do método: sample.contact.AdminPermissionController.listPermissions()
Métodos invocados: 
org.springframework.security.acls.model.Permission.getMask()
java.lang.Integer.valueOf(I)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
java.util.Map.put(java.lang.Integer, java.lang.String)
org.springframework.security.acls.model.Permission.getMask()
java.lang.Integer.valueOf(I)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
java.util.Map.put(java.lang.Integer, java.lang.String)
org.springframework.security.acls.model.Permission.getMask()
java.lang.Integer.valueOf(I)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
java.util.Map.put(java.lang.Integer, java.lang.String)
1465 - Declaração do método: sample.contact.AdminPermissionController.listRecipients()
Métodos invocados: 
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
java.util.Map.put(java.lang.String, java.lang.String)
sample.contact.ContactManager.getAllRecipients()
java.util.Map.put(java.lang.String, java.lang.String)
1466 - Declaração do método: sample.contact.AdminPermissionController.setMessageSource(org.springframework.context.MessageSource)
1466 - Declaração do método: sample.contact.AddDeleteContactController.addContactDisplay()
1466 - Declaração do método: sample.contact.AddDeleteContactController.initBinder(org.springframework.web.bind.WebDataBinder)
Métodos invocados: 
org.springframework.validation.DataBinder.getObjectName()
java.io.PrintStream.println(java.lang.String)
1467 - Declaração do método: sample.contact.AddDeleteContactController.addContact(sample.contact.WebContact, org.springframework.validation.BindingResult)
Métodos invocados: 
org.springframework.validation.Validator.validate(java.lang.Object, org.springframework.validation.Errors)
org.springframework.validation.Errors.hasErrors()
sample.contact.WebContact.getName()
sample.contact.WebContact.getEmail()
sample.contact.ContactManager.create(sample.contact.Contact)
1468 - Declaração do método: sample.contact.AddDeleteContactController.handleRequest(I)
Métodos invocados: 
java.lang.Long.valueOf(J)
sample.contact.ContactManager.getById(java.lang.Long)
sample.contact.ContactManager.delete(sample.contact.Contact)
1469 - Declaração do método: sample.contact.WebContact.getEmail()
1469 - Declaração do método: sample.contact.WebContact.getName()
1469 - Declaração do método: sample.contact.WebContact.setEmail(java.lang.String)
1469 - Declaração do método: sample.contact.WebContact.setName(java.lang.String)
1469 - Declaração do método: sample.contact.Contact.Contact(java.lang.String, java.lang.String)
1469 - Declaração do método: sample.contact.Contact.Contact()
1469 - Declaração do método: sample.contact.Contact.getEmail()
1469 - Declaração do método: sample.contact.Contact.getId()
1469 - Declaração do método: sample.contact.Contact.getName()
1469 - Declaração do método: sample.contact.Contact.setEmail(java.lang.String)
1469 - Declaração do método: sample.contact.Contact.setId(java.lang.Long)
1469 - Declaração do método: sample.contact.Contact.setName(java.lang.String)
1469 - Declaração do método: sample.contact.Contact.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
sample.contact.Contact.getId()
java.lang.StringBuilder.append(java.lang.String)
sample.contact.Contact.getName()
java.lang.StringBuilder.append(java.lang.String)
sample.contact.Contact.getEmail()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
1470 - Declaração do método: sample.contact.ContactManager.addPermission(sample.contact.Contact, org.springframework.security.acls.model.Sid, org.springframework.security.acls.model.Permission)
1470 - Declaração do método: sample.contact.ContactManager.deletePermission(sample.contact.Contact, org.springframework.security.acls.model.Sid, org.springframework.security.acls.model.Permission)
1470 - Declaração do método: sample.contact.ContactManager.create(sample.contact.Contact)
1470 - Declaração do método: sample.contact.ContactManager.delete(sample.contact.Contact)
1470 - Declaração do método: sample.contact.ContactManager.getAll()
1470 - Declaração do método: sample.contact.ContactManager.getAllRecipients()
1470 - Declaração do método: sample.contact.ContactManager.getById(java.lang.Long)
1470 - Declaração do método: sample.contact.ContactManager.getRandomContact()
1470 - Declaração do método: sample.contact.DataSourcePopulator.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
java.lang.Throwable.getMessage()
java.io.PrintStream.println(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
sample.contact.DataSourcePopulator.selectPerson()
java.lang.String.toLowerCase()
java.lang.String.toLowerCase()
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.transaction.support.TransactionTemplate.execute(org.springframework.transaction.support.TransactionCallback)
org.springframework.security.acls.model.MutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
sample.contact.DataSourcePopulator.changeOwner(I, java.lang.String)
sample.contact.DataSourcePopulator.changeOwner(I, java.lang.String)
sample.contact.DataSourcePopulator.changeOwner(I, java.lang.String)
sample.contact.DataSourcePopulator.changeOwner(I, java.lang.String)
sample.contact.DataSourcePopulator.changeOwner(I, java.lang.String)
java.util.Random.nextInt(I)
java.util.Random.nextInt(I)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
java.util.Random.nextInt(I)
java.util.Random.nextInt(I)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1471 - Declaração do método: sample.contact.DataSourcePopulator$1.doInTransaction(org.springframework.transaction.TransactionStatus)
Métodos invocados: 
org.springframework.security.acls.model.MutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
1472 - Declaração do método: sample.contact.DataSourcePopulator.changeOwner(I, java.lang.String)
Métodos invocados: 
org.springframework.security.acls.model.AclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.domain.AclImpl.setOwner(org.springframework.security.acls.model.Sid)
sample.contact.DataSourcePopulator.updateAclInTransaction(org.springframework.security.acls.model.MutableAcl)
1473 - Declaração do método: sample.contact.DataSourcePopulator.getCreateEntities()
1473 - Declaração do método: sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.model.Permission)
Métodos invocados: 
org.springframework.security.acls.model.AclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.domain.AclImpl.getEntries()
java.util.List.size()
org.springframework.security.acls.domain.AclImpl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
sample.contact.DataSourcePopulator.updateAclInTransaction(org.springframework.security.acls.model.MutableAcl)
1474 - Declaração do método: sample.contact.DataSourcePopulator.selectPerson()
Métodos invocados: 
java.util.Random.nextInt(I)
java.util.Random.nextInt(I)
1475 - Declaração do método: sample.contact.DataSourcePopulator.setCreateEntities(I)
1475 - Declaração do método: sample.contact.DataSourcePopulator.setDataSource(javax.sql.DataSource)
1475 - Declaração do método: sample.contact.DataSourcePopulator.setMutableAclService(org.springframework.security.acls.model.MutableAclService)
1475 - Declaração do método: sample.contact.DataSourcePopulator.setPlatformTransactionManager(org.springframework.transaction.PlatformTransactionManager)
1475 - Declaração do método: sample.contact.DataSourcePopulator.updateAclInTransaction(org.springframework.security.acls.model.MutableAcl)
Métodos invocados: 
org.springframework.transaction.support.TransactionTemplate.execute(org.springframework.transaction.support.TransactionCallback)
org.springframework.security.acls.model.MutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
1476 - Declaração do método: sample.contact.DataSourcePopulator$2.doInTransaction(org.springframework.transaction.TransactionStatus)
Métodos invocados: 
org.springframework.security.acls.model.MutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
1477 - Declaração do método: sample.contact.ContactManagerTests.assertContainsContact(J, java.util.List)
Métodos invocados: 
sample.contact.Contact.getId()
java.lang.Long.valueOf(J)
java.lang.Long.equals(java.lang.Object)
org.junit.Assert.fail(java.lang.String)
1478 - Declaração do método: sample.contact.ContactManagerTests.assertDoestNotContainContact(J, java.util.List)
Métodos invocados: 
sample.contact.Contact.getId()
java.lang.Long.valueOf(J)
java.lang.Long.equals(java.lang.Object)
org.junit.Assert.fail(java.lang.String)
1479 - Declaração do método: sample.contact.ContactManagerTests.getContact(java.lang.String)
Métodos invocados: 
sample.contact.ContactManager.getAll()
sample.contact.Contact.getId()
java.lang.Long.equals(java.lang.Object)
1480 - Declaração do método: sample.contact.ContactManagerTests.makeActiveUser(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
1481 - Declaração do método: sample.contact.ContactManagerTests.clearContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1482 - Declaração do método: sample.contact.ContactManagerTests.testDianne()
Métodos invocados: 
sample.contact.ContactManagerTests.makeActiveUser(java.lang.String)
sample.contact.ContactManager.getAll()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
sample.contact.ContactManagerTests.assertContainsContact(J, java.util.List)
sample.contact.ContactManagerTests.assertContainsContact(J, java.util.List)
sample.contact.ContactManagerTests.assertContainsContact(J, java.util.List)
sample.contact.ContactManagerTests.assertContainsContact(J, java.util.List)
sample.contact.ContactManagerTests.assertDoestNotContainContact(J, java.util.List)
sample.contact.ContactManagerTests.assertDoestNotContainContact(J, java.util.List)
sample.contact.ContactManagerTests.assertDoestNotContainContact(J, java.util.List)
1483 - Declaração do método: sample.contact.ContactManagerTests.testrod()
Métodos invocados: 
sample.contact.ContactManagerTests.makeActiveUser(java.lang.String)
sample.contact.ContactManager.getAll()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
sample.contact.ContactManagerTests.assertContainsContact(J, java.util.List)
sample.contact.ContactManagerTests.assertContainsContact(J, java.util.List)
sample.contact.ContactManagerTests.assertContainsContact(J, java.util.List)
sample.contact.ContactManagerTests.assertContainsContact(J, java.util.List)
sample.contact.ContactManagerTests.assertDoestNotContainContact(J, java.util.List)
sample.contact.ContactManager.getById(java.lang.Long)
sample.contact.ContactManager.deletePermission(sample.contact.Contact, org.springframework.security.acls.model.Sid, org.springframework.security.acls.model.Permission)
sample.contact.ContactManager.addPermission(sample.contact.Contact, org.springframework.security.acls.model.Sid, org.springframework.security.acls.model.Permission)
1484 - Declaração do método: sample.contact.ContactManagerTests.testScott()
Métodos invocados: 
sample.contact.ContactManagerTests.makeActiveUser(java.lang.String)
sample.contact.ContactManager.getAll()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
sample.contact.ContactManagerTests.assertContainsContact(J, java.util.List)
sample.contact.ContactManagerTests.assertContainsContact(J, java.util.List)
sample.contact.ContactManagerTests.assertContainsContact(J, java.util.List)
sample.contact.ContactManagerTests.assertContainsContact(J, java.util.List)
sample.contact.ContactManagerTests.assertContainsContact(J, java.util.List)
sample.contact.ContactManagerTests.assertDoestNotContainContact(J, java.util.List)
1485 - Declaração do método: sample.dms.DocumentDao.create(sample.dms.AbstractElement)
1485 - Declaração do método: sample.dms.DocumentDao.delete(sample.dms.File)
1485 - Declaração do método: sample.dms.DocumentDao.update(sample.dms.File)
1485 - Declaração do método: sample.dms.DocumentDao.findElements(sample.dms.Directory)
1485 - Declaração do método: sample.dms.AbstractElement.AbstractElement()
1485 - Declaração do método: sample.dms.AbstractElement.AbstractElement(java.lang.String, sample.dms.AbstractElement)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
sample.dms.AbstractElement.getId()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1486 - Declaração do método: sample.dms.AbstractElement.getId()
1486 - Declaração do método: sample.dms.AbstractElement.getName()
1486 - Declaração do método: sample.dms.AbstractElement.getParent()
1486 - Declaração do método: sample.dms.AbstractElement.getFullName()
Métodos invocados: 
sample.dms.AbstractElement.getName()
java.util.List.add(I, java.lang.String)
sample.dms.AbstractElement.getParent()
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.String.equals(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I)
java.lang.StringBuilder.toString()
1487 - Declaração do método: sample.dms.File.File(java.lang.String, sample.dms.Directory)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
1488 - Declaração do método: sample.dms.File.getContent()
1488 - Declaração do método: sample.dms.File.setContent(java.lang.String)
1488 - Declaração do método: sample.dms.File.toString()
Métodos invocados: 
sample.dms.AbstractElement.getFullName()
sample.dms.AbstractElement.getName()
sample.dms.AbstractElement.getId()
sample.dms.File.getContent()
sample.dms.AbstractElement.getParent()
1489 - Declaração do método: sample.dms.DocumentDaoImpl.obtainPrimaryKey()
Métodos invocados: 
org.springframework.transaction.support.TransactionSynchronizationManager.isSynchronizationActive()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.queryForLong(java.lang.String)
1490 - Declaração do método: sample.dms.DocumentDaoImpl.create(sample.dms.AbstractElement)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
sample.dms.AbstractElement.getId()
org.springframework.util.Assert.isNull(java.lang.Object, java.lang.String)
sample.dms.AbstractElement.getParent()
sample.dms.AbstractElement.getParent()
sample.dms.AbstractElement.getId()
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
sample.dms.AbstractElement.getName()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
sample.dms.DocumentDaoImpl.obtainPrimaryKey()
org.springframework.security.util.FieldUtils.setProtectedFieldValue(java.lang.String, java.lang.Object, java.lang.Object)
sample.dms.AbstractElement.getParent()
sample.dms.AbstractElement.getParent()
sample.dms.AbstractElement.getId()
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
sample.dms.AbstractElement.getName()
sample.dms.File.getContent()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
sample.dms.DocumentDaoImpl.obtainPrimaryKey()
org.springframework.security.util.FieldUtils.setProtectedFieldValue(java.lang.String, java.lang.Object, java.lang.Object)
1491 - Declaração do método: sample.dms.DocumentDaoImpl.delete(sample.dms.File)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
sample.dms.AbstractElement.getId()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
sample.dms.AbstractElement.getId()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
1492 - Declaração do método: sample.dms.DocumentDaoImpl.getDirectoryWithImmediateParentPopulated(java.lang.Long)
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.queryForObject(java.lang.String, [Ljava.lang.Object;, org.springframework.jdbc.core.RowMapper)
java.sql.ResultSet.getLong(java.lang.String)
java.lang.Long.equals(java.lang.Object)
sample.dms.DocumentDaoImpl.getDirectoryWithImmediateParentPopulated(java.lang.Long)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getLong(java.lang.String)
org.springframework.security.util.FieldUtils.setProtectedFieldValue(java.lang.String, java.lang.Object, java.lang.Object)
1493 - Declaração do método: sample.dms.DocumentDaoImpl$1.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getLong(java.lang.String)
java.lang.Long.equals(java.lang.Object)
sample.dms.DocumentDaoImpl.getDirectoryWithImmediateParentPopulated(java.lang.Long)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getLong(java.lang.String)
org.springframework.security.util.FieldUtils.setProtectedFieldValue(java.lang.String, java.lang.Object, java.lang.Object)
1494 - Declaração do método: sample.dms.DocumentDaoImpl.findElements(sample.dms.Directory)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
sample.dms.AbstractElement.getId()
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, org.springframework.jdbc.core.RowMapper)
java.sql.ResultSet.getLong(java.lang.String)
sample.dms.DocumentDaoImpl.getDirectoryWithImmediateParentPopulated(java.lang.Long)
java.util.List.toArray([Lsample.dms.AbstractElement;)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
sample.dms.AbstractElement.getId()
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, [Ljava.lang.Object;, org.springframework.jdbc.core.RowMapper)
java.sql.ResultSet.getLong(java.lang.String)
sample.dms.DocumentDaoImpl.getDirectoryWithImmediateParentPopulated(java.lang.Long)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
sample.dms.AbstractElement.getId()
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, [Ljava.lang.Object;, org.springframework.jdbc.core.RowMapper)
java.sql.ResultSet.getLong(java.lang.String)
sample.dms.DocumentDaoImpl.getDirectoryWithImmediateParentPopulated(java.lang.Long)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getLong(java.lang.String)
org.springframework.security.util.FieldUtils.setProtectedFieldValue(java.lang.String, java.lang.Object, java.lang.Object)
java.util.List.addAll(java.util.Collection)
java.util.List.toArray([Lsample.dms.AbstractElement;)
1495 - Declaração do método: sample.dms.DocumentDaoImpl$2.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getLong(java.lang.String)
sample.dms.DocumentDaoImpl.getDirectoryWithImmediateParentPopulated(java.lang.Long)
1496 - Declaração do método: sample.dms.DocumentDaoImpl$3.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getLong(java.lang.String)
sample.dms.DocumentDaoImpl.getDirectoryWithImmediateParentPopulated(java.lang.Long)
1497 - Declaração do método: sample.dms.DocumentDaoImpl$4.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getLong(java.lang.String)
sample.dms.DocumentDaoImpl.getDirectoryWithImmediateParentPopulated(java.lang.Long)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getLong(java.lang.String)
org.springframework.security.util.FieldUtils.setProtectedFieldValue(java.lang.String, java.lang.Object, java.lang.Object)
1498 - Declaração do método: sample.dms.DocumentDaoImpl.update(sample.dms.File)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
sample.dms.AbstractElement.getId()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
sample.dms.File.getContent()
sample.dms.AbstractElement.getId()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
1499 - Declaração do método: sample.dms.Directory.Directory()
1499 - Declaração do método: sample.dms.Directory.Directory(java.lang.String, sample.dms.Directory)
1499 - Declaração do método: sample.dms.Directory.toString()
Métodos invocados: 
sample.dms.AbstractElement.getFullName()
sample.dms.AbstractElement.getName()
sample.dms.AbstractElement.getId()
sample.dms.AbstractElement.getParent()
1500 - Declaração do método: sample.dms.DataSourcePopulator.DataSourcePopulator(javax.sql.DataSource, sample.dms.DocumentDao)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1501 - Declaração do método: sample.dms.DataSourcePopulator.afterPropertiesSet()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
sample.dms.DataSourcePopulator.addPermission(sample.dms.DocumentDao, sample.dms.AbstractElement, java.lang.String, I)
sample.dms.DataSourcePopulator.createSampleData(java.lang.String, java.lang.String)
sample.dms.DataSourcePopulator.createSampleData(java.lang.String, java.lang.String)
sample.dms.DataSourcePopulator.createSampleData(java.lang.String, java.lang.String)
1502 - Declaração do método: sample.dms.DataSourcePopulator.createSampleData(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
sample.dms.DocumentDao.create(sample.dms.AbstractElement)
sample.dms.DataSourcePopulator.addPermission(sample.dms.DocumentDao, sample.dms.AbstractElement, java.lang.String, I)
sample.dms.DataSourcePopulator.addPermission(sample.dms.DocumentDao, sample.dms.AbstractElement, java.lang.String, I)
sample.dms.DataSourcePopulator.createFiles(sample.dms.DocumentDao, sample.dms.Directory)
sample.dms.DocumentDao.create(sample.dms.AbstractElement)
sample.dms.DataSourcePopulator.addPermission(sample.dms.DocumentDao, sample.dms.AbstractElement, java.lang.String, I)
sample.dms.DataSourcePopulator.createFiles(sample.dms.DocumentDao, sample.dms.Directory)
sample.dms.DocumentDao.create(sample.dms.AbstractElement)
sample.dms.DataSourcePopulator.addPermission(sample.dms.DocumentDao, sample.dms.AbstractElement, java.lang.String, I)
sample.dms.DataSourcePopulator.addPermission(sample.dms.DocumentDao, sample.dms.AbstractElement, java.lang.String, I)
sample.dms.DataSourcePopulator.createFiles(sample.dms.DocumentDao, sample.dms.Directory)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1503 - Declaração do método: sample.dms.DataSourcePopulator.createFiles(sample.dms.DocumentDao, sample.dms.Directory)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
sample.dms.DocumentDao.findElements(sample.dms.Directory)
sample.dms.DocumentDao.create(sample.dms.AbstractElement)
sample.dms.DocumentDao.findElements(sample.dms.Directory)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
1504 - Declaração do método: sample.dms.DataSourcePopulator.addPermission(sample.dms.DocumentDao, sample.dms.AbstractElement, java.lang.String, I)
1504 - Declaração do método: sample.dms.secured.SecureDataSourcePopulator.SecureDataSourcePopulator(javax.sql.DataSource, sample.dms.secured.SecureDocumentDao, org.springframework.security.acls.model.MutableAclService)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1505 - Declaração do método: sample.dms.secured.SecureDataSourcePopulator.addPermission(sample.dms.DocumentDao, sample.dms.AbstractElement, java.lang.String, I)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.String.startsWith(java.lang.String)
org.springframework.security.acls.model.AclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.MutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
1506 - Declaração do método: sample.dms.secured.SecureDocumentDaoImpl.SecureDocumentDaoImpl(org.springframework.security.acls.model.MutableAclService)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1507 - Declaração do método: sample.dms.secured.SecureDocumentDaoImpl.getUsers()
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, org.springframework.jdbc.core.RowMapper)
java.util.List.toArray([Ljava.lang.String;)
java.sql.ResultSet.getString(java.lang.String)
1508 - Declaração do método: sample.dms.secured.SecureDocumentDaoImpl$1.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getString(java.lang.String)
1509 - Declaração do método: sample.dms.secured.SecureDocumentDaoImpl.create(sample.dms.AbstractElement)
Métodos invocados: 
org.springframework.security.acls.model.MutableAclService.createAcl(org.springframework.security.acls.model.ObjectIdentity)
sample.dms.AbstractElement.getParent()
sample.dms.AbstractElement.getParent()
org.springframework.security.acls.model.AclService.readAclById(org.springframework.security.acls.model.ObjectIdentity)
org.springframework.security.acls.model.MutableAcl.setParent(org.springframework.security.acls.model.Acl)
org.springframework.security.acls.model.Acl.getEntries()
java.util.List.size()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.acls.model.MutableAcl.insertAce(I, org.springframework.security.acls.model.Permission, org.springframework.security.acls.model.Sid, Z)
org.springframework.security.acls.model.MutableAclService.updateAcl(org.springframework.security.acls.model.MutableAcl)
1510 - Declaração do método: sample.dms.secured.SecureDocumentDao.getUsers()
1510 - Declaração do método: bigbank.SeedData.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
bigbank.BankDao.createOrUpdateAccount(bigbank.Account)
bigbank.BankDao.createOrUpdateAccount(bigbank.Account)
bigbank.BankDao.createOrUpdateAccount(bigbank.Account)
bigbank.BankDao.createOrUpdateAccount(bigbank.Account)
1511 - Declaração do método: bigbank.SeedData.setBankDao(bigbank.BankDao)
1511 - Declaração do método: bigbank.BankDao.readAccount(java.lang.Long)
1511 - Declaração do método: bigbank.BankDao.createOrUpdateAccount(bigbank.Account)
1511 - Declaração do método: bigbank.BankDao.findAccounts()
1511 - Declaração do método: bigbank.BankServiceImpl.myPointcut()
1511 - Declaração do método: bigbank.BankServiceImpl.BankServiceImpl(bigbank.BankDao)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
1512 - Declaração do método: bigbank.BankServiceImpl.findAccounts()
Métodos invocados: 
bigbank.BankDao.findAccounts()
1513 - Declaração do método: bigbank.BankServiceImpl.post(bigbank.Account, D)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
bigbank.Account.getId()
bigbank.BankDao.readAccount(java.lang.Long)
bigbank.Account.getBalance()
bigbank.Account.setBalance(D)
bigbank.BankDao.createOrUpdateAccount(bigbank.Account)
1514 - Declaração do método: bigbank.BankServiceImpl.readAccount(java.lang.Long)
Métodos invocados: 
bigbank.BankDao.readAccount(java.lang.Long)
1515 - Declaração do método: bigbank.Account.Account(java.lang.String)
1515 - Declaração do método: bigbank.Account.getId()
1515 - Declaração do método: bigbank.Account.setId(J)
1515 - Declaração do método: bigbank.Account.getHolder()
1515 - Declaração do método: bigbank.Account.setHolder(java.lang.String)
1515 - Declaração do método: bigbank.Account.getBalance()
1515 - Declaração do método: bigbank.Account.setBalance(D)
1515 - Declaração do método: bigbank.Account.getOverdraft()
1515 - Declaração do método: bigbank.Account.setOverdraft(D)
1515 - Declaração do método: bigbank.Account.toString()
1515 - Declaração do método: bigbank.BankService.readAccount(java.lang.Long)
1515 - Declaração do método: bigbank.BankService.findAccounts()
1515 - Declaração do método: bigbank.BankService.post(bigbank.Account, D)
1515 - Declaração do método: bigbank.BankDaoStub.createOrUpdateAccount(bigbank.Account)
Métodos invocados: 
bigbank.Account.getId()
bigbank.Account.setId(J)
bigbank.Account.getId()
java.util.Map.put(java.lang.Long, bigbank.Account)
java.io.PrintStream.println(java.lang.String)
1516 - Declaração do método: bigbank.BankDaoStub.findAccounts()
Métodos invocados: 
java.util.Map.values()
java.util.Collection.toArray([Lbigbank.Account;)
java.io.PrintStream.println(java.lang.String)
java.io.PrintStream.println(java.lang.String)
1517 - Declaração do método: bigbank.BankDaoStub.readAccount(java.lang.Long)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
1518 - Declaração do método: bigbank.web.PostAccounts.PostAccounts(bigbank.BankService)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
1519 - Declaração do método: bigbank.web.PostAccounts.handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.web.bind.ServletRequestUtils.getRequiredLongParameter(javax.servlet.ServletRequest, java.lang.String)
org.springframework.web.bind.ServletRequestUtils.getRequiredDoubleParameter(javax.servlet.ServletRequest, java.lang.String)
bigbank.BankService.readAccount(java.lang.Long)
bigbank.BankService.post(bigbank.Account, D)
1520 - Declaração do método: bigbank.web.ListAccounts.ListAccounts(bigbank.BankService)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
1521 - Declaração do método: bigbank.web.ListAccounts.handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
bigbank.BankService.findAccounts()
org.springframework.web.servlet.ModelAndView.addObject(java.lang.String, java.lang.Object)
1522 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
java.lang.String.length()
org.springframework.security.taglibs.authz.AuthorizeTag.authorizeUsingAccessExpression(org.springframework.security.core.Authentication)
java.lang.String.length()
org.springframework.security.taglibs.authz.AuthorizeTag.authorizeUsingUrlCheck(org.springframework.security.core.Authentication)
java.lang.Boolean.valueOf(Z)
javax.servlet.jsp.JspContext.setAttribute(java.lang.String, java.lang.Object, I)
1523 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.authorizeUsingAccessExpression(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.getExpressionHandler()
org.springframework.security.web.access.expression.WebSecurityExpressionHandler.getExpressionParser()
org.springframework.expression.ExpressionParser.parseExpression(java.lang.String)
javax.servlet.jsp.PageContext.getRequest()
javax.servlet.jsp.PageContext.getResponse()
org.springframework.security.web.access.expression.WebSecurityExpressionHandler.createEvaluationContext(org.springframework.security.core.Authentication, org.springframework.security.web.FilterInvocation)
org.springframework.security.access.expression.ExpressionUtils.evaluateAsBoolean(org.springframework.expression.Expression, org.springframework.expression.EvaluationContext)
1524 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.authorizeUsingUrlCheck(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.getPrivilegeEvaluator()
javax.servlet.jsp.PageContext.getRequest()
javax.servlet.http.HttpServletRequest.getContextPath()
org.springframework.security.web.access.WebInvocationPrivilegeEvaluator.isAllowed(java.lang.String, java.lang.String, java.lang.String, org.springframework.security.core.Authentication)
1525 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.setAccess(java.lang.String)
1525 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.setUrl(java.lang.String)
1525 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.setMethod(java.lang.String)
1525 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.setVar(java.lang.String)
1525 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.getExpressionHandler()
Métodos invocados: 
javax.servlet.jsp.PageContext.getServletContext()
org.springframework.web.context.support.WebApplicationContextUtils.getRequiredWebApplicationContext(javax.servlet.ServletContext)
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
java.util.Map.size()
java.util.Map.values()
java.util.Collection.toArray()
1526 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.getPrivilegeEvaluator()
Métodos invocados: 
javax.servlet.jsp.PageContext.getServletContext()
org.springframework.web.context.support.WebApplicationContextUtils.getRequiredWebApplicationContext(javax.servlet.ServletContext)
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
java.util.Map.size()
java.util.Map.values()
java.util.Collection.toArray()
1527 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag$1.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1527 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTag.AuthenticationTag()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthenticationTag.init()
1528 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTag.init()
1528 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTag.setVar(java.lang.String)
1528 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
1528 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTag.setScope(java.lang.String)
Métodos invocados: 
org.springframework.web.util.TagUtils.getScope(java.lang.String)
1529 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTag.doStartTag()
1529 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTag.doEndTag()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.beans.BeanWrapperImpl.getPropertyValue(java.lang.String)
javax.servlet.jsp.JspContext.setAttribute(java.lang.String, java.lang.Object, I)
javax.servlet.jsp.JspContext.removeAttribute(java.lang.String, I)
javax.servlet.jsp.JspContext.removeAttribute(java.lang.String)
java.lang.String.valueOf(java.lang.Object)
org.springframework.security.web.util.TextEscapeUtils.escapeEntities(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.writeMessage(java.lang.String)
java.lang.String.valueOf(java.lang.Object)
org.springframework.security.taglibs.authz.AuthenticationTag.writeMessage(java.lang.String)
1530 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTag.writeMessage(java.lang.String)
Métodos invocados: 
javax.servlet.jsp.JspContext.getOut()
java.lang.String.valueOf(java.lang.Object)
java.io.Writer.write(java.lang.String)
1531 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTag.setHtmlEscape(java.lang.String)
Métodos invocados: 
org.springframework.web.util.ExpressionEvaluationUtils.evaluateBoolean(java.lang.String, java.lang.String, javax.servlet.jsp.PageContext)
1532 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTag.isHtmlEscape()
1532 - Declaração do método: org.springframework.security.taglibs.authz.LegacyAuthorizeTag.authoritiesToRoles(java.util.Collection)
Métodos invocados: 
org.springframework.security.core.GrantedAuthority.getAuthority()
java.lang.Object.toString()
org.springframework.security.core.GrantedAuthority.getAuthority()
java.util.Set.add(java.lang.String)
1533 - Declaração do método: org.springframework.security.taglibs.authz.LegacyAuthorizeTag.doStartTag()
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.getPrincipalAuthorities()
org.springframework.web.util.ExpressionEvaluationUtils.evaluateString(java.lang.String, java.lang.String, javax.servlet.jsp.PageContext)
java.lang.String.equals(java.lang.Object)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.parseAuthoritiesString(java.lang.String)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.retainAll(java.util.Collection, java.util.Set)
java.util.Set.isEmpty()
org.springframework.web.util.ExpressionEvaluationUtils.evaluateString(java.lang.String, java.lang.String, javax.servlet.jsp.PageContext)
java.lang.String.equals(java.lang.Object)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.parseAuthoritiesString(java.lang.String)
java.util.Collection.containsAll(java.util.Collection)
org.springframework.web.util.ExpressionEvaluationUtils.evaluateString(java.lang.String, java.lang.String, javax.servlet.jsp.PageContext)
java.lang.String.equals(java.lang.Object)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.parseAuthoritiesString(java.lang.String)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.retainAll(java.util.Collection, java.util.Set)
java.util.Set.isEmpty()
1534 - Declaração do método: org.springframework.security.taglibs.authz.LegacyAuthorizeTag.getIfAllGranted()
1534 - Declaração do método: org.springframework.security.taglibs.authz.LegacyAuthorizeTag.getIfAnyGranted()
1534 - Declaração do método: org.springframework.security.taglibs.authz.LegacyAuthorizeTag.getIfNotGranted()
1534 - Declaração do método: org.springframework.security.taglibs.authz.LegacyAuthorizeTag.getPrincipalAuthorities()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
java.util.Collections.emptyList()
org.springframework.security.core.Authentication.getAuthorities()
1535 - Declaração do método: org.springframework.security.taglibs.authz.LegacyAuthorizeTag.parseAuthoritiesString(java.lang.String)
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.commaSeparatedStringToAuthorityList(java.lang.String)
java.util.Set.addAll(java.util.Collection)
1536 - Declaração do método: org.springframework.security.taglibs.authz.LegacyAuthorizeTag.retainAll(java.util.Collection, java.util.Set)
Métodos invocados: 
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.authoritiesToRoles(java.util.Collection)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.authoritiesToRoles(java.util.Collection)
java.util.Set.retainAll(java.util.Collection)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.rolesToAuthorities(java.util.Set, java.util.Collection)
1537 - Declaração do método: org.springframework.security.taglibs.authz.LegacyAuthorizeTag.rolesToAuthorities(java.util.Set, java.util.Collection)
Métodos invocados: 
org.springframework.security.core.GrantedAuthority.getAuthority()
java.lang.String.equals(java.lang.Object)
java.util.Set.add(org.springframework.security.core.GrantedAuthority)
1538 - Declaração do método: org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAllGranted(java.lang.String)
1538 - Declaração do método: org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAnyGranted(java.lang.String)
1538 - Declaração do método: org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfNotGranted(java.lang.String)
1538 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.doStartTag()
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
org.springframework.security.taglibs.authz.AccessControlListTag.skipBody()
org.springframework.security.taglibs.authz.AccessControlListTag.initializeIfRequired()
org.springframework.web.util.ExpressionEvaluationUtils.evaluateString(java.lang.String, java.lang.String, javax.servlet.jsp.PageContext)
org.springframework.security.taglibs.authz.AccessControlListTag.parsePermissionsString(java.lang.String)
org.springframework.web.util.ExpressionEvaluationUtils.evaluate(java.lang.String, java.lang.String, java.lang.Class, javax.servlet.jsp.PageContext)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.taglibs.authz.AccessControlListTag.evalBody()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.taglibs.authz.AccessControlListTag.skipBody()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.acls.model.SidRetrievalStrategy.getSids(org.springframework.security.core.Authentication)
org.springframework.security.acls.model.ObjectIdentityRetrievalStrategy.getObjectIdentity(java.lang.Object)
org.springframework.security.acls.model.AclService.readAclById(org.springframework.security.acls.model.ObjectIdentity, java.util.List)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.springframework.security.taglibs.authz.AccessControlListTag.evalBody()
org.springframework.security.taglibs.authz.AccessControlListTag.skipBody()
org.springframework.security.taglibs.authz.AccessControlListTag.skipBody()
1539 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.skipBody()
Métodos invocados: 
javax.servlet.jsp.JspContext.setAttribute(java.lang.String, java.lang.Object, I)
1540 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.evalBody()
Métodos invocados: 
javax.servlet.jsp.JspContext.setAttribute(java.lang.String, java.lang.Object, I)
1541 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.getContext(javax.servlet.jsp.PageContext)
Métodos invocados: 
javax.servlet.jsp.PageContext.getServletContext()
org.springframework.web.context.support.WebApplicationContextUtils.getRequiredWebApplicationContext(javax.servlet.ServletContext)
1542 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.getDomainObject()
1542 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.getHasPermission()
1542 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.initializeIfRequired()
Métodos invocados: 
org.springframework.security.taglibs.authz.AccessControlListTag.getContext(javax.servlet.jsp.PageContext)
org.springframework.security.taglibs.authz.AccessControlListTag.getBeanOfType(java.lang.Class)
org.springframework.security.taglibs.authz.AccessControlListTag.getBeanOfType(java.lang.Class)
org.springframework.security.taglibs.authz.AccessControlListTag.getBeanOfType(java.lang.Class)
org.springframework.security.taglibs.authz.AccessControlListTag.getBeanOfType(java.lang.Class)
1543 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.getBeanOfType(java.lang.Class)
Métodos invocados: 
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
org.springframework.context.ApplicationContext.getParent()
org.springframework.context.ApplicationContext.getParent()
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
java.util.Map.putAll(java.util.Map)
java.util.Map.size()
java.util.Map.size()
java.util.Map.values()
java.util.Collection.iterator()
java.util.Iterator.next()
java.lang.Class.getSimpleName()
1544 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.parsePermissionsString(java.lang.String)
Métodos invocados: 
java.util.StringTokenizer.hasMoreTokens()
java.util.StringTokenizer.nextToken()
java.lang.Integer.valueOf(java.lang.String)
org.springframework.security.acls.domain.PermissionFactory.buildFromMask(I)
java.util.Set.add(org.springframework.security.acls.model.Permission)
org.springframework.security.acls.domain.PermissionFactory.buildFromName(java.lang.String)
java.util.Set.add(org.springframework.security.acls.model.Permission)
1545 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.setDomainObject(java.lang.Object)
1545 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.setHasPermission(java.lang.String)
1545 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.setVar(java.lang.String)
1545 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl.allGranted(java.lang.String)
Métodos invocados: 
org.springframework.security.taglibs.velocity.AuthzImpl.ifGranted(java.lang.String, I)
1546 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl.anyGranted(java.lang.String)
Métodos invocados: 
org.springframework.security.taglibs.velocity.AuthzImpl.ifGranted(java.lang.String, I)
1547 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl.getAppCtx()
1547 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl.getPrincipal()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.doEndTag()
java.lang.Throwable.printStackTrace()
java.lang.Throwable.getMessage()
org.springframework.security.taglibs.velocity.AuthzImpl$MyAuthenticationTag.getLastMessage()
1548 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl.ifGranted(java.lang.String, I)
Métodos invocados: 
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAllGranted(java.lang.String)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfNotGranted(java.lang.String)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.doStartTag()
java.lang.Throwable.getMessage()
1549 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl.noneGranted(java.lang.String)
Métodos invocados: 
org.springframework.security.taglibs.velocity.AuthzImpl.ifGranted(java.lang.String, I)
1550 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl.setAppCtx(org.springframework.context.ApplicationContext)
1550 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl$MyAuthenticationTag.getLastMessage()
1550 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl$MyAuthenticationTag.writeMessage(java.lang.String)
1550 - Declaração do método: org.springframework.security.taglibs.velocity.Authz.allGranted(java.lang.String)
1550 - Declaração do método: org.springframework.security.taglibs.velocity.Authz.anyGranted(java.lang.String)
1550 - Declaração do método: org.springframework.security.taglibs.velocity.Authz.getAppCtx()
1550 - Declaração do método: org.springframework.security.taglibs.velocity.Authz.getPrincipal()
1550 - Declaração do método: org.springframework.security.taglibs.velocity.Authz.noneGranted(java.lang.String)
1550 - Declaração do método: org.springframework.security.taglibs.velocity.Authz.setAppCtx(org.springframework.context.ApplicationContext)
1550 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagCustomGrantedAuthorityTests.setUp()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
1551 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagCustomGrantedAuthorityTests.tearDown()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1552 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagCustomGrantedAuthorityTests.testAllowsRequestWhenCustomAuthorityPresentsCorrectRole()
Métodos invocados: 
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1553 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagCustomGrantedAuthorityTests.testRejectsRequestWhenCustomAuthorityReturnsNull()
Métodos invocados: 
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.doStartTag()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1554 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagCustomGrantedAuthorityTests$CustomGrantedAuthority.CustomGrantedAuthority(java.lang.String)
1554 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagCustomGrantedAuthorityTests$CustomGrantedAuthority.getAuthority()
1554 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagExpressionLanguageTests.setUp()
Métodos invocados: 
javax.servlet.jsp.tagext.TagSupport.setPageContext(javax.servlet.jsp.PageContext)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
1555 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagExpressionLanguageTests$1.getVariableResolver()
1555 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagExpressionLanguageTests.tearDown()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1556 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagExpressionLanguageTests.testAllGrantedUsesExpressionLanguageWhenExpressionIsEL()
Métodos invocados: 
org.springframework.mock.web.MockPageContext.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAllGranted(java.lang.String)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1557 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagExpressionLanguageTests.testAnyGrantedUsesExpressionLanguageWhenExpressionIsEL()
Métodos invocados: 
org.springframework.mock.web.MockPageContext.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1558 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagExpressionLanguageTests.testNotGrantedUsesExpressionLanguageWhenExpressionIsEL()
Métodos invocados: 
org.springframework.mock.web.MockPageContext.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfNotGranted(java.lang.String)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1559 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests.tearDown()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1560 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests.testOperationWhenPrincipalIsAUserDetailsInstance()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.taglibs.authz.AuthenticationTag.doEndTag()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.taglibs.authz.AuthenticationTagTests$MyAuthenticationTag.getLastMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1561 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests.testOperationWhenPrincipalIsAString()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.taglibs.authz.AuthenticationTag.doEndTag()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.taglibs.authz.AuthenticationTagTests$MyAuthenticationTag.getLastMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1562 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests.testNestedPropertyIsReadCorrectly()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.taglibs.authz.AuthenticationTag.doEndTag()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.taglibs.authz.AuthenticationTagTests$MyAuthenticationTag.getLastMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1563 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests.testOperationWhenPrincipalIsNull()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.taglibs.authz.AuthenticationTag.doEndTag()
org.junit.Assert.assertEquals(J, J)
1564 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests.testOperationWhenSecurityContextIsNull()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.taglibs.authz.AuthenticationTag.doEndTag()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.taglibs.authz.AuthenticationTagTests$MyAuthenticationTag.getLastMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1565 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests.testSkipsBodyIfNullOrEmptyOperation()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.taglibs.authz.AuthenticationTag.doEndTag()
org.junit.Assert.assertEquals(J, J)
1566 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests.testThrowsExceptionForUnrecognisedProperty()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.doStartTag()
org.springframework.security.taglibs.authz.AuthenticationTag.doEndTag()
org.junit.Assert.fail(java.lang.String)
1567 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests.htmlEscapingIsUsedByDefault()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.doStartTag()
org.springframework.security.taglibs.authz.AuthenticationTag.doEndTag()
org.springframework.security.taglibs.authz.AuthenticationTagTests$MyAuthenticationTag.getLastMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1568 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests.settingHtmlEscapeToFalsePreventsEscaping()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.setHtmlEscape(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.doStartTag()
org.springframework.security.taglibs.authz.AuthenticationTag.doEndTag()
org.springframework.security.taglibs.authz.AuthenticationTagTests$MyAuthenticationTag.getLastMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1569 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests$MyAuthenticationTag.getLastMessage()
1569 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests$MyAuthenticationTag.writeMessage(java.lang.String)
1569 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.setUp()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.context.support.StaticApplicationContext.registerSingleton(java.lang.String, java.lang.Class)
org.springframework.context.support.StaticApplicationContext.registerSingleton(java.lang.String, java.lang.Class)
org.springframework.mock.web.MockServletContext.setAttribute(java.lang.String, java.lang.Object)
javax.servlet.jsp.tagext.TagSupport.setPageContext(javax.servlet.jsp.PageContext)
1570 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.tearDown()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1571 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.skipsBodyIfNoAuthenticationPresent()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.springframework.security.taglibs.authz.AuthorizeTag.setAccess(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
1572 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.skipsBodyIfAccessExpressionDeniesAccess()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setAccess(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
1573 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.showsBodyIfAccessExpressionAllowsAccess()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setAccess(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
1574 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.skipsBodyWithUrlSetIfNoAuthenticationPresent()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.springframework.security.taglibs.authz.AuthorizeTag.setUrl(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
1575 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.skipsBodyIfUrlIsNotAllowed()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setUrl(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
1576 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.evaluatesBodyIfUrlIsAllowed()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setUrl(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.setMethod(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
1577 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.skipsBodyIfMethodIsNotAllowed()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setUrl(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.setMethod(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
1578 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.testAlwaysReturnsUnauthorizedIfNoUserFound()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAllGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
1579 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.testDefaultsToNotOutputtingBodyWhenNoRequiredAuthorities()
Métodos invocados: 
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.getIfAllGranted()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.getIfAnyGranted()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.getIfNotGranted()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
1580 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.testOutputsBodyIfOneRolePresent()
Métodos invocados: 
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
1581 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.testOutputsBodyWhenAllGranted()
Métodos invocados: 
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAllGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
1582 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.testOutputsBodyWhenNotGrantedSatisfied()
Métodos invocados: 
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfNotGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
1583 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.testPreventsBodyOutputIfNoSecurityContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
1584 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.testSkipsBodyIfNoAnyRolePresent()
Métodos invocados: 
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
1585 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.testSkipsBodyWhenMissingAnAllGranted()
Métodos invocados: 
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAllGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
1586 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.testSkipsBodyWhenNotGrantedUnsatisfied()
Métodos invocados: 
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfNotGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
org.junit.Assert.assertEquals(java.lang.String, J, J)
1587 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests$MockWebInvocationPrivilegeEvaluator.isAllowed(java.lang.String, org.springframework.security.core.Authentication)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
1588 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests$MockWebInvocationPrivilegeEvaluator.isAllowed(java.lang.String, java.lang.String, java.lang.String, org.springframework.security.core.Authentication)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
1589 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagAttributeTests.setUp()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
1590 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagAttributeTests.tearDown()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1591 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagAttributeTests.testAssertsIfAllGrantedSecond()
Métodos invocados: 
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAllGranted(java.lang.String)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1592 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagAttributeTests.testAssertsIfAnyGrantedLast()
Métodos invocados: 
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1593 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagAttributeTests.testAssertsIfNotGrantedFirst()
Métodos invocados: 
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfNotGranted(java.lang.String)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAllGranted(java.lang.String)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1594 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagAttributeTests.testAssertsIfNotGrantedIgnoresWhitespaceInAttribute()
Métodos invocados: 
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1595 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagAttributeTests.testIfAllGrantedIgnoresWhitespaceInAttribute()
Métodos invocados: 
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfAllGranted(java.lang.String)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1596 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagAttributeTests.testIfNotGrantedIgnoresWhitespaceInAttribute()
Métodos invocados: 
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.setIfNotGranted(java.lang.String)
org.springframework.security.taglibs.authz.LegacyAuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1597 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTagTests.setup()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Matchers.anyObject()
org.springframework.security.acls.model.ObjectIdentityRetrievalStrategy.getObjectIdentity(java.lang.Object)
org.mockito.Mockito.when(org.springframework.security.acls.model.ObjectIdentity)
org.mockito.stubbing.OngoingStubbing.thenReturn(org.springframework.security.acls.model.ObjectIdentity)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.anyList()
org.springframework.security.acls.model.AclService.readAclById(org.springframework.security.acls.model.ObjectIdentity, java.util.List)
org.mockito.Mockito.when(org.springframework.security.acls.model.Acl)
org.mockito.stubbing.OngoingStubbing.thenReturn(org.springframework.security.acls.model.Acl)
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
org.mockito.Mockito.when(java.util.Map)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.util.Map)
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
org.mockito.Mockito.when(java.util.Map)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.util.Map)
org.springframework.mock.web.MockServletContext.setAttribute(java.lang.String, java.lang.Object)
javax.servlet.jsp.tagext.TagSupport.setPageContext(javax.servlet.jsp.PageContext)
1598 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTagTests.clearContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1599 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTagTests.bodyIsEvaluatedIfAclGrantsAccess()
Métodos invocados: 
org.mockito.Matchers.anyList()
org.mockito.Matchers.anyList()
org.mockito.Matchers.eq(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.mockito.Mockito.when(java.lang.Boolean)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.lang.Boolean)
org.springframework.security.taglibs.authz.AccessControlListTag.setDomainObject(java.lang.Object)
org.springframework.security.taglibs.authz.AccessControlListTag.setHasPermission(java.lang.String)
org.springframework.security.taglibs.authz.AccessControlListTag.setVar(java.lang.String)
org.springframework.security.taglibs.authz.AccessControlListTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
org.springframework.mock.web.MockPageContext.getAttribute(java.lang.String)
org.junit.Assert.assertTrue(Z)
1600 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTagTests.bodyIsSkippedIfAclDeniesAccess()
Métodos invocados: 
org.mockito.Matchers.anyList()
org.mockito.Matchers.anyList()
org.mockito.Matchers.eq(Z)
org.springframework.security.acls.model.Acl.isGranted(java.util.List, java.util.List, Z)
org.mockito.Mockito.when(java.lang.Boolean)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.lang.Boolean)
org.springframework.security.taglibs.authz.AccessControlListTag.setDomainObject(java.lang.Object)
org.springframework.security.taglibs.authz.AccessControlListTag.setHasPermission(java.lang.String)
org.springframework.security.taglibs.authz.AccessControlListTag.setVar(java.lang.String)
org.springframework.security.taglibs.authz.AccessControlListTag.doStartTag()
org.junit.Assert.assertEquals(J, J)
org.springframework.mock.web.MockPageContext.getAttribute(java.lang.String)
org.junit.Assert.assertFalse(Z)
1601 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTests.testOperationWhenPrincipalIsAString()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.taglibs.velocity.Authz.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1602 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTests.testOperationWhenPrincipalIsAUserDetailsInstance()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.taglibs.velocity.Authz.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1603 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTests.testOperationWhenPrincipalIsNull()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.taglibs.velocity.Authz.getPrincipal()
junit.framework.Assert.assertNull(java.lang.Object)
1604 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTests.testOperationWhenSecurityContextIsNull()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.taglibs.velocity.Authz.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
1605 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.setUp()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
1606 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.tearDown()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1607 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.testAlwaysReturnsUnauthorizedIfNoUserFound()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.taglibs.velocity.Authz.allGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
1608 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.testDefaultsToNotOutputtingBodyWhenNoRequiredAuthorities()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.allGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.taglibs.velocity.Authz.anyGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.taglibs.velocity.Authz.noneGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
1609 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.testOutputsBodyIfOneRolePresent()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.anyGranted(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1610 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.testOutputsBodyWhenAllGranted()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.allGranted(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1611 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.testOutputsBodyWhenNotGrantedSatisfied()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.noneGranted(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1612 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.testPreventsBodyOutputIfNoSecureContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.taglibs.velocity.Authz.anyGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
1613 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.testSkipsBodyIfNoAnyRolePresent()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.anyGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
1614 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.testSkipsBodyWhenMissingAnAllGranted()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.allGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
1615 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.testSkipsBodyWhenNotGrantedUnsatisfied()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.noneGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
1616 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAttributeTest.setUp()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
1617 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAttributeTest.tearDown()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1618 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAttributeTest.testAssertsIfAllGrantedSecond()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.allGranted(java.lang.String)
org.springframework.security.taglibs.velocity.Authz.anyGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
1619 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAttributeTest.testAssertsIfAnyGrantedLast()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.anyGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
1620 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAttributeTest.testAssertsIfNotGrantedFirst()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.allGranted(java.lang.String)
org.springframework.security.taglibs.velocity.Authz.noneGranted(java.lang.String)
org.springframework.security.taglibs.velocity.Authz.anyGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
1621 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAttributeTest.testAssertsIfNotGrantedIgnoresWhitespaceInAttribute()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.anyGranted(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1622 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAttributeTest.testIfAllGrantedIgnoresWhitespaceInAttribute()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.allGranted(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1623 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAttributeTest.testIfNotGrantedIgnoresWhitespaceInAttribute()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.allGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
1624 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate.SpringSecurityLdapTemplate(org.springframework.ldap.core.ContextSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.ldap.core.LdapTemplate.setContextSource(org.springframework.ldap.core.ContextSource)
javax.naming.directory.SearchControls.setSearchScope(I)
1625 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate.compare(java.lang.String, java.lang.String, java.lang.Object)
Métodos invocados: 
javax.naming.directory.SearchControls.setReturningAttributes([Ljava.lang.String;)
javax.naming.directory.SearchControls.setSearchScope(I)
javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, [Ljava.lang.Object;, javax.naming.directory.SearchControls)
javax.naming.NamingEnumeration.hasMore()
java.lang.Boolean.valueOf(Z)
org.springframework.security.ldap.LdapUtils.closeEnumeration(javax.naming.NamingEnumeration)
org.springframework.ldap.core.LdapTemplate.executeReadOnly(org.springframework.ldap.core.ContextExecutor)
java.lang.Boolean.booleanValue()
1626 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate$1LdapCompareCallback.executeWithContext(javax.naming.directory.DirContext)
Métodos invocados: 
javax.naming.directory.SearchControls.setReturningAttributes([Ljava.lang.String;)
javax.naming.directory.SearchControls.setSearchScope(I)
javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, [Ljava.lang.Object;, javax.naming.directory.SearchControls)
javax.naming.NamingEnumeration.hasMore()
java.lang.Boolean.valueOf(Z)
org.springframework.security.ldap.LdapUtils.closeEnumeration(javax.naming.NamingEnumeration)
1627 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate.retrieveEntry(java.lang.String, [Ljava.lang.String;)
Métodos invocados: 
org.springframework.ldap.core.LdapTemplate.executeReadOnly(org.springframework.ldap.core.ContextExecutor)
javax.naming.directory.DirContext.getAttributes(java.lang.String, [Ljava.lang.String;)
javax.naming.Context.getNameInNamespace()
1628 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate$1.executeWithContext(javax.naming.directory.DirContext)
Métodos invocados: 
javax.naming.directory.DirContext.getAttributes(java.lang.String, [Ljava.lang.String;)
javax.naming.Context.getNameInNamespace()
1629 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate.searchForSingleAttributeValues(java.lang.String, java.lang.String, [Ljava.lang.Object;, java.lang.String)
Métodos invocados: 
java.lang.Object.toString()
org.springframework.ldap.core.LdapEncoder.filterEncode(java.lang.String)
java.text.MessageFormat.format(java.lang.String, [Ljava.lang.Object;)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.getStringAttributes(java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.AbstractCollection.addAll(java.util.Collection)
javax.naming.directory.SearchControls.getSearchScope()
javax.naming.directory.SearchControls.setSearchScope(I)
javax.naming.directory.SearchControls.setReturningAttributes([Ljava.lang.String;)
org.springframework.ldap.core.LdapTemplate.search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls, org.springframework.ldap.core.ContextMapper)
1630 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate$2.mapFromContext(java.lang.Object)
Métodos invocados: 
org.springframework.ldap.core.DirContextAdapter.getStringAttributes(java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.AbstractCollection.addAll(java.util.Collection)
1631 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate.searchForSingleEntry(java.lang.String, java.lang.String, [Ljava.lang.Object;)
Métodos invocados: 
org.springframework.ldap.core.LdapTemplate.executeReadOnly(org.springframework.ldap.core.ContextExecutor)
javax.naming.Context.getNameInNamespace()
javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, [Ljava.lang.Object;, javax.naming.directory.SearchControls)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.naming.NamingEnumeration.hasMore()
javax.naming.NamingEnumeration.next()
javax.naming.NameClassPair.getName()
java.lang.String.length()
org.springframework.ldap.core.DistinguishedName.prepend(org.springframework.ldap.core.DistinguishedName)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.naming.directory.SearchResult.getAttributes()
java.util.Set.add(org.springframework.ldap.core.DirContextOperations)
org.springframework.security.ldap.LdapUtils.closeEnumeration(javax.naming.NamingEnumeration)
org.apache.commons.logging.Log.info(java.lang.Object)
java.util.Set.size()
java.util.Set.size()
java.util.Set.size()
java.util.Set.toArray()
1632 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate$3.executeWithContext(javax.naming.directory.DirContext)
Métodos invocados: 
javax.naming.Context.getNameInNamespace()
javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, [Ljava.lang.Object;, javax.naming.directory.SearchControls)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.naming.NamingEnumeration.hasMore()
javax.naming.NamingEnumeration.next()
javax.naming.NameClassPair.getName()
java.lang.String.length()
org.springframework.ldap.core.DistinguishedName.prepend(org.springframework.ldap.core.DistinguishedName)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.naming.directory.SearchResult.getAttributes()
java.util.Set.add(org.springframework.ldap.core.DirContextOperations)
org.springframework.security.ldap.LdapUtils.closeEnumeration(javax.naming.NamingEnumeration)
org.apache.commons.logging.Log.info(java.lang.Object)
java.util.Set.size()
java.util.Set.size()
java.util.Set.size()
java.util.Set.toArray()
1633 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate.setSearchControls(javax.naming.directory.SearchControls)
1633 - Declaração do método: org.springframework.security.ldap.LdapUtils.LdapUtils()
1633 - Declaração do método: org.springframework.security.ldap.LdapUtils.closeContext(javax.naming.Context)
Métodos invocados: 
javax.naming.Context.close()
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
1634 - Declaração do método: org.springframework.security.ldap.LdapUtils.closeEnumeration(javax.naming.NamingEnumeration)
Métodos invocados: 
javax.naming.NamingEnumeration.close()
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
1635 - Declaração do método: org.springframework.security.ldap.LdapUtils.getRelativeName(java.lang.String, javax.naming.Context)
Métodos invocados: 
javax.naming.Context.getNameInNamespace()
java.lang.String.length()
org.springframework.ldap.core.DistinguishedName.equals(java.lang.Object)
org.springframework.ldap.core.DistinguishedName.startsWith(javax.naming.Name)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.ldap.core.DistinguishedName.removeFirst(javax.naming.Name)
org.springframework.ldap.core.DistinguishedName.toString()
1636 - Declaração do método: org.springframework.security.ldap.LdapUtils.getFullDn(org.springframework.ldap.core.DistinguishedName, javax.naming.Context)
Métodos invocados: 
javax.naming.Context.getNameInNamespace()
org.springframework.ldap.core.DistinguishedName.contains(org.springframework.ldap.core.DistinguishedName)
org.springframework.ldap.core.DistinguishedName.append(org.springframework.ldap.core.DistinguishedName)
1637 - Declaração do método: org.springframework.security.ldap.LdapUtils.getUtf8Bytes(java.lang.String)
Métodos invocados: 
java.lang.String.getBytes(java.lang.String)
1638 - Declaração do método: org.springframework.security.ldap.LdapUtils.getUtf8BytesAsString([B)
1638 - Declaração do método: org.springframework.security.ldap.LdapUtils.convertPasswordToString(java.lang.Object)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.ldap.LdapUtils.getUtf8BytesAsString([B)
1639 - Declaração do método: org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String)
java.lang.String.startsWith(java.lang.String)
java.lang.String.startsWith(java.lang.String)
org.springframework.security.ldap.LdapUtils.parseLdapUrl(java.lang.String)
java.net.URI.getRawPath()
java.lang.String.startsWith(java.lang.String)
java.lang.String.substring(I)
1640 - Declaração do método: org.springframework.security.ldap.LdapUtils.parseLdapUrl(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String)
java.lang.Throwable.initCause(java.lang.Throwable)
1641 - Declaração do método: org.springframework.security.ldap.LdapUsernameToDnMapper.buildDn(java.lang.String)
1641 - Declaração do método: org.springframework.security.ldap.DefaultSpringSecurityContextSource.DefaultSpringSecurityContextSource(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
java.util.StringTokenizer.hasMoreTokens()
java.util.StringTokenizer.nextToken()
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.substring(I, I)
java.util.ArrayList.add(java.lang.String)
org.apache.commons.logging.Log.info(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.util.ArrayList.size()
java.util.ArrayList.toArray([Ljava.lang.String;)
org.springframework.ldap.core.support.AbstractContextSource.setUrls([Ljava.lang.String;)
org.springframework.ldap.core.support.AbstractContextSource.setBase(java.lang.String)
org.springframework.ldap.core.support.AbstractContextSource.setPooled(Z)
org.springframework.ldap.core.support.AbstractContextSource.setAuthenticationStrategy(org.springframework.ldap.core.support.DirContextAuthenticationStrategy)
java.lang.String.equals(java.lang.Object)
java.util.Hashtable.containsKey(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Hashtable.remove(java.lang.Object)
1642 - Declaração do método: org.springframework.security.ldap.DefaultSpringSecurityContextSource$1.setupEnvironment(java.util.Hashtable, java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.util.Hashtable.containsKey(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Hashtable.remove(java.lang.Object)
1643 - Declaração do método: org.springframework.security.ldap.DefaultLdapUsernameToDnMapper.DefaultLdapUsernameToDnMapper(java.lang.String, java.lang.String)
1643 - Declaração do método: org.springframework.security.ldap.DefaultLdapUsernameToDnMapper.buildDn(java.lang.String)
Métodos invocados: 
org.springframework.ldap.core.DistinguishedName.add(java.lang.String, java.lang.String)
1644 - Declaração do método: org.springframework.security.ldap.authentication.UserDetailsServiceLdapAuthoritiesPopulator.UserDetailsServiceLdapAuthoritiesPopulator(org.springframework.security.core.userdetails.UserDetailsService)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1645 - Declaração do método: org.springframework.security.ldap.authentication.UserDetailsServiceLdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
1646 - Declaração do método: org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.AbstractLdapAuthenticator(org.springframework.ldap.core.ContextSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1647 - Declaração do método: org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.isTrue(Z, java.lang.String)
1648 - Declaração do método: org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.getContextSource()
1648 - Declaração do método: org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.getUserAttributes()
1648 - Declaração do método: org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.getUserDns(java.lang.String)
Métodos invocados: 
java.util.Collections.emptyList()
java.text.Format.format(java.lang.Object)
java.util.List.add(java.lang.String)
1649 - Declaração do método: org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.getUserSearch()
1649 - Declaração do método: org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setMessageSource(org.springframework.context.MessageSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
1650 - Declaração do método: org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setUserAttributes([Ljava.lang.String;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1651 - Declaração do método: org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setUserDnPatterns([Ljava.lang.String;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1652 - Declaração do método: org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setUserSearch(org.springframework.security.ldap.search.LdapUserSearch)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1653 - Declaração do método: org.springframework.security.ldap.authentication.NullLdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
1653 - Declaração do método: org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.PasswordComparisonAuthenticator(org.springframework.ldap.core.support.BaseLdapPathContextSource)
1653 - Declaração do método: org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.authenticate(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
java.security.Principal.getName()
org.springframework.security.core.Authentication.getCredentials()
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.getContextSource()
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.getUserDns(java.lang.String)
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.getUserAttributes()
org.springframework.security.ldap.SpringSecurityLdapTemplate.retrieveEntry(java.lang.String, [Ljava.lang.String;)
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.getUserSearch()
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.getUserSearch()
org.springframework.security.ldap.search.LdapUserSearch.searchForUser(java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.ldap.core.DirContextOperations.getDn()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.authentication.encoding.PasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.springframework.security.ldap.LdapUtils.getUtf8Bytes(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getDn()
java.lang.Object.toString()
org.springframework.security.ldap.SpringSecurityLdapTemplate.compare(java.lang.String, java.lang.String, java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
1654 - Declaração do método: org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.setPasswordAttributeName(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
1655 - Declaração do método: org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.setPasswordEncoder(org.springframework.security.authentication.encoding.PasswordEncoder)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1656 - Declaração do método: org.springframework.security.ldap.authentication.BindAuthenticator.BindAuthenticator(org.springframework.ldap.core.support.BaseLdapPathContextSource)
1656 - Declaração do método: org.springframework.security.ldap.authentication.BindAuthenticator.authenticate(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
java.security.Principal.getName()
org.springframework.security.core.Authentication.getCredentials()
org.springframework.util.StringUtils.hasLength(java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.getUserDns(java.lang.String)
org.springframework.security.ldap.authentication.BindAuthenticator.bindWithDn(java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.getUserSearch()
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.getUserSearch()
org.springframework.security.ldap.search.LdapUserSearch.searchForUser(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getDn()
java.lang.Object.toString()
org.springframework.security.ldap.authentication.BindAuthenticator.bindWithDn(java.lang.String, java.lang.String, java.lang.String)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
1657 - Declaração do método: org.springframework.security.ldap.authentication.BindAuthenticator.bindWithDn(java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.getContextSource()
org.springframework.ldap.core.support.BaseLdapPathSource.getBaseLdapPath()
org.springframework.ldap.core.DistinguishedName.prepend(org.springframework.ldap.core.DistinguishedName)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.getContextSource()
org.springframework.ldap.core.DistinguishedName.toString()
org.springframework.ldap.core.ContextSource.getContext(java.lang.String, java.lang.String)
org.springframework.security.ldap.ppolicy.PasswordPolicyControlExtractor.extractControl(javax.naming.directory.DirContext)
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.getUserAttributes()
javax.naming.directory.DirContext.getAttributes(javax.naming.Name, [Ljava.lang.String;)
org.springframework.ldap.core.support.BaseLdapPathSource.getBaseLdapPath()
org.springframework.security.ldap.ppolicy.PasswordPolicyControl.getID()
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.security.ldap.authentication.BindAuthenticator.handleBindException(java.lang.String, java.lang.String, java.lang.Throwable)
org.springframework.ldap.support.LdapUtils.convertLdapException(javax.naming.NamingException)
org.springframework.ldap.support.LdapUtils.closeContext(javax.naming.directory.DirContext)
1658 - Declaração do método: org.springframework.security.ldap.authentication.BindAuthenticator.handleBindException(java.lang.String, java.lang.String, java.lang.Throwable)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1659 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProvider.LdapAuthenticationProvider(org.springframework.security.ldap.authentication.LdapAuthenticator, org.springframework.security.ldap.userdetails.LdapAuthoritiesPopulator)
Métodos invocados: 
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.setAuthenticator(org.springframework.security.ldap.authentication.LdapAuthenticator)
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.setAuthoritiesPopulator(org.springframework.security.ldap.userdetails.LdapAuthoritiesPopulator)
1660 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProvider.LdapAuthenticationProvider(org.springframework.security.ldap.authentication.LdapAuthenticator)
Métodos invocados: 
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.setAuthenticator(org.springframework.security.ldap.authentication.LdapAuthenticator)
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.setAuthoritiesPopulator(org.springframework.security.ldap.userdetails.LdapAuthoritiesPopulator)
1661 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProvider.setAuthenticator(org.springframework.security.ldap.authentication.LdapAuthenticator)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1662 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProvider.getAuthenticator()
1662 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProvider.setAuthoritiesPopulator(org.springframework.security.ldap.userdetails.LdapAuthoritiesPopulator)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1663 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProvider.getAuthoritiesPopulator()
1663 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProvider.setUserDetailsContextMapper(org.springframework.security.ldap.userdetails.UserDetailsContextMapper)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1664 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProvider.getUserDetailsContextMapper()
1664 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProvider.setHideUserNotFoundExceptions(Z)
1664 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProvider.setUseAuthenticationRequestCredentials(Z)
1664 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProvider.setMessageSource(org.springframework.context.MessageSource)
1664 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.authentication.AbstractAuthenticationToken.getName()
org.springframework.security.core.Authentication.getCredentials()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.StringUtils.hasLength(java.lang.String)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.getAuthenticator()
org.springframework.security.ldap.authentication.LdapAuthenticator.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.loadUserAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String, java.lang.String)
org.springframework.security.ldap.userdetails.UserDetailsContextMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, java.util.Collection)
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.createSuccessfulAuthentication(org.springframework.security.authentication.UsernamePasswordAuthenticationToken, org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.ldap.ppolicy.PasswordPolicyException.getStatus()
org.springframework.security.ldap.ppolicy.PasswordPolicyErrorStatus.getErrorCode()
org.springframework.security.ldap.ppolicy.PasswordPolicyException.getStatus()
org.springframework.security.ldap.ppolicy.PasswordPolicyErrorStatus.getDefaultMessage()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.core.NestedRuntimeException.getMessage()
1665 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProvider.loadUserAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.getAuthoritiesPopulator()
org.springframework.security.ldap.userdetails.LdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
1666 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProvider.createSuccessfulAuthentication(org.springframework.security.authentication.UsernamePasswordAuthenticationToken, org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.authentication.UsernamePasswordAuthenticationToken.getCredentials()
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.authentication.AbstractAuthenticationToken.getDetails()
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
1667 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
1668 - Declaração do método: org.springframework.security.ldap.authentication.SpringSecurityAuthenticationSource.getPrincipal()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.warn(java.lang.Object)
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.ldap.userdetails.LdapUserDetails.getDn()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1669 - Declaração do método: org.springframework.security.ldap.authentication.SpringSecurityAuthenticationSource.getCredentials()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.warn(java.lang.Object)
org.springframework.security.core.Authentication.getCredentials()
1670 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticator.authenticate(org.springframework.security.core.Authentication)
1670 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyControl.PasswordPolicyControl()
1670 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyControl.PasswordPolicyControl(Z)
1670 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyControl.getEncodedValue()
1670 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyControl.getID()
1670 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyControl.isCritical()
1670 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyErrorStatus.PasswordPolicyErrorStatus(java.lang.String, java.lang.String)
1670 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyErrorStatus.getErrorCode()
1670 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyErrorStatus.getDefaultMessage()
1670 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyControlFactory.getControlInstance(javax.naming.ldap.Control)
Métodos invocados: 
javax.naming.ldap.Control.getID()
java.lang.String.equals(java.lang.Object)
javax.naming.ldap.Control.getEncodedValue()
1671 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyData.getTimeBeforeExpiration()
1671 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyData.getGraceLoginsRemaining()
1671 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyControlExtractor.extractControl(javax.naming.directory.DirContext)
Métodos invocados: 
javax.naming.ldap.LdapContext.getResponseControls()
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
1672 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyException.PasswordPolicyException(org.springframework.security.ldap.ppolicy.PasswordPolicyErrorStatus)
Métodos invocados: 
org.springframework.security.ldap.ppolicy.PasswordPolicyErrorStatus.getDefaultMessage()
1673 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyException.getStatus()
1673 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.PasswordPolicyResponseControl([B)
Métodos invocados: 
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl$PPolicyDecoder.decode()
1674 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.getEncodedValue()
1674 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.getErrorStatus()
1674 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.getGraceLoginsRemaining()
1674 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.getTimeBeforeExpiration()
1674 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasError()
1674 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasWarning()
1674 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.isExpired()
1674 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.isChangeAfterReset()
1674 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.isUsingGraceLogins()
1674 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.isLocked()
1674 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.toString()
Métodos invocados: 
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasError()
java.lang.StringBuilder.append(java.lang.String)
org.springframework.security.ldap.ppolicy.PasswordPolicyErrorStatus.getDefaultMessage()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(I)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(I)
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasError()
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasWarning()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
1675 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl$PPolicyDecoder.decode()
1675 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl$NetscapeDecoder.decode()
Métodos invocados: 
netscape.ldap.ber.stream.BERElement.getElement(netscape.ldap.ber.stream.BERTagDecoder, java.io.InputStream, [I)
netscape.ldap.ber.stream.BERConstruct.size()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
netscape.ldap.ber.stream.BERConstruct.size()
netscape.ldap.ber.stream.BERConstruct.elementAt(I)
netscape.ldap.ber.stream.BERTag.getTag()
netscape.ldap.ber.stream.BERTag.getValue()
netscape.ldap.ber.stream.BERChoice.getValue()
netscape.ldap.ber.stream.BERTag.getValue()
netscape.ldap.ber.stream.BERIntegral.getValue()
netscape.ldap.ber.stream.BERTag.getTag()
netscape.ldap.ber.stream.BERTag.getValue()
org.springframework.security.ldap.ppolicy.PasswordPolicyErrorStatus.values()
netscape.ldap.ber.stream.BERIntegral.getValue()
1676 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl$NetscapeDecoder$SpecificTagDecoder.getElement(netscape.ldap.ber.stream.BERTagDecoder, I, java.io.InputStream, [I, [Z)
Métodos invocados: 
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl$NetscapeDecoder$SpecificTagDecoder.setInChoice(Z)
netscape.ldap.ber.stream.BERElement.readLengthOctets(java.io.InputStream, [I)
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl$NetscapeDecoder$SpecificTagDecoder.setInChoice(Z)
java.lang.Boolean.booleanValue()
1677 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl$NetscapeDecoder$SpecificTagDecoder.setInChoice(Z)
1677 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyAwareContextSource.PasswordPolicyAwareContextSource(java.lang.String)
1677 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyAwareContextSource.getContext(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.naming.Context.addToEnvironment(java.lang.String, java.lang.Object)
javax.naming.Context.addToEnvironment(java.lang.String, java.lang.Object)
javax.naming.ldap.LdapContext.reconnect([Ljavax.naming.ldap.Control;)
org.springframework.security.ldap.ppolicy.PasswordPolicyControlExtractor.extractControl(javax.naming.directory.DirContext)
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.ldap.support.LdapUtils.closeContext(javax.naming.directory.DirContext)
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.isLocked()
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.getErrorStatus()
org.springframework.ldap.support.LdapUtils.convertLdapException(javax.naming.NamingException)
org.springframework.security.ldap.ppolicy.PasswordPolicyControlExtractor.extractControl(javax.naming.directory.DirContext)
org.apache.commons.logging.Log.debug(java.lang.Object)
1678 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyAwareContextSource.getAuthenticatedEnv(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.Class.getName()
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
1679 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearch.FilterBasedLdapUserSearch(java.lang.String, java.lang.String, org.springframework.ldap.core.support.BaseLdapPathContextSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.setSearchSubtree(Z)
java.lang.String.length()
org.springframework.ldap.core.support.BaseLdapPathSource.getBaseLdapPath()
org.apache.commons.logging.Log.info(java.lang.Object)
1680 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearch.searchForUser(java.lang.String)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ldap.SpringSecurityLdapTemplate.setSearchControls(javax.naming.directory.SearchControls)
org.springframework.security.ldap.SpringSecurityLdapTemplate.searchForSingleEntry(java.lang.String, java.lang.String, [Ljava.lang.Object;)
org.springframework.dao.IncorrectResultSizeDataAccessException.getActualSize()
1681 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearch.setDerefLinkFlag(Z)
Métodos invocados: 
javax.naming.directory.SearchControls.setDerefLinkFlag(Z)
1682 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearch.setSearchSubtree(Z)
Métodos invocados: 
javax.naming.directory.SearchControls.setSearchScope(I)
1683 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearch.setSearchTimeLimit(I)
Métodos invocados: 
javax.naming.directory.SearchControls.setTimeLimit(I)
1684 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearch.setReturningAttributes([Ljava.lang.String;)
Métodos invocados: 
javax.naming.directory.SearchControls.setReturningAttributes([Ljava.lang.String;)
1685 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearch.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
javax.naming.directory.SearchControls.getSearchScope()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
javax.naming.directory.SearchControls.getTimeLimit()
java.lang.StringBuilder.append(I)
java.lang.StringBuilder.append(java.lang.String)
javax.naming.directory.SearchControls.getDerefLinkFlag()
java.lang.StringBuilder.append(Z)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
1686 - Declaração do método: org.springframework.security.ldap.search.LdapUserSearch.searchForUser(java.lang.String)
1686 - Declaração do método: org.springframework.security.ldap.server.ApacheDSContainer.ApacheDSContainer(java.lang.String, java.lang.String)
Métodos invocados: 
java.util.List.add(org.apache.directory.server.core.interceptor.Interceptor)
java.util.List.add(org.apache.directory.server.core.interceptor.Interceptor)
java.util.List.add(org.apache.directory.server.core.interceptor.Interceptor)
java.util.List.add(org.apache.directory.server.core.interceptor.Interceptor)
java.util.List.add(org.apache.directory.server.core.interceptor.Interceptor)
java.util.List.add(org.apache.directory.server.core.interceptor.Interceptor)
org.apache.directory.server.core.DefaultDirectoryService.setInterceptors(java.util.List)
org.apache.directory.server.core.partition.impl.btree.BTreePartition.setId(java.lang.String)
org.apache.directory.server.core.partition.impl.btree.BTreePartition.setSuffix(java.lang.String)
org.apache.directory.server.core.DefaultDirectoryService.addPartition(org.apache.directory.server.core.partition.Partition)
org.apache.directory.server.core.DefaultDirectoryService.setExitVmOnShutdown(Z)
org.apache.directory.server.core.DefaultDirectoryService.setShutdownHookEnabled(Z)
org.apache.directory.server.core.DefaultDirectoryService.getChangeLog()
org.apache.directory.server.core.changelog.ChangeLog.setEnabled(Z)
org.apache.directory.server.core.DefaultDirectoryService.setDenormalizeOpAttrsEnabled(Z)
1687 - Declaração do método: org.springframework.security.ldap.server.ApacheDSContainer.afterPropertiesSet()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
java.lang.System.getProperty(java.lang.String)
org.springframework.security.ldap.server.ApacheDSContainer.setWorkingDirectory(java.io.File)
org.apache.directory.server.ldap.LdapServer.setDirectoryService(org.apache.directory.server.core.DirectoryService)
org.apache.directory.server.protocol.shared.AbstractProtocolService.setTransports([Lorg.apache.directory.server.protocol.shared.transport.Transport;)
org.springframework.security.ldap.server.ApacheDSContainer.start()
1688 - Declaração do método: org.springframework.security.ldap.server.ApacheDSContainer.destroy()
Métodos invocados: 
org.springframework.security.ldap.server.ApacheDSContainer.stop()
1689 - Declaração do método: org.springframework.security.ldap.server.ApacheDSContainer.setApplicationContext(org.springframework.context.ApplicationContext)
1689 - Declaração do método: org.springframework.security.ldap.server.ApacheDSContainer.setWorkingDirectory(java.io.File)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
java.io.File.getAbsolutePath()
org.apache.commons.logging.Log.info(java.lang.Object)
java.io.File.exists()
java.io.File.getAbsolutePath()
org.apache.directory.server.core.DefaultDirectoryService.setWorkingDirectory(java.io.File)
1690 - Declaração do método: org.springframework.security.ldap.server.ApacheDSContainer.setPort(I)
1690 - Declaração do método: org.springframework.security.ldap.server.ApacheDSContainer.getService()
1690 - Declaração do método: org.springframework.security.ldap.server.ApacheDSContainer.start()
Métodos invocados: 
org.springframework.security.ldap.server.ApacheDSContainer.isRunning()
org.apache.directory.server.core.DefaultDirectoryService.isStarted()
org.apache.commons.logging.Log.info(java.lang.Object)
org.apache.directory.server.core.DefaultDirectoryService.startup()
org.apache.directory.server.ldap.LdapServer.start()
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
org.apache.directory.server.core.DefaultDirectoryService.getAdminSession()
org.apache.directory.server.core.partition.impl.btree.jdbm.JdbmPartition.getSuffixDn()
org.apache.directory.server.core.CoreSession.lookup(org.apache.directory.shared.ldap.name.LdapDN)
java.lang.String.startsWith(java.lang.String)
org.springframework.util.Assert.isTrue(Z)
java.lang.String.indexOf(I)
java.lang.String.substring(I, I)
org.apache.directory.server.core.DefaultDirectoryService.newEntry(org.apache.directory.shared.ldap.name.LdapDN)
org.apache.directory.shared.ldap.entry.Entry.add(java.lang.String, [Ljava.lang.String;)
org.apache.directory.shared.ldap.entry.Entry.add(java.lang.String, [Ljava.lang.String;)
org.apache.directory.server.core.DefaultDirectoryService.getAdminSession()
org.apache.directory.server.core.CoreSession.add(org.apache.directory.server.core.entry.ServerEntry)
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
org.springframework.security.ldap.server.ApacheDSContainer.importLdifs()
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
1691 - Declaração do método: org.springframework.security.ldap.server.ApacheDSContainer.stop()
Métodos invocados: 
org.springframework.security.ldap.server.ApacheDSContainer.isRunning()
org.apache.commons.logging.Log.info(java.lang.Object)
org.apache.directory.server.ldap.LdapServer.stop()
org.apache.directory.server.core.DefaultDirectoryService.shutdown()
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
java.io.File.exists()
java.io.File.getAbsolutePath()
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.security.ldap.server.ApacheDSContainer.deleteDir(java.io.File)
1692 - Declaração do método: org.springframework.security.ldap.server.ApacheDSContainer.importLdifs()
Métodos invocados: 
org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResources(java.lang.String)
org.springframework.core.io.support.ResourcePatternResolver.getResources(java.lang.String)
org.springframework.core.io.Resource.getFile()
java.io.File.getAbsolutePath()
org.apache.commons.logging.Log.info(java.lang.Object)
org.apache.directory.server.core.DefaultDirectoryService.getAdminSession()
org.apache.directory.server.protocol.shared.store.LdifFileLoader.execute()
1693 - Declaração do método: org.springframework.security.ldap.server.ApacheDSContainer.deleteDir(java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
java.io.File.list()
org.springframework.security.ldap.server.ApacheDSContainer.deleteDir(java.io.File)
java.io.File.delete()
1694 - Declaração do método: org.springframework.security.ldap.server.ApacheDSContainer.isRunning()
1694 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPersonContextMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, java.util.Collection)
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setUsername(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setAuthorities(java.util.Collection)
org.springframework.security.ldap.userdetails.Person$Essence.createUserDetails()
1695 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPersonContextMapper.mapUserToContext(org.springframework.security.core.userdetails.UserDetails, org.springframework.ldap.core.DirContextAdapter)
Métodos invocados: 
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson.populateContext(org.springframework.ldap.core.DirContextAdapter)
1696 - Declaração do método: org.springframework.security.ldap.userdetails.Person.Person()
1696 - Declaração do método: org.springframework.security.ldap.userdetails.Person.getSn()
1696 - Declaração do método: org.springframework.security.ldap.userdetails.Person.getCn()
Métodos invocados: 
java.util.List.size()
java.util.List.toArray([Ljava.lang.String;)
1697 - Declaração do método: org.springframework.security.ldap.userdetails.Person.getDescription()
1697 - Declaração do método: org.springframework.security.ldap.userdetails.Person.getTelephoneNumber()
1697 - Declaração do método: org.springframework.security.ldap.userdetails.Person.populateContext(org.springframework.ldap.core.DirContextAdapter)
Métodos invocados: 
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.security.ldap.userdetails.Person.getCn()
org.springframework.ldap.core.DirContextAdapter.setAttributeValues(java.lang.String, [Ljava.lang.Object;)
org.springframework.security.ldap.userdetails.Person.getDescription()
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.security.ldap.userdetails.Person.getTelephoneNumber()
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getPassword()
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getPassword()
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValues(java.lang.String, [Ljava.lang.Object;)
1698 - Declaração do método: org.springframework.security.ldap.userdetails.Person$Essence.Essence()
1698 - Declaração do método: org.springframework.security.ldap.userdetails.Person$Essence.Essence(org.springframework.ldap.core.DirContextOperations)
Métodos invocados: 
org.springframework.ldap.core.DirContextOperations.getStringAttributes(java.lang.String)
org.springframework.security.ldap.userdetails.Person$Essence.setCn([Ljava.lang.String;)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.Person$Essence.setSn(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.Person$Essence.setDescription(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.Person$Essence.setTelephoneNumber(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getObjectAttribute(java.lang.String)
org.springframework.security.ldap.LdapUtils.convertPasswordToString(java.lang.Object)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setPassword(java.lang.String)
1699 - Declaração do método: org.springframework.security.ldap.userdetails.Person$Essence.Essence(org.springframework.security.ldap.userdetails.Person)
Métodos invocados: 
org.springframework.security.ldap.userdetails.Person$Essence.setSn(java.lang.String)
org.springframework.security.ldap.userdetails.Person.getDescription()
org.springframework.security.ldap.userdetails.Person$Essence.setDescription(java.lang.String)
org.springframework.security.ldap.userdetails.Person.getTelephoneNumber()
org.springframework.security.ldap.userdetails.Person$Essence.setTelephoneNumber(java.lang.String)
1700 - Declaração do método: org.springframework.security.ldap.userdetails.Person$Essence.createTarget()
1700 - Declaração do método: org.springframework.security.ldap.userdetails.Person$Essence.setSn(java.lang.String)
1700 - Declaração do método: org.springframework.security.ldap.userdetails.Person$Essence.setCn([Ljava.lang.String;)
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.String;)
1701 - Declaração do método: org.springframework.security.ldap.userdetails.Person$Essence.addCn(java.lang.String)
Métodos invocados: 
java.util.List.add(java.lang.String)
1702 - Declaração do método: org.springframework.security.ldap.userdetails.Person$Essence.setTelephoneNumber(java.lang.String)
1702 - Declaração do método: org.springframework.security.ldap.userdetails.Person$Essence.setDescription(java.lang.String)
1702 - Declaração do método: org.springframework.security.ldap.userdetails.Person$Essence.createUserDetails()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object)
org.springframework.util.Assert.notEmpty(java.util.Collection)
1703 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson.getUid()
1703 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson.getMail()
1703 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson.getEmployeeNumber()
1703 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson.getInitials()
1703 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson.getDestinationIndicator()
1703 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson.getO()
1703 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson.getOu()
1703 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson.getTitle()
1703 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson.getCarLicense()
1703 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson.getDepartmentNumber()
1703 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson.getDisplayName()
1703 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson.getHomePhone()
1703 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson.getRoomNumber()
1703 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson.getHomePostalAddress()
1703 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson.getMobile()
1703 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson.getPostalAddress()
1703 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson.getPostalCode()
1703 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson.getStreet()
1703 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson.populateContext(org.springframework.ldap.core.DirContextAdapter)
Métodos invocados: 
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValues(java.lang.String, [Ljava.lang.Object;)
1704 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.Essence()
1704 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.Essence(org.springframework.security.ldap.userdetails.InetOrgPerson)
Métodos invocados: 
org.springframework.security.ldap.userdetails.InetOrgPerson.getCarLicense()
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setCarLicense(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson.getDepartmentNumber()
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setDepartmentNumber(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson.getDestinationIndicator()
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setDestinationIndicator(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson.getDisplayName()
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setDisplayName(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson.getEmployeeNumber()
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setEmployeeNumber(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson.getHomePhone()
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setHomePhone(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson.getHomePostalAddress()
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setHomePostalAddress(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson.getInitials()
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setInitials(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson.getMail()
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setMail(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson.getMobile()
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setMobile(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson.getO()
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setO(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson.getOu()
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setOu(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson.getPostalAddress()
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setPostalAddress(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson.getPostalCode()
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setPostalCode(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson.getRoomNumber()
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setRoomNumber(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson.getStreet()
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setStreet(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson.getTitle()
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setTitle(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson.getUid()
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setUid(java.lang.String)
1705 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.Essence(org.springframework.ldap.core.DirContextOperations)
Métodos invocados: 
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setCarLicense(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setDepartmentNumber(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setDestinationIndicator(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setDisplayName(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setEmployeeNumber(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setHomePhone(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setHomePostalAddress(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setInitials(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setMail(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setMobile(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setO(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setOu(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setPostalAddress(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setPostalCode(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setRoomNumber(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setStreet(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setTitle(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setUid(java.lang.String)
1706 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.createTarget()
1706 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setMail(java.lang.String)
1706 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setUid(java.lang.String)
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getUsername()
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setUsername(java.lang.String)
1707 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setInitials(java.lang.String)
1707 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setO(java.lang.String)
1707 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setOu(java.lang.String)
1707 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setRoomNumber(java.lang.String)
1707 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setTitle(java.lang.String)
1707 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setCarLicense(java.lang.String)
1707 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setDepartmentNumber(java.lang.String)
1707 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setDisplayName(java.lang.String)
1707 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setEmployeeNumber(java.lang.String)
1707 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setDestinationIndicator(java.lang.String)
1707 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setHomePhone(java.lang.String)
1707 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setStreet(java.lang.String)
1707 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setPostalCode(java.lang.String)
1707 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setPostalAddress(java.lang.String)
1707 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setMobile(java.lang.String)
1707 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setHomePostalAddress(java.lang.String)
1707 - Declaração do método: org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.DefaultLdapAuthoritiesPopulator(org.springframework.ldap.core.ContextSource, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.ldap.SpringSecurityLdapTemplate.setSearchControls(javax.naming.directory.SearchControls)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setGroupSearchBase(java.lang.String)
1708 - Declaração do método: org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.getAdditionalRoles(org.springframework.ldap.core.DirContextOperations, java.lang.String)
1708 - Declaração do método: org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
Métodos invocados: 
org.springframework.ldap.core.DirContextOperations.getNameInNamespace()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.getGroupMembershipRoles(java.lang.String, java.lang.String)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.getAdditionalRoles(org.springframework.ldap.core.DirContextOperations, java.lang.String)
java.util.Set.addAll(java.util.Collection)
java.util.Set.add(org.springframework.security.core.GrantedAuthority)
java.util.Set.size()
java.util.List.addAll(java.util.Collection)
1709 - Declaração do método: org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.getGroupMembershipRoles(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.getGroupSearchBase()
java.util.Collections.emptySet()
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.getGroupSearchBase()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.getGroupSearchBase()
org.springframework.security.ldap.SpringSecurityLdapTemplate.searchForSingleAttributeValues(java.lang.String, java.lang.String, [Ljava.lang.Object;, java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.String.toUpperCase()
java.util.Set.add(org.springframework.security.core.GrantedAuthority)
1710 - Declaração do método: org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.getContextSource()
Métodos invocados: 
org.springframework.ldap.core.LdapTemplate.getContextSource()
1711 - Declaração do método: org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setGroupSearchBase(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.String.length()
org.apache.commons.logging.Log.info(java.lang.Object)
1712 - Declaração do método: org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.getGroupSearchBase()
1712 - Declaração do método: org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setConvertToUpperCase(Z)
1712 - Declaração do método: org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setDefaultRole(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1713 - Declaração do método: org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setGroupRoleAttribute(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1714 - Declaração do método: org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setGroupSearchFilter(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1715 - Declaração do método: org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setRolePrefix(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1716 - Declaração do método: org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setSearchSubtree(Z)
Métodos invocados: 
javax.naming.directory.SearchControls.setSearchScope(I)
1717 - Declaração do método: org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setIgnorePartialResultException(Z)
Métodos invocados: 
org.springframework.ldap.core.LdapTemplate.setIgnorePartialResultException(Z)
1718 - Declaração do método: org.springframework.security.ldap.userdetails.LdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
1718 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, java.util.Collection)
Métodos invocados: 
org.springframework.ldap.core.DirContextOperations.getNameInNamespace()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setDn(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getObjectAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.mapPassword(java.lang.Object)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setPassword(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setUsername(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttributes(java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.createAuthority(java.lang.Object)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.addAuthority(org.springframework.security.core.GrantedAuthority)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.addAuthority(org.springframework.security.core.GrantedAuthority)
org.springframework.ldap.core.DirContextOperations.getObjectAttribute(java.lang.String)
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.getTimeBeforeExpiration()
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setTimeBeforeExpiration(I)
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.getGraceLoginsRemaining()
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setGraceLoginsRemaining(I)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.createUserDetails()
1719 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.mapUserToContext(org.springframework.security.core.userdetails.UserDetails, org.springframework.ldap.core.DirContextAdapter)
1719 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.mapPassword(java.lang.Object)
1719 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.createAuthority(java.lang.Object)
Métodos invocados: 
java.lang.String.toUpperCase()
1720 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.setConvertToUpperCase(Z)
1720 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.setPasswordAttributeName(java.lang.String)
1720 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.setRoleAttributes([Ljava.lang.String;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1721 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.setRolePrefix(java.lang.String)
1721 - Declaração do método: org.springframework.security.ldap.userdetails.PersonContextMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, java.util.Collection)
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setUsername(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setAuthorities(java.util.Collection)
org.springframework.security.ldap.userdetails.Person$Essence.createUserDetails()
1722 - Declaração do método: org.springframework.security.ldap.userdetails.PersonContextMapper.mapUserToContext(org.springframework.security.core.userdetails.UserDetails, org.springframework.ldap.core.DirContextAdapter)
Métodos invocados: 
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.ldap.userdetails.Person.populateContext(org.springframework.ldap.core.DirContextAdapter)
1723 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager$1.mapFromAttributes(javax.naming.directory.Attributes)
Métodos invocados: 
javax.naming.directory.Attributes.get(java.lang.String)
javax.naming.directory.Attribute.getAll()
javax.naming.NamingEnumeration.next()
java.lang.Object.toString()
java.lang.String.toUpperCase()
1724 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.LdapUserDetailsManager(org.springframework.ldap.core.ContextSource)
1724 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.loadUserByUsername(java.lang.String)
Métodos invocados: 
org.springframework.security.ldap.LdapUsernameToDnMapper.buildDn(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.getUserAuthorities(org.springframework.ldap.core.DistinguishedName, java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.loadUserAsContext(org.springframework.ldap.core.DistinguishedName, java.lang.String)
org.springframework.security.ldap.userdetails.UserDetailsContextMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, java.util.Collection)
1725 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.loadUserAsContext(org.springframework.ldap.core.DistinguishedName, java.lang.String)
Métodos invocados: 
org.springframework.ldap.core.LdapTemplate.executeReadOnly(org.springframework.ldap.core.ContextExecutor)
javax.naming.directory.DirContext.getAttributes(javax.naming.Name, [Ljava.lang.String;)
org.springframework.security.ldap.LdapUtils.getFullDn(org.springframework.ldap.core.DistinguishedName, javax.naming.Context)
1726 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager$2.executeWithContext(javax.naming.directory.DirContext)
Métodos invocados: 
javax.naming.directory.DirContext.getAttributes(javax.naming.Name, [Ljava.lang.String;)
org.springframework.security.ldap.LdapUtils.getFullDn(org.springframework.ldap.core.DistinguishedName, javax.naming.Context)
1727 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.changePassword(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.security.Principal.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ldap.LdapUsernameToDnMapper.buildDn(java.lang.String)
org.springframework.ldap.core.LdapTemplate.modifyAttributes(javax.naming.Name, [Ljavax.naming.directory.ModificationItem;)
org.springframework.ldap.core.LdapTemplate.executeReadWrite(org.springframework.ldap.core.ContextExecutor)
javax.naming.Context.removeFromEnvironment(java.lang.String)
org.springframework.security.ldap.LdapUtils.getFullDn(org.springframework.ldap.core.DistinguishedName, javax.naming.Context)
org.springframework.ldap.core.DistinguishedName.toString()
javax.naming.Context.addToEnvironment(java.lang.String, java.lang.Object)
javax.naming.Context.addToEnvironment(java.lang.String, java.lang.Object)
javax.naming.ldap.LdapContext.reconnect([Ljavax.naming.ldap.Control;)
javax.naming.directory.DirContext.modifyAttributes(javax.naming.Name, [Ljavax.naming.directory.ModificationItem;)
1728 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager$3.executeWithContext(javax.naming.directory.DirContext)
Métodos invocados: 
javax.naming.Context.removeFromEnvironment(java.lang.String)
org.springframework.security.ldap.LdapUtils.getFullDn(org.springframework.ldap.core.DistinguishedName, javax.naming.Context)
org.springframework.ldap.core.DistinguishedName.toString()
javax.naming.Context.addToEnvironment(java.lang.String, java.lang.Object)
javax.naming.Context.addToEnvironment(java.lang.String, java.lang.Object)
javax.naming.ldap.LdapContext.reconnect([Ljavax.naming.ldap.Control;)
javax.naming.directory.DirContext.modifyAttributes(javax.naming.Name, [Ljavax.naming.directory.ModificationItem;)
1729 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.getUserAuthorities(org.springframework.ldap.core.DistinguishedName, java.lang.String)
Métodos invocados: 
org.springframework.security.ldap.LdapUtils.getFullDn(org.springframework.ldap.core.DistinguishedName, javax.naming.Context)
javax.naming.directory.SearchControls.setReturningAttributes([Ljava.lang.String;)
org.springframework.ldap.core.DistinguishedName.toUrl()
javax.naming.directory.DirContext.search(javax.naming.Name, java.lang.String, [Ljava.lang.Object;, javax.naming.directory.SearchControls)
org.springframework.ldap.core.LdapTemplate.search(org.springframework.ldap.core.SearchExecutor, org.springframework.ldap.core.NameClassPairCallbackHandler)
org.springframework.ldap.core.CollectingNameClassPairCallbackHandler.getList()
1730 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager$4.executeSearch(javax.naming.directory.DirContext)
Métodos invocados: 
org.springframework.security.ldap.LdapUtils.getFullDn(org.springframework.ldap.core.DistinguishedName, javax.naming.Context)
javax.naming.directory.SearchControls.setReturningAttributes([Ljava.lang.String;)
org.springframework.ldap.core.DistinguishedName.toUrl()
javax.naming.directory.DirContext.search(javax.naming.Name, java.lang.String, [Ljava.lang.Object;, javax.naming.directory.SearchControls)
1731 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.createUser(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.copyToContext(org.springframework.security.core.userdetails.UserDetails, org.springframework.ldap.core.DirContextAdapter)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.ldap.LdapUsernameToDnMapper.buildDn(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.ldap.core.LdapTemplate.bind(javax.naming.Name, java.lang.Object, javax.naming.directory.Attributes)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.getUserAuthorities(org.springframework.ldap.core.DistinguishedName, java.lang.String)
java.util.List.size()
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.removeAuthorities(org.springframework.ldap.core.DistinguishedName, java.util.List)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.addAuthorities(org.springframework.ldap.core.DistinguishedName, java.util.Collection)
1732 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.updateUser(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.ldap.LdapUsernameToDnMapper.buildDn(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.getUserAuthorities(org.springframework.ldap.core.DistinguishedName, java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.loadUserAsContext(org.springframework.ldap.core.DistinguishedName, java.lang.String)
org.springframework.ldap.core.DirContextAdapter.setUpdateMode(Z)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.copyToContext(org.springframework.security.core.userdetails.UserDetails, org.springframework.ldap.core.DirContextAdapter)
org.springframework.ldap.core.DirContextAdapter.getModificationItems()
java.util.Arrays.asList([Ljavax.naming.directory.ModificationItem;)
java.util.List.listIterator()
java.util.ListIterator.hasNext()
java.util.ListIterator.next()
javax.naming.directory.ModificationItem.getAttribute()
javax.naming.directory.Attribute.getID()
java.lang.String.equalsIgnoreCase(java.lang.String)
java.util.ListIterator.remove()
java.util.List.size()
java.util.List.toArray([Ljavax.naming.directory.ModificationItem;)
org.springframework.ldap.core.LdapTemplate.modifyAttributes(javax.naming.Name, [Ljavax.naming.directory.ModificationItem;)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.removeAuthorities(org.springframework.ldap.core.DistinguishedName, java.util.List)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.addAuthorities(org.springframework.ldap.core.DistinguishedName, java.util.Collection)
1733 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.deleteUser(java.lang.String)
Métodos invocados: 
org.springframework.security.ldap.LdapUsernameToDnMapper.buildDn(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.getUserAuthorities(org.springframework.ldap.core.DistinguishedName, java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.removeAuthorities(org.springframework.ldap.core.DistinguishedName, java.util.List)
org.springframework.ldap.core.LdapTemplate.unbind(javax.naming.Name)
1734 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.userExists(java.lang.String)
Métodos invocados: 
org.springframework.security.ldap.LdapUsernameToDnMapper.buildDn(java.lang.String)
org.springframework.ldap.core.LdapTemplate.lookup(javax.naming.Name)
org.springframework.security.ldap.LdapUtils.closeContext(javax.naming.Context)
1735 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.buildGroupDn(java.lang.String)
Métodos invocados: 
java.lang.String.toLowerCase()
org.springframework.ldap.core.DistinguishedName.add(java.lang.String, java.lang.String)
1736 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.copyToContext(org.springframework.security.core.userdetails.UserDetails, org.springframework.ldap.core.DirContextAdapter)
Métodos invocados: 
org.springframework.security.ldap.userdetails.UserDetailsContextMapper.mapUserToContext(org.springframework.security.core.userdetails.UserDetails, org.springframework.ldap.core.DirContextAdapter)
1737 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.addAuthorities(org.springframework.ldap.core.DistinguishedName, java.util.Collection)
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.modifyAuthorities(org.springframework.ldap.core.DistinguishedName, java.util.Collection, I)
1738 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.removeAuthorities(org.springframework.ldap.core.DistinguishedName, java.util.List)
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.modifyAuthorities(org.springframework.ldap.core.DistinguishedName, java.util.Collection, I)
1739 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.modifyAuthorities(org.springframework.ldap.core.DistinguishedName, java.util.Collection, I)
Métodos invocados: 
org.springframework.ldap.core.LdapTemplate.executeReadWrite(org.springframework.ldap.core.ContextExecutor)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.convertAuthorityToGroup(org.springframework.security.core.GrantedAuthority)
org.springframework.security.ldap.LdapUtils.getFullDn(org.springframework.ldap.core.DistinguishedName, javax.naming.Context)
org.springframework.ldap.core.DistinguishedName.toUrl()
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.buildGroupDn(java.lang.String)
javax.naming.directory.DirContext.modifyAttributes(javax.naming.Name, [Ljavax.naming.directory.ModificationItem;)
1740 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager$5.executeWithContext(javax.naming.directory.DirContext)
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.convertAuthorityToGroup(org.springframework.security.core.GrantedAuthority)
org.springframework.security.ldap.LdapUtils.getFullDn(org.springframework.ldap.core.DistinguishedName, javax.naming.Context)
org.springframework.ldap.core.DistinguishedName.toUrl()
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.buildGroupDn(java.lang.String)
javax.naming.directory.DirContext.modifyAttributes(javax.naming.Name, [Ljavax.naming.directory.ModificationItem;)
1741 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.convertAuthorityToGroup(org.springframework.security.core.GrantedAuthority)
Métodos invocados: 
org.springframework.security.core.GrantedAuthority.getAuthority()
java.lang.String.startsWith(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I)
1742 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.setUsernameMapper(org.springframework.security.ldap.LdapUsernameToDnMapper)
1742 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.setPasswordAttributeName(java.lang.String)
1742 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.setGroupSearchBase(java.lang.String)
1742 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.setGroupRoleAttributeName(java.lang.String)
1742 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.setAttributesToRetrieve([Ljava.lang.String;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
1743 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.setUserDetailsMapper(org.springframework.security.ldap.userdetails.UserDetailsContextMapper)
1743 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.setGroupMemberAttributeName(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
1744 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManager.setRoleMapper(org.springframework.ldap.core.AttributesMapper)
1744 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetails.getDn()
1744 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.LdapUserDetailsImpl()
1744 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getAuthorities()
1744 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getDn()
1744 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getPassword()
1744 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getUsername()
1744 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.isAccountNonExpired()
1744 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.isAccountNonLocked()
1744 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.isCredentialsNonExpired()
1744 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.isEnabled()
1744 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getTimeBeforeExpiration()
1744 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getGraceLoginsRemaining()
1744 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.equals(java.lang.Object)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
1745 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.hashCode()
Métodos invocados: 
java.lang.String.hashCode()
1746 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(Z)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(Z)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(Z)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(Z)
java.lang.StringBuilder.append(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getAuthorities()
java.lang.StringBuilder.append(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getAuthorities()
java.lang.StringBuilder.append(java.lang.String)
java.lang.Object.toString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
1747 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.Essence()
1747 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.Essence(org.springframework.ldap.core.DirContextOperations)
Métodos invocados: 
org.springframework.ldap.core.DirContextOperations.getDn()
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setDn(javax.naming.Name)
1748 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.Essence(org.springframework.security.ldap.userdetails.LdapUserDetails)
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetails.getDn()
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setDn(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setPassword(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.isEnabled()
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setEnabled(Z)
org.springframework.security.core.userdetails.UserDetails.isAccountNonExpired()
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setAccountNonExpired(Z)
org.springframework.security.core.userdetails.UserDetails.isCredentialsNonExpired()
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setCredentialsNonExpired(Z)
org.springframework.security.core.userdetails.UserDetails.isAccountNonLocked()
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setAccountNonLocked(Z)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setAuthorities(java.util.Collection)
1749 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.createTarget()
1749 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.addAuthority(org.springframework.security.core.GrantedAuthority)
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.hasAuthority(org.springframework.security.core.GrantedAuthority)
java.util.List.add(org.springframework.security.core.GrantedAuthority)
1750 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.hasAuthority(org.springframework.security.core.GrantedAuthority)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
1751 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.createUserDetails()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getDn()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.Collections.unmodifiableList(java.util.List)
1752 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.getGrantedAuthorities()
1752 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setAccountNonExpired(Z)
1752 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setAccountNonLocked(Z)
1752 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setAuthorities(java.util.Collection)
Métodos invocados: 
java.util.List.addAll(java.util.Collection)
1753 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setCredentialsNonExpired(Z)
1753 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setDn(java.lang.String)
1753 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setDn(javax.naming.Name)
Métodos invocados: 
java.lang.Object.toString()
1754 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setEnabled(Z)
1754 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setPassword(java.lang.String)
1754 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setUsername(java.lang.String)
1754 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setTimeBeforeExpiration(I)
1754 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setGraceLoginsRemaining(I)
1754 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsService.LdapUserDetailsService(org.springframework.security.ldap.search.LdapUserSearch)
1754 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsService.LdapUserDetailsService(org.springframework.security.ldap.search.LdapUserSearch, org.springframework.security.ldap.userdetails.LdapAuthoritiesPopulator)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1755 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsService.loadUserByUsername(java.lang.String)
Métodos invocados: 
org.springframework.security.ldap.search.LdapUserSearch.searchForUser(java.lang.String)
org.springframework.security.ldap.userdetails.LdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
org.springframework.security.ldap.userdetails.UserDetailsContextMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, java.util.Collection)
1756 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsService.setUserDetailsMapper(org.springframework.security.ldap.userdetails.UserDetailsContextMapper)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1757 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsService$NullLdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
1757 - Declaração do método: org.springframework.security.ldap.userdetails.UserDetailsContextMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, java.util.Collection)
1757 - Declaração do método: org.springframework.security.ldap.userdetails.UserDetailsContextMapper.mapUserToContext(org.springframework.security.core.userdetails.UserDetails, org.springframework.ldap.core.DirContextAdapter)
1757 - Declaração do método: sample.aspectj.SecuredService.secureMethod()
1757 - Declaração do método: sample.aspectj.Service.secureMethod()
1757 - Declaração do método: sample.aspectj.Service.publicMethod()
1757 - Declaração do método: samples.gae.security.GoogleAccountsAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
com.google.appengine.api.users.UserServiceFactory.getUserService()
javax.servlet.http.HttpServletRequest.getRequestURI()
com.google.appengine.api.users.UserService.createLoginURL(java.lang.String)
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
1758 - Declaração do método: samples.gae.security.AppRole.AppRole(I)
1758 - Declaração do método: samples.gae.security.AppRole.getBit()
1758 - Declaração do método: samples.gae.security.AppRole.getAuthority()
Métodos invocados: 
java.lang.Enum.toString()
1759 - Declaração do método: samples.gae.security.GaeUserAuthentication.GaeUserAuthentication(samples.gae.users.GaeUser, java.lang.Object)
1759 - Declaração do método: samples.gae.security.GaeUserAuthentication.getAuthorities()
Métodos invocados: 
samples.gae.users.GaeUser.getAuthorities()
1760 - Declaração do método: samples.gae.security.GaeUserAuthentication.getCredentials()
1760 - Declaração do método: samples.gae.security.GaeUserAuthentication.getDetails()
1760 - Declaração do método: samples.gae.security.GaeUserAuthentication.getPrincipal()
1760 - Declaração do método: samples.gae.security.GaeUserAuthentication.isAuthenticated()
1760 - Declaração do método: samples.gae.security.GaeUserAuthentication.setAuthenticated(Z)
1760 - Declaração do método: samples.gae.security.GaeUserAuthentication.getName()
Métodos invocados: 
samples.gae.users.GaeUser.getUserId()
1761 - Declaração do método: samples.gae.security.GaeUserAuthentication.toString()
1761 - Declaração do método: samples.gae.security.GaeAuthenticationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
com.google.appengine.api.users.UserServiceFactory.getUserService()
com.google.appengine.api.users.UserService.getCurrentUser()
org.slf4j.Logger.debug(java.lang.String)
org.slf4j.Logger.debug(java.lang.String)
org.springframework.security.authentication.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.web.authentication.AuthenticationFailureHandler.onAuthenticationFailure(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.security.core.Authentication.getAuthorities()
java.util.Collection.contains(java.lang.Object)
javax.servlet.http.HttpServletRequest.getRequestURI()
java.lang.String.endsWith(java.lang.String)
org.slf4j.Logger.debug(java.lang.String)
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1762 - Declaração do método: samples.gae.security.GaeAuthenticationFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1763 - Declaração do método: samples.gae.security.GaeAuthenticationFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
1763 - Declaração do método: samples.gae.security.GaeAuthenticationFilter.setFailureHandler(org.springframework.security.web.authentication.AuthenticationFailureHandler)
1763 - Declaração do método: samples.gae.security.GoogleAccountsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.core.Authentication.getPrincipal()
com.google.appengine.api.users.User.getUserId()
samples.gae.users.UserRegistry.findUser(java.lang.String)
com.google.appengine.api.users.User.getUserId()
com.google.appengine.api.users.User.getNickname()
com.google.appengine.api.users.User.getEmail()
samples.gae.users.GaeUser.isEnabled()
org.springframework.security.core.Authentication.getDetails()
1764 - Declaração do método: samples.gae.security.GoogleAccountsAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
1765 - Declaração do método: samples.gae.security.GoogleAccountsAuthenticationProvider.setUserRegistry(samples.gae.users.UserRegistry)
1765 - Declaração do método: samples.gae.security.GoogleAccountsAuthenticationProvider.setMessageSource(org.springframework.context.MessageSource)
1765 - Declaração do método: samples.gae.users.UserRegistry.findUser(java.lang.String)
1765 - Declaração do método: samples.gae.users.UserRegistry.registerUser(samples.gae.users.GaeUser)
1765 - Declaração do método: samples.gae.users.UserRegistry.removeUser(java.lang.String)
1765 - Declaração do método: samples.gae.users.GaeDataStoreUserRegistry.findUser(java.lang.String)
Métodos invocados: 
com.google.appengine.api.datastore.KeyFactory.createKey(java.lang.String, java.lang.String)
com.google.appengine.api.datastore.DatastoreServiceFactory.getDatastoreService()
com.google.appengine.api.datastore.DatastoreService.get(com.google.appengine.api.datastore.Key)
com.google.appengine.api.datastore.Entity.getProperty(java.lang.String)
java.util.EnumSet.noneOf(java.lang.Class)
samples.gae.security.AppRole.values()
samples.gae.security.AppRole.getBit()
java.util.Set.add(samples.gae.security.AppRole)
com.google.appengine.api.datastore.Entity.getKey()
com.google.appengine.api.datastore.Key.getName()
com.google.appengine.api.datastore.Entity.getProperty(java.lang.String)
com.google.appengine.api.datastore.Entity.getProperty(java.lang.String)
com.google.appengine.api.datastore.Entity.getProperty(java.lang.String)
com.google.appengine.api.datastore.Entity.getProperty(java.lang.String)
com.google.appengine.api.datastore.Entity.getProperty(java.lang.String)
org.slf4j.Logger.debug(java.lang.String)
1766 - Declaração do método: samples.gae.users.GaeDataStoreUserRegistry.registerUser(samples.gae.users.GaeUser)
Métodos invocados: 
org.slf4j.Logger.debug(java.lang.String)
samples.gae.users.GaeUser.getUserId()
com.google.appengine.api.datastore.KeyFactory.createKey(java.lang.String, java.lang.String)
samples.gae.users.GaeUser.getEmail()
com.google.appengine.api.datastore.Entity.setProperty(java.lang.String, java.lang.Object)
samples.gae.users.GaeUser.getNickname()
com.google.appengine.api.datastore.Entity.setProperty(java.lang.String, java.lang.Object)
samples.gae.users.GaeUser.getForename()
com.google.appengine.api.datastore.Entity.setProperty(java.lang.String, java.lang.Object)
samples.gae.users.GaeUser.getSurname()
com.google.appengine.api.datastore.Entity.setProperty(java.lang.String, java.lang.Object)
samples.gae.users.GaeUser.isEnabled()
com.google.appengine.api.datastore.Entity.setUnindexedProperty(java.lang.String, java.lang.Object)
samples.gae.users.GaeUser.getAuthorities()
samples.gae.security.AppRole.getBit()
com.google.appengine.api.datastore.Entity.setUnindexedProperty(java.lang.String, java.lang.Object)
com.google.appengine.api.datastore.DatastoreServiceFactory.getDatastoreService()
com.google.appengine.api.datastore.DatastoreService.put(com.google.appengine.api.datastore.Entity)
1767 - Declaração do método: samples.gae.users.GaeDataStoreUserRegistry.removeUser(java.lang.String)
Métodos invocados: 
com.google.appengine.api.datastore.DatastoreServiceFactory.getDatastoreService()
com.google.appengine.api.datastore.KeyFactory.createKey(java.lang.String, java.lang.String)
com.google.appengine.api.datastore.DatastoreService.delete([Lcom.google.appengine.api.datastore.Key;)
1768 - Declaração do método: samples.gae.users.InMemoryUserRegistry.findUser(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
1769 - Declaração do método: samples.gae.users.InMemoryUserRegistry.registerUser(samples.gae.users.GaeUser)
Métodos invocados: 
org.slf4j.Logger.debug(java.lang.String)
samples.gae.users.GaeUser.getUserId()
java.util.Map.containsKey(java.lang.Object)
org.springframework.util.Assert.state(Z)
samples.gae.users.GaeUser.getUserId()
java.util.Map.put(java.lang.String, samples.gae.users.GaeUser)
1770 - Declaração do método: samples.gae.users.InMemoryUserRegistry.removeUser(java.lang.String)
Métodos invocados: 
java.util.Map.remove(java.lang.Object)
1771 - Declaração do método: samples.gae.users.GaeUser.GaeUser(java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
java.util.EnumSet.of(samples.gae.security.AppRole)
1772 - Declaração do método: samples.gae.users.GaeUser.GaeUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.Set, Z)
1772 - Declaração do método: samples.gae.users.GaeUser.getUserId()
1772 - Declaração do método: samples.gae.users.GaeUser.getNickname()
1772 - Declaração do método: samples.gae.users.GaeUser.getEmail()
1772 - Declaração do método: samples.gae.users.GaeUser.getForename()
1772 - Declaração do método: samples.gae.users.GaeUser.getSurname()
1772 - Declaração do método: samples.gae.users.GaeUser.isEnabled()
1772 - Declaração do método: samples.gae.users.GaeUser.getAuthorities()
1772 - Declaração do método: samples.gae.users.GaeUser.toString()
1772 - Declaração do método: samples.gae.validation.ForenameValidator.initialize(samples.gae.validation.Forename)
1772 - Declaração do método: samples.gae.validation.ForenameValidator.isValid(java.lang.String, javax.validation.ConstraintValidatorContext)
Métodos invocados: 
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.util.regex.Matcher.matches()
1773 - Declaração do método: samples.gae.validation.SurnameValidator.initialize(samples.gae.validation.Surname)
1773 - Declaração do método: samples.gae.validation.SurnameValidator.isValid(java.lang.String, javax.validation.ConstraintValidatorContext)
Métodos invocados: 
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.util.regex.Matcher.matches()
1774 - Declaração do método: samples.gae.web.GaeAppController.landing()
1774 - Declaração do método: samples.gae.web.GaeAppController.home()
1774 - Declaração do método: samples.gae.web.GaeAppController.disabled()
1774 - Declaração do método: samples.gae.web.GaeAppController.logout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.invalidate()
com.google.appengine.api.users.UserServiceFactory.getUserService()
com.google.appengine.api.users.UserService.createLogoutURL(java.lang.String)
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
1775 - Declaração do método: samples.gae.web.GaeAppController.loggedOut()
1775 - Declaração do método: samples.gae.web.RegistrationController.registrationForm()
1775 - Declaração do método: samples.gae.web.RegistrationController.register(samples.gae.web.RegistrationForm, org.springframework.validation.BindingResult)
Métodos invocados: 
org.springframework.validation.Errors.hasErrors()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.getPrincipal()
java.util.EnumSet.of(samples.gae.security.AppRole)
com.google.appengine.api.users.UserServiceFactory.getUserService()
com.google.appengine.api.users.UserService.isUserAdmin()
java.util.Set.add(samples.gae.security.AppRole)
samples.gae.users.GaeUser.getUserId()
samples.gae.users.GaeUser.getNickname()
samples.gae.users.GaeUser.getEmail()
samples.gae.web.RegistrationForm.getForename()
samples.gae.web.RegistrationForm.getSurname()
samples.gae.users.UserRegistry.registerUser(samples.gae.users.GaeUser)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.Authentication.getDetails()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
1776 - Declaração do método: samples.gae.web.RegistrationForm.getForename()
1776 - Declaração do método: samples.gae.web.RegistrationForm.setForename(java.lang.String)
1776 - Declaração do método: samples.gae.web.RegistrationForm.getSurname()
1776 - Declaração do método: samples.gae.web.RegistrationForm.setSurname(java.lang.String)
1776 - Declaração do método: org.springframework.security.samples.openid.CustomUserDetailsService.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
1777 - Declaração do método: org.springframework.security.samples.openid.CustomUserDetailsService.loadUserDetails(org.springframework.security.openid.OpenIDAuthenticationToken)
Métodos invocados: 
org.springframework.security.openid.OpenIDAuthenticationToken.getIdentityUrl()
java.util.Map.get(java.lang.Object)
org.springframework.security.openid.OpenIDAuthenticationToken.getAttributes()
org.springframework.security.openid.OpenIDAttribute.getName()
java.lang.String.equals(java.lang.Object)
org.springframework.security.openid.OpenIDAttribute.getValues()
java.util.List.get(I)
org.springframework.security.openid.OpenIDAttribute.getName()
java.lang.String.equals(java.lang.Object)
org.springframework.security.openid.OpenIDAttribute.getValues()
java.util.List.get(I)
org.springframework.security.openid.OpenIDAttribute.getName()
java.lang.String.equals(java.lang.Object)
org.springframework.security.openid.OpenIDAttribute.getValues()
java.util.List.get(I)
org.springframework.security.openid.OpenIDAttribute.getName()
java.lang.String.equals(java.lang.Object)
org.springframework.security.openid.OpenIDAttribute.getValues()
java.util.List.get(I)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
org.springframework.security.samples.openid.CustomUserDetails.setEmail(java.lang.String)
org.springframework.security.samples.openid.CustomUserDetails.setName(java.lang.String)
java.util.Map.put(java.lang.String, org.springframework.security.samples.openid.CustomUserDetails)
org.springframework.security.samples.openid.CustomUserDetails.setEmail(java.lang.String)
org.springframework.security.samples.openid.CustomUserDetails.setName(java.lang.String)
org.springframework.security.samples.openid.CustomUserDetails.setNewUser(Z)
1778 - Declaração do método: org.springframework.security.samples.openid.CustomUserDetails.CustomUserDetails(java.lang.String, java.util.Collection)
1778 - Declaração do método: org.springframework.security.samples.openid.CustomUserDetails.getEmail()
1778 - Declaração do método: org.springframework.security.samples.openid.CustomUserDetails.setEmail(java.lang.String)
1778 - Declaração do método: org.springframework.security.samples.openid.CustomUserDetails.isNewUser()
1778 - Declaração do método: org.springframework.security.samples.openid.CustomUserDetails.setNewUser(Z)
1778 - Declaração do método: org.springframework.security.samples.openid.CustomUserDetails.getName()
1778 - Declaração do método: org.springframework.security.samples.openid.CustomUserDetails.setName(java.lang.String)
1778 - Declaração do método: heavyduty.web.TestMultiActionController.login(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1778 - Declaração do método: heavyduty.web.TestMultiActionController.step1(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
javax.servlet.ServletRequest.getParameterValues(java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.logging.Log.info(java.lang.Object)
javax.servlet.ServletRequest.getParameterValues(java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.logging.Log.info(java.lang.Object)
javax.servlet.ServletRequest.getRequestDispatcher(java.lang.String)
javax.servlet.RequestDispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1779 - Declaração do método: heavyduty.web.TestMultiActionController.step1xtra(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
javax.servlet.ServletRequest.getParameterValues(java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.logging.Log.info(java.lang.Object)
heavyduty.web.TestMultiActionController.createView(java.lang.String)
1780 - Declaração do método: heavyduty.web.TestMultiActionController.step2(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
heavyduty.web.TestMultiActionController.createView(java.lang.String)
1781 - Declaração do método: heavyduty.web.TestMultiActionController.createView(java.lang.String)
Métodos invocados: 
java.util.Map.put(java.lang.String, java.lang.String)
1782 - Declaração do método: sample.TestVoter.supports(org.springframework.security.access.ConfigAttribute)
1782 - Declaração do método: sample.TestVoter.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
1783 - Declaração do método: sample.TestVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
Métodos invocados: 
org.aopalliance.intercept.MethodInvocation.getMethod()
java.lang.reflect.Method.getParameterAnnotations()
1784 - Declaração do método: sample.dao.GenericDAO.persist(sample.dao.GenericDAO$T)
1784 - Declaração do método: sample.dao.GenericDAO.refresh(sample.dao.GenericDAO$T)
1784 - Declaração do método: sample.dao.GenericDAO.delete(sample.dao.GenericDAO$T)
1784 - Declaração do método: sample.dao.GenericDAO.merge(sample.dao.GenericDAO$T)
1784 - Declaração do método: sample.dao.GenericDAO.read(sample.dao.GenericDAO$PK)
1784 - Declaração do método: sample.dao.UserDAO.findByUsername(java.lang.String)
1784 - Declaração do método: sample.dao.impl.UserDAOImpl.UserDAOImpl()
1784 - Declaração do método: sample.dao.impl.UserDAOImpl.findByUsername(java.lang.String)
Métodos invocados: 
sample.dao.impl.GenericDAOImpl.getEntityManager()
javax.persistence.EntityManager.createNamedQuery(java.lang.String)
javax.persistence.Query.setParameter(java.lang.String, java.lang.Object)
javax.persistence.Query.getSingleResult()
1785 - Declaração do método: sample.dao.impl.GenericDAOImpl.GenericDAOImpl(java.lang.Class)
1785 - Declaração do método: sample.dao.impl.GenericDAOImpl.read(sample.dao.impl.GenericDAOImpl$PK)
Métodos invocados: 
javax.persistence.EntityManager.find(java.lang.Class, java.lang.Object)
1786 - Declaração do método: sample.dao.impl.GenericDAOImpl.persist(sample.dao.impl.GenericDAOImpl$T)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.getClass()
java.lang.Class.getSimpleName()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.persistence.EntityManager.persist(java.lang.Object)
1787 - Declaração do método: sample.dao.impl.GenericDAOImpl.refresh(sample.dao.impl.GenericDAOImpl$T)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.getClass()
java.lang.Class.getSimpleName()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.persistence.EntityManager.refresh(java.lang.Object)
1788 - Declaração do método: sample.dao.impl.GenericDAOImpl.delete(sample.dao.impl.GenericDAOImpl$T)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.getClass()
java.lang.Class.getSimpleName()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.persistence.EntityManager.remove(java.lang.Object)
1789 - Declaração do método: sample.dao.impl.GenericDAOImpl.merge(sample.dao.impl.GenericDAOImpl$T)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.getClass()
java.lang.Class.getSimpleName()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.persistence.EntityManager.merge(sample.dao.impl.GenericDAOImpl$T)
1790 - Declaração do método: sample.dao.impl.GenericDAOImpl.getEntityManager()
1790 - Declaração do método: sample.domain.User.User()
1790 - Declaração do método: sample.domain.User.User(java.lang.String, java.lang.String)
1790 - Declaração do método: sample.domain.User.getId()
1790 - Declaração do método: sample.domain.User.setId(java.lang.Long)
1790 - Declaração do método: sample.domain.User.getUsername()
1790 - Declaração do método: sample.domain.User.setUsername(java.lang.String)
1790 - Declaração do método: sample.domain.User.User(java.lang.String, java.lang.String, java.util.Date, java.lang.String)
1790 - Declaração do método: sample.domain.User.getPassword()
1790 - Declaração do método: sample.domain.User.setPassword(java.lang.String)
1790 - Declaração do método: sample.service.UserService.register(java.lang.String, java.lang.String)
1790 - Declaração do método: sample.service.impl.UserServiceImpl.loadUserByUsername(java.lang.String)
Métodos invocados: 
sample.dao.UserDAO.findByUsername(java.lang.String)
sample.domain.User.getUsername()
sample.domain.User.getPassword()
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
java.lang.Throwable.getMessage()
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
1791 - Declaração do método: sample.service.impl.UserServiceImpl.register(java.lang.String, java.lang.String)
Métodos invocados: 
sample.dao.GenericDAO.persist(sample.domain.User)
sample.domain.User.getUsername()
sample.domain.User.getPassword()
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
1792 - Declaração do método: sample.service.impl.UserServiceImpl.setUserDAO(sample.dao.UserDAO)
1792 - Declaração do método: org.springframework.security.web.DefaultRedirectStrategy.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getContextPath()
org.springframework.security.web.DefaultRedirectStrategy.calculateRedirectUrl(java.lang.String, java.lang.String)
javax.servlet.http.HttpServletResponse.encodeRedirectURL(java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
1793 - Declaração do método: org.springframework.security.web.DefaultRedirectStrategy.calculateRedirectUrl(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.web.util.UrlUtils.isAbsoluteUrl(java.lang.String)
java.lang.String.indexOf(java.lang.String)
java.lang.String.substring(I)
java.lang.String.indexOf(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I)
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.String.substring(I)
1794 - Declaração do método: org.springframework.security.web.DefaultRedirectStrategy.setContextRelative(Z)
1794 - Declaração do método: org.springframework.security.web.PortResolverImpl.getPortMapper()
1794 - Declaração do método: org.springframework.security.web.PortResolverImpl.getServerPort(javax.servlet.ServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getServerPort()
javax.servlet.ServletRequest.getScheme()
java.lang.String.toLowerCase()
java.lang.String.equals(java.lang.Object)
org.springframework.security.web.PortMapper.lookupHttpPort(java.lang.Integer)
java.lang.String.equals(java.lang.Object)
org.springframework.security.web.PortMapper.lookupHttpsPort(java.lang.Integer)
java.lang.Integer.intValue()
1795 - Declaração do método: org.springframework.security.web.PortResolverImpl.setPortMapper(org.springframework.security.web.PortMapper)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1796 - Declaração do método: org.springframework.security.web.FilterInvocation$1.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1796 - Declaração do método: org.springframework.security.web.FilterInvocation.FilterInvocation(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
1796 - Declaração do método: org.springframework.security.web.FilterInvocation.FilterInvocation(java.lang.String, java.lang.String)
1796 - Declaração do método: org.springframework.security.web.FilterInvocation.FilterInvocation(java.lang.String, java.lang.String, java.lang.String)
1796 - Declaração do método: org.springframework.security.web.FilterInvocation.FilterInvocation(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.web.DummyRequest.setContextPath(java.lang.String)
org.springframework.security.web.DummyRequest.setServletPath(java.lang.String)
org.springframework.security.web.DummyRequest.setPathInfo(java.lang.String)
org.springframework.security.web.DummyRequest.setMethod(java.lang.String)
1797 - Declaração do método: org.springframework.security.web.FilterInvocation.getChain()
1797 - Declaração do método: org.springframework.security.web.FilterInvocation.getFullRequestUrl()
Métodos invocados: 
org.springframework.security.web.util.UrlUtils.buildFullRequestUrl(javax.servlet.http.HttpServletRequest)
1798 - Declaração do método: org.springframework.security.web.FilterInvocation.getHttpRequest()
1798 - Declaração do método: org.springframework.security.web.FilterInvocation.getHttpResponse()
1798 - Declaração do método: org.springframework.security.web.FilterInvocation.getRequestUrl()
Métodos invocados: 
org.springframework.security.web.util.UrlUtils.buildRequestUrl(javax.servlet.http.HttpServletRequest)
1799 - Declaração do método: org.springframework.security.web.FilterInvocation.getRequest()
Métodos invocados: 
org.springframework.security.web.FilterInvocation.getHttpRequest()
1800 - Declaração do método: org.springframework.security.web.FilterInvocation.getResponse()
Métodos invocados: 
org.springframework.security.web.FilterInvocation.getHttpResponse()
1801 - Declaração do método: org.springframework.security.web.FilterInvocation.toString()
Métodos invocados: 
org.springframework.security.web.FilterInvocation.getRequestUrl()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.setRequestURI(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyRequest.setPathInfo(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getRequestURI()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.setContextPath(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getContextPath()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.setServletPath(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getServletPath()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.setMethod(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getMethod()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getPathInfo()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getQueryString()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.setQueryString(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getAuthType()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getCookies()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getDateHeader(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getHeader(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getHeaderNames()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getHeaders(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getIntHeader(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getPathTranslated()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getRemoteUser()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getRequestURL()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getRequestedSessionId()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getSession()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getSession(Z)
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getUserPrincipal()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.isRequestedSessionIdFromCookie()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.isRequestedSessionIdFromURL()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.isRequestedSessionIdFromUrl()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.isRequestedSessionIdValid()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.isUserInRole(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getAttribute(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getAttributeNames()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getCharacterEncoding()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getContentLength()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getContentType()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getInputStream()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getLocalAddr()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getLocalName()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getLocalPort()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getLocale()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getLocales()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getParameter(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getParameterMap()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getParameterNames()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getParameterValues(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getProtocol()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getReader()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getRealPath(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getRemoteAddr()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getRemoteHost()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getRemotePort()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getRequestDispatcher(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getScheme()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getServerName()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.getServerPort()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.isSecure()
1802 - Declaração do método: org.springframework.security.web.DummyRequest.removeAttribute(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyRequest.setAttribute(java.lang.String, java.lang.Object)
1802 - Declaração do método: org.springframework.security.web.DummyRequest.setCharacterEncoding(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.addCookie(javax.servlet.http.Cookie)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.addDateHeader(java.lang.String, J)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.addHeader(java.lang.String, java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.addIntHeader(java.lang.String, I)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.containsHeader(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.encodeRedirectURL(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.encodeRedirectUrl(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.encodeURL(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.encodeUrl(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.sendError(I)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.sendError(I, java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.sendRedirect(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.setDateHeader(java.lang.String, J)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.setHeader(java.lang.String, java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.setIntHeader(java.lang.String, I)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.setStatus(I)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.setStatus(I, java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.flushBuffer()
1802 - Declaração do método: org.springframework.security.web.DummyResponse.getBufferSize()
1802 - Declaração do método: org.springframework.security.web.DummyResponse.getCharacterEncoding()
1802 - Declaração do método: org.springframework.security.web.DummyResponse.getContentType()
1802 - Declaração do método: org.springframework.security.web.DummyResponse.getLocale()
1802 - Declaração do método: org.springframework.security.web.DummyResponse.getOutputStream()
1802 - Declaração do método: org.springframework.security.web.DummyResponse.getWriter()
1802 - Declaração do método: org.springframework.security.web.DummyResponse.isCommitted()
1802 - Declaração do método: org.springframework.security.web.DummyResponse.reset()
1802 - Declaração do método: org.springframework.security.web.DummyResponse.resetBuffer()
1802 - Declaração do método: org.springframework.security.web.DummyResponse.setBufferSize(I)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.setCharacterEncoding(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.setContentLength(I)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.setContentType(java.lang.String)
1802 - Declaração do método: org.springframework.security.web.DummyResponse.setLocale(java.util.Locale)
1802 - Declaração do método: org.springframework.security.web.PortMapperImpl.PortMapperImpl()
Métodos invocados: 
java.util.Map.put(java.lang.Integer, java.lang.Integer)
java.util.Map.put(java.lang.Integer, java.lang.Integer)
1803 - Declaração do método: org.springframework.security.web.PortMapperImpl.getTranslatedPortMappings()
1803 - Declaração do método: org.springframework.security.web.PortMapperImpl.lookupHttpPort(java.lang.Integer)
Métodos invocados: 
java.util.Map.keySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map.get(java.lang.Object)
java.lang.Integer.equals(java.lang.Object)
1804 - Declaração do método: org.springframework.security.web.PortMapperImpl.lookupHttpsPort(java.lang.Integer)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
1805 - Declaração do método: org.springframework.security.web.PortMapperImpl.setPortMappings(java.util.Map)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.Map.clear()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.lang.Integer.intValue()
java.lang.Integer.intValue()
java.lang.Integer.intValue()
java.lang.Integer.intValue()
java.util.Map.put(java.lang.Integer, java.lang.Integer)
java.util.Map.size()
1806 - Declaração do método: org.springframework.security.web.RedirectStrategy.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
1806 - Declaração do método: org.springframework.security.web.AuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
1806 - Declaração do método: org.springframework.security.web.PortMapper.lookupHttpPort(java.lang.Integer)
1806 - Declaração do método: org.springframework.security.web.PortMapper.lookupHttpsPort(java.lang.Integer)
1806 - Declaração do método: org.springframework.security.web.PortResolver.getServerPort(javax.servlet.ServletRequest)
1806 - Declaração do método: org.springframework.security.web.FilterChainProxy.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.web.FilterChainProxy$FilterChainValidator.validate(org.springframework.security.web.FilterChainProxy)
1807 - Declaração do método: org.springframework.security.web.FilterChainProxy.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.web.FilterInvocation.getRequest()
org.springframework.security.web.FilterChainProxy.getFilters(javax.servlet.http.HttpServletRequest)
java.util.List.size()
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.web.FilterInvocation.getRequestUrl()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.web.FilterInvocation.getRequest()
org.springframework.security.web.FilterInvocation.getResponse()
org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1808 - Declaração do método: org.springframework.security.web.FilterChainProxy.getFilters(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
org.springframework.security.web.util.RequestMatcher.matches(javax.servlet.http.HttpServletRequest)
java.util.Map$Entry.getValue()
1809 - Declaração do método: org.springframework.security.web.FilterChainProxy.getFilters(java.lang.String)
Métodos invocados: 
org.springframework.security.web.FilterInvocation.getRequest()
org.springframework.security.web.FilterChainProxy.getFilters(javax.servlet.http.HttpServletRequest)
1810 - Declaração do método: org.springframework.security.web.FilterChainProxy.obtainAllDefinedFilters()
Métodos invocados: 
java.util.Map.values()
java.util.Set.addAll(java.util.Collection)
1811 - Declaração do método: org.springframework.security.web.FilterChainProxy.setFilterChainMap(java.util.Map)
Métodos invocados: 
org.springframework.security.web.FilterChainProxy.checkContents(java.util.Map)
org.springframework.security.web.FilterChainProxy.checkPathOrder()
1812 - Declaração do método: org.springframework.security.web.FilterChainProxy.checkContents(java.util.Map)
Métodos invocados: 
java.util.Map.keySet()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
java.util.Map.get(java.lang.Object)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
1813 - Declaração do método: org.springframework.security.web.FilterChainProxy.checkPathOrder()
Métodos invocados: 
java.util.Map.keySet()
java.util.Set.toArray([Lorg.springframework.security.web.util.RequestMatcher;)
1814 - Declaração do método: org.springframework.security.web.FilterChainProxy.getFilterChainMap()
1814 - Declaração do método: org.springframework.security.web.FilterChainProxy.setFilterChainValidator(org.springframework.security.web.FilterChainProxy$FilterChainValidator)
1814 - Declaração do método: org.springframework.security.web.FilterChainProxy.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
1815 - Declaração do método: org.springframework.security.web.FilterChainProxy$VirtualFilterChain.VirtualFilterChain(org.springframework.security.web.FilterInvocation, java.util.List)
1815 - Declaração do método: org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
Métodos invocados: 
java.util.List.size()
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.web.FilterInvocation.getRequestUrl()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.FilterInvocation.getChain()
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
java.util.List.get(I)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.web.FilterInvocation.getRequestUrl()
java.util.List.size()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
1816 - Declaração do método: org.springframework.security.web.FilterChainProxy$FilterChainValidator.validate(org.springframework.security.web.FilterChainProxy)
1816 - Declaração do método: org.springframework.security.web.FilterChainProxy$NullFilterChainValidator.validate(org.springframework.security.web.FilterChainProxy)
1816 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1817 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.util.ThrowableAnalyzer.determineCauseChain(java.lang.Throwable)
org.springframework.security.web.util.ThrowableAnalyzer.getFirstThrowableOfType(java.lang.Class, [Ljava.lang.Throwable;)
org.springframework.security.web.util.ThrowableAnalyzer.getFirstThrowableOfType(java.lang.Class, [Ljava.lang.Throwable;)
org.springframework.security.web.access.ExceptionTranslationFilter.handleException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain, java.lang.RuntimeException)
1818 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilter.getAuthenticationEntryPoint()
1818 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilter.getAuthenticationTrustResolver()
1818 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilter.handleException(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain, java.lang.RuntimeException)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.springframework.security.web.access.ExceptionTranslationFilter.sendStartAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain, org.springframework.security.core.AuthenticationException)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.authentication.AuthenticationTrustResolver.isAnonymous(org.springframework.security.core.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.springframework.security.web.access.ExceptionTranslationFilter.sendStartAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain, org.springframework.security.core.AuthenticationException)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.springframework.security.web.access.AccessDeniedHandler.handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.access.AccessDeniedException)
1819 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilter.sendStartAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.web.savedrequest.RequestCache.saveRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.AuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
1820 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilter.setAccessDeniedHandler(org.springframework.security.web.access.AccessDeniedHandler)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1821 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilter.setAuthenticationEntryPoint(org.springframework.security.web.AuthenticationEntryPoint)
1821 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilter.setAuthenticationTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1822 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilter.setThrowableAnalyzer(org.springframework.security.web.util.ThrowableAnalyzer)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1823 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilter.setRequestCache(org.springframework.security.web.savedrequest.RequestCache)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1824 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilter$DefaultThrowableAnalyzer.initExtractorMap()
Métodos invocados: 
org.springframework.security.web.util.ThrowableAnalyzer.registerExtractor(java.lang.Class, org.springframework.security.web.util.ThrowableCauseExtractor)
org.springframework.security.web.util.ThrowableAnalyzer.verifyThrowableHierarchy(java.lang.Throwable, java.lang.Class)
javax.servlet.ServletException.getRootCause()
1825 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilter$DefaultThrowableAnalyzer$1.extractCause(java.lang.Throwable)
Métodos invocados: 
org.springframework.security.web.util.ThrowableAnalyzer.verifyThrowableHierarchy(java.lang.Throwable, java.lang.Class)
javax.servlet.ServletException.getRootCause()
1826 - Declaração do método: org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator.DefaultWebInvocationPrivilegeEvaluator(org.springframework.security.access.intercept.AbstractSecurityInterceptor)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
java.lang.Object.equals(java.lang.Object)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getAccessDecisionManager()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1827 - Declaração do método: org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator.isAllowed(java.lang.String, org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator.isAllowed(java.lang.String, java.lang.String, java.lang.String, org.springframework.security.core.Authentication)
1828 - Declaração do método: org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator.isAllowed(java.lang.String, java.lang.String, java.lang.String, org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.obtainSecurityMetadataSource()
org.springframework.security.access.SecurityMetadataSource.getAttributes(java.lang.Object)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.isRejectPublicInvocations()
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getAccessDecisionManager()
org.springframework.security.access.AccessDecisionManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.web.FilterInvocation.toString()
java.security.Principal.toString()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
1829 - Declaração do método: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator.isAllowed(java.lang.String, org.springframework.security.core.Authentication)
1829 - Declaração do método: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator.isAllowed(java.lang.String, java.lang.String, java.lang.String, org.springframework.security.core.Authentication)
1829 - Declaração do método: org.springframework.security.web.access.AccessDeniedHandlerImpl.handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.access.AccessDeniedException)
Métodos invocados: 
javax.servlet.ServletResponse.isCommitted()
javax.servlet.ServletRequest.setAttribute(java.lang.String, java.lang.Object)
javax.servlet.http.HttpServletResponse.setStatus(I)
javax.servlet.ServletRequest.getRequestDispatcher(java.lang.String)
javax.servlet.RequestDispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
java.lang.Throwable.getMessage()
javax.servlet.http.HttpServletResponse.sendError(I, java.lang.String)
1830 - Declaração do método: org.springframework.security.web.access.AccessDeniedHandlerImpl.setErrorPage(java.lang.String)
Métodos invocados: 
java.lang.String.startsWith(java.lang.String)
1831 - Declaração do método: org.springframework.security.web.access.AccessDeniedHandler.handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.access.AccessDeniedException)
1831 - Declaração do método: org.springframework.security.web.access.channel.SecureChannelProcessor.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1832 - Declaração do método: org.springframework.security.web.access.channel.SecureChannelProcessor.decide(org.springframework.security.web.FilterInvocation, java.util.Collection)
Métodos invocados: 
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.web.access.channel.SecureChannelProcessor.supports(org.springframework.security.access.ConfigAttribute)
org.springframework.security.web.FilterInvocation.getHttpRequest()
javax.servlet.ServletRequest.isSecure()
org.springframework.security.web.FilterInvocation.getRequest()
org.springframework.security.web.FilterInvocation.getResponse()
org.springframework.security.web.access.channel.ChannelEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1833 - Declaração do método: org.springframework.security.web.access.channel.SecureChannelProcessor.getEntryPoint()
1833 - Declaração do método: org.springframework.security.web.access.channel.SecureChannelProcessor.getSecureKeyword()
1833 - Declaração do método: org.springframework.security.web.access.channel.SecureChannelProcessor.setEntryPoint(org.springframework.security.web.access.channel.ChannelEntryPoint)
1833 - Declaração do método: org.springframework.security.web.access.channel.SecureChannelProcessor.setSecureKeyword(java.lang.String)
1833 - Declaração do método: org.springframework.security.web.access.channel.SecureChannelProcessor.supports(org.springframework.security.access.ConfigAttribute)
Métodos invocados: 
org.springframework.security.access.ConfigAttribute.getAttribute()
org.springframework.security.access.ConfigAttribute.getAttribute()
org.springframework.security.web.access.channel.SecureChannelProcessor.getSecureKeyword()
java.lang.String.equals(java.lang.Object)
1834 - Declaração do método: org.springframework.security.web.access.channel.ChannelDecisionManager.decide(org.springframework.security.web.FilterInvocation, java.util.Collection)
1834 - Declaração do método: org.springframework.security.web.access.channel.ChannelDecisionManager.supports(org.springframework.security.access.ConfigAttribute)
1834 - Declaração do método: org.springframework.security.web.access.channel.RetryWithHttpEntryPoint.RetryWithHttpEntryPoint()
1834 - Declaração do método: org.springframework.security.web.access.channel.RetryWithHttpEntryPoint.getMappedPort(java.lang.Integer)
Métodos invocados: 
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.getPortMapper()
org.springframework.security.web.PortMapper.lookupHttpPort(java.lang.Integer)
1835 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.access.SecurityMetadataSource.getAllConfigAttributes()
org.apache.commons.logging.Log.isWarnEnabled()
org.apache.commons.logging.Log.warn(java.lang.Object)
org.springframework.security.web.access.channel.ChannelDecisionManager.supports(org.springframework.security.access.ConfigAttribute)
java.util.Set.add(org.springframework.security.access.ConfigAttribute)
java.util.Set.size()
org.apache.commons.logging.Log.isInfoEnabled()
org.apache.commons.logging.Log.info(java.lang.Object)
1836 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.access.SecurityMetadataSource.getAttributes(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.web.FilterInvocation.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.access.channel.ChannelDecisionManager.decide(org.springframework.security.web.FilterInvocation, java.util.Collection)
org.springframework.security.web.FilterInvocation.getResponse()
javax.servlet.ServletResponse.isCommitted()
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1837 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilter.getChannelDecisionManager()
1837 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilter.getSecurityMetadataSource()
1837 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilter.setChannelDecisionManager(org.springframework.security.web.access.channel.ChannelDecisionManager)
1837 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilter.setSecurityMetadataSource(org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource)
1837 - Declaração do método: org.springframework.security.web.access.channel.ChannelEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1837 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessor.decide(org.springframework.security.web.FilterInvocation, java.util.Collection)
1837 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessor.supports(org.springframework.security.access.ConfigAttribute)
1837 - Declaração do método: org.springframework.security.web.access.channel.AbstractRetryEntryPoint.AbstractRetryEntryPoint(java.lang.String, I)
1837 - Declaração do método: org.springframework.security.web.access.channel.AbstractRetryEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getQueryString()
javax.servlet.http.HttpServletRequest.getRequestURI()
org.springframework.security.web.PortResolver.getServerPort(javax.servlet.ServletRequest)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.getMappedPort(java.lang.Integer)
java.lang.Integer.intValue()
javax.servlet.ServletRequest.getServerName()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpServletResponse.encodeRedirectURL(java.lang.String)
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
1838 - Declaração do método: org.springframework.security.web.access.channel.AbstractRetryEntryPoint.getMappedPort(java.lang.Integer)
1838 - Declaração do método: org.springframework.security.web.access.channel.AbstractRetryEntryPoint.getPortMapper()
1838 - Declaração do método: org.springframework.security.web.access.channel.AbstractRetryEntryPoint.getPortResolver()
1838 - Declaração do método: org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1839 - Declaração do método: org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1840 - Declaração do método: org.springframework.security.web.access.channel.RetryWithHttpsEntryPoint.RetryWithHttpsEntryPoint()
1840 - Declaração do método: org.springframework.security.web.access.channel.RetryWithHttpsEntryPoint.getMappedPort(java.lang.Integer)
Métodos invocados: 
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.getPortMapper()
org.springframework.security.web.PortMapper.lookupHttpsPort(java.lang.Integer)
1841 - Declaração do método: org.springframework.security.web.access.channel.InsecureChannelProcessor.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1842 - Declaração do método: org.springframework.security.web.access.channel.InsecureChannelProcessor.decide(org.springframework.security.web.FilterInvocation, java.util.Collection)
Métodos invocados: 
org.springframework.security.web.access.channel.InsecureChannelProcessor.supports(org.springframework.security.access.ConfigAttribute)
org.springframework.security.web.FilterInvocation.getHttpRequest()
javax.servlet.ServletRequest.isSecure()
org.springframework.security.web.FilterInvocation.getRequest()
org.springframework.security.web.FilterInvocation.getResponse()
org.springframework.security.web.access.channel.ChannelEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1843 - Declaração do método: org.springframework.security.web.access.channel.InsecureChannelProcessor.getEntryPoint()
1843 - Declaração do método: org.springframework.security.web.access.channel.InsecureChannelProcessor.getInsecureKeyword()
1843 - Declaração do método: org.springframework.security.web.access.channel.InsecureChannelProcessor.setEntryPoint(org.springframework.security.web.access.channel.ChannelEntryPoint)
1843 - Declaração do método: org.springframework.security.web.access.channel.InsecureChannelProcessor.setInsecureKeyword(java.lang.String)
1843 - Declaração do método: org.springframework.security.web.access.channel.InsecureChannelProcessor.supports(org.springframework.security.access.ConfigAttribute)
Métodos invocados: 
org.springframework.security.access.ConfigAttribute.getAttribute()
org.springframework.security.access.ConfigAttribute.getAttribute()
org.springframework.security.web.access.channel.InsecureChannelProcessor.getInsecureKeyword()
java.lang.String.equals(java.lang.Object)
1844 - Declaração do método: org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notEmpty(java.util.Collection, java.lang.String)
1845 - Declaração do método: org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.decide(org.springframework.security.web.FilterInvocation, java.util.Collection)
Métodos invocados: 
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.access.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
org.springframework.security.web.access.channel.ChannelProcessor.decide(org.springframework.security.web.FilterInvocation, java.util.Collection)
org.springframework.security.web.FilterInvocation.getResponse()
javax.servlet.ServletResponse.isCommitted()
1846 - Declaração do método: org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.getChannelProcessors()
1846 - Declaração do método: org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.setChannelProcessors(java.util.List)
Métodos invocados: 
org.springframework.util.Assert.notEmpty(java.util.Collection, java.lang.String)
java.util.List.size()
java.lang.Object.getClass()
java.lang.Class.getName()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
java.util.List.add(org.springframework.security.web.access.channel.ChannelProcessor)
1847 - Declaração do método: org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.supports(org.springframework.security.access.ConfigAttribute)
Métodos invocados: 
org.springframework.security.access.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
org.springframework.security.web.access.channel.ChannelProcessor.supports(org.springframework.security.access.ConfigAttribute)
1848 - Declaração do método: org.springframework.security.web.access.expression.WebSecurityExpressionHandler.getExpressionParser()
1848 - Declaração do método: org.springframework.security.web.access.expression.WebSecurityExpressionHandler.createEvaluationContext(org.springframework.security.core.Authentication, org.springframework.security.web.FilterInvocation)
1848 - Declaração do método: org.springframework.security.web.access.expression.WebSecurityExpressionRoot.WebSecurityExpressionRoot(org.springframework.security.core.Authentication, org.springframework.security.web.FilterInvocation)
Métodos invocados: 
org.springframework.security.web.FilterInvocation.getRequest()
1849 - Declaração do método: org.springframework.security.web.access.expression.WebSecurityExpressionRoot.hasIpAddress(java.lang.String)
Métodos invocados: 
org.springframework.security.web.util.IpAddressMatcher.matches(javax.servlet.http.HttpServletRequest)
1850 - Declaração do método: org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource.ExpressionBasedFilterInvocationSecurityMetadataSource(java.util.LinkedHashMap, org.springframework.security.web.access.expression.WebSecurityExpressionHandler)
Métodos invocados: 
org.springframework.security.web.access.expression.WebSecurityExpressionHandler.getExpressionParser()
org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource.processMap(java.util.LinkedHashMap, org.springframework.expression.ExpressionParser)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1851 - Declaração do método: org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource.processMap(java.util.LinkedHashMap, org.springframework.expression.ExpressionParser)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.HashMap.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Collection.size()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
java.util.Map$Entry.getValue()
java.util.Collection.toArray([Lorg.springframework.security.access.ConfigAttribute;)
org.springframework.security.access.ConfigAttribute.getAttribute()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.expression.ExpressionParser.parseExpression(java.lang.String)
java.util.ArrayList.add(org.springframework.security.access.ConfigAttribute)
java.util.HashMap.put(org.springframework.security.web.util.RequestMatcher, java.util.Collection)
1852 - Declaração do método: org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler.getExpressionParser()
1852 - Declaração do método: org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler.createEvaluationContext(org.springframework.security.core.Authentication, org.springframework.security.web.FilterInvocation)
Métodos invocados: 
org.springframework.security.access.expression.SecurityExpressionRoot.setTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)
org.springframework.security.access.expression.SecurityExpressionRoot.setRoleHierarchy(org.springframework.security.access.hierarchicalroles.RoleHierarchy)
org.springframework.security.access.expression.SecurityExpressionRoot.setApplicationContext(org.springframework.context.ApplicationContext)
org.springframework.expression.spel.support.StandardEvaluationContext.addPropertyAccessor(org.springframework.expression.PropertyAccessor)
1853 - Declaração do método: org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler.setRoleHierarchy(org.springframework.security.access.hierarchicalroles.RoleHierarchy)
1853 - Declaração do método: org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler.setApplicationContext(org.springframework.context.ApplicationContext)
1853 - Declaração do método: org.springframework.security.web.access.expression.WebExpressionConfigAttribute.WebExpressionConfigAttribute(org.springframework.expression.Expression)
1853 - Declaração do método: org.springframework.security.web.access.expression.WebExpressionConfigAttribute.getAuthorizeExpression()
1853 - Declaração do método: org.springframework.security.web.access.expression.WebExpressionConfigAttribute.getAttribute()
1853 - Declaração do método: org.springframework.security.web.access.expression.WebExpressionConfigAttribute.toString()
Métodos invocados: 
org.springframework.expression.Expression.getExpressionString()
1854 - Declaração do método: org.springframework.security.web.access.expression.WebExpressionVoter.vote(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
Métodos invocados: 
org.springframework.security.web.access.expression.WebExpressionVoter.findConfigAttribute(java.util.Collection)
org.springframework.security.web.access.expression.WebSecurityExpressionHandler.createEvaluationContext(org.springframework.security.core.Authentication, org.springframework.security.web.FilterInvocation)
org.springframework.security.web.access.expression.WebExpressionConfigAttribute.getAuthorizeExpression()
org.springframework.security.access.expression.ExpressionUtils.evaluateAsBoolean(org.springframework.expression.Expression, org.springframework.expression.EvaluationContext)
1855 - Declaração do método: org.springframework.security.web.access.expression.WebExpressionVoter.findConfigAttribute(java.util.Collection)
1855 - Declaração do método: org.springframework.security.web.access.expression.WebExpressionVoter.supports(org.springframework.security.access.ConfigAttribute)
1855 - Declaração do método: org.springframework.security.web.access.expression.WebExpressionVoter.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
1856 - Declaração do método: org.springframework.security.web.access.expression.WebExpressionVoter.setExpressionHandler(org.springframework.security.web.access.expression.WebSecurityExpressionHandler)
1856 - Declaração do método: org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource.DefaultFilterInvocationSecurityMetadataSource(java.util.LinkedHashMap)
1856 - Declaração do método: org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource.getAllConfigAttributes()
Métodos invocados: 
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
java.util.Set.addAll(java.util.Collection)
1857 - Declaração do método: org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource.getAttributes(java.lang.Object)
Métodos invocados: 
org.springframework.security.web.FilterInvocation.getRequest()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
org.springframework.security.web.util.RequestMatcher.matches(javax.servlet.http.HttpServletRequest)
java.util.Map$Entry.getValue()
1858 - Declaração do método: org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
1859 - Declaração do método: org.springframework.security.web.access.intercept.RequestKey.RequestKey(java.lang.String)
1859 - Declaração do método: org.springframework.security.web.access.intercept.RequestKey.RequestKey(java.lang.String, java.lang.String)
1859 - Declaração do método: org.springframework.security.web.access.intercept.RequestKey.getUrl()
1859 - Declaração do método: org.springframework.security.web.access.intercept.RequestKey.getMethod()
1859 - Declaração do método: org.springframework.security.web.access.intercept.RequestKey.hashCode()
Métodos invocados: 
java.lang.String.hashCode()
java.lang.String.hashCode()
1860 - Declaração do método: org.springframework.security.web.access.intercept.RequestKey.equals(java.lang.Object)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
1861 - Declaração do método: org.springframework.security.web.access.intercept.RequestKey.toString()
Métodos invocados: 
java.lang.String.length()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
1862 - Declaração do método: org.springframework.security.web.access.intercept.FilterSecurityInterceptor.init(javax.servlet.FilterConfig)
1862 - Declaração do método: org.springframework.security.web.access.intercept.FilterSecurityInterceptor.destroy()
1862 - Declaração do método: org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(org.springframework.security.web.FilterInvocation)
1863 - Declaração do método: org.springframework.security.web.access.intercept.FilterSecurityInterceptor.getSecurityMetadataSource()
1863 - Declaração do método: org.springframework.security.web.access.intercept.FilterSecurityInterceptor.obtainSecurityMetadataSource()
1863 - Declaração do método: org.springframework.security.web.access.intercept.FilterSecurityInterceptor.setSecurityMetadataSource(org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource)
1863 - Declaração do método: org.springframework.security.web.access.intercept.FilterSecurityInterceptor.getSecureObjectClass()
1863 - Declaração do método: org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(org.springframework.security.web.FilterInvocation)
Métodos invocados: 
org.springframework.security.web.FilterInvocation.getRequest()
org.springframework.security.web.FilterInvocation.getRequest()
javax.servlet.ServletRequest.getAttribute(java.lang.String)
org.springframework.security.web.FilterInvocation.getChain()
org.springframework.security.web.FilterInvocation.getRequest()
org.springframework.security.web.FilterInvocation.getResponse()
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.web.FilterInvocation.getRequest()
org.springframework.security.web.FilterInvocation.getRequest()
javax.servlet.ServletRequest.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.web.FilterInvocation.getChain()
org.springframework.security.web.FilterInvocation.getRequest()
org.springframework.security.web.FilterInvocation.getResponse()
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1864 - Declaração do método: org.springframework.security.web.access.intercept.FilterSecurityInterceptor.isObserveOncePerRequest()
1864 - Declaração do método: org.springframework.security.web.access.intercept.FilterSecurityInterceptor.setObserveOncePerRequest(Z)
1864 - Declaração do método: org.springframework.security.web.authentication.NullRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1864 - Declaração do método: org.springframework.security.web.authentication.NullRememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1864 - Declaração do método: org.springframework.security.web.authentication.NullRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
1864 - Declaração do método: org.springframework.security.web.authentication.AuthenticationSuccessHandler.onAuthenticationSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
1864 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.web.util.UrlUtils.isValidRedirectUrl(java.lang.String)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1865 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.determineUrlToUseForThisRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.getLoginFormUrl()
1866 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
javax.servlet.ServletRequest.getScheme()
java.lang.String.equals(java.lang.Object)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.buildHttpsRedirectUrlForRequest(javax.servlet.http.HttpServletRequest)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.determineUrlToUseForThisRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.ServletRequest.getRequestDispatcher(java.lang.String)
javax.servlet.RequestDispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.buildRedirectUrlToLoginPage(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.security.web.RedirectStrategy.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
1867 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.buildRedirectUrlToLoginPage(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.determineUrlToUseForThisRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.security.web.PortResolver.getServerPort(javax.servlet.ServletRequest)
javax.servlet.ServletRequest.getScheme()
org.springframework.security.web.util.RedirectUrlBuilder.setScheme(java.lang.String)
javax.servlet.ServletRequest.getServerName()
org.springframework.security.web.util.RedirectUrlBuilder.setServerName(java.lang.String)
org.springframework.security.web.util.RedirectUrlBuilder.setPort(I)
javax.servlet.http.HttpServletRequest.getContextPath()
org.springframework.security.web.util.RedirectUrlBuilder.setContextPath(java.lang.String)
org.springframework.security.web.util.RedirectUrlBuilder.setPathInfo(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.security.web.PortMapper.lookupHttpsPort(java.lang.Integer)
org.springframework.security.web.util.RedirectUrlBuilder.setScheme(java.lang.String)
java.lang.Integer.intValue()
org.springframework.security.web.util.RedirectUrlBuilder.setPort(I)
org.apache.commons.logging.Log.warn(java.lang.Object)
org.springframework.security.web.util.RedirectUrlBuilder.getUrl()
1868 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.buildHttpsRedirectUrlForRequest(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.web.PortResolver.getServerPort(javax.servlet.ServletRequest)
org.springframework.security.web.PortMapper.lookupHttpsPort(java.lang.Integer)
org.springframework.security.web.util.RedirectUrlBuilder.setScheme(java.lang.String)
javax.servlet.ServletRequest.getServerName()
org.springframework.security.web.util.RedirectUrlBuilder.setServerName(java.lang.String)
java.lang.Integer.intValue()
org.springframework.security.web.util.RedirectUrlBuilder.setPort(I)
javax.servlet.http.HttpServletRequest.getContextPath()
org.springframework.security.web.util.RedirectUrlBuilder.setContextPath(java.lang.String)
javax.servlet.http.HttpServletRequest.getServletPath()
org.springframework.security.web.util.RedirectUrlBuilder.setServletPath(java.lang.String)
javax.servlet.http.HttpServletRequest.getPathInfo()
org.springframework.security.web.util.RedirectUrlBuilder.setPathInfo(java.lang.String)
javax.servlet.http.HttpServletRequest.getQueryString()
org.springframework.security.web.util.RedirectUrlBuilder.setQuery(java.lang.String)
org.springframework.security.web.util.RedirectUrlBuilder.getUrl()
org.apache.commons.logging.Log.warn(java.lang.Object)
1869 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setForceHttps(Z)
1869 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.isForceHttps()
1869 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setLoginFormUrl(java.lang.String)
1869 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.getLoginFormUrl()
1869 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
1869 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.getPortMapper()
1869 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
1869 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.getPortResolver()
1869 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setUseForward(Z)
1869 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.isUseForward()
1869 - Declaração do método: org.springframework.security.web.authentication.AnonymousAuthenticationFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
org.springframework.util.Assert.hasLength(java.lang.String)
1870 - Declaração do método: org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.applyAnonymousForThisRequest(javax.servlet.http.HttpServletRequest)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.createAuthentication(javax.servlet.http.HttpServletRequest)
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1871 - Declaração do método: org.springframework.security.web.authentication.AnonymousAuthenticationFilter.applyAnonymousForThisRequest(javax.servlet.http.HttpServletRequest)
1871 - Declaração do método: org.springframework.security.web.authentication.AnonymousAuthenticationFilter.createAuthentication(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserAttribute.getPassword()
org.springframework.security.core.userdetails.memory.UserAttribute.getAuthorities()
org.springframework.security.authentication.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
1872 - Declaração do método: org.springframework.security.web.authentication.AnonymousAuthenticationFilter.getKey()
1872 - Declaração do método: org.springframework.security.web.authentication.AnonymousAuthenticationFilter.getUserAttribute()
1872 - Declaração do método: org.springframework.security.web.authentication.AnonymousAuthenticationFilter.setAuthenticationDetailsSource(org.springframework.security.authentication.AuthenticationDetailsSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1873 - Declaração do método: org.springframework.security.web.authentication.AnonymousAuthenticationFilter.setKey(java.lang.String)
1873 - Declaração do método: org.springframework.security.web.authentication.AnonymousAuthenticationFilter.setUserAttribute(org.springframework.security.core.userdetails.memory.UserAttribute)
1873 - Declaração do método: org.springframework.security.web.authentication.WebAuthenticationDetailsSource.buildDetails(java.lang.Object)
Métodos invocados: 
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object)
java.lang.Class.getConstructor([Ljava.lang.Class;)
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
1874 - Declaração do método: org.springframework.security.web.authentication.WebAuthenticationDetailsSource.setClazz(java.lang.Class)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1875 - Declaração do método: org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.UsernamePasswordAuthenticationFilter()
1875 - Declaração do método: org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getMethod()
java.lang.String.equals(java.lang.Object)
javax.servlet.http.HttpServletRequest.getMethod()
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.obtainUsername(javax.servlet.http.HttpServletRequest)
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.obtainPassword(javax.servlet.http.HttpServletRequest)
java.lang.String.trim()
javax.servlet.http.HttpServletRequest.getSession(Z)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getAllowSessionCreation()
javax.servlet.http.HttpServletRequest.getSession()
org.springframework.security.web.util.TextEscapeUtils.escapeEntities(java.lang.String)
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.setDetails(javax.servlet.http.HttpServletRequest, org.springframework.security.authentication.UsernamePasswordAuthenticationToken)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getAuthenticationManager()
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
1876 - Declaração do método: org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.obtainPassword(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getParameter(java.lang.String)
1877 - Declaração do método: org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.obtainUsername(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getParameter(java.lang.String)
1878 - Declaração do método: org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.setDetails(javax.servlet.http.HttpServletRequest, org.springframework.security.authentication.UsernamePasswordAuthenticationToken)
Métodos invocados: 
org.springframework.security.authentication.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
1879 - Declaração do método: org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.setUsernameParameter(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
1880 - Declaração do método: org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.setPasswordParameter(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
1881 - Declaração do método: org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.setPostOnly(Z)
1881 - Declaração do método: org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.getUsernameParameter()
1881 - Declaração do método: org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.getPasswordParameter()
1881 - Declaração do método: org.springframework.security.web.authentication.RememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1881 - Declaração do método: org.springframework.security.web.authentication.RememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1881 - Declaração do método: org.springframework.security.web.authentication.RememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
1881 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.AbstractAuthenticationTargetUrlRequestHandler()
1881 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.determineTargetUrl(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
javax.servlet.ServletResponse.isCommitted()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.RedirectStrategy.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
1882 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.determineTargetUrl(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.isAlwaysUseDefaultTargetUrl()
javax.servlet.ServletRequest.getParameter(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.net.URLDecoder.decode(java.lang.String, java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.StringUtils.hasLength(java.lang.String)
javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
1883 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.getDefaultTargetUrl()
1883 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setDefaultTargetUrl(java.lang.String)
Métodos invocados: 
org.springframework.security.web.util.UrlUtils.isValidRedirectUrl(java.lang.String)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
1884 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setAlwaysUseDefaultTargetUrl(Z)
1884 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.isAlwaysUseDefaultTargetUrl()
1884 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setTargetUrlParameter(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
1885 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.getTargetUrlParameter()
1885 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setRedirectStrategy(org.springframework.security.web.RedirectStrategy)
1885 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.getRedirectStrategy()
1885 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setUseReferer(Z)
1885 - Declaração do método: org.springframework.security.web.authentication.WebAuthenticationDetails.WebAuthenticationDetails(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getRemoteAddr()
javax.servlet.http.HttpServletRequest.getSession(Z)
javax.servlet.http.HttpSession.getId()
org.springframework.security.web.authentication.WebAuthenticationDetails.doPopulateAdditionalInformation(javax.servlet.http.HttpServletRequest)
1886 - Declaração do método: org.springframework.security.web.authentication.WebAuthenticationDetails.doPopulateAdditionalInformation(javax.servlet.http.HttpServletRequest)
1886 - Declaração do método: org.springframework.security.web.authentication.WebAuthenticationDetails.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.web.authentication.WebAuthenticationDetails.getRemoteAddress()
org.springframework.security.web.authentication.WebAuthenticationDetails.getRemoteAddress()
org.springframework.security.web.authentication.WebAuthenticationDetails.getRemoteAddress()
java.lang.String.equals(java.lang.Object)
org.springframework.security.web.authentication.WebAuthenticationDetails.getSessionId()
org.springframework.security.web.authentication.WebAuthenticationDetails.getSessionId()
org.springframework.security.web.authentication.WebAuthenticationDetails.getSessionId()
java.lang.String.equals(java.lang.Object)
1887 - Declaração do método: org.springframework.security.web.authentication.WebAuthenticationDetails.getRemoteAddress()
1887 - Declaração do método: org.springframework.security.web.authentication.WebAuthenticationDetails.getSessionId()
1887 - Declaração do método: org.springframework.security.web.authentication.WebAuthenticationDetails.hashCode()
Métodos invocados: 
java.lang.String.hashCode()
java.lang.String.hashCode()
1888 - Declaração do método: org.springframework.security.web.authentication.WebAuthenticationDetails.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
org.springframework.security.web.authentication.WebAuthenticationDetails.getRemoteAddress()
java.lang.StringBuilder.append(java.lang.String)
org.springframework.security.web.authentication.WebAuthenticationDetails.getSessionId()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
1889 - Declaração do método: org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler.onAuthenticationFailure(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
java.util.Map.get(java.lang.Object)
org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.getRedirectStrategy()
org.springframework.security.web.RedirectStrategy.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
1890 - Declaração do método: org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler.setExceptionMappings(java.util.Map)
Métodos invocados: 
java.util.Map.clear()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.web.util.UrlUtils.isValidRedirectUrl(java.lang.String)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
java.util.Map.put(java.lang.String, java.lang.String)
1891 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.AbstractAuthenticationProcessingFilter(java.lang.String)
1891 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.security.web.util.UrlUtils.isValidRedirectUrl(java.lang.String)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1892 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.requiresAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.web.authentication.session.SessionAuthenticationStrategy.onAuthentication(org.springframework.security.core.Authentication, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.unsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.successfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
1893 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.requiresAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getRequestURI()
java.lang.String.indexOf(I)
java.lang.String.substring(I, I)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.equals(java.lang.Object)
java.lang.String.endsWith(java.lang.String)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.endsWith(java.lang.String)
1894 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1894 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.successfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.web.authentication.RememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
java.lang.Object.getClass()
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
org.springframework.security.web.authentication.AuthenticationSuccessHandler.onAuthenticationSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
1895 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.unsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Throwable.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.RememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.web.authentication.AuthenticationFailureHandler.onAuthenticationFailure(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
1896 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getAuthenticationManager()
1896 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
1896 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getFilterProcessesUrl()
1896 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setFilterProcessesUrl(java.lang.String)
1896 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getRememberMeServices()
1896 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setRememberMeServices(org.springframework.security.web.authentication.RememberMeServices)
1896 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setContinueChainBeforeSuccessfulAuthentication(Z)
1896 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
1896 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationDetailsSource(org.springframework.security.authentication.AuthenticationDetailsSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1897 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setMessageSource(org.springframework.context.MessageSource)
1897 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getAuthenticationDetailsSource()
1897 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getAllowSessionCreation()
1897 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAllowSessionCreation(Z)
1897 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setSessionAuthenticationStrategy(org.springframework.security.web.authentication.session.SessionAuthenticationStrategy)
1897 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationSuccessHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1898 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationFailureHandler(org.springframework.security.web.authentication.AuthenticationFailureHandler)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1899 - Declaração do método: org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler.onAuthenticationSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.web.savedrequest.RequestCache.getRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.isAlwaysUseDefaultTargetUrl()
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.getTargetUrlParameter()
javax.servlet.ServletRequest.getParameter(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.web.savedrequest.RequestCache.removeRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler.clearAuthenticationAttributes(javax.servlet.http.HttpServletRequest)
org.springframework.security.web.savedrequest.SavedRequest.getRedirectUrl()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.getRedirectStrategy()
org.springframework.security.web.RedirectStrategy.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
1900 - Declaração do método: org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler.setRequestCache(org.springframework.security.web.savedrequest.RequestCache)
1900 - Declaração do método: org.springframework.security.web.authentication.AuthenticationFailureHandler.onAuthenticationFailure(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
1900 - Declaração do método: org.springframework.security.web.authentication.Http403ForbiddenEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpServletResponse.sendError(I, java.lang.String)
1901 - Declaração do método: org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint.DelegatingAuthenticationEntryPoint(java.util.LinkedHashMap)
1901 - Declaração do método: org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
java.util.HashMap.keySet()
org.springframework.security.web.util.RequestMatcher.matches(javax.servlet.http.HttpServletRequest)
java.util.LinkedHashMap.get(java.lang.Object)
org.springframework.security.web.AuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.security.web.AuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
1902 - Declaração do método: org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint.setDefaultEntryPoint(org.springframework.security.web.AuthenticationEntryPoint)
1902 - Declaração do método: org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notEmpty(java.util.Map, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1903 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler.SimpleUrlAuthenticationSuccessHandler()
1903 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler.SimpleUrlAuthenticationSuccessHandler(java.lang.String)
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setDefaultTargetUrl(java.lang.String)
1904 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler.onAuthenticationSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler.clearAuthenticationAttributes(javax.servlet.http.HttpServletRequest)
1905 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler.clearAuthenticationAttributes(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getSession(Z)
javax.servlet.http.HttpSession.removeAttribute(java.lang.String)
javax.servlet.http.HttpSession.removeAttribute(java.lang.String)
1906 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.SimpleUrlAuthenticationFailureHandler()
1906 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.SimpleUrlAuthenticationFailureHandler(java.lang.String)
Métodos invocados: 
org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.setDefaultFailureUrl(java.lang.String)
1907 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.onAuthenticationFailure(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.Throwable.getMessage()
javax.servlet.http.HttpServletResponse.sendError(I, java.lang.String)
org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.saveException(javax.servlet.http.HttpServletRequest, org.springframework.security.core.AuthenticationException)
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.ServletRequest.getRequestDispatcher(java.lang.String)
javax.servlet.RequestDispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.RedirectStrategy.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
1908 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.saveException(javax.servlet.http.HttpServletRequest, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
javax.servlet.ServletRequest.setAttribute(java.lang.String, java.lang.Object)
javax.servlet.http.HttpServletRequest.getSession(Z)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
1909 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.setDefaultFailureUrl(java.lang.String)
Métodos invocados: 
org.springframework.security.web.util.UrlUtils.isValidRedirectUrl(java.lang.String)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
1910 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.isUseForward()
1910 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.setUseForward(Z)
1910 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.setRedirectStrategy(org.springframework.security.web.RedirectStrategy)
1910 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.getRedirectStrategy()
1910 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.isAllowSessionCreation()
1910 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.setAllowSessionCreation(Z)
1910 - Declaração do método: org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler.logout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
javax.servlet.http.HttpServletRequest.getSession(Z)
javax.servlet.http.HttpSession.invalidate()
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1911 - Declaração do método: org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler.isInvalidateHttpSession()
1911 - Declaração do método: org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler.setInvalidateHttpSession(Z)
1911 - Declaração do método: org.springframework.security.web.authentication.logout.LogoutHandler.logout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
1911 - Declaração do método: org.springframework.security.web.authentication.logout.LogoutFilter.LogoutFilter(org.springframework.security.web.authentication.logout.LogoutSuccessHandler, [Lorg.springframework.security.web.authentication.logout.LogoutHandler;)
Métodos invocados: 
org.springframework.util.Assert.notEmpty([Ljava.lang.Object;, java.lang.String)
java.util.Arrays.asList([Lorg.springframework.security.web.authentication.logout.LogoutHandler;)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1912 - Declaração do método: org.springframework.security.web.authentication.logout.LogoutFilter.LogoutFilter(java.lang.String, [Lorg.springframework.security.web.authentication.logout.LogoutHandler;)
Métodos invocados: 
org.springframework.util.Assert.notEmpty([Ljava.lang.Object;, java.lang.String)
java.util.Arrays.asList([Lorg.springframework.security.web.authentication.logout.LogoutHandler;)
org.springframework.util.StringUtils.hasLength(java.lang.String)
org.springframework.security.web.util.UrlUtils.isValidRedirectUrl(java.lang.String)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setDefaultTargetUrl(java.lang.String)
1913 - Declaração do método: org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.web.authentication.logout.LogoutFilter.requiresLogout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.logout.LogoutHandler.logout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.springframework.security.web.authentication.logout.LogoutSuccessHandler.onLogoutSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1914 - Declaração do método: org.springframework.security.web.authentication.logout.LogoutFilter.requiresLogout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getRequestURI()
java.lang.String.indexOf(I)
java.lang.String.substring(I, I)
java.lang.String.indexOf(I)
java.lang.String.substring(I, I)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.equals(java.lang.Object)
java.lang.String.endsWith(java.lang.String)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.endsWith(java.lang.String)
1915 - Declaração do método: org.springframework.security.web.authentication.logout.LogoutFilter.setFilterProcessesUrl(java.lang.String)
Métodos invocados: 
org.springframework.security.web.util.UrlUtils.isValidRedirectUrl(java.lang.String)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
1916 - Declaração do método: org.springframework.security.web.authentication.logout.LogoutFilter.getFilterProcessesUrl()
1916 - Declaração do método: org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler.onLogoutSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
1916 - Declaração do método: org.springframework.security.web.authentication.logout.LogoutSuccessHandler.onLogoutSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
1916 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails(javax.servlet.http.HttpServletRequest)
1916 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.getGrantedAuthorities()
Métodos invocados: 
org.springframework.security.core.authority.GrantedAuthoritiesContainer.getGrantedAuthorities()
1917 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.setGrantedAuthorities(java.util.List)
Métodos invocados: 
org.springframework.security.core.authority.MutableGrantedAuthoritiesContainer.setGrantedAuthorities(java.util.List)
1918 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.toString()
1919 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken.PreAuthenticatedAuthenticationToken(java.lang.Object, java.lang.Object)
1919 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken.PreAuthenticatedAuthenticationToken(java.lang.Object, java.lang.Object, java.util.Collection)
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.setAuthenticated(Z)
1920 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken.getCredentials()
1920 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken.getPrincipal()
1920 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1921 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.supports(java.lang.Class)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.Authentication.getPrincipal()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.Authentication.getCredentials()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.userdetails.AuthenticationUserDetailsService.loadUserDetails(org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken)
org.springframework.security.core.userdetails.UserDetailsChecker.check(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.Authentication.getCredentials()
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.Authentication.getDetails()
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
1922 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
1923 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.setPreAuthenticatedUserDetailsService(org.springframework.security.core.userdetails.AuthenticationUserDetailsService)
1923 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.setThrowExceptionWhenTokenRejected(Z)
1923 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.setUserDetailsChecker(org.springframework.security.core.userdetails.UserDetailsChecker)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1924 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.getOrder()
1924 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.setOrder(I)
1924 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesAuthenticationDetails.PreAuthenticatedGrantedAuthoritiesAuthenticationDetails(java.lang.Object)
1924 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesAuthenticationDetails.getGrantedAuthorities()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1925 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesAuthenticationDetails.setGrantedAuthorities(java.util.List)
Métodos invocados: 
java.util.Collections.unmodifiableList(java.util.List)
1926 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesAuthenticationDetails.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
1927 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedCredentialsNotFoundException.PreAuthenticatedCredentialsNotFoundException(java.lang.String)
1927 - Declaração do método: org.springframework.security.web.authentication.preauth.RequestHeaderAuthenticationFilter.getPreAuthenticatedPrincipal(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)
1928 - Declaração do método: org.springframework.security.web.authentication.preauth.RequestHeaderAuthenticationFilter.getPreAuthenticatedCredentials(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)
1929 - Declaração do método: org.springframework.security.web.authentication.preauth.RequestHeaderAuthenticationFilter.setPrincipalRequestHeader(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
1930 - Declaração do método: org.springframework.security.web.authentication.preauth.RequestHeaderAuthenticationFilter.setCredentialsRequestHeader(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
1931 - Declaração do método: org.springframework.security.web.authentication.preauth.RequestHeaderAuthenticationFilter.setExceptionIfHeaderMissing(Z)
1931 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsService.loadUserDetails(org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken)
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.getDetails()
org.springframework.util.Assert.notNull(java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.getDetails()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.getDetails()
org.springframework.security.core.authority.GrantedAuthoritiesContainer.getGrantedAuthorities()
org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsService.createuserDetails(org.springframework.security.core.Authentication, java.util.List)
1932 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsService.createuserDetails(org.springframework.security.core.Authentication, java.util.List)
Métodos invocados: 
java.security.Principal.getName()
1933 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1934 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.requiresAuthentication(javax.servlet.http.HttpServletRequest)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.doAuthenticate(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1935 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.doAuthenticate(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.getPreAuthenticatedPrincipal(javax.servlet.http.HttpServletRequest)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.getPreAuthenticatedCredentials(javax.servlet.http.HttpServletRequest)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.authentication.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.successfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.unsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
1936 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.requiresAuthentication(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.getPreAuthenticatedPrincipal(javax.servlet.http.HttpServletRequest)
java.security.Principal.getName()
java.lang.String.equals(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpServletRequest.getSession(Z)
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpSession.invalidate()
1937 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.successfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
java.lang.Object.getClass()
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
1938 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.unsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
javax.servlet.ServletRequest.setAttribute(java.lang.String, java.lang.Object)
1939 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
1939 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.setAuthenticationDetailsSource(org.springframework.security.authentication.AuthenticationDetailsSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1940 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
1940 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.setContinueFilterChainOnUnsuccessfulAuthentication(Z)
1940 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.setCheckForPrincipalChanges(Z)
1940 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.setInvalidateSessionOnPrincipalChange(Z)
1940 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.getPreAuthenticatedPrincipal(javax.servlet.http.HttpServletRequest)
1940 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.getPreAuthenticatedCredentials(javax.servlet.http.HttpServletRequest)
1940 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.WebXmlMappableAttributesRetriever.setResourceLoader(org.springframework.core.io.ResourceLoader)
1940 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.WebXmlMappableAttributesRetriever.getMappableAttributes()
1940 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.WebXmlMappableAttributesRetriever.afterPropertiesSet()
Métodos invocados: 
org.springframework.core.io.ResourceLoader.getResource(java.lang.String)
org.springframework.core.io.InputStreamSource.getInputStream()
org.springframework.security.web.authentication.preauth.j2ee.WebXmlMappableAttributesRetriever.getDocument(java.io.InputStream)
org.w3c.dom.Document.getElementsByTagName(java.lang.String)
org.w3c.dom.NodeList.getLength()
org.w3c.dom.NodeList.item(I)
org.w3c.dom.Element.getElementsByTagName(java.lang.String)
org.w3c.dom.NodeList.getLength()
org.w3c.dom.NodeList.item(I)
org.w3c.dom.Element.getElementsByTagName(java.lang.String)
org.w3c.dom.NodeList.getLength()
org.w3c.dom.NodeList.item(I)
org.w3c.dom.Node.getTextContent()
java.lang.String.trim()
java.util.ArrayList.add(java.lang.String)
org.apache.commons.logging.Log.info(java.lang.Object)
org.apache.commons.logging.Log.info(java.lang.Object)
java.util.Collections.unmodifiableSet(java.util.Set)
1941 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.WebXmlMappableAttributesRetriever.getDocument(java.io.InputStream)
Métodos invocados: 
javax.xml.parsers.DocumentBuilderFactory.newInstance()
javax.xml.parsers.DocumentBuilderFactory.setValidating(Z)
javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder()
javax.xml.parsers.DocumentBuilder.setEntityResolver(org.xml.sax.EntityResolver)
javax.xml.parsers.DocumentBuilder.parse(java.io.InputStream)
java.io.InputStream.close()
org.apache.commons.logging.Log.warn(java.lang.Object, java.lang.Throwable)
1942 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.WebXmlMappableAttributesRetriever$MyEntityResolver.resolveEntity(java.lang.String, java.lang.String)
1942 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.AbstractPreAuthenticatedAuthenticationDetailsSource()
1942 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1943 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.buildDetails(java.lang.Object)
Métodos invocados: 
org.springframework.security.web.authentication.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.getUserRoles(java.lang.Object, java.util.Set)
org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper.getGrantedAuthorities(java.util.Collection)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.authority.MutableGrantedAuthoritiesContainer.setGrantedAuthorities(java.util.List)
1944 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.getUserRoles(java.lang.Object, java.util.Set)
1944 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.setMappableRolesRetriever(org.springframework.security.core.authority.mapping.MappableAttributesRetriever)
Métodos invocados: 
org.springframework.security.core.authority.mapping.MappableAttributesRetriever.getMappableAttributes()
1945 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.setUserRoles2GrantedAuthoritiesMapper(org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper)
1945 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilter.getPreAuthenticatedPrincipal(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getUserPrincipal()
javax.servlet.http.HttpServletRequest.getUserPrincipal()
java.security.Principal.getName()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1946 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilter.getPreAuthenticatedCredentials(javax.servlet.http.HttpServletRequest)
1946 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSource.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSource()
1946 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSource.getUserRoles(java.lang.Object, java.util.Set)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.isUserInRole(java.lang.String)
java.util.ArrayList.add(java.lang.String)
1947 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getGroupsForCurrentUser()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getRunAsSubject()
org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getWebSphereGroups(javax.security.auth.Subject)
1948 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getCurrentUserName()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getRunAsSubject()
org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getSecurityName(javax.security.auth.Subject)
1949 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getSecurityName(javax.security.auth.Subject)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getWSCredentialClass()
javax.security.auth.Subject.getPublicCredentials(java.lang.Class)
java.util.Set.iterator()
java.util.Iterator.next()
org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getSecurityNameMethod()
org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.invokeMethod(java.lang.reflect.Method, java.lang.Object, [Ljava.lang.Object;)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1950 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getRunAsSubject()
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getRunAsSubjectMethod()
org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.invokeMethod(java.lang.reflect.Method, java.lang.Object, [Ljava.lang.Object;)
1951 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getWebSphereGroups(javax.security.auth.Subject)
Métodos invocados: 
org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getSecurityName(javax.security.auth.Subject)
org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getWebSphereGroups(java.lang.String)
1952 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getWebSphereGroups(java.lang.String)
Métodos invocados: 
javax.naming.Context.lookup(java.lang.String)
java.lang.Class.forName(java.lang.String)
javax.rmi.PortableRemoteObject.narrow(java.lang.Object, java.lang.Class)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getGroupsForUserMethod()
org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.invokeMethod(java.lang.reflect.Method, java.lang.Object, [Ljava.lang.Object;)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
javax.naming.Context.close()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
1953 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.invokeMethod(java.lang.reflect.Method, java.lang.Object, [Ljava.lang.Object;)
Métodos invocados: 
java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
java.lang.Object.getClass()
java.lang.Class.getName()
java.lang.reflect.Method.getName()
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
java.lang.Object.getClass()
java.lang.Class.getName()
java.lang.reflect.Method.getName()
java.util.Arrays.asList([Ljava.lang.Object;)
java.lang.Object.getClass()
java.lang.Class.getName()
java.lang.reflect.Method.getName()
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
java.lang.Object.getClass()
java.lang.Class.getName()
java.lang.reflect.Method.getName()
java.util.Arrays.asList([Ljava.lang.Object;)
java.lang.Object.getClass()
java.lang.Class.getName()
java.lang.reflect.Method.getName()
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
java.lang.Object.getClass()
java.lang.Class.getName()
java.lang.reflect.Method.getName()
java.util.Arrays.asList([Ljava.lang.Object;)
1954 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getMethod(java.lang.String, java.lang.String, [Ljava.lang.String;)
Métodos invocados: 
java.lang.Class.forName(java.lang.String)
java.lang.Class.forName(java.lang.String)
java.lang.Class.getDeclaredMethod(java.lang.String, [Ljava.lang.Class;)
org.apache.commons.logging.Log.error(java.lang.Object)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.logging.Log.error(java.lang.Object)
1955 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getRunAsSubjectMethod()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getMethod(java.lang.String, java.lang.String, [Ljava.lang.String;)
1956 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getGroupsForUserMethod()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getMethod(java.lang.String, java.lang.String, [Ljava.lang.String;)
1957 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getSecurityNameMethod()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getMethod(java.lang.String, java.lang.String, [Ljava.lang.String;)
1958 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getWSCredentialClass()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getClass(java.lang.String)
1959 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.DefaultWASUsernameAndGroupsExtractor.getClass(java.lang.String)
Métodos invocados: 
java.lang.Class.forName(java.lang.String)
org.apache.commons.logging.Log.error(java.lang.Object)
1960 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSpherePreAuthenticatedProcessingFilter.WebSpherePreAuthenticatedProcessingFilter()
1960 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSpherePreAuthenticatedProcessingFilter.WebSpherePreAuthenticatedProcessingFilter(org.springframework.security.web.authentication.preauth.websphere.WASUsernameAndGroupsExtractor)
1960 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSpherePreAuthenticatedProcessingFilter.getPreAuthenticatedPrincipal(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.web.authentication.preauth.websphere.WASUsernameAndGroupsExtractor.getCurrentUserName()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1961 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSpherePreAuthenticatedProcessingFilter.getPreAuthenticatedCredentials(javax.servlet.http.HttpServletRequest)
1961 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSpherePreAuthenticatedWebAuthenticationDetailsSource.WebSpherePreAuthenticatedWebAuthenticationDetailsSource()
1961 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSpherePreAuthenticatedAuthenticationDetailsSource.WebSpherePreAuthenticatedAuthenticationDetailsSource()
1961 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSpherePreAuthenticatedAuthenticationDetailsSource.WebSpherePreAuthenticatedAuthenticationDetailsSource(org.springframework.security.web.authentication.preauth.websphere.WASUsernameAndGroupsExtractor)
1961 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSpherePreAuthenticatedAuthenticationDetailsSource.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1962 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSpherePreAuthenticatedAuthenticationDetailsSource.buildDetails(java.lang.Object)
Métodos invocados: 
org.springframework.security.web.authentication.preauth.websphere.WebSpherePreAuthenticatedAuthenticationDetailsSource.getWebSphereGroupsBasedGrantedAuthorities()
org.springframework.security.core.authority.MutableGrantedAuthoritiesContainer.setGrantedAuthorities(java.util.List)
1963 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSpherePreAuthenticatedAuthenticationDetailsSource.getWebSphereGroupsBasedGrantedAuthorities()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.websphere.WASUsernameAndGroupsExtractor.getGroupsForCurrentUser()
org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper.getGrantedAuthorities(java.util.Collection)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1964 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSpherePreAuthenticatedAuthenticationDetailsSource.setWebSphereGroups2GrantedAuthoritiesMapper(org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper)
1964 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WASUsernameAndGroupsExtractor.getGroupsForCurrentUser()
1964 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WASUsernameAndGroupsExtractor.getCurrentUserName()
1964 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSphere2SpringSecurityPropagationInterceptor.WebSphere2SpringSecurityPropagationInterceptor()
1964 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSphere2SpringSecurityPropagationInterceptor.WebSphere2SpringSecurityPropagationInterceptor(org.springframework.security.web.authentication.preauth.websphere.WASUsernameAndGroupsExtractor)
1964 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSphere2SpringSecurityPropagationInterceptor.invoke(org.aopalliance.intercept.MethodInvocation)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.preauth.websphere.WebSphere2SpringSecurityPropagationInterceptor.authenticateSpringSecurityWithWASCredentials(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.aopalliance.intercept.Joinpoint.proceed()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
1965 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSphere2SpringSecurityPropagationInterceptor.authenticateSpringSecurityWithWASCredentials(java.lang.Object)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
org.springframework.util.Assert.notNull(java.lang.Object)
org.springframework.security.web.authentication.preauth.websphere.WASUsernameAndGroupsExtractor.getCurrentUserName()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.authentication.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
1966 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSphere2SpringSecurityPropagationInterceptor.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
1966 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSphere2SpringSecurityPropagationInterceptor.setAuthenticationDetailsSource(org.springframework.security.authentication.AuthenticationDetailsSource)
1966 - Declaração do método: org.springframework.security.web.authentication.preauth.x509.X509AuthenticationFilter.getPreAuthenticatedPrincipal(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.web.authentication.preauth.x509.X509AuthenticationFilter.extractClientCertificate(javax.servlet.http.HttpServletRequest)
org.springframework.security.web.authentication.preauth.x509.X509PrincipalExtractor.extractPrincipal(java.security.cert.X509Certificate)
1967 - Declaração do método: org.springframework.security.web.authentication.preauth.x509.X509AuthenticationFilter.getPreAuthenticatedCredentials(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.web.authentication.preauth.x509.X509AuthenticationFilter.extractClientCertificate(javax.servlet.http.HttpServletRequest)
1968 - Declaração do método: org.springframework.security.web.authentication.preauth.x509.X509AuthenticationFilter.extractClientCertificate(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getAttribute(java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1969 - Declaração do método: org.springframework.security.web.authentication.preauth.x509.X509AuthenticationFilter.setPrincipalExtractor(org.springframework.security.web.authentication.preauth.x509.X509PrincipalExtractor)
1969 - Declaração do método: org.springframework.security.web.authentication.preauth.x509.X509PrincipalExtractor.extractPrincipal(java.security.cert.X509Certificate)
1969 - Declaração do método: org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractor.SubjectDnX509PrincipalExtractor()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractor.setSubjectDnRegex(java.lang.String)
1970 - Declaração do método: org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractor.extractPrincipal(java.security.cert.X509Certificate)
Métodos invocados: 
java.security.cert.X509Certificate.getSubjectDN()
java.security.Principal.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.util.regex.Matcher.find()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
java.util.regex.Matcher.groupCount()
java.util.regex.Matcher.group(I)
org.apache.commons.logging.Log.debug(java.lang.Object)
1971 - Declaração do método: org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractor.setSubjectDnRegex(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
java.util.regex.Pattern.compile(java.lang.String, I)
1972 - Declaração do método: org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractor.setMessageSource(org.springframework.context.MessageSource)
1972 - Declaração do método: org.springframework.security.web.authentication.rememberme.CookieTheftException.CookieTheftException(java.lang.String)
1972 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenRepository.createNewToken(org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken)
1972 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenRepository.updateToken(java.lang.String, java.lang.String, java.util.Date)
1972 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenRepository.getTokenForSeries(java.lang.String)
1972 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenRepository.removeUserTokens(java.lang.String)
1972 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1973 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.web.authentication.RememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.onSuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
java.lang.Object.getClass()
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.springframework.security.web.authentication.RememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.onUnsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1974 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.onSuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
1974 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.onUnsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
1974 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.getRememberMeServices()
1974 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
1974 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
1974 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.setRememberMeServices(org.springframework.security.web.authentication.RememberMeServices)
1974 - Declaração do método: org.springframework.security.web.authentication.rememberme.InMemoryTokenRepositoryImpl.createNewToken(org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken)
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getSeries()
java.util.Map.get(java.lang.Object)
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getSeries()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getSeries()
java.util.Map.put(java.lang.String, org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken)
1975 - Declaração do método: org.springframework.security.web.authentication.rememberme.InMemoryTokenRepositoryImpl.updateToken(java.lang.String, java.lang.String, java.util.Date)
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.InMemoryTokenRepositoryImpl.getTokenForSeries(java.lang.String)
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getUsername()
java.util.Map.put(java.lang.String, org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken)
1976 - Declaração do método: org.springframework.security.web.authentication.rememberme.InMemoryTokenRepositoryImpl.getTokenForSeries(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
1977 - Declaração do método: org.springframework.security.web.authentication.rememberme.InMemoryTokenRepositoryImpl.removeUserTokens(java.lang.String)
Métodos invocados: 
java.util.Map.keySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map.get(java.lang.Object)
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getUsername()
java.lang.String.equals(java.lang.Object)
java.util.Iterator.remove()
1978 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.PersistentRememberMeToken(java.lang.String, java.lang.String, java.lang.String, java.util.Date)
1978 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getUsername()
1978 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getSeries()
1978 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getTokenValue()
1978 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getDate()
1978 - Declaração do método: org.springframework.security.web.authentication.rememberme.InvalidCookieException.InvalidCookieException(java.lang.String)
1978 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.String;)
java.lang.Long.longValue()
org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices.isTokenExpired(J)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getUserDetailsService()
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices.makeTokenSignature(J, java.lang.String, java.lang.String)
java.lang.String.equals(java.lang.Object)
1979 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices.makeTokenSignature(J, java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getKey()
java.security.MessageDigest.getInstance(java.lang.String)
java.lang.String.getBytes()
java.security.MessageDigest.digest([B)
org.springframework.security.core.codec.Hex.encode([B)
1980 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices.isTokenExpired(J)
Métodos invocados: 
java.lang.System.currentTimeMillis()
1981 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices.onLoginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices.retrieveUserName(org.springframework.security.core.Authentication)
org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices.retrievePassword(org.springframework.security.core.Authentication)
org.springframework.util.StringUtils.hasLength(java.lang.String)
org.springframework.util.StringUtils.hasLength(java.lang.String)
org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices.calculateLoginLifetime(javax.servlet.http.HttpServletRequest, org.springframework.security.core.Authentication)
java.lang.System.currentTimeMillis()
org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices.makeTokenSignature(J, java.lang.String, java.lang.String)
java.lang.Long.toString(J)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setCookie([Ljava.lang.String;, I, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1982 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices.calculateLoginLifetime(javax.servlet.http.HttpServletRequest, org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getTokenValiditySeconds()
1983 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices.retrieveUserName(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices.isInstanceOfUserDetails(org.springframework.security.core.Authentication)
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.core.Authentication.getPrincipal()
java.lang.Object.toString()
1984 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices.retrievePassword(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices.isInstanceOfUserDetails(org.springframework.security.core.Authentication)
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.springframework.security.core.Authentication.getCredentials()
org.springframework.security.core.Authentication.getCredentials()
java.lang.Object.toString()
1985 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices.isInstanceOfUserDetails(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.core.Authentication.getPrincipal()
1986 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.PersistentTokenBasedRememberMeServices()
Métodos invocados: 
java.security.SecureRandom.getInstance(java.lang.String)
1987 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.String;)
org.springframework.security.web.authentication.rememberme.PersistentTokenRepository.getTokenForSeries(java.lang.String)
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getTokenValue()
java.lang.String.equals(java.lang.Object)
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getUsername()
org.springframework.security.web.authentication.rememberme.PersistentTokenRepository.removeUserTokens(java.lang.String)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getDate()
java.util.Date.getTime()
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getTokenValiditySeconds()
java.lang.System.currentTimeMillis()
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getUsername()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getSeries()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getUsername()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getSeries()
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.generateTokenData()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getSeries()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getTokenValue()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getDate()
org.springframework.security.web.authentication.rememberme.PersistentTokenRepository.updateToken(java.lang.String, java.lang.String, java.util.Date)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.addCookie(org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getUserDetailsService()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getUsername()
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
1988 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.onLoginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
Métodos invocados: 
java.security.Principal.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.generateSeriesData()
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.generateTokenData()
org.springframework.security.web.authentication.rememberme.PersistentTokenRepository.createNewToken(org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.addCookie(org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
1989 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.logout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
Métodos invocados: 
java.security.Principal.getName()
org.springframework.security.web.authentication.rememberme.PersistentTokenRepository.removeUserTokens(java.lang.String)
1990 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.generateSeriesData()
Métodos invocados: 
java.security.SecureRandom.nextBytes([B)
org.springframework.security.core.codec.Base64.encode([B)
1991 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.generateTokenData()
Métodos invocados: 
java.security.SecureRandom.nextBytes([B)
org.springframework.security.core.codec.Base64.encode([B)
1992 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.addCookie(org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getSeries()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getTokenValue()
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getTokenValiditySeconds()
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setCookie([Ljava.lang.String;, I, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1993 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.setTokenRepository(org.springframework.security.web.authentication.rememberme.PersistentTokenRepository)
1993 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.setSeriesLength(I)
1993 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.setTokenLength(I)
1993 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.setTokenValiditySeconds(I)
Métodos invocados: 
org.springframework.util.Assert.isTrue(Z, java.lang.String)
1994 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1995 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.extractRememberMeCookie(javax.servlet.http.HttpServletRequest)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.String.length()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.cancelCookie(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.decodeCookie(java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.core.userdetails.UserDetailsChecker.check(org.springframework.security.core.userdetails.UserDetails)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.createSuccessfulAuthentication(javax.servlet.http.HttpServletRequest, org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.cancelCookie(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
java.lang.Throwable.getMessage()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.Throwable.getMessage()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.Throwable.getMessage()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.cancelCookie(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1996 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.extractRememberMeCookie(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getCookies()
javax.servlet.http.Cookie.getName()
java.lang.String.equals(java.lang.Object)
javax.servlet.http.Cookie.getValue()
1997 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.createSuccessfulAuthentication(javax.servlet.http.HttpServletRequest, org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.authentication.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
1998 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.decodeCookie(java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.getBytes()
org.springframework.security.core.codec.Base64.isBase64([B)
java.lang.String.getBytes()
org.springframework.security.core.codec.Base64.decode([B)
org.springframework.util.StringUtils.delimitedListToStringArray(java.lang.String, java.lang.String)
java.lang.String.equalsIgnoreCase(java.lang.String)
java.lang.String.equalsIgnoreCase(java.lang.String)
java.lang.String.startsWith(java.lang.String)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
1999 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.encodeCookie([Ljava.lang.String;)
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
java.lang.String.getBytes()
org.springframework.security.core.codec.Base64.encode([B)
java.lang.AbstractStringBuilder.length()
java.lang.AbstractStringBuilder.charAt(I)
java.lang.AbstractStringBuilder.length()
java.lang.StringBuilder.deleteCharAt(I)
java.lang.StringBuilder.toString()
2000 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.cancelCookie(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.onLoginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2001 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.onLoginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2001 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.rememberMeRequested(javax.servlet.http.HttpServletRequest, java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.onLoginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
2002 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.onLoginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
2002 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.rememberMeRequested(javax.servlet.http.HttpServletRequest, java.lang.String)
Métodos invocados: 
javax.servlet.ServletRequest.getParameter(java.lang.String)
java.lang.String.equalsIgnoreCase(java.lang.String)
java.lang.String.equalsIgnoreCase(java.lang.String)
java.lang.String.equalsIgnoreCase(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
2003 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2003 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.cancelCookie(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.Cookie.setMaxAge(I)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getCookiePath(javax.servlet.http.HttpServletRequest)
javax.servlet.http.Cookie.setPath(java.lang.String)
javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
2004 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setCookie([Ljava.lang.String;, I, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.encodeCookie([Ljava.lang.String;)
javax.servlet.http.Cookie.setMaxAge(I)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getCookiePath(javax.servlet.http.HttpServletRequest)
javax.servlet.http.Cookie.setPath(java.lang.String)
javax.servlet.http.Cookie.setSecure(Z)
javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
2005 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getCookiePath(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.length()
2006 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.logout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
java.security.Principal.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.cancelCookie(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2007 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setCookieName(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
2008 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getCookieName()
2008 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setAlwaysRemember(Z)
2008 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setParameter(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
2009 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getParameter()
2009 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getUserDetailsService()
2009 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2010 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setKey(java.lang.String)
2010 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getKey()
2010 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setTokenValiditySeconds(I)
2010 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getTokenValiditySeconds()
2010 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setUseSecureCookie(Z)
2010 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getAuthenticationDetailsSource()
2010 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setAuthenticationDetailsSource(org.springframework.security.authentication.AuthenticationDetailsSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2011 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationException.RememberMeAuthenticationException(java.lang.String)
2011 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl.initDao()
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
2012 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl.createNewToken(org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken)
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getUsername()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getSeries()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getTokenValue()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getDate()
org.springframework.jdbc.object.SqlUpdate.update([Ljava.lang.Object;)
2013 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl.updateToken(java.lang.String, java.lang.String, java.util.Date)
Métodos invocados: 
org.springframework.jdbc.object.SqlUpdate.update([Ljava.lang.Object;)
2014 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl.getTokenForSeries(java.lang.String)
Métodos invocados: 
org.springframework.jdbc.object.SqlQuery.findObject(java.lang.String)
org.apache.commons.logging.Log.error(java.lang.Object)
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
2015 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl.removeUserTokens(java.lang.String)
Métodos invocados: 
org.springframework.jdbc.object.SqlUpdate.update(java.lang.String)
2016 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl.setCreateTableOnStartup(Z)
2016 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl$TokensBySeriesMapping.TokensBySeriesMapping(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
2017 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl$TokensBySeriesMapping.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getString(I)
java.sql.ResultSet.getString(I)
java.sql.ResultSet.getString(I)
java.sql.ResultSet.getTimestamp(I)
2018 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl$UpdateToken.UpdateToken(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.SqlUpdate.setMaxRowsAffected(I)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
2019 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl$InsertToken.InsertToken(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
2020 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl$RemoveUserTokens.RemoveUserTokens(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
2021 - Declaração do método: org.springframework.security.web.authentication.session.NullAuthenticatedSessionStrategy.onAuthentication(org.springframework.security.core.Authentication, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2021 - Declaração do método: org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy.onAuthentication(org.springframework.security.core.Authentication, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getSession(Z)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpServletRequest.isRequestedSessionIdValid()
javax.servlet.http.HttpSession.getId()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy.createMigratedAttributeMap(javax.servlet.http.HttpSession)
javax.servlet.http.HttpSession.invalidate()
javax.servlet.http.HttpServletRequest.getSession(Z)
org.apache.commons.logging.Log.isDebugEnabled()
javax.servlet.http.HttpSession.getId()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpSession.getId()
java.lang.String.equals(java.lang.Object)
org.apache.commons.logging.Log.warn(java.lang.Object)
java.util.HashMap.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
2022 - Declaração do método: org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy.onSessionChange(java.lang.String, javax.servlet.http.HttpSession, org.springframework.security.core.Authentication)
2022 - Declaração do método: org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy.createMigratedAttributeMap(javax.servlet.http.HttpSession)
Métodos invocados: 
javax.servlet.http.HttpSession.getAttributeNames()
java.util.Enumeration.hasMoreElements()
java.util.Enumeration.nextElement()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
java.util.HashMap.put(java.lang.String, java.lang.Object)
java.util.List.isEmpty()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
java.util.HashMap.put(java.lang.String, java.lang.Object)
2023 - Declaração do método: org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy.setMigrateSessionAttributes(Z)
2023 - Declaração do método: org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy.setRetainedAttributes(java.util.List)
2023 - Declaração do método: org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy.setAlwaysCreateSession(Z)
2023 - Declaração do método: org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy.ConcurrentSessionControlStrategy(org.springframework.security.core.session.SessionRegistry)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2024 - Declaração do método: org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy.onAuthentication(org.springframework.security.core.Authentication, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy.checkAuthenticationAllowed(org.springframework.security.core.Authentication, javax.servlet.http.HttpServletRequest)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.getId()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.session.SessionRegistry.registerNewSession(java.lang.String, java.lang.Object)
2025 - Declaração do método: org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy.checkAuthenticationAllowed(org.springframework.security.core.Authentication, javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.session.SessionRegistry.getAllSessions(java.lang.Object, Z)
java.util.List.size()
org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy.getMaximumSessionsForThisUser(org.springframework.security.core.Authentication)
javax.servlet.http.HttpServletRequest.getSession(Z)
org.springframework.security.core.session.SessionInformation.getSessionId()
javax.servlet.http.HttpSession.getId()
java.lang.String.equals(java.lang.Object)
org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy.allowableSessionsExceeded(java.util.List, I, org.springframework.security.core.session.SessionRegistry)
2026 - Declaração do método: org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy.getMaximumSessionsForThisUser(org.springframework.security.core.Authentication)
2026 - Declaração do método: org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy.allowableSessionsExceeded(java.util.List, I, org.springframework.security.core.session.SessionRegistry)
Métodos invocados: 
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
java.util.List.size()
java.util.List.get(I)
org.springframework.security.core.session.SessionInformation.getLastRequest()
org.springframework.security.core.session.SessionInformation.getLastRequest()
java.util.Date.before(java.util.Date)
java.util.List.get(I)
org.springframework.security.core.session.SessionInformation.expireNow()
2027 - Declaração do método: org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy.onSessionChange(java.lang.String, javax.servlet.http.HttpSession, org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.core.session.SessionRegistry.removeSessionInformation(java.lang.String)
javax.servlet.http.HttpSession.getId()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.session.SessionRegistry.registerNewSession(java.lang.String, java.lang.Object)
2028 - Declaração do método: org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy.setExceptionIfMaximumExceeded(Z)
2028 - Declaração do método: org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy.setMaximumSessions(I)
Métodos invocados: 
org.springframework.util.Assert.isTrue(Z, java.lang.String)
2029 - Declaração do método: org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy.setMessageSource(org.springframework.context.MessageSource)
2029 - Declaração do método: org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy.setAlwaysCreateSession(Z)
2029 - Declaração do método: org.springframework.security.web.authentication.session.SessionAuthenticationException.SessionAuthenticationException(java.lang.String)
2029 - Declaração do método: org.springframework.security.web.authentication.session.SessionAuthenticationStrategy.onAuthentication(org.springframework.security.core.Authentication, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2029 - Declaração do método: org.springframework.security.web.authentication.switchuser.AuthenticationSwitchUserEvent.AuthenticationSwitchUserEvent(org.springframework.security.core.Authentication, org.springframework.security.core.userdetails.UserDetails)
2029 - Declaração do método: org.springframework.security.web.authentication.switchuser.AuthenticationSwitchUserEvent.getTargetUser()
2029 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserGrantedAuthority.SwitchUserGrantedAuthority(java.lang.String, org.springframework.security.core.Authentication)
2029 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserGrantedAuthority.getSource()
2029 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.util.Assert.isNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.isNull(java.lang.Object, java.lang.String)
2030 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.requiresSwitchUser(javax.servlet.http.HttpServletRequest)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.attemptSwitchUser(javax.servlet.http.HttpServletRequest)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.web.authentication.AuthenticationSuccessHandler.onAuthenticationSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.springframework.security.web.authentication.AuthenticationFailureHandler.onAuthenticationFailure(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.requiresExitUser(javax.servlet.http.HttpServletRequest)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.attemptExitUser(javax.servlet.http.HttpServletRequest)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.web.authentication.AuthenticationSuccessHandler.onAuthenticationSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
2031 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.attemptSwitchUser(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getParameter(java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetailsChecker.check(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.createSwitchUserToken(javax.servlet.http.HttpServletRequest, org.springframework.security.core.userdetails.UserDetails)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
2032 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.attemptExitUser(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.getSourceAuthentication(org.springframework.security.core.Authentication)
org.apache.commons.logging.Log.error(java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
2033 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.createSwitchUserToken(javax.servlet.http.HttpServletRequest, org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.web.authentication.switchuser.SwitchUserAuthorityChanger.modifyGrantedAuthorities(org.springframework.security.core.userdetails.UserDetails, org.springframework.security.core.Authentication, java.util.Collection)
java.util.List.add(org.springframework.security.core.GrantedAuthority)
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.springframework.security.authentication.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
2034 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.getSourceAuthentication(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.core.Authentication.getAuthorities()
org.springframework.security.web.authentication.switchuser.SwitchUserGrantedAuthority.getSource()
org.apache.commons.logging.Log.debug(java.lang.Object)
2035 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.requiresExitUser(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.stripUri(javax.servlet.http.HttpServletRequest)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.endsWith(java.lang.String)
2036 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.requiresSwitchUser(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.stripUri(javax.servlet.http.HttpServletRequest)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.endsWith(java.lang.String)
2037 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
2037 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setAuthenticationDetailsSource(org.springframework.security.authentication.AuthenticationDetailsSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2038 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setMessageSource(org.springframework.context.MessageSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2039 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
2039 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setExitUserUrl(java.lang.String)
Métodos invocados: 
org.springframework.security.web.util.UrlUtils.isValidRedirectUrl(java.lang.String)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
2040 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setSwitchUserUrl(java.lang.String)
Métodos invocados: 
org.springframework.security.web.util.UrlUtils.isValidRedirectUrl(java.lang.String)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
2041 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setTargetUrl(java.lang.String)
2041 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setSuccessHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2042 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setSwitchFailureUrl(java.lang.String)
Métodos invocados: 
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.web.util.UrlUtils.isValidRedirectUrl(java.lang.String)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
2043 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setFailureHandler(org.springframework.security.web.authentication.AuthenticationFailureHandler)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2044 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setSwitchUserAuthorityChanger(org.springframework.security.web.authentication.switchuser.SwitchUserAuthorityChanger)
2044 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setUserDetailsChecker(org.springframework.security.core.userdetails.UserDetailsChecker)
2044 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilter.stripUri(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getRequestURI()
java.lang.String.indexOf(I)
java.lang.String.substring(I, I)
2045 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserAuthorityChanger.modifyGrantedAuthorities(org.springframework.security.core.userdetails.UserDetails, org.springframework.security.core.Authentication, java.util.Collection)
2045 - Declaração do método: org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.DefaultLoginPageGeneratingFilter(org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter)
Métodos invocados: 
org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.init(org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter, org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter)
org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.init(org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter, org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter)
2046 - Declaração do método: org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.DefaultLoginPageGeneratingFilter(org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter, org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter)
Métodos invocados: 
org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.init(org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter, org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter)
2047 - Declaração do método: org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.init(org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter, org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter)
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getFilterProcessesUrl()
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.getUsernameParameter()
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.getPasswordParameter()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getRememberMeServices()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getRememberMeServices()
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getParameter()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getFilterProcessesUrl()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getRememberMeServices()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getRememberMeServices()
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getParameter()
2048 - Declaração do método: org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.isLoginUrlRequest(javax.servlet.http.HttpServletRequest)
org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.generateLoginPageHtml(javax.servlet.http.HttpServletRequest)
javax.servlet.ServletResponse.setContentType(java.lang.String)
java.lang.String.length()
javax.servlet.ServletResponse.setContentLength(I)
javax.servlet.ServletResponse.getWriter()
java.io.PrintWriter.write(java.lang.String)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
2049 - Declaração do método: org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.generateLoginPageHtml(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getParameter(java.lang.String)
javax.servlet.http.HttpServletRequest.getSession(Z)
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
2050 - Declaração do método: org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.isLoginUrlRequest(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getRequestURI()
java.lang.String.indexOf(I)
java.lang.String.substring(I, I)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.equals(java.lang.Object)
java.lang.String.endsWith(java.lang.String)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.endsWith(java.lang.String)
2051 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthUtils.encodePasswordInA1Format(java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthUtils.md5Hex(java.lang.String)
2052 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthUtils.splitIgnoringQuotes(java.lang.String, C)
Métodos invocados: 
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.String.charAt(I)
java.lang.String.charAt(I)
java.lang.String.substring(I, I)
java.util.List.add(java.lang.String)
java.lang.String.substring(I, I)
java.util.List.add(java.lang.String)
java.util.List.size()
java.util.List.toArray([Ljava.lang.String;)
2053 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthUtils.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthUtils.md5Hex(java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthUtils.encodePasswordInA1Format(java.lang.String, java.lang.String, java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthUtils.md5Hex(java.lang.String)
2054 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthUtils.splitEachArrayElementAndCreateMap([Ljava.lang.String;, java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.util.StringUtils.replace(java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthUtils.split(java.lang.String, java.lang.String)
java.lang.String.trim()
java.lang.String.trim()
java.util.Map.put(java.lang.String, java.lang.String)
2055 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthUtils.split(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
java.lang.String.length()
java.lang.String.indexOf(java.lang.String)
java.lang.String.substring(I, I)
java.lang.String.substring(I)
2056 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthUtils.md5Hex(java.lang.String)
Métodos invocados: 
java.security.MessageDigest.getInstance(java.lang.String)
java.lang.String.getBytes()
java.security.MessageDigest.digest([B)
org.springframework.security.core.codec.Hex.encode([B)
2057 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.isIgnoreFailure()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2058 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)
java.lang.String.startsWith(java.lang.String)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.extractAndDecodeHeader(java.lang.String, javax.servlet.http.HttpServletRequest)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.authenticationIsRequired(java.lang.String)
org.springframework.security.authentication.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.web.authentication.RememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.onSuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.RememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.onUnsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.web.AuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
2059 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilter.extractAndDecodeHeader(java.lang.String, javax.servlet.http.HttpServletRequest)
Métodos invocados: 
java.lang.String.substring(I)
java.lang.String.getBytes(java.lang.String)
org.springframework.security.core.codec.Base64.decode([B)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.getCredentialsCharset(javax.servlet.http.HttpServletRequest)
java.lang.String.indexOf(java.lang.String)
java.lang.String.substring(I, I)
java.lang.String.substring(I)
2060 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilter.authenticationIsRequired(java.lang.String)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.isAuthenticated()
java.security.Principal.getName()
java.lang.String.equals(java.lang.Object)
2061 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilter.onSuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
2061 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilter.onUnsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
2061 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilter.getAuthenticationEntryPoint()
2061 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilter.setAuthenticationEntryPoint(org.springframework.security.web.AuthenticationEntryPoint)
2061 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilter.getAuthenticationManager()
2061 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
2061 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilter.isIgnoreFailure()
2061 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilter.setIgnoreFailure(Z)
2061 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilter.setAuthenticationDetailsSource(org.springframework.security.authentication.AuthenticationDetailsSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2062 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilter.setRememberMeServices(org.springframework.security.web.authentication.RememberMeServices)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2063 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilter.setCredentialsCharset(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
2064 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilter.getCredentialsCharset(javax.servlet.http.HttpServletRequest)
2064 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.getOrder()
2064 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.setOrder(I)
2064 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.afterPropertiesSet()
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
2065 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
java.lang.System.currentTimeMillis()
org.springframework.security.web.authentication.www.DigestAuthUtils.md5Hex(java.lang.String)
java.lang.String.getBytes()
org.springframework.security.core.codec.Base64.encode([B)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpServletResponse.addHeader(java.lang.String, java.lang.String)
java.lang.Throwable.getMessage()
javax.servlet.http.HttpServletResponse.sendError(I, java.lang.String)
2066 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.getKey()
2066 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.getNonceValiditySeconds()
2066 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.getRealmName()
2066 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.setKey(java.lang.String)
2066 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.setNonceValiditySeconds(I)
2066 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.setRealmName(java.lang.String)
2066 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2067 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)
java.lang.String.startsWith(java.lang.String)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.getKey()
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.getRealmName()
org.springframework.security.web.authentication.www.DigestAuthenticationFilter$DigestData.validateAndDecode(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.fail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter$DigestData.getUsername()
org.springframework.security.core.userdetails.UserCache.getUserFromCache(java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter$DigestData.getUsername()
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserCache.putUserInCache(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.userdetails.UserDetails.getPassword()
javax.servlet.http.HttpServletRequest.getMethod()
org.springframework.security.web.authentication.www.DigestAuthenticationFilter$DigestData.calculateServerDigest(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter$DigestData.getResponse()
java.lang.String.equals(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter$DigestData.getUsername()
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserCache.putUserInCache(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.userdetails.UserDetails.getPassword()
javax.servlet.http.HttpServletRequest.getMethod()
org.springframework.security.web.authentication.www.DigestAuthenticationFilter$DigestData.calculateServerDigest(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter$DigestData.getUsername()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.fail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter$DigestData.getResponse()
java.lang.String.equals(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.web.authentication.www.DigestAuthenticationFilter$DigestData.getResponse()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.fail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter$DigestData.isNonceExpired()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.fail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.web.authentication.www.DigestAuthenticationFilter$DigestData.getUsername()
org.springframework.security.web.authentication.www.DigestAuthenticationFilter$DigestData.getResponse()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.createSuccessfulAuthentication(javax.servlet.http.HttpServletRequest, org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
2068 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter.createSuccessfulAuthentication(javax.servlet.http.HttpServletRequest, org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.springframework.security.authentication.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
2069 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter.fail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
2070 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter.getAuthenticationEntryPoint()
2070 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter.getUserCache()
2070 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter.getUserDetailsService()
2070 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter.setAuthenticationDetailsSource(org.springframework.security.authentication.AuthenticationDetailsSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2071 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter.setAuthenticationEntryPoint(org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint)
2071 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter.setMessageSource(org.springframework.context.MessageSource)
2071 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter.setPasswordAlreadyEncoded(Z)
2071 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter.setUserCache(org.springframework.security.core.userdetails.UserCache)
2071 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
2071 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter.setCreateAuthenticatedToken(Z)
2071 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter$DigestData.DigestData(java.lang.String)
Métodos invocados: 
java.lang.String.substring(I)
org.springframework.security.web.authentication.www.DigestAuthUtils.splitIgnoringQuotes(java.lang.String, C)
org.springframework.security.web.authentication.www.DigestAuthUtils.splitEachArrayElementAndCreateMap([Ljava.lang.String;, java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
2072 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter$DigestData.validateAndDecode(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
java.lang.String.equals(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
java.lang.String.getBytes()
org.springframework.security.core.codec.Base64.isBase64([B)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
java.lang.String.getBytes()
org.springframework.security.core.codec.Base64.decode([B)
org.springframework.util.StringUtils.delimitedListToStringArray(java.lang.String, java.lang.String)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
java.lang.Long.longValue()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthUtils.md5Hex(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
2073 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter$DigestData.calculateServerDigest(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthUtils.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
2074 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter$DigestData.isNonceExpired()
Métodos invocados: 
java.lang.System.currentTimeMillis()
2075 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter$DigestData.getUsername()
2075 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilter$DigestData.getResponse()
2075 - Declaração do método: org.springframework.security.web.authentication.www.NonceExpiredException.NonceExpiredException(java.lang.String)
2075 - Declaração do método: org.springframework.security.web.authentication.www.NonceExpiredException.NonceExpiredException(java.lang.String, java.lang.Throwable)
2075 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
2076 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
javax.servlet.http.HttpServletResponse.addHeader(java.lang.String, java.lang.String)
java.lang.Throwable.getMessage()
javax.servlet.http.HttpServletResponse.sendError(I, java.lang.String)
2077 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint.getRealmName()
2077 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint.setRealmName(java.lang.String)
2077 - Declaração do método: org.springframework.security.web.context.SecurityContextRepository.loadContext(org.springframework.security.web.context.HttpRequestResponseHolder)
2077 - Declaração do método: org.springframework.security.web.context.SecurityContextRepository.saveContext(org.springframework.security.core.context.SecurityContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2077 - Declaração do método: org.springframework.security.web.context.SecurityContextRepository.containsContext(javax.servlet.http.HttpServletRequest)
2077 - Declaração do método: org.springframework.security.web.context.NullSecurityContextRepository.containsContext(javax.servlet.http.HttpServletRequest)
2077 - Declaração do método: org.springframework.security.web.context.NullSecurityContextRepository.loadContext(org.springframework.security.web.context.HttpRequestResponseHolder)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.createEmptyContext()
2078 - Declaração do método: org.springframework.security.web.context.NullSecurityContextRepository.saveContext(org.springframework.security.core.context.SecurityContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2078 - Declaração do método: org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.ServletRequest.getAttribute(java.lang.String)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.apache.commons.logging.Log.isDebugEnabled()
javax.servlet.ServletRequest.setAttribute(java.lang.String, java.lang.Object)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.isNew()
javax.servlet.http.HttpSession.getId()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.context.SecurityContextRepository.loadContext(org.springframework.security.web.context.HttpRequestResponseHolder)
org.springframework.security.core.context.SecurityContextHolder.setContext(org.springframework.security.core.context.SecurityContext)
org.springframework.security.web.context.HttpRequestResponseHolder.getRequest()
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.springframework.security.web.context.HttpRequestResponseHolder.getRequest()
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
org.springframework.security.web.context.SecurityContextRepository.saveContext(org.springframework.security.core.context.SecurityContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
javax.servlet.ServletRequest.removeAttribute(java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
2079 - Declaração do método: org.springframework.security.web.context.SecurityContextPersistenceFilter.setSecurityContextRepository(org.springframework.security.web.context.SecurityContextRepository)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2080 - Declaração do método: org.springframework.security.web.context.SecurityContextPersistenceFilter.setForceEagerSessionCreation(Z)
2080 - Declaração do método: org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextOnUpdateOrErrorResponseWrapper(javax.servlet.http.HttpServletResponse, Z)
2080 - Declaração do método: org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.saveContext(org.springframework.security.core.context.SecurityContext)
2080 - Declaração do método: org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.sendError(I)
Métodos invocados: 
org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.doSaveContext()
2081 - Declaração do método: org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.sendError(I, java.lang.String)
Métodos invocados: 
org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.doSaveContext()
2082 - Declaração do método: org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.sendRedirect(java.lang.String)
Métodos invocados: 
org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.doSaveContext()
2083 - Declaração do método: org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.doSaveContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.saveContext(org.springframework.security.core.context.SecurityContext)
2084 - Declaração do método: org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.encodeRedirectUrl(java.lang.String)
2084 - Declaração do método: org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.encodeRedirectURL(java.lang.String)
2084 - Declaração do método: org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.encodeUrl(java.lang.String)
2084 - Declaração do método: org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.encodeURL(java.lang.String)
2084 - Declaração do método: org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.isContextSaved()
2084 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepository.loadContext(org.springframework.security.web.context.HttpRequestResponseHolder)
Métodos invocados: 
org.springframework.security.web.context.HttpRequestResponseHolder.getRequest()
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
javax.servlet.http.HttpServletRequest.getSession(Z)
org.springframework.security.web.context.HttpSessionSecurityContextRepository.readSecurityContextFromSession(javax.servlet.http.HttpSession)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.context.HttpSessionSecurityContextRepository.generateNewContext()
org.springframework.security.web.context.HttpRequestResponseHolder.setResponse(javax.servlet.http.HttpServletResponse)
2085 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepository.saveContext(org.springframework.security.core.context.SecurityContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.isContextSaved()
org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.saveContext(org.springframework.security.core.context.SecurityContext)
2086 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepository.containsContext(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getSession(Z)
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
2087 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepository.readSecurityContextFromSession(javax.servlet.http.HttpSession)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isWarnEnabled()
org.apache.commons.logging.Log.warn(java.lang.Object)
org.springframework.security.web.context.HttpSessionSecurityContextRepository.cloneContext(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
2088 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepository.cloneContext(java.lang.Object)
Métodos invocados: 
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
java.lang.reflect.AccessibleObject.isAccessible()
java.lang.reflect.AccessibleObject.setAccessible(Z)
java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
2089 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepository.generateNewContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.createEmptyContext()
java.lang.Class.newInstance()
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
2090 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepository.setAllowSessionCreation(Z)
2090 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepository.setDisableUrlRewriting(Z)
2090 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepository$SaveToSessionResponseWrapper.SaveToSessionResponseWrapper(javax.servlet.http.HttpServletResponse, javax.servlet.http.HttpServletRequest, Z, org.springframework.security.core.context.SecurityContext)
Métodos invocados: 
org.springframework.security.core.context.SecurityContext.getAuthentication()
2091 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepository$SaveToSessionResponseWrapper.saveContext(org.springframework.security.core.context.SecurityContext)
Métodos invocados: 
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.authentication.AuthenticationTrustResolver.isAnonymous(org.springframework.security.core.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpServletRequest.getSession(Z)
org.springframework.security.web.context.HttpSessionSecurityContextRepository$SaveToSessionResponseWrapper.createNewSessionIfAllowed(org.springframework.security.core.context.SecurityContext)
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.springframework.security.core.context.SecurityContext.getAuthentication()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
2092 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepository$SaveToSessionResponseWrapper.createNewSessionIfAllowed(org.springframework.security.core.context.SecurityContext)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpServletRequest.getSession(Z)
org.apache.commons.logging.Log.warn(java.lang.Object)
2093 - Declaração do método: org.springframework.security.web.context.HttpRequestResponseHolder.HttpRequestResponseHolder(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2093 - Declaração do método: org.springframework.security.web.context.HttpRequestResponseHolder.getRequest()
2093 - Declaração do método: org.springframework.security.web.context.HttpRequestResponseHolder.setRequest(javax.servlet.http.HttpServletRequest)
2093 - Declaração do método: org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
2093 - Declaração do método: org.springframework.security.web.context.HttpRequestResponseHolder.setResponse(javax.servlet.http.HttpServletResponse)
2093 - Declaração do método: org.springframework.security.web.savedrequest.NullRequestCache.getRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2093 - Declaração do método: org.springframework.security.web.savedrequest.NullRequestCache.removeRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2093 - Declaração do método: org.springframework.security.web.savedrequest.NullRequestCache.saveRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2093 - Declaração do método: org.springframework.security.web.savedrequest.NullRequestCache.getMatchingRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2093 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequest.getRedirectUrl()
2093 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequest.getCookies()
2093 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequest.getMethod()
2093 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequest.getHeaderValues(java.lang.String)
2093 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequest.getHeaderNames()
2093 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequest.getLocales()
2093 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequest.getParameterValues(java.lang.String)
2093 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequest.getParameterMap()
2093 - Declaração do método: org.springframework.security.web.savedrequest.FastHttpDateFormat.formatDate(J, java.text.DateFormat)
Métodos invocados: 
java.util.HashMap.get(java.lang.Object)
java.text.DateFormat.format(java.util.Date)
org.springframework.security.web.savedrequest.FastHttpDateFormat.updateCache(java.util.HashMap, java.lang.Object, java.lang.Object)
java.text.DateFormat.format(java.util.Date)
org.springframework.security.web.savedrequest.FastHttpDateFormat.updateCache(java.util.HashMap, java.lang.Object, java.lang.Object)
2094 - Declaração do método: org.springframework.security.web.savedrequest.FastHttpDateFormat.getCurrentDate()
Métodos invocados: 
java.lang.System.currentTimeMillis()
java.text.DateFormat.format(java.util.Date)
2095 - Declaração do método: org.springframework.security.web.savedrequest.FastHttpDateFormat.internalParseDate(java.lang.String, [Ljava.text.DateFormat;)
Métodos invocados: 
java.text.DateFormat.parse(java.lang.String)
java.util.Date.getTime()
2096 - Declaração do método: org.springframework.security.web.savedrequest.FastHttpDateFormat.parseDate(java.lang.String, [Ljava.text.DateFormat;)
Métodos invocados: 
java.util.HashMap.get(java.lang.Object)
java.lang.Long.longValue()
org.springframework.security.web.savedrequest.FastHttpDateFormat.internalParseDate(java.lang.String, [Ljava.text.DateFormat;)
org.springframework.security.web.savedrequest.FastHttpDateFormat.updateCache(java.util.HashMap, java.lang.Object, java.lang.Object)
org.springframework.security.web.savedrequest.FastHttpDateFormat.internalParseDate(java.lang.String, [Ljava.text.DateFormat;)
org.springframework.security.web.savedrequest.FastHttpDateFormat.updateCache(java.util.HashMap, java.lang.Object, java.lang.Object)
java.lang.Long.longValue()
2097 - Declaração do método: org.springframework.security.web.savedrequest.FastHttpDateFormat.updateCache(java.util.HashMap, java.lang.Object, java.lang.Object)
Métodos invocados: 
java.util.HashMap.size()
java.util.HashMap.clear()
java.util.HashMap.put(java.lang.Object, java.lang.Object)
2098 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.DefaultSavedRequest(javax.servlet.http.HttpServletRequest, org.springframework.security.web.PortResolver)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
javax.servlet.http.HttpServletRequest.getCookies()
org.springframework.security.web.savedrequest.DefaultSavedRequest.addCookie(javax.servlet.http.Cookie)
javax.servlet.http.HttpServletRequest.getHeaderNames()
java.util.Enumeration.hasMoreElements()
java.util.Enumeration.nextElement()
java.lang.String.equalsIgnoreCase(java.lang.String)
javax.servlet.http.HttpServletRequest.getHeaders(java.lang.String)
java.util.Enumeration.hasMoreElements()
java.util.Enumeration.nextElement()
org.springframework.security.web.savedrequest.DefaultSavedRequest.addHeader(java.lang.String, java.lang.String)
javax.servlet.ServletRequest.getLocales()
java.util.Enumeration.hasMoreElements()
java.util.Enumeration.nextElement()
org.springframework.security.web.savedrequest.DefaultSavedRequest.addLocale(java.util.Locale)
javax.servlet.ServletRequest.getParameterMap()
java.util.Map.keySet()
java.util.Map.get(java.lang.Object)
org.springframework.security.web.savedrequest.DefaultSavedRequest.addParameter(java.lang.String, [Ljava.lang.String;)
org.apache.commons.logging.Log.isWarnEnabled()
org.apache.commons.logging.Log.warn(java.lang.Object)
javax.servlet.http.HttpServletRequest.getMethod()
javax.servlet.http.HttpServletRequest.getPathInfo()
javax.servlet.http.HttpServletRequest.getQueryString()
javax.servlet.http.HttpServletRequest.getRequestURI()
org.springframework.security.web.PortResolver.getServerPort(javax.servlet.ServletRequest)
javax.servlet.http.HttpServletRequest.getRequestURL()
java.lang.StringBuffer.toString()
javax.servlet.ServletRequest.getScheme()
javax.servlet.ServletRequest.getServerName()
javax.servlet.http.HttpServletRequest.getContextPath()
javax.servlet.http.HttpServletRequest.getServletPath()
2099 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.addCookie(javax.servlet.http.Cookie)
Métodos invocados: 
java.util.ArrayList.add(org.springframework.security.web.savedrequest.SavedCookie)
2100 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.addHeader(java.lang.String, java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
java.util.Map.put(java.lang.String, java.util.List)
java.util.List.add(java.lang.String)
2101 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.addLocale(java.util.Locale)
Métodos invocados: 
java.util.ArrayList.add(java.util.Locale)
2102 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.addParameter(java.lang.String, [Ljava.lang.String;)
Métodos invocados: 
java.util.Map.put(java.lang.String, [Ljava.lang.String;)
2103 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.doesRequestMatch(javax.servlet.http.HttpServletRequest, org.springframework.security.web.PortResolver)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getPathInfo()
org.springframework.security.web.savedrequest.DefaultSavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
javax.servlet.http.HttpServletRequest.getQueryString()
org.springframework.security.web.savedrequest.DefaultSavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
javax.servlet.http.HttpServletRequest.getRequestURI()
org.springframework.security.web.savedrequest.DefaultSavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
javax.servlet.http.HttpServletRequest.getMethod()
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.springframework.security.web.PortResolver.getServerPort(javax.servlet.ServletRequest)
org.springframework.security.web.savedrequest.DefaultSavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
javax.servlet.http.HttpServletRequest.getRequestURL()
java.lang.StringBuffer.toString()
org.springframework.security.web.savedrequest.DefaultSavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
javax.servlet.ServletRequest.getScheme()
org.springframework.security.web.savedrequest.DefaultSavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
javax.servlet.ServletRequest.getServerName()
org.springframework.security.web.savedrequest.DefaultSavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
javax.servlet.http.HttpServletRequest.getContextPath()
org.springframework.security.web.savedrequest.DefaultSavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
javax.servlet.http.HttpServletRequest.getServletPath()
org.springframework.security.web.savedrequest.DefaultSavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
2104 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.getContextPath()
2104 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.getCookies()
Métodos invocados: 
java.util.ArrayList.size()
org.springframework.security.web.savedrequest.SavedCookie.getCookie()
java.util.List.add(javax.servlet.http.Cookie)
2105 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.getRedirectUrl()
Métodos invocados: 
org.springframework.security.web.util.UrlUtils.buildFullRequestUrl(java.lang.String, java.lang.String, I, java.lang.String, java.lang.String)
2106 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.getHeaderNames()
Métodos invocados: 
java.util.Map.keySet()
2107 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.getHeaderValues(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
java.util.Collections.emptyList()
2108 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.getLocales()
2108 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.getMethod()
2108 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.getParameterMap()
2108 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.getParameterNames()
Métodos invocados: 
java.util.Map.keySet()
2109 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.getParameterValues(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
2110 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.getPathInfo()
2110 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.getQueryString()
2110 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.getRequestURI()
2110 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.getRequestURL()
2110 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.getScheme()
2110 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.getServerName()
2110 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.getServerPort()
2110 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.getServletPath()
2110 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
2111 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequest.toString()
Métodos invocados: 
org.springframework.security.web.savedrequest.DefaultSavedRequest.getRedirectUrl()
2112 - Declaração do método: org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.web.savedrequest.RequestCache.getMatchingRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
2113 - Declaração do método: org.springframework.security.web.savedrequest.RequestCacheAwareFilter.setRequestCache(org.springframework.security.web.savedrequest.RequestCache)
2113 - Declaração do método: org.springframework.security.web.savedrequest.Enumerator.Enumerator(java.util.Collection)
Métodos invocados: 
java.util.Collection.iterator()
2114 - Declaração do método: org.springframework.security.web.savedrequest.Enumerator.Enumerator(java.util.Collection, Z)
Métodos invocados: 
java.util.Collection.iterator()
2115 - Declaração do método: org.springframework.security.web.savedrequest.Enumerator.Enumerator(java.util.Iterator)
2115 - Declaração do método: org.springframework.security.web.savedrequest.Enumerator.Enumerator(java.util.Iterator, Z)
Métodos invocados: 
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.List.add(org.springframework.security.web.savedrequest.Enumerator$T)
java.util.List.iterator()
2116 - Declaração do método: org.springframework.security.web.savedrequest.Enumerator.Enumerator(java.util.Map)
Métodos invocados: 
java.util.Map.values()
java.util.Collection.iterator()
2117 - Declaração do método: org.springframework.security.web.savedrequest.Enumerator.Enumerator(java.util.Map, Z)
Métodos invocados: 
java.util.Map.values()
java.util.Collection.iterator()
2118 - Declaração do método: org.springframework.security.web.savedrequest.Enumerator.hasMoreElements()
Métodos invocados: 
java.util.Iterator.hasNext()
2119 - Declaração do método: org.springframework.security.web.savedrequest.Enumerator.nextElement()
Métodos invocados: 
java.util.Iterator.next()
2120 - Declaração do método: org.springframework.security.web.savedrequest.RequestCache.saveRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2120 - Declaração do método: org.springframework.security.web.savedrequest.RequestCache.getRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2120 - Declaração do método: org.springframework.security.web.savedrequest.RequestCache.getMatchingRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2120 - Declaração do método: org.springframework.security.web.savedrequest.RequestCache.removeRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2120 - Declaração do método: org.springframework.security.web.savedrequest.HttpSessionRequestCache.saveRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.security.web.util.RequestMatcher.matches(javax.servlet.http.HttpServletRequest)
javax.servlet.http.HttpServletRequest.getSession(Z)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
2121 - Declaração do método: org.springframework.security.web.savedrequest.HttpSessionRequestCache.getRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getSession(Z)
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
2122 - Declaração do método: org.springframework.security.web.savedrequest.HttpSessionRequestCache.removeRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getSession(Z)
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpSession.removeAttribute(java.lang.String)
2123 - Declaração do método: org.springframework.security.web.savedrequest.HttpSessionRequestCache.getMatchingRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.security.web.savedrequest.HttpSessionRequestCache.getRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.web.savedrequest.DefaultSavedRequest.doesRequestMatch(javax.servlet.http.HttpServletRequest, org.springframework.security.web.PortResolver)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.web.savedrequest.HttpSessionRequestCache.removeRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2124 - Declaração do método: org.springframework.security.web.savedrequest.HttpSessionRequestCache.setRequestMatcher(org.springframework.security.web.util.RequestMatcher)
2124 - Declaração do método: org.springframework.security.web.savedrequest.HttpSessionRequestCache.setCreateSessionAllowed(Z)
2124 - Declaração do método: org.springframework.security.web.savedrequest.HttpSessionRequestCache.setPortResolver(org.springframework.security.web.PortResolver)
2124 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.SavedRequestAwareWrapper(org.springframework.security.web.savedrequest.SavedRequest, javax.servlet.http.HttpServletRequest)
Métodos invocados: 
java.text.DateFormat.setTimeZone(java.util.TimeZone)
java.text.DateFormat.setTimeZone(java.util.TimeZone)
java.text.DateFormat.setTimeZone(java.util.TimeZone)
2125 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getCookies()
Métodos invocados: 
org.springframework.security.web.savedrequest.SavedRequest.getCookies()
java.util.List.size()
java.util.List.toArray([Ljavax.servlet.http.Cookie;)
2126 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getDateHeader(java.lang.String)
Métodos invocados: 
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getHeader(java.lang.String)
org.springframework.security.web.savedrequest.FastHttpDateFormat.parseDate(java.lang.String, [Ljava.text.DateFormat;)
2127 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getHeader(java.lang.String)
Métodos invocados: 
org.springframework.security.web.savedrequest.SavedRequest.getHeaderValues(java.lang.String)
java.util.List.isEmpty()
java.util.List.get(I)
2128 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getHeaderNames()
Métodos invocados: 
org.springframework.security.web.savedrequest.SavedRequest.getHeaderNames()
2129 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getHeaders(java.lang.String)
Métodos invocados: 
org.springframework.security.web.savedrequest.SavedRequest.getHeaderValues(java.lang.String)
2130 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getIntHeader(java.lang.String)
Métodos invocados: 
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getHeader(java.lang.String)
java.lang.Integer.parseInt(java.lang.String)
2131 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getLocale()
Métodos invocados: 
org.springframework.security.web.savedrequest.SavedRequest.getLocales()
java.util.List.isEmpty()
java.util.Locale.getDefault()
java.util.List.get(I)
2132 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getLocales()
Métodos invocados: 
org.springframework.security.web.savedrequest.SavedRequest.getLocales()
java.util.List.isEmpty()
java.util.Locale.getDefault()
java.util.List.add(java.util.Locale)
2133 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getMethod()
Métodos invocados: 
org.springframework.security.web.savedrequest.SavedRequest.getMethod()
2134 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getParameter(java.lang.String)
Métodos invocados: 
org.springframework.security.web.savedrequest.SavedRequest.getParameterValues(java.lang.String)
2135 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getParameterMap()
Métodos invocados: 
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getCombinedParameterNames()
java.util.Set.size()
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getParameterValues(java.lang.String)
java.util.Map.put(java.lang.String, [Ljava.lang.String;)
2136 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getCombinedParameterNames()
Métodos invocados: 
java.util.Map.keySet()
java.util.Set.addAll(java.util.Collection)
org.springframework.security.web.savedrequest.SavedRequest.getParameterMap()
java.util.Map.keySet()
java.util.Set.addAll(java.util.Collection)
2137 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getParameterNames()
Métodos invocados: 
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getCombinedParameterNames()
2138 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getParameterValues(java.lang.String)
Métodos invocados: 
org.springframework.security.web.savedrequest.SavedRequest.getParameterValues(java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.contains(java.lang.Object)
java.util.List.add(java.lang.String)
java.util.List.size()
java.util.List.toArray([Ljava.lang.String;)
2139 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookie.SavedCookie(java.lang.String, java.lang.String, java.lang.String, java.lang.String, I, java.lang.String, Z, I)
2139 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookie.SavedCookie(javax.servlet.http.Cookie)
Métodos invocados: 
javax.servlet.http.Cookie.getName()
javax.servlet.http.Cookie.getValue()
javax.servlet.http.Cookie.getComment()
javax.servlet.http.Cookie.getDomain()
javax.servlet.http.Cookie.getMaxAge()
javax.servlet.http.Cookie.getPath()
javax.servlet.http.Cookie.getSecure()
javax.servlet.http.Cookie.getVersion()
2140 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookie.getName()
2140 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookie.getValue()
2140 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookie.getComment()
2140 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookie.getDomain()
2140 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookie.getMaxAge()
2140 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookie.getPath()
2140 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookie.isSecure()
2140 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookie.getVersion()
2140 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookie.getCookie()
Métodos invocados: 
org.springframework.security.web.savedrequest.SavedCookie.getName()
org.springframework.security.web.savedrequest.SavedCookie.getValue()
org.springframework.security.web.savedrequest.SavedCookie.getComment()
org.springframework.security.web.savedrequest.SavedCookie.getComment()
javax.servlet.http.Cookie.setComment(java.lang.String)
org.springframework.security.web.savedrequest.SavedCookie.getDomain()
org.springframework.security.web.savedrequest.SavedCookie.getDomain()
javax.servlet.http.Cookie.setDomain(java.lang.String)
org.springframework.security.web.savedrequest.SavedCookie.getPath()
org.springframework.security.web.savedrequest.SavedCookie.getPath()
javax.servlet.http.Cookie.setPath(java.lang.String)
org.springframework.security.web.savedrequest.SavedCookie.getVersion()
javax.servlet.http.Cookie.setVersion(I)
org.springframework.security.web.savedrequest.SavedCookie.getMaxAge()
javax.servlet.http.Cookie.setMaxAge(I)
org.springframework.security.web.savedrequest.SavedCookie.isSecure()
javax.servlet.http.Cookie.setSecure(Z)
2141 - Declaração do método: org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.SecurityContextHolderAwareRequestWrapper(javax.servlet.http.HttpServletRequest, java.lang.String)
2141 - Declaração do método: org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.getAuthentication()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.authentication.AuthenticationTrustResolver.isAnonymous(org.springframework.security.core.Authentication)
2142 - Declaração do método: org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.getRemoteUser()
Métodos invocados: 
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.getAuthentication()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.core.Authentication.getPrincipal()
java.lang.Object.toString()
2143 - Declaração do método: org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.getUserPrincipal()
Métodos invocados: 
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.getAuthentication()
org.springframework.security.core.Authentication.getPrincipal()
2144 - Declaração do método: org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.isGranted(java.lang.String)
Métodos invocados: 
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.getAuthentication()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.Authentication.getAuthorities()
org.springframework.security.core.GrantedAuthority.getAuthority()
java.lang.String.equals(java.lang.Object)
2145 - Declaração do método: org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
Métodos invocados: 
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.isGranted(java.lang.String)
2146 - Declaração do método: org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.setRolePrefix(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.String.trim()
2147 - Declaração do método: org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
2148 - Declaração do método: org.springframework.security.web.session.ConcurrentSessionFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.web.util.UrlUtils.isValidRedirectUrl(java.lang.String)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
2149 - Declaração do método: org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getSession(Z)
javax.servlet.http.HttpSession.getId()
org.springframework.security.core.session.SessionRegistry.getSessionInformation(java.lang.String)
org.springframework.security.core.session.SessionInformation.isExpired()
org.springframework.security.web.session.ConcurrentSessionFilter.doLogout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.web.session.ConcurrentSessionFilter.determineExpiredUrl(javax.servlet.http.HttpServletRequest, org.springframework.security.core.session.SessionInformation)
org.springframework.security.web.RedirectStrategy.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
javax.servlet.ServletResponse.getWriter()
java.io.PrintWriter.print(java.lang.String)
javax.servlet.ServletResponse.flushBuffer()
org.springframework.security.core.session.SessionInformation.refreshLastRequest()
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
2150 - Declaração do método: org.springframework.security.web.session.ConcurrentSessionFilter.determineExpiredUrl(javax.servlet.http.HttpServletRequest, org.springframework.security.core.session.SessionInformation)
2150 - Declaração do método: org.springframework.security.web.session.ConcurrentSessionFilter.doLogout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.web.authentication.logout.LogoutHandler.logout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
2151 - Declaração do método: org.springframework.security.web.session.ConcurrentSessionFilter.setExpiredUrl(java.lang.String)
2151 - Declaração do método: org.springframework.security.web.session.ConcurrentSessionFilter.setSessionRegistry(org.springframework.security.core.session.SessionRegistry)
2151 - Declaração do método: org.springframework.security.web.session.ConcurrentSessionFilter.setLogoutHandlers([Lorg.springframework.security.web.authentication.logout.LogoutHandler;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
2152 - Declaração do método: org.springframework.security.web.session.ConcurrentSessionFilter.setRedirectStrategy(org.springframework.security.web.RedirectStrategy)
2152 - Declaração do método: org.springframework.security.web.session.SessionManagementFilter.SessionManagementFilter(org.springframework.security.web.context.SecurityContextRepository)
2152 - Declaração do método: org.springframework.security.web.session.SessionManagementFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.ServletRequest.getAttribute(java.lang.String)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
javax.servlet.ServletRequest.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.web.context.SecurityContextRepository.containsContext(javax.servlet.http.HttpServletRequest)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.authentication.AuthenticationTrustResolver.isAnonymous(org.springframework.security.core.Authentication)
org.springframework.security.web.authentication.session.SessionAuthenticationStrategy.onAuthentication(org.springframework.security.core.Authentication, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.springframework.security.web.authentication.AuthenticationFailureHandler.onAuthenticationFailure(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.web.context.SecurityContextRepository.saveContext(org.springframework.security.core.context.SecurityContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
javax.servlet.http.HttpServletRequest.getRequestedSessionId()
javax.servlet.http.HttpServletRequest.isRequestedSessionIdValid()
javax.servlet.http.HttpServletRequest.getRequestedSessionId()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpServletRequest.getSession()
org.springframework.security.web.RedirectStrategy.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
2153 - Declaração do método: org.springframework.security.web.session.SessionManagementFilter.setSessionAuthenticationStrategy(org.springframework.security.web.authentication.session.SessionAuthenticationStrategy)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2154 - Declaração do método: org.springframework.security.web.session.SessionManagementFilter.setInvalidSessionUrl(java.lang.String)
2154 - Declaração do método: org.springframework.security.web.session.SessionManagementFilter.setAuthenticationFailureHandler(org.springframework.security.web.authentication.AuthenticationFailureHandler)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2155 - Declaração do método: org.springframework.security.web.session.SessionManagementFilter.setRedirectStrategy(org.springframework.security.web.RedirectStrategy)
2155 - Declaração do método: org.springframework.security.web.session.HttpSessionEventPublisher.getContext(javax.servlet.ServletContext)
Métodos invocados: 
org.springframework.web.context.support.WebApplicationContextUtils.getWebApplicationContext(javax.servlet.ServletContext)
2156 - Declaração do método: org.springframework.security.web.session.HttpSessionEventPublisher.sessionCreated(javax.servlet.http.HttpSessionEvent)
Métodos invocados: 
javax.servlet.http.HttpSessionEvent.getSession()
org.apache.commons.logging.LogFactory.getLog(java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpSessionEvent.getSession()
javax.servlet.http.HttpSession.getServletContext()
org.springframework.security.web.session.HttpSessionEventPublisher.getContext(javax.servlet.ServletContext)
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
2157 - Declaração do método: org.springframework.security.web.session.HttpSessionEventPublisher.sessionDestroyed(javax.servlet.http.HttpSessionEvent)
Métodos invocados: 
javax.servlet.http.HttpSessionEvent.getSession()
org.apache.commons.logging.LogFactory.getLog(java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpSessionEvent.getSession()
javax.servlet.http.HttpSession.getServletContext()
org.springframework.security.web.session.HttpSessionEventPublisher.getContext(javax.servlet.ServletContext)
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
2158 - Declaração do método: org.springframework.security.web.session.HttpSessionDestroyedEvent.HttpSessionDestroyedEvent(javax.servlet.http.HttpSession)
2158 - Declaração do método: org.springframework.security.web.session.HttpSessionDestroyedEvent.getSession()
Métodos invocados: 
java.util.EventObject.getSource()
2159 - Declaração do método: org.springframework.security.web.session.HttpSessionDestroyedEvent.getSecurityContext()
Métodos invocados: 
java.util.EventObject.getSource()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
2160 - Declaração do método: org.springframework.security.web.session.HttpSessionDestroyedEvent.getId()
Métodos invocados: 
org.springframework.security.web.session.HttpSessionDestroyedEvent.getSession()
javax.servlet.http.HttpSession.getId()
2161 - Declaração do método: org.springframework.security.web.session.HttpSessionCreatedEvent.HttpSessionCreatedEvent(javax.servlet.http.HttpSession)
2161 - Declaração do método: org.springframework.security.web.session.HttpSessionCreatedEvent.getSession()
Métodos invocados: 
java.util.EventObject.getSource()
2162 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzer$1.extractCause(java.lang.Throwable)
Métodos invocados: 
java.lang.Throwable.getCause()
2163 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzer$2.extractCause(java.lang.Throwable)
Métodos invocados: 
org.springframework.security.web.util.ThrowableAnalyzer.verifyThrowableHierarchy(java.lang.Throwable, java.lang.Class)
java.lang.reflect.InvocationTargetException.getTargetException()
2164 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzer$3.compare(java.lang.Class, java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.String.compareTo(java.lang.String)
2165 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzer.ThrowableAnalyzer()
Métodos invocados: 
org.springframework.security.web.util.ThrowableAnalyzer.initExtractorMap()
2166 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzer.registerExtractor(java.lang.Class, org.springframework.security.web.util.ThrowableCauseExtractor)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.Map.put(java.lang.Class, org.springframework.security.web.util.ThrowableCauseExtractor)
2167 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzer.initExtractorMap()
Métodos invocados: 
org.springframework.security.web.util.ThrowableAnalyzer.registerExtractor(java.lang.Class, org.springframework.security.web.util.ThrowableCauseExtractor)
org.springframework.security.web.util.ThrowableAnalyzer.registerExtractor(java.lang.Class, org.springframework.security.web.util.ThrowableCauseExtractor)
2168 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzer.getRegisteredTypes()
Métodos invocados: 
java.util.Map.keySet()
java.util.Set.size()
java.util.Set.toArray([Ljava.lang.Class;)
2169 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzer.determineCauseChain(java.lang.Throwable)
Métodos invocados: 
java.util.List.add(java.lang.Throwable)
org.springframework.security.web.util.ThrowableAnalyzer.extractCause(java.lang.Throwable)
java.util.List.size()
java.util.List.toArray([Ljava.lang.Throwable;)
2170 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzer.extractCause(java.lang.Throwable)
Métodos invocados: 
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.lang.Class.isInstance(java.lang.Object)
java.util.Map$Entry.getValue()
org.springframework.security.web.util.ThrowableCauseExtractor.extractCause(java.lang.Throwable)
2171 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzer.getFirstThrowableOfType(java.lang.Class, [Ljava.lang.Throwable;)
Métodos invocados: 
java.lang.Class.isInstance(java.lang.Object)
2172 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzer.verifyThrowableHierarchy(java.lang.Throwable, java.lang.Class)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.getName()
java.lang.Class.getName()
2173 - Declaração do método: org.springframework.security.web.util.ThrowableCauseExtractor.extractCause(java.lang.Throwable)
2173 - Declaração do método: org.springframework.security.web.util.AnyRequestMatcher.matches(javax.servlet.http.HttpServletRequest)
2173 - Declaração do método: org.springframework.security.web.util.RequestMatcher.matches(javax.servlet.http.HttpServletRequest)
2173 - Declaração do método: org.springframework.security.web.util.TextEscapeUtils.escapeEntities(java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.Character.isWhitespace(C)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(I)
java.lang.StringBuilder.append(java.lang.String)
java.lang.Character.isISOControl(C)
java.lang.Character.isHighSurrogate(C)
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.Character.isLowSurrogate(C)
java.lang.Character.toCodePoint(C, C)
java.lang.Character.isDefined(I)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(I)
java.lang.StringBuilder.append(java.lang.String)
java.lang.Character.isLowSurrogate(C)
java.lang.Character.isDefined(C)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(I)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
2174 - Declaração do método: org.springframework.security.web.util.RequestMatcherEditor.setAsText(java.lang.String)
Métodos invocados: 
java.beans.PropertyEditorSupport.setValue(java.lang.Object)
2175 - Declaração do método: org.springframework.security.web.util.RegexRequestMatcher.RegexRequestMatcher(java.lang.String, java.lang.String)
2175 - Declaração do método: org.springframework.security.web.util.RegexRequestMatcher.RegexRequestMatcher(java.lang.String, java.lang.String, Z)
Métodos invocados: 
java.util.regex.Pattern.compile(java.lang.String, I)
java.util.regex.Pattern.compile(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.http.HttpMethod.valueOf(java.lang.String)
2176 - Declaração do método: org.springframework.security.web.util.RegexRequestMatcher.matches(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getMethod()
org.springframework.http.HttpMethod.valueOf(java.lang.String)
javax.servlet.http.HttpServletRequest.getServletPath()
javax.servlet.http.HttpServletRequest.getPathInfo()
javax.servlet.http.HttpServletRequest.getQueryString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.util.regex.Matcher.matches()
2177 - Declaração do método: org.springframework.security.web.util.AntPathRequestMatcher.AntPathRequestMatcher(java.lang.String)
2177 - Declaração do método: org.springframework.security.web.util.AntPathRequestMatcher.AntPathRequestMatcher(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
java.lang.String.toLowerCase()
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.http.HttpMethod.valueOf(java.lang.String)
2178 - Declaração do método: org.springframework.security.web.util.AntPathRequestMatcher.matches(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getMethod()
org.springframework.http.HttpMethod.valueOf(java.lang.String)
javax.servlet.http.HttpServletRequest.getServletPath()
javax.servlet.http.HttpServletRequest.getPathInfo()
javax.servlet.http.HttpServletRequest.getPathInfo()
java.lang.String.toLowerCase()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.AntPathMatcher.match(java.lang.String, java.lang.String)
2179 - Declaração do método: org.springframework.security.web.util.AntPathRequestMatcher.getPattern()
2179 - Declaração do método: org.springframework.security.web.util.AntPathRequestMatcher.equals(java.lang.Object)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
2180 - Declaração do método: org.springframework.security.web.util.AntPathRequestMatcher.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
2181 - Declaração do método: org.springframework.security.web.util.UrlUtils.buildFullRequestUrl(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getScheme()
javax.servlet.ServletRequest.getServerName()
javax.servlet.ServletRequest.getServerPort()
javax.servlet.http.HttpServletRequest.getRequestURI()
javax.servlet.http.HttpServletRequest.getQueryString()
org.springframework.security.web.util.UrlUtils.buildFullRequestUrl(java.lang.String, java.lang.String, I, java.lang.String, java.lang.String)
2182 - Declaração do método: org.springframework.security.web.util.UrlUtils.buildFullRequestUrl(java.lang.String, java.lang.String, I, java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.toLowerCase()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.String.equals(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(I)
java.lang.String.equals(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(I)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
2183 - Declaração do método: org.springframework.security.web.util.UrlUtils.buildRequestUrl(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getServletPath()
javax.servlet.http.HttpServletRequest.getRequestURI()
javax.servlet.http.HttpServletRequest.getContextPath()
javax.servlet.http.HttpServletRequest.getPathInfo()
javax.servlet.http.HttpServletRequest.getQueryString()
org.springframework.security.web.util.UrlUtils.buildRequestUrl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
2184 - Declaração do método: org.springframework.security.web.util.UrlUtils.buildRequestUrl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
2185 - Declaração do método: org.springframework.security.web.util.UrlUtils.isValidRedirectUrl(java.lang.String)
Métodos invocados: 
java.lang.String.startsWith(java.lang.String)
org.springframework.security.web.util.UrlUtils.isAbsoluteUrl(java.lang.String)
2186 - Declaração do método: org.springframework.security.web.util.UrlUtils.isAbsoluteUrl(java.lang.String)
Métodos invocados: 
java.util.regex.Pattern.compile(java.lang.String, I)
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.util.regex.Matcher.matches()
2187 - Declaração do método: org.springframework.security.web.util.IpAddressMatcher.IpAddressMatcher(java.lang.String)
Métodos invocados: 
java.lang.String.indexOf(I)
org.springframework.util.StringUtils.split(java.lang.String, java.lang.String)
java.lang.Integer.parseInt(java.lang.String)
org.springframework.security.web.util.IpAddressMatcher.parseAddress(java.lang.String)
2188 - Declaração do método: org.springframework.security.web.util.IpAddressMatcher.matches(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getRemoteAddr()
org.springframework.security.web.util.IpAddressMatcher.parseAddress(java.lang.String)
java.lang.Object.getClass()
java.lang.Object.getClass()
java.lang.Object.equals(java.lang.Object)
java.net.InetAddress.equals(java.lang.Object)
java.net.InetAddress.getAddress()
java.net.InetAddress.getAddress()
java.util.Arrays.fill([B, I, I, B)
2189 - Declaração do método: org.springframework.security.web.util.IpAddressMatcher.parseAddress(java.lang.String)
Métodos invocados: 
java.net.InetAddress.getByName(java.lang.String)
2190 - Declaração do método: org.springframework.security.web.util.ELRequestMatcherContext.ELRequestMatcherContext(javax.servlet.http.HttpServletRequest)
2190 - Declaração do método: org.springframework.security.web.util.ELRequestMatcherContext.hasIpAddress(java.lang.String)
Métodos invocados: 
org.springframework.security.web.util.IpAddressMatcher.matches(javax.servlet.http.HttpServletRequest)
2191 - Declaração do método: org.springframework.security.web.util.ELRequestMatcherContext.hasHeader(java.lang.String, java.lang.String)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.lang.String.contains(java.lang.CharSequence)
2192 - Declaração do método: org.springframework.security.web.util.RedirectUrlBuilder.setScheme(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
2193 - Declaração do método: org.springframework.security.web.util.RedirectUrlBuilder.setServerName(java.lang.String)
2193 - Declaração do método: org.springframework.security.web.util.RedirectUrlBuilder.setPort(I)
2193 - Declaração do método: org.springframework.security.web.util.RedirectUrlBuilder.setContextPath(java.lang.String)
2193 - Declaração do método: org.springframework.security.web.util.RedirectUrlBuilder.setServletPath(java.lang.String)
2193 - Declaração do método: org.springframework.security.web.util.RedirectUrlBuilder.setPathInfo(java.lang.String)
2193 - Declaração do método: org.springframework.security.web.util.RedirectUrlBuilder.setQuery(java.lang.String)
2193 - Declaração do método: org.springframework.security.web.util.RedirectUrlBuilder.getUrl()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
org.springframework.util.Assert.notNull(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.String.equals(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.Integer.toString(I)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
2194 - Declaração do método: org.springframework.security.web.util.ELRequestMatcher.ELRequestMatcher(java.lang.String)
Métodos invocados: 
org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(java.lang.String)
2195 - Declaração do método: org.springframework.security.web.util.ELRequestMatcher.matches(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.web.util.ELRequestMatcher.createELContext(javax.servlet.http.HttpServletRequest)
org.springframework.security.web.util.ELRequestMatcher.evaluateAsBoolean(org.springframework.expression.Expression, org.springframework.expression.EvaluationContext)
2196 - Declaração do método: org.springframework.security.web.util.ELRequestMatcher.createELContext(javax.servlet.http.HttpServletRequest)
2196 - Declaração do método: org.springframework.security.web.util.ELRequestMatcher.evaluateAsBoolean(org.springframework.expression.Expression, org.springframework.expression.EvaluationContext)
Métodos invocados: 
org.springframework.expression.Expression.getValue(org.springframework.expression.EvaluationContext, java.lang.Class)
java.lang.Boolean.booleanValue()
org.springframework.expression.Expression.getExpressionString()
2197 - Declaração do método: org.springframework.security.cas.ServiceProperties.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
2198 - Declaração do método: org.springframework.security.cas.ServiceProperties.getService()
2198 - Declaração do método: org.springframework.security.cas.ServiceProperties.isSendRenew()
2198 - Declaração do método: org.springframework.security.cas.ServiceProperties.setSendRenew(Z)
2198 - Declaração do método: org.springframework.security.cas.ServiceProperties.setService(java.lang.String)
2198 - Declaração do método: org.springframework.security.cas.ServiceProperties.getArtifactParameter()
2198 - Declaração do método: org.springframework.security.cas.ServiceProperties.setArtifactParameter(java.lang.String)
2198 - Declaração do método: org.springframework.security.cas.ServiceProperties.getServiceParameter()
2198 - Declaração do método: org.springframework.security.cas.ServiceProperties.setServiceParameter(java.lang.String)
2198 - Declaração do método: org.springframework.security.cas.SamlServiceProperties.SamlServiceProperties()
2198 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationToken.CasAuthenticationToken(java.lang.String, java.lang.Object, java.lang.Object, java.util.Collection, org.springframework.security.core.userdetails.UserDetails, org.jasig.cas.client.validation.Assertion)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.hashCode()
org.springframework.security.authentication.AbstractAuthenticationToken.setAuthenticated(Z)
2199 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationToken.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationToken.getAssertion()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.cas.authentication.CasAuthenticationToken.getKeyHash()
org.springframework.security.cas.authentication.CasAuthenticationToken.getKeyHash()
2200 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationToken.getCredentials()
2200 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationToken.getKeyHash()
2200 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationToken.getPrincipal()
2200 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationToken.getAssertion()
2200 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationToken.getUserDetails()
2200 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationToken.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.toString()
2201 - Declaração do método: org.springframework.security.cas.authentication.NullStatelessTicketCache.getByTicketId(java.lang.String)
2201 - Declaração do método: org.springframework.security.cas.authentication.NullStatelessTicketCache.putTicketInCache(org.springframework.security.cas.authentication.CasAuthenticationToken)
2201 - Declaração do método: org.springframework.security.cas.authentication.NullStatelessTicketCache.removeTicketFromCache(org.springframework.security.cas.authentication.CasAuthenticationToken)
2201 - Declaração do método: org.springframework.security.cas.authentication.NullStatelessTicketCache.removeTicketFromCache(java.lang.String)
2201 - Declaração do método: org.springframework.security.cas.authentication.EhCacheBasedTicketCache.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2202 - Declaração do método: org.springframework.security.cas.authentication.EhCacheBasedTicketCache.getByTicketId(java.lang.String)
Métodos invocados: 
net.sf.ehcache.Ehcache.get(java.io.Serializable)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
net.sf.ehcache.Element.getValue()
2203 - Declaração do método: org.springframework.security.cas.authentication.EhCacheBasedTicketCache.getCache()
2203 - Declaração do método: org.springframework.security.cas.authentication.EhCacheBasedTicketCache.putTicketInCache(org.springframework.security.cas.authentication.CasAuthenticationToken)
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationToken.getCredentials()
java.lang.Object.toString()
org.apache.commons.logging.Log.isDebugEnabled()
net.sf.ehcache.Element.getKey()
org.apache.commons.logging.Log.debug(java.lang.Object)
net.sf.ehcache.Ehcache.put(net.sf.ehcache.Element)
2204 - Declaração do método: org.springframework.security.cas.authentication.EhCacheBasedTicketCache.removeTicketFromCache(org.springframework.security.cas.authentication.CasAuthenticationToken)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.cas.authentication.CasAuthenticationToken.getCredentials()
java.lang.Object.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.cas.authentication.CasAuthenticationToken.getCredentials()
java.lang.Object.toString()
org.springframework.security.cas.authentication.EhCacheBasedTicketCache.removeTicketFromCache(java.lang.String)
2205 - Declaração do método: org.springframework.security.cas.authentication.EhCacheBasedTicketCache.removeTicketFromCache(java.lang.String)
Métodos invocados: 
net.sf.ehcache.Ehcache.remove(java.io.Serializable)
2206 - Declaração do método: org.springframework.security.cas.authentication.EhCacheBasedTicketCache.setCache(net.sf.ehcache.Ehcache)
2206 - Declaração do método: org.springframework.security.cas.authentication.StatelessTicketCache.getByTicketId(java.lang.String)
2206 - Declaração do método: org.springframework.security.cas.authentication.StatelessTicketCache.putTicketInCache(org.springframework.security.cas.authentication.CasAuthenticationToken)
2206 - Declaração do método: org.springframework.security.cas.authentication.StatelessTicketCache.removeTicketFromCache(org.springframework.security.cas.authentication.CasAuthenticationToken)
2206 - Declaração do método: org.springframework.security.cas.authentication.StatelessTicketCache.removeTicketFromCache(java.lang.String)
2206 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2207 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.security.cas.authentication.CasAuthenticationProvider.supports(java.lang.Class)
org.springframework.security.core.Authentication.getPrincipal()
java.lang.Object.toString()
java.lang.String.equals(java.lang.Object)
org.springframework.security.core.Authentication.getPrincipal()
java.lang.Object.toString()
java.lang.String.equals(java.lang.Object)
java.lang.String.hashCode()
org.springframework.security.cas.authentication.CasAuthenticationToken.getKeyHash()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.core.Authentication.getCredentials()
org.springframework.security.core.Authentication.getCredentials()
java.lang.String.equals(java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.core.Authentication.getPrincipal()
java.lang.String.equals(java.lang.Object)
org.springframework.security.core.Authentication.getCredentials()
java.lang.Object.toString()
org.springframework.security.cas.authentication.StatelessTicketCache.getByTicketId(java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationProvider.authenticateNow(org.springframework.security.core.Authentication)
org.springframework.security.core.Authentication.getDetails()
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.cas.authentication.StatelessTicketCache.putTicketInCache(org.springframework.security.cas.authentication.CasAuthenticationToken)
2208 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProvider.authenticateNow(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.core.Authentication.getCredentials()
java.lang.Object.toString()
org.springframework.security.cas.ServiceProperties.getService()
org.jasig.cas.client.validation.TicketValidator.validate(java.lang.String, java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationProvider.loadUserByAssertion(org.jasig.cas.client.validation.Assertion)
org.springframework.security.core.userdetails.UserDetailsChecker.check(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.Authentication.getCredentials()
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
java.lang.Throwable.getMessage()
2209 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProvider.loadUserByAssertion(org.jasig.cas.client.validation.Assertion)
Métodos invocados: 
org.springframework.security.core.userdetails.AuthenticationUserDetailsService.loadUserDetails(org.springframework.security.cas.authentication.CasAssertionAuthenticationToken)
2210 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProvider.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
2210 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProvider.setAuthenticationUserDetailsService(org.springframework.security.core.userdetails.AuthenticationUserDetailsService)
2210 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProvider.setServiceProperties(org.springframework.security.cas.ServiceProperties)
2210 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProvider.getKey()
2210 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProvider.setKey(java.lang.String)
2210 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProvider.getStatelessTicketCache()
2210 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProvider.getTicketValidator()
2210 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProvider.setMessageSource(org.springframework.context.MessageSource)
2210 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.cas.authentication.StatelessTicketCache)
2210 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
2210 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.isAssignableFrom(java.lang.Class)
2211 - Declaração do método: org.springframework.security.cas.authentication.CasAssertionAuthenticationToken.CasAssertionAuthenticationToken(org.jasig.cas.client.validation.Assertion, java.lang.String)
2211 - Declaração do método: org.springframework.security.cas.authentication.CasAssertionAuthenticationToken.getPrincipal()
Métodos invocados: 
org.jasig.cas.client.validation.Assertion.getPrincipal()
java.security.Principal.getName()
2212 - Declaração do método: org.springframework.security.cas.authentication.CasAssertionAuthenticationToken.getCredentials()
2212 - Declaração do método: org.springframework.security.cas.authentication.CasAssertionAuthenticationToken.getAssertion()
2212 - Declaração do método: org.springframework.security.cas.userdetails.GrantedAuthorityFromAssertionAttributesUserDetailsService.GrantedAuthorityFromAssertionAttributesUserDetailsService([Ljava.lang.String;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
2213 - Declaração do método: org.springframework.security.cas.userdetails.GrantedAuthorityFromAssertionAttributesUserDetailsService.loadUserDetails(org.jasig.cas.client.validation.Assertion)
Métodos invocados: 
org.jasig.cas.client.validation.Assertion.getPrincipal()
org.jasig.cas.client.authentication.AttributePrincipal.getAttributes()
java.util.Map.get(java.lang.Object)
java.lang.Object.toString()
java.lang.String.toUpperCase()
java.lang.Object.toString()
java.util.List.add(org.springframework.security.core.GrantedAuthority)
java.lang.Object.toString()
java.lang.String.toUpperCase()
java.lang.Object.toString()
java.util.List.add(org.springframework.security.core.GrantedAuthority)
org.jasig.cas.client.validation.Assertion.getPrincipal()
java.security.Principal.getName()
2214 - Declaração do método: org.springframework.security.cas.userdetails.GrantedAuthorityFromAssertionAttributesUserDetailsService.setConvertToUpperCase(Z)
2214 - Declaração do método: org.springframework.security.cas.userdetails.AbstractCasAssertionUserDetailsService.loadUserDetails(org.springframework.security.cas.authentication.CasAssertionAuthenticationToken)
Métodos invocados: 
org.springframework.security.cas.authentication.CasAssertionAuthenticationToken.getAssertion()
org.springframework.security.cas.userdetails.AbstractCasAssertionUserDetailsService.loadUserDetails(org.jasig.cas.client.validation.Assertion)
2215 - Declaração do método: org.springframework.security.cas.userdetails.AbstractCasAssertionUserDetailsService.loadUserDetails(org.jasig.cas.client.validation.Assertion)
2215 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationFilter.CasAuthenticationFilter()
2215 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
javax.servlet.ServletRequest.getParameter(java.lang.String)
org.springframework.security.authentication.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getAuthenticationManager()
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
2216 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationFilter.requiresAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getRequestURI()
org.jasig.cas.client.util.CommonUtils.isEmpty(java.lang.String)
java.lang.String.endsWith(java.lang.String)
org.jasig.cas.client.util.CommonUtils.readAndRespondToProxyReceptorRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.jasig.cas.client.proxy.ProxyGrantingTicketStorage)
2217 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationFilter.setProxyReceptorUrl(java.lang.String)
2217 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationFilter.setProxyGrantingTicketStorage(org.jasig.cas.client.proxy.ProxyGrantingTicketStorage)
2217 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationFilter.setServiceProperties(org.springframework.security.cas.ServiceProperties)
Métodos invocados: 
org.springframework.security.cas.ServiceProperties.getArtifactParameter()
2218 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationEntryPoint.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2219 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
org.springframework.security.cas.web.CasAuthenticationEntryPoint.createServiceUrl(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.cas.web.CasAuthenticationEntryPoint.createRedirectUrl(java.lang.String)
org.springframework.security.cas.web.CasAuthenticationEntryPoint.preCommence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
2220 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationEntryPoint.createServiceUrl(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.security.cas.ServiceProperties.getService()
org.springframework.security.cas.ServiceProperties.getArtifactParameter()
org.jasig.cas.client.util.CommonUtils.constructServiceUrl(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String, java.lang.String, java.lang.String, Z)
2221 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationEntryPoint.createRedirectUrl(java.lang.String)
Métodos invocados: 
org.springframework.security.cas.ServiceProperties.getServiceParameter()
org.springframework.security.cas.ServiceProperties.isSendRenew()
org.jasig.cas.client.util.CommonUtils.constructRedirectUrl(java.lang.String, java.lang.String, java.lang.String, Z, Z)
2222 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationEntryPoint.preCommence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2222 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationEntryPoint.getLoginUrl()
2222 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationEntryPoint.getServiceProperties()
2222 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationEntryPoint.setLoginUrl(java.lang.String)
2222 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationEntryPoint.setServiceProperties(org.springframework.security.cas.ServiceProperties)
2222 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationEntryPoint.setEncodeServiceUrlWithSessionId(Z)
2222 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationEntryPoint.getEncodeServiceUrlWithSessionId()
2222 - Declaração do método: org.springframework.security.itest.web.TestController.sec1255TestUrl(javax.servlet.http.HttpServletResponse)
Métodos invocados: 
javax.servlet.ServletResponse.getWriter()
java.io.PrintWriter.append(java.lang.CharSequence)
2223 - Declaração do método: org.springframework.security.config.FilterChainProxyConfigTests.loadContext()
Métodos invocados: 
java.lang.System.setProperty(java.lang.String, java.lang.String)
java.lang.System.setProperty(java.lang.String, java.lang.String)
2224 - Declaração do método: org.springframework.security.config.FilterChainProxyConfigTests.closeContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
2225 - Declaração do método: org.springframework.security.config.FilterChainProxyConfigTests.misplacedUniversalPathShouldBeDetected()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String, java.lang.Class)
2226 - Declaração do método: org.springframework.security.config.FilterChainProxyConfigTests.normalOperation()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String, java.lang.Class)
org.springframework.security.config.FilterChainProxyConfigTests.doNormalOperation(org.springframework.security.web.FilterChainProxy)
2227 - Declaração do método: org.springframework.security.config.FilterChainProxyConfigTests.normalOperationWithNewConfig()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String, java.lang.Class)
org.springframework.security.config.FilterChainProxyConfigTests.checkPathAndFilterOrder(org.springframework.security.web.FilterChainProxy)
org.springframework.security.config.FilterChainProxyConfigTests.doNormalOperation(org.springframework.security.web.FilterChainProxy)
2228 - Declaração do método: org.springframework.security.config.FilterChainProxyConfigTests.normalOperationWithNewConfigRegex()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String, java.lang.Class)
org.springframework.security.config.FilterChainProxyConfigTests.checkPathAndFilterOrder(org.springframework.security.web.FilterChainProxy)
org.springframework.security.config.FilterChainProxyConfigTests.doNormalOperation(org.springframework.security.web.FilterChainProxy)
2229 - Declaração do método: org.springframework.security.config.FilterChainProxyConfigTests.normalOperationWithNewConfigNonNamespace()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String, java.lang.Class)
org.springframework.security.config.FilterChainProxyConfigTests.checkPathAndFilterOrder(org.springframework.security.web.FilterChainProxy)
org.springframework.security.config.FilterChainProxyConfigTests.doNormalOperation(org.springframework.security.web.FilterChainProxy)
2230 - Declaração do método: org.springframework.security.config.FilterChainProxyConfigTests.pathWithNoMatchHasNoFilters()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String, java.lang.Class)
org.springframework.security.web.FilterChainProxy.getFilters(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2231 - Declaração do método: org.springframework.security.config.FilterChainProxyConfigTests.mixingPatternsAndPlaceholdersDoesntCauseOrderingIssues()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String, java.lang.Class)
org.springframework.security.web.FilterChainProxy.getFilterChainMap()
java.util.Map.keySet()
java.util.Set.toArray([Lorg.springframework.security.web.util.RequestMatcher;)
org.springframework.security.web.util.AntPathRequestMatcher.getPattern()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.util.AntPathRequestMatcher.getPattern()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.Assert.assertTrue(Z)
2232 - Declaração do método: org.springframework.security.config.FilterChainProxyConfigTests.checkPathAndFilterOrder(org.springframework.security.web.FilterChainProxy)
Métodos invocados: 
org.springframework.security.web.FilterChainProxy.getFilters(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
org.springframework.security.web.FilterChainProxy.getFilters(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
org.springframework.security.web.FilterChainProxy.getFilters(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.web.FilterChainProxy.getFilters(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
2233 - Declaração do método: org.springframework.security.config.FilterChainProxyConfigTests.doNormalOperation(org.springframework.security.web.FilterChainProxy)
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.FilterChainProxy.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.verify(javax.servlet.FilterChain)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.FilterChainProxy.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.verify(javax.servlet.FilterChain)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
2234 - Declaração do método: org.springframework.security.config.TestBusinessBeanImpl.setInteger(I)
2234 - Declaração do método: org.springframework.security.config.TestBusinessBeanImpl.getInteger()
2234 - Declaração do método: org.springframework.security.config.TestBusinessBeanImpl.setString(java.lang.String)
2234 - Declaração do método: org.springframework.security.config.TestBusinessBeanImpl.getString()
2234 - Declaração do método: org.springframework.security.config.TestBusinessBeanImpl.doSomething()
2234 - Declaração do método: org.springframework.security.config.TestBusinessBeanImpl.unprotected()
2234 - Declaração do método: org.springframework.security.config.TestBusinessBeanImpl.onApplicationEvent(org.springframework.security.core.session.SessionCreationEvent)
Métodos invocados: 
java.io.PrintStream.println(java.lang.Object)
2235 - Declaração do método: org.springframework.security.config.InvalidConfigurationTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
2236 - Declaração do método: org.springframework.security.config.InvalidConfigurationTests.passwordEncoderCannotAppearAtTopLevel()
Métodos invocados: 
org.springframework.security.config.InvalidConfigurationTests.setContext(java.lang.String)
2237 - Declaração do método: org.springframework.security.config.InvalidConfigurationTests.authenticationProviderCannotAppearAtTopLevel()
Métodos invocados: 
org.springframework.security.config.InvalidConfigurationTests.setContext(java.lang.String)
2238 - Declaração do método: org.springframework.security.config.InvalidConfigurationTests.missingAuthenticationManagerGivesSensibleErrorMessage()
Métodos invocados: 
org.springframework.security.config.InvalidConfigurationTests.setContext(java.lang.String)
java.lang.Throwable.getCause()
java.lang.Throwable.getCause()
org.junit.Assert.assertTrue(Z)
java.lang.Throwable.getCause()
java.lang.Throwable.getCause()
org.springframework.beans.factory.NoSuchBeanDefinitionException.getBeanName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.core.NestedRuntimeException.getMessage()
java.lang.String.endsWith(java.lang.String)
org.junit.Assert.assertTrue(Z)
2239 - Declaração do método: org.springframework.security.config.InvalidConfigurationTests.setContext(java.lang.String)
2239 - Declaração do método: org.springframework.security.config.TestBusinessBean.setInteger(I)
2239 - Declaração do método: org.springframework.security.config.TestBusinessBean.getInteger()
2239 - Declaração do método: org.springframework.security.config.TestBusinessBean.setString(java.lang.String)
2239 - Declaração do método: org.springframework.security.config.TestBusinessBean.doSomething()
2239 - Declaração do método: org.springframework.security.config.TestBusinessBean.unprotected()
2239 - Declaração do método: org.springframework.security.config.PostProcessedMockUserDetailsService.PostProcessedMockUserDetailsService()
2239 - Declaração do método: org.springframework.security.config.PostProcessedMockUserDetailsService.getPostProcessorWasHere()
2239 - Declaração do método: org.springframework.security.config.PostProcessedMockUserDetailsService.setPostProcessorWasHere(java.lang.String)
2239 - Declaração do método: org.springframework.security.config.PostProcessedMockUserDetailsService.loadUserByUsername(java.lang.String)
2239 - Declaração do método: org.springframework.security.config.DataSourcePopulator.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
2240 - Declaração do método: org.springframework.security.config.DataSourcePopulator.setDataSource(javax.sql.DataSource)
2240 - Declaração do método: org.springframework.security.config.SecurityNamespacehandlerTests.pre3SchemaAreNotSupported()
Métodos invocados: 
org.junit.Assert.fail(java.lang.String)
org.springframework.core.NestedRuntimeException.getMessage()
java.lang.String.contains(java.lang.CharSequence)
org.junit.Assert.assertTrue(Z)
2241 - Declaração do método: org.springframework.security.config.MockUserServiceBeanPostProcessor.postProcessAfterInitialization(java.lang.Object, java.lang.String)
2241 - Declaração do método: org.springframework.security.config.MockUserServiceBeanPostProcessor.postProcessBeforeInitialization(java.lang.Object, java.lang.String)
Métodos invocados: 
org.springframework.security.config.PostProcessedMockUserDetailsService.setPostProcessorWasHere(java.lang.String)
2242 - Declaração do método: org.springframework.security.config.MockAfterInvocationProvider.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection, java.lang.Object)
2242 - Declaração do método: org.springframework.security.config.MockAfterInvocationProvider.supports(org.springframework.security.access.ConfigAttribute)
2242 - Declaração do método: org.springframework.security.config.MockAfterInvocationProvider.supports(java.lang.Class)
2242 - Declaração do método: org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
2243 - Declaração do método: org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParserTests.beanNameIsCorrect()
Métodos invocados: 
java.lang.Class.getName()
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParser.getBeanClassName(org.w3c.dom.Element)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2244 - Declaração do método: org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParserTests.validUsernameIsFound()
Métodos invocados: 
org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
2245 - Declaração do método: org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParserTests.beanIdIsParsedCorrectly()
Métodos invocados: 
org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.junit.Assert.assertTrue(Z)
2246 - Declaração do método: org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParserTests.usernameAndAuthorityQueriesAreParsedCorrectly()
Métodos invocados: 
org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.junit.Assert.assertTrue(Z)
2247 - Declaração do método: org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParserTests.groupQueryIsParsedCorrectly()
Métodos invocados: 
org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
org.junit.Assert.assertTrue(Z)
2248 - Declaração do método: org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParserTests.cacheRefIsparsedCorrectly()
Métodos invocados: 
org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.config.authentication.CachingUserDetailsService.getUserCache()
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
org.springframework.security.config.authentication.CachingUserDetailsService.loadUserByUsername(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.config.authentication.CachingUserDetailsService.loadUserByUsername(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
2249 - Declaração do método: org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParserTests.isSupportedByAuthenticationProviderElement()
Métodos invocados: 
org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
2250 - Declaração do método: org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParserTests.cacheIsInjectedIntoAuthenticationProvider()
Métodos invocados: 
org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.authentication.ProviderManager.getProviders()
java.util.List.get(I)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.getUserCache()
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.getUserCache()
org.springframework.security.core.userdetails.UserCache.getUserFromCache(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.String, java.lang.Object)
2251 - Declaração do método: org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParserTests.rolePrefixIsUsedWhenSet()
Métodos invocados: 
org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2252 - Declaração do método: org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
2252 - Declaração do método: org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
2253 - Declaração do método: org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.worksWithEmbeddedUserService()
Métodos invocados: 
org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.authentication.AuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
2254 - Declaração do método: org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.externalUserServiceRefWorks()
Métodos invocados: 
org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.authentication.AuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
2255 - Declaração do método: org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.providerWithMd5PasswordEncoderWorks()
Métodos invocados: 
org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.authentication.AuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
2256 - Declaração do método: org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.providerWithShaPasswordEncoderWorks()
Métodos invocados: 
org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.authentication.AuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
2257 - Declaração do método: org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.providerWithSha256PasswordEncoderIsSupported()
Métodos invocados: 
org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder.getAlgorithm()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2258 - Declaração do método: org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.passwordIsBase64EncodedWhenBase64IsEnabled()
Métodos invocados: 
org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.authentication.AuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
2259 - Declaração do método: org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.externalUserServicePasswordEncoderAndSaltSourceWork()
Métodos invocados: 
java.lang.Class.getName()
org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.authentication.AuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
2260 - Declaração do método: org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.exernalProviderDoesNotSupportChildElements()
2260 - Declaração do método: org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.getProvider()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.authentication.ProviderManager.getProviders()
java.util.List.get(I)
2261 - Declaração do método: org.springframework.security.config.authentication.AuthenticationProviderBeanDefinitionParserTests.setContext(java.lang.String)
2261 - Declaração do método: org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
2262 - Declaração do método: org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.userServiceWithValidPropertiesFileWorksSuccessfully()
Métodos invocados: 
org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
2263 - Declaração do método: org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.userServiceWithEmbeddedUsersWorksSuccessfully()
Métodos invocados: 
org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
2264 - Declaração do método: org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.namePasswordAndAuthoritiesSupportPlaceholders()
Métodos invocados: 
java.lang.System.setProperty(java.lang.String, java.lang.String)
java.lang.System.setProperty(java.lang.String, java.lang.String)
java.lang.System.setProperty(java.lang.String, java.lang.String)
org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
2265 - Declaração do método: org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.embeddedUsersWithNoPasswordIsGivenGeneratedValue()
Métodos invocados: 
org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getPassword()
java.lang.String.length()
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.UserDetails.getPassword()
java.lang.Long.parseLong(java.lang.String)
2266 - Declaração do método: org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.worksWithOpenIDUrlsAsNames()
Métodos invocados: 
org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2267 - Declaração do método: org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.disabledAndEmbeddedFlagsAreSupported()
Métodos invocados: 
org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.isAccountNonLocked()
org.junit.Assert.assertFalse(Z)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.isEnabled()
org.junit.Assert.assertFalse(Z)
2268 - Declaração do método: org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.userWithBothPropertiesAndEmbeddedUsersThrowsException()
Métodos invocados: 
org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
2269 - Declaração do método: org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.multipleTopLevelUseWithoutIdThrowsException()
Métodos invocados: 
org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.setContext(java.lang.String)
2270 - Declaração do método: org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.userServiceWithMissingPropertiesFileThrowsException()
Métodos invocados: 
org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.setContext(java.lang.String)
2271 - Declaração do método: org.springframework.security.config.authentication.UserServiceBeanDefinitionParserTests.setContext(java.lang.String)
2271 - Declaração do método: org.springframework.security.config.authentication.AuthenticationManagerBeanDefinitionParserTests.providersAreRegisteredAsTopLevelBeans()
Métodos invocados: 
org.springframework.security.config.authentication.AuthenticationManagerBeanDefinitionParserTests.setContext(java.lang.String, java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBeansOfType(java.lang.Class)
java.util.Map.size()
org.junit.Assert.assertEquals(J, J)
2272 - Declaração do método: org.springframework.security.config.authentication.AuthenticationManagerBeanDefinitionParserTests.eventsArePublishedByDefault()
Métodos invocados: 
org.springframework.security.config.authentication.AuthenticationManagerBeanDefinitionParserTests.setContext(java.lang.String, java.lang.String)
org.springframework.context.support.AbstractApplicationContext.addApplicationListener(org.springframework.context.ApplicationListener)
org.springframework.context.support.AbstractApplicationContext.getBeansOfType(java.lang.Class)
java.util.Map.values()
java.util.Collection.toArray()
org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.ProviderManager.authenticate(org.springframework.security.core.Authentication)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
2273 - Declaração do método: org.springframework.security.config.authentication.AuthenticationManagerBeanDefinitionParserTests.credentialsAreClearedByDefault()
Métodos invocados: 
org.springframework.security.config.authentication.AuthenticationManagerBeanDefinitionParserTests.setContext(java.lang.String, java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBeansOfType(java.lang.Class)
java.util.Map.values()
java.util.Collection.toArray()
org.springframework.security.authentication.ProviderManager.isEraseCredentialsAfterAuthentication()
org.junit.Assert.assertTrue(Z)
2274 - Declaração do método: org.springframework.security.config.authentication.AuthenticationManagerBeanDefinitionParserTests.clearCredentialsPropertyIsRespected()
Métodos invocados: 
org.springframework.security.config.authentication.AuthenticationManagerBeanDefinitionParserTests.setContext(java.lang.String, java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBeansOfType(java.lang.Class)
java.util.Map.values()
java.util.Collection.toArray()
org.springframework.security.authentication.ProviderManager.isEraseCredentialsAfterAuthentication()
org.junit.Assert.assertFalse(Z)
2275 - Declaração do método: org.springframework.security.config.authentication.AuthenticationManagerBeanDefinitionParserTests.setContext(java.lang.String, java.lang.String)
2275 - Declaração do método: org.springframework.security.config.authentication.AuthenticationManagerBeanDefinitionParserTests$AuthListener.onApplicationEvent(org.springframework.security.authentication.event.AbstractAuthenticationEvent)
Métodos invocados: 
java.util.List.add(org.springframework.security.authentication.event.AbstractAuthenticationEvent)
2276 - Declaração do método: org.springframework.security.config.http.FilterSecurityMetadataSourceBeanDefinitionParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
2277 - Declaração do método: org.springframework.security.config.http.FilterSecurityMetadataSourceBeanDefinitionParserTests.setContext(java.lang.String)
2277 - Declaração do método: org.springframework.security.config.http.FilterSecurityMetadataSourceBeanDefinitionParserTests.parsingMinimalConfigurationIsSuccessful()
Métodos invocados: 
org.springframework.security.config.http.FilterSecurityMetadataSourceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.config.http.FilterSecurityMetadataSourceBeanDefinitionParserTests.createFilterInvocation(java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource.getAttributes(java.lang.Object)
org.junit.Assert.assertNotNull(java.lang.Object)
java.util.Collection.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2278 - Declaração do método: org.springframework.security.config.http.FilterSecurityMetadataSourceBeanDefinitionParserTests.expressionsAreSupported()
Métodos invocados: 
org.springframework.security.config.http.FilterSecurityMetadataSourceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.config.http.FilterSecurityMetadataSourceBeanDefinitionParserTests.createFilterInvocation(java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource.getAttributes(java.lang.Object)
java.util.Collection.toArray([Lorg.springframework.security.access.ConfigAttribute;)
org.junit.Assert.assertEquals(J, J)
java.lang.Object.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2279 - Declaração do método: org.springframework.security.config.http.FilterSecurityMetadataSourceBeanDefinitionParserTests.interceptUrlsSupportPropertyPlaceholders()
Métodos invocados: 
java.lang.System.setProperty(java.lang.String, java.lang.String)
java.lang.System.setProperty(java.lang.String, java.lang.String)
org.springframework.security.config.http.FilterSecurityMetadataSourceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.config.http.FilterSecurityMetadataSourceBeanDefinitionParserTests.createFilterInvocation(java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource.getAttributes(java.lang.Object)
org.junit.Assert.assertNotNull(java.lang.Object)
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
java.util.Collection.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2280 - Declaração do método: org.springframework.security.config.http.FilterSecurityMetadataSourceBeanDefinitionParserTests.parsingWithinFilterSecurityInterceptorIsSuccessful()
Métodos invocados: 
org.springframework.security.config.http.FilterSecurityMetadataSourceBeanDefinitionParserTests.setContext(java.lang.String)
2281 - Declaração do método: org.springframework.security.config.http.FilterSecurityMetadataSourceBeanDefinitionParserTests.createFilterInvocation(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setMethod(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
2282 - Declaração do método: org.springframework.security.config.ldap.LdapServerBeanDefinitionParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
2283 - Declaração do método: org.springframework.security.config.ldap.LdapServerBeanDefinitionParserTests.embeddedServerCreationContainsExpectedContextSourceAndData()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.ldap.core.LdapTemplate.lookup(java.lang.String)
2284 - Declaração do método: org.springframework.security.config.ldap.LdapServerBeanDefinitionParserTests.useOfUrlAttributeCreatesCorrectContextSource()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.ldap.core.LdapTemplate.lookup(java.lang.String)
2285 - Declaração do método: org.springframework.security.config.ldap.LdapServerBeanDefinitionParserTests.loadingSpecificLdifFileIsSuccessful()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.ldap.core.LdapTemplate.lookup(java.lang.String)
2286 - Declaração do método: org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
2287 - Declaração do método: org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.beanClassNamesAreCorrect()
Métodos invocados: 
java.lang.Class.getName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Class.getName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Class.getName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2288 - Declaração do método: org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.multipleProvidersAreSupported()
Métodos invocados: 
org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.authentication.ProviderManager.getProviders()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.authentication.ProviderManager.getProviders()
java.util.List.get(I)
org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.ProviderManager.getProviders()
java.util.List.get(I)
org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2289 - Declaração do método: org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.simpleProviderAuthenticatesCorrectly()
Métodos invocados: 
org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getAuthorities()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
2290 - Declaração do método: org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.missingServerEltCausesConfigException()
Métodos invocados: 
org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.setContext(java.lang.String)
2291 - Declaração do método: org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.supportsPasswordComparisonAuthentication()
Métodos invocados: 
org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
2292 - Declaração do método: org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.supportsPasswordComparisonAuthenticationWithHashAttribute()
Métodos invocados: 
org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
2293 - Declaração do método: org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.supportsPasswordComparisonAuthenticationWithPasswordEncoder()
Métodos invocados: 
org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
2294 - Declaração do método: org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.detectsNonStandardServerId()
Métodos invocados: 
org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.setContext(java.lang.String)
2295 - Declaração do método: org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.inetOrgContextMapperIsSupported()
Métodos invocados: 
org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
org.junit.Assert.assertTrue(Z)
2296 - Declaração do método: org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.setContext(java.lang.String)
2296 - Declaração do método: org.springframework.security.config.ldap.LdapProviderBeanDefinitionParserTests.getProvider()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.authentication.ProviderManager.getProviders()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.authentication.ProviderManager.getProviders()
java.util.List.get(I)
2297 - Declaração do método: org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
2298 - Declaração do método: org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.beanClassNamesAreCorrect()
Métodos invocados: 
java.lang.Class.getName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Class.getName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Class.getName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Class.getName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Class.getName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Class.getName()
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser.getBeanClassName(org.w3c.dom.Element)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2299 - Declaração do método: org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.minimalConfigurationIsParsedOk()
Métodos invocados: 
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
2300 - Declaração do método: org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.userServiceReturnsExpectedData()
Métodos invocados: 
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.size()
org.junit.Assert.assertEquals(J, J)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2301 - Declaração do método: org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.differentUserSearchBaseWorksAsExpected()
Métodos invocados: 
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2302 - Declaração do método: org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.rolePrefixIsSupported()
Métodos invocados: 
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2303 - Declaração do método: org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.differentGroupRoleAttributeWorksAsExpected()
Métodos invocados: 
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.size()
org.junit.Assert.assertEquals(J, J)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2304 - Declaração do método: org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.isSupportedByAuthenticationProviderElement()
Métodos invocados: 
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
2305 - Declaração do método: org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.personContextMapperIsSupported()
Métodos invocados: 
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.junit.Assert.assertTrue(Z)
2306 - Declaração do método: org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.inetOrgContextMapperIsSupported()
Métodos invocados: 
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.junit.Assert.assertTrue(Z)
2307 - Declaração do método: org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.externalContextMapperIsSupported()
Métodos invocados: 
java.lang.Class.getName()
org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.junit.Assert.assertTrue(Z)
2308 - Declaração do método: org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
2308 - Declaração do método: org.springframework.security.config.method.TestPermissionEvaluator.hasPermission(org.springframework.security.core.Authentication, java.lang.Object, java.lang.Object)
2308 - Declaração do método: org.springframework.security.config.method.TestPermissionEvaluator.hasPermission(org.springframework.security.core.Authentication, java.io.Serializable, java.lang.String, java.lang.Object)
2308 - Declaração do método: org.springframework.security.config.method.InterceptMethodsBeanDefinitionDecoratorTests.loadContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
2309 - Declaração do método: org.springframework.security.config.method.InterceptMethodsBeanDefinitionDecoratorTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2310 - Declaração do método: org.springframework.security.config.method.InterceptMethodsBeanDefinitionDecoratorTests.targetDoesntLoseApplicationListenerInterface()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBeansOfType(java.lang.Class)
java.util.Map.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.context.support.AbstractApplicationContext.getBeanNamesForType(java.lang.Class)
org.junit.Assert.assertEquals(J, J)
org.springframework.context.support.AbstractApplicationContext.publishEvent(org.springframework.context.ApplicationEvent)
org.junit.Assert.assertTrue(Z)
2311 - Declaração do método: org.springframework.security.config.method.InterceptMethodsBeanDefinitionDecoratorTests.targetShouldAllowUnprotectedMethodInvocationWithNoContext()
Métodos invocados: 
org.springframework.security.config.TestBusinessBean.unprotected()
2312 - Declaração do método: org.springframework.security.config.method.InterceptMethodsBeanDefinitionDecoratorTests.targetShouldPreventProtectedMethodInvocationWithNoContext()
Métodos invocados: 
org.springframework.security.config.TestBusinessBean.doSomething()
2313 - Declaração do método: org.springframework.security.config.method.InterceptMethodsBeanDefinitionDecoratorTests.targetShouldAllowProtectedMethodInvocationWithCorrectRole()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.config.TestBusinessBean.doSomething()
2314 - Declaração do método: org.springframework.security.config.method.InterceptMethodsBeanDefinitionDecoratorTests.targetShouldPreventProtectedMethodInvocationWithIncorrectRole()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.config.TestBusinessBean.doSomething()
org.junit.Assert.fail(java.lang.String)
2315 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.loadContext()
Métodos invocados: 
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
2316 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2317 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.targetShouldPreventProtectedMethodInvocationWithNoContext()
Métodos invocados: 
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.loadContext()
org.springframework.security.access.annotation.BusinessService.someUserMethod1()
2318 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.targetShouldAllowProtectedMethodInvocationWithCorrectRole()
Métodos invocados: 
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.loadContext()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.access.annotation.BusinessService.someUserMethod1()
org.springframework.aop.framework.Advised.getAdvisors()
org.junit.Assert.assertEquals(J, J)
org.springframework.aop.support.AbstractPointcutAdvisor.getOrder()
org.junit.Assert.assertEquals(J, J)
2319 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.targetShouldPreventProtectedMethodInvocationWithIncorrectRole()
Métodos invocados: 
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.loadContext()
org.springframework.security.authentication.AbstractAuthenticationToken.setAuthenticated(Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.access.annotation.BusinessService.someAdminMethod()
2320 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.doesntInterfereWithBeanPostProcessing()
Métodos invocados: 
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.config.PostProcessedMockUserDetailsService.getPostProcessorWasHere()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2321 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.worksWithAspectJAutoproxy()
Métodos invocados: 
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
2322 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.supportsMethodArgumentsInPointcut()
Métodos invocados: 
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.access.annotation.BusinessService.someOther(I)
org.springframework.security.access.annotation.BusinessService.someOther(java.lang.String)
org.junit.Assert.fail(java.lang.String)
2323 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.supportsBooleanPointcutExpressions()
Métodos invocados: 
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.access.annotation.BusinessService.someOther(java.lang.String)
org.springframework.security.access.annotation.BusinessService.someOther(I)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.access.annotation.BusinessService.someOther(I)
2324 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.duplicateElementCausesError()
Métodos invocados: 
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.setContext(java.lang.String)
2325 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.worksWithoutTargetOrClass()
Métodos invocados: 
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.access.annotation.BusinessService.someUserMethod1()
2326 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.expressionVoterAndAfterInvocationProviderUseSameExpressionHandlerInstance()
Métodos invocados: 
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBeansOfType(java.lang.Class)
java.util.Map.values()
java.util.Collection.toArray()
org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
java.util.List.get(I)
org.springframework.context.support.AbstractApplicationContext.getBeansOfType(java.lang.Class)
java.util.Map.values()
java.util.Collection.toArray()
org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor.getAdvice()
org.springframework.security.access.intercept.AbstractSecurityInterceptor.getAfterInvocationManager()
org.springframework.security.access.intercept.AfterInvocationProviderManager.getProviders()
java.util.List.get(I)
org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
org.junit.Assert.assertTrue(Z)
2327 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.accessIsDeniedForHasRoleExpression()
Métodos invocados: 
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.access.annotation.BusinessService.someAdminMethod()
2328 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.beanNameExpressionPropertyIsSupported()
Métodos invocados: 
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.access.annotation.ExpressionProtectedBusinessServiceImpl.methodWithBeanNamePropertyAccessExpression(java.lang.String)
2329 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.preAndPostFilterAnnotationsWorkWithLists()
Métodos invocados: 
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
org.springframework.security.access.annotation.BusinessService.methodReturningAList(java.util.List)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2330 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.prePostFilterAnnotationWorksWithArrays()
Métodos invocados: 
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.access.annotation.BusinessService.methodReturningAnArray([Ljava.lang.Object;)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2331 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.customPermissionEvaluatorIsSupported()
Métodos invocados: 
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.setContext(java.lang.String)
2332 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.genericsAreMatchedByProtectPointcut()
Métodos invocados: 
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests$Foo.foo(org.springframework.security.access.ConfigAttribute)
2333 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.genericsMethodArgumentNamesAreResolved()
Métodos invocados: 
java.lang.Class.getName()
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests$Foo.foo(org.springframework.security.access.ConfigAttribute)
2334 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.runAsManagerIsSetCorrectly()
Métodos invocados: 
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.context.support.StaticApplicationContext.registerSingleton(java.lang.String, java.lang.Class, org.springframework.beans.MutablePropertyValues)
org.springframework.context.support.AbstractApplicationContext.refresh()
org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.setContext(java.lang.String, org.springframework.context.ApplicationContext)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBeansOfType(java.lang.Class)
java.util.Map.values()
java.util.Collection.toArray()
org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor.getAdvice()
org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
2335 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.setContext(java.lang.String)
2335 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests.setContext(java.lang.String, org.springframework.context.ApplicationContext)
2335 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests$Foo.foo(org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests$Foo$T)
2335 - Declaração do método: org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParserTests$ConcreteFoo.foo(org.springframework.security.access.SecurityConfig)
2335 - Declaração do método: org.springframework.security.config.method.Jsr250AnnotationDrivenBeanDefinitionParserTests.loadContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
2336 - Declaração do método: org.springframework.security.config.method.Jsr250AnnotationDrivenBeanDefinitionParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2337 - Declaração do método: org.springframework.security.config.method.Jsr250AnnotationDrivenBeanDefinitionParserTests.targetShouldPreventProtectedMethodInvocationWithNoContext()
Métodos invocados: 
org.springframework.security.access.annotation.BusinessService.someUserMethod1()
2338 - Declaração do método: org.springframework.security.config.method.Jsr250AnnotationDrivenBeanDefinitionParserTests.permitAllShouldBeDefaultAttribute()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.access.annotation.BusinessService.someOther(I)
2339 - Declaração do método: org.springframework.security.config.method.Jsr250AnnotationDrivenBeanDefinitionParserTests.targetShouldAllowProtectedMethodInvocationWithCorrectRole()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.access.annotation.BusinessService.someUserMethod1()
2340 - Declaração do método: org.springframework.security.config.method.Jsr250AnnotationDrivenBeanDefinitionParserTests.targetShouldPreventProtectedMethodInvocationWithIncorrectRole()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.access.annotation.BusinessService.someAdminMethod()
2341 - Declaração do método: org.springframework.security.config.method.SecuredAnnotationDrivenBeanDefinitionParserTests.loadContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
2342 - Declaração do método: org.springframework.security.config.method.SecuredAnnotationDrivenBeanDefinitionParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2343 - Declaração do método: org.springframework.security.config.method.SecuredAnnotationDrivenBeanDefinitionParserTests.targetShouldPreventProtectedMethodInvocationWithNoContext()
Métodos invocados: 
org.springframework.security.access.annotation.BusinessService.someUserMethod1()
2344 - Declaração do método: org.springframework.security.config.method.SecuredAnnotationDrivenBeanDefinitionParserTests.targetShouldAllowProtectedMethodInvocationWithCorrectRole()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.access.annotation.BusinessService.someUserMethod1()
2345 - Declaração do método: org.springframework.security.config.method.SecuredAnnotationDrivenBeanDefinitionParserTests.targetShouldPreventProtectedMethodInvocationWithIncorrectRole()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.access.annotation.BusinessService.someAdminMethod()
2346 - Declaração do método: org.springframework.security.config.method.SecuredAnnotationDrivenBeanDefinitionParserTests.targetIsSerializableBeforeUse()
Métodos invocados: 
org.springframework.security.config.method.SecuredAnnotationDrivenBeanDefinitionParserTests.serializeAndDeserialize(java.lang.Object)
org.springframework.security.access.annotation.BusinessService.someAdminMethod()
2347 - Declaração do método: org.springframework.security.config.method.SecuredAnnotationDrivenBeanDefinitionParserTests.targetIsSerializableAfterUse()
Métodos invocados: 
org.springframework.security.access.annotation.BusinessService.someAdminMethod()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.config.method.SecuredAnnotationDrivenBeanDefinitionParserTests.serializeAndDeserialize(java.lang.Object)
org.springframework.security.access.annotation.BusinessService.someAdminMethod()
2348 - Declaração do método: org.springframework.security.config.method.SecuredAnnotationDrivenBeanDefinitionParserTests.serializeAndDeserialize(java.lang.Object)
Métodos invocados: 
java.io.ObjectOutputStream.writeObject(java.lang.Object)
java.io.ObjectOutputStream.flush()
java.io.OutputStream.flush()
java.io.ByteArrayOutputStream.toByteArray()
java.io.ObjectInputStream.readObject()
2349 - Declaração do método: org.springframework.security.config.util.InMemoryXmlApplicationContext.InMemoryXmlApplicationContext(java.lang.String)
2349 - Declaração do método: org.springframework.security.config.util.InMemoryXmlApplicationContext.InMemoryXmlApplicationContext(java.lang.String, org.springframework.context.ApplicationContext)
2349 - Declaração do método: org.springframework.security.config.util.InMemoryXmlApplicationContext.InMemoryXmlApplicationContext(java.lang.String, java.lang.String, org.springframework.context.ApplicationContext)
Métodos invocados: 
org.springframework.context.support.AbstractRefreshableApplicationContext.setAllowBeanDefinitionOverriding(Z)
org.springframework.context.support.AbstractApplicationContext.setParent(org.springframework.context.ApplicationContext)
org.springframework.context.support.AbstractApplicationContext.refresh()
2350 - Declaração do método: org.springframework.security.config.util.InMemoryXmlApplicationContext.getConfigResources()
2350 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorWithAopConfigTests.clearContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2351 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorWithAopConfigTests.closeAppContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.springframework.context.support.AbstractApplicationContext.close()
2352 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorWithAopConfigTests.securityInterceptorIsAppliedWhenUsedWithAopConfig()
Métodos invocados: 
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorWithAopConfigTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.ITargetObject.makeLowerCase(java.lang.String)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.ITargetObject.makeUpperCase(java.lang.String)
2353 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorWithAopConfigTests.securityInterceptorIsAppliedWhenUsedWithBeanNameAutoProxyCreator()
Métodos invocados: 
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorWithAopConfigTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.ITargetObject.makeLowerCase(java.lang.String)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.ITargetObject.makeUpperCase(java.lang.String)
2354 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorWithAopConfigTests.setContext(java.lang.String)
2354 - Declaração do método: org.springframework.security.integration.UserDetailsServiceImpl.loadUserByUsername(java.lang.String)
2354 - Declaração do método: org.springframework.security.integration.UserDetailsServiceImpl.setUserRepository(org.springframework.security.integration.UserRepository)
2354 - Declaração do método: org.springframework.security.integration.UserRepository.doSomething()
2354 - Declaração do método: org.springframework.security.integration.multiannotation.SecuredService.securedMethod()
2354 - Declaração do método: org.springframework.security.integration.multiannotation.SecuredServiceImpl.securedMethod()
2354 - Declaração do método: org.springframework.security.integration.multiannotation.MultiAnnotationService.preAuthorizeDenyAllMethod()
2354 - Declaração do método: org.springframework.security.integration.multiannotation.MultiAnnotationService.preAuthorizeHasRoleAMethod()
2354 - Declaração do método: org.springframework.security.integration.multiannotation.MultiAnnotationService.securedAnonymousMethod()
2354 - Declaração do método: org.springframework.security.integration.multiannotation.MultiAnnotationService.securedRoleAMethod()
2354 - Declaração do método: org.springframework.security.integration.multiannotation.MultiAnnotationServiceImpl.preAuthorizeDenyAllMethod()
2354 - Declaração do método: org.springframework.security.integration.multiannotation.MultiAnnotationServiceImpl.preAuthorizeHasRoleAMethod()
2354 - Declaração do método: org.springframework.security.integration.multiannotation.MultiAnnotationServiceImpl.securedAnonymousMethod()
2354 - Declaração do método: org.springframework.security.integration.multiannotation.MultiAnnotationServiceImpl.securedRoleAMethod()
2354 - Declaração do método: org.springframework.security.integration.multiannotation.PreAuthorizeService.preAuthorizedMethod()
2354 - Declaração do método: org.springframework.security.integration.multiannotation.PreAuthorizeServiceImpl.preAuthorizedMethod()
2354 - Declaração do método: org.springframework.security.integration.python.TestService.someMethod()
2354 - Declaração do método: org.springframework.security.integration.python.PythonInterpreterPrePostInvocationAttributeFactory.PythonInterpreterPrePostInvocationAttributeFactory()
Métodos invocados: 
java.lang.System.getProperties()
org.python.util.PythonInterpreter.initialize(java.util.Properties, java.util.Properties, [Ljava.lang.String;)
2355 - Declaração do método: org.springframework.security.integration.python.PythonInterpreterPrePostInvocationAttributeFactory.createPreInvocationAttribute(org.springframework.security.access.prepost.PreFilter, org.springframework.security.access.prepost.PreAuthorize)
Métodos invocados: 
org.springframework.security.access.prepost.PreAuthorize.value()
2356 - Declaração do método: org.springframework.security.integration.python.PythonInterpreterPrePostInvocationAttributeFactory.createPostInvocationAttribute(org.springframework.security.access.prepost.PostFilter, org.springframework.security.access.prepost.PostAuthorize)
2356 - Declaração do método: org.springframework.security.integration.python.PythonInterpreterPreInvocationAdvice.before(org.springframework.security.core.Authentication, org.aopalliance.intercept.MethodInvocation, org.springframework.security.access.prepost.PreInvocationAttribute)
Métodos invocados: 
org.springframework.security.integration.python.PythonInterpreterPreInvocationAttribute.getScript()
org.python.util.PythonInterpreter.set(java.lang.String, java.lang.Object)
org.springframework.security.integration.python.PythonInterpreterPreInvocationAdvice.createArgumentMap(org.aopalliance.intercept.MethodInvocation)
org.python.util.PythonInterpreter.set(java.lang.String, java.lang.Object)
org.aopalliance.intercept.MethodInvocation.getMethod()
java.lang.reflect.Method.getName()
org.python.util.PythonInterpreter.set(java.lang.String, java.lang.Object)
org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResource(java.lang.String)
org.springframework.core.io.InputStreamSource.getInputStream()
org.python.util.PythonInterpreter.execfile(java.io.InputStream)
org.python.util.PythonInterpreter.get(java.lang.String)
org.python.core.Py.tojava(org.python.core.PyObject, java.lang.Class)
2357 - Declaração do método: org.springframework.security.integration.python.PythonInterpreterPreInvocationAdvice.createArgumentMap(org.aopalliance.intercept.MethodInvocation)
Métodos invocados: 
org.aopalliance.intercept.Invocation.getArguments()
org.aopalliance.intercept.Joinpoint.getThis()
org.aopalliance.intercept.MethodInvocation.getMethod()
java.lang.Object.getClass()
org.springframework.util.ClassUtils.getMostSpecificMethod(java.lang.reflect.Method, java.lang.Class)
org.springframework.core.ParameterNameDiscoverer.getParameterNames(java.lang.reflect.Method)
java.util.Map.put(java.lang.String, java.lang.Object)
2358 - Declaração do método: org.springframework.security.integration.python.PythonInterpreterPreInvocationAttribute.PythonInterpreterPreInvocationAttribute(java.lang.String)
2358 - Declaração do método: org.springframework.security.integration.python.PythonInterpreterPreInvocationAttribute.getAttribute()
2358 - Declaração do método: org.springframework.security.integration.python.PythonInterpreterPreInvocationAttribute.getScript()
2358 - Declaração do método: org.springframework.security.integration.python.PythonInterpreterPostInvocationAdvice.after(org.springframework.security.core.Authentication, org.aopalliance.intercept.MethodInvocation, org.springframework.security.access.prepost.PostInvocationAttribute, java.lang.Object)
2358 - Declaração do método: org.springframework.security.integration.python.TestServiceImpl.someMethod()
Métodos invocados: 
java.io.PrintStream.print(java.lang.String)
2359 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeUserDetails()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
2360 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeUserDetailsFromAuthoritiesPopulator()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
2361 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeServiceProperties()
Métodos invocados: 
org.springframework.security.cas.ServiceProperties.setSendRenew(Z)
org.springframework.security.cas.ServiceProperties.setService(java.lang.String)
2362 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests.statefulAuthenticationIsSuccessful()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationProvider.setAuthenticationUserDetailsService(org.springframework.security.core.userdetails.AuthenticationUserDetailsService)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.cas.authentication.StatelessTicketCache)
org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.cas.authentication.CasAuthenticationProvider.setServiceProperties(org.springframework.security.cas.ServiceProperties)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.cas.authentication.CasAuthenticationProvider.afterPropertiesSet()
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.cas.authentication.CasAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.cas.authentication.StatelessTicketCache.getByTicketId(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeUserDetailsFromAuthoritiesPopulator()
org.springframework.security.cas.authentication.CasAuthenticationToken.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.cas.authentication.CasAuthenticationToken.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
java.util.Collection.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
java.util.Collection.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.cas.authentication.CasAuthenticationProvider.getKey()
java.lang.String.hashCode()
org.springframework.security.cas.authentication.CasAuthenticationToken.getKeyHash()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.authentication.AbstractAuthenticationToken.getDetails()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.cas.authentication.CasAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2363 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests.statelessAuthenticationIsSuccessful()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationProvider.setAuthenticationUserDetailsService(org.springframework.security.core.userdetails.AuthenticationUserDetailsService)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.cas.authentication.StatelessTicketCache)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.cas.authentication.CasAuthenticationProvider.setServiceProperties(org.springframework.security.cas.ServiceProperties)
org.springframework.security.cas.authentication.CasAuthenticationProvider.afterPropertiesSet()
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.cas.authentication.CasAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.cas.authentication.StatelessTicketCache.getByTicketId(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeUserDetailsFromAuthoritiesPopulator()
org.springframework.security.core.Authentication.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.Authentication.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.Authentication.getDetails()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.cas.authentication.CasAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeUserDetailsFromAuthoritiesPopulator()
org.springframework.security.core.Authentication.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.Authentication.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2364 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests.missingTicketIdIsDetected()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationProvider.setAuthenticationUserDetailsService(org.springframework.security.core.userdetails.AuthenticationUserDetailsService)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.cas.authentication.StatelessTicketCache)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.cas.authentication.CasAuthenticationProvider.setServiceProperties(org.springframework.security.cas.ServiceProperties)
org.springframework.security.cas.authentication.CasAuthenticationProvider.afterPropertiesSet()
org.springframework.security.cas.authentication.CasAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
2365 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests.invalidKeyIsDetected()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationProvider.setAuthenticationUserDetailsService(org.springframework.security.core.userdetails.AuthenticationUserDetailsService)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.cas.authentication.StatelessTicketCache)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.cas.authentication.CasAuthenticationProvider.setServiceProperties(org.springframework.security.cas.ServiceProperties)
org.springframework.security.cas.authentication.CasAuthenticationProvider.afterPropertiesSet()
org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeUserDetails()
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
2366 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests.detectsMissingAuthoritiesPopulator()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.cas.authentication.StatelessTicketCache)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.cas.authentication.CasAuthenticationProvider.setServiceProperties(org.springframework.security.cas.ServiceProperties)
org.springframework.security.cas.authentication.CasAuthenticationProvider.afterPropertiesSet()
2367 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests.detectsMissingKey()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationProvider.setAuthenticationUserDetailsService(org.springframework.security.core.userdetails.AuthenticationUserDetailsService)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.cas.authentication.StatelessTicketCache)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.cas.authentication.CasAuthenticationProvider.setServiceProperties(org.springframework.security.cas.ServiceProperties)
org.springframework.security.cas.authentication.CasAuthenticationProvider.afterPropertiesSet()
2368 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests.detectsMissingStatelessTicketCache()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.cas.authentication.StatelessTicketCache)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setAuthenticationUserDetailsService(org.springframework.security.core.userdetails.AuthenticationUserDetailsService)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.cas.authentication.CasAuthenticationProvider.setServiceProperties(org.springframework.security.cas.ServiceProperties)
org.springframework.security.cas.authentication.CasAuthenticationProvider.afterPropertiesSet()
2369 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests.detectsMissingTicketValidator()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationProvider.setAuthenticationUserDetailsService(org.springframework.security.core.userdetails.AuthenticationUserDetailsService)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.cas.authentication.StatelessTicketCache)
org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.cas.authentication.CasAuthenticationProvider.setServiceProperties(org.springframework.security.cas.ServiceProperties)
org.springframework.security.cas.authentication.CasAuthenticationProvider.afterPropertiesSet()
2370 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests.gettersAndSettersMatch()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationProvider.setAuthenticationUserDetailsService(org.springframework.security.core.userdetails.AuthenticationUserDetailsService)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.cas.authentication.StatelessTicketCache)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.cas.authentication.CasAuthenticationProvider.setServiceProperties(org.springframework.security.cas.ServiceProperties)
org.springframework.security.cas.authentication.CasAuthenticationProvider.afterPropertiesSet()
org.springframework.security.cas.authentication.CasAuthenticationProvider.getKey()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.cas.authentication.CasAuthenticationProvider.getStatelessTicketCache()
org.junit.Assert.assertTrue(Z)
org.springframework.security.cas.authentication.CasAuthenticationProvider.getTicketValidator()
org.junit.Assert.assertTrue(Z)
2371 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests.ignoresClassesItDoesNotSupport()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationProvider.setAuthenticationUserDetailsService(org.springframework.security.core.userdetails.AuthenticationUserDetailsService)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.cas.authentication.StatelessTicketCache)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.cas.authentication.CasAuthenticationProvider.setServiceProperties(org.springframework.security.cas.ServiceProperties)
org.springframework.security.cas.authentication.CasAuthenticationProvider.afterPropertiesSet()
org.springframework.security.cas.authentication.CasAuthenticationProvider.supports(java.lang.Class)
org.junit.Assert.assertFalse(Z)
org.springframework.security.cas.authentication.CasAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2372 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests.ignoresUsernamePasswordAuthenticationTokensWithoutCasIdentifiersAsPrincipal()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationProvider.setAuthenticationUserDetailsService(org.springframework.security.core.userdetails.AuthenticationUserDetailsService)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.cas.authentication.StatelessTicketCache)
org.springframework.security.cas.authentication.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.cas.authentication.CasAuthenticationProvider.setServiceProperties(org.springframework.security.cas.ServiceProperties)
org.springframework.security.cas.authentication.CasAuthenticationProvider.afterPropertiesSet()
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.cas.authentication.CasAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2373 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests.supportsRequiredTokens()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationProvider.supports(java.lang.Class)
org.junit.Assert.assertTrue(Z)
org.springframework.security.cas.authentication.CasAuthenticationProvider.supports(java.lang.Class)
org.junit.Assert.assertTrue(Z)
2374 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests$MockAuthoritiesPopulator.loadUserDetails(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationProviderTests.makeUserDetailsFromAuthoritiesPopulator()
2375 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests$MockStatelessTicketCache.getByTicketId(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
2376 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests$MockStatelessTicketCache.putTicketInCache(org.springframework.security.cas.authentication.CasAuthenticationToken)
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationToken.getCredentials()
java.lang.Object.toString()
java.util.Map.put(java.lang.String, org.springframework.security.cas.authentication.CasAuthenticationToken)
2377 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests$MockStatelessTicketCache.removeTicketFromCache(org.springframework.security.cas.authentication.CasAuthenticationToken)
2377 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests$MockStatelessTicketCache.removeTicketFromCache(java.lang.String)
2377 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests$MockTicketValidator.MockTicketValidator(Z)
2377 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationProviderTests$MockTicketValidator.validate(java.lang.String, java.lang.String)
2377 - Declaração do método: org.springframework.security.cas.authentication.EhCacheBasedTicketCacheTests.initCacheManaer()
Métodos invocados: 
net.sf.ehcache.CacheManager.addCache(net.sf.ehcache.Cache)
2378 - Declaração do método: org.springframework.security.cas.authentication.EhCacheBasedTicketCacheTests.shutdownCacheManager()
Métodos invocados: 
net.sf.ehcache.CacheManager.removalAll()
net.sf.ehcache.CacheManager.shutdown()
2379 - Declaração do método: org.springframework.security.cas.authentication.EhCacheBasedTicketCacheTests.testCacheOperation()
Métodos invocados: 
net.sf.ehcache.CacheManager.getCache(java.lang.String)
org.springframework.security.cas.authentication.EhCacheBasedTicketCache.setCache(net.sf.ehcache.Ehcache)
org.springframework.security.cas.authentication.EhCacheBasedTicketCache.afterPropertiesSet()
org.springframework.security.cas.authentication.AbstractStatelessTicketCacheTests.getToken()
org.springframework.security.cas.authentication.EhCacheBasedTicketCache.putTicketInCache(org.springframework.security.cas.authentication.CasAuthenticationToken)
org.springframework.security.cas.authentication.EhCacheBasedTicketCache.getByTicketId(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.cas.authentication.AbstractStatelessTicketCacheTests.getToken()
org.springframework.security.cas.authentication.EhCacheBasedTicketCache.removeTicketFromCache(org.springframework.security.cas.authentication.CasAuthenticationToken)
org.springframework.security.cas.authentication.EhCacheBasedTicketCache.getByTicketId(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.cas.authentication.EhCacheBasedTicketCache.getByTicketId(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.cas.authentication.EhCacheBasedTicketCache.getByTicketId(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
2380 - Declaração do método: org.springframework.security.cas.authentication.EhCacheBasedTicketCacheTests.testStartupDetectsMissingCache()
Métodos invocados: 
org.springframework.security.cas.authentication.EhCacheBasedTicketCache.afterPropertiesSet()
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
net.sf.ehcache.CacheManager.getCache(java.lang.String)
org.springframework.security.cas.authentication.EhCacheBasedTicketCache.setCache(net.sf.ehcache.Ehcache)
org.springframework.security.cas.authentication.EhCacheBasedTicketCache.getCache()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2381 - Declaração do método: org.springframework.security.cas.authentication.AbstractStatelessTicketCacheTests.getToken()
Métodos invocados: 
java.util.List.add(java.lang.String)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
2382 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails(java.lang.String)
2383 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails(java.lang.String)
2383 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationTokenTests.setUp()
2383 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationTokenTests.testConstructorRejectsNulls()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2384 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationTokenTests.testEqualsWhenEqual()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2385 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationTokenTests.testGetters()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
java.lang.String.hashCode()
org.springframework.security.cas.authentication.CasAuthenticationToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.cas.authentication.CasAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.cas.authentication.CasAuthenticationToken.getAssertion()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.cas.authentication.CasAuthenticationToken.getUserDetails()
org.springframework.security.core.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2386 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationTokenTests.testNoArgConstructorDoesntExist()
Métodos invocados: 
java.lang.Class.getDeclaredConstructor([Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2387 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationTokenTests.testNotEqualsDueToAbstractParentEqualsCheck()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails(java.lang.String)
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
2388 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationTokenTests.testNotEqualsDueToDifferentAuthenticationClass()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
2389 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationTokenTests.testNotEqualsDueToKey()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
2390 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationTokenTests.testNotEqualsDueToAssertion()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
2391 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationTokenTests.testSetAuthenticated()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.setAuthenticated(Z)
org.springframework.security.authentication.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
2392 - Declaração do método: org.springframework.security.cas.authentication.CasAuthenticationTokenTests.testToString()
Métodos invocados: 
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.cas.authentication.CasAuthenticationToken.toString()
java.lang.String.lastIndexOf(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2393 - Declaração do método: org.springframework.security.cas.authentication.NullStatelessTicketCacheTests.testGetter()
Métodos invocados: 
org.springframework.security.cas.authentication.StatelessTicketCache.getByTicketId(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.cas.authentication.StatelessTicketCache.getByTicketId(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
2394 - Declaração do método: org.springframework.security.cas.authentication.NullStatelessTicketCacheTests.testInsertAndGet()
Métodos invocados: 
org.springframework.security.cas.authentication.AbstractStatelessTicketCacheTests.getToken()
org.springframework.security.cas.authentication.StatelessTicketCache.putTicketInCache(org.springframework.security.cas.authentication.CasAuthenticationToken)
org.springframework.security.cas.authentication.CasAuthenticationToken.getCredentials()
org.springframework.security.cas.authentication.StatelessTicketCache.getByTicketId(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
2395 - Declaração do método: org.springframework.security.cas.web.ServicePropertiesTests.testDetectsMissingLoginFormUrl()
Métodos invocados: 
org.springframework.security.cas.ServiceProperties.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2396 - Declaração do método: org.springframework.security.cas.web.ServicePropertiesTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.cas.ServiceProperties.setSendRenew(Z)
org.springframework.security.cas.ServiceProperties.isSendRenew()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.cas.ServiceProperties.setSendRenew(Z)
org.springframework.security.cas.ServiceProperties.isSendRenew()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.cas.ServiceProperties.setService(java.lang.String)
org.springframework.security.cas.ServiceProperties.getService()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.cas.ServiceProperties.afterPropertiesSet()
2397 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationFilterTests.testGetters()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getFilterProcessesUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2398 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationFilterTests.testNormalOperation()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.cas.web.CasAuthenticationFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertTrue(Z)
2399 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationFilterTests$1.authenticate(org.springframework.security.core.Authentication)
2399 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationFilterTests.testNullServiceTicketHandledGracefully()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.cas.web.CasAuthenticationFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2400 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationFilterTests$2.authenticate(org.springframework.security.core.Authentication)
2400 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationEntryPointTests.testDetectsMissingLoginFormUrl()
Métodos invocados: 
org.springframework.security.cas.web.CasAuthenticationEntryPoint.setServiceProperties(org.springframework.security.cas.ServiceProperties)
org.springframework.security.cas.web.CasAuthenticationEntryPoint.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2401 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationEntryPointTests.testDetectsMissingServiceProperties()
Métodos invocados: 
org.springframework.security.cas.web.CasAuthenticationEntryPoint.setLoginUrl(java.lang.String)
org.springframework.security.cas.web.CasAuthenticationEntryPoint.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2402 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationEntryPointTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.cas.web.CasAuthenticationEntryPoint.setLoginUrl(java.lang.String)
org.springframework.security.cas.web.CasAuthenticationEntryPoint.getLoginUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.cas.web.CasAuthenticationEntryPoint.setServiceProperties(org.springframework.security.cas.ServiceProperties)
org.springframework.security.cas.web.CasAuthenticationEntryPoint.getServiceProperties()
junit.framework.Assert.assertTrue(Z)
2403 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationEntryPointTests.testNormalOperationWithRenewFalse()
Métodos invocados: 
org.springframework.security.cas.ServiceProperties.setSendRenew(Z)
org.springframework.security.cas.ServiceProperties.setService(java.lang.String)
org.springframework.security.cas.web.CasAuthenticationEntryPoint.setLoginUrl(java.lang.String)
org.springframework.security.cas.web.CasAuthenticationEntryPoint.setServiceProperties(org.springframework.security.cas.ServiceProperties)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.cas.web.CasAuthenticationEntryPoint.afterPropertiesSet()
org.springframework.security.cas.web.CasAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2404 - Declaração do método: org.springframework.security.cas.web.CasAuthenticationEntryPointTests.testNormalOperationWithRenewTrue()
Métodos invocados: 
org.springframework.security.cas.ServiceProperties.setSendRenew(Z)
org.springframework.security.cas.ServiceProperties.setService(java.lang.String)
org.springframework.security.cas.web.CasAuthenticationEntryPoint.setLoginUrl(java.lang.String)
org.springframework.security.cas.web.CasAuthenticationEntryPoint.setServiceProperties(org.springframework.security.cas.ServiceProperties)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.cas.web.CasAuthenticationEntryPoint.afterPropertiesSet()
org.springframework.security.cas.web.CasAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2405 - Declaração do método: org.springframework.security.integration.SEC933ApplicationContextTests.testSimpleApplicationContextBootstrap()
Métodos invocados: 
org.junit.Assert.assertNotNull(java.lang.Object)
2406 - Declaração do método: org.springframework.security.integration.StubUserRepository.doSomething()
2406 - Declaração do método: org.springframework.security.integration.HttpNamespaceWithMultipleInterceptorsTests.requestThatIsMatchedByDefaultInterceptorIsAllowed()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.integration.HttpNamespaceWithMultipleInterceptorsTests.createAuthenticatedSession([Ljava.lang.String;)
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.springframework.security.web.FilterChainProxy.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
2407 - Declaração do método: org.springframework.security.integration.HttpNamespaceWithMultipleInterceptorsTests.securedUrlAccessIsRejectedWithoutRequiredRole()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.integration.HttpNamespaceWithMultipleInterceptorsTests.createAuthenticatedSession([Ljava.lang.String;)
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.springframework.security.web.FilterChainProxy.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
2408 - Declaração do método: org.springframework.security.integration.HttpNamespaceWithMultipleInterceptorsTests.createAuthenticatedSession([Ljava.lang.String;)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.mock.web.MockHttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2409 - Declaração do método: org.springframework.security.integration.SEC936ApplicationContextTests.securityInterceptorHandlesCallWithNoTargetObject()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.core.session.SessionRegistry.getAllPrincipals()
2410 - Declaração do método: org.springframework.security.integration.MultiAnnotationTests.clearContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2411 - Declaração do método: org.springframework.security.integration.MultiAnnotationTests.preAuthorizeDeniedIsDenied()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.integration.multiannotation.MultiAnnotationService.preAuthorizeDenyAllMethod()
2412 - Declaração do método: org.springframework.security.integration.MultiAnnotationTests.preAuthorizeRoleAIsDeniedIfRoleMissing()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.integration.multiannotation.MultiAnnotationService.preAuthorizeHasRoleAMethod()
2413 - Declaração do método: org.springframework.security.integration.MultiAnnotationTests.preAuthorizeRoleAIsAllowedIfRolePresent()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.integration.multiannotation.MultiAnnotationService.preAuthorizeHasRoleAMethod()
2414 - Declaração do método: org.springframework.security.integration.MultiAnnotationTests.securedAnonymousIsAllowed()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.integration.multiannotation.MultiAnnotationService.securedAnonymousMethod()
2415 - Declaração do método: org.springframework.security.integration.MultiAnnotationTests.securedRoleAIsDeniedIfRoleMissing()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.integration.multiannotation.MultiAnnotationService.securedRoleAMethod()
2416 - Declaração do método: org.springframework.security.integration.MultiAnnotationTests.securedRoleAIsAllowedIfRolePresent()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.integration.multiannotation.MultiAnnotationService.securedRoleAMethod()
2417 - Declaração do método: org.springframework.security.integration.MultiAnnotationTests.preAuthorizedOnlyServiceDeniesIfRoleMissing()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.integration.multiannotation.PreAuthorizeService.preAuthorizedMethod()
2418 - Declaração do método: org.springframework.security.integration.MultiAnnotationTests.securedOnlyRoleAServiceDeniesIfRoleMissing()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.integration.multiannotation.SecuredService.securedMethod()
2419 - Declaração do método: org.springframework.security.integration.python.PythonInterpreterBasedSecurityTests.serviceMethod()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.integration.python.TestService.someMethod()
2420 - Declaração do método: org.springframework.security.performance.FilterChainPerformanceTests.createAuthenticatedSession()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.core.context.SecurityContextHolder.getContext()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2421 - Declaração do método: org.springframework.security.performance.FilterChainPerformanceTests.clearContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2422 - Declaração do método: org.springframework.security.performance.FilterChainPerformanceTests.dumpStopWatch()
Métodos invocados: 
org.springframework.util.StopWatch.prettyPrint()
java.io.PrintStream.println(java.lang.String)
2423 - Declaração do método: org.springframework.security.performance.FilterChainPerformanceTests.createRequest(java.lang.String)
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setMethod(java.lang.String)
2424 - Declaração do método: org.springframework.security.performance.FilterChainPerformanceTests.runWithStack(org.springframework.security.web.FilterChainProxy)
Métodos invocados: 
org.springframework.security.performance.FilterChainPerformanceTests.createRequest(java.lang.String)
org.springframework.security.web.FilterChainProxy.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletRequest.getSession()
2425 - Declaração do método: org.springframework.security.performance.FilterChainPerformanceTests.minimalStackInvocation()
Métodos invocados: 
org.springframework.util.StopWatch.start(java.lang.String)
org.springframework.security.performance.FilterChainPerformanceTests.runWithStack(org.springframework.security.web.FilterChainProxy)
org.springframework.util.StopWatch.stop()
2426 - Declaração do método: org.springframework.security.performance.FilterChainPerformanceTests.fullStackInvocation()
Métodos invocados: 
org.springframework.util.StopWatch.start(java.lang.String)
org.springframework.security.performance.FilterChainPerformanceTests.runWithStack(org.springframework.security.web.FilterChainProxy)
org.springframework.util.StopWatch.stop()
2427 - Declaração do método: org.springframework.security.performance.FilterChainPerformanceTests.provideDataOnScalingWithNumberOfAuthoritiesUserHas()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.performance.FilterChainPerformanceTests.createRoles(I)
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.core.context.SecurityContextHolder.getContext()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
java.lang.Integer.toString(I)
org.springframework.util.StopWatch.start(java.lang.String)
org.springframework.security.performance.FilterChainPerformanceTests.runWithStack(org.springframework.security.web.FilterChainProxy)
org.springframework.util.StopWatch.shortSummary()
java.io.PrintStream.println(java.lang.String)
org.springframework.util.StopWatch.stop()
org.springframework.util.StopWatch.prettyPrint()
java.io.PrintStream.println(java.lang.String)
2428 - Declaração do método: org.springframework.security.performance.FilterChainPerformanceTests.createRoles(I)
Métodos invocados: 
java.util.Arrays.asList([Lorg.springframework.security.core.GrantedAuthority;)
2429 - Declaração do método: org.springframework.security.integration.JspTaglibTests.getContextConfigLocations()
2429 - Declaração do método: org.springframework.security.integration.JspTaglibTests.authenticationTagEscapingWorksCorrectly()
Métodos invocados: 
org.springframework.security.integration.AbstractWebServerIntegrationTests.beginAt(java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.login(java.lang.String, java.lang.String)
net.sourceforge.jwebunit.junit.WebTester.getServerResponse()
java.lang.String.contains(java.lang.CharSequence)
org.testng.Assert.assertTrue(Z)
java.lang.String.contains(java.lang.CharSequence)
org.testng.Assert.assertTrue(Z)
java.lang.String.contains(java.lang.CharSequence)
org.testng.Assert.assertTrue(Z)
java.lang.String.contains(java.lang.CharSequence)
org.testng.Assert.assertTrue(Z)
2430 - Declaração do método: org.springframework.security.integration.JspTaglibTests.authorizationTagEvaluatesExpressionCorrectlyAndWritesValueToVariable()
Métodos invocados: 
org.springframework.security.integration.AbstractWebServerIntegrationTests.beginAt(java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.login(java.lang.String, java.lang.String)
net.sourceforge.jwebunit.junit.WebTester.getServerResponse()
java.lang.String.contains(java.lang.CharSequence)
org.testng.Assert.assertTrue(Z)
java.lang.String.contains(java.lang.CharSequence)
org.testng.Assert.assertFalse(Z)
java.lang.String.contains(java.lang.CharSequence)
org.testng.Assert.assertTrue(Z)
2431 - Declaração do método: org.springframework.security.integration.CustomConcurrentSessionManagementTests.getContextConfigLocations()
2431 - Declaração do método: org.springframework.security.integration.CustomConcurrentSessionManagementTests.maxConcurrentLoginsValueIsRespected()
Métodos invocados: 
org.springframework.security.integration.AbstractWebServerIntegrationTests.beginAt(java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.login(java.lang.String, java.lang.String)
java.io.PrintStream.println(java.lang.String)
net.sourceforge.jwebunit.junit.WebTester.getTestContext()
org.springframework.security.integration.AbstractWebServerIntegrationTests.getBaseUrl()
net.sourceforge.jwebunit.util.TestContext.setBaseUrl(java.lang.String)
net.sourceforge.jwebunit.junit.WebTester.beginAt(java.lang.String)
net.sourceforge.jwebunit.junit.WebTester.setTextField(java.lang.String, java.lang.String)
net.sourceforge.jwebunit.junit.WebTester.setTextField(java.lang.String, java.lang.String)
net.sourceforge.jwebunit.junit.WebTester.setIgnoreFailingStatusCodes(Z)
net.sourceforge.jwebunit.junit.WebTester.submit()
net.sourceforge.jwebunit.junit.WebTester.getServerResponse()
java.lang.String.contains(java.lang.CharSequence)
org.junit.Assert.assertTrue(Z)
2432 - Declaração do método: org.springframework.security.integration.InMemoryProviderWebAppTests.getContextConfigLocations()
2432 - Declaração do método: org.springframework.security.integration.InMemoryProviderWebAppTests.loginFailsWithinvalidPassword()
Métodos invocados: 
org.springframework.security.integration.AbstractWebServerIntegrationTests.beginAt(java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.login(java.lang.String, java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.assertTextPresent(java.lang.String)
2433 - Declaração do método: org.springframework.security.integration.InMemoryProviderWebAppTests.loginSucceedsWithCorrectPassword()
Métodos invocados: 
org.springframework.security.integration.AbstractWebServerIntegrationTests.beginAt(java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.login(java.lang.String, java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.assertTextPresent(java.lang.String)
net.sourceforge.jwebunit.junit.WebTester.gotoPage(java.lang.String)
2434 - Declaração do método: org.springframework.security.integration.InMemoryProviderWebAppTests.basicAuthenticationIsSuccessful()
Métodos invocados: 
net.sourceforge.jwebunit.junit.WebTester.getTestContext()
net.sourceforge.jwebunit.util.TestContext.setAuthorization(java.lang.String, java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.beginAt(java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.beginAt(java.lang.String)
2435 - Declaração do método: org.springframework.security.integration.InMemoryProviderWebAppTests.savedRequestWithJspIncludeSeesCorrectParams()
Métodos invocados: 
org.springframework.security.integration.AbstractWebServerIntegrationTests.beginAt(java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.login(java.lang.String, java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.assertTextPresent(java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.assertTextPresent(java.lang.String)
2436 - Declaração do método: org.springframework.security.integration.InMemoryProviderWebAppTests.redirectToUrlWithSpecialCharsInFilenameWorksOk()
Métodos invocados: 
org.springframework.security.integration.AbstractWebServerIntegrationTests.beginAt(java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.login(java.lang.String, java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.assertTextPresent(java.lang.String)
2437 - Declaração do método: org.springframework.security.integration.InMemoryProviderWebAppTests.persistentLoginIsSuccesful()
Métodos invocados: 
org.springframework.security.integration.AbstractWebServerIntegrationTests.beginAt(java.lang.String)
net.sourceforge.jwebunit.junit.WebTester.checkCheckbox(java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.login(java.lang.String, java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.getRememberMeCookie()
org.testng.Assert.assertNotNull(java.lang.Object)
net.sourceforge.jwebunit.junit.WebTester.closeBrowser()
net.sourceforge.jwebunit.junit.WebTester.getTestContext()
net.sourceforge.jwebunit.util.TestContext.addCookie(javax.servlet.http.Cookie)
org.springframework.security.integration.AbstractWebServerIntegrationTests.beginAt(java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.assertTextPresent(java.lang.String)
2438 - Declaração do método: org.springframework.security.integration.InMemoryProviderWebAppTests.maxConcurrentLoginsValueIsRespected()
Métodos invocados: 
java.io.PrintStream.println(java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.beginAt(java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.login(java.lang.String, java.lang.String)
java.io.PrintStream.println(java.lang.String)
net.sourceforge.jwebunit.junit.WebTester.getTestContext()
org.springframework.security.integration.AbstractWebServerIntegrationTests.getBaseUrl()
net.sourceforge.jwebunit.util.TestContext.setBaseUrl(java.lang.String)
net.sourceforge.jwebunit.junit.WebTester.beginAt(java.lang.String)
net.sourceforge.jwebunit.junit.WebTester.setTextField(java.lang.String, java.lang.String)
net.sourceforge.jwebunit.junit.WebTester.setTextField(java.lang.String, java.lang.String)
net.sourceforge.jwebunit.junit.WebTester.getTestingEngine()
net.sourceforge.jwebunit.api.ITestingEngine.submit()
java.io.PrintStream.println(java.lang.String)
net.sourceforge.jwebunit.junit.WebTester.gotoPage(java.lang.String)
net.sourceforge.jwebunit.junit.WebTester.assertTextPresent(java.lang.String)
2439 - Declaração do método: org.springframework.security.integration.AbstractWebServerIntegrationTests.getContextConfigLocations()
2439 - Declaração do método: org.springframework.security.integration.AbstractWebServerIntegrationTests.getContextPath()
2439 - Declaração do método: org.springframework.security.integration.AbstractWebServerIntegrationTests.startServer()
Métodos invocados: 
org.springframework.security.integration.AbstractWebServerIntegrationTests.createWebContext()
org.mortbay.jetty.Server.addHandler(org.mortbay.jetty.Handler)
org.mortbay.component.AbstractLifeCycle.start()
2440 - Declaração do método: org.springframework.security.integration.AbstractWebServerIntegrationTests.createWebContext()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.getContextPath()
org.springframework.security.integration.AbstractWebServerIntegrationTests.getContextConfigLocations()
org.springframework.util.StringUtils.hasText(java.lang.String)
org.mortbay.jetty.webapp.WebAppContext.addEventListener(java.util.EventListener)
org.mortbay.jetty.webapp.WebAppContext.addEventListener(java.util.EventListener)
org.mortbay.jetty.handler.ContextHandler.getInitParams()
org.springframework.security.integration.AbstractWebServerIntegrationTests.getContextConfigLocations()
java.util.Map.put(java.lang.Object, java.lang.Object)
org.mortbay.jetty.servlet.Holder.setName(java.lang.String)
java.lang.Class.getName()
org.mortbay.jetty.servlet.Holder.setClassName(java.lang.String)
org.mortbay.jetty.servlet.Context.addServlet(org.mortbay.jetty.servlet.ServletHolder, java.lang.String)
2441 - Declaração do método: org.springframework.security.integration.AbstractWebServerIntegrationTests.stopServer()
Métodos invocados: 
org.mortbay.component.AbstractLifeCycle.stop()
2442 - Declaração do método: org.springframework.security.integration.AbstractWebServerIntegrationTests.initializeTester()
Métodos invocados: 
net.sourceforge.jwebunit.junit.WebTester.getTestContext()
org.springframework.security.integration.AbstractWebServerIntegrationTests.getBaseUrl()
net.sourceforge.jwebunit.util.TestContext.setBaseUrl(java.lang.String)
2443 - Declaração do método: org.springframework.security.integration.AbstractWebServerIntegrationTests.resetWebConversation()
Métodos invocados: 
net.sourceforge.jwebunit.junit.WebTester.closeBrowser()
net.sourceforge.jwebunit.junit.WebTester.setTestContext(net.sourceforge.jwebunit.util.TestContext)
2444 - Declaração do método: org.springframework.security.integration.AbstractWebServerIntegrationTests.getBaseUrl()
Métodos invocados: 
org.mortbay.jetty.Server.getConnectors()
org.mortbay.jetty.Connector.getLocalPort()
org.springframework.security.integration.AbstractWebServerIntegrationTests.getContextPath()
2445 - Declaração do método: org.springframework.security.integration.AbstractWebServerIntegrationTests.getBean(java.lang.String)
Métodos invocados: 
org.springframework.security.integration.AbstractWebServerIntegrationTests.getAppContext()
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
2446 - Declaração do método: org.springframework.security.integration.AbstractWebServerIntegrationTests.getAppContext()
Métodos invocados: 
org.mortbay.jetty.handler.HandlerWrapper.getHandler()
org.mortbay.jetty.handler.ContextHandler.getServletContext()
org.springframework.web.context.support.WebApplicationContextUtils.getRequiredWebApplicationContext(javax.servlet.ServletContext)
2447 - Declaração do método: org.springframework.security.integration.AbstractWebServerIntegrationTests.getRememberMeCookie()
Métodos invocados: 
net.sourceforge.jwebunit.junit.WebTester.getTestingEngine()
net.sourceforge.jwebunit.api.ITestingEngine.getCookies()
javax.servlet.http.Cookie.getName()
java.lang.String.equals(java.lang.Object)
2448 - Declaração do método: org.springframework.security.integration.AbstractWebServerIntegrationTests.submit()
Métodos invocados: 
net.sourceforge.jwebunit.junit.WebTester.submit()
2449 - Declaração do método: org.springframework.security.integration.AbstractWebServerIntegrationTests.beginAt(java.lang.String)
Métodos invocados: 
net.sourceforge.jwebunit.junit.WebTester.beginAt(java.lang.String)
2450 - Declaração do método: org.springframework.security.integration.AbstractWebServerIntegrationTests.setTextField(java.lang.String, java.lang.String)
Métodos invocados: 
net.sourceforge.jwebunit.junit.WebTester.setTextField(java.lang.String, java.lang.String)
2451 - Declaração do método: org.springframework.security.integration.AbstractWebServerIntegrationTests.assertFormPresent()
Métodos invocados: 
net.sourceforge.jwebunit.junit.WebTester.assertFormPresent()
2452 - Declaração do método: org.springframework.security.integration.AbstractWebServerIntegrationTests.assertTextPresent(java.lang.String)
Métodos invocados: 
net.sourceforge.jwebunit.junit.WebTester.assertTextPresent(java.lang.String)
2453 - Declaração do método: org.springframework.security.integration.AbstractWebServerIntegrationTests.login(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.integration.AbstractWebServerIntegrationTests.assertFormPresent()
org.springframework.security.integration.AbstractWebServerIntegrationTests.setTextField(java.lang.String, java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.setTextField(java.lang.String, java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.submit()
2454 - Declaração do método: org.springframework.security.integration.BasicAuthenticationTests.getContextConfigLocations()
2454 - Declaração do método: org.springframework.security.integration.BasicAuthenticationTests.basicAuthenticationIsSuccessful()
Métodos invocados: 
net.sourceforge.jwebunit.junit.WebTester.setIgnoreFailingStatusCodes(Z)
org.springframework.security.integration.AbstractWebServerIntegrationTests.beginAt(java.lang.String)
net.sourceforge.jwebunit.junit.WebTester.setIgnoreFailingStatusCodes(Z)
net.sourceforge.jwebunit.junit.WebTester.assertHeaderEquals(java.lang.String, java.lang.String)
net.sourceforge.jwebunit.junit.WebTester.getTestContext()
net.sourceforge.jwebunit.util.TestContext.setAuthorization(java.lang.String, java.lang.String)
org.springframework.security.integration.AbstractWebServerIntegrationTests.beginAt(java.lang.String)
2455 - Declaração do método: org.springframework.security.integration.LdapWebAppTests.getContextConfigLocations()
2455 - Declaração do método: org.springframework.security.integration.LdapWebAppTests.doSomething()
2455 - Declaração do método: org.springframework.security.ldap.DefaultSpringSecurityContextSourceTests.instantiationSucceedsWithExpectedProperties()
Métodos invocados: 
org.springframework.ldap.core.support.AbstractContextSource.isAnonymousReadOnly()
org.junit.Assert.assertFalse(Z)
org.springframework.ldap.core.support.AbstractContextSource.isPooled()
org.junit.Assert.assertTrue(Z)
2456 - Declaração do método: org.springframework.security.ldap.DefaultSpringSecurityContextSourceTests.supportsSpacesInUrl()
2456 - Declaração do método: org.springframework.security.ldap.DefaultSpringSecurityContextSourceTests.poolingFlagIsSetWhenAuthenticationDnMatchesManagerUserDn()
Métodos invocados: 
org.springframework.ldap.core.support.AbstractContextSource.setUserDn(java.lang.String)
org.springframework.ldap.core.support.AbstractContextSource.setPassword(java.lang.String)
org.springframework.ldap.core.support.AbstractContextSource.afterPropertiesSet()
org.springframework.security.ldap.DefaultSpringSecurityContextSourceTests$EnvExposingDefaultSpringSecurityContextSource.getAuthenticatedEnvForTest(java.lang.String, java.lang.String)
java.util.Hashtable.containsKey(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2457 - Declaração do método: org.springframework.security.ldap.DefaultSpringSecurityContextSourceTests.poolingFlagIsNotSetWhenAuthenticationDnIsNotManagerUserDn()
Métodos invocados: 
org.springframework.ldap.core.support.AbstractContextSource.setUserDn(java.lang.String)
org.springframework.ldap.core.support.AbstractContextSource.setPassword(java.lang.String)
org.springframework.ldap.core.support.AbstractContextSource.afterPropertiesSet()
org.springframework.security.ldap.DefaultSpringSecurityContextSourceTests$EnvExposingDefaultSpringSecurityContextSource.getAuthenticatedEnvForTest(java.lang.String, java.lang.String)
java.util.Hashtable.containsKey(java.lang.Object)
org.junit.Assert.assertFalse(Z)
2458 - Declaração do método: org.springframework.security.ldap.DefaultSpringSecurityContextSourceTests.cantBindWithWrongPasswordImmediatelyAfterSuccessfulBind()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
org.springframework.ldap.core.ContextSource.getContext(java.lang.String, java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
javax.naming.Context.close()
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
org.springframework.ldap.core.ContextSource.getContext(java.lang.String, java.lang.String)
2459 - Declaração do método: org.springframework.security.ldap.DefaultSpringSecurityContextSourceTests$EnvExposingDefaultSpringSecurityContextSource.EnvExposingDefaultSpringSecurityContextSource(java.lang.String)
2459 - Declaração do método: org.springframework.security.ldap.DefaultSpringSecurityContextSourceTests$EnvExposingDefaultSpringSecurityContextSource.getAuthenticatedEnvForTest(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.ldap.core.support.AbstractContextSource.getAuthenticatedEnv(java.lang.String, java.lang.String)
2460 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests.onSetUp()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
2461 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests.compareOfCorrectValueSucceeds()
Métodos invocados: 
org.springframework.security.ldap.SpringSecurityLdapTemplate.compare(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
2462 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests.compareOfCorrectByteValueSucceeds()
Métodos invocados: 
org.springframework.security.ldap.LdapUtils.getUtf8Bytes(java.lang.String)
org.springframework.security.ldap.SpringSecurityLdapTemplate.compare(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
2463 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests.compareOfWrongByteValueFails()
Métodos invocados: 
org.springframework.security.ldap.LdapUtils.getUtf8Bytes(java.lang.String)
org.springframework.security.ldap.SpringSecurityLdapTemplate.compare(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertFalse(Z)
2464 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests.compareOfWrongValueFails()
Métodos invocados: 
org.springframework.security.ldap.SpringSecurityLdapTemplate.compare(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertFalse(Z)
2465 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests.namingExceptionIsTranslatedCorrectly()
Métodos invocados: 
org.springframework.ldap.core.LdapTemplate.executeReadOnly(org.springframework.ldap.core.ContextExecutor)
org.junit.Assert.fail(java.lang.String)
2466 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests$1.executeWithContext(javax.naming.directory.DirContext)
2466 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests.roleSearchReturnsCorrectNumberOfRoles()
Métodos invocados: 
org.springframework.security.ldap.SpringSecurityLdapTemplate.searchForSingleAttributeValues(java.lang.String, java.lang.String, [Ljava.lang.Object;, java.lang.String)
java.util.Set.size()
org.junit.Assert.assertEquals(java.lang.String, J, J)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2467 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests.testRoleSearchForMissingAttributeFailsGracefully()
Métodos invocados: 
org.springframework.security.ldap.SpringSecurityLdapTemplate.searchForSingleAttributeValues(java.lang.String, java.lang.String, [Ljava.lang.Object;, java.lang.String)
java.util.Set.size()
org.junit.Assert.assertEquals(J, J)
2468 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests.roleSearchWithEscapedCharacterSucceeds()
Métodos invocados: 
org.springframework.security.ldap.SpringSecurityLdapTemplate.searchForSingleAttributeValues(java.lang.String, java.lang.String, [Ljava.lang.Object;, java.lang.String)
java.util.Set.size()
org.junit.Assert.assertEquals(J, J)
2469 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests.nonSpringLdapSearchCodeTestMethod()
Métodos invocados: 
java.util.Hashtable.put(java.lang.String, java.lang.String)
java.util.Hashtable.put(java.lang.String, java.lang.String)
java.util.Hashtable.put(java.lang.String, java.lang.String)
java.util.Hashtable.put(java.lang.String, java.lang.String)
javax.naming.directory.SearchControls.setSearchScope(I)
javax.naming.directory.SearchControls.setReturningObjFlag(Z)
javax.naming.directory.SearchControls.setReturningAttributes([Ljava.lang.String;)
javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, [Ljava.lang.Object;, javax.naming.directory.SearchControls)
javax.naming.NamingEnumeration.hasMore()
org.junit.Assert.assertTrue(java.lang.String, Z)
2470 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests.searchForSingleEntryWithEscapedCharsInDnSucceeds()
Métodos invocados: 
org.springframework.security.ldap.SpringSecurityLdapTemplate.searchForSingleEntry(java.lang.String, java.lang.String, [Ljava.lang.Object;)
2471 - Declaração do método: org.springframework.security.ldap.LdapUtilsTests.testCloseContextSwallowsNamingException()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(javax.naming.directory.DirContext)
javax.naming.Context.close()
org.jmock.Expectations.throwException(java.lang.Throwable)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.ldap.LdapUtils.closeContext(javax.naming.Context)
2472 - Declaração do método: org.springframework.security.ldap.LdapUtilsTests.testGetRelativeNameReturnsEmptyStringForDnEqualToBaseName()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.atLeast(I)
org.jmock.syntax.ReceiverClause.of(javax.naming.directory.DirContext)
javax.naming.Context.getNameInNamespace()
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.ldap.LdapUtils.getRelativeName(java.lang.String, javax.naming.Context)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2473 - Declaração do método: org.springframework.security.ldap.LdapUtilsTests.testGetRelativeNameReturnsFullDnWithEmptyBaseName()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.atLeast(I)
org.jmock.syntax.ReceiverClause.of(javax.naming.directory.DirContext)
javax.naming.Context.getNameInNamespace()
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.ldap.LdapUtils.getRelativeName(java.lang.String, javax.naming.Context)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2474 - Declaração do método: org.springframework.security.ldap.LdapUtilsTests.testGetRelativeNameWorksWithArbitrarySpaces()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.atLeast(I)
org.jmock.syntax.ReceiverClause.of(javax.naming.directory.DirContext)
javax.naming.Context.getNameInNamespace()
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.ldap.LdapUtils.getRelativeName(java.lang.String, javax.naming.Context)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2475 - Declaração do método: org.springframework.security.ldap.LdapUtilsTests.testRootDnsAreParsedFromUrlsCorrectly()
Métodos invocados: 
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2476 - Declaração do método: org.springframework.security.ldap.SpringSecurityAuthenticationSourceTests.clearContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2477 - Declaração do método: org.springframework.security.ldap.SpringSecurityAuthenticationSourceTests.principalAndCredentialsAreEmptyWithNoAuthentication()
Métodos invocados: 
org.springframework.ldap.core.AuthenticationSource.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.ldap.core.AuthenticationSource.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2478 - Declaração do método: org.springframework.security.ldap.SpringSecurityAuthenticationSourceTests.principalIsEmptyForAnonymousUser()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.ldap.core.AuthenticationSource.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2479 - Declaração do método: org.springframework.security.ldap.SpringSecurityAuthenticationSourceTests.getPrincipalRejectsNonLdapUserDetailsObject()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.ldap.core.AuthenticationSource.getPrincipal()
2480 - Declaração do método: org.springframework.security.ldap.SpringSecurityAuthenticationSourceTests.expectedCredentialsAreReturned()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.ldap.core.AuthenticationSource.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2481 - Declaração do método: org.springframework.security.ldap.SpringSecurityAuthenticationSourceTests.expectedPrincipalIsReturned()
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setUsername(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setDn(javax.naming.Name)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.createUserDetails()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.ldap.core.AuthenticationSource.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2482 - Declaração do método: org.springframework.security.ldap.AbstractLdapIntegrationTests.AbstractLdapIntegrationTests()
2482 - Declaração do método: org.springframework.security.ldap.AbstractLdapIntegrationTests.startServer()
Métodos invocados: 
org.springframework.ldap.core.support.AbstractContextSource.afterPropertiesSet()
org.springframework.security.ldap.server.ApacheDSContainer.afterPropertiesSet()
2483 - Declaração do método: org.springframework.security.ldap.AbstractLdapIntegrationTests.stopServer()
Métodos invocados: 
org.springframework.security.ldap.server.ApacheDSContainer.stop()
2484 - Declaração do método: org.springframework.security.ldap.AbstractLdapIntegrationTests.onSetUp()
2484 - Declaração do método: org.springframework.security.ldap.AbstractLdapIntegrationTests.reloadServerDataIfDirty()
Métodos invocados: 
org.springframework.core.io.AbstractFileResolvingResource.getFile()
java.io.File.exists()
org.springframework.core.io.AbstractFileResolvingResource.getFile()
java.io.File.getAbsolutePath()
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
org.springframework.ldap.core.ContextSource.getReadWriteContext()
org.springframework.security.ldap.AbstractLdapIntegrationTests.clearSubContexts(javax.naming.directory.DirContext, javax.naming.Name)
org.springframework.security.ldap.server.ApacheDSContainer.getService()
org.apache.directory.server.core.DefaultDirectoryService.getAdminSession()
org.springframework.core.io.AbstractFileResolvingResource.getFile()
java.io.File.getAbsolutePath()
org.apache.directory.server.protocol.shared.store.LdifFileLoader.execute()
javax.naming.Context.close()
2485 - Declaração do método: org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
2485 - Declaração do método: org.springframework.security.ldap.AbstractLdapIntegrationTests.clearSubContexts(javax.naming.directory.DirContext, javax.naming.Name)
Métodos invocados: 
javax.naming.Context.listBindings(javax.naming.Name)
javax.naming.NamingEnumeration.hasMore()
javax.naming.NamingEnumeration.next()
javax.naming.NameClassPair.getName()
org.springframework.ldap.core.DistinguishedName.prepend(org.springframework.ldap.core.DistinguishedName)
javax.naming.Context.destroySubcontext(javax.naming.Name)
org.springframework.security.ldap.AbstractLdapIntegrationTests.clearSubContexts(javax.naming.directory.DirContext, javax.naming.Name)
javax.naming.Context.destroySubcontext(javax.naming.Name)
java.lang.Throwable.printStackTrace()
javax.naming.NamingEnumeration.close()
2486 - Declaração do método: org.springframework.security.ldap.authentication.PasswordComparisonAuthenticatorMockTests.ldapCompareOperationIsUsedWhenPasswordIsNotRetrieved()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.mock(java.lang.Class)
javax.naming.directory.BasicAttributes.put(javax.naming.directory.Attribute)
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setUserDnPatterns([Ljava.lang.String;)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.allowing(org.springframework.ldap.core.support.BaseLdapPathContextSource)
org.springframework.ldap.core.ContextSource.getReadOnlyContext()
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.oneOf(javax.naming.directory.DirContext)
org.jmock.Expectations.equal(java.lang.String)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.jmock.Expectations.aNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
javax.naming.directory.DirContext.getAttributes(java.lang.String, [Ljava.lang.String;)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.oneOf(javax.naming.directory.DirContext)
javax.naming.Context.getNameInNamespace()
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(javax.naming.directory.DirContext)
org.jmock.Expectations.equal(java.lang.String)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.jmock.Expectations.equal(java.lang.String)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.jmock.Expectations.aNonNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.jmock.Expectations.aNonNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, [Ljava.lang.Object;, javax.naming.directory.SearchControls)
javax.naming.directory.Attributes.getAll()
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.atLeast(I)
org.jmock.syntax.ReceiverClause.of(javax.naming.directory.DirContext)
javax.naming.Context.close()
org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.authenticate(org.springframework.security.core.Authentication)
org.jmock.Mockery.assertIsSatisfied()
2487 - Declaração do método: org.springframework.security.ldap.authentication.MockUserSearch.MockUserSearch()
2487 - Declaração do método: org.springframework.security.ldap.authentication.MockUserSearch.MockUserSearch(org.springframework.ldap.core.DirContextOperations)
2487 - Declaração do método: org.springframework.security.ldap.authentication.MockUserSearch.searchForUser(java.lang.String)
2487 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProviderTests.testSupportsUsernamePasswordAuthenticationToken()
Métodos invocados: 
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.supports(java.lang.Class)
org.junit.Assert.assertTrue(Z)
2488 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProviderTests.testDefaultMapperIsSet()
Métodos invocados: 
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.getUserDetailsContextMapper()
org.junit.Assert.assertTrue(Z)
2489 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProviderTests.testEmptyOrNullUserNameThrowsException()
Métodos invocados: 
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.fail(java.lang.String)
2490 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProviderTests.usernameNotFoundExceptionIsHiddenByDefault()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.ldap.authentication.LdapAuthenticator)
org.springframework.security.ldap.authentication.LdapAuthenticator.authenticate(org.springframework.security.core.Authentication)
org.jmock.Expectations.throwException(java.lang.Throwable)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
2491 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProviderTests.usernameNotFoundExceptionIsNotHiddenIfConfigured()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.ldap.authentication.LdapAuthenticator)
org.springframework.security.ldap.authentication.LdapAuthenticator.authenticate(org.springframework.security.core.Authentication)
org.jmock.Expectations.throwException(java.lang.Throwable)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.setHideUserNotFoundExceptions(Z)
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
2492 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProviderTests.normalUsage()
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.setRoleAttributes([Ljava.lang.String;)
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.setUserDetailsContextMapper(org.springframework.security.ldap.userdetails.UserDetailsContextMapper)
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.getAuthoritiesPopulator()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.core.Authentication.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.Authentication.getDetails()
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.authentication.LdapAuthenticationProviderTests$MockAuthoritiesPopulator.getRequestedUsername()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2493 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProviderTests.passwordIsSetFromUserDataIfUseAuthenticationRequestCredentialsIsFalse()
Métodos invocados: 
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.setUseAuthenticationRequestCredentials(Z)
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.core.Authentication.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2494 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProviderTests.useWithNullAuthoritiesPopulatorReturnsCorrectRole()
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.setRoleAttributes([Ljava.lang.String;)
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.setUserDetailsContextMapper(org.springframework.security.ldap.userdetails.UserDetailsContextMapper)
org.springframework.security.ldap.authentication.LdapAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2495 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProviderTests$MockAuthenticator.authenticate(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
java.security.Principal.getName()
org.springframework.security.core.Authentication.getCredentials()
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setDn(javax.naming.Name)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setDn(javax.naming.Name)
2496 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProviderTests$MockAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
2497 - Declaração do método: org.springframework.security.ldap.authentication.LdapAuthenticationProviderTests$MockAuthoritiesPopulator.getRequestedUsername()
2497 - Declaração do método: org.springframework.security.ldap.authentication.PasswordComparisonAuthenticatorTests.onSetUp()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.setPasswordEncoder(org.springframework.security.authentication.encoding.PasswordEncoder)
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setUserDnPatterns([Ljava.lang.String;)
2498 - Declaração do método: org.springframework.security.ldap.authentication.PasswordComparisonAuthenticatorTests.testAllAttributesAreRetrievedByDefault()
Métodos invocados: 
org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.authenticate(org.springframework.security.core.Authentication)
org.springframework.ldap.core.DirContextAdapter.getAttributes()
javax.naming.directory.Attributes.size()
org.junit.Assert.assertEquals(java.lang.String, J, J)
2499 - Declaração do método: org.springframework.security.ldap.authentication.PasswordComparisonAuthenticatorTests.testFailedSearchGivesUserNotFoundException()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.getUserDns(java.lang.String)
java.util.List.isEmpty()
org.junit.Assert.assertTrue(java.lang.String, Z)
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setUserSearch(org.springframework.security.ldap.search.LdapUserSearch)
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.afterPropertiesSet()
org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.fail(java.lang.String)
2500 - Declaração do método: org.springframework.security.ldap.authentication.PasswordComparisonAuthenticatorTests.testLdapPasswordCompareFailsWithWrongPassword()
Métodos invocados: 
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setUserAttributes([Ljava.lang.String;)
org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.authenticate(org.springframework.security.core.Authentication)
2501 - Declaração do método: org.springframework.security.ldap.authentication.PasswordComparisonAuthenticatorTests.testMultipleDnPatternsWorkOk()
Métodos invocados: 
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setUserDnPatterns([Ljava.lang.String;)
org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.authenticate(org.springframework.security.core.Authentication)
2502 - Declaração do método: org.springframework.security.ldap.authentication.PasswordComparisonAuthenticatorTests.testOnlySpecifiedAttributesAreRetrieved()
Métodos invocados: 
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setUserAttributes([Ljava.lang.String;)
org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.authenticate(org.springframework.security.core.Authentication)
org.springframework.ldap.core.DirContextAdapter.getAttributes()
javax.naming.directory.Attributes.size()
org.junit.Assert.assertEquals(java.lang.String, J, J)
2503 - Declaração do método: org.springframework.security.ldap.authentication.PasswordComparisonAuthenticatorTests.testLdapCompareSucceedsWithCorrectPassword()
Métodos invocados: 
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setUserAttributes([Ljava.lang.String;)
org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.authenticate(org.springframework.security.core.Authentication)
2504 - Declaração do método: org.springframework.security.ldap.authentication.PasswordComparisonAuthenticatorTests.testLdapCompareSucceedsWithShaEncodedPassword()
Métodos invocados: 
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setUserAttributes([Ljava.lang.String;)
org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.setPasswordEncoder(org.springframework.security.authentication.encoding.PasswordEncoder)
org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.authenticate(org.springframework.security.core.Authentication)
2505 - Declaração do método: org.springframework.security.ldap.authentication.PasswordComparisonAuthenticatorTests.testPasswordEncoderCantBeNull()
Métodos invocados: 
org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.setPasswordEncoder(org.springframework.security.authentication.encoding.PasswordEncoder)
2506 - Declaração do método: org.springframework.security.ldap.authentication.PasswordComparisonAuthenticatorTests.testUseOfDifferentPasswordAttributeSucceeds()
Métodos invocados: 
org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.setPasswordAttributeName(java.lang.String)
org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.authenticate(org.springframework.security.core.Authentication)
2507 - Declaração do método: org.springframework.security.ldap.authentication.PasswordComparisonAuthenticatorTests.testLdapCompareWithDifferentPasswordAttributeSucceeds()
Métodos invocados: 
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setUserAttributes([Ljava.lang.String;)
org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.setPasswordAttributeName(java.lang.String)
org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.authenticate(org.springframework.security.core.Authentication)
2508 - Declaração do método: org.springframework.security.ldap.authentication.PasswordComparisonAuthenticatorTests.testWithUserSearch()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.setPasswordEncoder(org.springframework.security.authentication.encoding.PasswordEncoder)
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.getUserDns(java.lang.String)
java.util.List.isEmpty()
org.junit.Assert.assertTrue(java.lang.String, Z)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setUserSearch(org.springframework.security.ldap.search.LdapUserSearch)
org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator.authenticate(org.springframework.security.core.Authentication)
2509 - Declaração do método: org.springframework.security.ldap.authentication.LdapShaPasswordEncoderTests.setUp()
2509 - Declaração do método: org.springframework.security.ldap.authentication.LdapShaPasswordEncoderTests.invalidPasswordFails()
Métodos invocados: 
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertFalse(Z)
2510 - Declaração do método: org.springframework.security.ldap.authentication.LdapShaPasswordEncoderTests.invalidSaltedPasswordFails()
Métodos invocados: 
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertFalse(Z)
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertFalse(Z)
2511 - Declaração do método: org.springframework.security.ldap.authentication.LdapShaPasswordEncoderTests.nonByteArraySaltThrowsException()
Métodos invocados: 
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
2512 - Declaração do método: org.springframework.security.ldap.authentication.LdapShaPasswordEncoderTests.validPasswordSucceeds()
Métodos invocados: 
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.setForceLowerCasePrefix(Z)
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.setForceLowerCasePrefix(Z)
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
2513 - Declaração do método: org.springframework.security.ldap.authentication.LdapShaPasswordEncoderTests.validSaltedPasswordSucceeds()
Métodos invocados: 
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.setForceLowerCasePrefix(Z)
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.setForceLowerCasePrefix(Z)
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
2514 - Declaração do método: org.springframework.security.ldap.authentication.LdapShaPasswordEncoderTests.fullLengthOfHashIsUsedInComparison()
Métodos invocados: 
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertFalse(Z)
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertFalse(Z)
2515 - Declaração do método: org.springframework.security.ldap.authentication.LdapShaPasswordEncoderTests.correctPrefixCaseIsUsed()
Métodos invocados: 
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.setForceLowerCasePrefix(Z)
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.String.getBytes()
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
java.lang.String.startsWith(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.setForceLowerCasePrefix(Z)
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.String.getBytes()
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
java.lang.String.startsWith(java.lang.String)
org.junit.Assert.assertTrue(Z)
2516 - Declaração do método: org.springframework.security.ldap.authentication.LdapShaPasswordEncoderTests.invalidPrefixIsRejected()
Métodos invocados: 
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
2517 - Declaração do método: org.springframework.security.ldap.authentication.LdapShaPasswordEncoderTests.malformedPrefixIsRejected()
Métodos invocados: 
org.springframework.security.authentication.encoding.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
2518 - Declaração do método: org.springframework.security.ldap.authentication.BindAuthenticatorTests.onSetUp()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setMessageSource(org.springframework.context.MessageSource)
2519 - Declaração do método: org.springframework.security.ldap.authentication.BindAuthenticatorTests.emptyPasswordIsRejected()
Métodos invocados: 
org.springframework.security.ldap.authentication.BindAuthenticator.authenticate(org.springframework.security.core.Authentication)
2520 - Declaração do método: org.springframework.security.ldap.authentication.BindAuthenticatorTests.testAuthenticationWithCorrectPasswordSucceeds()
Métodos invocados: 
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setUserDnPatterns([Ljava.lang.String;)
org.springframework.security.ldap.authentication.BindAuthenticator.authenticate(org.springframework.security.core.Authentication)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2521 - Declaração do método: org.springframework.security.ldap.authentication.BindAuthenticatorTests.testAuthenticationWithInvalidUserNameFails()
Métodos invocados: 
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setUserDnPatterns([Ljava.lang.String;)
org.springframework.security.ldap.authentication.BindAuthenticator.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.fail(java.lang.String)
2522 - Declaração do método: org.springframework.security.ldap.authentication.BindAuthenticatorTests.testAuthenticationWithUserSearch()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setUserSearch(org.springframework.security.ldap.search.LdapUserSearch)
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.afterPropertiesSet()
org.springframework.security.ldap.authentication.BindAuthenticator.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setUserSearch(org.springframework.security.ldap.search.LdapUserSearch)
org.springframework.security.ldap.authentication.BindAuthenticator.authenticate(org.springframework.security.core.Authentication)
org.springframework.security.ldap.authentication.BindAuthenticator.authenticate(org.springframework.security.core.Authentication)
2523 - Declaração do método: org.springframework.security.ldap.authentication.BindAuthenticatorTests.testAuthenticationWithWrongPasswordFails()
Métodos invocados: 
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setUserDnPatterns([Ljava.lang.String;)
org.springframework.security.ldap.authentication.BindAuthenticator.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.fail(java.lang.String)
2524 - Declaração do método: org.springframework.security.ldap.authentication.BindAuthenticatorTests.testUserDnPatternReturnsCorrectDn()
Métodos invocados: 
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.setUserDnPatterns([Ljava.lang.String;)
org.springframework.security.ldap.authentication.AbstractLdapAuthenticator.getUserDns(java.lang.String)
java.util.List.get(I)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2525 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulatorTests.onSetUp()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setIgnorePartialResultException(Z)
2526 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulatorTests.defaultRoleIsAssignedWhenSet()
Métodos invocados: 
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setDefaultRole(java.lang.String)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2527 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulatorTests.groupSearchReturnsExpectedRoles()
Métodos invocados: 
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setRolePrefix(java.lang.String)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setGroupRoleAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setSearchSubtree(Z)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setSearchSubtree(Z)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setConvertToUpperCase(Z)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setGroupSearchFilter(java.lang.String)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.size()
org.junit.Assert.assertEquals(java.lang.String, J, J)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2528 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulatorTests.useOfUsernameParameterReturnsExpectedRoles()
Métodos invocados: 
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setGroupRoleAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setConvertToUpperCase(Z)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setGroupSearchFilter(java.lang.String)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.size()
org.junit.Assert.assertEquals(java.lang.String, J, J)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2529 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulatorTests.subGroupRolesAreNotFoundByDefault()
Métodos invocados: 
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setGroupRoleAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setConvertToUpperCase(Z)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.size()
org.junit.Assert.assertEquals(java.lang.String, J, J)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2530 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulatorTests.subGroupRolesAreFoundWhenSubtreeSearchIsEnabled()
Métodos invocados: 
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setGroupRoleAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setConvertToUpperCase(Z)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setSearchSubtree(Z)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.size()
org.junit.Assert.assertEquals(java.lang.String, J, J)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2531 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulatorTests.userDnWithEscapedCharacterParameterReturnsExpectedRoles()
Métodos invocados: 
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setGroupRoleAttribute(java.lang.String)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setConvertToUpperCase(Z)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.setGroupSearchFilter(java.lang.String)
org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.size()
org.junit.Assert.assertEquals(java.lang.String, J, J)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2532 - Declaração do método: org.springframework.security.ldap.populator.UserDetailsServiceLdapAuthoritiesPopulatorTests.delegationToUserDetailsServiceReturnsCorrectRoles()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.mockito.Mockito.when(org.springframework.security.core.userdetails.UserDetails)
org.mockito.stubbing.OngoingStubbing.thenReturn(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.mockito.Mockito.when(java.util.Collection)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.util.Collection)
org.springframework.security.ldap.authentication.UserDetailsServiceLdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2533 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControlTests.testOpenLDAP33SecondsTillPasswordExpiryCtrlIsParsedCorrectly()
Métodos invocados: 
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasWarning()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.getTimeBeforeExpiration()
junit.framework.Assert.assertEquals(I, I)
2534 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControlTests.testOpenLDAP496GraceLoginsRemainingCtrlIsParsedCorrectly()
Métodos invocados: 
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasWarning()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.getGraceLoginsRemaining()
junit.framework.Assert.assertEquals(I, I)
2535 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControlTests.testOpenLDAP5GraceLoginsRemainingCtrlIsParsedCorrectly()
Métodos invocados: 
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasWarning()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.getGraceLoginsRemaining()
junit.framework.Assert.assertEquals(I, I)
2536 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControlTests.testOpenLDAPAccountLockedCtrlIsParsedCorrectly()
Métodos invocados: 
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasError()
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.isLocked()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasWarning()
junit.framework.Assert.assertFalse(Z)
2537 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControlTests.testOpenLDAPPasswordExpiredCtrlIsParsedCorrectly()
Métodos invocados: 
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasError()
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.isExpired()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasWarning()
junit.framework.Assert.assertFalse(Z)
2538 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearchTests.onSetUp()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
2539 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearchTests.basicSearchSucceeds()
Métodos invocados: 
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.setSearchSubtree(Z)
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.setSearchTimeLimit(I)
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.setDerefLinkFlag(Z)
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.searchForUser(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.ldap.core.DirContextOperations.getDn()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2540 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearchTests.searchForNameWithCommaSucceeds()
Métodos invocados: 
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.setSearchSubtree(Z)
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.searchForUser(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.ldap.core.DirContextOperations.getDn()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2541 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearchTests.extraFilterPartToExcludeBob()
Métodos invocados: 
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.searchForUser(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2542 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearchTests.searchFailsOnMultipleMatches()
Métodos invocados: 
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.searchForUser(java.lang.String)
2543 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearchTests.searchForInvalidUserFails()
Métodos invocados: 
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.searchForUser(java.lang.String)
2544 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearchTests.subTreeSearchSucceeds()
Métodos invocados: 
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.setSearchSubtree(Z)
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.searchForUser(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.ldap.core.DirContextOperations.getDn()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2545 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearchTests.searchWithDifferentSearchBaseIsSuccessful()
Métodos invocados: 
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.searchForUser(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2546 - Declaração do método: org.springframework.security.ldap.server.ApacheDSContainerTests.successfulStartupAndShutdown()
Métodos invocados: 
org.apache.directory.shared.ldap.name.LdapDN.toString()
2547 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManagerTests.onSetUp()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.LdapTemplate.bind(java.lang.String, java.lang.Object, javax.naming.directory.Attributes)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.LdapTemplate.bind(java.lang.String, java.lang.Object, javax.naming.directory.Attributes)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.LdapTemplate.bind(java.lang.String, java.lang.Object, javax.naming.directory.Attributes)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.LdapTemplate.bind(java.lang.String, java.lang.Object, javax.naming.directory.Attributes)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.setUsernameMapper(org.springframework.security.ldap.LdapUsernameToDnMapper)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.setGroupSearchBase(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.setGroupRoleAttributeName(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.setGroupMemberAttributeName(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.setUserDetailsMapper(org.springframework.security.ldap.userdetails.UserDetailsContextMapper)
2548 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManagerTests.onTearDown()
Métodos invocados: 
org.springframework.ldap.core.LdapTemplate.unbind(java.lang.String, Z)
org.springframework.ldap.core.LdapTemplate.unbind(java.lang.String, Z)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2549 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManagerTests.testLoadUserByUsernameReturnsCorrectData()
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.setUsernameMapper(org.springframework.security.ldap.LdapUsernameToDnMapper)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.setGroupSearchBase(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.userdetails.LdapUserDetails.getDn()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.UserDetails.getPassword()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
2550 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManagerTests.testLoadingInvalidUsernameThrowsUsernameNotFoundException()
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.loadUserByUsername(java.lang.String)
2551 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManagerTests.testUserExistsReturnsTrueForValidUser()
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.setUsernameMapper(org.springframework.security.ldap.LdapUsernameToDnMapper)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.userExists(java.lang.String)
org.junit.Assert.assertTrue(Z)
2552 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManagerTests.testUserExistsReturnsFalseForInValidUser()
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.userExists(java.lang.String)
org.junit.Assert.assertFalse(Z)
2553 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManagerTests.testCreateNewUserSucceeds()
Métodos invocados: 
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setCarLicense(java.lang.String)
org.springframework.security.ldap.userdetails.Person$Essence.setCn([Ljava.lang.String;)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setDepartmentNumber(java.lang.String)
org.springframework.security.ldap.userdetails.Person$Essence.setDescription(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setDn(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setEmployeeNumber(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setInitials(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setMail(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setMobile(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setOu(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setO(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setRoomNumber(java.lang.String)
org.springframework.security.ldap.userdetails.Person$Essence.setSn(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setUid(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setAuthorities(java.util.Collection)
org.springframework.security.ldap.userdetails.Person$Essence.createUserDetails()
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.createUser(org.springframework.security.core.userdetails.UserDetails)
2554 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManagerTests.testDeleteUserSucceeds()
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setDn(java.lang.String)
org.springframework.security.ldap.userdetails.Person$Essence.setCn([Ljava.lang.String;)
org.springframework.security.ldap.userdetails.Person$Essence.setSn(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setUid(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setAuthorities(java.util.Collection)
org.springframework.security.ldap.userdetails.Person$Essence.createUserDetails()
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.createUser(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.setUserDetailsMapper(org.springframework.security.ldap.userdetails.UserDetailsContextMapper)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.loadUserByUsername(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getAuthorities()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.deleteUser(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.loadUserByUsername(java.lang.String)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.ldap.LdapUsernameToDnMapper.buildDn(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.getUserAuthorities(org.springframework.ldap.core.DistinguishedName, java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
2555 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManagerTests.testPasswordChangeWithCorrectOldPasswordSucceeds()
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setDn(java.lang.String)
org.springframework.security.ldap.userdetails.Person$Essence.setCn([Ljava.lang.String;)
org.springframework.security.ldap.userdetails.Person$Essence.setSn(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setUid(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setPassword(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setAuthorities(java.util.Collection)
org.springframework.security.ldap.userdetails.Person$Essence.createUserDetails()
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.createUser(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.changePassword(java.lang.String, java.lang.String)
org.springframework.security.ldap.SpringSecurityLdapTemplate.compare(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
2556 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsManagerTests.testPasswordChangeWithWrongOldPasswordFails()
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setDn(java.lang.String)
org.springframework.security.ldap.userdetails.Person$Essence.setCn([Ljava.lang.String;)
org.springframework.security.ldap.userdetails.Person$Essence.setSn(java.lang.String)
org.springframework.security.ldap.userdetails.InetOrgPerson$Essence.setUid(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setPassword(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setAuthorities(java.util.Collection)
org.springframework.security.ldap.userdetails.Person$Essence.createUserDetails()
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.createUser(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.ldap.userdetails.LdapUserDetailsManager.changePassword(java.lang.String, java.lang.String)
2557 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsServiceTests.rejectsNullSearchObject()
2557 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsServiceTests.rejectsNullAuthoritiesPopulator()
2557 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsServiceTests.correctAuthoritiesAreReturned()
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsService.setUserDetailsMapper(org.springframework.security.ldap.userdetails.UserDetailsContextMapper)
org.springframework.security.ldap.userdetails.LdapUserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.size()
org.junit.Assert.assertEquals(J, J)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2558 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsServiceTests.nullPopulatorConstructorReturnsEmptyAuthoritiesList()
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
2559 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsServiceTests$MockAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
2560 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsMapperTests.testMultipleRoleAttributeValuesAreMappedToAuthorities()
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.setConvertToUpperCase(Z)
org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.setRolePrefix(java.lang.String)
org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.setRoleAttributes([Ljava.lang.String;)
org.springframework.ldap.core.DirContextAdapter.setAttributeValues(java.lang.String, [Ljava.lang.Object;)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, java.util.Collection)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getAuthorities()
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
2561 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsMapperTests.testNonRetrievedRoleAttributeIsIgnored()
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.setRoleAttributes([Ljava.lang.String;)
javax.naming.directory.BasicAttributes.put(javax.naming.directory.Attribute)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, java.util.Collection)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getAuthorities()
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
2562 - Declaração do método: org.springframework.security.ldap.userdetails.LdapUserDetailsMapperTests.testPasswordAttributeIsMappedCorrectly()
Métodos invocados: 
org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.setPasswordAttributeName(java.lang.String)
java.lang.String.getBytes()
javax.naming.directory.BasicAttributes.put(javax.naming.directory.Attribute)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.security.ldap.userdetails.LdapUserDetailsMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, java.util.Collection)
org.springframework.security.core.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2563 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPersonTests.testUsernameIsMappedFromContextUidIfNotSet()
Métodos invocados: 
org.springframework.security.ldap.userdetails.InetOrgPersonTests.createUserContext()
org.springframework.security.ldap.userdetails.Person$Essence.createUserDetails()
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getUsername()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2564 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPersonTests.hashLookupViaEqualObjectRetrievesOriginal()
Métodos invocados: 
org.springframework.security.ldap.userdetails.InetOrgPersonTests.createUserContext()
org.springframework.security.ldap.userdetails.Person$Essence.createUserDetails()
org.springframework.security.ldap.userdetails.InetOrgPersonTests.createUserContext()
org.springframework.security.ldap.userdetails.Person$Essence.createUserDetails()
java.util.Set.add(org.springframework.security.ldap.userdetails.InetOrgPerson)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2565 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPersonTests.usernameIsDifferentFromContextUidIfSet()
Métodos invocados: 
org.springframework.security.ldap.userdetails.InetOrgPersonTests.createUserContext()
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl$Essence.setUsername(java.lang.String)
org.springframework.security.ldap.userdetails.Person$Essence.createUserDetails()
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getUsername()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.userdetails.InetOrgPerson.getUid()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2566 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPersonTests.attributesMapCorrectlyFromContext()
Métodos invocados: 
org.springframework.security.ldap.userdetails.InetOrgPersonTests.createUserContext()
org.springframework.security.ldap.userdetails.Person$Essence.createUserDetails()
org.springframework.security.ldap.userdetails.InetOrgPerson.getCarLicense()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.userdetails.InetOrgPerson.getMail()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.userdetails.Person.getSn()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.userdetails.Person.getCn()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.userdetails.InetOrgPerson.getEmployeeNumber()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.userdetails.Person.getTelephoneNumber()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.userdetails.InetOrgPerson.getHomePostalAddress()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.userdetails.InetOrgPerson.getHomePhone()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.userdetails.InetOrgPerson.getO()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.userdetails.InetOrgPerson.getOu()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.userdetails.InetOrgPerson.getPostalAddress()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.userdetails.InetOrgPerson.getPostalCode()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.userdetails.InetOrgPerson.getRoomNumber()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.userdetails.InetOrgPerson.getStreet()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.userdetails.Person.getDescription()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.userdetails.InetOrgPerson.getDisplayName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.userdetails.InetOrgPerson.getInitials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2567 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPersonTests.testPasswordIsSetFromContextUserPassword()
Métodos invocados: 
org.springframework.security.ldap.userdetails.InetOrgPersonTests.createUserContext()
org.springframework.security.ldap.userdetails.Person$Essence.createUserDetails()
org.springframework.security.ldap.userdetails.LdapUserDetailsImpl.getPassword()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2568 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPersonTests.mappingBackToContextMatchesOriginalData()
Métodos invocados: 
org.springframework.security.ldap.userdetails.InetOrgPersonTests.createUserContext()
org.springframework.ldap.core.DirContextAdapter.setAttributeValues(java.lang.String, [Ljava.lang.Object;)
org.springframework.ldap.core.DirContextAdapter.setDn(javax.naming.Name)
org.springframework.security.ldap.userdetails.Person$Essence.createUserDetails()
org.springframework.security.ldap.userdetails.InetOrgPerson.populateContext(org.springframework.ldap.core.DirContextAdapter)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2569 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPersonTests.copyMatchesOriginalData()
Métodos invocados: 
org.springframework.security.ldap.userdetails.InetOrgPersonTests.createUserContext()
org.springframework.ldap.core.DirContextAdapter.setDn(javax.naming.Name)
org.springframework.ldap.core.DirContextAdapter.setAttributeValues(java.lang.String, [Ljava.lang.Object;)
org.springframework.security.ldap.userdetails.Person$Essence.createUserDetails()
org.springframework.security.ldap.userdetails.Person$Essence.createUserDetails()
org.springframework.security.ldap.userdetails.InetOrgPerson.populateContext(org.springframework.ldap.core.DirContextAdapter)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2570 - Declaração do método: org.springframework.security.ldap.userdetails.InetOrgPersonTests.createUserContext()
Métodos invocados: 
org.springframework.ldap.core.DirContextAdapter.setDn(javax.naming.Name)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
2571 - Declaração do método: sample.aspectj.AspectJInterceptorTests.testPublicMethod()
Métodos invocados: 
sample.aspectj.Service.publicMethod()
2572 - Declaração do método: sample.aspectj.AspectJInterceptorTests.testSecuredMethodNotAuthenticated()
Métodos invocados: 
sample.aspectj.Service.secureMethod()
2573 - Declaração do método: sample.aspectj.AspectJInterceptorTests.testSecuredMethodWrongRole()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
sample.aspectj.Service.secureMethod()
2574 - Declaração do método: sample.aspectj.AspectJInterceptorTests.testSecuredMethodEverythingOk()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
sample.aspectj.Service.secureMethod()
2575 - Declaração do método: sample.aspectj.AspectJInterceptorTests.testSecuredClassNotAuthenticated()
Métodos invocados: 
sample.aspectj.SecuredService.secureMethod()
2576 - Declaração do método: sample.aspectj.AspectJInterceptorTests.testSecuredClassWrongRole()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
sample.aspectj.SecuredService.secureMethod()
2577 - Declaração do método: sample.aspectj.AspectJInterceptorTests.testSecuredClassEverythingOk()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
sample.aspectj.SecuredService.secureMethod()
2578 - Declaração do método: sample.aspectj.AspectJInterceptorTests.tearDown()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2579 - Declaração do método: DmsIntegrationTests.clearContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2580 - Declaração do método: DmsIntegrationTests.setDocumentDao(sample.dms.DocumentDao)
2580 - Declaração do método: DmsIntegrationTests.testBasePopulation()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.queryForInt(java.lang.String)
org.junit.Assert.assertEquals(J, J)
org.springframework.jdbc.core.JdbcTemplate.queryForInt(java.lang.String)
org.junit.Assert.assertEquals(J, J)
sample.dms.DocumentDao.findElements(sample.dms.Directory)
org.junit.Assert.assertEquals(J, J)
2581 - Declaração do método: DmsIntegrationTests.testMarissaRetrieval()
Métodos invocados: 
DmsIntegrationTests.process(java.lang.String, java.lang.String, Z)
2582 - Declaração do método: DmsIntegrationTests.testScottRetrieval()
Métodos invocados: 
DmsIntegrationTests.process(java.lang.String, java.lang.String, Z)
2583 - Declaração do método: DmsIntegrationTests.testDianneRetrieval()
Métodos invocados: 
DmsIntegrationTests.process(java.lang.String, java.lang.String, Z)
2584 - Declaração do método: DmsIntegrationTests.process(java.lang.String, java.lang.String, Z)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
java.io.PrintStream.println(java.lang.String)
sample.dms.DocumentDao.findElements(sample.dms.Directory)
org.junit.Assert.assertEquals(J, J)
sample.dms.AbstractElement.getName()
java.lang.String.equals(java.lang.Object)
sample.dms.AbstractElement.getFullName()
java.io.PrintStream.println(java.lang.String)
sample.dms.AbstractElement.getFullName()
java.io.PrintStream.println(java.lang.String)
sample.dms.DocumentDao.findElements(sample.dms.Directory)
org.junit.Assert.assertEquals(J, J)
sample.dms.DocumentDao.findElements(sample.dms.Directory)
org.junit.Assert.assertEquals(J, J)
sample.dms.AbstractElement.getName()
java.lang.String.equals(java.lang.Object)
org.junit.Assert.assertNull(java.lang.String, java.lang.Object)
sample.dms.AbstractElement.getFullName()
java.io.PrintStream.println(java.lang.String)
sample.dms.DocumentDao.findElements(sample.dms.Directory)
org.junit.Assert.assertEquals(J, J)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2585 - Declaração do método: SecureDmsIntegrationTests.testBasePopulation()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.queryForInt(java.lang.String)
org.junit.Assert.assertEquals(J, J)
org.springframework.jdbc.core.JdbcTemplate.queryForInt(java.lang.String)
org.junit.Assert.assertEquals(J, J)
org.springframework.jdbc.core.JdbcTemplate.queryForInt(java.lang.String)
org.junit.Assert.assertEquals(J, J)
org.springframework.jdbc.core.JdbcTemplate.queryForInt(java.lang.String)
org.junit.Assert.assertEquals(J, J)
org.springframework.jdbc.core.JdbcTemplate.queryForInt(java.lang.String)
org.junit.Assert.assertEquals(J, J)
org.springframework.jdbc.core.JdbcTemplate.queryForInt(java.lang.String)
org.junit.Assert.assertEquals(J, J)
2586 - Declaração do método: SecureDmsIntegrationTests.testMarissaRetrieval()
Métodos invocados: 
DmsIntegrationTests.process(java.lang.String, java.lang.String, Z)
2587 - Declaração do método: SecureDmsIntegrationTests.testScottRetrieval()
Métodos invocados: 
DmsIntegrationTests.process(java.lang.String, java.lang.String, Z)
2588 - Declaração do método: SecureDmsIntegrationTests.testDianneRetrieval()
Métodos invocados: 
DmsIntegrationTests.process(java.lang.String, java.lang.String, Z)
2589 - Declaração do método: org.springframework.security.MockPortResolver.MockPortResolver(I, I)
2589 - Declaração do método: org.springframework.security.MockPortResolver.getServerPort(javax.servlet.ServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getScheme()
javax.servlet.ServletRequest.getScheme()
java.lang.String.equals(java.lang.Object)
2590 - Declaração do método: org.springframework.security.MockFilterConfig.getFilterName()
2590 - Declaração do método: org.springframework.security.MockFilterConfig.getInitParameter(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
2591 - Declaração do método: org.springframework.security.MockFilterConfig.getInitParameterNames()
2591 - Declaração do método: org.springframework.security.MockFilterConfig.getServletContext()
2591 - Declaração do método: org.springframework.security.MockFilterConfig.setInitParmeter(java.lang.String, java.lang.String)
Métodos invocados: 
java.util.Map.put(java.lang.Object, java.lang.Object)
2592 - Declaração do método: org.springframework.security.web.PortMapperImplTests.testDefaultMappingsAreKnown()
Métodos invocados: 
org.springframework.security.web.PortMapperImpl.lookupHttpPort(java.lang.Integer)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.PortMapperImpl.lookupHttpPort(java.lang.Integer)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.PortMapperImpl.lookupHttpsPort(java.lang.Integer)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.PortMapperImpl.lookupHttpsPort(java.lang.Integer)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2593 - Declaração do método: org.springframework.security.web.PortMapperImplTests.testDetectsEmptyMap()
Métodos invocados: 
org.springframework.security.web.PortMapperImpl.setPortMappings(java.util.Map)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2594 - Declaração do método: org.springframework.security.web.PortMapperImplTests.testDetectsNullMap()
Métodos invocados: 
org.springframework.security.web.PortMapperImpl.setPortMappings(java.util.Map)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2595 - Declaração do método: org.springframework.security.web.PortMapperImplTests.testGetTranslatedPortMappings()
Métodos invocados: 
org.springframework.security.web.PortMapperImpl.getTranslatedPortMappings()
java.util.Map.size()
junit.framework.Assert.assertEquals(I, I)
2596 - Declaração do método: org.springframework.security.web.PortMapperImplTests.testRejectsOutOfRangeMappings()
Métodos invocados: 
java.util.Map.put(java.lang.String, java.lang.String)
org.springframework.security.web.PortMapperImpl.setPortMappings(java.util.Map)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2597 - Declaração do método: org.springframework.security.web.PortMapperImplTests.testReturnsNullIfHttpPortCannotBeFound()
Métodos invocados: 
org.springframework.security.web.PortMapperImpl.lookupHttpPort(java.lang.Integer)
junit.framework.Assert.assertTrue(Z)
2598 - Declaração do método: org.springframework.security.web.PortMapperImplTests.testSupportsCustomMappings()
Métodos invocados: 
java.util.Map.put(java.lang.String, java.lang.String)
org.springframework.security.web.PortMapperImpl.setPortMappings(java.util.Map)
org.springframework.security.web.PortMapperImpl.lookupHttpPort(java.lang.Integer)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.PortMapperImpl.lookupHttpsPort(java.lang.Integer)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2599 - Declaração do método: org.springframework.security.web.PortResolverImplTests.PortResolverImplTests()
2599 - Declaração do método: org.springframework.security.web.PortResolverImplTests.PortResolverImplTests(java.lang.String)
2599 - Declaração do método: org.springframework.security.web.PortResolverImplTests.setUp()
2599 - Declaração do método: org.springframework.security.web.PortResolverImplTests.testDetectsBuggyIeHttpRequest()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.security.web.PortResolverImpl.getServerPort(javax.servlet.ServletRequest)
junit.framework.Assert.assertEquals(I, I)
2600 - Declaração do método: org.springframework.security.web.PortResolverImplTests.testDetectsBuggyIeHttpsRequest()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.security.web.PortResolverImpl.getServerPort(javax.servlet.ServletRequest)
junit.framework.Assert.assertEquals(I, I)
2601 - Declaração do método: org.springframework.security.web.PortResolverImplTests.testDetectsEmptyPortMapper()
Métodos invocados: 
org.springframework.security.web.PortResolverImpl.setPortMapper(org.springframework.security.web.PortMapper)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2602 - Declaração do método: org.springframework.security.web.PortResolverImplTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.web.PortResolverImpl.getPortMapper()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.web.PortResolverImpl.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.PortResolverImpl.getPortMapper()
junit.framework.Assert.assertTrue(Z)
2603 - Declaração do método: org.springframework.security.web.PortResolverImplTests.testNormalOperation()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.web.PortResolverImpl.getServerPort(javax.servlet.ServletRequest)
junit.framework.Assert.assertEquals(I, I)
2604 - Declaração do método: org.springframework.security.web.DefaultRedirectStrategyTests.contextRelativeUrlWithContextNameInHostnameIsHandledCorrectly()
Métodos invocados: 
org.springframework.security.web.DefaultRedirectStrategy.setContextRelative(Z)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.security.web.DefaultRedirectStrategy.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2605 - Declaração do método: org.springframework.security.web.FilterInvocationTests.testGettersAndStringMethods()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setPathInfo(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.FilterInvocation.getRequest()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.FilterInvocation.getHttpRequest()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.FilterInvocation.getResponse()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.FilterInvocation.getHttpResponse()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.FilterInvocation.getChain()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.FilterInvocation.getRequestUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.FilterInvocation.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.FilterInvocation.getFullRequestUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2606 - Declaração do método: org.springframework.security.web.FilterInvocationTests.testRejectsNullFilterChain()
2606 - Declaração do método: org.springframework.security.web.FilterInvocationTests.testRejectsNullServletRequest()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
2607 - Declaração do método: org.springframework.security.web.FilterInvocationTests.testRejectsNullServletResponse()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
2608 - Declaração do método: org.springframework.security.web.FilterInvocationTests.testStringMethodsWithAQueryString()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.FilterInvocation.getRequestUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.FilterInvocation.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.FilterInvocation.getFullRequestUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2609 - Declaração do método: org.springframework.security.web.FilterInvocationTests.testStringMethodsWithoutAnyQueryString()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.FilterInvocation.getRequestUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.FilterInvocation.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.FilterInvocation.getFullRequestUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2610 - Declaração do método: org.springframework.security.web.FilterInvocationTests.dummyChainRejectsInvocation()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
2611 - Declaração do método: org.springframework.security.web.FilterInvocationTests.dummyRequestIsSupportedByUrlUtils()
Métodos invocados: 
org.springframework.security.web.DummyRequest.setContextPath(java.lang.String)
org.springframework.security.web.DummyRequest.setRequestURI(java.lang.String)
org.springframework.security.web.util.UrlUtils.buildRequestUrl(javax.servlet.http.HttpServletRequest)
2612 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilterTests.clearContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2613 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilterTests.getSavedRequestUrl(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getSession(Z)
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.springframework.security.web.savedrequest.DefaultSavedRequest.getRedirectUrl()
2614 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilterTests.testAccessDeniedWhenAnonymous()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.doThrow(java.lang.Throwable)
org.mockito.stubbing.Stubber.when(javax.servlet.FilterChain)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.web.access.ExceptionTranslationFilterTests.mockEntryPoint()
org.springframework.security.web.access.ExceptionTranslationFilter.setAuthenticationEntryPoint(org.springframework.security.web.AuthenticationEntryPoint)
org.springframework.security.web.access.ExceptionTranslationFilter.setAuthenticationTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)
org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.access.ExceptionTranslationFilterTests.getSavedRequestUrl(javax.servlet.http.HttpServletRequest)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2615 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilterTests.testAccessDeniedWhenNonAnonymous()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.doThrow(java.lang.Throwable)
org.mockito.stubbing.Stubber.when(javax.servlet.FilterChain)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.springframework.security.web.access.AccessDeniedHandlerImpl.setErrorPage(java.lang.String)
org.springframework.security.web.access.ExceptionTranslationFilterTests.mockEntryPoint()
org.springframework.security.web.access.ExceptionTranslationFilter.setAuthenticationEntryPoint(org.springframework.security.web.AuthenticationEntryPoint)
org.springframework.security.web.access.ExceptionTranslationFilter.setAccessDeniedHandler(org.springframework.security.web.access.AccessDeniedHandler)
org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
org.springframework.mock.web.MockHttpServletRequest.getAttribute(java.lang.String)
java.lang.Object.getClass()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2616 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilterTests.testRedirectedToLoginFormAndSessionShowsOriginalTargetWhenAuthenticationException()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.doThrow(java.lang.Throwable)
org.mockito.stubbing.Stubber.when(javax.servlet.FilterChain)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.web.access.ExceptionTranslationFilterTests.mockEntryPoint()
org.springframework.security.web.access.ExceptionTranslationFilter.setAuthenticationEntryPoint(org.springframework.security.web.AuthenticationEntryPoint)
org.springframework.security.web.access.ExceptionTranslationFilter.afterPropertiesSet()
org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.access.ExceptionTranslationFilterTests.getSavedRequestUrl(javax.servlet.http.HttpServletRequest)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2617 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilterTests.testRedirectedToLoginFormAndSessionShowsOriginalTargetWithExoticPortWhenAuthenticationException()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.doThrow(java.lang.Throwable)
org.mockito.stubbing.Stubber.when(javax.servlet.FilterChain)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.web.access.ExceptionTranslationFilterTests.mockEntryPoint()
org.springframework.security.web.access.ExceptionTranslationFilter.setAuthenticationEntryPoint(org.springframework.security.web.AuthenticationEntryPoint)
org.springframework.security.web.savedrequest.HttpSessionRequestCache.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.access.ExceptionTranslationFilter.setRequestCache(org.springframework.security.web.savedrequest.RequestCache)
org.springframework.security.web.access.ExceptionTranslationFilter.afterPropertiesSet()
org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.access.ExceptionTranslationFilterTests.getSavedRequestUrl(javax.servlet.http.HttpServletRequest)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2618 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilterTests.testStartupDetectsMissingAuthenticationEntryPoint()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.access.ExceptionTranslationFilter.setThrowableAnalyzer(org.springframework.security.web.util.ThrowableAnalyzer)
org.springframework.security.web.access.ExceptionTranslationFilter.afterPropertiesSet()
2619 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilterTests.testStartupDetectsMissingRequestCache()
Métodos invocados: 
org.springframework.security.web.access.ExceptionTranslationFilterTests.mockEntryPoint()
org.springframework.security.web.access.ExceptionTranslationFilter.setAuthenticationEntryPoint(org.springframework.security.web.AuthenticationEntryPoint)
org.springframework.security.web.access.ExceptionTranslationFilter.setRequestCache(org.springframework.security.web.savedrequest.RequestCache)
2620 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilterTests.testSuccessfulAccessGrant()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.web.access.ExceptionTranslationFilterTests.mockEntryPoint()
org.springframework.security.web.access.ExceptionTranslationFilter.setAuthenticationEntryPoint(org.springframework.security.web.AuthenticationEntryPoint)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
2621 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilterTests.testThrowIOException()
Métodos invocados: 
org.springframework.security.web.access.ExceptionTranslationFilterTests.mockEntryPoint()
org.springframework.security.web.access.ExceptionTranslationFilter.setAuthenticationEntryPoint(org.springframework.security.web.AuthenticationEntryPoint)
org.springframework.security.web.access.ExceptionTranslationFilter.afterPropertiesSet()
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.doThrow(java.lang.Throwable)
org.mockito.stubbing.Stubber.when(javax.servlet.FilterChain)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.junit.Assert.fail(java.lang.String)
java.lang.Throwable.getCause()
org.junit.Assert.assertNull(java.lang.String, java.lang.Object)
2622 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilterTests.testThrowServletException()
Métodos invocados: 
org.springframework.security.web.access.ExceptionTranslationFilterTests.mockEntryPoint()
org.springframework.security.web.access.ExceptionTranslationFilter.setAuthenticationEntryPoint(org.springframework.security.web.AuthenticationEntryPoint)
org.springframework.security.web.access.ExceptionTranslationFilter.afterPropertiesSet()
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.doThrow(java.lang.Throwable)
org.mockito.stubbing.Stubber.when(javax.servlet.FilterChain)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.junit.Assert.fail(java.lang.String)
java.lang.Throwable.getCause()
org.junit.Assert.assertNull(java.lang.String, java.lang.Object)
2623 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilterTests.mockEntryPoint()
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getContextPath()
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
2624 - Declaração do método: org.springframework.security.web.access.ExceptionTranslationFilterTests$1.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getContextPath()
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
2625 - Declaração do método: org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluatorTests.setUp()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.access.intercept.FilterSecurityInterceptor.setSecurityMetadataSource(org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.access.AccessDecisionManager)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.access.intercept.RunAsManager)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2626 - Declaração do método: org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluatorTests.permitsAccessIfNoMatchingAttributesAndPublicInvocationsAllowed()
Métodos invocados: 
org.mockito.Matchers.anyObject()
org.springframework.security.access.SecurityMetadataSource.getAttributes(java.lang.Object)
org.mockito.Mockito.when(java.util.Collection)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.util.Collection)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator.isAllowed(java.lang.String, java.lang.String, java.lang.String, org.springframework.security.core.Authentication)
org.junit.Assert.assertTrue(Z)
2627 - Declaração do método: org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluatorTests.deniesAccessIfNoMatchingAttributesAndPublicInvocationsNotAllowed()
Métodos invocados: 
org.mockito.Matchers.anyObject()
org.springframework.security.access.SecurityMetadataSource.getAttributes(java.lang.Object)
org.mockito.Mockito.when(java.util.Collection)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.util.Collection)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setRejectPublicInvocations(Z)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator.isAllowed(java.lang.String, java.lang.String, java.lang.String, org.springframework.security.core.Authentication)
org.junit.Assert.assertFalse(Z)
2628 - Declaração do método: org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluatorTests.deniesAccessIfAuthenticationIsNull()
Métodos invocados: 
org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator.isAllowed(java.lang.String, org.springframework.security.core.Authentication)
org.junit.Assert.assertFalse(Z)
2629 - Declaração do método: org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluatorTests.allowsAccessIfAccessDecisionMangerDoes()
Métodos invocados: 
org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator.isAllowed(java.lang.String, org.springframework.security.core.Authentication)
org.junit.Assert.assertTrue(Z)
2630 - Declaração do método: org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluatorTests.deniesAccessIfAccessDecisionMangerDoes()
Métodos invocados: 
org.mockito.Mockito.doThrow(java.lang.Throwable)
org.mockito.stubbing.Stubber.when(org.springframework.security.access.AccessDecisionManager)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.anyObject()
org.mockito.Matchers.anyList()
org.springframework.security.access.AccessDecisionManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator.isAllowed(java.lang.String, org.springframework.security.core.Authentication)
org.junit.Assert.assertFalse(Z)
2631 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilterTests.testDetectsMissingChannelDecisionManager()
Métodos invocados: 
org.springframework.security.web.access.channel.ChannelProcessingFilter.setSecurityMetadataSource(org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource)
org.springframework.security.web.access.channel.ChannelProcessingFilter.afterPropertiesSet()
2632 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilterTests.testDetectsMissingFilterInvocationSecurityMetadataSource()
Métodos invocados: 
org.springframework.security.web.access.channel.ChannelProcessingFilter.setChannelDecisionManager(org.springframework.security.web.access.channel.ChannelDecisionManager)
org.springframework.security.web.access.channel.ChannelProcessingFilter.afterPropertiesSet()
2633 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilterTests.testDetectsSupportedConfigAttribute()
Métodos invocados: 
org.springframework.security.web.access.channel.ChannelProcessingFilter.setChannelDecisionManager(org.springframework.security.web.access.channel.ChannelDecisionManager)
org.springframework.security.web.access.channel.ChannelProcessingFilter.setSecurityMetadataSource(org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource)
org.springframework.security.web.access.channel.ChannelProcessingFilter.afterPropertiesSet()
2634 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilterTests.testDetectsUnsupportedConfigAttribute()
Métodos invocados: 
org.springframework.security.web.access.channel.ChannelProcessingFilter.setChannelDecisionManager(org.springframework.security.web.access.channel.ChannelDecisionManager)
org.springframework.security.web.access.channel.ChannelProcessingFilter.setSecurityMetadataSource(org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource)
org.springframework.security.web.access.channel.ChannelProcessingFilter.afterPropertiesSet()
2635 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilterTests.testDoFilterWhenManagerDoesCommitResponse()
Métodos invocados: 
org.springframework.security.web.access.channel.ChannelProcessingFilter.setChannelDecisionManager(org.springframework.security.web.access.channel.ChannelDecisionManager)
org.springframework.security.web.access.channel.ChannelProcessingFilter.setSecurityMetadataSource(org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource)
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.access.channel.ChannelProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
2636 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilterTests.testDoFilterWhenManagerDoesNotCommitResponse()
Métodos invocados: 
org.springframework.security.web.access.channel.ChannelProcessingFilter.setChannelDecisionManager(org.springframework.security.web.access.channel.ChannelDecisionManager)
org.springframework.security.web.access.channel.ChannelProcessingFilter.setSecurityMetadataSource(org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource)
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.access.channel.ChannelProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
2637 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilterTests.testDoFilterWhenNullConfigAttributeReturned()
Métodos invocados: 
org.springframework.security.web.access.channel.ChannelProcessingFilter.setChannelDecisionManager(org.springframework.security.web.access.channel.ChannelDecisionManager)
org.springframework.security.web.access.channel.ChannelProcessingFilter.setSecurityMetadataSource(org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource)
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.access.channel.ChannelProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
2638 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilterTests.testGetterSetters()
Métodos invocados: 
org.springframework.security.web.access.channel.ChannelProcessingFilter.setChannelDecisionManager(org.springframework.security.web.access.channel.ChannelDecisionManager)
org.springframework.security.web.access.channel.ChannelProcessingFilter.getChannelDecisionManager()
org.junit.Assert.assertTrue(Z)
org.springframework.security.web.access.channel.ChannelProcessingFilter.setSecurityMetadataSource(org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource)
org.springframework.security.web.access.channel.ChannelProcessingFilter.getSecurityMetadataSource()
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
org.springframework.security.web.access.channel.ChannelProcessingFilter.afterPropertiesSet()
2639 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilterTests$MockChannelDecisionManager.MockChannelDecisionManager(Z, java.lang.String)
2639 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilterTests$MockChannelDecisionManager.decide(org.springframework.security.web.FilterInvocation, java.util.Collection)
Métodos invocados: 
org.springframework.security.web.FilterInvocation.getHttpResponse()
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
2640 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilterTests$MockChannelDecisionManager.supports(org.springframework.security.access.ConfigAttribute)
Métodos invocados: 
org.springframework.security.access.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
2641 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilterTests$MockFilterInvocationDefinitionMap.MockFilterInvocationDefinitionMap(java.lang.String, Z, [Ljava.lang.String;)
Métodos invocados: 
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
2642 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilterTests$MockFilterInvocationDefinitionMap.getAttributes(java.lang.Object)
Métodos invocados: 
org.springframework.security.web.FilterInvocation.getHttpRequest()
javax.servlet.http.HttpServletRequest.getServletPath()
java.lang.String.equals(java.lang.Object)
2643 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilterTests$MockFilterInvocationDefinitionMap.getAllConfigAttributes()
2643 - Declaração do método: org.springframework.security.web.access.channel.ChannelProcessingFilterTests$MockFilterInvocationDefinitionMap.supports(java.lang.Class)
2643 - Declaração do método: org.springframework.security.web.access.channel.SecureChannelProcessorTests.testDecideDetectsAcceptableChannel()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setSecure(Z)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.web.access.channel.SecureChannelProcessor.decide(org.springframework.security.web.FilterInvocation, java.util.Collection)
org.springframework.security.web.FilterInvocation.getResponse()
javax.servlet.ServletResponse.isCommitted()
junit.framework.Assert.assertFalse(Z)
2644 - Declaração do método: org.springframework.security.web.access.channel.SecureChannelProcessorTests.testDecideDetectsUnacceptableChannel()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.web.access.channel.SecureChannelProcessor.decide(org.springframework.security.web.FilterInvocation, java.util.Collection)
org.springframework.security.web.FilterInvocation.getResponse()
javax.servlet.ServletResponse.isCommitted()
junit.framework.Assert.assertTrue(Z)
2645 - Declaração do método: org.springframework.security.web.access.channel.SecureChannelProcessorTests.testDecideRejectsNulls()
Métodos invocados: 
org.springframework.security.web.access.channel.SecureChannelProcessor.afterPropertiesSet()
org.springframework.security.web.access.channel.SecureChannelProcessor.decide(org.springframework.security.web.FilterInvocation, java.util.Collection)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2646 - Declaração do método: org.springframework.security.web.access.channel.SecureChannelProcessorTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.web.access.channel.SecureChannelProcessor.getSecureKeyword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.web.access.channel.SecureChannelProcessor.setSecureKeyword(java.lang.String)
org.springframework.security.web.access.channel.SecureChannelProcessor.getSecureKeyword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.web.access.channel.SecureChannelProcessor.getEntryPoint()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.web.access.channel.SecureChannelProcessor.setEntryPoint(org.springframework.security.web.access.channel.ChannelEntryPoint)
org.springframework.security.web.access.channel.SecureChannelProcessor.getEntryPoint()
junit.framework.Assert.assertTrue(Z)
2647 - Declaração do método: org.springframework.security.web.access.channel.SecureChannelProcessorTests.testMissingEntryPoint()
Métodos invocados: 
org.springframework.security.web.access.channel.SecureChannelProcessor.setEntryPoint(org.springframework.security.web.access.channel.ChannelEntryPoint)
org.springframework.security.web.access.channel.SecureChannelProcessor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2648 - Declaração do método: org.springframework.security.web.access.channel.SecureChannelProcessorTests.testMissingSecureChannelKeyword()
Métodos invocados: 
org.springframework.security.web.access.channel.SecureChannelProcessor.setSecureKeyword(java.lang.String)
org.springframework.security.web.access.channel.SecureChannelProcessor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.web.access.channel.SecureChannelProcessor.setSecureKeyword(java.lang.String)
org.springframework.security.web.access.channel.SecureChannelProcessor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2649 - Declaração do método: org.springframework.security.web.access.channel.SecureChannelProcessorTests.testSupports()
Métodos invocados: 
org.springframework.security.web.access.channel.SecureChannelProcessor.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.web.access.channel.SecureChannelProcessor.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.web.access.channel.SecureChannelProcessor.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertFalse(Z)
2650 - Declaração do método: org.springframework.security.web.access.channel.InsecureChannelProcessorTests.testDecideDetectsAcceptableChannel()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.web.access.channel.InsecureChannelProcessor.decide(org.springframework.security.web.FilterInvocation, java.util.Collection)
org.springframework.security.web.FilterInvocation.getResponse()
javax.servlet.ServletResponse.isCommitted()
junit.framework.Assert.assertFalse(Z)
2651 - Declaração do método: org.springframework.security.web.access.channel.InsecureChannelProcessorTests.testDecideDetectsUnacceptableChannel()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setSecure(Z)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.web.access.channel.InsecureChannelProcessor.decide(org.springframework.security.web.FilterInvocation, java.util.Collection)
org.springframework.security.web.FilterInvocation.getResponse()
javax.servlet.ServletResponse.isCommitted()
junit.framework.Assert.assertTrue(Z)
2652 - Declaração do método: org.springframework.security.web.access.channel.InsecureChannelProcessorTests.testDecideRejectsNulls()
Métodos invocados: 
org.springframework.security.web.access.channel.InsecureChannelProcessor.afterPropertiesSet()
org.springframework.security.web.access.channel.InsecureChannelProcessor.decide(org.springframework.security.web.FilterInvocation, java.util.Collection)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2653 - Declaração do método: org.springframework.security.web.access.channel.InsecureChannelProcessorTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.web.access.channel.InsecureChannelProcessor.getInsecureKeyword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.web.access.channel.InsecureChannelProcessor.setInsecureKeyword(java.lang.String)
org.springframework.security.web.access.channel.InsecureChannelProcessor.getInsecureKeyword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.web.access.channel.InsecureChannelProcessor.getEntryPoint()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.web.access.channel.InsecureChannelProcessor.setEntryPoint(org.springframework.security.web.access.channel.ChannelEntryPoint)
org.springframework.security.web.access.channel.InsecureChannelProcessor.getEntryPoint()
junit.framework.Assert.assertTrue(Z)
2654 - Declaração do método: org.springframework.security.web.access.channel.InsecureChannelProcessorTests.testMissingEntryPoint()
Métodos invocados: 
org.springframework.security.web.access.channel.InsecureChannelProcessor.setEntryPoint(org.springframework.security.web.access.channel.ChannelEntryPoint)
org.springframework.security.web.access.channel.InsecureChannelProcessor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2655 - Declaração do método: org.springframework.security.web.access.channel.InsecureChannelProcessorTests.testMissingSecureChannelKeyword()
Métodos invocados: 
org.springframework.security.web.access.channel.InsecureChannelProcessor.setInsecureKeyword(java.lang.String)
org.springframework.security.web.access.channel.InsecureChannelProcessor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.web.access.channel.InsecureChannelProcessor.setInsecureKeyword(java.lang.String)
org.springframework.security.web.access.channel.InsecureChannelProcessor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2656 - Declaração do método: org.springframework.security.web.access.channel.InsecureChannelProcessorTests.testSupports()
Métodos invocados: 
org.springframework.security.web.access.channel.InsecureChannelProcessor.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.web.access.channel.InsecureChannelProcessor.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.web.access.channel.InsecureChannelProcessor.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertFalse(Z)
2657 - Declaração do método: org.springframework.security.web.access.channel.RetryWithHttpsEntryPointTests.setUp()
2657 - Declaração do método: org.springframework.security.web.access.channel.RetryWithHttpsEntryPointTests.testDetectsMissingPortMapper()
Métodos invocados: 
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
junit.framework.Assert.fail(java.lang.String)
2658 - Declaração do método: org.springframework.security.web.access.channel.RetryWithHttpsEntryPointTests.testDetectsMissingPortResolver()
Métodos invocados: 
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
junit.framework.Assert.fail(java.lang.String)
2659 - Declaração do método: org.springframework.security.web.access.channel.RetryWithHttpsEntryPointTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.getPortMapper()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.getPortResolver()
junit.framework.Assert.assertTrue(Z)
2660 - Declaração do método: org.springframework.security.web.access.channel.RetryWithHttpsEntryPointTests.testNormalOperation()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2661 - Declaração do método: org.springframework.security.web.access.channel.RetryWithHttpsEntryPointTests.testNormalOperationWithNullQueryString()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2662 - Declaração do método: org.springframework.security.web.access.channel.RetryWithHttpsEntryPointTests.testOperationWhenTargetPortIsUnknown()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2663 - Declaração do método: org.springframework.security.web.access.channel.RetryWithHttpsEntryPointTests.testOperationWithNonStandardPort()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
java.util.Map.put(java.lang.String, java.lang.String)
org.springframework.security.web.PortMapperImpl.setPortMappings(java.util.Map)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2664 - Declaração do método: org.springframework.security.web.access.channel.RetryWithHttpEntryPointTests.testDetectsMissingPortMapper()
Métodos invocados: 
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
junit.framework.Assert.fail(java.lang.String)
2665 - Declaração do método: org.springframework.security.web.access.channel.RetryWithHttpEntryPointTests.testDetectsMissingPortResolver()
Métodos invocados: 
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
junit.framework.Assert.fail(java.lang.String)
2666 - Declaração do método: org.springframework.security.web.access.channel.RetryWithHttpEntryPointTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.getPortMapper()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.getPortResolver()
junit.framework.Assert.assertTrue(Z)
2667 - Declaração do método: org.springframework.security.web.access.channel.RetryWithHttpEntryPointTests.testNormalOperation()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2668 - Declaração do método: org.springframework.security.web.access.channel.RetryWithHttpEntryPointTests.testNormalOperationWithNullQueryString()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2669 - Declaração do método: org.springframework.security.web.access.channel.RetryWithHttpEntryPointTests.testOperationWhenTargetPortIsUnknown()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2670 - Declaração do método: org.springframework.security.web.access.channel.RetryWithHttpEntryPointTests.testOperationWithNonStandardPort()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
java.util.Map.put(java.lang.String, java.lang.String)
org.springframework.security.web.PortMapperImpl.setPortMappings(java.util.Map)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.access.channel.AbstractRetryEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2671 - Declaração do método: org.springframework.security.web.access.channel.ChannelDecisionManagerImplTests.testCannotSetEmptyChannelProcessorsList()
Métodos invocados: 
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.setChannelProcessors(java.util.List)
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2672 - Declaração do método: org.springframework.security.web.access.channel.ChannelDecisionManagerImplTests.testCannotSetIncorrectObjectTypesIntoChannelProcessorsList()
Métodos invocados: 
java.util.List.add(java.lang.Object)
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.setChannelProcessors(java.util.List)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2673 - Declaração do método: org.springframework.security.web.access.channel.ChannelDecisionManagerImplTests.testCannotSetNullChannelProcessorsList()
Métodos invocados: 
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.setChannelProcessors(java.util.List)
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2674 - Declaração do método: org.springframework.security.web.access.channel.ChannelDecisionManagerImplTests.testDecideIsOperational()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.setChannelProcessors(java.util.List)
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.afterPropertiesSet()
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.decide(org.springframework.security.web.FilterInvocation, java.util.Collection)
org.springframework.security.web.FilterInvocation.getResponse()
javax.servlet.ServletResponse.isCommitted()
junit.framework.Assert.assertTrue(Z)
2675 - Declaração do método: org.springframework.security.web.access.channel.ChannelDecisionManagerImplTests.testAnyChannelAttributeCausesProcessorsToBeSkipped()
Métodos invocados: 
java.util.List.add(java.lang.Object)
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.setChannelProcessors(java.util.List)
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.afterPropertiesSet()
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.decide(org.springframework.security.web.FilterInvocation, java.util.Collection)
org.springframework.security.web.FilterInvocation.getResponse()
javax.servlet.ServletResponse.isCommitted()
junit.framework.Assert.assertFalse(Z)
2676 - Declaração do método: org.springframework.security.web.access.channel.ChannelDecisionManagerImplTests.testDecideIteratesAllProcessorsIfNoneCommitAResponse()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.setChannelProcessors(java.util.List)
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.afterPropertiesSet()
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.decide(org.springframework.security.web.FilterInvocation, java.util.Collection)
org.springframework.security.web.FilterInvocation.getResponse()
javax.servlet.ServletResponse.isCommitted()
junit.framework.Assert.assertFalse(Z)
2677 - Declaração do método: org.springframework.security.web.access.channel.ChannelDecisionManagerImplTests.testDelegatesSupports()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.setChannelProcessors(java.util.List)
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.afterPropertiesSet()
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.supports(org.springframework.security.access.ConfigAttribute)
junit.framework.Assert.assertFalse(Z)
2678 - Declaração do método: org.springframework.security.web.access.channel.ChannelDecisionManagerImplTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.getChannelProcessors()
junit.framework.Assert.assertNull(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.setChannelProcessors(java.util.List)
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.getChannelProcessors()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2679 - Declaração do método: org.springframework.security.web.access.channel.ChannelDecisionManagerImplTests.testStartupFailsWithEmptyChannelProcessorsList()
Métodos invocados: 
org.springframework.security.web.access.channel.ChannelDecisionManagerImpl.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2680 - Declaração do método: org.springframework.security.web.access.channel.ChannelDecisionManagerImplTests$MockChannelProcessor.MockChannelProcessor(java.lang.String, Z)
2680 - Declaração do método: org.springframework.security.web.access.channel.ChannelDecisionManagerImplTests$MockChannelProcessor.decide(org.springframework.security.web.FilterInvocation, java.util.Collection)
Métodos invocados: 
java.util.Collection.iterator()
junit.framework.Assert.fail(java.lang.String)
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.access.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
org.springframework.security.web.FilterInvocation.getHttpResponse()
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
2681 - Declaração do método: org.springframework.security.web.access.channel.ChannelDecisionManagerImplTests$MockChannelProcessor.supports(org.springframework.security.access.ConfigAttribute)
Métodos invocados: 
org.springframework.security.access.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
2682 - Declaração do método: org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandlerTests.expressionPropertiesAreResolvedAgainsAppContextBeans()
Métodos invocados: 
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.springframework.context.support.GenericApplicationContext.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler.setApplicationContext(org.springframework.context.ApplicationContext)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler.createEvaluationContext(org.springframework.security.core.Authentication, org.springframework.security.web.FilterInvocation)
org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler.getExpressionParser()
org.springframework.expression.ExpressionParser.parseExpression(java.lang.String)
org.springframework.expression.Expression.getValue(org.springframework.expression.EvaluationContext, java.lang.Class)
org.junit.Assert.assertTrue(Z)
org.springframework.expression.ExpressionParser.parseExpression(java.lang.String)
org.springframework.expression.Expression.getValue(org.springframework.expression.EvaluationContext, java.lang.Class)
org.junit.Assert.assertTrue(Z)
2683 - Declaração do método: org.springframework.security.web.access.expression.WebSecurityExpressionRootTests.ipAddressMatchesForEqualIpAddresses()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRemoteAddr(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.access.expression.WebSecurityExpressionRoot.hasIpAddress(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.mock.web.MockHttpServletRequest.setRemoteAddr(java.lang.String)
org.springframework.security.web.access.expression.WebSecurityExpressionRoot.hasIpAddress(java.lang.String)
org.junit.Assert.assertTrue(Z)
2684 - Declaração do método: org.springframework.security.web.access.expression.WebSecurityExpressionRootTests.addressesInIpRangeMatch()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.mock.web.MockHttpServletRequest.setRemoteAddr(java.lang.String)
org.springframework.security.web.access.expression.WebSecurityExpressionRoot.hasIpAddress(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.mock.web.MockHttpServletRequest.setRemoteAddr(java.lang.String)
org.springframework.security.web.access.expression.WebSecurityExpressionRoot.hasIpAddress(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.mock.web.MockHttpServletRequest.setRemoteAddr(java.lang.String)
org.springframework.security.web.access.expression.WebSecurityExpressionRoot.hasIpAddress(java.lang.String)
org.junit.Assert.assertFalse(Z)
org.springframework.mock.web.MockHttpServletRequest.setRemoteAddr(java.lang.String)
org.springframework.security.web.access.expression.WebSecurityExpressionRoot.hasIpAddress(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.web.access.expression.WebSecurityExpressionRoot.hasIpAddress(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.web.access.expression.WebSecurityExpressionRoot.hasIpAddress(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.web.access.expression.WebSecurityExpressionRoot.hasIpAddress(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.web.access.expression.WebSecurityExpressionRoot.hasIpAddress(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.mock.web.MockHttpServletRequest.setRemoteAddr(java.lang.String)
org.springframework.security.web.access.expression.WebSecurityExpressionRoot.hasIpAddress(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.mock.web.MockHttpServletRequest.setRemoteAddr(java.lang.String)
org.springframework.security.web.access.expression.WebSecurityExpressionRoot.hasIpAddress(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.mock.web.MockHttpServletRequest.setRemoteAddr(java.lang.String)
org.springframework.security.web.access.expression.WebSecurityExpressionRoot.hasIpAddress(java.lang.String)
org.junit.Assert.assertTrue(Z)
2685 - Declaração do método: org.springframework.security.web.access.intercept.FilterSecurityInterceptorTests.setUp()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.access.intercept.FilterSecurityInterceptor.setSecurityMetadataSource(org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.access.AccessDecisionManager)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.access.intercept.RunAsManager)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2686 - Declaração do método: org.springframework.security.web.access.intercept.FilterSecurityInterceptorTests.tearDown()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2687 - Declaração do método: org.springframework.security.web.access.intercept.FilterSecurityInterceptorTests.testEnsuresAccessDecisionManagerSupportsFilterInvocationClass()
Métodos invocados: 
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.ignoring(org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource)
org.jmock.Expectations.allowing(org.springframework.security.access.AccessDecisionManager)
org.springframework.security.access.AccessDecisionManager.supports(java.lang.Class)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
2688 - Declaração do método: org.springframework.security.web.access.intercept.FilterSecurityInterceptorTests.testEnsuresRunAsManagerSupportsFilterInvocationClass()
Métodos invocados: 
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.ignoring(org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource)
org.jmock.Expectations.allowing(org.springframework.security.access.intercept.RunAsManager)
org.springframework.security.access.intercept.RunAsManager.supports(java.lang.Class)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.access.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
2689 - Declaração do método: org.springframework.security.web.access.intercept.FilterSecurityInterceptorTests.testSuccessfulInvocation()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.ignoring(org.springframework.security.access.intercept.RunAsManager)
org.jmock.Expectations.allowing(org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource)
org.springframework.security.access.SecurityMetadataSource.getAttributes(java.lang.Object)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.oneOf(org.springframework.security.access.AccessDecisionManager)
org.springframework.security.access.AccessDecisionManager.decide(org.springframework.security.core.Authentication, java.lang.Object, java.util.Collection)
org.jmock.Expectations.oneOf(javax.servlet.FilterChain)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.jmock.Expectations.oneOf(org.springframework.context.ApplicationEventPublisher)
org.jmock.Expectations.aNonNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(org.springframework.security.web.FilterInvocation)
2690 - Declaração do método: org.springframework.security.web.access.intercept.RequestKeyTests.equalsWorksWithNullHttpMethod()
Métodos invocados: 
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.access.intercept.RequestKey.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
org.springframework.security.web.access.intercept.RequestKey.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
2691 - Declaração do método: org.springframework.security.web.access.intercept.RequestKeyTests.keysWithSameUrlAndHttpMethodAreEqual()
Métodos invocados: 
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2692 - Declaração do método: org.springframework.security.web.access.intercept.RequestKeyTests.keysWithSameUrlAndDifferentHttpMethodAreNotEqual()
Métodos invocados: 
org.springframework.security.web.access.intercept.RequestKey.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
org.springframework.security.web.access.intercept.RequestKey.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
2693 - Declaração do método: org.springframework.security.web.access.intercept.RequestKeyTests.keysWithDifferentUrlsAreNotEquals()
Métodos invocados: 
org.springframework.security.web.access.intercept.RequestKey.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
org.springframework.security.web.access.intercept.RequestKey.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
2694 - Declaração do método: org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFids(java.lang.String, java.lang.String)
Métodos invocados: 
java.util.HashMap.put(org.springframework.security.web.util.RequestMatcher, java.util.Collection)
2695 - Declaração do método: org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.lookupNotRequiringExactMatchSucceedsIfNotMatching()
Métodos invocados: 
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFids(java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFilterInvocation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource.getAttributes(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2696 - Declaração do método: org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.lookupNotRequiringExactMatchSucceedsIfSecureUrlPathContainsUpperCase()
Métodos invocados: 
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFids(java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFilterInvocation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource.getAttributes(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2697 - Declaração do método: org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.lookupRequiringExactMatchIsSuccessful()
Métodos invocados: 
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFids(java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFilterInvocation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource.getAttributes(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2698 - Declaração do método: org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.lookupRequiringExactMatchWithAdditionalSlashesIsSuccessful()
Métodos invocados: 
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFids(java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFilterInvocation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource.getAttributes(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2699 - Declaração do método: org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.unknownHttpMethodIsRejected()
Métodos invocados: 
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFids(java.lang.String, java.lang.String)
2700 - Declaração do método: org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.httpMethodLookupSucceeds()
Métodos invocados: 
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFids(java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFilterInvocation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource.getAttributes(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2701 - Declaração do método: org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.generalMatchIsUsedIfNoMethodSpecificMatchExists()
Métodos invocados: 
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFids(java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFilterInvocation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource.getAttributes(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2702 - Declaração do método: org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.requestWithDifferentHttpMethodDoesntMatch()
Métodos invocados: 
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFids(java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFilterInvocation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource.getAttributes(java.lang.Object)
org.junit.Assert.assertNull(java.lang.Object)
2703 - Declaração do método: org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.mixingPatternsWithAndWithoutHttpMethodsIsSupported()
Métodos invocados: 
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
java.util.HashMap.put(org.springframework.security.web.util.RequestMatcher, java.util.Collection)
org.springframework.security.access.SecurityConfig.createList([Ljava.lang.String;)
java.util.HashMap.put(org.springframework.security.web.util.RequestMatcher, java.util.Collection)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFilterInvocation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource.getAttributes(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2704 - Declaração do método: org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.extraQuestionMarkStillMatches()
Métodos invocados: 
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFids(java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFilterInvocation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource.getAttributes(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFilterInvocation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource.getAttributes(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2705 - Declaração do método: org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSourceTests.createFilterInvocation(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setMethod(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setPathInfo(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
2706 - Declaração do método: org.springframework.security.web.authentication.DelegatingAuthenticationEntryPointContextTest.testFirstAEP()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRemoteAddr(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.mockito.Mockito.verify(org.springframework.security.web.AuthenticationEntryPoint)
org.springframework.security.web.AuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(org.springframework.security.web.AuthenticationEntryPoint, org.mockito.internal.verification.api.VerificationMode)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.web.AuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
2707 - Declaração do método: org.springframework.security.web.authentication.DelegatingAuthenticationEntryPointContextTest.testDefaultAEP()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRemoteAddr(java.lang.String)
org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.mockito.Mockito.verify(org.springframework.security.web.AuthenticationEntryPoint)
org.springframework.security.web.AuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(org.springframework.security.web.AuthenticationEntryPoint, org.mockito.internal.verification.api.VerificationMode)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.web.AuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
2708 - Declaração do método: org.springframework.security.web.authentication.AnonymousAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
2709 - Declaração do método: org.springframework.security.web.authentication.AnonymousAuthenticationFilterTests.clearContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2710 - Declaração do método: org.springframework.security.web.authentication.AnonymousAuthenticationFilterTests.testDetectsMissingKey()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserAttribute.setPassword(java.lang.String)
org.springframework.security.core.userdetails.memory.UserAttribute.addAuthority(org.springframework.security.core.GrantedAuthority)
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.setUserAttribute(org.springframework.security.core.userdetails.memory.UserAttribute)
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.afterPropertiesSet()
2711 - Declaração do método: org.springframework.security.web.authentication.AnonymousAuthenticationFilterTests.testDetectsUserAttribute()
Métodos invocados: 
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.setKey(java.lang.String)
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.afterPropertiesSet()
2712 - Declaração do método: org.springframework.security.web.authentication.AnonymousAuthenticationFilterTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserAttribute.setPassword(java.lang.String)
org.springframework.security.core.userdetails.memory.UserAttribute.addAuthority(org.springframework.security.core.GrantedAuthority)
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.setKey(java.lang.String)
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.setUserAttribute(org.springframework.security.core.userdetails.memory.UserAttribute)
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.afterPropertiesSet()
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.getKey()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.getUserAttribute()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2713 - Declaração do método: org.springframework.security.web.authentication.AnonymousAuthenticationFilterTests.testOperationWhenAuthenticationExistsInContextHolder()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.core.userdetails.memory.UserAttribute.setPassword(java.lang.String)
org.springframework.security.core.userdetails.memory.UserAttribute.addAuthority(org.springframework.security.core.GrantedAuthority)
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.setKey(java.lang.String)
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.setUserAttribute(org.springframework.security.core.userdetails.memory.UserAttribute)
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.AnonymousAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2714 - Declaração do método: org.springframework.security.web.authentication.AnonymousAuthenticationFilterTests.testOperationWhenNoAuthenticationInSecurityContextHolder()
Métodos invocados: 
org.springframework.security.core.userdetails.memory.UserAttribute.setPassword(java.lang.String)
org.springframework.security.core.userdetails.memory.UserAttribute.addAuthority(org.springframework.security.core.GrantedAuthority)
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.setKey(java.lang.String)
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.setUserAttribute(org.springframework.security.core.userdetails.memory.UserAttribute)
org.springframework.security.web.authentication.AnonymousAuthenticationFilter.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.AnonymousAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.Authentication.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
2715 - Declaração do método: org.springframework.security.web.authentication.AnonymousAuthenticationFilterTests$MockFilterChain.MockFilterChain(Z)
2715 - Declaração do método: org.springframework.security.web.authentication.AnonymousAuthenticationFilterTests$MockFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
Métodos invocados: 
org.junit.Assert.fail(java.lang.String)
2716 - Declaração do método: org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilterTests.testNormalOperation()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getFilterProcessesUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilterTests.createAuthenticationManager()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertTrue(Z)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.Authentication.getDetails()
org.springframework.security.web.authentication.WebAuthenticationDetails.getRemoteAddress()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2717 - Declaração do método: org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilterTests.testNullPasswordHandledGracefully()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilterTests.createAuthenticationManager()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertNotNull(java.lang.Object)
2718 - Declaração do método: org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilterTests.testNullUsernameHandledGracefully()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilterTests.createAuthenticationManager()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertNotNull(java.lang.Object)
2719 - Declaração do método: org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilterTests.testUsingDifferentParameterNamesWorksAsExpected()
Métodos invocados: 
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilterTests.createAuthenticationManager()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.setUsernameParameter(java.lang.String)
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.setPasswordParameter(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.Authentication.getDetails()
org.springframework.security.web.authentication.WebAuthenticationDetails.getRemoteAddress()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2720 - Declaração do método: org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilterTests.testSpacesAreTrimmedCorrectlyFromUsername()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilterTests.createAuthenticationManager()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
java.security.Principal.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2721 - Declaração do método: org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilterTests.testFailedAuthenticationThrowsException()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenThrow([Ljava.lang.Throwable;)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.fail(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2722 - Declaração do método: org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilterTests.noSessionIsCreatedIfAllowSessionCreationIsFalse()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAllowSessionCreation(Z)
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilterTests.createAuthenticationManager()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletRequest.getSession(Z)
junit.framework.Assert.assertNull(java.lang.Object)
2723 - Declaração do método: org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilterTests.createAuthenticationManager()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenAnswer(org.mockito.stubbing.Answer)
org.mockito.invocation.InvocationOnMock.getArguments()
2724 - Declaração do método: org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilterTests$1.answer(org.mockito.invocation.InvocationOnMock)
Métodos invocados: 
org.mockito.invocation.InvocationOnMock.getArguments()
2725 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandlerTests.redirectIsNotPerformedIfResponseIsCommitted()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletResponse.setCommitted(Z)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler.onAuthenticationSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertNull(java.lang.Object)
2726 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPointTests.testDetectsMissingLoginFormUrl()
Métodos invocados: 
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
2727 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPointTests.testDetectsMissingPortMapper()
Métodos invocados: 
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
2728 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPointTests.testDetectsMissingPortResolver()
Métodos invocados: 
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
2729 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPointTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.getLoginFormUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.getPortMapper()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.getPortResolver()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setForceHttps(Z)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.isForceHttps()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setForceHttps(Z)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.isForceHttps()
junit.framework.Assert.assertTrue(Z)
2730 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPointTests.testHttpsOperationFromOriginalHttpUrl()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setForceHttps(Z)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.afterPropertiesSet()
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.put(java.lang.String, java.lang.String)
org.springframework.security.web.PortMapperImpl.setPortMappings(java.util.Map)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setForceHttps(Z)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.afterPropertiesSet()
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2731 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPointTests.testHttpsOperationFromOriginalHttpsUrl()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setForceHttps(Z)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.afterPropertiesSet()
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2732 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPointTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortMapper(org.springframework.security.web.PortMapper)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2733 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPointTests.testOperationWhenHttpsRequestsButHttpsPortUnknown()
Métodos invocados: 
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setPortResolver(org.springframework.security.web.PortResolver)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setForceHttps(Z)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2734 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPointTests.testServerSideRedirectWithoutForceHttpsForwardsToLoginPage()
Métodos invocados: 
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setUseForward(Z)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getForwardedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2735 - Declaração do método: org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPointTests.testServerSideRedirectWithForceHttpsRedirectsCurrentRequest()
Métodos invocados: 
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setUseForward(Z)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.setForceHttps(Z)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2736 - Declaração do método: org.springframework.security.web.authentication.DefaultLoginPageGeneratingFilterTests.generatingPageWithAuthenticationProcessingFilterOnlyIsSuccessFul()
Métodos invocados: 
org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
2737 - Declaração do método: org.springframework.security.web.authentication.DefaultLoginPageGeneratingFilterTests.generatingPageWithOpenIdFilterOnlyIsSuccessFul()
Métodos invocados: 
org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
2738 - Declaração do método: org.springframework.security.web.authentication.DefaultLoginPageGeneratingFilterTests$MockProcessingFilter.MockProcessingFilter()
2738 - Declaração do método: org.springframework.security.web.authentication.DefaultLoginPageGeneratingFilterTests$MockProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2738 - Declaração do método: org.springframework.security.web.authentication.DefaultLoginPageGeneratingFilterTests$MockProcessingFilter.getClaimedIdentityFieldName()
2738 - Declaração do método: org.springframework.security.web.authentication.DefaultLoginPageGeneratingFilterTests.handlesNonIso8859CharsInErrorMessage()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.core.SpringSecurityMessageSource.getAccessor()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String, java.util.Locale)
java.io.PrintStream.println(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
2739 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandlerTests.error401IsReturnedIfNoUrlIsSet()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.setRedirectStrategy(org.springframework.security.web.RedirectStrategy)
org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.getRedirectStrategy()
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.onAuthenticationFailure(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
2740 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandlerTests.exceptionIsSavedToSessionOnRedirect()
Métodos invocados: 
org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.setDefaultFailureUrl(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.onAuthenticationFailure(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2741 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandlerTests.exceptionIsNotSavedIfAllowSessionCreationIsFalse()
Métodos invocados: 
org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.setAllowSessionCreation(Z)
org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.isAllowSessionCreation()
org.junit.Assert.assertFalse(Z)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.onAuthenticationFailure(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.mock.web.MockHttpServletRequest.getSession(Z)
org.junit.Assert.assertNull(java.lang.Object)
2742 - Declaração do método: org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandlerTests.responseIsForwardedIfUseForwardIsTrue()
Métodos invocados: 
org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.setUseForward(Z)
org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.isUseForward()
org.junit.Assert.assertTrue(Z)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.onAuthenticationFailure(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.mock.web.MockHttpServletRequest.getSession(Z)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getForwardedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.getAttribute(java.lang.String)
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
2743 - Declaração do método: org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandlerTests.defaultUrlMuststartWithSlashOrHttpScheme()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setDefaultTargetUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setDefaultTargetUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setDefaultTargetUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setDefaultTargetUrl(java.lang.String)
org.junit.Assert.fail(java.lang.String)
2744 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.createMockRequest()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
2745 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.Filter.init(javax.servlet.FilterConfig)
javax.servlet.Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
javax.servlet.Filter.destroy()
2746 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.makeSavedRequestForUrl()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.createMockRequest()
org.springframework.mock.web.MockHttpServletRequest.setMethod(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
2747 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.setUp()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setDefaultTargetUrl(java.lang.String)
org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.setDefaultFailureUrl(java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2748 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.tearDown()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2749 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.testDefaultProcessesFilterUrlMatchesWithPathParameter()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.createMockRequest()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests$MockAuthenticationFilter.requiresAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertTrue(Z)
2750 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.testFailedAuthenticationRedirectsAppropriately()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.createMockRequest()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationFailureHandler(org.springframework.security.web.authentication.AuthenticationFailureHandler)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationFailureHandler(org.springframework.security.web.authentication.AuthenticationFailureHandler)
java.lang.Class.getName()
java.util.Properties.setProperty(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler.setExceptionMappings(java.util.Map)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
2751 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.testFilterProcessesUrlVariationsRespected()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.createMockRequest()
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationSuccessHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.getPrincipal()
java.lang.Object.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2752 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.testGettersSetters()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.afterPropertiesSet()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getRememberMeServices()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setRememberMeServices(org.springframework.security.web.authentication.RememberMeServices)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getRememberMeServices()
java.lang.Object.getClass()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getAuthenticationManager()
org.junit.Assert.assertTrue(Z)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.getFilterProcessesUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2753 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.testIgnoresAnyServletPathOtherThanFilterProcessesUrl()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.createMockRequest()
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
2754 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.testNormalOperationWithDefaultFilterProcessesUrl()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.createMockRequest()
org.springframework.mock.web.MockHttpServletRequest.getSession()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setSessionAuthenticationStrategy(org.springframework.security.web.authentication.session.SessionAuthenticationStrategy)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationSuccessHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationFailureHandler(org.springframework.security.web.authentication.AuthenticationFailureHandler)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.afterPropertiesSet()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.getPrincipal()
java.lang.Object.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.getSession()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2755 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.testStartupDetectsInvalidAuthenticationManager()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationFailureHandler(org.springframework.security.web.authentication.AuthenticationFailureHandler)
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setDefaultTargetUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationSuccessHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.afterPropertiesSet()
org.junit.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2756 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.testStartupDetectsInvalidFilterProcessesUrl()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationFailureHandler(org.springframework.security.web.authentication.AuthenticationFailureHandler)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationSuccessHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.afterPropertiesSet()
org.junit.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2757 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.testSuccessLoginThenFailureLoginResultsInSessionLosingToken()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.createMockRequest()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationSuccessHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.getPrincipal()
java.lang.Object.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationFailureHandler(org.springframework.security.web.authentication.AuthenticationFailureHandler)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
2758 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.testSuccessfulAuthenticationButWithAlwaysUseDefaultTargetUrlCausesRedirectToDefaultTargetUrl()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.createMockRequest()
org.springframework.mock.web.MockHttpServletRequest.getSession()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.makeSavedRequestForUrl()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setDefaultTargetUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setAlwaysUseDefaultTargetUrl(Z)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationSuccessHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNotNull(java.lang.Object)
2759 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.testSuccessfulAuthenticationCausesRedirectToSessionSpecifiedUrl()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.createMockRequest()
org.springframework.mock.web.MockHttpServletRequest.getSession()
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.makeSavedRequestForUrl()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.makeSavedRequestForUrl()
org.springframework.security.web.savedrequest.DefaultSavedRequest.getRedirectUrl()
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNotNull(java.lang.Object)
2760 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.testFullDefaultTargetUrlDoesNotHaveContextPathPrepended()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.createMockRequest()
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setDefaultTargetUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setAlwaysUseDefaultTargetUrl(Z)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationSuccessHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNotNull(java.lang.Object)
2761 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.testNoSessionIsCreatedIfAllowSessionCreationIsFalse()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.createMockRequest()
org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.setAllowSessionCreation(Z)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationFailureHandler(org.springframework.security.web.authentication.AuthenticationFailureHandler)
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setDefaultTargetUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationSuccessHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletRequest.getSession(Z)
org.junit.Assert.assertNull(java.lang.Object)
2762 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.testLoginErrorWithNoFailureUrlSendsUnauthorizedStatus()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.createMockRequest()
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setDefaultTargetUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationSuccessHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
2763 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.testServerSideRedirectForwardsToFailureUrl()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.createMockRequest()
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setDefaultTargetUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationSuccessHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationFailureHandler(org.springframework.security.web.authentication.AuthenticationFailureHandler)
org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.setUseForward(Z)
org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler.setDefaultFailureUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getForwardedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2764 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.testTargetUrlParameterIsUsedIfPresent()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.createMockRequest()
org.springframework.mock.web.MockHttpServletRequest.setParameter(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationSuccessHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setDefaultTargetUrl(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setTargetUrlParameter(java.lang.String)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setAuthenticationFailureHandler(org.springframework.security.web.authentication.AuthenticationFailureHandler)
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2765 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests$MockAuthenticationFilter.MockAuthenticationFilter(Z)
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setRememberMeServices(org.springframework.security.web.authentication.RememberMeServices)
2766 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests$MockAuthenticationFilter.MockAuthenticationFilter(org.springframework.security.core.AuthenticationException)
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.setRememberMeServices(org.springframework.security.web.authentication.RememberMeServices)
2767 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests$MockAuthenticationFilter.MockAuthenticationFilter()
2767 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests$MockAuthenticationFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
2768 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests$MockAuthenticationFilter.requiresAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2768 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests$MockFilterChain.MockFilterChain(Z)
2768 - Declaração do método: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilterTests$MockFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
Métodos invocados: 
org.junit.Assert.assertTrue(Z)
org.junit.Assert.fail(java.lang.String)
2769 - Declaração do método: org.springframework.security.web.authentication.DelegatingAuthenticationEntryPointTest.before()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint.setDefaultEntryPoint(org.springframework.security.web.AuthenticationEntryPoint)
2770 - Declaração do método: org.springframework.security.web.authentication.DelegatingAuthenticationEntryPointTest.testDefaultEntryPoint()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.util.RequestMatcher.matches(javax.servlet.http.HttpServletRequest)
org.mockito.Mockito.when(java.lang.Boolean)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.lang.Boolean)
java.util.HashMap.put(org.springframework.security.web.util.RequestMatcher, org.springframework.security.web.AuthenticationEntryPoint)
org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.mockito.Mockito.verify(org.springframework.security.web.AuthenticationEntryPoint)
org.springframework.security.web.AuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(org.springframework.security.web.AuthenticationEntryPoint, org.mockito.internal.verification.api.VerificationMode)
org.springframework.security.web.AuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
2771 - Declaração do método: org.springframework.security.web.authentication.DelegatingAuthenticationEntryPointTest.testFirstEntryPoint()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.util.RequestMatcher.matches(javax.servlet.http.HttpServletRequest)
org.mockito.Mockito.when(java.lang.Boolean)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.lang.Boolean)
java.util.HashMap.put(org.springframework.security.web.util.RequestMatcher, org.springframework.security.web.AuthenticationEntryPoint)
java.util.HashMap.put(org.springframework.security.web.util.RequestMatcher, org.springframework.security.web.AuthenticationEntryPoint)
org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.mockito.Mockito.verify(org.springframework.security.web.AuthenticationEntryPoint)
org.springframework.security.web.AuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(org.springframework.security.web.AuthenticationEntryPoint, org.mockito.internal.verification.api.VerificationMode)
org.springframework.security.web.AuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(org.springframework.security.web.AuthenticationEntryPoint, org.mockito.internal.verification.api.VerificationMode)
org.springframework.security.web.AuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(org.springframework.security.web.util.RequestMatcher, org.mockito.internal.verification.api.VerificationMode)
org.springframework.security.web.util.RequestMatcher.matches(javax.servlet.http.HttpServletRequest)
2772 - Declaração do método: org.springframework.security.web.authentication.DelegatingAuthenticationEntryPointTest.testSecondEntryPoint()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.util.RequestMatcher.matches(javax.servlet.http.HttpServletRequest)
org.mockito.Mockito.when(java.lang.Boolean)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.lang.Boolean)
org.springframework.security.web.util.RequestMatcher.matches(javax.servlet.http.HttpServletRequest)
org.mockito.Mockito.when(java.lang.Boolean)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.lang.Boolean)
java.util.HashMap.put(org.springframework.security.web.util.RequestMatcher, org.springframework.security.web.AuthenticationEntryPoint)
java.util.HashMap.put(org.springframework.security.web.util.RequestMatcher, org.springframework.security.web.AuthenticationEntryPoint)
org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.mockito.Mockito.verify(org.springframework.security.web.AuthenticationEntryPoint)
org.springframework.security.web.AuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(org.springframework.security.web.AuthenticationEntryPoint, org.mockito.internal.verification.api.VerificationMode)
org.springframework.security.web.AuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(org.springframework.security.web.AuthenticationEntryPoint, org.mockito.internal.verification.api.VerificationMode)
org.springframework.security.web.AuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
2773 - Declaração do método: org.springframework.security.web.authentication.logout.LogoutHandlerTests.setUp()
2773 - Declaração do método: org.springframework.security.web.authentication.logout.LogoutHandlerTests.testRequiresLogoutUrlWorksWithPathParams()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.authentication.logout.LogoutFilter.requiresLogout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertTrue(Z)
2774 - Declaração do método: org.springframework.security.web.authentication.logout.LogoutHandlerTests.testRequiresLogoutUrlWorksWithQueryParams()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.authentication.logout.LogoutFilter.requiresLogout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertTrue(Z)
2775 - Declaração do método: org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandlerTests.doesntRedirectIfResponseIsCommitted()
Métodos invocados: 
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setDefaultTargetUrl(java.lang.String)
org.springframework.mock.web.MockHttpServletResponse.setCommitted(Z)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler.onLogoutSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.springframework.mock.web.MockHttpServletRequest.getSession(Z)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getForwardedUrl()
org.junit.Assert.assertNull(java.lang.Object)
2776 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsServiceTests.testGetUserDetailsInvalidType()
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsService.loadUserDetails(org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken)
2777 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsServiceTests.testGetUserDetailsNoDetails()
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsService.loadUserDetails(org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken)
2778 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsServiceTests.testGetUserDetailsEmptyAuthorities()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsServiceTests.testGetUserDetails(java.lang.String, java.util.List)
2779 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsServiceTests.testGetUserDetailsWithAuthorities()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsServiceTests.testGetUserDetails(java.lang.String, java.util.List)
2780 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsServiceTests.testGetUserDetails(java.lang.String, java.util.List)
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsService.loadUserDetails(org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken)
org.springframework.security.core.userdetails.UserDetails.isAccountNonExpired()
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.UserDetails.isAccountNonLocked()
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.UserDetails.isCredentialsNonExpired()
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.UserDetails.isEnabled()
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
java.util.List.containsAll(java.util.Collection)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
java.util.Collection.containsAll(java.util.Collection)
org.junit.Assert.assertTrue(java.lang.String, Z)
2781 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsServiceTests$1.getGrantedAuthorities()
2781 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationTokenTests.testPreAuthenticatedAuthenticationTokenRequestWithDetails()
Métodos invocados: 
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.getDetails()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
java.util.Collection.isEmpty()
junit.framework.Assert.assertTrue(Z)
2782 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationTokenTests.testPreAuthenticatedAuthenticationTokenRequestWithoutDetails()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.getDetails()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
java.util.Collection.isEmpty()
junit.framework.Assert.assertTrue(Z)
2783 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationTokenTests.testPreAuthenticatedAuthenticationTokenResponse()
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.getDetails()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.authentication.AbstractAuthenticationToken.getAuthorities()
java.util.List.containsAll(java.util.Collection)
java.util.Collection.containsAll(java.util.Collection)
junit.framework.Assert.assertTrue(java.lang.String, Z)
2784 - Declaração do método: org.springframework.security.web.authentication.preauth.Http403ForbiddenEntryPointTests.testCommence()
Métodos invocados: 
org.springframework.security.web.authentication.Http403ForbiddenEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
2785 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests.afterPropertiesSet()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.afterPropertiesSet()
2786 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests.authenticateInvalidToken()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests.getProvider(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.assertNull(java.lang.Object)
2787 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests.nullPrincipalReturnsNullAuthentication()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.assertNull(java.lang.Object)
2788 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests.authenticateKnownUser()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests.getProvider(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.Authentication.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2789 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests.authenticateIgnoreCredentials()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests.getProvider(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.Authentication.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2790 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests.authenticateUnknownUserThrowsException()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests.getProvider(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
2791 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests.supportsArbitraryObject()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests.getProvider(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.supports(java.lang.Class)
org.junit.Assert.assertFalse(Z)
2792 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests.supportsPreAuthenticatedAuthenticationToken()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests.getProvider(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.supports(java.lang.Class)
org.junit.Assert.assertTrue(Z)
2793 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests.getSetOrder()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests.getProvider(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.setOrder(I)
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.getOrder()
org.junit.Assert.assertEquals(J, J)
2794 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests.getProvider(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests.getPreAuthenticatedUserDetailsService(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.setPreAuthenticatedUserDetailsService(org.springframework.security.core.userdetails.AuthenticationUserDetailsService)
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.afterPropertiesSet()
2795 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests.getPreAuthenticatedUserDetailsService(org.springframework.security.core.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.authentication.AbstractAuthenticationToken.getName()
java.lang.String.equals(java.lang.Object)
2796 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProviderTests$1.loadUserDetails(org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken)
Métodos invocados: 
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.springframework.security.authentication.AbstractAuthenticationToken.getName()
java.lang.String.equals(java.lang.Object)
2797 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilterTests.createFilter()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
2798 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilterTests$1.getPreAuthenticatedCredentials(javax.servlet.http.HttpServletRequest)
2798 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilterTests$1.getPreAuthenticatedPrincipal(javax.servlet.http.HttpServletRequest)
2798 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilterTests.filterChainProceedsOnFailedAuthenticationByDefault()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenThrow([Ljava.lang.Throwable;)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.afterPropertiesSet()
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
2799 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilterTests.exceptionIsThrownOnFailedAuthenticationIfContinueFilterChainOnUnsuccessfulAuthenticationSetToFalse()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenThrow([Ljava.lang.Throwable;)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.setContinueFilterChainOnUnsuccessfulAuthentication(Z)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.afterPropertiesSet()
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
2800 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilterTests.testAfterPropertiesSet()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.afterPropertiesSet()
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.fail(java.lang.String)
2801 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilterTests.testDoFilterAuthenticated()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilterTests.testDoFilter(Z)
2802 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilterTests.testDoFilterUnauthenticated()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilterTests.testDoFilter(Z)
2803 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilterTests.testDoFilter(Z)
Métodos invocados: 
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilterTests.getFilter(Z)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2804 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilterTests.getFilter(Z)
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenThrow([Ljava.lang.Throwable;)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenAnswer(org.mockito.stubbing.Answer)
org.mockito.invocation.InvocationOnMock.getArguments()
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.afterPropertiesSet()
2805 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilterTests$2.answer(org.mockito.invocation.InvocationOnMock)
Métodos invocados: 
org.mockito.invocation.InvocationOnMock.getArguments()
2806 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilterTests$ConcretePreAuthenticatedProcessingFilter.getPreAuthenticatedPrincipal(javax.servlet.http.HttpServletRequest)
2806 - Declaração do método: org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilterTests$ConcretePreAuthenticatedProcessingFilter.getPreAuthenticatedCredentials(javax.servlet.http.HttpServletRequest)
2806 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetailsTests.testToString()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetailsTests.getRequest(java.lang.String, [Ljava.lang.String;)
org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.setGrantedAuthorities(java.util.List)
org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.toString()
java.lang.String.contains(java.lang.CharSequence)
org.junit.Assert.assertTrue(java.lang.String, Z)
java.lang.String.contains(java.lang.CharSequence)
org.junit.Assert.assertTrue(java.lang.String, Z)
2807 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetailsTests.testGetSetPreAuthenticatedGrantedAuthorities()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetailsTests.getRequest(java.lang.String, [Ljava.lang.String;)
org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.setGrantedAuthorities(java.util.List)
org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.getGrantedAuthorities()
java.util.List.containsAll(java.util.Collection)
java.util.List.containsAll(java.util.Collection)
org.junit.Assert.assertTrue(java.lang.String, Z)
2808 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetailsTests.testGetWithoutSetPreAuthenticatedGrantedAuthorities()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetailsTests.getRequest(java.lang.String, [Ljava.lang.String;)
org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.getGrantedAuthorities()
2809 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetailsTests.getRequest(java.lang.String, [Ljava.lang.String;)
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.contains(java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setRemoteUser(java.lang.String)
2810 - Declaração do método: org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetailsTests$1.isUserInRole(java.lang.String)
Métodos invocados: 
java.util.Set.contains(java.lang.Object)
2811 - Declaração do método: org.springframework.security.web.authentication.preauth.header.RequestHeaderAuthenticationFilterTests.clearContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2812 - Declaração do método: org.springframework.security.web.authentication.preauth.header.RequestHeaderAuthenticationFilterTests.rejectsMissingHeader()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
2813 - Declaração do método: org.springframework.security.web.authentication.preauth.header.RequestHeaderAuthenticationFilterTests.defaultsToUsingSiteminderHeader()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.preauth.header.RequestHeaderAuthenticationFilterTests.createAuthenticationManager()
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
java.security.Principal.getName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2814 - Declaração do método: org.springframework.security.web.authentication.preauth.header.RequestHeaderAuthenticationFilterTests.alternativeHeaderNameIsSupported()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.preauth.header.RequestHeaderAuthenticationFilterTests.createAuthenticationManager()
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.preauth.RequestHeaderAuthenticationFilter.setPrincipalRequestHeader(java.lang.String)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
java.security.Principal.getName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2815 - Declaração do método: org.springframework.security.web.authentication.preauth.header.RequestHeaderAuthenticationFilterTests.credentialsAreRetrievedIfHeaderNameIsSet()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.header.RequestHeaderAuthenticationFilterTests.createAuthenticationManager()
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.preauth.RequestHeaderAuthenticationFilter.setCredentialsRequestHeader(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2816 - Declaração do método: org.springframework.security.web.authentication.preauth.header.RequestHeaderAuthenticationFilterTests.userIsReauthenticatedIfPrincipalChangesAndCheckForPrincipalChangesIsSet()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.header.RequestHeaderAuthenticationFilterTests.createAuthenticationManager()
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.setCheckForPrincipalChanges(Z)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNotNull(java.lang.Object)
java.security.Principal.getName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
2817 - Declaração do método: org.springframework.security.web.authentication.preauth.header.RequestHeaderAuthenticationFilterTests.missingHeaderCausesException()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.header.RequestHeaderAuthenticationFilterTests.createAuthenticationManager()
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
2818 - Declaração do método: org.springframework.security.web.authentication.preauth.header.RequestHeaderAuthenticationFilterTests.missingHeaderIsIgnoredIfExceptionIfHeaderMissingIsFalse()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.RequestHeaderAuthenticationFilter.setExceptionIfHeaderMissing(Z)
org.springframework.security.web.authentication.preauth.header.RequestHeaderAuthenticationFilterTests.createAuthenticationManager()
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
2819 - Declaração do método: org.springframework.security.web.authentication.preauth.header.RequestHeaderAuthenticationFilterTests.createAuthenticationManager()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenAnswer(org.mockito.stubbing.Answer)
org.mockito.invocation.InvocationOnMock.getArguments()
2820 - Declaração do método: org.springframework.security.web.authentication.preauth.header.RequestHeaderAuthenticationFilterTests$1.answer(org.mockito.invocation.InvocationOnMock)
Métodos invocados: 
org.mockito.invocation.InvocationOnMock.getArguments()
2821 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilterTests.testGetPreAuthenticatedPrincipal()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilterTests.getRequest(java.lang.String, [Ljava.lang.String;)
org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilter.getPreAuthenticatedPrincipal(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2822 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilterTests.testGetPreAuthenticatedCredentials()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilterTests.getRequest(java.lang.String, [Ljava.lang.String;)
org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilter.getPreAuthenticatedCredentials(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2823 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilterTests.getRequest(java.lang.String, [Ljava.lang.String;)
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.contains(java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setRemoteUser(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setUserPrincipal(java.security.Principal)
2824 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilterTests$1.isUserInRole(java.lang.String)
Métodos invocados: 
java.util.Set.contains(java.lang.Object)
2825 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilterTests$2.getName()
2825 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.WebXmlJ2eeDefinedRolesRetrieverTests.testRole1To4Roles()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.String;)
org.springframework.security.web.authentication.preauth.j2ee.WebXmlMappableAttributesRetriever.setResourceLoader(org.springframework.core.io.ResourceLoader)
java.lang.Thread.currentThread()
java.lang.Thread.getContextClassLoader()
org.springframework.security.web.authentication.preauth.j2ee.WebXmlMappableAttributesRetriever.afterPropertiesSet()
org.springframework.security.web.authentication.preauth.j2ee.WebXmlMappableAttributesRetriever.getMappableAttributes()
org.junit.Assert.assertNotNull(java.lang.Object)
java.util.List.size()
java.util.Set.size()
java.util.Set.size()
java.util.List.size()
org.junit.Assert.assertTrue(java.lang.String, Z)
java.util.Set.containsAll(java.util.Collection)
org.junit.Assert.assertTrue(java.lang.String, Z)
2826 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.WebXmlJ2eeDefinedRolesRetrieverTests$1.getClassLoader()
Métodos invocados: 
java.lang.Thread.currentThread()
java.lang.Thread.getContextClassLoader()
2827 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.WebXmlJ2eeDefinedRolesRetrieverTests$1.getResource(java.lang.String)
2827 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.WebXmlJ2eeDefinedRolesRetrieverTests.testGetZeroJ2eeRoles()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.j2ee.WebXmlMappableAttributesRetriever.setResourceLoader(org.springframework.core.io.ResourceLoader)
java.lang.Thread.currentThread()
java.lang.Thread.getContextClassLoader()
org.springframework.security.web.authentication.preauth.j2ee.WebXmlMappableAttributesRetriever.afterPropertiesSet()
org.springframework.security.web.authentication.preauth.j2ee.WebXmlMappableAttributesRetriever.getMappableAttributes()
java.util.Set.size()
java.util.Set.size()
org.junit.Assert.assertEquals(java.lang.String, J, J)
2828 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.WebXmlJ2eeDefinedRolesRetrieverTests$2.getClassLoader()
Métodos invocados: 
java.lang.Thread.currentThread()
java.lang.Thread.getContextClassLoader()
2829 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.WebXmlJ2eeDefinedRolesRetrieverTests$2.getResource(java.lang.String)
2829 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testAfterPropertiesSetException()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
2830 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testBuildDetailsHttpServletRequestNoMappedNoUserRoles()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testDetails([Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)
2831 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testBuildDetailsHttpServletRequestNoMappedUnmappedUserRoles()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testDetails([Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)
2832 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testBuildDetailsHttpServletRequestNoUserRoles()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testDetails([Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)
2833 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testBuildDetailsHttpServletRequestAllUserRoles()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testDetails([Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)
2834 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testBuildDetailsHttpServletRequestUnmappedUserRoles()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testDetails([Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)
2835 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testBuildDetailsHttpServletRequestPartialUserRoles()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testDetails([Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)
2836 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testBuildDetailsHttpServletRequestPartialAndUnmappedUserRoles()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testDetails([Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)
2837 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testDetails([Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)
Métodos invocados: 
org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.getJ2eeBasedPreAuthenticatedWebAuthenticationDetailsSource([Ljava.lang.String;)
org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.getRequest(java.lang.String, [Ljava.lang.String;)
org.springframework.security.web.authentication.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.buildDetails(java.lang.Object)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.lang.Object.getClass()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.getGrantedAuthorities()
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.size()
java.util.List.get(I)
org.springframework.security.core.GrantedAuthority.getAuthority()
java.util.Collection.add(java.lang.String)
java.util.Collection.containsAll(java.util.Collection)
java.util.Collection.containsAll(java.util.Collection)
junit.framework.Assert.assertTrue(java.lang.String, Z)
2838 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.getJ2eeBasedPreAuthenticatedWebAuthenticationDetailsSource([Ljava.lang.String;)
Métodos invocados: 
org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.getMappableRolesRetriever([Ljava.lang.String;)
org.springframework.security.web.authentication.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.setMappableRolesRetriever(org.springframework.security.core.authority.mapping.MappableAttributesRetriever)
org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.getJ2eeUserRoles2GrantedAuthoritiesMapper()
org.springframework.security.web.authentication.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.setUserRoles2GrantedAuthoritiesMapper(org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper)
org.springframework.security.authentication.AuthenticationDetailsSourceImpl.setClazz(java.lang.Class)
org.springframework.security.web.authentication.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
2839 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.getMappableRolesRetriever([Ljava.lang.String;)
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.String;)
org.springframework.security.core.authority.mapping.SimpleMappableAttributesRetriever.setMappableAttributes(java.util.Set)
2840 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.getJ2eeUserRoles2GrantedAuthoritiesMapper()
Métodos invocados: 
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setAddPrefixIfAlreadyExisting(Z)
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToLowerCase(Z)
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToUpperCase(Z)
org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper.setAttributePrefix(java.lang.String)
2841 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.getRequest(java.lang.String, [Ljava.lang.String;)
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.contains(java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setRemoteUser(java.lang.String)
2842 - Declaração do método: org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests$1.isUserInRole(java.lang.String)
Métodos invocados: 
java.util.Set.contains(java.lang.Object)
2843 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSphere2SpringSecurityPropagationInterceptorTests.clearContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2844 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSphere2SpringSecurityPropagationInterceptorTests.createdAuthenticationTokenIsAcceptableToPreauthProvider()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.preauth.websphere.WASUsernameAndGroupsExtractor.getCurrentUserName()
org.mockito.Mockito.when(java.lang.String)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.lang.String)
org.springframework.security.web.authentication.preauth.websphere.WebSphere2SpringSecurityPropagationInterceptor.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.preauth.websphere.WebSphere2SpringSecurityPropagationInterceptor.setAuthenticationDetailsSource(org.springframework.security.authentication.AuthenticationDetailsSource)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.preauth.websphere.WebSphere2SpringSecurityPropagationInterceptor.invoke(org.aopalliance.intercept.MethodInvocation)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.core.userdetails.UserDetails.getAuthorities()
org.mockito.Mockito.when(java.util.Collection)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.util.Collection)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.core.userdetails.AuthenticationUserDetailsService.loadUserDetails(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.userdetails.UserDetails)
org.mockito.stubbing.OngoingStubbing.thenReturn(org.springframework.security.core.userdetails.UserDetails)
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.setPreAuthenticatedUserDetailsService(org.springframework.security.core.userdetails.AuthenticationUserDetailsService)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.setUserDetailsChecker(org.springframework.security.core.userdetails.UserDetailsChecker)
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
org.junit.Assert.assertNotNull(java.lang.Object)
2845 - Declaração do método: org.springframework.security.web.authentication.preauth.websphere.WebSphere2SpringSecurityPropagationInterceptorTests$1.authenticate(org.springframework.security.core.Authentication)
Métodos invocados: 
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
2846 - Declaração do método: org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractorTests.setUp()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractor.setMessageSource(org.springframework.context.MessageSource)
2847 - Declaração do método: org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractorTests.invalidRegexFails()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractor.setSubjectDnRegex(java.lang.String)
2848 - Declaração do método: org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractorTests.defaultCNPatternReturnsExcpectedPrincipal()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.x509.X509TestUtils.buildTestCertificate()
org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractor.extractPrincipal(java.security.cert.X509Certificate)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2849 - Declaração do método: org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractorTests.matchOnEmailReturnsExpectedPrincipal()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractor.setSubjectDnRegex(java.lang.String)
org.springframework.security.web.authentication.preauth.x509.X509TestUtils.buildTestCertificate()
org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractor.extractPrincipal(java.security.cert.X509Certificate)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2850 - Declaração do método: org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractorTests.matchOnShoeSizeThrowsBadCredentials()
Métodos invocados: 
org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractor.setSubjectDnRegex(java.lang.String)
org.springframework.security.web.authentication.preauth.x509.X509TestUtils.buildTestCertificate()
org.springframework.security.web.authentication.preauth.x509.SubjectDnX509PrincipalExtractor.extractPrincipal(java.security.cert.X509Certificate)
2851 - Declaração do método: org.springframework.security.web.authentication.preauth.x509.X509TestUtils.buildTestCertificate()
Métodos invocados: 
java.lang.String.getBytes()
java.security.cert.CertificateFactory.getInstance(java.lang.String)
java.security.cert.CertificateFactory.generateCertificate(java.io.InputStream)
2852 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.createTokenBasedRememberMeServices()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setKey(java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.jmock.Expectations.oneOf(org.springframework.security.core.userdetails.UserDetailsService)
org.jmock.Expectations.aNonNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.oneOf(org.springframework.security.core.userdetails.UserDetailsService)
org.jmock.Expectations.aNonNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.jmock.Expectations.throwException(java.lang.Throwable)
org.jmock.Expectations.will(org.jmock.api.Action)
2853 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.determineExpiryTimeFromBased64EncodedToken(java.lang.String)
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.decodeBase64([B)
org.springframework.util.StringUtils.delimitedListToStringArray(java.lang.String, java.lang.String)
java.lang.Long.longValue()
2854 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.generateCorrectCookieContentForToken(J, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.codec.digest.DigestUtils.md5Hex(java.lang.String)
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
2855 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.autoLoginReturnsNullIfNoCookiePresented()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
2856 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.autoLoginIgnoresUnrelatedCookie()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
2857 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.autoLoginReturnsNullForExpiredCookieAndClearsCookie()
Métodos invocados: 
java.lang.System.currentTimeMillis()
org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.generateCorrectCookieContentForToken(J, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getMaxAge()
org.junit.Assert.assertEquals(J, J)
2858 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.autoLoginReturnsNullAndClearsCookieIfMissingThreeTokensInCookieValue()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getMaxAge()
org.junit.Assert.assertEquals(J, J)
2859 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.autoLoginClearsNonBase64EncodedCookie()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getMaxAge()
org.junit.Assert.assertEquals(J, J)
2860 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.autoLoginClearsCookieIfSignatureBlocksDoesNotMatchExpectedValue()
Métodos invocados: 
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
java.lang.System.currentTimeMillis()
org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.generateCorrectCookieContentForToken(J, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getMaxAge()
org.junit.Assert.assertEquals(J, J)
2861 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.autoLoginClearsCookieIfTokenDoesNotContainANumberInCookieValue()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getMaxAge()
org.junit.Assert.assertEquals(J, J)
2862 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.autoLoginClearsCookieIfUserNotFound()
Métodos invocados: 
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
java.lang.System.currentTimeMillis()
org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.generateCorrectCookieContentForToken(J, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getMaxAge()
org.junit.Assert.assertEquals(J, J)
2863 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.autoLoginWithValidTokenAndUserSucceeds()
Métodos invocados: 
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
java.lang.System.currentTimeMillis()
org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.generateCorrectCookieContentForToken(J, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.Authentication.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2864 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getUserDetailsService()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setKey(java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getKey()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getParameter()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setParameter(java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getParameter()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setTokenValiditySeconds(I)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getTokenValiditySeconds()
org.junit.Assert.assertEquals(J, J)
2865 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.loginFailClearsCookie()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getMaxAge()
org.junit.Assert.assertEquals(J, J)
2866 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.loginSuccessIgnoredIfParameterNotSetOrFalse()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
2867 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.loginSuccessNormalWithNonUserDetailsBasedPrincipalSetsExpectedCookie()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setTokenValiditySeconds(I)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
javax.servlet.http.Cookie.getValue()
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.decodeCookie(java.lang.String)
java.lang.System.currentTimeMillis()
java.lang.Long.parseLong(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getTokenValiditySeconds()
javax.servlet.http.Cookie.getMaxAge()
org.junit.Assert.assertEquals(J, J)
javax.servlet.http.Cookie.getValue()
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)
org.junit.Assert.assertTrue(Z)
javax.servlet.http.Cookie.getValue()
org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.determineExpiryTimeFromBased64EncodedToken(java.lang.String)
java.util.Date.before(java.util.Date)
org.junit.Assert.assertTrue(Z)
2868 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.loginSuccessNormalWithUserDetailsBasedPrincipalSetsExpectedCookie()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getTokenValiditySeconds()
javax.servlet.http.Cookie.getMaxAge()
org.junit.Assert.assertEquals(J, J)
javax.servlet.http.Cookie.getValue()
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)
org.junit.Assert.assertTrue(Z)
javax.servlet.http.Cookie.getValue()
org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.determineExpiryTimeFromBased64EncodedToken(java.lang.String)
java.util.Date.before(java.util.Date)
org.junit.Assert.assertTrue(Z)
2869 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.obtainPasswordReturnsNullForTokenWithNullCredentials()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices.retrievePassword(org.springframework.security.core.Authentication)
org.junit.Assert.assertNull(java.lang.Object)
2870 - Declaração do método: org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.negativeValidityPeriodIsSetOnCookieButExpiryTimeRemainsAtTwoWeeks()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setTokenValiditySeconds(I)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getValue()
org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServicesTests.determineExpiryTimeFromBased64EncodedToken(java.lang.String)
java.lang.System.currentTimeMillis()
org.junit.Assert.assertTrue(Z)
javax.servlet.http.Cookie.getMaxAge()
org.junit.Assert.assertEquals(J, J)
javax.servlet.http.Cookie.getValue()
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)
org.junit.Assert.assertTrue(Z)
2871 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImplTests.createDataSource()
Métodos invocados: 
org.springframework.jdbc.datasource.DriverManagerDataSource.setDriverClassName(java.lang.String)
2872 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImplTests.clearDataSource()
Métodos invocados: 
org.springframework.jdbc.datasource.SingleConnectionDataSource.destroy()
2873 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImplTests.populateDatabase()
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.setDataSource(javax.sql.DataSource)
org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl.initDao()
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
2874 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImplTests.clearData()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
2875 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImplTests.createNewTokenInsertsCorrectData()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl.createNewToken(org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken)
org.springframework.jdbc.core.JdbcTemplate.queryForMap(java.lang.String)
java.util.Map.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2876 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImplTests.retrievingTokenReturnsCorrectData()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl.getTokenForSeries(java.lang.String)
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getUsername()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getSeries()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getTokenValue()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.sql.Timestamp.valueOf(java.lang.String)
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getDate()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2877 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImplTests.retrievingTokenWithDuplicateSeriesReturnsNull()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl.getTokenForSeries(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
2878 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImplTests.removingUserTokensDeletesData()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl.removeUserTokens(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
2879 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImplTests.updatingTokenModifiesTokenValueAndLastUsed()
Métodos invocados: 
java.lang.System.currentTimeMillis()
java.sql.Timestamp.toString()
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl.updateToken(java.lang.String, java.lang.String, java.util.Date)
org.springframework.jdbc.core.JdbcTemplate.queryForMap(java.lang.String)
java.util.Map.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Date.getTime()
java.sql.Timestamp.getTime()
org.junit.Assert.assertTrue(Z)
2880 - Declaração do método: org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImplTests.createTableOnStartupCreatesCorrectTable()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.support.JdbcDaoSupport.setDataSource(javax.sql.DataSource)
org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl.setCreateTableOnStartup(Z)
org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl.initDao()
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
2881 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests.setUpData()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setCookieName(java.lang.String)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.setTokenValiditySeconds(I)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
2882 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests.loginIsRejectedWithWrongNumberOfCookieTokens()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2883 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests.loginIsRejectedWhenNoTokenMatchingSeriesIsFound()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.setTokenRepository(org.springframework.security.web.authentication.rememberme.PersistentTokenRepository)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2884 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests.loginIsRejectedWhenTokenIsExpired()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.setTokenRepository(org.springframework.security.web.authentication.rememberme.PersistentTokenRepository)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.setTokenValiditySeconds(I)
java.lang.Thread.sleep(J)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.setTokenRepository(org.springframework.security.web.authentication.rememberme.PersistentTokenRepository)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2885 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests.cookieTheftIsDetectedWhenSeriesAndTokenDontMatch()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.setTokenRepository(org.springframework.security.web.authentication.rememberme.PersistentTokenRepository)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2886 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests.successfulAutoLoginCreatesNewTokenAndCookieWithSameSeries()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.setTokenRepository(org.springframework.security.web.authentication.rememberme.PersistentTokenRepository)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.setTokenLength(I)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.getStoredToken()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getSeries()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.getStoredToken()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getTokenValue()
java.lang.String.length()
org.junit.Assert.assertEquals(J, J)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
javax.servlet.http.Cookie.getValue()
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.decodeCookie(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.getStoredToken()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getTokenValue()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2887 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests.loginSuccessCreatesNewTokenAndCookieWithNewSeries()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setAlwaysRemember(Z)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.setTokenRepository(org.springframework.security.web.authentication.rememberme.PersistentTokenRepository)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.setTokenLength(I)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.setSeriesLength(I)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.getStoredToken()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getSeries()
java.lang.String.length()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.getStoredToken()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getTokenValue()
java.lang.String.length()
org.junit.Assert.assertEquals(J, J)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
javax.servlet.http.Cookie.getValue()
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.decodeCookie(java.lang.String)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.getStoredToken()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getSeries()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.getStoredToken()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getTokenValue()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2888 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests.logoutClearsUsersTokenAndCookie()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.setTokenRepository(org.springframework.security.web.authentication.rememberme.PersistentTokenRepository)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.logout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getMaxAge()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices.logout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
2889 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.MockTokenRepository(org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken)
2889 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.createNewToken(org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken)
2889 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.updateToken(java.lang.String, java.lang.String, java.util.Date)
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getUsername()
org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken.getSeries()
2890 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.getTokenForSeries(java.lang.String)
2890 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.removeUserTokens(java.lang.String)
2890 - Declaração do método: org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.getStoredToken()
2890 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
2891 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilterTests.setUp()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2892 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilterTests.tearDown()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2893 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilterTests.testDetectsAuthenticationManagerProperty()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.setRememberMeServices(org.springframework.security.web.authentication.RememberMeServices)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.afterPropertiesSet()
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2894 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilterTests.testDetectsRememberMeServicesProperty()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.setRememberMeServices(org.springframework.security.web.authentication.RememberMeServices)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.getRememberMeServices()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.setRememberMeServices(org.springframework.security.web.authentication.RememberMeServices)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2895 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilterTests.testOperationWhenAuthenticationExistsInContextHolder()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.setRememberMeServices(org.springframework.security.web.authentication.RememberMeServices)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2896 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilterTests.testOperationWhenNoAuthenticationInContextHolder()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenReturn(org.springframework.security.core.Authentication)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.setRememberMeServices(org.springframework.security.web.authentication.RememberMeServices)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2897 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilterTests.testOnUnsuccessfulLoginIsCalledWhenProviderRejectsAuth()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenThrow([Ljava.lang.Throwable;)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.setRememberMeServices(org.springframework.security.web.authentication.RememberMeServices)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2898 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilterTests$1.onUnsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
2899 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilterTests$MockFilterChain.MockFilterChain(Z)
2899 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilterTests$MockFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
Métodos invocados: 
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
2900 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilterTests$MockRememberMeServices.MockRememberMeServices(org.springframework.security.core.Authentication)
2900 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilterTests$MockRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2900 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilterTests$MockRememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2900 - Declaração do método: org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilterTests$MockRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
2900 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.nonBase64CookieShouldBeDetected()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.decodeCookie(java.lang.String)
2901 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.setAndGetAreConsistent()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getCookieName()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getParameter()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setKey(java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getKey()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setParameter(java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getParameter()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setCookieName(java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getCookieName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setTokenValiditySeconds(I)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getTokenValiditySeconds()
org.junit.Assert.assertEquals(J, J)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getUserDetailsService()
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setAuthenticationDetailsSource(org.springframework.security.authentication.AuthenticationDetailsSource)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getAuthenticationDetailsSource()
org.junit.Assert.assertSame(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.afterPropertiesSet()
2902 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.cookieShouldBeCorrectlyEncodedAndDecoded()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.encodeCookie([Ljava.lang.String;)
java.lang.String.endsWith(java.lang.String)
org.junit.Assert.assertFalse(Z)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.decodeCookie(java.lang.String)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2903 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.cookieWithOpenIDidentifierAsNameIsEncodedAndDecoded()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.encodeCookie([Ljava.lang.String;)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.decodeCookie(java.lang.String)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.encodeCookie([Ljava.lang.String;)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.decodeCookie(java.lang.String)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2904 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.autoLoginShouldReturnNullIfNoLoginCookieIsPresented()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
2905 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.successfulAutoLoginReturnsExpectedAuthentication()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.afterPropertiesSet()
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getUserDetailsService()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.createLoginCookie(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNotNull(java.lang.Object)
2906 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.autoLoginShouldFailIfCookieIsNotBase64()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.assertCookieCancelled(org.springframework.mock.web.MockHttpServletResponse)
2907 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.autoLoginShouldFailIfCookieIsEmpty()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.assertCookieCancelled(org.springframework.mock.web.MockHttpServletResponse)
2908 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.autoLoginShouldFailIfInvalidCookieExceptionIsRaised()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.createLoginCookie(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.assertCookieCancelled(org.springframework.mock.web.MockHttpServletResponse)
2909 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.autoLoginShouldFailIfUserNotFound()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.createLoginCookie(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.assertCookieCancelled(org.springframework.mock.web.MockHttpServletResponse)
2910 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.autoLoginShouldFailIfUserAccountIsLocked()
Métodos invocados: 
org.springframework.security.core.userdetails.User.getAuthorities()
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.createLoginCookie(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.assertCookieCancelled(org.springframework.mock.web.MockHttpServletResponse)
2911 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.loginFailShouldCancelCookie()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.createLoginCookie(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.assertCookieCancelled(org.springframework.mock.web.MockHttpServletResponse)
2912 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.logoutShouldCancelCookie()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.createLoginCookie(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.logout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.logout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.assertCookieCancelled(org.springframework.mock.web.MockHttpServletResponse)
2913 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.cookieTheftExceptionShouldBeRethrown()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.createLoginCookie(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2914 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests$1.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2914 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.loginSuccessCallsOnLoginSuccessCorrectly()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.junit.Assert.assertFalse(Z)
org.springframework.mock.web.MockHttpServletRequest.setParameter(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.junit.Assert.assertTrue(Z)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setParameter(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setParameter(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.junit.Assert.assertTrue(Z)
org.springframework.mock.web.MockHttpServletRequest.setParameter(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.junit.Assert.assertFalse(Z)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setAlwaysRemember(Z)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
org.junit.Assert.assertTrue(Z)
2915 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.setCookieUsesCorrectNamePathAndValue()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setCookieName(java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setCookie([Ljava.lang.String;, I, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getValue()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
javax.servlet.http.Cookie.getName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
javax.servlet.http.Cookie.getPath()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
javax.servlet.http.Cookie.getSecure()
org.junit.Assert.assertFalse(Z)
2916 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests$2.encodeCookie([Ljava.lang.String;)
2916 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.setCookieSetsSecureFlagIfConfigured()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setUseSecureCookie(Z)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setCookie([Ljava.lang.String;, I, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
javax.servlet.http.Cookie.getSecure()
org.junit.Assert.assertTrue(Z)
2917 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests$3.encodeCookie([Ljava.lang.String;)
2917 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.createLoginCookie(java.lang.String)
Métodos invocados: 
org.springframework.util.StringUtils.delimitedListToStringArray(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.encodeCookie([Ljava.lang.String;)
2918 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests.assertCookieCancelled(org.springframework.mock.web.MockHttpServletResponse)
Métodos invocados: 
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getMaxAge()
org.junit.Assert.assertEquals(J, J)
2919 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests$MockRememberMeServices.MockRememberMeServices()
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.setKey(java.lang.String)
2920 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests$MockRememberMeServices.onLoginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
2920 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests$MockRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.getUserDetailsService()
org.springframework.security.core.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
2921 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests$MockUserDetailsService.MockUserDetailsService(org.springframework.security.core.userdetails.UserDetails, Z)
2921 - Declaração do método: org.springframework.security.web.authentication.rememberme.AbstractRememberMeServicesTests$MockUserDetailsService.loadUserByUsername(java.lang.String)
2921 - Declaração do método: org.springframework.security.web.authentication.rememberme.NullRememberMeServicesTests.testAlwaysReturnsNull()
Métodos invocados: 
org.springframework.security.web.authentication.NullRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.web.authentication.NullRememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.web.authentication.NullRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.Authentication)
junit.framework.Assert.assertTrue(Z)
2922 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.authenticateCurrentUser()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
2923 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.clearContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2924 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.createMockSwitchRequest()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
2925 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.switchToUser(java.lang.String)
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.attemptSwitchUser(javax.servlet.http.HttpServletRequest)
2926 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.requiresExitUserMatchesCorrectly()
Métodos invocados: 
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setExitUserUrl(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.requiresExitUser(javax.servlet.http.HttpServletRequest)
org.junit.Assert.assertTrue(Z)
2927 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.requiresSwitchMatchesCorrectly()
Métodos invocados: 
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setSwitchUserUrl(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.requiresSwitchUser(javax.servlet.http.HttpServletRequest)
org.junit.Assert.assertTrue(Z)
2928 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.attemptSwitchToUnknownUserFails()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.attemptSwitchUser(javax.servlet.http.HttpServletRequest)
2929 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.attemptSwitchToUserThatIsDisabledFails()
Métodos invocados: 
org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.switchToUser(java.lang.String)
2930 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.attemptSwitchToUserWithAccountExpiredFails()
Métodos invocados: 
org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.switchToUser(java.lang.String)
2931 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.attemptSwitchToUserWithExpiredCredentialsFails()
Métodos invocados: 
org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.switchToUser(java.lang.String)
2932 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.switchUserWithNullUsernameThrowsException()
Métodos invocados: 
org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.switchToUser(java.lang.String)
2933 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.attemptSwitchUserIsSuccessfulWithValidUser()
Métodos invocados: 
org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.switchToUser(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
2934 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.switchToLockedAccountCausesRedirectToSwitchFailureUrl()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setTargetUrl(java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.afterPropertiesSet()
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(javax.servlet.FilterChain, org.mockito.internal.verification.api.VerificationMode)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getErrorMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setTargetUrl(java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setSwitchFailureUrl(java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.afterPropertiesSet()
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(javax.servlet.FilterChain, org.mockito.internal.verification.api.VerificationMode)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.util.FieldUtils.getFieldValue(java.lang.Object, java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2935 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.configMissingUserDetailsServiceFails()
Métodos invocados: 
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setSwitchUserUrl(java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setExitUserUrl(java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setTargetUrl(java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.afterPropertiesSet()
2936 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.testBadConfigMissingTargetUrl()
Métodos invocados: 
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setSwitchUserUrl(java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setExitUserUrl(java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.afterPropertiesSet()
2937 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.defaultProcessesFilterUrlMatchesUrlWithPathParameter()
Métodos invocados: 
org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.createMockSwitchRequest()
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setSwitchUserUrl(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.requiresSwitchUser(javax.servlet.http.HttpServletRequest)
org.junit.Assert.assertTrue(Z)
2938 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.exitUserJackLordToDanoSucceeds()
Métodos invocados: 
java.util.List.addAll(java.util.Collection)
java.util.List.add(org.springframework.security.core.GrantedAuthority)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.createMockSwitchRequest()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setExitUserUrl(java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setSuccessHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(javax.servlet.FilterChain, org.mockito.internal.verification.api.VerificationMode)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.Authentication.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2939 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.exitUserWithNoCurrentUserFails()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.createMockSwitchRequest()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setExitUserUrl(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(javax.servlet.FilterChain, org.mockito.internal.verification.api.VerificationMode)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
2940 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.redirectToTargetUrlIsCorrect()
Métodos invocados: 
org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.createMockSwitchRequest()
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setSwitchUserUrl(java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setSuccessHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(javax.servlet.FilterChain, org.mockito.internal.verification.api.VerificationMode)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2941 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.redirectOmitsContextPathIfUseRelativeContextSet()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.createMockSwitchRequest()
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setSwitchUserUrl(java.lang.String)
org.springframework.security.web.DefaultRedirectStrategy.setContextRelative(Z)
org.springframework.security.web.authentication.AbstractAuthenticationTargetUrlRequestHandler.setRedirectStrategy(org.springframework.security.web.RedirectStrategy)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setSuccessHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(javax.servlet.FilterChain, org.mockito.internal.verification.api.VerificationMode)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2942 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.testSwitchRequestFromDanoToJackLord()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setSwitchUserUrl(java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setSuccessHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(javax.servlet.FilterChain, org.mockito.internal.verification.api.VerificationMode)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.Authentication.getPrincipal()
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.userdetails.User.getUsername()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2943 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests.modificationOfAuthoritiesWorks()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.setSwitchUserAuthorityChanger(org.springframework.security.web.authentication.switchuser.SwitchUserAuthorityChanger)
java.util.List.add(org.springframework.security.core.GrantedAuthority)
org.springframework.security.web.authentication.switchuser.SwitchUserFilter.attemptSwitchUser(javax.servlet.http.HttpServletRequest)
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.Authentication.getAuthorities()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.core.Authentication.getAuthorities()
org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(java.util.Collection)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2944 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests$1.modifyGrantedAuthorities(org.springframework.security.core.userdetails.UserDetails, org.springframework.security.core.Authentication, java.util.Collection)
Métodos invocados: 
java.util.List.add(org.springframework.security.core.GrantedAuthority)
2945 - Declaração do método: org.springframework.security.web.authentication.switchuser.SwitchUserFilterTests$MockUserDetailsService.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
2946 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilterTests.setUp()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.springframework.security.authentication.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenReturn(org.springframework.security.core.Authentication)
org.mockito.Matchers.eq(org.springframework.security.authentication.UsernamePasswordAuthenticationToken)
org.mockito.AdditionalMatchers.not(org.springframework.security.authentication.UsernamePasswordAuthenticationToken)
org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)
org.mockito.Mockito.when(org.springframework.security.core.Authentication)
org.mockito.stubbing.OngoingStubbing.thenThrow([Ljava.lang.Throwable;)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.setAuthenticationEntryPoint(org.springframework.security.web.AuthenticationEntryPoint)
2947 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilterTests.clearContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2948 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilterTests.testFilterIgnoresRequestsContainingNoAuthorizationHeader()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.verify(javax.servlet.FilterChain)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
2949 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilterTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.getAuthenticationManager()
org.junit.Assert.assertTrue(Z)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.setAuthenticationEntryPoint(org.springframework.security.web.AuthenticationEntryPoint)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.getAuthenticationEntryPoint()
org.junit.Assert.assertTrue(Z)
2950 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilterTests.testInvalidBasicAuthorizationTokenIsIgnored()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(javax.servlet.FilterChain, org.mockito.internal.verification.api.VerificationMode)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
2951 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilterTests.invalidBase64IsIgnored()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(javax.servlet.FilterChain, org.mockito.internal.verification.api.VerificationMode)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
2952 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilterTests.testNormalOperation()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.verify(javax.servlet.FilterChain)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
java.security.Principal.getName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2953 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilterTests.testOtherAuthorizationSchemeIsIgnored()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.verify(javax.servlet.FilterChain)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
2954 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilterTests.testStartupDetectsMissingAuthenticationEntryPoint()
Métodos invocados: 
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.afterPropertiesSet()
2955 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilterTests.testStartupDetectsMissingAuthenticationManager()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.setAuthenticationEntryPoint(org.springframework.security.web.AuthenticationEntryPoint)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.afterPropertiesSet()
2956 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilterTests.testSuccessLoginThenFailureLoginResultsInSessionLosingToken()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.verify(javax.servlet.FilterChain)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
java.security.Principal.getName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(javax.servlet.FilterChain, org.mockito.internal.verification.api.VerificationMode)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
2957 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilterTests.testWrongPasswordContinuesFilterChainIfIgnoreFailureIsTrue()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.setIgnoreFailure(Z)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.isIgnoreFailure()
org.junit.Assert.assertTrue(Z)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.verify(javax.servlet.FilterChain)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
2958 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationFilterTests.testWrongPasswordReturnsForbiddenIfIgnoreFailureIsFalse()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.isIgnoreFailure()
org.junit.Assert.assertFalse(Z)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.never()
org.mockito.Mockito.verify(javax.servlet.FilterChain, org.mockito.internal.verification.api.VerificationMode)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
2959 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
2959 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.exactly(I)
org.jmock.syntax.ReceiverClause.of(javax.servlet.FilterChain)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
javax.servlet.Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.jmock.Mockery.assertIsSatisfied()
2960 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.generateNonce(I)
Métodos invocados: 
java.lang.System.currentTimeMillis()
org.apache.commons.codec.digest.DigestUtils.md5Hex(java.lang.String)
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
2961 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.clearContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
2962 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.setUp()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.setRealmName(java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.setKey(java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.setAuthenticationEntryPoint(org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
2963 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests$2.loadUserByUsername(java.lang.String)
Métodos invocados: 
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
2964 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.testExpiredNonceReturnsForbiddenWithStaleHeader()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.generateNonce(I)
org.springframework.security.web.authentication.www.DigestAuthUtils.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
java.lang.Thread.sleep(J)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
org.springframework.mock.web.MockHttpServletResponse.getHeader(java.lang.String)
java.lang.String.toString()
java.lang.String.substring(I)
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthUtils.splitEachArrayElementAndCreateMap([Ljava.lang.String;, java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2965 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.testFilterIgnoresRequestsContainingNoAuthorizationHeader()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
2966 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.testGettersSetters()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.getUserDetailsService()
org.junit.Assert.assertTrue(Z)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.setAuthenticationEntryPoint(org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.getAuthenticationEntryPoint()
org.junit.Assert.assertTrue(Z)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.getUserCache()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.setUserCache(org.springframework.security.core.userdetails.UserCache)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.getUserCache()
org.junit.Assert.assertNotNull(java.lang.Object)
2967 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.testInvalidDigestAuthorizationTokenGeneratesError()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
2968 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.testMalformedHeaderReturnsForbidden()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
2969 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.testNonBase64EncodedNonceReturnsForbidden()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthUtils.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
2970 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.testNonceWithIncorrectSignatureForNumericFieldReturnsForbidden()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.security.web.authentication.www.DigestAuthUtils.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
2971 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.testNonceWithNonNumericFirstElementReturnsForbidden()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.security.web.authentication.www.DigestAuthUtils.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
2972 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.testNonceWithoutTwoColonSeparatedElementsReturnsForbidden()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.security.web.authentication.www.DigestAuthUtils.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
2973 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.testNormalOperationWhenPasswordIsAlreadyEncoded()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthUtils.encodePasswordInA1Format(java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthUtils.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2974 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.testNormalOperationWhenPasswordNotAlreadyEncoded()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthUtils.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.isAuthenticated()
org.junit.Assert.assertFalse(Z)
2975 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.testNormalOperationWhenPasswordNotAlreadyEncodedAndWithoutReAuthentication()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthUtils.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.setCreateAuthenticatedToken(Z)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.getPrincipal()
org.springframework.security.core.userdetails.UserDetails.getUsername()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.isAuthenticated()
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.core.Authentication.getAuthorities()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2976 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.otherAuthorizationSchemeIsIgnored()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
2977 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.startupDetectsMissingAuthenticationEntryPoint()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.afterPropertiesSet()
2978 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.startupDetectsMissingUserDetailsService()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.setAuthenticationEntryPoint(org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint)
org.springframework.security.web.authentication.www.DigestAuthenticationFilter.afterPropertiesSet()
2979 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.successfulLoginThenFailedLoginResultsInSessionLosingToken()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthUtils.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthUtils.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
2980 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.wrongCnonceBasedOnDigestReturnsForbidden()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthUtils.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
2981 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.wrongDigestReturnsForbidden()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthUtils.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
2982 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.wrongRealmReturnsForbidden()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthUtils.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
2983 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.wrongUsernameReturnsForbidden()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthUtils.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
org.junit.Assert.assertEquals(J, J)
2984 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationEntryPointTests.checkNonceValid(java.lang.String)
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)
junit.framework.Assert.assertTrue(Z)
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.decodeBase64([B)
org.springframework.util.StringUtils.delimitedListToStringArray(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.codec.digest.DigestUtils.md5Hex(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2985 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationEntryPointTests.testDetectsMissingKey()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.setRealmName(java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2986 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationEntryPointTests.testDetectsMissingRealmName()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.setKey(java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.setNonceValiditySeconds(I)
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2987 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationEntryPointTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.getNonceValiditySeconds()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.setRealmName(java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.getRealmName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.setKey(java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.getKey()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.setNonceValiditySeconds(I)
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.getNonceValiditySeconds()
junit.framework.Assert.assertEquals(I, I)
2988 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationEntryPointTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.setRealmName(java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.setKey(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.afterPropertiesSet()
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
org.springframework.mock.web.MockHttpServletResponse.getHeader(java.lang.String)
java.lang.String.toString()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.springframework.mock.web.MockHttpServletResponse.getHeader(java.lang.String)
java.lang.String.toString()
java.lang.String.substring(I)
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthUtils.splitEachArrayElementAndCreateMap([Ljava.lang.String;, java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertNull(java.lang.Object)
java.util.Map.get(java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPointTests.checkNonceValid(java.lang.String)
2989 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthenticationEntryPointTests.testOperationIfDueToStaleNonce()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.setRealmName(java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.setKey(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.afterPropertiesSet()
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
org.springframework.mock.web.MockHttpServletResponse.getHeader(java.lang.String)
java.lang.String.toString()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.mock.web.MockHttpServletResponse.getHeader(java.lang.String)
java.lang.String.toString()
java.lang.String.substring(I)
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthUtils.splitEachArrayElementAndCreateMap([Ljava.lang.String;, java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthenticationEntryPointTests.checkNonceValid(java.lang.String)
2990 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationEntryPointTests.BasicAuthenticationEntryPointTests()
2990 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationEntryPointTests.BasicAuthenticationEntryPointTests(java.lang.String)
2990 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationEntryPointTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2991 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationEntryPointTests.setUp()
2991 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationEntryPointTests.testDetectsMissingRealmName()
Métodos invocados: 
org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2992 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationEntryPointTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint.setRealmName(java.lang.String)
org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint.getRealmName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2993 - Declaração do método: org.springframework.security.web.authentication.www.BasicAuthenticationEntryPointTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint.setRealmName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
org.springframework.mock.web.MockHttpServletResponse.getErrorMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletResponse.getHeader(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2994 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthUtilsTests.testSplitEachArrayElementAndCreateMapNormalOperation()
Métodos invocados: 
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthUtils.splitEachArrayElementAndCreateMap([Ljava.lang.String;, java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.size()
junit.framework.Assert.assertEquals(I, I)
2995 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthUtilsTests.testSplitEachArrayElementAndCreateMapRespectsInstructionNotToRemoveCharacters()
Métodos invocados: 
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthUtils.splitEachArrayElementAndCreateMap([Ljava.lang.String;, java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.size()
junit.framework.Assert.assertEquals(I, I)
2996 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthUtilsTests.testSplitEachArrayElementAndCreateMapReturnsNullIfArrayEmptyOrNull()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthUtils.splitEachArrayElementAndCreateMap([Ljava.lang.String;, java.lang.String, java.lang.String)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthUtils.splitEachArrayElementAndCreateMap([Ljava.lang.String;, java.lang.String, java.lang.String)
junit.framework.Assert.assertNull(java.lang.Object)
2997 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthUtilsTests.testSplitNormalOperation()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.web.authentication.www.DigestAuthUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2998 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthUtilsTests.testSplitRejectsNullsAndIncorrectLengthStrings()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.web.authentication.www.DigestAuthUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.web.authentication.www.DigestAuthUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.web.authentication.www.DigestAuthUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.web.authentication.www.DigestAuthUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2999 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthUtilsTests.testSplitWorksWithDifferentDelimiters()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.web.authentication.www.DigestAuthUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.web.authentication.www.DigestAuthUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
3000 - Declaração do método: org.springframework.security.web.authentication.www.DigestAuthUtilsTests.testAuthorizationHeaderWithCommasIsSplitCorrectly()
Métodos invocados: 
org.springframework.security.web.authentication.www.DigestAuthUtils.splitIgnoringQuotes(java.lang.String, C)
junit.framework.Assert.assertEquals(I, I)
3001 - Declaração do método: org.springframework.security.web.concurrent.ConcurrentSessionFilterTests.detectsExpiredSessions()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.springframework.security.web.session.ConcurrentSessionFilter.setRedirectStrategy(org.springframework.security.web.RedirectStrategy)
org.springframework.security.web.session.ConcurrentSessionFilter.setLogoutHandlers([Lorg.springframework.security.web.authentication.logout.LogoutHandler;)
org.springframework.mock.web.MockHttpSession.getId()
org.springframework.security.core.session.SessionRegistry.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpSession.getId()
org.springframework.security.core.session.SessionRegistry.getSessionInformation(java.lang.String)
org.springframework.security.core.session.SessionInformation.expireNow()
org.springframework.security.web.session.ConcurrentSessionFilter.setSessionRegistry(org.springframework.security.core.session.SessionRegistry)
org.springframework.security.web.session.ConcurrentSessionFilter.setExpiredUrl(java.lang.String)
org.springframework.security.web.session.ConcurrentSessionFilter.afterPropertiesSet()
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.verifyZeroInteractions([Ljava.lang.Object;)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3002 - Declaração do método: org.springframework.security.web.concurrent.ConcurrentSessionFilterTests.returnsExpectedMessageWhenNoExpiredUrlSet()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.springframework.mock.web.MockHttpSession.getId()
org.springframework.security.core.session.SessionRegistry.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpSession.getId()
org.springframework.security.core.session.SessionRegistry.getSessionInformation(java.lang.String)
org.springframework.security.core.session.SessionInformation.expireNow()
org.springframework.security.web.session.ConcurrentSessionFilter.setSessionRegistry(org.springframework.security.core.session.SessionRegistry)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.verifyZeroInteractions([Ljava.lang.Object;)
org.springframework.mock.web.MockHttpServletResponse.getContentAsString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3003 - Declaração do método: org.springframework.security.web.concurrent.ConcurrentSessionFilterTests.detectsMissingSessionRegistry()
Métodos invocados: 
org.springframework.security.web.session.ConcurrentSessionFilter.afterPropertiesSet()
3004 - Declaração do método: org.springframework.security.web.concurrent.ConcurrentSessionFilterTests.detectsInvalidUrl()
Métodos invocados: 
org.springframework.security.web.session.ConcurrentSessionFilter.setExpiredUrl(java.lang.String)
org.springframework.security.web.session.ConcurrentSessionFilter.afterPropertiesSet()
3005 - Declaração do método: org.springframework.security.web.concurrent.ConcurrentSessionFilterTests.lastRequestTimeUpdatesCorrectly()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.mock.web.MockHttpSession.getId()
org.springframework.security.core.session.SessionRegistry.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpSession.getId()
org.springframework.security.core.session.SessionRegistry.getSessionInformation(java.lang.String)
org.springframework.security.core.session.SessionInformation.getLastRequest()
org.springframework.security.web.session.ConcurrentSessionFilter.setSessionRegistry(org.springframework.security.core.session.SessionRegistry)
org.springframework.security.web.session.ConcurrentSessionFilter.setExpiredUrl(java.lang.String)
java.lang.Thread.sleep(J)
org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.verify(javax.servlet.FilterChain)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpSession.getId()
org.springframework.security.core.session.SessionRegistry.getSessionInformation(java.lang.String)
org.springframework.security.core.session.SessionInformation.getLastRequest()
java.util.Date.after(java.util.Date)
org.junit.Assert.assertTrue(Z)
3006 - Declaração do método: org.springframework.security.web.context.SecurityContextPersistenceFilterTests.clearContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
3007 - Declaração do método: org.springframework.security.web.context.SecurityContextPersistenceFilterTests.contextIsClearedAfterChainProceeds()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(javax.servlet.FilterChain)
org.jmock.Expectations.aNonNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.jmock.Expectations.aNonNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
3008 - Declaração do método: org.springframework.security.web.context.SecurityContextPersistenceFilterTests.contextIsStillClearedIfExceptionIsThrowByFilterChain()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(javax.servlet.FilterChain)
org.jmock.Expectations.aNonNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.jmock.Expectations.aNonNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.jmock.Expectations.throwException(java.lang.Throwable)
org.jmock.Expectations.will(org.jmock.api.Action)
org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.junit.Assert.fail()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
3009 - Declaração do método: org.springframework.security.web.context.SecurityContextPersistenceFilterTests.loadedContextContextIsCopiedToSecurityContextHolderAndUpdatedContextIsStored()
Métodos invocados: 
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.web.context.SecurityContextPersistenceFilter.setSecurityContextRepository(org.springframework.security.web.context.SecurityContextRepository)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(org.springframework.security.web.context.SecurityContextRepository)
org.jmock.Expectations.aNonNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.springframework.security.web.context.SecurityContextRepository.loadContext(org.springframework.security.web.context.HttpRequestResponseHolder)
org.jmock.Expectations.returnValue(java.lang.Object)
org.jmock.Expectations.will(org.jmock.api.Action)
org.jmock.Expectations.oneOf(org.springframework.security.web.context.SecurityContextRepository)
org.springframework.security.web.context.SecurityContextRepository.saveContext(org.springframework.security.core.context.SecurityContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.setContext(org.springframework.security.core.context.SecurityContext)
org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.jmock.Mockery.assertIsSatisfied()
3010 - Declaração do método: org.springframework.security.web.context.SecurityContextPersistenceFilterTests$4.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.core.context.SecurityContextHolder.setContext(org.springframework.security.core.context.SecurityContext)
3011 - Declaração do método: org.springframework.security.web.context.SecurityContextPersistenceFilterTests.filterIsNotAppliedAgainIfFilterAppliedAttributeIsSet()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.mock(java.lang.Class)
org.springframework.security.web.context.SecurityContextPersistenceFilter.setSecurityContextRepository(org.springframework.security.web.context.SecurityContextRepository)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.oneOf(javax.servlet.FilterChain)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletRequest.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.jmock.Mockery.assertIsSatisfied()
3012 - Declaração do método: org.springframework.security.web.context.SecurityContextPersistenceFilterTests.sessionIsEagerlyCreatedWhenConfigured()
Métodos invocados: 
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.ignoring(javax.servlet.FilterChain)
org.springframework.security.web.context.SecurityContextPersistenceFilter.setForceEagerSessionCreation(Z)
org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletRequest.getSession(Z)
org.junit.Assert.assertNotNull(java.lang.Object)
3013 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepositoryTests.sessionIsntCreatedIfContextDoesntChange()
Métodos invocados: 
org.springframework.security.web.context.HttpSessionSecurityContextRepository.loadContext(org.springframework.security.web.context.HttpRequestResponseHolder)
org.springframework.mock.web.MockHttpServletRequest.getSession(Z)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.web.context.HttpRequestResponseHolder.getRequest()
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
org.springframework.security.web.context.HttpSessionSecurityContextRepository.saveContext(org.springframework.security.core.context.SecurityContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletRequest.getSession(Z)
org.junit.Assert.assertNull(java.lang.Object)
3014 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepositoryTests.sessionIsntCreatedIfAllowSessionCreationIsFalse()
Métodos invocados: 
org.springframework.security.web.context.HttpSessionSecurityContextRepository.setAllowSessionCreation(Z)
org.springframework.security.web.context.HttpSessionSecurityContextRepository.loadContext(org.springframework.security.web.context.HttpRequestResponseHolder)
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.web.context.HttpRequestResponseHolder.getRequest()
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
org.springframework.security.web.context.HttpSessionSecurityContextRepository.saveContext(org.springframework.security.core.context.SecurityContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletRequest.getSession(Z)
org.junit.Assert.assertNull(java.lang.Object)
3015 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepositoryTests.existingContextIsSuccessFullyLoadedFromSessionAndSavedBack()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.mock.web.MockHttpServletRequest.getSession()
org.springframework.security.core.context.SecurityContextHolder.getContext()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.web.context.HttpSessionSecurityContextRepository.loadContext(org.springframework.security.web.context.HttpRequestResponseHolder)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.context.HttpRequestResponseHolder.getRequest()
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
org.springframework.security.web.context.HttpSessionSecurityContextRepository.saveContext(org.springframework.security.core.context.SecurityContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3016 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepositoryTests.nonSecurityContextInSessionIsIgnored()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.web.context.HttpSessionSecurityContextRepository.loadContext(org.springframework.security.web.context.HttpRequestResponseHolder)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.junit.Assert.assertNull(java.lang.Object)
3017 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepositoryTests.sessionIsCreatedAndContextStoredWhenContextChanges()
Métodos invocados: 
org.springframework.security.web.context.HttpSessionSecurityContextRepository.loadContext(org.springframework.security.web.context.HttpRequestResponseHolder)
org.springframework.mock.web.MockHttpServletRequest.getSession(Z)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.web.context.HttpRequestResponseHolder.getRequest()
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
org.springframework.security.web.context.HttpSessionSecurityContextRepository.saveContext(org.springframework.security.core.context.SecurityContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletRequest.getSession(Z)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3018 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepositoryTests.redirectCausesEarlySaveOfContext()
Métodos invocados: 
org.springframework.security.web.context.HttpSessionSecurityContextRepository.loadContext(org.springframework.security.web.context.HttpRequestResponseHolder)
org.springframework.security.core.context.SecurityContextHolder.setContext(org.springframework.security.core.context.SecurityContext)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.isContextSaved()
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.web.context.HttpRequestResponseHolder.getRequest()
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
org.springframework.security.web.context.HttpSessionSecurityContextRepository.saveContext(org.springframework.security.core.context.SecurityContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3019 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepositoryTests.sendErrorCausesEarlySaveOfContext()
Métodos invocados: 
org.springframework.security.web.context.HttpSessionSecurityContextRepository.loadContext(org.springframework.security.web.context.HttpRequestResponseHolder)
org.springframework.security.core.context.SecurityContextHolder.setContext(org.springframework.security.core.context.SecurityContext)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
javax.servlet.http.HttpServletResponse.sendError(I)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.isContextSaved()
org.junit.Assert.assertTrue(Z)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.web.context.HttpRequestResponseHolder.getRequest()
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
org.springframework.security.web.context.HttpSessionSecurityContextRepository.saveContext(org.springframework.security.core.context.SecurityContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3020 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepositoryTests.noSessionIsCreatedIfSessionWasInvalidatedDuringTheRequest()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.getSession()
org.springframework.security.web.context.HttpSessionSecurityContextRepository.loadContext(org.springframework.security.web.context.HttpRequestResponseHolder)
org.springframework.security.core.context.SecurityContextHolder.setContext(org.springframework.security.core.context.SecurityContext)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.invalidate()
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.web.context.HttpRequestResponseHolder.getRequest()
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
org.springframework.security.web.context.HttpSessionSecurityContextRepository.saveContext(org.springframework.security.core.context.SecurityContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletRequest.getSession(Z)
org.junit.Assert.assertNull(java.lang.Object)
3021 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepositoryTests.noSessionIsCreatedIfAnonymousTokenIsUsed()
Métodos invocados: 
org.springframework.security.web.context.HttpSessionSecurityContextRepository.loadContext(org.springframework.security.web.context.HttpRequestResponseHolder)
org.springframework.security.core.context.SecurityContextHolder.setContext(org.springframework.security.core.context.SecurityContext)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.authority.AuthorityUtils.createAuthorityList([Ljava.lang.String;)
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.web.context.HttpRequestResponseHolder.getRequest()
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
org.springframework.security.web.context.HttpSessionSecurityContextRepository.saveContext(org.springframework.security.core.context.SecurityContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletRequest.getSession(Z)
org.junit.Assert.assertNull(java.lang.Object)
3022 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepositoryTests.sessionDisableUrlRewritingPreventsSessionIdBeingWrittenToUrl()
Métodos invocados: 
org.springframework.security.web.context.HttpSessionSecurityContextRepository.loadContext(org.springframework.security.web.context.HttpRequestResponseHolder)
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
javax.servlet.http.HttpServletResponse.encodeRedirectUrl(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
javax.servlet.http.HttpServletResponse.encodeRedirectURL(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
javax.servlet.http.HttpServletResponse.encodeUrl(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
javax.servlet.http.HttpServletResponse.encodeURL(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.context.HttpSessionSecurityContextRepository.setDisableUrlRewriting(Z)
org.springframework.security.web.context.HttpSessionSecurityContextRepository.loadContext(org.springframework.security.web.context.HttpRequestResponseHolder)
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
javax.servlet.http.HttpServletResponse.encodeRedirectUrl(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
javax.servlet.http.HttpServletResponse.encodeRedirectURL(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
javax.servlet.http.HttpServletResponse.encodeUrl(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.context.HttpRequestResponseHolder.getResponse()
javax.servlet.http.HttpServletResponse.encodeURL(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3023 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepositoryTests$1.encodeRedirectUrl(java.lang.String)
3023 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepositoryTests$1.encodeRedirectURL(java.lang.String)
3023 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepositoryTests$1.encodeUrl(java.lang.String)
3023 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepositoryTests$1.encodeURL(java.lang.String)
3023 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepositoryTests$MockContext.getAuthentication()
3023 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepositoryTests$MockContext.setAuthentication(org.springframework.security.core.Authentication)
3023 - Declaração do método: org.springframework.security.web.context.HttpSessionSecurityContextRepositoryTests$MockContext.clone()
Métodos invocados: 
org.springframework.security.web.context.HttpSessionSecurityContextRepositoryTests$MockContext.getAuthentication()
org.springframework.security.web.context.HttpSessionSecurityContextRepositoryTests$MockContext.setAuthentication(org.springframework.security.core.Authentication)
3024 - Declaração do método: org.springframework.security.web.savedrequest.RequestCacheAwareFilterTests.savedRequestIsRemovedAfterMatch()
Métodos invocados: 
org.springframework.security.web.savedrequest.HttpSessionRequestCache.saveRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
3025 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookieTests.setUp()
Métodos invocados: 
javax.servlet.http.Cookie.setComment(java.lang.String)
javax.servlet.http.Cookie.setDomain(java.lang.String)
javax.servlet.http.Cookie.setMaxAge(I)
javax.servlet.http.Cookie.setPath(java.lang.String)
javax.servlet.http.Cookie.setSecure(Z)
javax.servlet.http.Cookie.setVersion(I)
3026 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookieTests.testGetName()
Métodos invocados: 
javax.servlet.http.Cookie.getName()
org.springframework.security.web.savedrequest.SavedCookie.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
3027 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookieTests.testGetValue()
Métodos invocados: 
javax.servlet.http.Cookie.getValue()
org.springframework.security.web.savedrequest.SavedCookie.getValue()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
3028 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookieTests.testGetComment()
Métodos invocados: 
javax.servlet.http.Cookie.getComment()
org.springframework.security.web.savedrequest.SavedCookie.getComment()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
3029 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookieTests.testGetDomain()
Métodos invocados: 
javax.servlet.http.Cookie.getDomain()
org.springframework.security.web.savedrequest.SavedCookie.getDomain()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
3030 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookieTests.testGetMaxAge()
Métodos invocados: 
javax.servlet.http.Cookie.getMaxAge()
org.springframework.security.web.savedrequest.SavedCookie.getMaxAge()
junit.framework.Assert.assertEquals(I, I)
3031 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookieTests.testGetPath()
Métodos invocados: 
javax.servlet.http.Cookie.getPath()
org.springframework.security.web.savedrequest.SavedCookie.getPath()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
3032 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookieTests.testGetVersion()
Métodos invocados: 
javax.servlet.http.Cookie.getVersion()
org.springframework.security.web.savedrequest.SavedCookie.getVersion()
junit.framework.Assert.assertEquals(I, I)
3033 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookieTests.testGetCookie()
Métodos invocados: 
org.springframework.security.web.savedrequest.SavedCookie.getCookie()
javax.servlet.http.Cookie.getComment()
javax.servlet.http.Cookie.getComment()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
javax.servlet.http.Cookie.getDomain()
javax.servlet.http.Cookie.getDomain()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
javax.servlet.http.Cookie.getMaxAge()
javax.servlet.http.Cookie.getMaxAge()
junit.framework.Assert.assertEquals(I, I)
javax.servlet.http.Cookie.getName()
javax.servlet.http.Cookie.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
javax.servlet.http.Cookie.getPath()
javax.servlet.http.Cookie.getPath()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
javax.servlet.http.Cookie.getSecure()
javax.servlet.http.Cookie.getSecure()
junit.framework.Assert.assertEquals(Z, Z)
javax.servlet.http.Cookie.getValue()
javax.servlet.http.Cookie.getValue()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
javax.servlet.http.Cookie.getVersion()
javax.servlet.http.Cookie.getVersion()
junit.framework.Assert.assertEquals(I, I)
3034 - Declaração do método: org.springframework.security.web.savedrequest.SavedCookieTests.testSerializable()
Métodos invocados: 
junit.framework.Assert.assertTrue(Z)
3035 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.createWrapper(org.springframework.mock.web.MockHttpServletRequest, org.springframework.mock.web.MockHttpServletRequest)
3035 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.savedRequestCookiesAreReturnedIfSavedRequestIsSet()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.createWrapper(org.springframework.mock.web.MockHttpServletRequest, org.springframework.mock.web.MockHttpServletRequest)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getCookies()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getCookies()
javax.servlet.http.Cookie.getValue()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3036 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.savedRequesthHeaderIsReturnedIfSavedRequestIsSet()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.createWrapper(org.springframework.mock.web.MockHttpServletRequest, org.springframework.mock.web.MockHttpServletRequest)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getHeader(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getHeaders(java.lang.String)
java.util.Enumeration.hasMoreElements()
org.junit.Assert.assertFalse(Z)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getHeader(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getHeaders(java.lang.String)
java.util.Enumeration.hasMoreElements()
org.junit.Assert.assertTrue(Z)
java.util.Enumeration.nextElement()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Enumeration.hasMoreElements()
org.junit.Assert.assertFalse(Z)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getHeaderNames()
java.util.Enumeration.hasMoreElements()
org.junit.Assert.assertTrue(Z)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getHeaderNames()
java.util.Enumeration.nextElement()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3037 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.wrappedRequestParameterTakesPrecedenceOverSavedRequest()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setParameter(java.lang.String, java.lang.String)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.createWrapper(org.springframework.mock.web.MockHttpServletRequest, org.springframework.mock.web.MockHttpServletRequest)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getParameter(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setParameter(java.lang.String, java.lang.String)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getParameter(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getParameterValues(java.lang.String)
org.junit.Assert.assertEquals(J, J)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getParameterValues(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3038 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.savedRequestDoesntCreateDuplicateParams()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setParameter(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setParameter(java.lang.String, java.lang.String)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.createWrapper(org.springframework.mock.web.MockHttpServletRequest, org.springframework.mock.web.MockHttpServletRequest)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getParameterValues(java.lang.String)
org.junit.Assert.assertEquals(J, J)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getParameterMap()
java.util.Map.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getParameterMap()
java.util.Map.get(java.lang.Object)
org.junit.Assert.assertEquals(J, J)
3039 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.savedRequestHeadersTakePrecedence()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.createWrapper(org.springframework.mock.web.MockHttpServletRequest, org.springframework.mock.web.MockHttpServletRequest)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getHeader(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3040 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.getParameterValuesReturnsNullIfParameterIsntSet()
Métodos invocados: 
org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.createWrapper(org.springframework.mock.web.MockHttpServletRequest, org.springframework.mock.web.MockHttpServletRequest)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getParameterValues(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getParameterMap()
java.util.Map.get(java.lang.Object)
org.junit.Assert.assertNull(java.lang.Object)
3041 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.getParameterValuesReturnsCombinedSavedAndWrappedRequestValues()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setParameter(java.lang.String, java.lang.String)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.createWrapper(org.springframework.mock.web.MockHttpServletRequest, org.springframework.mock.web.MockHttpServletRequest)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getParameterValues(java.lang.String)
org.junit.Assert.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
org.springframework.mock.web.MockHttpServletRequest.setParameter(java.lang.String, java.lang.String)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getParameterValues(java.lang.String)
org.junit.Assert.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getParameterMap()
java.util.Map.get(java.lang.Object)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3042 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.expecteDateHeaderIsReturnedFromSavedRequest()
Métodos invocados: 
org.springframework.security.web.savedrequest.FastHttpDateFormat.getCurrentDate()
java.text.DateFormat.parse(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.createWrapper(org.springframework.mock.web.MockHttpServletRequest, org.springframework.mock.web.MockHttpServletRequest)
java.util.Date.getTime()
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getDateHeader(java.lang.String)
org.junit.Assert.assertEquals(J, J)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getDateHeader(java.lang.String)
org.junit.Assert.assertEquals(J, J)
3043 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.invalidDateHeaderIsRejected()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.createWrapper(org.springframework.mock.web.MockHttpServletRequest, org.springframework.mock.web.MockHttpServletRequest)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getDateHeader(java.lang.String)
3044 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.correctHttpMethodIsReturned()
Métodos invocados: 
org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.createWrapper(org.springframework.mock.web.MockHttpServletRequest, org.springframework.mock.web.MockHttpServletRequest)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getMethod()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3045 - Declaração do método: org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.correctIntHeaderIsReturned()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapperTests.createWrapper(org.springframework.mock.web.MockHttpServletRequest, org.springframework.mock.web.MockHttpServletRequest)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getIntHeader(java.lang.String)
org.junit.Assert.assertEquals(J, J)
org.springframework.security.web.savedrequest.SavedRequestAwareWrapper.getIntHeader(java.lang.String)
org.junit.Assert.assertEquals(J, J)
3046 - Declaração do método: org.springframework.security.web.savedrequest.HttpSessionRequestCacheTests.originalGetRequestDoesntMatchIncomingPost()
Métodos invocados: 
org.springframework.security.web.savedrequest.HttpSessionRequestCache.saveRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.web.savedrequest.HttpSessionRequestCache.getRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.getSession()
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.springframework.security.web.savedrequest.HttpSessionRequestCache.getMatchingRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
3047 - Declaração do método: org.springframework.security.web.savedrequest.HttpSessionRequestCacheTests.requestMatcherDefinesCorrectSubsetOfCachedRequests()
Métodos invocados: 
org.springframework.security.web.savedrequest.HttpSessionRequestCache.setRequestMatcher(org.springframework.security.web.util.RequestMatcher)
javax.servlet.http.HttpServletRequest.getMethod()
java.lang.String.equals(java.lang.Object)
org.springframework.security.web.savedrequest.HttpSessionRequestCache.saveRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.web.savedrequest.HttpSessionRequestCache.getRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.web.savedrequest.HttpSessionRequestCache.getRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.web.savedrequest.HttpSessionRequestCache.getMatchingRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
3048 - Declaração do método: org.springframework.security.web.savedrequest.HttpSessionRequestCacheTests$1.matches(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getMethod()
java.lang.String.equals(java.lang.Object)
3049 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequestTests.headersAreCaseInsensitive()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.savedrequest.DefaultSavedRequest.getHeaderValues(java.lang.String)
java.util.List.get(I)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3050 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequestTests.discardsIfNoneMatchHeader()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.savedrequest.DefaultSavedRequest.getHeaderValues(java.lang.String)
java.util.List.isEmpty()
org.junit.Assert.assertTrue(Z)
3051 - Declaração do método: org.springframework.security.web.savedrequest.DefaultSavedRequestTests.parametersAreCaseInsensitive()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.web.savedrequest.DefaultSavedRequest.getParameterValues(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3052 - Declaração do método: org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapperTests.tearDown()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
3053 - Declaração do método: org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapperTests.testCorrectOperationWithStringBasedPrincipal()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.getRemoteUser()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.getUserPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
3054 - Declaração do método: org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapperTests.testUseOfRolePrefixMeansItIsntNeededWhenCallngIsUserInRole()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertTrue(Z)
3055 - Declaração do método: org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapperTests.testCorrectOperationWithUserDetailsBasedPrincipal()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.getRemoteUser()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.getUserPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
3056 - Declaração do método: org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapperTests.testRoleIsntHeldIfAuthenticationIsNull()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.getRemoteUser()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.getUserPrincipal()
junit.framework.Assert.assertNull(java.lang.Object)
3057 - Declaração do método: org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapperTests.testRolesArentHeldIfAuthenticationPrincipalIsNull()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.getRemoteUser()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestWrapper.getUserPrincipal()
junit.framework.Assert.assertNull(java.lang.Object)
3058 - Declaração do método: org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilterTests.expectedRequestWrapperClassIsUsed()
Métodos invocados: 
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.setRolePrefix(java.lang.String)
org.jmock.Mockery.mock(java.lang.Class)
org.jmock.Mockery.checking(org.jmock.internal.ExpectationBuilder)
org.jmock.Expectations.exactly(I)
org.jmock.syntax.ReceiverClause.of(javax.servlet.FilterChain)
org.jmock.Expectations.aNonNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
org.jmock.Expectations.aNonNull(java.lang.Class)
org.jmock.Expectations.with(org.hamcrest.Matcher)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.web.filter.GenericFilterBean.destroy()
3059 - Declaração do método: org.springframework.security.web.session.SessionManagementFilterTests.clearContext()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.clearContext()
3060 - Declaração do método: org.springframework.security.web.session.SessionManagementFilterTests.newSessionShouldNotBeCreatedIfSessionExistsAndUserIsNotAuthenticated()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.getId()
org.springframework.security.web.session.SessionManagementFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.getId()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3061 - Declaração do método: org.springframework.security.web.session.SessionManagementFilterTests.strategyIsNotInvokedIfSecurityContextAlreadyExistsForRequest()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.web.context.SecurityContextRepository.containsContext(javax.servlet.http.HttpServletRequest)
org.mockito.Mockito.when(java.lang.Boolean)
org.mockito.stubbing.OngoingStubbing.thenReturn(java.lang.Boolean)
org.springframework.security.web.session.SessionManagementFilter.setSessionAuthenticationStrategy(org.springframework.security.web.authentication.session.SessionAuthenticationStrategy)
org.springframework.security.web.session.SessionManagementFilterTests.authenticateUser()
org.springframework.security.web.session.SessionManagementFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.verifyZeroInteractions([Ljava.lang.Object;)
3062 - Declaração do método: org.springframework.security.web.session.SessionManagementFilterTests.strategyIsNotInvokedIfAuthenticationIsNull()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.session.SessionManagementFilter.setSessionAuthenticationStrategy(org.springframework.security.web.authentication.session.SessionAuthenticationStrategy)
org.springframework.security.web.session.SessionManagementFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.verifyZeroInteractions([Ljava.lang.Object;)
3063 - Declaração do método: org.springframework.security.web.session.SessionManagementFilterTests.strategyIsInvokedIfUserIsNewlyAuthenticated()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.session.SessionManagementFilter.setSessionAuthenticationStrategy(org.springframework.security.web.authentication.session.SessionAuthenticationStrategy)
org.springframework.security.web.session.SessionManagementFilterTests.authenticateUser()
org.springframework.security.web.session.SessionManagementFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.verify(org.springframework.security.web.authentication.session.SessionAuthenticationStrategy)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.mockito.Matchers.any(java.lang.Class)
org.springframework.security.web.authentication.session.SessionAuthenticationStrategy.onAuthentication(org.springframework.security.core.Authentication, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.web.session.SessionManagementFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.verifyNoMoreInteractions([Ljava.lang.Object;)
3064 - Declaração do método: org.springframework.security.web.session.SessionManagementFilterTests.strategyFailureInvokesFailureHandler()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.session.SessionManagementFilter.setAuthenticationFailureHandler(org.springframework.security.web.authentication.AuthenticationFailureHandler)
org.springframework.security.web.session.SessionManagementFilter.setSessionAuthenticationStrategy(org.springframework.security.web.authentication.session.SessionAuthenticationStrategy)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.session.SessionManagementFilterTests.authenticateUser()
org.mockito.Mockito.doThrow(java.lang.Throwable)
org.mockito.stubbing.Stubber.when(org.springframework.security.web.authentication.session.SessionAuthenticationStrategy)
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.getAuthentication()
org.springframework.security.web.authentication.session.SessionAuthenticationStrategy.onAuthentication(org.springframework.security.core.Authentication, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.web.session.SessionManagementFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.verifyZeroInteractions([Ljava.lang.Object;)
org.mockito.Mockito.verify(org.springframework.security.web.authentication.AuthenticationFailureHandler)
org.springframework.security.web.authentication.AuthenticationFailureHandler.onAuthenticationFailure(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.core.AuthenticationException)
3065 - Declaração do método: org.springframework.security.web.session.SessionManagementFilterTests.responseIsRedirectedToTimeoutUrlIfSetAndSessionIsInvalid()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.session.SessionManagementFilter.setSessionAuthenticationStrategy(org.springframework.security.web.authentication.session.SessionAuthenticationStrategy)
org.springframework.security.web.session.SessionManagementFilter.setRedirectStrategy(org.springframework.security.web.RedirectStrategy)
org.springframework.mock.web.MockHttpServletRequest.setRequestedSessionId(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestedSessionIdValid(Z)
org.springframework.security.web.session.SessionManagementFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setRequestedSessionId(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestedSessionIdValid(Z)
org.springframework.security.web.session.SessionManagementFilter.setInvalidSessionUrl(java.lang.String)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.session.SessionManagementFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.mockito.Mockito.verifyZeroInteractions([Ljava.lang.Object;)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3066 - Declaração do método: org.springframework.security.web.session.SessionManagementFilterTests.authenticateUser()
Métodos invocados: 
org.springframework.security.core.context.SecurityContextHolder.getContext()
org.springframework.security.core.context.SecurityContext.setAuthentication(org.springframework.security.core.Authentication)
3067 - Declaração do método: org.springframework.security.web.session.DefaultSessionAuthenticationStrategyTests.newSessionShouldNotBeCreatedIfNoSessionExistsAndAlwaysCreateIsFalse()
Métodos invocados: 
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy.onAuthentication(org.springframework.security.core.Authentication, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
javax.servlet.http.HttpServletRequest.getSession(Z)
org.junit.Assert.assertNull(java.lang.Object)
3068 - Declaração do método: org.springframework.security.web.session.DefaultSessionAuthenticationStrategyTests.newSessionIsCreatedIfSessionAlreadyExists()
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.getId()
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy.onAuthentication(org.springframework.security.core.Authentication, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.getId()
java.lang.String.equals(java.lang.Object)
org.junit.Assert.assertFalse(Z)
3069 - Declaração do método: org.springframework.security.web.session.DefaultSessionAuthenticationStrategyTests.onlySavedRequestAttributeIsMigratedIfMigrateAttributesIsFalse()
Métodos invocados: 
org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy.setMigrateSessionAttributes(Z)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy.onAuthentication(org.springframework.security.core.Authentication, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
3070 - Declaração do método: org.springframework.security.web.session.DefaultSessionAuthenticationStrategyTests.sessionIsCreatedIfAlwaysCreateTrue()
Métodos invocados: 
org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy.setAlwaysCreateSession(Z)
org.mockito.Mockito.mock(java.lang.Class)
org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy.onAuthentication(org.springframework.security.core.Authentication, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
javax.servlet.http.HttpServletRequest.getSession(Z)
org.junit.Assert.assertNotNull(java.lang.Object)
3071 - Declaração do método: org.springframework.security.web.session.HttpSessionEventPublisherTests.publishedEventIsReceivedbyListener()
Métodos invocados: 
org.springframework.mock.web.MockServletContext.setAttribute(java.lang.String, java.lang.Object)
org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(javax.servlet.ServletContext)
org.springframework.context.support.StaticApplicationContext.registerSingleton(java.lang.String, java.lang.Class, org.springframework.beans.MutablePropertyValues)
org.springframework.context.support.AbstractApplicationContext.refresh()
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.web.session.HttpSessionEventPublisher.sessionCreated(javax.servlet.http.HttpSessionEvent)
org.springframework.security.web.session.MockApplicationListener.getCreatedEvent()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.web.session.MockApplicationListener.getDestroyedEvent()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.web.session.MockApplicationListener.getCreatedEvent()
org.springframework.security.web.session.HttpSessionCreatedEvent.getSession()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.session.MockApplicationListener.setCreatedEvent(org.springframework.security.web.session.HttpSessionCreatedEvent)
org.springframework.security.web.session.MockApplicationListener.setDestroyedEvent(org.springframework.security.web.session.HttpSessionDestroyedEvent)
org.springframework.security.web.session.HttpSessionEventPublisher.sessionDestroyed(javax.servlet.http.HttpSessionEvent)
org.springframework.security.web.session.MockApplicationListener.getDestroyedEvent()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.web.session.MockApplicationListener.getCreatedEvent()
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.web.session.MockApplicationListener.getDestroyedEvent()
org.springframework.security.web.session.HttpSessionDestroyedEvent.getSession()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3072 - Declaração do método: org.springframework.security.web.session.MockApplicationListener.getCreatedEvent()
3072 - Declaração do método: org.springframework.security.web.session.MockApplicationListener.getDestroyedEvent()
3072 - Declaração do método: org.springframework.security.web.session.MockApplicationListener.onApplicationEvent(org.springframework.context.ApplicationEvent)
3072 - Declaração do método: org.springframework.security.web.session.MockApplicationListener.setCreatedEvent(org.springframework.security.web.session.HttpSessionCreatedEvent)
3072 - Declaração do método: org.springframework.security.web.session.MockApplicationListener.setDestroyedEvent(org.springframework.security.web.session.HttpSessionDestroyedEvent)
3072 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests$NonStandardException.NonStandardException(java.lang.String, java.lang.Throwable)
3072 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests$NonStandardException.resolveCause()
3072 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests$NonStandardExceptionCauseExtractor.extractCause(java.lang.Throwable)
Métodos invocados: 
org.springframework.security.web.util.ThrowableAnalyzer.verifyThrowableHierarchy(java.lang.Throwable, java.lang.Class)
org.springframework.security.web.util.ThrowableAnalyzerTests$NonStandardException.resolveCause()
3073 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests.setUp()
Métodos invocados: 
org.springframework.security.web.util.ThrowableAnalyzer.registerExtractor(java.lang.Class, org.springframework.security.web.util.ThrowableCauseExtractor)
3074 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests$1.initExtractorMap()
Métodos invocados: 
org.springframework.security.web.util.ThrowableAnalyzer.registerExtractor(java.lang.Class, org.springframework.security.web.util.ThrowableCauseExtractor)
3075 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests.tearDown()
3075 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests.testRegisterExtractorWithInvalidExtractor()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
3076 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests$2.initExtractorMap()
3076 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests.testGetRegisteredTypes()
Métodos invocados: 
org.springframework.security.web.util.ThrowableAnalyzer.getRegisteredTypes()
java.lang.Class.isAssignableFrom(java.lang.Class)
junit.framework.Assert.assertFalse(java.lang.String, Z)
3077 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests.testDetermineCauseChainWithNoExtractors()
Métodos invocados: 
org.springframework.security.web.util.ThrowableAnalyzer.getRegisteredTypes()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.springframework.security.web.util.ThrowableAnalyzer.determineCauseChain(java.lang.Throwable)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
3078 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests$3.initExtractorMap()
3078 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests.testDetermineCauseChainWithDefaultExtractors()
Métodos invocados: 
org.springframework.security.web.util.ThrowableAnalyzer.getRegisteredTypes()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.springframework.security.web.util.ThrowableAnalyzer.determineCauseChain(java.lang.Throwable)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
3079 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests.testDetermineCauseChainWithCustomExtractors()
Métodos invocados: 
org.springframework.security.web.util.ThrowableAnalyzer.determineCauseChain(java.lang.Throwable)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
3080 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests.testGetFirstThrowableOfTypeWithSuccess1()
Métodos invocados: 
org.springframework.security.web.util.ThrowableAnalyzer.determineCauseChain(java.lang.Throwable)
org.springframework.security.web.util.ThrowableAnalyzer.getFirstThrowableOfType(java.lang.Class, [Ljava.lang.Throwable;)
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
3081 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests.testGetFirstThrowableOfTypeWithSuccess2()
Métodos invocados: 
org.springframework.security.web.util.ThrowableAnalyzer.determineCauseChain(java.lang.Throwable)
org.springframework.security.web.util.ThrowableAnalyzer.getFirstThrowableOfType(java.lang.Class, [Ljava.lang.Throwable;)
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
3082 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests.testGetFirstThrowableOfTypeWithFailure()
Métodos invocados: 
org.springframework.security.web.util.ThrowableAnalyzer.determineCauseChain(java.lang.Throwable)
org.springframework.security.web.util.ThrowableAnalyzer.getFirstThrowableOfType(java.lang.Class, [Ljava.lang.Throwable;)
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
3083 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests.testVerifyThrowableHierarchyWithExactType()
Métodos invocados: 
org.springframework.security.web.util.ThrowableAnalyzer.verifyThrowableHierarchy(java.lang.Throwable, java.lang.Class)
3084 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests.testVerifyThrowableHierarchyWithCompatibleType()
Métodos invocados: 
org.springframework.security.web.util.ThrowableAnalyzer.verifyThrowableHierarchy(java.lang.Throwable, java.lang.Class)
3085 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests.testVerifyThrowableHierarchyWithNull()
Métodos invocados: 
org.springframework.security.web.util.ThrowableAnalyzer.verifyThrowableHierarchy(java.lang.Throwable, java.lang.Class)
junit.framework.Assert.fail(java.lang.String)
3086 - Declaração do método: org.springframework.security.web.util.ThrowableAnalyzerTests.testVerifyThrowableHierarchyWithNonmatchingType()
Métodos invocados: 
org.springframework.security.web.util.ThrowableAnalyzer.verifyThrowableHierarchy(java.lang.Throwable, java.lang.Class)
junit.framework.Assert.fail(java.lang.String)
3087 - Declaração do método: org.springframework.security.web.util.UrlUtilsTests.absoluteUrlsAreMatchedAsAbsolute()
Métodos invocados: 
org.springframework.security.web.util.UrlUtils.isAbsoluteUrl(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.web.util.UrlUtils.isAbsoluteUrl(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.web.util.UrlUtils.isAbsoluteUrl(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.web.util.UrlUtils.isAbsoluteUrl(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.web.util.UrlUtils.isAbsoluteUrl(java.lang.String)
org.junit.Assert.assertTrue(Z)
3088 - Declaração do método: org.springframework.security.web.util.ELRequestMatcherTest.testHasIpAddressTrue()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRemoteAddr(java.lang.String)
org.springframework.security.web.util.ELRequestMatcher.matches(javax.servlet.http.HttpServletRequest)
org.junit.Assert.assertTrue(Z)
3089 - Declaração do método: org.springframework.security.web.util.ELRequestMatcherTest.testHasIpAddressFalse()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRemoteAddr(java.lang.String)
org.springframework.security.web.util.ELRequestMatcher.matches(javax.servlet.http.HttpServletRequest)
org.junit.Assert.assertFalse(Z)
3090 - Declaração do método: org.springframework.security.web.util.ELRequestMatcherTest.testHasHeaderTrue()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.util.ELRequestMatcher.matches(javax.servlet.http.HttpServletRequest)
org.junit.Assert.assertTrue(Z)
3091 - Declaração do método: org.springframework.security.web.util.ELRequestMatcherTest.testHasHeaderTwoEntries()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.util.ELRequestMatcher.matches(javax.servlet.http.HttpServletRequest)
org.junit.Assert.assertTrue(Z)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.util.ELRequestMatcher.matches(javax.servlet.http.HttpServletRequest)
org.junit.Assert.assertTrue(Z)
3092 - Declaração do método: org.springframework.security.web.util.ELRequestMatcherTest.testHasHeaderFalse()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.web.util.ELRequestMatcher.matches(javax.servlet.http.HttpServletRequest)
org.junit.Assert.assertFalse(Z)
3093 - Declaração do método: org.springframework.security.web.util.ELRequestMatcherTest.testHasHeaderNull()
Métodos invocados: 
org.springframework.security.web.util.ELRequestMatcher.matches(javax.servlet.http.HttpServletRequest)
org.junit.Assert.assertFalse(Z)
3094 - Declaração do método: org.springframework.security.web.util.TextEscapeUtilsTests.charactersAreEscapedCorrectly()
Métodos invocados: 
org.springframework.security.web.util.TextEscapeUtils.escapeEntities(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3095 - Declaração do método: org.springframework.security.web.util.TextEscapeUtilsTests.nullOrEmptyStringIsHandled()
Métodos invocados: 
org.springframework.security.web.util.TextEscapeUtils.escapeEntities(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.web.util.TextEscapeUtils.escapeEntities(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
3096 - Declaração do método: org.springframework.security.web.util.TextEscapeUtilsTests.invalidLowSurrogateIsDetected()
Métodos invocados: 
org.springframework.security.web.util.TextEscapeUtils.escapeEntities(java.lang.String)
3097 - Declaração do método: org.springframework.security.web.util.TextEscapeUtilsTests.missingLowSurrogateIsDetected()
Métodos invocados: 
org.springframework.security.web.util.TextEscapeUtils.escapeEntities(java.lang.String)
3098 - Declaração do método: org.springframework.security.web.util.TextEscapeUtilsTests.highSurrogateAtEndOfStringIsRejected()
Métodos invocados: 
org.springframework.security.web.util.TextEscapeUtils.escapeEntities(java.lang.String)
3099 - Declaração do método: org.springframework.security.web.util.TextEscapeUtilsTests.validSurrogatePairIsAccepted()
Métodos invocados: 
org.springframework.security.web.util.TextEscapeUtils.escapeEntities(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
3100 - Declaração do método: org.springframework.security.web.util.TextEscapeUtilsTests.undefinedSurrogatePairIsIgnored()
Métodos invocados: 
org.springframework.security.web.util.TextEscapeUtils.escapeEntities(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
