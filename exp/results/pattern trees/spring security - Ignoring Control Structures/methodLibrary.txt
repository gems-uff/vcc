1 - Declaração do método: org.springframework.security.acls.AuditableAccessControlEntry.isAuditFailure()
1 - Declaração do método: org.springframework.security.acls.AuditableAccessControlEntry.isAuditSuccess()
1 - Declaração do método: org.springframework.security.acls.OwnershipAcl.setOwner(org.springframework.security.acls.sid.Sid)
1 - Declaração do método: org.springframework.security.acls.IdentityUnavailableException.IdentityUnavailableException(java.lang.String)
1 - Declaração do método: org.springframework.security.acls.IdentityUnavailableException.IdentityUnavailableException(java.lang.String, java.lang.Throwable)
1 - Declaração do método: org.springframework.security.acls.AclService.findChildren(org.springframework.security.acls.objectidentity.ObjectIdentity)
1 - Declaração do método: org.springframework.security.acls.AclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity)
1 - Declaração do método: org.springframework.security.acls.AclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity, [Lorg.springframework.security.acls.sid.Sid;)
1 - Declaração do método: org.springframework.security.acls.AclService.readAclsById([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;)
1 - Declaração do método: org.springframework.security.acls.AclService.readAclsById([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;, [Lorg.springframework.security.acls.sid.Sid;)
1 - Declaração do método: org.springframework.security.acls.MutableAcl.deleteAce(java.io.Serializable)
1 - Declaração do método: org.springframework.security.acls.MutableAcl.getEntries()
1 - Declaração do método: org.springframework.security.acls.MutableAcl.getId()
1 - Declaração do método: org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
1 - Declaração do método: org.springframework.security.acls.MutableAcl.setEntriesInheriting(Z)
1 - Declaração do método: org.springframework.security.acls.MutableAcl.setParent(org.springframework.security.acls.Acl)
1 - Declaração do método: org.springframework.security.acls.MutableAcl.updateAce(java.io.Serializable, org.springframework.security.acls.Permission)
1 - Declaração do método: org.springframework.security.acls.MutableAclService.createAcl(org.springframework.security.acls.objectidentity.ObjectIdentity)
1 - Declaração do método: org.springframework.security.acls.MutableAclService.deleteAcl(org.springframework.security.acls.objectidentity.ObjectIdentity, Z)
1 - Declaração do método: org.springframework.security.acls.MutableAclService.updateAcl(org.springframework.security.acls.MutableAcl)
1 - Declaração do método: org.springframework.security.acls.AccessControlEntry.getAcl()
1 - Declaração do método: org.springframework.security.acls.AccessControlEntry.getId()
1 - Declaração do método: org.springframework.security.acls.AccessControlEntry.getPermission()
1 - Declaração do método: org.springframework.security.acls.AccessControlEntry.getSid()
1 - Declaração do método: org.springframework.security.acls.AccessControlEntry.isGranting()
1 - Declaração do método: org.springframework.security.acls.Acl.getEntries()
1 - Declaração do método: org.springframework.security.acls.Acl.getObjectIdentity()
1 - Declaração do método: org.springframework.security.acls.Acl.getOwner()
1 - Declaração do método: org.springframework.security.acls.Acl.getParentAcl()
1 - Declaração do método: org.springframework.security.acls.Acl.isEntriesInheriting()
1 - Declaração do método: org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
1 - Declaração do método: org.springframework.security.acls.Acl.isSidLoaded([Lorg.springframework.security.acls.sid.Sid;)
1 - Declaração do método: org.springframework.security.acls.ChildrenExistException.ChildrenExistException(java.lang.String)
1 - Declaração do método: org.springframework.security.acls.ChildrenExistException.ChildrenExistException(java.lang.String, java.lang.Throwable)
1 - Declaração do método: org.springframework.security.acls.AclFormattingUtils.AclFormattingUtils()
1 - Declaração do método: org.springframework.security.acls.AclFormattingUtils.demergePatterns(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.String.length()
java.lang.String.length()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
java.lang.String.length()
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.String.charAt(I)
2 - Declaração do método: org.springframework.security.acls.AclFormattingUtils.mergePatterns(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.String.length()
java.lang.String.length()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
java.lang.String.length()
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.String.charAt(I)
java.lang.String.charAt(I)
3 - Declaração do método: org.springframework.security.acls.AclFormattingUtils.printBinary(I, C, C)
Métodos invocados: 
java.lang.Integer.toString(I, I)
java.lang.String.length()
java.lang.String.length()
java.lang.String.substring(I, I)
java.lang.String.replace(C, C)
java.lang.String.replace(C, C)
4 - Declaração do método: org.springframework.security.acls.AclFormattingUtils.printBinary(I)
Métodos invocados: 
org.springframework.security.acls.AclFormattingUtils.printBinary(I, C, C)
5 - Declaração do método: org.springframework.security.acls.AclFormattingUtils.printBinary(I, C)
Métodos invocados: 
java.lang.Character.toString(C)
java.lang.Character.toString(C)
org.springframework.util.Assert.doesNotContain(java.lang.String, java.lang.String, java.lang.String)
java.lang.Character.toString(C)
java.lang.Character.toString(C)
org.springframework.util.Assert.doesNotContain(java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.acls.AclFormattingUtils.printBinary(I, C, C)
java.lang.String.replace(C, C)
6 - Declaração do método: org.springframework.security.acls.AlreadyExistsException.AlreadyExistsException(java.lang.String)
6 - Declaração do método: org.springframework.security.acls.AlreadyExistsException.AlreadyExistsException(java.lang.String, java.lang.Throwable)
6 - Declaração do método: org.springframework.security.acls.UnloadedSidException.UnloadedSidException(java.lang.String)
6 - Declaração do método: org.springframework.security.acls.UnloadedSidException.UnloadedSidException(java.lang.String, java.lang.Throwable)
6 - Declaração do método: org.springframework.security.acls.Permission.getMask()
6 - Declaração do método: org.springframework.security.acls.Permission.getPattern()
6 - Declaração do método: org.springframework.security.acls.NotFoundException.NotFoundException(java.lang.String)
6 - Declaração do método: org.springframework.security.acls.NotFoundException.NotFoundException(java.lang.String, java.lang.Throwable)
6 - Declaração do método: org.springframework.security.acls.AuditableAcl.updateAuditing(java.io.Serializable, Z, Z)
6 - Declaração do método: org.springframework.security.acls.domain.CumulativePermission.clear(org.springframework.security.acls.Permission)
Métodos invocados: 
org.springframework.security.acls.Permission.getMask()
org.springframework.security.acls.Permission.getPattern()
org.springframework.security.acls.AclFormattingUtils.demergePatterns(java.lang.String, java.lang.String)
7 - Declaração do método: org.springframework.security.acls.domain.CumulativePermission.clear()
7 - Declaração do método: org.springframework.security.acls.domain.CumulativePermission.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.acls.Permission.getMask()
8 - Declaração do método: org.springframework.security.acls.domain.CumulativePermission.hashCode()
8 - Declaração do método: org.springframework.security.acls.domain.CumulativePermission.getMask()
8 - Declaração do método: org.springframework.security.acls.domain.CumulativePermission.getPattern()
8 - Declaração do método: org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
Métodos invocados: 
org.springframework.security.acls.Permission.getMask()
org.springframework.security.acls.Permission.getPattern()
org.springframework.security.acls.AclFormattingUtils.mergePatterns(java.lang.String, java.lang.String)
9 - Declaração do método: org.springframework.security.acls.domain.CumulativePermission.toString()
9 - Declaração do método: org.springframework.security.acls.domain.ConsoleAuditLogger.logIfNeeded(Z, org.springframework.security.acls.AccessControlEntry)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.AuditableAccessControlEntry.isAuditSuccess()
java.io.PrintStream.println(java.lang.String)
org.springframework.security.acls.AuditableAccessControlEntry.isAuditFailure()
java.io.PrintStream.println(java.lang.String)
10 - Declaração do método: org.springframework.security.acls.domain.BasePermission.BasePermission(I, C)
10 - Declaração do método: org.springframework.security.acls.domain.BasePermission.buildFromMask(I)
Métodos invocados: 
java.util.Map.containsKey(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
org.springframework.util.Assert.state(Z, java.lang.String)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
11 - Declaração do método: org.springframework.security.acls.domain.BasePermission.buildFromMask([I)
Métodos invocados: 
org.springframework.security.acls.domain.BasePermission.buildFromMask(I)
12 - Declaração do método: org.springframework.security.acls.domain.BasePermission.buildFromName(java.lang.String)
Métodos invocados: 
java.util.Map.containsKey(java.lang.Object)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
java.util.Map.get(java.lang.Object)
13 - Declaração do método: org.springframework.security.acls.domain.BasePermission.buildFromName([Ljava.lang.String;)
Métodos invocados: 
org.springframework.security.acls.domain.BasePermission.buildFromName(java.lang.String)
14 - Declaração do método: org.springframework.security.acls.domain.BasePermission.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.acls.Permission.getMask()
15 - Declaração do método: org.springframework.security.acls.domain.BasePermission.getMask()
15 - Declaração do método: org.springframework.security.acls.domain.BasePermission.getPattern()
Métodos invocados: 
org.springframework.security.acls.AclFormattingUtils.printBinary(I, C)
16 - Declaração do método: org.springframework.security.acls.domain.BasePermission.toString()
Métodos invocados: 
org.springframework.security.acls.domain.BasePermission.getPattern()
17 - Declaração do método: org.springframework.security.acls.domain.BasePermission.hashCode()
17 - Declaração do método: org.springframework.security.acls.domain.AuditLogger.logIfNeeded(Z, org.springframework.security.acls.AccessControlEntry)
17 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.AccessControlEntryImpl(java.io.Serializable, org.springframework.security.acls.Acl, org.springframework.security.acls.sid.Sid, org.springframework.security.acls.Permission, Z, Z, Z)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
18 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.acls.domain.AccessControlEntryImpl.isAuditFailure()
org.springframework.security.acls.domain.AccessControlEntryImpl.isAuditSuccess()
org.springframework.security.acls.domain.AccessControlEntryImpl.isGranting()
org.springframework.security.acls.domain.AccessControlEntryImpl.getAcl()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.acls.domain.AccessControlEntryImpl.getId()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.acls.domain.AccessControlEntryImpl.getPermission()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.acls.domain.AccessControlEntryImpl.getSid()
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
19 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.getAcl()
19 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.getId()
19 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.getPermission()
19 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.getSid()
19 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.isAuditFailure()
19 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.isAuditSuccess()
19 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.isGranting()
19 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.setAuditFailure(Z)
19 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.setAuditSuccess(Z)
19 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.setPermission(org.springframework.security.acls.Permission)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
20 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryImpl.toString()
Métodos invocados: 
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(Z)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(Z)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(Z)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
21 - Declaração do método: org.springframework.security.acls.domain.AclImpl.AclImpl(org.springframework.security.acls.objectidentity.ObjectIdentity, java.io.Serializable, org.springframework.security.acls.domain.AclAuthorizationStrategy, org.springframework.security.acls.domain.AuditLogger)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
22 - Declaração do método: org.springframework.security.acls.domain.AclImpl.AclImpl(org.springframework.security.acls.objectidentity.ObjectIdentity, java.io.Serializable, org.springframework.security.acls.domain.AclAuthorizationStrategy, org.springframework.security.acls.domain.AuditLogger, org.springframework.security.acls.Acl, [Lorg.springframework.security.acls.sid.Sid;, Z, org.springframework.security.acls.sid.Sid)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
23 - Declaração do método: org.springframework.security.acls.domain.AclImpl.AclImpl()
23 - Declaração do método: org.springframework.security.acls.domain.AclImpl.deleteAce(java.io.Serializable)
Métodos invocados: 
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
org.springframework.security.acls.domain.AclImpl.findAceOffset(java.io.Serializable)
java.util.List.remove(I)
24 - Declaração do método: org.springframework.security.acls.domain.AclImpl.findAceOffset(java.io.Serializable)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.List.size()
java.util.List.get(I)
org.springframework.security.acls.AccessControlEntry.getId()
java.lang.Object.equals(java.lang.Object)
25 - Declaração do método: org.springframework.security.acls.domain.AclImpl.getEntries()
Métodos invocados: 
java.util.List.toArray([Ljava.lang.Object;)
26 - Declaração do método: org.springframework.security.acls.domain.AclImpl.getId()
26 - Declaração do método: org.springframework.security.acls.domain.AclImpl.getObjectIdentity()
26 - Declaração do método: org.springframework.security.acls.domain.AclImpl.getOwner()
26 - Declaração do método: org.springframework.security.acls.domain.AclImpl.getParentAcl()
26 - Declaração do método: org.springframework.security.acls.domain.AclImpl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
Métodos invocados: 
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.domain.AclImpl.findAceOffset(java.io.Serializable)
java.util.List.add(I, java.lang.Object)
java.util.List.add(java.lang.Object)
27 - Declaração do método: org.springframework.security.acls.domain.AclImpl.isEntriesInheriting()
27 - Declaração do método: org.springframework.security.acls.domain.AclImpl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
Métodos invocados: 
org.springframework.util.Assert.notEmpty([Ljava.lang.Object;, java.lang.String)
org.springframework.util.Assert.notEmpty([Ljava.lang.Object;, java.lang.String)
org.springframework.security.acls.domain.AclImpl.isSidLoaded([Lorg.springframework.security.acls.sid.Sid;)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.acls.AccessControlEntry.getPermission()
org.springframework.security.acls.Permission.getMask()
org.springframework.security.acls.Permission.getMask()
org.springframework.security.acls.AccessControlEntry.getSid()
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
org.springframework.security.acls.AccessControlEntry.isGranting()
org.springframework.security.acls.domain.AuditLogger.logIfNeeded(Z, org.springframework.security.acls.AccessControlEntry)
org.springframework.security.acls.domain.AuditLogger.logIfNeeded(Z, org.springframework.security.acls.AccessControlEntry)
org.springframework.security.acls.domain.AclImpl.isEntriesInheriting()
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
28 - Declaração do método: org.springframework.security.acls.domain.AclImpl.isSidLoaded([Lorg.springframework.security.acls.sid.Sid;)
Métodos invocados: 
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
29 - Declaração do método: org.springframework.security.acls.domain.AclImpl.setEntriesInheriting(Z)
Métodos invocados: 
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
30 - Declaração do método: org.springframework.security.acls.domain.AclImpl.setOwner(org.springframework.security.acls.sid.Sid)
Métodos invocados: 
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
31 - Declaração do método: org.springframework.security.acls.domain.AclImpl.setParent(org.springframework.security.acls.Acl)
Métodos invocados: 
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.Object.equals(java.lang.Object)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
32 - Declaração do método: org.springframework.security.acls.domain.AclImpl.toString()
Métodos invocados: 
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.lang.StringBuffer.append(java.lang.String)
java.util.Iterator.next()
java.lang.Object.toString()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(Z)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
org.springframework.security.acls.Acl.getObjectIdentity()
java.lang.Object.toString()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
33 - Declaração do método: org.springframework.security.acls.domain.AclImpl.updateAce(java.io.Serializable, org.springframework.security.acls.Permission)
Métodos invocados: 
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
org.springframework.security.acls.domain.AclImpl.findAceOffset(java.io.Serializable)
java.util.List.get(I)
org.springframework.security.acls.domain.AccessControlEntryImpl.setPermission(org.springframework.security.acls.Permission)
34 - Declaração do método: org.springframework.security.acls.domain.AclImpl.updateAuditing(java.io.Serializable, Z, Z)
Métodos invocados: 
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
org.springframework.security.acls.domain.AclImpl.findAceOffset(java.io.Serializable)
java.util.List.get(I)
org.springframework.security.acls.domain.AccessControlEntryImpl.setAuditSuccess(Z)
org.springframework.security.acls.domain.AccessControlEntryImpl.setAuditFailure(Z)
35 - Declaração do método: org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
35 - Declaração do método: org.springframework.security.acls.domain.AclAuthorizationStrategyImpl.AclAuthorizationStrategyImpl([Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
org.springframework.util.Assert.notEmpty([Ljava.lang.Object;, java.lang.String)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
36 - Declaração do método: org.springframework.security.acls.domain.AclAuthorizationStrategyImpl.securityCheck(org.springframework.security.acls.Acl, I)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.Authentication.isAuthenticated()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.acls.Acl.getOwner()
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
org.springframework.security.Authentication.getAuthorities()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.acls.sid.SidRetrievalStrategy.getSids(org.springframework.security.Authentication)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
37 - Declaração do método: org.springframework.security.acls.domain.AclAuthorizationStrategyImpl.setSidRetrievalStrategy(org.springframework.security.acls.sid.SidRetrievalStrategy)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
38 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.JdbcMutableAclService(javax.sql.DataSource, org.springframework.security.acls.jdbc.LookupStrategy, org.springframework.security.acls.jdbc.AclCache)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
39 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.objectidentity.ObjectIdentity)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.jdbc.JdbcMutableAclService.retrieveObjectIdentityPrimaryKey(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.acls.jdbc.JdbcMutableAclService.createObjectIdentity(org.springframework.security.acls.objectidentity.ObjectIdentity, org.springframework.security.acls.sid.Sid)
org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
40 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.createEntries(org.springframework.security.acls.MutableAcl)
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.batchUpdate(java.lang.String, org.springframework.jdbc.core.BatchPreparedStatementSetter)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.MutableAcl.getEntries()
java.lang.reflect.Array.get(java.lang.Object, I)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.acls.MutableAcl.getId()
java.lang.Long.longValue()
java.sql.PreparedStatement.setLong(I, J)
java.sql.PreparedStatement.setInt(I, I)
org.springframework.security.acls.domain.AccessControlEntryImpl.getSid()
org.springframework.security.acls.jdbc.JdbcMutableAclService.createOrRetrieveSidPrimaryKey(org.springframework.security.acls.sid.Sid, Z)
java.lang.Long.longValue()
java.sql.PreparedStatement.setLong(I, J)
org.springframework.security.acls.domain.AccessControlEntryImpl.getPermission()
org.springframework.security.acls.Permission.getMask()
java.sql.PreparedStatement.setInt(I, I)
org.springframework.security.acls.domain.AccessControlEntryImpl.isGranting()
java.sql.PreparedStatement.setBoolean(I, Z)
org.springframework.security.acls.domain.AccessControlEntryImpl.isAuditSuccess()
java.sql.PreparedStatement.setBoolean(I, Z)
org.springframework.security.acls.domain.AccessControlEntryImpl.isAuditFailure()
java.sql.PreparedStatement.setBoolean(I, Z)
41 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService$1.getBatchSize()
Métodos invocados: 
org.springframework.security.acls.MutableAcl.getEntries()
42 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService$1.setValues(java.sql.PreparedStatement, I)
Métodos invocados: 
org.springframework.security.acls.MutableAcl.getEntries()
java.lang.reflect.Array.get(java.lang.Object, I)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.acls.MutableAcl.getId()
java.lang.Long.longValue()
java.sql.PreparedStatement.setLong(I, J)
java.sql.PreparedStatement.setInt(I, I)
org.springframework.security.acls.domain.AccessControlEntryImpl.getSid()
org.springframework.security.acls.jdbc.JdbcMutableAclService.createOrRetrieveSidPrimaryKey(org.springframework.security.acls.sid.Sid, Z)
java.lang.Long.longValue()
java.sql.PreparedStatement.setLong(I, J)
org.springframework.security.acls.domain.AccessControlEntryImpl.getPermission()
org.springframework.security.acls.Permission.getMask()
java.sql.PreparedStatement.setInt(I, I)
org.springframework.security.acls.domain.AccessControlEntryImpl.isGranting()
java.sql.PreparedStatement.setBoolean(I, Z)
org.springframework.security.acls.domain.AccessControlEntryImpl.isAuditSuccess()
java.sql.PreparedStatement.setBoolean(I, Z)
org.springframework.security.acls.domain.AccessControlEntryImpl.isAuditFailure()
java.sql.PreparedStatement.setBoolean(I, Z)
43 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.createObjectIdentity(org.springframework.security.acls.objectidentity.ObjectIdentity, org.springframework.security.acls.sid.Sid)
Métodos invocados: 
org.springframework.security.acls.jdbc.JdbcMutableAclService.createOrRetrieveSidPrimaryKey(org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.objectidentity.ObjectIdentity.getJavaType()
org.springframework.security.acls.jdbc.JdbcMutableAclService.createOrRetrieveClassPrimaryKey(java.lang.Class, Z)
org.springframework.security.acls.objectidentity.ObjectIdentity.getIdentifier()
java.lang.Object.toString()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
44 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.createOrRetrieveClassPrimaryKey(java.lang.Class, Z)
Métodos invocados: 
java.lang.Class.getName()
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String, [Ljava.lang.Object;, java.lang.Class)
java.util.List.isEmpty()
java.lang.Class.getName()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
org.springframework.transaction.support.TransactionSynchronizationManager.isSynchronizationActive()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.queryForLong(java.lang.String)
java.util.List.iterator()
java.util.Iterator.next()
45 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.createOrRetrieveSidPrimaryKey(org.springframework.security.acls.sid.Sid, Z)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.sid.PrincipalSid.getPrincipal()
org.springframework.security.acls.sid.GrantedAuthoritySid.getGrantedAuthority()
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String, [Ljava.lang.Object;, java.lang.Class)
java.util.List.isEmpty()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
org.springframework.transaction.support.TransactionSynchronizationManager.isSynchronizationActive()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.queryForLong(java.lang.String)
java.util.List.iterator()
java.util.Iterator.next()
46 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteAcl(org.springframework.security.acls.objectidentity.ObjectIdentity, Z)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.objectidentity.ObjectIdentity.getIdentifier()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.jdbc.JdbcAclService.findChildren(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteAcl(org.springframework.security.acls.objectidentity.ObjectIdentity, Z)
org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteEntries(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteObjectIdentityAndOptionallyClass(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.jdbc.AclCache.evictFromCache(org.springframework.security.acls.objectidentity.ObjectIdentity)
47 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteEntries(org.springframework.security.acls.objectidentity.ObjectIdentity)
Métodos invocados: 
org.springframework.security.acls.jdbc.JdbcMutableAclService.retrieveObjectIdentityPrimaryKey(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
48 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteObjectIdentityAndOptionallyClass(org.springframework.security.acls.objectidentity.ObjectIdentity)
Métodos invocados: 
org.springframework.security.acls.jdbc.JdbcMutableAclService.retrieveObjectIdentityPrimaryKey(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
org.springframework.security.acls.objectidentity.ObjectIdentity.getJavaType()
java.lang.Class.getName()
org.springframework.jdbc.core.JdbcTemplate.queryForLong(java.lang.String, [Ljava.lang.Object;)
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
49 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.retrieveObjectIdentityPrimaryKey(org.springframework.security.acls.objectidentity.ObjectIdentity)
Métodos invocados: 
org.springframework.security.acls.objectidentity.ObjectIdentity.getJavaType()
java.lang.Class.getName()
org.springframework.security.acls.objectidentity.ObjectIdentity.getIdentifier()
org.springframework.jdbc.core.JdbcTemplate.queryForLong(java.lang.String, [Ljava.lang.Object;)
50 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.MutableAcl)
Métodos invocados: 
org.springframework.security.acls.MutableAcl.getId()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.Acl.getObjectIdentity()
org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteEntries(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createEntries(org.springframework.security.acls.MutableAcl)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateObjectIdentity(org.springframework.security.acls.MutableAcl)
org.springframework.security.acls.Acl.getObjectIdentity()
org.springframework.security.acls.jdbc.AclCache.evictFromCache(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.Acl.getObjectIdentity()
51 - Declaração do método: org.springframework.security.acls.jdbc.JdbcMutableAclService.updateObjectIdentity(org.springframework.security.acls.MutableAcl)
Métodos invocados: 
org.springframework.security.acls.Acl.getParentAcl()
org.springframework.security.acls.Acl.getParentAcl()
org.springframework.security.acls.Acl.getObjectIdentity()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.acls.Acl.getParentAcl()
org.springframework.security.acls.Acl.getObjectIdentity()
org.springframework.security.acls.jdbc.JdbcMutableAclService.retrieveObjectIdentityPrimaryKey(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.Acl.getOwner()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.Acl.getOwner()
org.springframework.security.acls.jdbc.JdbcMutableAclService.createOrRetrieveSidPrimaryKey(org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.Acl.isEntriesInheriting()
org.springframework.security.acls.MutableAcl.getId()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
52 - Declaração do método: org.springframework.security.acls.jdbc.LookupStrategy.readAclsById([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;, [Lorg.springframework.security.acls.sid.Sid;)
52 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.BasicLookupStrategy(javax.sql.DataSource, org.springframework.security.acls.jdbc.AclCache, org.springframework.security.acls.domain.AclAuthorizationStrategy, org.springframework.security.acls.domain.AuditLogger)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
53 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.computeRepeatingSql(java.lang.String, I)
Métodos invocados: 
org.springframework.util.Assert.isTrue(Z, java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
54 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.convert(java.util.Map, java.lang.Long)
Métodos invocados: 
org.springframework.util.Assert.notEmpty(java.util.Map, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.Map.get(java.lang.Object)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.acls.domain.AclImpl.getParentAcl()
org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.getId()
org.springframework.security.acls.jdbc.BasicLookupStrategy.convert(java.util.Map, java.lang.Long)
org.springframework.security.acls.domain.AclImpl.getObjectIdentity()
org.springframework.security.acls.domain.AclImpl.getId()
org.springframework.security.acls.domain.AclImpl.isEntriesInheriting()
org.springframework.security.acls.domain.AclImpl.getOwner()
org.springframework.security.util.FieldUtils.getField(java.lang.Class, java.lang.String)
java.lang.reflect.AccessibleObject.setAccessible(Z)
java.lang.reflect.Field.get(java.lang.Object)
java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)
55 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.convertCurrentResultIntoObject(java.util.Map, java.sql.ResultSet)
Métodos invocados: 
java.sql.ResultSet.getLong(java.lang.String)
java.util.Map.get(java.lang.Object)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getLong(java.lang.String)
java.sql.ResultSet.getLong(java.lang.String)
java.sql.ResultSet.getBoolean(java.lang.String)
java.sql.ResultSet.getBoolean(java.lang.String)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getString(java.lang.String)
java.util.Map.put(java.lang.Object, java.lang.Object)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getLong(java.lang.String)
java.sql.ResultSet.getBoolean(java.lang.String)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getInt(java.lang.String)
org.springframework.security.acls.domain.BasePermission.buildFromMask(I)
java.sql.ResultSet.getBoolean(java.lang.String)
java.sql.ResultSet.getBoolean(java.lang.String)
java.sql.ResultSet.getBoolean(java.lang.String)
org.springframework.security.util.FieldUtils.getField(java.lang.Class, java.lang.String)
java.lang.reflect.AccessibleObject.setAccessible(Z)
java.lang.reflect.Field.get(java.lang.Object)
java.lang.Throwable.getMessage()
java.util.List.contains(java.lang.Object)
java.util.List.add(java.lang.Object)
56 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.lookupObjectIdentities([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;, [Lorg.springframework.security.acls.sid.Sid;)
Métodos invocados: 
org.springframework.util.Assert.notEmpty([Ljava.lang.Object;, java.lang.String)
org.springframework.security.acls.jdbc.BasicLookupStrategy.computeRepeatingSql(java.lang.String, I)
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter, org.springframework.jdbc.core.ResultSetExtractor)
org.springframework.security.acls.objectidentity.ObjectIdentity.getJavaType()
java.lang.Class.getName()
org.springframework.security.acls.objectidentity.ObjectIdentity.getIdentifier()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.acls.objectidentity.ObjectIdentity.getIdentifier()
java.lang.Long.longValue()
java.sql.PreparedStatement.setLong(I, J)
java.sql.PreparedStatement.setString(I, java.lang.String)
java.util.Map.values()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.acls.domain.AclImpl.getId()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.acls.domain.AclImpl.getId()
org.springframework.security.acls.jdbc.BasicLookupStrategy.convert(java.util.Map, java.lang.Long)
org.springframework.security.acls.Acl.getObjectIdentity()
java.util.Map.put(java.lang.Object, java.lang.Object)
57 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$1.setValues(java.sql.PreparedStatement)
Métodos invocados: 
org.springframework.security.acls.objectidentity.ObjectIdentity.getJavaType()
java.lang.Class.getName()
org.springframework.security.acls.objectidentity.ObjectIdentity.getIdentifier()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.acls.objectidentity.ObjectIdentity.getIdentifier()
java.lang.Long.longValue()
java.sql.PreparedStatement.setLong(I, J)
java.sql.PreparedStatement.setString(I, java.lang.String)
58 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.lookupPrimaryKeys(java.util.Map, java.util.Set, [Lorg.springframework.security.acls.sid.Sid;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notEmpty(java.util.Collection, java.lang.String)
java.util.Set.size()
org.springframework.security.acls.jdbc.BasicLookupStrategy.computeRepeatingSql(java.lang.String, I)
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter, org.springframework.jdbc.core.ResultSetExtractor)
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.Long.longValue()
java.sql.PreparedStatement.setLong(I, J)
59 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$2.setValues(java.sql.PreparedStatement)
Métodos invocados: 
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.Long.longValue()
java.sql.PreparedStatement.setLong(I, J)
60 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.readAclsById([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;, [Lorg.springframework.security.acls.sid.Sid;)
Métodos invocados: 
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.util.Assert.notEmpty([Ljava.lang.Object;, java.lang.String)
java.util.Map.containsKey(java.lang.Object)
org.springframework.security.acls.jdbc.AclCache.getFromCache(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.Acl.isSidLoaded([Lorg.springframework.security.acls.sid.Sid;)
org.springframework.security.acls.Acl.getObjectIdentity()
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Set.add(java.lang.Object)
java.util.Set.size()
java.util.Set.toArray([Ljava.lang.Object;)
org.springframework.security.acls.jdbc.BasicLookupStrategy.lookupObjectIdentities([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;, [Lorg.springframework.security.acls.sid.Sid;)
java.util.Map.putAll(java.util.Map)
java.util.Map.values()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.acls.jdbc.AclCache.putInCache(org.springframework.security.acls.MutableAcl)
java.util.Set.clear()
java.util.Map.containsKey(java.lang.Object)
java.lang.Object.toString()
61 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy.setBatchSize(I)
61 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$ProcessResultSet.ProcessResultSet(java.util.Map, [Lorg.springframework.security.acls.sid.Sid;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
62 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$ProcessResultSet.extractData(java.sql.ResultSet)
Métodos invocados: 
java.sql.ResultSet.next()
org.springframework.security.acls.jdbc.BasicLookupStrategy.convertCurrentResultIntoObject(java.util.Map, java.sql.ResultSet)
java.sql.ResultSet.getLong(java.lang.String)
java.util.Map.containsKey(java.lang.Object)
org.springframework.security.acls.jdbc.AclCache.getFromCache(java.io.Serializable)
org.springframework.security.acls.Acl.isSidLoaded([Lorg.springframework.security.acls.sid.Sid;)
java.util.Set.add(java.lang.Object)
org.springframework.security.acls.MutableAcl.getId()
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Set.size()
org.springframework.security.acls.jdbc.BasicLookupStrategy.lookupPrimaryKeys(java.util.Map, java.util.Set, [Lorg.springframework.security.acls.sid.Sid;)
63 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.StubAclParent(java.lang.Long)
63 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.getEntries()
63 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.getId()
63 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.getObjectIdentity()
63 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.getOwner()
63 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.getParentAcl()
63 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.isEntriesInheriting()
63 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
63 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategy$StubAclParent.isSidLoaded([Lorg.springframework.security.acls.sid.Sid;)
63 - Declaração do método: org.springframework.security.acls.jdbc.AclCache.evictFromCache(java.io.Serializable)
63 - Declaração do método: org.springframework.security.acls.jdbc.AclCache.evictFromCache(org.springframework.security.acls.objectidentity.ObjectIdentity)
63 - Declaração do método: org.springframework.security.acls.jdbc.AclCache.getFromCache(org.springframework.security.acls.objectidentity.ObjectIdentity)
63 - Declaração do método: org.springframework.security.acls.jdbc.AclCache.getFromCache(java.io.Serializable)
63 - Declaração do método: org.springframework.security.acls.jdbc.AclCache.putInCache(org.springframework.security.acls.MutableAcl)
63 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclService.JdbcAclService(javax.sql.DataSource, org.springframework.security.acls.jdbc.LookupStrategy)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
64 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclService.findChildren(org.springframework.security.acls.objectidentity.ObjectIdentity)
Métodos invocados: 
org.springframework.security.acls.objectidentity.ObjectIdentity.getIdentifier()
org.springframework.security.acls.objectidentity.ObjectIdentity.getJavaType()
java.lang.Class.getName()
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, [Ljava.lang.Object;, org.springframework.jdbc.core.RowMapper)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getString(java.lang.String)
java.util.List.toArray([Ljava.lang.Object;)
65 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclService$1.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getString(java.lang.String)
66 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity, [Lorg.springframework.security.acls.sid.Sid;)
Métodos invocados: 
org.springframework.security.acls.jdbc.JdbcAclService.readAclsById([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;, [Lorg.springframework.security.acls.sid.Sid;)
java.util.Map.size()
java.util.Map.get(java.lang.Object)
67 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity)
Métodos invocados: 
org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity, [Lorg.springframework.security.acls.sid.Sid;)
68 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclService.readAclsById([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;)
Métodos invocados: 
org.springframework.security.acls.jdbc.JdbcAclService.readAclsById([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;, [Lorg.springframework.security.acls.sid.Sid;)
69 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclService.readAclsById([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;, [Lorg.springframework.security.acls.sid.Sid;)
Métodos invocados: 
org.springframework.security.acls.jdbc.LookupStrategy.readAclsById([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;, [Lorg.springframework.security.acls.sid.Sid;)
70 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCache.EhCacheBasedAclCache(net.sf.ehcache.Ehcache)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
71 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCache.evictFromCache(java.io.Serializable)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.getFromCache(java.io.Serializable)
org.springframework.security.acls.MutableAcl.getId()
net.sf.ehcache.Ehcache.remove(java.io.Serializable)
org.springframework.security.acls.Acl.getObjectIdentity()
net.sf.ehcache.Ehcache.remove(java.io.Serializable)
72 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCache.evictFromCache(org.springframework.security.acls.objectidentity.ObjectIdentity)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.getFromCache(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.MutableAcl.getId()
net.sf.ehcache.Ehcache.remove(java.io.Serializable)
org.springframework.security.acls.Acl.getObjectIdentity()
net.sf.ehcache.Ehcache.remove(java.io.Serializable)
73 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCache.getFromCache(org.springframework.security.acls.objectidentity.ObjectIdentity)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
net.sf.ehcache.Ehcache.get(java.io.Serializable)
net.sf.ehcache.Element.getValue()
74 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCache.getFromCache(java.io.Serializable)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
net.sf.ehcache.Ehcache.get(java.io.Serializable)
net.sf.ehcache.Element.getValue()
75 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCache.putInCache(org.springframework.security.acls.MutableAcl)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.Acl.getObjectIdentity()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.MutableAcl.getId()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.Acl.getParentAcl()
org.springframework.security.acls.Acl.getParentAcl()
org.springframework.security.acls.Acl.getParentAcl()
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.putInCache(org.springframework.security.acls.MutableAcl)
org.springframework.security.acls.Acl.getObjectIdentity()
net.sf.ehcache.Ehcache.put(net.sf.ehcache.Element)
org.springframework.security.acls.MutableAcl.getId()
net.sf.ehcache.Ehcache.put(net.sf.ehcache.Element)
76 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityImpl.ObjectIdentityImpl(java.lang.String, java.io.Serializable)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.Class.forName(java.lang.String)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
77 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityImpl.ObjectIdentityImpl(java.lang.Class, java.io.Serializable)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
78 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityImpl.ObjectIdentityImpl(java.lang.Object)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
79 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityImpl.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.acls.objectidentity.ObjectIdentityImpl.getIdentifier()
org.springframework.security.acls.objectidentity.ObjectIdentityImpl.getIdentifier()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.acls.objectidentity.ObjectIdentityImpl.getJavaType()
org.springframework.security.acls.objectidentity.ObjectIdentityImpl.getJavaType()
java.lang.Object.equals(java.lang.Object)
80 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityImpl.getIdentifier()
80 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityImpl.getJavaType()
80 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityImpl.hashCode()
Métodos invocados: 
java.lang.Object.hashCode()
java.lang.Object.hashCode()
81 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityImpl.toString()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
82 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityRetrievalStrategy.getObjectIdentity(java.lang.Object)
82 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentity.equals(java.lang.Object)
82 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentity.getIdentifier()
82 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentity.getJavaType()
82 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentity.hashCode()
82 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityRetrievalStrategyImpl.getObjectIdentity(java.lang.Object)
82 - Declaração do método: org.springframework.security.acls.sid.GrantedAuthoritySid.GrantedAuthoritySid(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
83 - Declaração do método: org.springframework.security.acls.sid.GrantedAuthoritySid.GrantedAuthoritySid(org.springframework.security.GrantedAuthority)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.GrantedAuthority.getAuthority()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.GrantedAuthority.getAuthority()
84 - Declaração do método: org.springframework.security.acls.sid.GrantedAuthoritySid.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.acls.sid.GrantedAuthoritySid.getGrantedAuthority()
org.springframework.security.acls.sid.GrantedAuthoritySid.getGrantedAuthority()
java.lang.String.equals(java.lang.Object)
85 - Declaração do método: org.springframework.security.acls.sid.GrantedAuthoritySid.hashCode()
Métodos invocados: 
org.springframework.security.acls.sid.GrantedAuthoritySid.getGrantedAuthority()
java.lang.String.hashCode()
86 - Declaração do método: org.springframework.security.acls.sid.GrantedAuthoritySid.getGrantedAuthority()
86 - Declaração do método: org.springframework.security.acls.sid.GrantedAuthoritySid.toString()
86 - Declaração do método: org.springframework.security.acls.sid.SidRetrievalStrategyImpl.getSids(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.Authentication.getAuthorities()
87 - Declaração do método: org.springframework.security.acls.sid.PrincipalSid.PrincipalSid(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
88 - Declaração do método: org.springframework.security.acls.sid.PrincipalSid.PrincipalSid(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.Authentication.getPrincipal()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.toString()
89 - Declaração do método: org.springframework.security.acls.sid.PrincipalSid.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.acls.sid.PrincipalSid.getPrincipal()
org.springframework.security.acls.sid.PrincipalSid.getPrincipal()
java.lang.String.equals(java.lang.Object)
90 - Declaração do método: org.springframework.security.acls.sid.PrincipalSid.hashCode()
Métodos invocados: 
org.springframework.security.acls.sid.PrincipalSid.getPrincipal()
java.lang.String.hashCode()
91 - Declaração do método: org.springframework.security.acls.sid.PrincipalSid.getPrincipal()
91 - Declaração do método: org.springframework.security.acls.sid.PrincipalSid.toString()
91 - Declaração do método: org.springframework.security.acls.sid.SidRetrievalStrategy.getSids(org.springframework.security.Authentication)
91 - Declaração do método: org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
91 - Declaração do método: org.springframework.security.acls.sid.Sid.hashCode()
91 - Declaração do método: org.springframework.security.afterinvocation.AclEntryAfterInvocationCollectionFilteringProvider.AclEntryAfterInvocationCollectionFilteringProvider(org.springframework.security.acls.AclService, [Lorg.springframework.security.acls.Permission;)
91 - Declaração do método: org.springframework.security.afterinvocation.AclEntryAfterInvocationCollectionFilteringProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.afterinvocation.AbstractAclProvider.supports(org.springframework.security.ConfigAttribute)
java.lang.Object.getClass()
java.lang.Class.isArray()
org.springframework.security.afterinvocation.Filterer.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.afterinvocation.AbstractAclProvider.getProcessDomainObjectClass()
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
org.springframework.security.afterinvocation.AbstractAclProvider.hasPermission(org.springframework.security.Authentication, java.lang.Object)
org.springframework.security.afterinvocation.Filterer.remove(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.afterinvocation.Filterer.getFilteredObject()
92 - Declaração do método: org.springframework.security.afterinvocation.AclEntryAfterInvocationProvider.AclEntryAfterInvocationProvider(org.springframework.security.acls.AclService, [Lorg.springframework.security.acls.Permission;)
92 - Declaração do método: org.springframework.security.afterinvocation.AclEntryAfterInvocationProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.afterinvocation.AbstractAclProvider.getProcessDomainObjectClass()
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.afterinvocation.AbstractAclProvider.supports(org.springframework.security.ConfigAttribute)
org.springframework.security.afterinvocation.AbstractAclProvider.hasPermission(org.springframework.security.Authentication, java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.security.Principal.getName()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
93 - Declaração do método: org.springframework.security.afterinvocation.AclEntryAfterInvocationProvider.setMessageSource(org.springframework.context.MessageSource)
93 - Declaração do método: org.springframework.security.afterinvocation.AbstractAclProvider.AbstractAclProvider(org.springframework.security.acls.AclService, java.lang.String, [Lorg.springframework.security.acls.Permission;)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
94 - Declaração do método: org.springframework.security.afterinvocation.AbstractAclProvider.getProcessDomainObjectClass()
94 - Declaração do método: org.springframework.security.afterinvocation.AbstractAclProvider.hasPermission(org.springframework.security.Authentication, java.lang.Object)
Métodos invocados: 
org.springframework.security.acls.objectidentity.ObjectIdentityRetrievalStrategy.getObjectIdentity(java.lang.Object)
org.springframework.security.acls.sid.SidRetrievalStrategy.getSids(org.springframework.security.Authentication)
org.springframework.security.acls.AclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity, [Lorg.springframework.security.acls.sid.Sid;)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
95 - Declaração do método: org.springframework.security.afterinvocation.AbstractAclProvider.setObjectIdentityRetrievalStrategy(org.springframework.security.acls.objectidentity.ObjectIdentityRetrievalStrategy)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
96 - Declaração do método: org.springframework.security.afterinvocation.AbstractAclProvider.setProcessConfigAttribute(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
97 - Declaração do método: org.springframework.security.afterinvocation.AbstractAclProvider.setProcessDomainObjectClass(java.lang.Class)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
98 - Declaração do método: org.springframework.security.afterinvocation.AbstractAclProvider.setSidRetrievalStrategy(org.springframework.security.acls.sid.SidRetrievalStrategy)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
99 - Declaração do método: org.springframework.security.afterinvocation.AbstractAclProvider.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
100 - Declaração do método: org.springframework.security.afterinvocation.AbstractAclProvider.supports(java.lang.Class)
100 - Declaração do método: org.springframework.security.vote.AclEntryVoter.AclEntryVoter(org.springframework.security.acls.AclService, java.lang.String, [Lorg.springframework.security.acls.Permission;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
101 - Declaração do método: org.springframework.security.vote.AclEntryVoter.getInternalMethod()
101 - Declaração do método: org.springframework.security.vote.AclEntryVoter.setInternalMethod(java.lang.String)
101 - Declaração do método: org.springframework.security.vote.AclEntryVoter.getProcessConfigAttribute()
101 - Declaração do método: org.springframework.security.vote.AclEntryVoter.setObjectIdentityRetrievalStrategy(org.springframework.security.acls.objectidentity.ObjectIdentityRetrievalStrategy)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
102 - Declaração do método: org.springframework.security.vote.AclEntryVoter.setSidRetrievalStrategy(org.springframework.security.acls.sid.SidRetrievalStrategy)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
103 - Declaração do método: org.springframework.security.vote.AclEntryVoter.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.security.vote.AclEntryVoter.getProcessConfigAttribute()
java.lang.String.equals(java.lang.Object)
104 - Declaração do método: org.springframework.security.vote.AclEntryVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.vote.AclEntryVoter.supports(org.springframework.security.ConfigAttribute)
org.springframework.security.vote.AbstractAclVoter.getDomainObjectInstance(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
java.lang.Object.getClass()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.springframework.security.acls.objectidentity.ObjectIdentityRetrievalStrategy.getObjectIdentity(java.lang.Object)
org.springframework.security.acls.sid.SidRetrievalStrategy.getSids(org.springframework.security.Authentication)
org.springframework.security.acls.AclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity, [Lorg.springframework.security.acls.sid.Sid;)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
105 - Declaração do método: org.springframework.security.acls.AclFormattingUtilsTests.testDemergePatternsParametersConstraints()
Métodos invocados: 
org.springframework.security.acls.AclFormattingUtils.demergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.AclFormattingUtils.demergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.AclFormattingUtils.demergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.AclFormattingUtils.demergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
106 - Declaração do método: org.springframework.security.acls.AclFormattingUtilsTests.testDemergePatterns()
Métodos invocados: 
org.springframework.security.acls.AclFormattingUtils.demergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acls.AclFormattingUtils.demergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acls.AclFormattingUtils.demergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
107 - Declaração do método: org.springframework.security.acls.AclFormattingUtilsTests.testMergePatternsParametersConstraints()
Métodos invocados: 
org.springframework.security.acls.AclFormattingUtils.mergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.AclFormattingUtils.mergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.AclFormattingUtils.mergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.AclFormattingUtils.mergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
108 - Declaração do método: org.springframework.security.acls.AclFormattingUtilsTests.testMergePatterns()
Métodos invocados: 
org.springframework.security.acls.AclFormattingUtils.mergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acls.AclFormattingUtils.mergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acls.AclFormattingUtils.mergePatterns(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
109 - Declaração do método: org.springframework.security.acls.AclFormattingUtilsTests.testBinaryPrints()
Métodos invocados: 
org.springframework.security.acls.AclFormattingUtils.printBinary(I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acls.AclFormattingUtils.printBinary(I, C)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.AclFormattingUtils.printBinary(I, C)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.AclFormattingUtils.printBinary(I, C)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
110 - Declaração do método: org.springframework.security.acls.domain.AclImplementationSecurityCheckTests.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
111 - Declaração do método: org.springframework.security.acls.domain.AclImplementationSecurityCheckTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
112 - Declaração do método: org.springframework.security.acls.domain.AclImplementationSecurityCheckTests.testSecurityCheckNoACEs()
Métodos invocados: 
org.springframework.security.Authentication.setAuthenticated(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
113 - Declaração do método: org.springframework.security.acls.domain.AclImplementationSecurityCheckTests.testSecurityCheckWithMultipleACEs()
Métodos invocados: 
org.springframework.security.Authentication.setAuthenticated(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
114 - Declaração do método: org.springframework.security.acls.domain.AclImplementationSecurityCheckTests.testSecurityCheckWithInheritableACEs()
Métodos invocados: 
org.springframework.security.Authentication.setAuthenticated(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.MutableAcl.setParent(org.springframework.security.acls.Acl)
org.springframework.security.acls.MutableAcl.setEntriesInheriting(Z)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.setEntriesInheriting(Z)
org.springframework.security.acls.MutableAcl.setParent(org.springframework.security.acls.Acl)
org.springframework.security.acls.MutableAcl.setParent(org.springframework.security.acls.Acl)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
115 - Declaração do método: org.springframework.security.acls.domain.AclImplementationSecurityCheckTests.testSecurityCheckPrincipalOwner()
Métodos invocados: 
org.springframework.security.Authentication.setAuthenticated(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.domain.AclAuthorizationStrategy.securityCheck(org.springframework.security.acls.Acl, I)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
116 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.setUp()
116 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
117 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.testConstructorsRejectNullParameters()
Métodos invocados: 
org.springframework.security.Authentication.setAuthenticated(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
118 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.testInsertAceRejectsNullParameters()
Métodos invocados: 
org.springframework.security.Authentication.setAuthenticated(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
119 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.testInsertAceAddsElementAtCorrectIndex()
Métodos invocados: 
org.springframework.security.Authentication.setAuthenticated(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.MutableAcl)
org.springframework.security.acls.MutableAcl.getEntries()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getAcl()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getSid()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.MutableAcl)
org.springframework.security.acls.MutableAcl.getEntries()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getAcl()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getSid()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getId()
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.MutableAcl)
org.springframework.security.acls.MutableAcl.getEntries()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getSid()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getSid()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getSid()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
120 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.testInsertAceFailsForInexistentElement()
Métodos invocados: 
org.springframework.security.Authentication.setAuthenticated(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.MutableAcl)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
121 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.testDeleteAceKeepsInitialOrdering()
Métodos invocados: 
org.springframework.security.Authentication.setAuthenticated(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.MutableAcl)
org.springframework.security.acls.MutableAcl.deleteAce(java.io.Serializable)
org.springframework.security.acls.MutableAcl.getEntries()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getSid()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getSid()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.MutableAcl)
org.springframework.security.acls.MutableAcl.deleteAce(java.io.Serializable)
org.springframework.security.acls.MutableAcl.getEntries()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getSid()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getSid()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.deleteAce(java.io.Serializable)
org.springframework.security.acls.MutableAcl.deleteAce(java.io.Serializable)
org.springframework.security.acls.MutableAcl.getEntries()
junit.framework.Assert.assertEquals(I, I)
122 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.testDeleteAceFailsForInexistentElement()
Métodos invocados: 
org.springframework.security.Authentication.setAuthenticated(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.acls.MutableAcl.deleteAce(java.io.Serializable)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
123 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.testIsGrantingRejectsEmptyParameters()
Métodos invocados: 
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
124 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.testIsGrantingGrantsAccessForAclWithNoParent()
Métodos invocados: 
org.springframework.security.Authentication.setAuthenticated(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
125 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.testIsGrantingGrantsAccessForInheritableAcls()
Métodos invocados: 
org.springframework.security.Authentication.setAuthenticated(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.acls.MutableAcl.setParent(org.springframework.security.acls.Acl)
org.springframework.security.acls.MutableAcl.setParent(org.springframework.security.acls.Acl)
org.springframework.security.acls.MutableAcl.setParent(org.springframework.security.acls.Acl)
org.springframework.security.acls.MutableAcl.setParent(org.springframework.security.acls.Acl)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
126 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.testUpdateAce()
Métodos invocados: 
org.springframework.security.Authentication.setAuthenticated(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.MutableAcl)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.updateAce(java.io.Serializable, org.springframework.security.acls.Permission)
org.springframework.security.acls.MutableAcl.updateAce(java.io.Serializable, org.springframework.security.acls.Permission)
org.springframework.security.acls.MutableAcl.updateAce(java.io.Serializable, org.springframework.security.acls.Permission)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
127 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.testUpdateAuditing()
Métodos invocados: 
org.springframework.security.Authentication.setAuthenticated(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.MutableAcl)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AuditableAccessControlEntry.isAuditFailure()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AuditableAccessControlEntry.isAuditFailure()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AuditableAccessControlEntry.isAuditSuccess()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AuditableAccessControlEntry.isAuditSuccess()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.AuditableAcl.updateAuditing(java.io.Serializable, Z, Z)
org.springframework.security.acls.AuditableAcl.updateAuditing(java.io.Serializable, Z, Z)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AuditableAccessControlEntry.isAuditFailure()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AuditableAccessControlEntry.isAuditFailure()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AuditableAccessControlEntry.isAuditSuccess()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AuditableAccessControlEntry.isAuditSuccess()
junit.framework.Assert.assertTrue(Z)
128 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.Authentication.setAuthenticated(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.MutableAcl)
org.springframework.security.acls.MutableAcl.getId()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.Acl.getObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.Acl.getOwner()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.Acl.getParentAcl()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.acls.Acl.isEntriesInheriting()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.MutableAcl.getEntries()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.MutableAcl.setParent(org.springframework.security.acls.Acl)
org.springframework.security.acls.Acl.getParentAcl()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.setEntriesInheriting(Z)
org.springframework.security.acls.Acl.isEntriesInheriting()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.OwnershipAcl.setOwner(org.springframework.security.acls.sid.Sid)
org.springframework.security.acls.Acl.getOwner()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
129 - Declaração do método: org.springframework.security.acls.domain.AclImplTests.testIsSidLoaded()
Métodos invocados: 
org.springframework.security.acls.Acl.isSidLoaded([Lorg.springframework.security.acls.sid.Sid;)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isSidLoaded([Lorg.springframework.security.acls.sid.Sid;)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isSidLoaded([Lorg.springframework.security.acls.sid.Sid;)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isSidLoaded([Lorg.springframework.security.acls.sid.Sid;)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isSidLoaded([Lorg.springframework.security.acls.sid.Sid;)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isSidLoaded([Lorg.springframework.security.acls.sid.Sid;)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isSidLoaded([Lorg.springframework.security.acls.sid.Sid;)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isSidLoaded([Lorg.springframework.security.acls.sid.Sid;)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.Acl.isSidLoaded([Lorg.springframework.security.acls.sid.Sid;)
junit.framework.Assert.assertFalse(Z)
130 - Declaração do método: org.springframework.security.acls.domain.AclImplTests$MockAclService.createAcl(org.springframework.security.acls.objectidentity.ObjectIdentity)
130 - Declaração do método: org.springframework.security.acls.domain.AclImplTests$MockAclService.deleteAcl(org.springframework.security.acls.objectidentity.ObjectIdentity, Z)
130 - Declaração do método: org.springframework.security.acls.domain.AclImplTests$MockAclService.updateAcl(org.springframework.security.acls.MutableAcl)
Métodos invocados: 
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.util.FieldUtils.getField(java.lang.Class, java.lang.String)
java.lang.reflect.AccessibleObject.setAccessible(Z)
java.lang.reflect.Field.get(java.lang.Object)
java.util.List.clear()
org.springframework.security.acls.AccessControlEntry.getAcl()
org.springframework.security.acls.AccessControlEntry.getSid()
org.springframework.security.acls.AccessControlEntry.getPermission()
org.springframework.security.acls.AccessControlEntry.isGranting()
org.springframework.security.acls.AuditableAccessControlEntry.isAuditSuccess()
org.springframework.security.acls.AuditableAccessControlEntry.isAuditFailure()
java.util.List.add(java.lang.Object)
java.lang.Throwable.printStackTrace()
131 - Declaração do método: org.springframework.security.acls.domain.AclImplTests$MockAclService.findChildren(org.springframework.security.acls.objectidentity.ObjectIdentity)
131 - Declaração do método: org.springframework.security.acls.domain.AclImplTests$MockAclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity)
131 - Declaração do método: org.springframework.security.acls.domain.AclImplTests$MockAclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity, [Lorg.springframework.security.acls.sid.Sid;)
131 - Declaração do método: org.springframework.security.acls.domain.AclImplTests$MockAclService.readAclsById([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;)
131 - Declaração do método: org.springframework.security.acls.domain.AclImplTests$MockAclService.readAclsById([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;, [Lorg.springframework.security.acls.sid.Sid;)
131 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests.setUp()
Métodos invocados: 
java.lang.System.setOut(java.io.PrintStream)
132 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests.tearDown()
Métodos invocados: 
java.lang.System.setOut(java.io.PrintStream)
133 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests.testLoggingTests()
Métodos invocados: 
org.springframework.security.acls.domain.ConsoleAuditLogger.logIfNeeded(Z, org.springframework.security.acls.AccessControlEntry)
java.io.ByteArrayOutputStream.size()
junit.framework.Assert.assertTrue(Z)
java.io.ByteArrayOutputStream.reset()
org.springframework.security.acls.domain.ConsoleAuditLogger.logIfNeeded(Z, org.springframework.security.acls.AccessControlEntry)
java.io.ByteArrayOutputStream.size()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.domain.AuditLoggerTests$MockAccessControlEntryImpl.setAuditSuccess(Z)
java.io.ByteArrayOutputStream.reset()
org.springframework.security.acls.domain.ConsoleAuditLogger.logIfNeeded(Z, org.springframework.security.acls.AccessControlEntry)
java.io.ByteArrayOutputStream.toString()
java.lang.String.length()
junit.framework.Assert.assertTrue(Z)
java.io.ByteArrayOutputStream.toString()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.domain.AuditLoggerTests$MockAccessControlEntryImpl.setAuditFailure(Z)
java.io.ByteArrayOutputStream.reset()
org.springframework.security.acls.domain.ConsoleAuditLogger.logIfNeeded(Z, org.springframework.security.acls.AccessControlEntry)
java.io.ByteArrayOutputStream.toString()
java.lang.String.length()
junit.framework.Assert.assertTrue(Z)
java.io.ByteArrayOutputStream.toString()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.io.ByteArrayOutputStream.reset()
org.springframework.security.acls.domain.ConsoleAuditLogger.logIfNeeded(Z, org.springframework.security.acls.AccessControlEntry)
java.io.ByteArrayOutputStream.size()
junit.framework.Assert.assertTrue(Z)
134 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests$MockAccessControlEntryImpl.isAuditFailure()
134 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests$MockAccessControlEntryImpl.isAuditSuccess()
134 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests$MockAccessControlEntryImpl.getAcl()
134 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests$MockAccessControlEntryImpl.getId()
134 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests$MockAccessControlEntryImpl.getPermission()
134 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests$MockAccessControlEntryImpl.getSid()
134 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests$MockAccessControlEntryImpl.isGranting()
134 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests$MockAccessControlEntryImpl.setAuditFailure(Z)
134 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests$MockAccessControlEntryImpl.setAuditSuccess(Z)
134 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests$MockAccessControlEntry.getAcl()
134 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests$MockAccessControlEntry.getId()
134 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests$MockAccessControlEntry.getPermission()
134 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests$MockAccessControlEntry.getSid()
134 - Declaração do método: org.springframework.security.acls.domain.AuditLoggerTests$MockAccessControlEntry.isGranting()
134 - Declaração do método: org.springframework.security.acls.domain.PermissionTests.expectedIntegerValues()
Métodos invocados: 
org.springframework.security.acls.Permission.getMask()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.Permission.getMask()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.getMask()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.getMask()
org.junit.Assert.assertEquals(J, J)
135 - Declaração do método: org.springframework.security.acls.domain.PermissionTests.fromInteger()
Métodos invocados: 
org.springframework.security.acls.domain.BasePermission.buildFromMask(I)
java.lang.Object.toString()
java.io.PrintStream.println(java.lang.String)
org.springframework.security.acls.domain.BasePermission.buildFromMask(I)
java.lang.Object.toString()
java.io.PrintStream.println(java.lang.String)
136 - Declaração do método: org.springframework.security.acls.domain.PermissionTests.stringConversion()
Métodos invocados: 
java.lang.Object.toString()
java.io.PrintStream.println(java.lang.String)
java.lang.Object.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Object.toString()
java.io.PrintStream.println(java.lang.String)
java.lang.Object.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.toString()
java.io.PrintStream.println(java.lang.String)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.toString()
java.io.PrintStream.println(java.lang.String)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.toString()
java.io.PrintStream.println(java.lang.String)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.clear(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.toString()
java.io.PrintStream.println(java.lang.String)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.clear(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.clear(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.clear(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.toString()
java.io.PrintStream.println(java.lang.String)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.set(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.clear(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.clear(org.springframework.security.acls.Permission)
org.springframework.security.acls.domain.CumulativePermission.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
137 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryTests.testConstructorRequiredFields()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
138 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryTests.testAccessControlEntryImplGetters()
Métodos invocados: 
org.springframework.security.acls.AccessControlEntry.getId()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.AccessControlEntry.getAcl()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.AccessControlEntry.getSid()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.AccessControlEntry.isGranting()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.AuditableAccessControlEntry.isAuditFailure()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.AuditableAccessControlEntry.isAuditSuccess()
junit.framework.Assert.assertTrue(Z)
139 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryTests.testEquals()
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
java.lang.Object.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
java.lang.Object.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.lang.Object.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.lang.Object.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
java.lang.Object.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
java.lang.Object.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
java.lang.Object.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
java.lang.Object.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
java.lang.Object.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
java.lang.Object.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
140 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryTests$MockAcl.getEntries()
140 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryTests$MockAcl.getObjectIdentity()
140 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryTests$MockAcl.getOwner()
140 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryTests$MockAcl.getParentAcl()
140 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryTests$MockAcl.isEntriesInheriting()
140 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryTests$MockAcl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
140 - Declaração do método: org.springframework.security.acls.domain.AccessControlEntryTests$MockAcl.isSidLoaded([Lorg.springframework.security.acls.sid.Sid;)
140 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclServiceTests.getConfigLocations()
140 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclServiceTests.setJdbcMutableAclService(org.springframework.security.acls.jdbc.JdbcMutableAclService)
140 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclServiceTests.setAclCache(org.springframework.security.acls.jdbc.AclCache)
140 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclServiceTests.setLookupStrategy(org.springframework.security.acls.jdbc.LookupStrategy)
140 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclServiceTests.onTearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
141 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclServiceTests.testLifecycle()
Métodos invocados: 
org.springframework.test.AbstractTransactionalDataSourceSpringContextTests.setComplete()
org.springframework.security.Authentication.setAuthenticated(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.MutableAcl.setParent(org.springframework.security.acls.Acl)
org.springframework.security.acls.MutableAcl.setParent(org.springframework.security.acls.Acl)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.MutableAcl)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.MutableAcl)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.MutableAcl)
org.springframework.security.acls.jdbc.JdbcAclService.readAclsById([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;)
java.util.Map.size()
junit.framework.Assert.assertEquals(I, I)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
org.springframework.security.acls.MutableAcl.getId()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.MutableAcl.getId()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.MutableAcl.getId()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.Acl.getParentAcl()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.acls.Acl.getParentAcl()
org.springframework.security.acls.Acl.getObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.Acl.getParentAcl()
org.springframework.security.acls.Acl.getObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.MutableAcl.getEntries()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.MutableAcl.getEntries()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.MutableAcl.setEntriesInheriting(Z)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.MutableAcl)
org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.Acl.isEntriesInheriting()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.MutableAcl)
org.springframework.security.acls.jdbc.JdbcAclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.MutableAcl.getEntries()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.MutableAcl.getEntries()
java.io.PrintStream.println(java.lang.Object)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.Permission.getMask()
org.springframework.security.acls.AccessControlEntry.getPermission()
org.springframework.security.acls.Permission.getMask()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.AccessControlEntry.getSid()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.AccessControlEntry.isGranting()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.AccessControlEntry.getId()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.AccessControlEntry.getId()
org.springframework.security.acls.MutableAcl.deleteAce(java.io.Serializable)
org.springframework.security.acls.jdbc.JdbcMutableAclService.updateAcl(org.springframework.security.acls.MutableAcl)
org.springframework.security.acls.MutableAcl.getEntries()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.context.SecurityContextHolder.clearContext()
142 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclServiceTests.testConstructorRejectsNullParameters()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.test.AbstractTransactionalDataSourceSpringContextTests.getJdbcTemplate()
org.springframework.jdbc.support.JdbcAccessor.getDataSource()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.test.AbstractTransactionalDataSourceSpringContextTests.getJdbcTemplate()
org.springframework.jdbc.support.JdbcAccessor.getDataSource()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
143 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclServiceTests.testCreateAclRejectsNullParameter()
Métodos invocados: 
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.objectidentity.ObjectIdentity)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
144 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclServiceTests.testCreateAclForADuplicateDomainObject()
Métodos invocados: 
org.springframework.security.acls.jdbc.JdbcMutableAclService.createAcl(org.springframework.security.acls.objectidentity.ObjectIdentity)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
145 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclServiceTests.testDeleteAclRejectsNullParameters()
Métodos invocados: 
org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteAcl(org.springframework.security.acls.objectidentity.ObjectIdentity, Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
146 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclServiceTests.testDeleteAclWithChildrenThrowsException()
Métodos invocados: 
org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteAcl(org.springframework.security.acls.objectidentity.ObjectIdentity, Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
147 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclServiceTests.testDeleteAllAclsRemovesAclClassRecord()
Métodos invocados: 
org.springframework.security.Authentication.setAuthenticated(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteAcl(org.springframework.security.acls.objectidentity.ObjectIdentity, Z)
org.springframework.test.AbstractTransactionalDataSourceSpringContextTests.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String, [Ljava.lang.Object;)
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
148 - Declaração do método: org.springframework.security.acls.jdbc.JdbcAclServiceTests.testDeleteAclRemovesRowsFromDatabase()
Métodos invocados: 
org.springframework.security.Authentication.setAuthenticated(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.acls.jdbc.JdbcMutableAclService.deleteAcl(org.springframework.security.acls.objectidentity.ObjectIdentity, Z)
org.springframework.test.AbstractTransactionalDataSourceSpringContextTests.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String, [Ljava.lang.Object;)
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.test.AbstractTransactionalDataSourceSpringContextTests.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String, [Ljava.lang.Object;)
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.test.AbstractTransactionalDataSourceSpringContextTests.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.test.AbstractTransactionalDataSourceSpringContextTests.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String, [Ljava.lang.Object;)
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.jdbc.AclCache.getFromCache(org.springframework.security.acls.objectidentity.ObjectIdentity)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.acls.jdbc.AclCache.getFromCache(java.io.Serializable)
junit.framework.Assert.assertNull(java.lang.Object)
149 - Declaração do método: org.springframework.security.acls.jdbc.DatabaseSeeder.DatabaseSeeder(javax.sql.DataSource, org.springframework.core.io.Resource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.core.io.InputStreamSource.getInputStream()
org.springframework.util.FileCopyUtils.copyToByteArray(java.io.InputStream)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
150 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.initCacheManaer()
Métodos invocados: 
net.sf.ehcache.CacheManager.addCache(net.sf.ehcache.Cache)
151 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.shutdownCacheManager()
Métodos invocados: 
net.sf.ehcache.CacheManager.removalAll()
net.sf.ehcache.CacheManager.shutdown()
152 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.clearContext()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
153 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.getCache()
Métodos invocados: 
net.sf.ehcache.CacheManager.getCache(java.lang.String)
net.sf.ehcache.Ehcache.removeAll()
154 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.constructorRejectsNullParameters()
Métodos invocados: 
org.junit.Assert.fail(java.lang.String)
155 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.methodsRejectNullParameters()
Métodos invocados: 
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.evictFromCache(java.io.Serializable)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.evictFromCache(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.getFromCache(java.io.Serializable)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.getFromCache(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.putInCache(org.springframework.security.acls.MutableAcl)
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
156 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.cacheOperationsAclWithoutParent()
Métodos invocados: 
org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.getCache()
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.putInCache(org.springframework.security.acls.MutableAcl)
net.sf.ehcache.Ehcache.getSize()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.getFromCache(java.io.Serializable)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.getFromCache(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.putInCache(org.springframework.security.acls.MutableAcl)
net.sf.ehcache.Ehcache.getSize()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.evictFromCache(java.io.Serializable)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.evictFromCache(org.springframework.security.acls.objectidentity.ObjectIdentity)
net.sf.ehcache.Ehcache.getSize()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.evictFromCache(java.io.Serializable)
net.sf.ehcache.Ehcache.getSize()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.getFromCache(java.io.Serializable)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.getFromCache(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.evictFromCache(org.springframework.security.acls.objectidentity.ObjectIdentity)
net.sf.ehcache.Ehcache.getSize()
org.junit.Assert.assertEquals(J, J)
157 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.cacheOperationsAclWithParent()
Métodos invocados: 
org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests.getCache()
org.springframework.security.Authentication.setAuthenticated(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.acls.MutableAcl.setParent(org.springframework.security.acls.Acl)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.putInCache(org.springframework.security.acls.MutableAcl)
net.sf.ehcache.Ehcache.getSize()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.getFromCache(java.io.Serializable)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.getFromCache(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.getFromCache(java.io.Serializable)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.jdbc.EhCacheBasedAclCache.getFromCache(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
158 - Declaração do método: org.springframework.security.acls.jdbc.EhCacheBasedAclCacheTests$MockEhcache.MockEhcache()
158 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.initCacheManaer()
Métodos invocados: 
net.sf.ehcache.CacheManager.addCache(net.sf.ehcache.Cache)
159 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.createDatabase()
Métodos invocados: 
org.springframework.core.io.InputStreamSource.getInputStream()
org.springframework.util.FileCopyUtils.copyToByteArray(java.io.InputStream)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
160 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.dropDatabase()
Métodos invocados: 
org.springframework.security.TestDataSource.destroy()
161 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.shutdownCacheManager()
Métodos invocados: 
net.sf.ehcache.CacheManager.removalAll()
net.sf.ehcache.CacheManager.shutdown()
162 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.populateDatabase()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
163 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.initializeBeans()
Métodos invocados: 
org.springframework.security.acls.jdbc.BasicLookupStrategyTests.getCache()
164 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.emptyDatabase()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
165 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.getCache()
Métodos invocados: 
net.sf.ehcache.CacheManager.getCache(java.lang.String)
net.sf.ehcache.Ehcache.removeAll()
166 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.testAclsRetrievalWithDefaultBatchSize()
Métodos invocados: 
org.springframework.security.acls.jdbc.LookupStrategy.readAclsById([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;, [Lorg.springframework.security.acls.sid.Sid;)
org.springframework.security.acls.jdbc.BasicLookupStrategyTests.checkEntries(org.springframework.security.acls.objectidentity.ObjectIdentity, org.springframework.security.acls.objectidentity.ObjectIdentity, org.springframework.security.acls.objectidentity.ObjectIdentity, java.util.Map)
167 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.testAclsRetrievalFromCacheOnly()
Métodos invocados: 
org.springframework.security.acls.jdbc.LookupStrategy.readAclsById([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;, [Lorg.springframework.security.acls.sid.Sid;)
org.springframework.security.acls.jdbc.BasicLookupStrategyTests.emptyDatabase()
org.springframework.security.acls.jdbc.LookupStrategy.readAclsById([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;, [Lorg.springframework.security.acls.sid.Sid;)
org.springframework.security.acls.jdbc.BasicLookupStrategyTests.checkEntries(org.springframework.security.acls.objectidentity.ObjectIdentity, org.springframework.security.acls.objectidentity.ObjectIdentity, org.springframework.security.acls.objectidentity.ObjectIdentity, java.util.Map)
168 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.testAclsRetrievalWithCustomBatchSize()
Métodos invocados: 
org.springframework.security.acls.jdbc.BasicLookupStrategy.setBatchSize(I)
org.springframework.security.acls.jdbc.LookupStrategy.readAclsById([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;, [Lorg.springframework.security.acls.sid.Sid;)
org.springframework.security.acls.jdbc.BasicLookupStrategyTests.checkEntries(org.springframework.security.acls.objectidentity.ObjectIdentity, org.springframework.security.acls.objectidentity.ObjectIdentity, org.springframework.security.acls.objectidentity.ObjectIdentity, java.util.Map)
169 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.checkEntries(org.springframework.security.acls.objectidentity.ObjectIdentity, org.springframework.security.acls.objectidentity.ObjectIdentity, org.springframework.security.acls.objectidentity.ObjectIdentity, java.util.Map)
Métodos invocados: 
java.util.Map.size()
junit.framework.Assert.assertEquals(I, I)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
org.springframework.security.acls.MutableAcl.getId()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.MutableAcl.getId()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.MutableAcl.getId()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acls.Acl.getParentAcl()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.acls.Acl.getParentAcl()
org.springframework.security.acls.Acl.getObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.Acl.getParentAcl()
org.springframework.security.acls.Acl.getObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.MutableAcl.getEntries()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.MutableAcl.getEntries()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.Acl.getObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.Acl.getObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.Acl.getObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.Acl.isEntriesInheriting()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.MutableAcl.getId()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.Acl.getOwner()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getId()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getSid()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AuditableAccessControlEntry.isAuditFailure()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AuditableAccessControlEntry.isAuditSuccess()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.isGranting()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getId()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getSid()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AuditableAccessControlEntry.isAuditFailure()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AuditableAccessControlEntry.isAuditSuccess()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.isGranting()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.Acl.isEntriesInheriting()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.MutableAcl.getId()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.Acl.getOwner()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getId()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getSid()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AuditableAccessControlEntry.isAuditFailure()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AuditableAccessControlEntry.isAuditSuccess()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.isGranting()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.Acl.isEntriesInheriting()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.MutableAcl.getId()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.Acl.getOwner()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getId()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getPermission()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getSid()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AuditableAccessControlEntry.isAuditFailure()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AuditableAccessControlEntry.isAuditSuccess()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.isGranting()
junit.framework.Assert.assertFalse(Z)
170 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.testAllParentsAreRetrievedWhenChildIsLoaded()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.acls.jdbc.LookupStrategy.readAclsById([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;, [Lorg.springframework.security.acls.sid.Sid;)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.util.Map.get(java.lang.Object)
org.springframework.security.acls.Acl.getObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.util.Map.get(java.lang.Object)
org.springframework.security.acls.Acl.getObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.util.Map.get(java.lang.Object)
org.springframework.security.acls.Acl.getObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertNull(java.lang.Object)
171 - Declaração do método: org.springframework.security.acls.jdbc.BasicLookupStrategyTests.testAclsWithDifferentSerializableTypesAsObjectIdentities()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.acls.jdbc.LookupStrategy.readAclsById([Lorg.springframework.security.acls.objectidentity.ObjectIdentity;, [Lorg.springframework.security.acls.sid.Sid;)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
172 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityRetrievalStrategyImplTests.testObjectIdentityCreation()
Métodos invocados: 
org.springframework.security.acls.objectidentity.ObjectIdentityRetrievalStrategyImplTests$MockIdDomainObject.setId(java.lang.Object)
org.springframework.security.acls.objectidentity.ObjectIdentityRetrievalStrategy.getObjectIdentity(java.lang.Object)
junit.framework.Assert.assertNotNull(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
173 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityRetrievalStrategyImplTests$MockIdDomainObject.getId()
173 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityRetrievalStrategyImplTests$MockIdDomainObject.setId(java.lang.Object)
173 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityTests.testConstructorsRequiredFields()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
174 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityTests.testGetIdMethodConstraints()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.objectidentity.ObjectIdentityTests$MockIdDomainObject.setId(java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.objectidentity.ObjectIdentityTests$MockIdDomainObject.setId(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
175 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityTests.testConstructorInvalidClassParameter()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
176 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityTests.testEquals()
Métodos invocados: 
org.springframework.security.acls.objectidentity.ObjectIdentityTests$MockIdDomainObject.setId(java.lang.Object)
junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)
org.springframework.security.acls.objectidentity.ObjectIdentity.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.objectidentity.ObjectIdentity.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.objectidentity.ObjectIdentity.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.objectidentity.ObjectIdentity.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.objectidentity.ObjectIdentityImpl.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.objectidentity.ObjectIdentityImpl.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
177 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityTests.testHashCode()
Métodos invocados: 
org.springframework.security.acls.objectidentity.ObjectIdentityImpl.hashCode()
org.springframework.security.acls.objectidentity.ObjectIdentity.hashCode()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acls.objectidentity.ObjectIdentityImpl.hashCode()
org.springframework.security.acls.objectidentity.ObjectIdentity.hashCode()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.objectidentity.ObjectIdentityImpl.hashCode()
org.springframework.security.acls.objectidentity.ObjectIdentity.hashCode()
junit.framework.Assert.assertTrue(Z)
178 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityTests.testGetters()
Métodos invocados: 
org.springframework.security.acls.objectidentity.ObjectIdentity.getIdentifier()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acls.objectidentity.ObjectIdentity.getJavaType()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
179 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityTests$MockIdDomainObject.getId()
179 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityTests$MockIdDomainObject.setId(java.lang.Object)
179 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityTests$MockOtherIdDomainObject.getId()
179 - Declaração do método: org.springframework.security.acls.objectidentity.ObjectIdentityTests$MockOtherIdDomainObject.setId(java.lang.Object)
179 - Declaração do método: org.springframework.security.acls.sid.SidRetrievalStrategyTests.testSidsRetrieval()
Métodos invocados: 
org.springframework.security.acls.sid.SidRetrievalStrategy.getSids(org.springframework.security.Authentication)
junit.framework.Assert.assertNotNull(java.lang.Object)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertNotNull(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.sid.PrincipalSid.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acls.sid.GrantedAuthoritySid.getGrantedAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acls.sid.GrantedAuthoritySid.getGrantedAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acls.sid.GrantedAuthoritySid.getGrantedAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
180 - Declaração do método: org.springframework.security.acls.sid.SidTests.testPrincipalSidConstructorsRequiredFields()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
181 - Declaração do método: org.springframework.security.acls.sid.SidTests.testGrantedAuthoritySidConstructorsRequiredFields()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
182 - Declaração do método: org.springframework.security.acls.sid.SidTests.testPrincipalSidEquals()
Métodos invocados: 
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
183 - Declaração do método: org.springframework.security.acls.sid.SidTests.testGrantedAuthoritySidEquals()
Métodos invocados: 
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
184 - Declaração do método: org.springframework.security.acls.sid.SidTests.testPrincipalSidHashCode()
Métodos invocados: 
org.springframework.security.acls.sid.Sid.hashCode()
java.lang.String.hashCode()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.sid.Sid.hashCode()
org.springframework.security.acls.sid.PrincipalSid.hashCode()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.sid.Sid.hashCode()
org.springframework.security.acls.sid.PrincipalSid.hashCode()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.sid.Sid.hashCode()
org.springframework.security.acls.sid.PrincipalSid.hashCode()
junit.framework.Assert.assertTrue(Z)
185 - Declaração do método: org.springframework.security.acls.sid.SidTests.testGrantedAuthoritySidHashCode()
Métodos invocados: 
org.springframework.security.acls.sid.Sid.hashCode()
java.lang.String.hashCode()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.sid.Sid.hashCode()
org.springframework.security.acls.sid.GrantedAuthoritySid.hashCode()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.sid.Sid.hashCode()
org.springframework.security.acls.sid.GrantedAuthoritySid.hashCode()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.sid.Sid.hashCode()
org.springframework.security.acls.sid.GrantedAuthoritySid.hashCode()
junit.framework.Assert.assertTrue(Z)
186 - Declaração do método: org.springframework.security.acls.sid.SidTests.testGetters()
Métodos invocados: 
org.springframework.security.acls.sid.PrincipalSid.getPrincipal()
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.sid.PrincipalSid.getPrincipal()
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acls.sid.GrantedAuthoritySid.getGrantedAuthority()
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acls.sid.GrantedAuthoritySid.getGrantedAuthority()
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
187 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.authenticate(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Throwable.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.toString()
org.springframework.security.Authentication.getCredentials()
java.lang.Object.toString()
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.Authentication.getPrincipal()
188 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.authenticate(java.lang.String, [B)
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.authenticate(java.lang.String, java.lang.String)
189 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.authenticate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
189 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.authenticate([Ljava.security.cert.X509Certificate;)
189 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.getAppContextLocation()
189 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.getKey()
189 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.getName()
189 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.getPassword(java.lang.String)
189 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.getPrincipal(java.lang.String)
189 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.hasRole(java.security.Principal, java.lang.String)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.logging.Log.warn(java.lang.Object)
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.isUserInRole(java.lang.String)
190 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.setAppContextLocation(java.lang.String)
190 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.setKey(java.lang.String)
190 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.start()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.start(Z)
191 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.start(Z)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.System.getProperty(java.lang.String)
java.io.File.exists()
java.io.File.toString()
java.io.File.getAbsolutePath()
org.springframework.context.support.AbstractApplicationContext.getBeansOfType(java.lang.Class, Z, Z)
java.util.Map.size()
java.util.Map.keySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map.get(java.lang.Object)
org.apache.commons.logging.Log.info(java.lang.Object)
192 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.startForTest()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.start(Z)
193 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.CatalinaSpringSecurityUserRealmTests()
193 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.CatalinaSpringSecurityUserRealmTests(java.lang.String)
193 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
194 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.makeAdapter(java.lang.String)
Métodos invocados: 
java.lang.Thread.currentThread()
java.lang.Thread.getContextClassLoader()
java.lang.ClassLoader.getResource(java.lang.String)
java.net.URL.getFile()
java.io.File.getParentFile()
java.io.File.getAbsolutePath()
java.lang.System.setProperty(java.lang.String, java.lang.String)
java.lang.System.getProperty(java.lang.String)
java.io.PrintStream.println(java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.setKey(java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.startForTest()
195 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.setUp()
195 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testAdapterAbortsIfAppContextDoesNotContainAnAuthenticationBean()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.makeAdapter(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
196 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testAdapterAbortsIfNoAppContextSpecified()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.setKey(java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.startForTest()
junit.framework.Assert.fail(java.lang.String)
org.apache.catalina.LifecycleException.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.startForTest()
junit.framework.Assert.fail(java.lang.String)
org.apache.catalina.LifecycleException.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
197 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testAdapterAbortsIfNoKeySpecified()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.startForTest()
junit.framework.Assert.fail(java.lang.String)
org.apache.catalina.LifecycleException.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.setKey(java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.startForTest()
junit.framework.Assert.fail(java.lang.String)
org.apache.catalina.LifecycleException.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
198 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testAdapterAbortsWithIncorrectApplicationContextLocation()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.setKey(java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.startForTest()
junit.framework.Assert.fail(java.lang.String)
org.apache.catalina.LifecycleException.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(Z)
199 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testAdapterIdentifiesItself()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.getName()
java.lang.String.lastIndexOf(java.lang.String)
junit.framework.Assert.assertTrue(Z)
200 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testAdapterStartsUpSuccess()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.makeAdapter(java.lang.String)
junit.framework.Assert.assertTrue(Z)
201 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testAuthenticateManyParamsReturnsNull()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.authenticate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
202 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testAuthenticateX509ReturnsNull()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.authenticate([Ljava.security.cert.X509Certificate;)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
203 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testAuthenticationFailsForIncorrectPassword()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.makeAdapter(java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.authenticate(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
204 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testAuthenticationFailsForIncorrectUserName()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.makeAdapter(java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.authenticate(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
205 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testAuthenticationUsingByteArrayForCredentials()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.makeAdapter(java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.authenticate(java.lang.String, [B)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.lang.String.hashCode()
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
206 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testAuthenticationUsingStringForCredentials()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.makeAdapter(java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.authenticate(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.lang.String.hashCode()
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
207 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testAuthenticationWithNullPasswordHandledGracefully()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.makeAdapter(java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.authenticate(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
208 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testAuthenticationWithNullUserNameHandledGracefully()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.makeAdapter(java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.authenticate(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
209 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testGetPasswordReturnsNull()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.getPassword(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
210 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testGetPrincipalReturnsNull()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.getPrincipal(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
211 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testGetters()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.setKey(java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.getKey()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.getAppContextLocation()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
212 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testHasRoleWithANullPrincipalFails()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.hasRole(java.security.Principal, java.lang.String)
junit.framework.Assert.assertTrue(Z)
213 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testHasRoleWithAPrincipalTheAdapterDidNotCreateFails()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.hasRole(java.security.Principal, java.lang.String)
junit.framework.Assert.assertTrue(Z)
214 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests$1.getName()
214 - Declaração do método: org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealmTests.testHasRoleWithPrincipalAcegiUserToken()
Métodos invocados: 
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.hasRole(java.security.Principal, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.hasRole(java.security.Principal, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.catalina.CatalinaSpringSecurityUserRealm.hasRole(java.security.Principal, java.lang.String)
junit.framework.Assert.assertTrue(Z)
215 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.getIdentity()
215 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.getRoleSets()
Métodos invocados: 
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
org.jboss.security.SimpleGroup.addMember(java.security.Principal)
216 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.getUsernameAndPassword()
Métodos invocados: 
javax.security.auth.callback.CallbackHandler.handle([Ljavax.security.auth.callback.Callback;)
javax.security.auth.callback.NameCallback.getName()
javax.security.auth.callback.PasswordCallback.getPassword()
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
javax.security.auth.callback.PasswordCallback.clearPassword()
java.lang.Throwable.toString()
javax.security.auth.callback.UnsupportedCallbackException.getCallback()
217 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
Métodos invocados: 
org.jboss.logging.Logger.isInfoEnabled()
org.jboss.logging.Logger.info(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.Thread.currentThread()
java.lang.Thread.getContextClassLoader()
java.lang.ClassLoader.getResource(java.lang.String)
org.jboss.logging.Logger.isInfoEnabled()
org.jboss.logging.Logger.info(java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.jboss.logging.Logger.isInfoEnabled()
org.jboss.logging.Logger.info(java.lang.Object)
org.jboss.logging.Logger.isInfoEnabled()
org.jboss.logging.Logger.debug(java.lang.Object)
org.springframework.beans.factory.access.SingletonBeanFactoryLocator.getInstance()
org.springframework.beans.factory.access.BeanFactoryLocator.useBeanFactory(java.lang.String)
org.springframework.beans.factory.access.BeanFactoryReference.getFactory()
org.jboss.logging.Logger.isInfoEnabled()
org.jboss.logging.Logger.info(java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class, Z, Z)
org.jboss.logging.Logger.isInfoEnabled()
org.jboss.logging.Logger.info(java.lang.Object)
java.util.Map.size()
java.util.Map.keySet()
java.util.Set.iterator()
java.util.Iterator.next()
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
org.jboss.logging.Logger.isInfoEnabled()
org.jboss.logging.Logger.info(java.lang.Object)
218 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.login()
Métodos invocados: 
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.getUsernameAndPassword()
org.jboss.logging.Logger.trace(java.lang.Object)
org.jboss.logging.Logger.isDebugEnabled()
org.jboss.logging.Logger.debug(java.lang.Object)
org.jboss.logging.Logger.debug(java.lang.Object)
org.jboss.logging.Logger.isDebugEnabled()
org.jboss.logging.Logger.debug(java.lang.Object)
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
org.jboss.logging.Logger.isDebugEnabled()
org.jboss.logging.Logger.debug(java.lang.Object)
org.jboss.logging.Logger.isDebugEnabled()
org.jboss.logging.Logger.debug(java.lang.Object)
org.jboss.logging.Logger.isDebugEnabled()
org.jboss.logging.Logger.debug(java.lang.Object)
org.jboss.logging.Logger.isDebugEnabled()
org.jboss.logging.Logger.debug(java.lang.Object)
org.jboss.logging.Logger.debug(java.lang.Object)
java.security.Principal.getName()
org.springframework.security.Authentication.getCredentials()
java.lang.Object.toString()
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.Authentication.getPrincipal()
org.jboss.security.auth.spi.AbstractServerLoginModule.getUseFirstPass()
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
org.jboss.logging.Logger.trace(java.lang.Object)
219 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilter.destroy()
219 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.adapters.jboss.JbossIntegrationFilter.extractFromContainer(javax.servlet.ServletRequest)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
220 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilter.extractFromContainer(javax.servlet.ServletRequest)
Métodos invocados: 
org.springframework.security.adapters.jboss.JbossIntegrationFilter.getLookupContext()
org.apache.commons.logging.Log.isWarnEnabled()
org.apache.commons.logging.Log.warn(java.lang.Object)
javax.naming.Context.lookup(java.lang.String)
org.apache.commons.logging.Log.isWarnEnabled()
java.lang.Throwable.getLocalizedMessage()
org.apache.commons.logging.Log.warn(java.lang.Object)
javax.security.auth.Subject.getPrincipals()
javax.security.auth.Subject.getPrincipals()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
221 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilter.getLookupContext()
221 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilter.init(javax.servlet.FilterConfig)
221 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilterTests.JbossIntegrationFilterTests()
221 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilterTests.JbossIntegrationFilterTests(java.lang.String)
221 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.Filter.init(javax.servlet.FilterConfig)
javax.servlet.Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
javax.servlet.Filter.destroy()
222 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilterTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
223 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilterTests.makeIntoSubject(java.security.Principal)
Métodos invocados: 
java.util.Set.add(java.lang.Object)
224 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilterTests.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.setContext(org.springframework.security.context.SecurityContext)
225 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilterTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.setContext(org.springframework.security.context.SecurityContext)
226 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilterTests.testCorrectOperation()
Métodos invocados: 
org.springframework.security.adapters.jboss.JbossIntegrationFilterTests.makeIntoSubject(java.security.Principal)
org.springframework.security.adapters.jboss.JbossIntegrationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.setContext(org.springframework.security.context.SecurityContext)
227 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilterTests.testReturnsNullIfContextReturnsSomethingOtherThanASubject()
Métodos invocados: 
org.springframework.security.adapters.jboss.JbossIntegrationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
228 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilterTests.testReturnsNullIfInitialContextHasNullPrincipal()
Métodos invocados: 
org.springframework.security.adapters.jboss.JbossIntegrationFilterTests.makeIntoSubject(java.security.Principal)
org.springframework.security.adapters.jboss.JbossIntegrationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
229 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilterTests.testReturnsNullIfInitialContextHasNullSubject()
Métodos invocados: 
org.springframework.security.adapters.jboss.JbossIntegrationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
230 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilterTests.testReturnsNullIfInitialContextIsNull()
Métodos invocados: 
org.springframework.security.adapters.jboss.JbossIntegrationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
231 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilterTests.testReturnsNullIfPrincipalNotAnAuthenticationImplementation()
Métodos invocados: 
org.springframework.security.adapters.jboss.JbossIntegrationFilterTests.makeIntoSubject(java.security.Principal)
org.springframework.security.adapters.jboss.JbossIntegrationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
232 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilterTests$1.getName()
232 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilterTests.testTestingObjectReturnsInitialContext()
Métodos invocados: 
org.springframework.security.adapters.jboss.JbossIntegrationFilter.getLookupContext()
junit.framework.Assert.assertTrue(Z)
233 - Declaração do método: org.springframework.security.adapters.jboss.JbossIntegrationFilterTests$MockFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
233 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModuleTests.JbossSpringSecurityLoginModuleTests()
233 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModuleTests.JbossSpringSecurityLoginModuleTests(java.lang.String)
233 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModuleTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
234 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModuleTests.setUp()
234 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModuleTests.testAdapterAbortsIfAppContextDoesNotContainAnAuthenticationBean()
Métodos invocados: 
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
235 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModuleTests.testAdapterAbortsIfNoAppContextSpecified()
Métodos invocados: 
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
236 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModuleTests.testAdapterAbortsIfNoKeySpecified()
Métodos invocados: 
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
237 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModuleTests.testAdapterAbortsWithIncorrectApplicationContextLocation()
Métodos invocados: 
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
238 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModuleTests.testAdapterFailsToAuthenticateIfNoCallbackHandlerAvailable()
Métodos invocados: 
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.login()
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
239 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModuleTests.testAdapterStartsUpSuccess()
Métodos invocados: 
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
junit.framework.Assert.assertTrue(Z)
240 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModuleTests.testAuthenticationFailsForIncorrectPassword()
Métodos invocados: 
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.login()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
241 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModuleTests.testAuthenticationFailsForIncorrectUserName()
Métodos invocados: 
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.login()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
242 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModuleTests.testAuthenticationSuccess()
Métodos invocados: 
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.login()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.getIdentity()
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.lang.String.hashCode()
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
243 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModuleTests.testAuthenticationWithNullPasswordHandledGracefully()
Métodos invocados: 
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.login()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
244 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModuleTests.testAuthenticationWithNullUserNameAndNullPasswordHandledGracefully()
Métodos invocados: 
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.login()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
245 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModuleTests.testAuthenticationWithNullUserNameHandledGracefully()
Métodos invocados: 
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.login()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
246 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModuleTests.testGetRoleSets()
Métodos invocados: 
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.login()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModule.getRoleSets()
junit.framework.Assert.assertEquals(I, I)
java.security.acl.Group.isMember(java.security.Principal)
junit.framework.Assert.assertTrue(Z)
java.security.acl.Group.isMember(java.security.Principal)
junit.framework.Assert.assertTrue(Z)
247 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModuleTests$MockCallbackHandler.MockCallbackHandler(java.lang.String, java.lang.String)
247 - Declaração do método: org.springframework.security.adapters.jboss.JbossSpringSecurityLoginModuleTests$MockCallbackHandler.handle([Ljavax.security.auth.callback.Callback;)
Métodos invocados: 
javax.security.auth.callback.NameCallback.setName(java.lang.String)
javax.security.auth.callback.PasswordCallback.setPassword([C)
java.lang.String.toCharArray()
javax.security.auth.callback.PasswordCallback.setPassword([C)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockJbossIntegrationFilter.MockJbossIntegrationFilter(javax.naming.Context)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockJbossIntegrationFilter.getLookupContext()
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.MockInitialContext(java.lang.Object)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.addToEnvironment(java.lang.String, java.lang.Object)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.bind(java.lang.String, java.lang.Object)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.bind(javax.naming.Name, java.lang.Object)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.close()
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.composeName(java.lang.String, java.lang.String)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.composeName(javax.naming.Name, javax.naming.Name)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.createSubcontext(java.lang.String)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.createSubcontext(javax.naming.Name)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.destroySubcontext(java.lang.String)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.destroySubcontext(javax.naming.Name)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.getEnvironment()
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.getNameInNamespace()
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.getNameParser(java.lang.String)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.getNameParser(javax.naming.Name)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.list(java.lang.String)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.list(javax.naming.Name)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.listBindings(java.lang.String)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.listBindings(javax.naming.Name)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.lookup(java.lang.String)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.lookup(javax.naming.Name)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.lookupLink(java.lang.String)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.lookupLink(javax.naming.Name)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.rebind(java.lang.String, java.lang.Object)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.rebind(javax.naming.Name, java.lang.Object)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.removeFromEnvironment(java.lang.String)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.rename(java.lang.String, java.lang.String)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.rename(javax.naming.Name, javax.naming.Name)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.unbind(java.lang.String)
248 - Declaração do método: org.springframework.security.adapters.jboss.MockInitialContext.unbind(javax.naming.Name)
248 - Declaração do método: org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.JettySpringSecurityUserRealm(java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.Thread.currentThread()
java.lang.Thread.getContextClassLoader()
java.lang.ClassLoader.getResource(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBeansOfType(java.lang.Class, Z, Z)
java.util.Map.size()
java.util.Map.keySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map.get(java.lang.Object)
249 - Declaração do método: org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.JettySpringSecurityUserRealm()
249 - Declaração do método: org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.authenticate(java.lang.String, java.lang.Object, org.mortbay.http.HttpRequest)
Métodos invocados: 
java.lang.String.toString()
java.lang.Object.toString()
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Throwable.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.toString()
org.springframework.security.Authentication.getCredentials()
java.lang.Object.toString()
org.springframework.security.Authentication.getAuthorities()
250 - Declaração do método: org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.disassociate(org.mortbay.http.UserPrincipal)
250 - Declaração do método: org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.getAuthenticationManager()
250 - Declaração do método: org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.getName()
250 - Declaração do método: org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.logout(org.mortbay.http.UserPrincipal)
250 - Declaração do método: org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.popRole(org.mortbay.http.UserPrincipal)
250 - Declaração do método: org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.pushRole(org.mortbay.http.UserPrincipal, java.lang.String)
250 - Declaração do método: org.springframework.security.adapters.jetty.JettySpringSecurityUserToken.JettySpringSecurityUserToken(java.lang.String, java.lang.String, java.lang.String, [Lorg.springframework.security.GrantedAuthority;)
250 - Declaração do método: org.springframework.security.adapters.jetty.JettySpringSecurityUserToken.JettySpringSecurityUserToken()
250 - Declaração do método: org.springframework.security.adapters.jetty.JettySpringSecurityUserToken.getCredentials()
250 - Declaração do método: org.springframework.security.adapters.jetty.JettySpringSecurityUserToken.getName()
250 - Declaração do método: org.springframework.security.adapters.jetty.JettySpringSecurityUserToken.getPrincipal()
250 - Declaração do método: org.springframework.security.adapters.jetty.JettySpringSecurityUserTokenTests.JettySpringSecurityUserTokenTests()
250 - Declaração do método: org.springframework.security.adapters.jetty.JettySpringSecurityUserTokenTests.JettySpringSecurityUserTokenTests(java.lang.String)
250 - Declaração do método: org.springframework.security.adapters.jetty.JettySpringSecurityUserTokenTests.testGetters()
Métodos invocados: 
org.springframework.security.adapters.jetty.JettySpringSecurityUserToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.jetty.JettySpringSecurityUserToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.String.hashCode()
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.adapters.jetty.JettySpringSecurityUserToken.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
251 - Declaração do método: org.springframework.security.adapters.jetty.JettySpringSecurityUserTokenTests.testNoArgsConstructor()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
252 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.JettyAcegiUserRealmTests()
252 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.JettyAcegiUserRealmTests(java.lang.String)
252 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
253 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.makeAdapter(java.lang.String)
253 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.setUp()
253 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.testAdapterAbortsIfAppContextDoesNotContainAnAuthenticationBean()
Métodos invocados: 
org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.makeAdapter(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
254 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.testAdapterAbortsIfNoAppContextSpecified()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
255 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.testAdapterAbortsIfNoKeySpecified()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
256 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.testAdapterAbortsIfNoRealmNameSpecified()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
257 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.testAdapterAbortsWithIncorrectApplicationContextLocation()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(Z)
258 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.testAdapterIdentifiesTheRealmItManages()
Métodos invocados: 
org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.makeAdapter(java.lang.String)
org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
259 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.testAdapterStartsUpSuccess()
Métodos invocados: 
org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.makeAdapter(java.lang.String)
junit.framework.Assert.assertTrue(Z)
260 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.testAuthenticationFailsForIncorrectPassword()
Métodos invocados: 
org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.makeAdapter(java.lang.String)
org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.authenticate(java.lang.String, java.lang.Object, org.mortbay.http.HttpRequest)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
261 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.testAuthenticationFailsForIncorrectUserName()
Métodos invocados: 
org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.makeAdapter(java.lang.String)
org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.authenticate(java.lang.String, java.lang.Object, org.mortbay.http.HttpRequest)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
262 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.testAuthenticationSuccess()
Métodos invocados: 
org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.makeAdapter(java.lang.String)
org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.authenticate(java.lang.String, java.lang.Object, org.mortbay.http.HttpRequest)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.adapters.jetty.JettySpringSecurityUserToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.jetty.JettySpringSecurityUserToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.lang.String.hashCode()
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
263 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.testAuthenticationWithNullPasswordHandledGracefully()
Métodos invocados: 
org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.makeAdapter(java.lang.String)
org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.authenticate(java.lang.String, java.lang.Object, org.mortbay.http.HttpRequest)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
264 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.testAuthenticationWithNullUserNameHandledGracefully()
Métodos invocados: 
org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.makeAdapter(java.lang.String)
org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.authenticate(java.lang.String, java.lang.Object, org.mortbay.http.HttpRequest)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
265 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.testDisassociateImplemented()
Métodos invocados: 
org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.makeAdapter(java.lang.String)
org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.disassociate(org.mortbay.http.UserPrincipal)
junit.framework.Assert.assertTrue(Z)
266 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.testGetAuthenticationManager()
Métodos invocados: 
org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.makeAdapter(java.lang.String)
org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.getAuthenticationManager()
junit.framework.Assert.assertTrue(Z)
267 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.testLogoutImplemented()
Métodos invocados: 
org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.makeAdapter(java.lang.String)
org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.logout(org.mortbay.http.UserPrincipal)
junit.framework.Assert.assertTrue(Z)
268 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.testNoArgsConstructor()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
269 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.testPopRoleImplemented()
Métodos invocados: 
org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.makeAdapter(java.lang.String)
org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.popRole(org.mortbay.http.UserPrincipal)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
270 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.testPushRoleImplemented()
Métodos invocados: 
org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests.makeAdapter(java.lang.String)
org.springframework.security.adapters.jetty.JettySpringSecurityUserRealm.pushRole(org.mortbay.http.UserPrincipal, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
271 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests$MockUserPrincipal.getName()
271 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests$MockUserPrincipal.isAuthenticated()
271 - Declaração do método: org.springframework.security.adapters.jetty.JettyAcegiUserRealmTests$MockUserPrincipal.isUserInRole(java.lang.String)
271 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticator.getAppContextLocation()
271 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticator.getKey()
271 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticator.init()
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.Thread.currentThread()
java.lang.Thread.getContextClassLoader()
java.lang.ClassLoader.getResource(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBeansOfType(java.lang.Class, Z, Z)
java.util.Map.size()
java.util.Map.keySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map.get(java.lang.Object)
org.apache.commons.logging.Log.info(java.lang.Object)
272 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticator.isUserInRole(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.ServletContext, java.security.Principal, java.lang.String)
Métodos invocados: 
org.apache.commons.logging.Log.isWarnEnabled()
org.apache.commons.logging.Log.warn(java.lang.Object)
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.isUserInRole(java.lang.String)
273 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticator.loginImpl(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Throwable.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.toString()
org.springframework.security.Authentication.getCredentials()
java.lang.Object.toString()
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.Authentication.getPrincipal()
274 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticator.loginImpl(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.ServletContext, java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.loginImpl(java.lang.String, java.lang.String)
275 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setAppContextLocation(java.lang.String)
275 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setKey(java.lang.String)
275 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests.ResinAcegiAuthenticatorTests()
275 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests.ResinAcegiAuthenticatorTests(java.lang.String)
275 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
276 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests.setUp()
276 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests.testAdapterAbortsIfAppContextDoesNotContainAnAuthenticationBean()
Métodos invocados: 
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setKey(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.init()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
277 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests.testAdapterAbortsIfNoAppContextSpecified()
Métodos invocados: 
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setKey(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.init()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.init()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
278 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests.testAdapterAbortsIfNoKeySpecified()
Métodos invocados: 
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.init()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setKey(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.init()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
279 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests.testAdapterAbortsWithIncorrectApplicationContextLocation()
Métodos invocados: 
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setKey(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.init()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(Z)
280 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests.testAdapterStartsUpSuccess()
Métodos invocados: 
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setKey(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.init()
junit.framework.Assert.assertTrue(Z)
281 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests.testAuthenticationFailsForIncorrectPassword()
Métodos invocados: 
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setKey(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.init()
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.loginImpl(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
282 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests.testAuthenticationFailsForIncorrectUserName()
Métodos invocados: 
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setKey(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.init()
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.loginImpl(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
283 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests.testAuthenticationSuccess()
Métodos invocados: 
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setKey(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.init()
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.loginImpl(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.lang.String.hashCode()
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
284 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests.testAuthenticationSuccessUsingAlternateMethod()
Métodos invocados: 
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setKey(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.init()
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.loginImpl(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.ServletContext, java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.lang.String.hashCode()
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
285 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests.testAuthenticationWithNullPasswordHandledGracefully()
Métodos invocados: 
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setKey(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.init()
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.loginImpl(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
286 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests.testAuthenticationWithNullUserNameHandledGracefully()
Métodos invocados: 
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setKey(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.init()
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.loginImpl(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
287 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests.testGetters()
Métodos invocados: 
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setKey(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.getKey()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.getAppContextLocation()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
288 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests.testHasRoleWithANullPrincipalFails()
Métodos invocados: 
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setKey(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.init()
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.isUserInRole(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.ServletContext, java.security.Principal, java.lang.String)
junit.framework.Assert.assertTrue(Z)
289 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests.testHasRoleWithAPrincipalTheAdapterDidNotCreateFails()
Métodos invocados: 
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setKey(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.init()
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.isUserInRole(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.ServletContext, java.security.Principal, java.lang.String)
junit.framework.Assert.assertTrue(Z)
290 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests$1.getName()
290 - Declaração do método: org.springframework.security.adapters.resin.ResinAcegiAuthenticatorTests.testHasRoleWithPrincipalAcegiUserToken()
Métodos invocados: 
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setAppContextLocation(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.setKey(java.lang.String)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.init()
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.isUserInRole(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.ServletContext, java.security.Principal, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.isUserInRole(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.ServletContext, java.security.Principal, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.resin.ResinAcegiAuthenticator.isUserInRole(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.ServletContext, java.security.Principal, java.lang.String)
junit.framework.Assert.assertTrue(Z)
291 - Declaração do método: org.springframework.security.captcha.TestOnceAfterMaxRequestsCaptchaChannelProcessor.TestOnceAfterMaxRequestsCaptchaChannelProcessor()
Métodos invocados: 
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setKeyword(java.lang.String)
292 - Declaração do método: org.springframework.security.captcha.TestOnceAfterMaxRequestsCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
Métodos invocados: 
org.springframework.security.captcha.CaptchaSecurityContext.isHuman()
org.springframework.security.captcha.CaptchaSecurityContext.getHumanRestrictedResourcesRequestsCount()
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.getThreshold()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
293 - Declaração do método: org.springframework.security.captcha.AlwaysTestBelowAverageTimeInMillisBetweenRequestsChannelProcessor.AlwaysTestBelowAverageTimeInMillisBetweenRequestsChannelProcessor()
Métodos invocados: 
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setKeyword(java.lang.String)
294 - Declaração do método: org.springframework.security.captcha.AlwaysTestBelowAverageTimeInMillisBetweenRequestsChannelProcessor.afterPropertiesSet()
Métodos invocados: 
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.getThreshold()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
295 - Declaração do método: org.springframework.security.captcha.AlwaysTestBelowAverageTimeInMillisBetweenRequestsChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
Métodos invocados: 
org.springframework.security.captcha.CaptchaSecurityContext.getHumanRestrictedResourcesRequestsCount()
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.getThreshold()
java.lang.System.currentTimeMillis()
org.springframework.security.captcha.CaptchaSecurityContext.getLastPassedCaptchaDateInMillis()
org.springframework.security.captcha.CaptchaSecurityContext.isHuman()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
296 - Declaração do método: org.springframework.security.captcha.AlwaysTestAfterTimeInMillisCaptchaChannelProcessor.AlwaysTestAfterTimeInMillisCaptchaChannelProcessor()
Métodos invocados: 
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setKeyword(java.lang.String)
297 - Declaração do método: org.springframework.security.captcha.AlwaysTestAfterTimeInMillisCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
Métodos invocados: 
java.lang.System.currentTimeMillis()
org.springframework.security.captcha.CaptchaSecurityContext.getLastPassedCaptchaDateInMillis()
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.getThreshold()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
298 - Declaração do método: org.springframework.security.captcha.CaptchaValidationProcessingFilter.afterPropertiesSet()
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
299 - Declaração do método: org.springframework.security.captcha.CaptchaValidationProcessingFilter.destroy()
299 - Declaração do método: org.springframework.security.captcha.CaptchaValidationProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.ServletRequest.getParameter(java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.getId()
org.springframework.security.captcha.CaptchaServiceProxy.validateReponseForId(java.lang.String, java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.captcha.CaptchaSecurityContext.setHuman()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
300 - Declaração do método: org.springframework.security.captcha.CaptchaValidationProcessingFilter.getCaptchaService()
300 - Declaração do método: org.springframework.security.captcha.CaptchaValidationProcessingFilter.getCaptchaValidationParameter()
300 - Declaração do método: org.springframework.security.captcha.CaptchaValidationProcessingFilter.init(javax.servlet.FilterConfig)
300 - Declaração do método: org.springframework.security.captcha.CaptchaValidationProcessingFilter.setCaptchaService(org.springframework.security.captcha.CaptchaServiceProxy)
300 - Declaração do método: org.springframework.security.captcha.CaptchaValidationProcessingFilter.setCaptchaValidationParameter(java.lang.String)
300 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
301 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.buildInternalRedirect(java.lang.StringBuffer, javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getScheme()
javax.servlet.ServletRequest.getServerName()
org.springframework.security.util.PortResolver.getServerPort(javax.servlet.ServletRequest)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.toLowerCase()
java.lang.String.equals(java.lang.Object)
java.lang.String.toLowerCase()
java.lang.String.equals(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(I)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
javax.servlet.ServletRequest.getScheme()
java.lang.String.equals(java.lang.Object)
org.springframework.security.util.PortResolver.getServerPort(javax.servlet.ServletRequest)
org.springframework.security.util.PortMapper.lookupHttpsPort(java.lang.Integer)
java.lang.Integer.intValue()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.StringBuffer)
java.lang.StringBuffer.append(java.lang.StringBuffer)
302 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
Métodos invocados: 
java.lang.StringBuffer.append(java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.buildInternalRedirect(java.lang.StringBuffer, javax.servlet.http.HttpServletRequest)
org.springframework.security.captcha.CaptchaEntryPoint.includeOriginalRequest(java.lang.StringBuffer, javax.servlet.http.HttpServletRequest)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.StringBuffer.toString()
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
303 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.getCaptchaFormUrl()
303 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.getForceHttps()
303 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.getOriginalRequestMethodParameterName()
303 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.getOriginalRequestParametersNameValueSeparator()
303 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.getOriginalRequestParametersParameterName()
303 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.getOriginalRequestParametersSeparator()
303 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.getOriginalRequestUrlParameterName()
303 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.getPortMapper()
303 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.getPortResolver()
303 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.getUrlEncodingCharset()
303 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.includeOriginalRequest(java.lang.StringBuffer, javax.servlet.http.HttpServletRequest)
Métodos invocados: 
java.lang.StringBuffer.indexOf(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
javax.servlet.http.HttpServletRequest.getRequestURL()
java.lang.StringBuffer.toString()
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
org.apache.commons.logging.Log.warn(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
javax.servlet.http.HttpServletRequest.getMethod()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
javax.servlet.ServletRequest.getParameterNames()
java.util.Enumeration.hasMoreElements()
java.util.Enumeration.hasMoreElements()
java.util.Enumeration.nextElement()
java.lang.Object.toString()
javax.servlet.ServletRequest.getParameter(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.util.Enumeration.hasMoreElements()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
org.apache.commons.logging.Log.warn(java.lang.Object)
304 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.isIncludeOriginalParameters()
304 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.isIncludeOriginalRequest()
304 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.isOutsideWebApp()
304 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.setCaptchaFormUrl(java.lang.String)
304 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.setForceHttps(Z)
304 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.setIncludeOriginalParameters(Z)
304 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.setIncludeOriginalRequest(Z)
304 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.setOriginalRequestMethodParameterName(java.lang.String)
304 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.setOriginalRequestParametersNameValueSeparator(java.lang.String)
304 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.setOriginalRequestParametersParameterName(java.lang.String)
304 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.setOriginalRequestParametersSeparator(java.lang.String)
304 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.setOriginalRequestUrlParameterName(java.lang.String)
304 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.setOutsideWebApp(Z)
304 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
304 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
304 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPoint.setUrlEncodingCharset(java.lang.String)
304 - Declaração do método: org.springframework.security.captcha.CaptchaServiceProxy.validateReponseForId(java.lang.String, java.lang.Object)
304 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplate.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
305 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplate.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.supports(org.springframework.security.ConfigAttribute)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.redirectToEntryPoint(org.springframework.security.intercept.web.FilterInvocation)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.captcha.CaptchaSecurityContext.incrementHumanRestrictedResourcesRequestsCount()
org.apache.commons.logging.Log.debug(java.lang.Object)
306 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplate.getEntryPoint()
306 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplate.getKeyword()
306 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplate.getThreshold()
306 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplate.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
306 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplate.redirectToEntryPoint(org.springframework.security.intercept.web.FilterInvocation)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.intercept.web.FilterInvocation.getRequest()
org.springframework.security.intercept.web.FilterInvocation.getResponse()
org.springframework.security.securechannel.ChannelEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
307 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setEntryPoint(org.springframework.security.securechannel.ChannelEntryPoint)
307 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setKeyword(java.lang.String)
307 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setThreshold(I)
307 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplate.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
308 - Declaração do método: org.springframework.security.captcha.CaptchaSecurityContext.getHumanRestrictedResourcesRequestsCount()
308 - Declaração do método: org.springframework.security.captcha.CaptchaSecurityContext.getLastPassedCaptchaDateInMillis()
308 - Declaração do método: org.springframework.security.captcha.CaptchaSecurityContext.incrementHumanRestrictedResourcesRequestsCount()
308 - Declaração do método: org.springframework.security.captcha.CaptchaSecurityContext.isHuman()
308 - Declaração do método: org.springframework.security.captcha.CaptchaSecurityContext.setHuman()
308 - Declaração do método: org.springframework.security.captcha.AlwaysTestAfterMaxRequestsCaptchaChannelProcessor.AlwaysTestAfterMaxRequestsCaptchaChannelProcessor()
Métodos invocados: 
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setKeyword(java.lang.String)
309 - Declaração do método: org.springframework.security.captcha.AlwaysTestAfterMaxRequestsCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
Métodos invocados: 
org.springframework.security.captcha.CaptchaSecurityContext.getHumanRestrictedResourcesRequestsCount()
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.getThreshold()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
310 - Declaração do método: org.springframework.security.captcha.CaptchaSecurityContextImpl.CaptchaSecurityContextImpl()
310 - Declaração do método: org.springframework.security.captcha.CaptchaSecurityContextImpl.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.captcha.CaptchaSecurityContextImpl.isHuman()
org.springframework.security.captcha.CaptchaSecurityContextImpl.isHuman()
org.springframework.security.captcha.CaptchaSecurityContextImpl.getHumanRestrictedResourcesRequestsCount()
org.springframework.security.captcha.CaptchaSecurityContextImpl.getHumanRestrictedResourcesRequestsCount()
org.springframework.security.captcha.CaptchaSecurityContextImpl.getLastPassedCaptchaDateInMillis()
org.springframework.security.captcha.CaptchaSecurityContextImpl.getLastPassedCaptchaDateInMillis()
311 - Declaração do método: org.springframework.security.captcha.CaptchaSecurityContextImpl.getHumanRestrictedResourcesRequestsCount()
311 - Declaração do método: org.springframework.security.captcha.CaptchaSecurityContextImpl.getLastPassedCaptchaDateInMillis()
311 - Declaração do método: org.springframework.security.captcha.CaptchaSecurityContextImpl.hashCode()
Métodos invocados: 
org.springframework.security.captcha.CaptchaSecurityContextImpl.isHuman()
312 - Declaração do método: org.springframework.security.captcha.CaptchaSecurityContextImpl.incrementHumanRestrictedResourcesRequestsCount()
312 - Declaração do método: org.springframework.security.captcha.CaptchaSecurityContextImpl.isHuman()
312 - Declaração do método: org.springframework.security.captcha.CaptchaSecurityContextImpl.setHuman()
Métodos invocados: 
java.lang.System.currentTimeMillis()
313 - Declaração do método: org.springframework.security.captcha.TestOnceAfterMaxRequestsCaptchaChannelProcessorTests.setUp()
313 - Declaração do método: org.springframework.security.captcha.TestOnceAfterMaxRequestsCaptchaChannelProcessorTests.testIsContextValidConcerningHumanity()
Métodos invocados: 
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setThreshold(I)
org.springframework.security.captcha.TestOnceAfterMaxRequestsCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.captcha.CaptchaSecurityContextImpl.incrementHumanRestrictedResourcesRequestsCount()
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setThreshold(I)
org.springframework.security.captcha.TestOnceAfterMaxRequestsCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setThreshold(I)
org.springframework.security.captcha.TestOnceAfterMaxRequestsCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.captcha.CaptchaSecurityContextImpl.incrementHumanRestrictedResourcesRequestsCount()
org.springframework.security.captcha.TestOnceAfterMaxRequestsCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.captcha.CaptchaSecurityContextImpl.incrementHumanRestrictedResourcesRequestsCount()
org.springframework.security.captcha.TestOnceAfterMaxRequestsCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.captcha.CaptchaSecurityContextImpl.setHuman()
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.getThreshold()
org.springframework.security.captcha.TestOnceAfterMaxRequestsCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
junit.framework.Assert.assertTrue(Z)
314 - Declaração do método: org.springframework.security.captcha.TestOnceAfterMaxRequestsCaptchaChannelProcessorTests.testNewContext()
Métodos invocados: 
org.springframework.security.captcha.TestOnceAfterMaxRequestsCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setThreshold(I)
org.springframework.security.captcha.TestOnceAfterMaxRequestsCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
junit.framework.Assert.assertTrue(Z)
315 - Declaração do método: org.springframework.security.captcha.MockCaptchaServiceProxy.validateReponseForId(java.lang.String, java.lang.Object)
315 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPointTests.testDetectsMissingCaptchaFormUrl()
Métodos invocados: 
org.springframework.security.captcha.CaptchaEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.captcha.CaptchaEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.captcha.CaptchaEntryPoint.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
316 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPointTests.testDetectsMissingPortMapper()
Métodos invocados: 
org.springframework.security.captcha.CaptchaEntryPoint.setCaptchaFormUrl(java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.captcha.CaptchaEntryPoint.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
317 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPointTests.testDetectsMissingPortResolver()
Métodos invocados: 
org.springframework.security.captcha.CaptchaEntryPoint.setCaptchaFormUrl(java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.captcha.CaptchaEntryPoint.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
318 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPointTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.captcha.CaptchaEntryPoint.setCaptchaFormUrl(java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.captcha.CaptchaEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.captcha.CaptchaEntryPoint.getCaptchaFormUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.getPortMapper()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.captcha.CaptchaEntryPoint.getPortResolver()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.captcha.CaptchaEntryPoint.getOriginalRequestUrlParameterName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.setOriginalRequestUrlParameterName(java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.getOriginalRequestUrlParameterName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.isIncludeOriginalRequest()
junit.framework.Assert.assertEquals(Z, Z)
org.springframework.security.captcha.CaptchaEntryPoint.setIncludeOriginalRequest(Z)
org.springframework.security.captcha.CaptchaEntryPoint.isIncludeOriginalRequest()
junit.framework.Assert.assertEquals(Z, Z)
org.springframework.security.captcha.CaptchaEntryPoint.isOutsideWebApp()
junit.framework.Assert.assertEquals(Z, Z)
org.springframework.security.captcha.CaptchaEntryPoint.setOutsideWebApp(Z)
org.springframework.security.captcha.CaptchaEntryPoint.isOutsideWebApp()
junit.framework.Assert.assertEquals(Z, Z)
org.springframework.security.captcha.CaptchaEntryPoint.setForceHttps(Z)
org.springframework.security.captcha.CaptchaEntryPoint.getForceHttps()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.captcha.CaptchaEntryPoint.setForceHttps(Z)
org.springframework.security.captcha.CaptchaEntryPoint.getForceHttps()
junit.framework.Assert.assertTrue(Z)
319 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPointTests.testHttpsOperationFromOriginalHttpUrl()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.captcha.CaptchaEntryPoint.setIncludeOriginalRequest(Z)
org.springframework.security.captcha.CaptchaEntryPoint.setCaptchaFormUrl(java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.captcha.CaptchaEntryPoint.setForceHttps(Z)
org.springframework.security.captcha.CaptchaEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.captcha.CaptchaEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.captcha.CaptchaEntryPoint.afterPropertiesSet()
org.springframework.security.captcha.CaptchaEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.captcha.CaptchaEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.captcha.CaptchaEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.captcha.CaptchaEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.security.util.PortMapperImpl.setPortMappings(java.util.Map)
org.springframework.security.captcha.CaptchaEntryPoint.setCaptchaFormUrl(java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.captcha.CaptchaEntryPoint.setForceHttps(Z)
org.springframework.security.captcha.CaptchaEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.captcha.CaptchaEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.captcha.CaptchaEntryPoint.setIncludeOriginalRequest(Z)
org.springframework.security.captcha.CaptchaEntryPoint.afterPropertiesSet()
org.springframework.security.captcha.CaptchaEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
320 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPointTests.testHttpsOperationFromOriginalHttpsUrl()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.captcha.CaptchaEntryPoint.setIncludeOriginalRequest(Z)
org.springframework.security.captcha.CaptchaEntryPoint.setCaptchaFormUrl(java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.captcha.CaptchaEntryPoint.setForceHttps(Z)
org.springframework.security.captcha.CaptchaEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.captcha.CaptchaEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.captcha.CaptchaEntryPoint.afterPropertiesSet()
org.springframework.security.captcha.CaptchaEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.captcha.CaptchaEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.captcha.CaptchaEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
321 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPointTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.captcha.CaptchaEntryPoint.setCaptchaFormUrl(java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.captcha.CaptchaEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.captcha.CaptchaEntryPoint.afterPropertiesSet()
org.springframework.security.captcha.CaptchaEntryPoint.setIncludeOriginalRequest(Z)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.captcha.CaptchaEntryPoint.afterPropertiesSet()
org.springframework.security.captcha.CaptchaEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
322 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPointTests.testOperationWhenHttpsRequestsButHttpsPortUnknown()
Métodos invocados: 
org.springframework.security.captcha.CaptchaEntryPoint.setCaptchaFormUrl(java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.captcha.CaptchaEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.captcha.CaptchaEntryPoint.setForceHttps(Z)
org.springframework.security.captcha.CaptchaEntryPoint.setIncludeOriginalRequest(Z)
org.springframework.security.captcha.CaptchaEntryPoint.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.captcha.CaptchaEntryPoint.afterPropertiesSet()
org.springframework.security.captcha.CaptchaEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
323 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPointTests.testOperationWithOriginalRequestIncludes()
Métodos invocados: 
org.springframework.security.captcha.CaptchaEntryPoint.setCaptchaFormUrl(java.lang.String)
org.springframework.security.util.PortMapperImpl.getTranslatedPortMappings()
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.security.captcha.CaptchaEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.captcha.CaptchaEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.captcha.CaptchaEntryPoint.setIncludeOriginalRequest(Z)
org.springframework.security.captcha.CaptchaEntryPoint.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setMethod(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.captcha.CaptchaEntryPoint.afterPropertiesSet()
org.springframework.security.captcha.CaptchaEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.setIncludeOriginalParameters(Z)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.setCaptchaFormUrl(java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.setForceHttps(Z)
org.springframework.security.captcha.CaptchaEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
324 - Declaração do método: org.springframework.security.captcha.CaptchaEntryPointTests.testOperationWithOutsideWebApp()
Métodos invocados: 
org.springframework.security.captcha.CaptchaEntryPoint.setCaptchaFormUrl(java.lang.String)
org.springframework.security.util.PortMapperImpl.getTranslatedPortMappings()
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.security.captcha.CaptchaEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.captcha.CaptchaEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.captcha.CaptchaEntryPoint.setIncludeOriginalRequest(Z)
org.springframework.security.captcha.CaptchaEntryPoint.setOutsideWebApp(Z)
org.springframework.security.captcha.CaptchaEntryPoint.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setMethod(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.captcha.CaptchaEntryPoint.afterPropertiesSet()
org.springframework.security.captcha.CaptchaEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.setIncludeOriginalParameters(Z)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.setCaptchaFormUrl(java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.setForceHttps(Z)
org.springframework.security.captcha.CaptchaEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
325 - Declaração do método: org.springframework.security.captcha.AlwaysTestBelowAverageTimeInMillisBetweenRequestsChannelProcessorTests.setUp()
325 - Declaração do método: org.springframework.security.captcha.AlwaysTestBelowAverageTimeInMillisBetweenRequestsChannelProcessorTests.testEqualsThresold()
Métodos invocados: 
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setThreshold(I)
org.springframework.security.captcha.CaptchaSecurityContext.setHuman()
java.lang.System.currentTimeMillis()
326 - Declaração do método: org.springframework.security.captcha.AlwaysTestAfterTimeInMillisCaptchaChannelProcessorTests.setUp()
326 - Declaração do método: org.springframework.security.captcha.AlwaysTestAfterTimeInMillisCaptchaChannelProcessorTests.testEqualsThresold()
Métodos invocados: 
org.springframework.security.captcha.AlwaysTestAfterTimeInMillisCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.captcha.CaptchaSecurityContext.setHuman()
org.springframework.security.captcha.AlwaysTestAfterTimeInMillisCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
junit.framework.Assert.assertFalse(Z)
327 - Declaração do método: org.springframework.security.captcha.AlwaysTestAfterTimeInMillisCaptchaChannelProcessorTests.testNewContext()
Métodos invocados: 
org.springframework.security.captcha.AlwaysTestAfterTimeInMillisCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
junit.framework.Assert.assertFalse(Z)
328 - Declaração do método: org.springframework.security.captcha.AlwaysTestAfterMaxRequestsCaptchaChannelProcessorTests.setUp()
328 - Declaração do método: org.springframework.security.captcha.AlwaysTestAfterMaxRequestsCaptchaChannelProcessorTests.testIsContextValidConcerningHumanity()
Métodos invocados: 
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setThreshold(I)
org.springframework.security.captcha.AlwaysTestAfterMaxRequestsCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.captcha.CaptchaSecurityContextImpl.incrementHumanRestrictedResourcesRequestsCount()
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setThreshold(I)
org.springframework.security.captcha.AlwaysTestAfterMaxRequestsCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setThreshold(I)
org.springframework.security.captcha.AlwaysTestAfterMaxRequestsCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.captcha.CaptchaSecurityContextImpl.incrementHumanRestrictedResourcesRequestsCount()
org.springframework.security.captcha.AlwaysTestAfterMaxRequestsCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.captcha.CaptchaSecurityContextImpl.incrementHumanRestrictedResourcesRequestsCount()
org.springframework.security.captcha.AlwaysTestAfterMaxRequestsCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
junit.framework.Assert.assertFalse(Z)
329 - Declaração do método: org.springframework.security.captcha.AlwaysTestAfterMaxRequestsCaptchaChannelProcessorTests.testNewContext()
Métodos invocados: 
org.springframework.security.captcha.AlwaysTestAfterMaxRequestsCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setThreshold(I)
org.springframework.security.captcha.AlwaysTestAfterMaxRequestsCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
junit.framework.Assert.assertTrue(Z)
330 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplateTests.decideWithNewResponse(org.springframework.security.ConfigAttributeDefinition, org.springframework.security.captcha.CaptchaChannelProcessorTemplate, org.springframework.mock.web.MockHttpServletRequest)
Métodos invocados: 
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
331 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplateTests.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
332 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplateTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
333 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplateTests.testContextRedirect()
Métodos invocados: 
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setKeyword(java.lang.String)
org.springframework.security.context.SecurityContextHolder.setContext(org.springframework.security.context.SecurityContext)
org.springframework.security.captcha.CaptchaEntryPoint.setCaptchaFormUrl(java.lang.String)
org.springframework.security.captcha.CaptchaEntryPoint.setIncludeOriginalRequest(Z)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setEntryPoint(org.springframework.security.securechannel.ChannelEntryPoint)
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setKeyword(java.lang.String)
org.springframework.security.captcha.CaptchaChannelProcessorTemplateTests.decideWithNewResponse(org.springframework.security.ConfigAttributeDefinition, org.springframework.security.captcha.CaptchaChannelProcessorTemplate, org.springframework.mock.web.MockHttpServletRequest)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.captcha.CaptchaSecurityContext.setHuman()
org.springframework.security.captcha.CaptchaChannelProcessorTemplateTests.decideWithNewResponse(org.springframework.security.ConfigAttributeDefinition, org.springframework.security.captcha.CaptchaChannelProcessorTemplate, org.springframework.mock.web.MockHttpServletRequest)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
334 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplateTests.testDecideRejectsNulls()
Métodos invocados: 
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setEntryPoint(org.springframework.security.securechannel.ChannelEntryPoint)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setKeyword(java.lang.String)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.afterPropertiesSet()
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
335 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplateTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.getKeyword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setKeyword(java.lang.String)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.getKeyword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.getThreshold()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setThreshold(I)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.getThreshold()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.getEntryPoint()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setEntryPoint(org.springframework.security.securechannel.ChannelEntryPoint)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.getEntryPoint()
junit.framework.Assert.assertTrue(Z)
336 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplateTests.testIncrementRequestCount()
Métodos invocados: 
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setKeyword(java.lang.String)
org.springframework.security.context.SecurityContextHolder.setContext(org.springframework.security.context.SecurityContext)
org.springframework.security.captcha.CaptchaEntryPoint.setCaptchaFormUrl(java.lang.String)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setEntryPoint(org.springframework.security.securechannel.ChannelEntryPoint)
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.captcha.CaptchaSecurityContext.getHumanRestrictedResourcesRequestsCount()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.captcha.CaptchaSecurityContext.setHuman()
org.springframework.security.captcha.CaptchaChannelProcessorTemplateTests.decideWithNewResponse(org.springframework.security.ConfigAttributeDefinition, org.springframework.security.captcha.CaptchaChannelProcessorTemplate, org.springframework.mock.web.MockHttpServletRequest)
org.springframework.security.captcha.CaptchaSecurityContext.getHumanRestrictedResourcesRequestsCount()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.captcha.CaptchaChannelProcessorTemplateTests.decideWithNewResponse(org.springframework.security.ConfigAttributeDefinition, org.springframework.security.captcha.CaptchaChannelProcessorTemplate, org.springframework.mock.web.MockHttpServletRequest)
org.springframework.security.captcha.CaptchaSecurityContext.getHumanRestrictedResourcesRequestsCount()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setKeyword(java.lang.String)
org.springframework.security.captcha.CaptchaChannelProcessorTemplateTests.decideWithNewResponse(org.springframework.security.ConfigAttributeDefinition, org.springframework.security.captcha.CaptchaChannelProcessorTemplate, org.springframework.mock.web.MockHttpServletRequest)
org.springframework.security.captcha.CaptchaSecurityContext.getHumanRestrictedResourcesRequestsCount()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.captcha.CaptchaChannelProcessorTemplateTests.decideWithNewResponse(org.springframework.security.ConfigAttributeDefinition, org.springframework.security.captcha.CaptchaChannelProcessorTemplate, org.springframework.mock.web.MockHttpServletRequest)
org.springframework.security.captcha.CaptchaSecurityContext.getHumanRestrictedResourcesRequestsCount()
junit.framework.Assert.assertEquals(I, I)
337 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplateTests.testMissingEntryPoint()
Métodos invocados: 
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setEntryPoint(org.springframework.security.securechannel.ChannelEntryPoint)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
338 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplateTests.testMissingKeyword()
Métodos invocados: 
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setKeyword(java.lang.String)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setKeyword(java.lang.String)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
339 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplateTests.testSupports()
Métodos invocados: 
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.setKeyword(java.lang.String)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.getKeyword()
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.captcha.CaptchaChannelProcessorTemplate.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertFalse(Z)
340 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplateTests$TestHumanityCaptchaChannelProcessor.isContextValidConcerningHumanity(org.springframework.security.captcha.CaptchaSecurityContext)
Métodos invocados: 
org.springframework.security.captcha.CaptchaSecurityContext.isHuman()
341 - Declaração do método: org.springframework.security.captcha.CaptchaChannelProcessorTemplateTests$MockFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
341 - Declaração do método: org.springframework.security.captcha.CaptchaValidationProcessingFilterTests.testAfterPropertiesSet()
Métodos invocados: 
org.springframework.security.captcha.CaptchaValidationProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.springframework.security.captcha.CaptchaValidationProcessingFilter.setCaptchaService(org.springframework.security.captcha.CaptchaServiceProxy)
org.springframework.security.captcha.CaptchaValidationProcessingFilter.afterPropertiesSet()
org.springframework.security.captcha.CaptchaValidationProcessingFilter.setCaptchaValidationParameter(java.lang.String)
org.springframework.security.captcha.CaptchaValidationProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
junit.framework.Assert.assertTrue(java.lang.String, Z)
342 - Declaração do método: org.springframework.security.captcha.CaptchaValidationProcessingFilterTests.testDoFilterWithRequestParameter()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.setContext(org.springframework.security.context.SecurityContext)
org.springframework.security.captcha.CaptchaValidationProcessingFilter.getCaptchaValidationParameter()
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.captcha.CaptchaValidationProcessingFilter.setCaptchaService(org.springframework.security.captcha.CaptchaServiceProxy)
org.springframework.security.captcha.CaptchaValidationProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.springframework.security.captcha.CaptchaSecurityContext.isHuman()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.springframework.security.captcha.CaptchaValidationProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.springframework.security.captcha.CaptchaSecurityContext.isHuman()
junit.framework.Assert.assertTrue(java.lang.String, Z)
343 - Declaração do método: org.springframework.security.captcha.CaptchaValidationProcessingFilterTests.testDoFilterWithoutRequestParameter()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.setContext(org.springframework.security.context.SecurityContext)
org.springframework.security.captcha.CaptchaValidationProcessingFilter.setCaptchaService(org.springframework.security.captcha.CaptchaServiceProxy)
org.springframework.security.captcha.CaptchaValidationProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.springframework.security.captcha.CaptchaSecurityContext.isHuman()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.springframework.security.captcha.CaptchaValidationProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.springframework.security.captcha.CaptchaSecurityContext.isHuman()
junit.framework.Assert.assertFalse(java.lang.String, Z)
344 - Declaração do método: org.springframework.security.captcha.CaptchaSecurityContextImplTests.testDefaultValues()
Métodos invocados: 
org.springframework.security.captcha.CaptchaSecurityContext.isHuman()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
org.springframework.security.captcha.CaptchaSecurityContext.getLastPassedCaptchaDateInMillis()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
org.springframework.security.captcha.CaptchaSecurityContext.getHumanRestrictedResourcesRequestsCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
345 - Declaração do método: org.springframework.security.captcha.CaptchaSecurityContextImplTests.testEquals()
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.captcha.CaptchaSecurityContext.isHuman()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.captcha.CaptchaSecurityContext.setHuman()
junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.captcha.CaptchaSecurityContext.incrementHumanRestrictedResourcesRequestsCount()
junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)
346 - Declaração do método: org.springframework.security.captcha.CaptchaSecurityContextImplTests.testHashcode()
Métodos invocados: 
java.lang.Object.hashCode()
java.lang.Object.hashCode()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.captcha.CaptchaSecurityContext.isHuman()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.captcha.CaptchaSecurityContext.setHuman()
java.lang.Object.hashCode()
java.lang.Object.hashCode()
junit.framework.Assert.assertTrue(Z)
java.lang.Object.hashCode()
java.lang.Object.hashCode()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.captcha.CaptchaSecurityContext.incrementHumanRestrictedResourcesRequestsCount()
junit.framework.Assert.assertTrue(Z)
347 - Declaração do método: org.springframework.security.captcha.CaptchaSecurityContextImplTests.testIncrementRequests()
Métodos invocados: 
org.springframework.security.captcha.CaptchaSecurityContext.setHuman()
org.springframework.security.captcha.CaptchaSecurityContext.isHuman()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
org.springframework.security.captcha.CaptchaSecurityContext.getHumanRestrictedResourcesRequestsCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.springframework.security.captcha.CaptchaSecurityContext.incrementHumanRestrictedResourcesRequestsCount()
org.springframework.security.captcha.CaptchaSecurityContext.getHumanRestrictedResourcesRequestsCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
348 - Declaração do método: org.springframework.security.captcha.CaptchaSecurityContextImplTests.testResetHuman()
Métodos invocados: 
org.springframework.security.captcha.CaptchaSecurityContext.setHuman()
org.springframework.security.captcha.CaptchaSecurityContext.isHuman()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
org.springframework.security.captcha.CaptchaSecurityContext.getHumanRestrictedResourcesRequestsCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.springframework.security.captcha.CaptchaSecurityContext.incrementHumanRestrictedResourcesRequestsCount()
org.springframework.security.captcha.CaptchaSecurityContext.getHumanRestrictedResourcesRequestsCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.lang.System.currentTimeMillis()
org.springframework.security.captcha.CaptchaSecurityContext.setHuman()
org.springframework.security.captcha.CaptchaSecurityContext.getHumanRestrictedResourcesRequestsCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.springframework.security.captcha.CaptchaSecurityContext.getLastPassedCaptchaDateInMillis()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.springframework.security.captcha.CaptchaSecurityContext.getLastPassedCaptchaDateInMillis()
junit.framework.Assert.assertTrue(java.lang.String, Z)
349 - Declaração do método: org.springframework.security.captcha.CaptchaSecurityContextImplTests.testSetHuman()
Métodos invocados: 
java.lang.System.currentTimeMillis()
org.springframework.security.captcha.CaptchaSecurityContext.setHuman()
org.springframework.security.captcha.CaptchaSecurityContext.isHuman()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
org.springframework.security.captcha.CaptchaSecurityContext.getLastPassedCaptchaDateInMillis()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.springframework.security.captcha.CaptchaSecurityContext.getLastPassedCaptchaDateInMillis()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.springframework.security.captcha.CaptchaSecurityContext.getHumanRestrictedResourcesRequestsCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
350 - Declaração do método: org.springframework.security.adapters.cas3.CasAuthenticationHandler.authenticateUsernamePasswordInternal(org.jasig.cas.authentication.principal.UsernamePasswordCredentials)
Métodos invocados: 
org.jasig.cas.authentication.principal.UsernamePasswordCredentials.getUsername()
org.jasig.cas.authentication.principal.UsernamePasswordCredentials.getPassword()
org.apache.commons.logging.Log.isDebugEnabled()
org.jasig.cas.authentication.principal.UsernamePasswordCredentials.getUsername()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.jasig.cas.authentication.principal.UsernamePasswordCredentials.getUsername()
java.lang.Throwable.toString()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.apache.commons.logging.Log.isDebugEnabled()
org.jasig.cas.authentication.principal.UsernamePasswordCredentials.getUsername()
org.apache.commons.logging.Log.debug(java.lang.Object)
351 - Declaração do método: org.springframework.security.adapters.cas3.CasAuthenticationHandler.setAuthenticationManager(org.springframework.security.AuthenticationManager)
351 - Declaração do método: org.springframework.security.adapters.cas3.CasAuthenticationHandlerTests.getConfigLocations()
351 - Declaração do método: org.springframework.security.adapters.cas3.CasAuthenticationHandlerTests.getCredentialsFor(java.lang.String, java.lang.String)
Métodos invocados: 
org.jasig.cas.authentication.principal.UsernamePasswordCredentials.setUsername(java.lang.String)
org.jasig.cas.authentication.principal.UsernamePasswordCredentials.setPassword(java.lang.String)
352 - Declaração do método: org.springframework.security.adapters.cas3.CasAuthenticationHandlerTests.onSetUp()
Métodos invocados: 
org.springframework.security.adapters.cas3.CasAuthenticationHandler.setAuthenticationManager(org.springframework.security.AuthenticationManager)
353 - Declaração do método: org.springframework.security.adapters.cas3.CasAuthenticationHandlerTests.setAuthenticationManager(org.springframework.security.AuthenticationManager)
353 - Declaração do método: org.springframework.security.adapters.cas3.CasAuthenticationHandlerTests.testGracefullyHandlesInvalidInput()
Métodos invocados: 
org.springframework.security.adapters.cas3.CasAuthenticationHandlerTests.getCredentialsFor(java.lang.String, java.lang.String)
org.jasig.cas.authentication.handler.support.AbstractPreAndPostProcessingAuthenticationHandler.authenticate(org.jasig.cas.authentication.principal.Credentials)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.adapters.cas3.CasAuthenticationHandlerTests.getCredentialsFor(java.lang.String, java.lang.String)
org.jasig.cas.authentication.handler.support.AbstractPreAndPostProcessingAuthenticationHandler.authenticate(org.jasig.cas.authentication.principal.Credentials)
junit.framework.Assert.assertFalse(Z)
junit.framework.Assert.fail(java.lang.String)
354 - Declaração do método: org.springframework.security.adapters.cas3.CasAuthenticationHandlerTests.testInvalidUsernamePasswordCombination()
Métodos invocados: 
org.springframework.security.adapters.cas3.CasAuthenticationHandlerTests.getCredentialsFor(java.lang.String, java.lang.String)
org.jasig.cas.authentication.handler.support.AbstractPreAndPostProcessingAuthenticationHandler.authenticate(org.jasig.cas.authentication.principal.Credentials)
junit.framework.Assert.assertFalse(Z)
junit.framework.Assert.fail(java.lang.String)
355 - Declaração do método: org.springframework.security.adapters.cas3.CasAuthenticationHandlerTests.testValidUsernamePasswordCombination()
Métodos invocados: 
org.springframework.security.adapters.cas3.CasAuthenticationHandlerTests.getCredentialsFor(java.lang.String, java.lang.String)
org.jasig.cas.authentication.handler.support.AbstractPreAndPostProcessingAuthenticationHandler.authenticate(org.jasig.cas.authentication.principal.Credentials)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
356 - Declaração do método: org.springframework.security.providers.cas.StatelessTicketCache.getByTicketId(java.lang.String)
356 - Declaração do método: org.springframework.security.providers.cas.StatelessTicketCache.putTicketInCache(org.springframework.security.providers.cas.CasAuthenticationToken)
356 - Declaração do método: org.springframework.security.providers.cas.StatelessTicketCache.removeTicketFromCache(org.springframework.security.providers.cas.CasAuthenticationToken)
356 - Declaração do método: org.springframework.security.providers.cas.StatelessTicketCache.removeTicketFromCache(java.lang.String)
356 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationToken.CasAuthenticationToken(java.lang.String, java.lang.Object, java.lang.Object, [Lorg.springframework.security.GrantedAuthority;, org.springframework.security.userdetails.UserDetails, org.jasig.cas.client.validation.Assertion)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.hashCode()
org.springframework.security.providers.AbstractAuthenticationToken.setAuthenticated(Z)
357 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationToken.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationToken.getAssertion()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.providers.cas.CasAuthenticationToken.getKeyHash()
org.springframework.security.providers.cas.CasAuthenticationToken.getKeyHash()
358 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationToken.getCredentials()
358 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationToken.getKeyHash()
358 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationToken.getPrincipal()
358 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationToken.getAssertion()
358 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationToken.getUserDetails()
358 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationToken.toString()
Métodos invocados: 
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.Object)
java.lang.StringBuffer.toString()
359 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
360 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProvider.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.security.providers.cas.CasAuthenticationProvider.supports(java.lang.Class)
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.toString()
java.lang.String.equals(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.toString()
java.lang.String.equals(java.lang.Object)
java.lang.String.hashCode()
org.springframework.security.providers.cas.CasAuthenticationToken.getKeyHash()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.Authentication.getCredentials()
org.springframework.security.Authentication.getCredentials()
java.lang.String.equals(java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.Authentication.getPrincipal()
java.lang.String.equals(java.lang.Object)
org.springframework.security.Authentication.getCredentials()
java.lang.Object.toString()
org.springframework.security.providers.cas.StatelessTicketCache.getByTicketId(java.lang.String)
org.springframework.security.providers.cas.CasAuthenticationProvider.authenticateNow(org.springframework.security.Authentication)
org.springframework.security.Authentication.getDetails()
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.providers.cas.StatelessTicketCache.putTicketInCache(org.springframework.security.providers.cas.CasAuthenticationToken)
361 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProvider.authenticateNow(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.Authentication.getCredentials()
java.lang.Object.toString()
org.springframework.security.ui.cas.ServiceProperties.getService()
org.jasig.cas.client.validation.TicketValidator.validate(java.lang.String, java.lang.String)
org.jasig.cas.client.validation.Assertion.getPrincipal()
java.security.Principal.getName()
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetailsChecker.check(org.springframework.security.userdetails.UserDetails)
org.springframework.security.Authentication.getCredentials()
org.springframework.security.userdetails.UserDetails.getAuthorities()
362 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProvider.getUserDetailsService()
362 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
362 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProvider.setServiceProperties(org.springframework.security.ui.cas.ServiceProperties)
362 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProvider.getKey()
362 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProvider.setKey(java.lang.String)
362 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProvider.getStatelessTicketCache()
362 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProvider.getTicketValidator()
362 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProvider.setMessageSource(org.springframework.context.MessageSource)
362 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.providers.cas.StatelessTicketCache)
362 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
362 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.isAssignableFrom(java.lang.Class)
363 - Declaração do método: org.springframework.security.providers.cas.cache.EhCacheBasedTicketCache.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
364 - Declaração do método: org.springframework.security.providers.cas.cache.EhCacheBasedTicketCache.getByTicketId(java.lang.String)
Métodos invocados: 
net.sf.ehcache.Ehcache.get(java.io.Serializable)
java.lang.Throwable.getMessage()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
net.sf.ehcache.Element.getValue()
365 - Declaração do método: org.springframework.security.providers.cas.cache.EhCacheBasedTicketCache.getCache()
365 - Declaração do método: org.springframework.security.providers.cas.cache.EhCacheBasedTicketCache.putTicketInCache(org.springframework.security.providers.cas.CasAuthenticationToken)
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationToken.getCredentials()
java.lang.Object.toString()
org.apache.commons.logging.Log.isDebugEnabled()
net.sf.ehcache.Element.getKey()
org.apache.commons.logging.Log.debug(java.lang.Object)
net.sf.ehcache.Ehcache.put(net.sf.ehcache.Element)
366 - Declaração do método: org.springframework.security.providers.cas.cache.EhCacheBasedTicketCache.removeTicketFromCache(org.springframework.security.providers.cas.CasAuthenticationToken)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.providers.cas.CasAuthenticationToken.getCredentials()
java.lang.Object.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.providers.cas.CasAuthenticationToken.getCredentials()
java.lang.Object.toString()
org.springframework.security.providers.cas.cache.EhCacheBasedTicketCache.removeTicketFromCache(java.lang.String)
367 - Declaração do método: org.springframework.security.providers.cas.cache.EhCacheBasedTicketCache.removeTicketFromCache(java.lang.String)
Métodos invocados: 
net.sf.ehcache.Ehcache.remove(java.io.Serializable)
368 - Declaração do método: org.springframework.security.providers.cas.cache.EhCacheBasedTicketCache.setCache(net.sf.ehcache.Ehcache)
368 - Declaração do método: org.springframework.security.providers.cas.cache.NullStatelessTicketCache.getByTicketId(java.lang.String)
368 - Declaração do método: org.springframework.security.providers.cas.cache.NullStatelessTicketCache.putTicketInCache(org.springframework.security.providers.cas.CasAuthenticationToken)
368 - Declaração do método: org.springframework.security.providers.cas.cache.NullStatelessTicketCache.removeTicketFromCache(org.springframework.security.providers.cas.CasAuthenticationToken)
368 - Declaração do método: org.springframework.security.providers.cas.cache.NullStatelessTicketCache.removeTicketFromCache(java.lang.String)
368 - Declaração do método: org.springframework.security.ui.cas.ServiceProperties.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
369 - Declaração do método: org.springframework.security.ui.cas.ServiceProperties.getService()
369 - Declaração do método: org.springframework.security.ui.cas.ServiceProperties.isSendRenew()
369 - Declaração do método: org.springframework.security.ui.cas.ServiceProperties.setSendRenew(Z)
369 - Declaração do método: org.springframework.security.ui.cas.ServiceProperties.setService(java.lang.String)
369 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getParameter(java.lang.String)
org.springframework.security.ui.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.ui.AbstractProcessingFilter.getAuthenticationManager()
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
370 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilter.getDefaultFilterProcessesUrl()
370 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilter.getOrder()
370 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
371 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
Métodos invocados: 
org.springframework.security.ui.cas.ServiceProperties.getService()
org.jasig.cas.client.util.CommonUtils.constructServiceUrl(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String, java.lang.String, java.lang.String, Z)
org.springframework.security.ui.cas.ServiceProperties.isSendRenew()
org.jasig.cas.client.util.CommonUtils.constructRedirectUrl(java.lang.String, java.lang.String, java.lang.String, Z, Z)
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
372 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.getLoginUrl()
372 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.getServiceProperties()
372 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.setLoginUrl(java.lang.String)
372 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.setServiceProperties(org.springframework.security.ui.cas.ServiceProperties)
372 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.setEncodeServiceUrlWithSessionId(Z)
372 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeUserDetails()
372 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeUserDetailsFromAuthoritiesPopulator()
372 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeServiceProperties()
Métodos invocados: 
org.springframework.security.ui.cas.ServiceProperties.setSendRenew(Z)
org.springframework.security.ui.cas.ServiceProperties.setService(java.lang.String)
373 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests.statefulAuthenticationIsSuccessful()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.cas.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.providers.cas.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.providers.cas.StatelessTicketCache)
org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.providers.cas.CasAuthenticationProvider.setServiceProperties(org.springframework.security.ui.cas.ServiceProperties)
org.springframework.security.providers.cas.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.providers.cas.CasAuthenticationProvider.afterPropertiesSet()
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.providers.cas.CasAuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.springframework.security.providers.cas.StatelessTicketCache.getByTicketId(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeUserDetailsFromAuthoritiesPopulator()
org.springframework.security.providers.cas.CasAuthenticationToken.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.cas.CasAuthenticationToken.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.cas.CasAuthenticationProvider.getKey()
java.lang.String.hashCode()
org.springframework.security.providers.cas.CasAuthenticationToken.getKeyHash()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.providers.AbstractAuthenticationToken.getDetails()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.cas.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.providers.cas.CasAuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
374 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests.statelessAuthenticationIsSuccessful()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.cas.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.providers.cas.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.providers.cas.StatelessTicketCache)
org.springframework.security.providers.cas.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.providers.cas.CasAuthenticationProvider.setServiceProperties(org.springframework.security.ui.cas.ServiceProperties)
org.springframework.security.providers.cas.CasAuthenticationProvider.afterPropertiesSet()
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.providers.cas.CasAuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.springframework.security.providers.cas.StatelessTicketCache.getByTicketId(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeUserDetailsFromAuthoritiesPopulator()
org.springframework.security.Authentication.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.Authentication.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.Authentication.getDetails()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.cas.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.providers.cas.CasAuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeUserDetailsFromAuthoritiesPopulator()
org.springframework.security.Authentication.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.Authentication.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
375 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests.missingTicketIdIsDetected()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.cas.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.providers.cas.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.providers.cas.StatelessTicketCache)
org.springframework.security.providers.cas.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.providers.cas.CasAuthenticationProvider.setServiceProperties(org.springframework.security.ui.cas.ServiceProperties)
org.springframework.security.providers.cas.CasAuthenticationProvider.afterPropertiesSet()
org.springframework.security.providers.cas.CasAuthenticationProvider.authenticate(org.springframework.security.Authentication)
376 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests.invalidKeyIsDetected()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.cas.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.providers.cas.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.providers.cas.StatelessTicketCache)
org.springframework.security.providers.cas.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.providers.cas.CasAuthenticationProvider.setServiceProperties(org.springframework.security.ui.cas.ServiceProperties)
org.springframework.security.providers.cas.CasAuthenticationProvider.afterPropertiesSet()
org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationProvider.authenticate(org.springframework.security.Authentication)
377 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests.detectsMissingAuthoritiesPopulator()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.providers.cas.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.providers.cas.StatelessTicketCache)
org.springframework.security.providers.cas.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.providers.cas.CasAuthenticationProvider.setServiceProperties(org.springframework.security.ui.cas.ServiceProperties)
org.springframework.security.providers.cas.CasAuthenticationProvider.afterPropertiesSet()
378 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests.detectsMissingKey()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.cas.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.providers.cas.StatelessTicketCache)
org.springframework.security.providers.cas.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.providers.cas.CasAuthenticationProvider.setServiceProperties(org.springframework.security.ui.cas.ServiceProperties)
org.springframework.security.providers.cas.CasAuthenticationProvider.afterPropertiesSet()
379 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests.detectsMissingStatelessTicketCache()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.providers.cas.StatelessTicketCache)
org.springframework.security.providers.cas.CasAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.cas.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.providers.cas.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.providers.cas.CasAuthenticationProvider.setServiceProperties(org.springframework.security.ui.cas.ServiceProperties)
org.springframework.security.providers.cas.CasAuthenticationProvider.afterPropertiesSet()
380 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests.detectsMissingTicketValidator()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.cas.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.providers.cas.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.providers.cas.StatelessTicketCache)
org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.providers.cas.CasAuthenticationProvider.setServiceProperties(org.springframework.security.ui.cas.ServiceProperties)
org.springframework.security.providers.cas.CasAuthenticationProvider.afterPropertiesSet()
381 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests.gettersAndSettersMatch()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.cas.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.providers.cas.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.providers.cas.StatelessTicketCache)
org.springframework.security.providers.cas.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.providers.cas.CasAuthenticationProvider.setServiceProperties(org.springframework.security.ui.cas.ServiceProperties)
org.springframework.security.providers.cas.CasAuthenticationProvider.afterPropertiesSet()
org.springframework.security.providers.cas.CasAuthenticationProvider.getUserDetailsService()
org.junit.Assert.assertTrue(Z)
org.springframework.security.providers.cas.CasAuthenticationProvider.getKey()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.cas.CasAuthenticationProvider.getStatelessTicketCache()
org.junit.Assert.assertTrue(Z)
org.springframework.security.providers.cas.CasAuthenticationProvider.getTicketValidator()
org.junit.Assert.assertTrue(Z)
382 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests.ignoresClassesItDoesNotSupport()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.cas.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.providers.cas.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.providers.cas.StatelessTicketCache)
org.springframework.security.providers.cas.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.providers.cas.CasAuthenticationProvider.setServiceProperties(org.springframework.security.ui.cas.ServiceProperties)
org.springframework.security.providers.cas.CasAuthenticationProvider.afterPropertiesSet()
org.springframework.security.providers.cas.CasAuthenticationProvider.supports(java.lang.Class)
org.junit.Assert.assertFalse(Z)
org.springframework.security.providers.cas.CasAuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
383 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests.ignoresUsernamePasswordAuthenticationTokensWithoutCasIdentifiersAsPrincipal()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.cas.CasAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.providers.cas.CasAuthenticationProvider.setStatelessTicketCache(org.springframework.security.providers.cas.StatelessTicketCache)
org.springframework.security.providers.cas.CasAuthenticationProvider.setTicketValidator(org.jasig.cas.client.validation.TicketValidator)
org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeServiceProperties()
org.springframework.security.providers.cas.CasAuthenticationProvider.setServiceProperties(org.springframework.security.ui.cas.ServiceProperties)
org.springframework.security.providers.cas.CasAuthenticationProvider.afterPropertiesSet()
org.springframework.security.providers.cas.CasAuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
384 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests.supportsRequiredTokens()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationProvider.supports(java.lang.Class)
org.junit.Assert.assertTrue(Z)
org.springframework.security.providers.cas.CasAuthenticationProvider.supports(java.lang.Class)
org.junit.Assert.assertTrue(Z)
385 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests$MockAuthoritiesPopulator.loadUserByUsername(java.lang.String)
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationProviderTests.makeUserDetailsFromAuthoritiesPopulator()
386 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests$MockStatelessTicketCache.getByTicketId(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
387 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests$MockStatelessTicketCache.putTicketInCache(org.springframework.security.providers.cas.CasAuthenticationToken)
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationToken.getCredentials()
java.lang.Object.toString()
java.util.Map.put(java.lang.Object, java.lang.Object)
388 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests$MockStatelessTicketCache.removeTicketFromCache(org.springframework.security.providers.cas.CasAuthenticationToken)
388 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests$MockStatelessTicketCache.removeTicketFromCache(java.lang.String)
388 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests$MockTicketValidator.MockTicketValidator(Z)
388 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationProviderTests$MockTicketValidator.validate(java.lang.String, java.lang.String)
388 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationTokenTests.CasAuthenticationTokenTests()
388 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationTokenTests.CasAuthenticationTokenTests(java.lang.String)
388 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationTokenTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
389 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails(java.lang.String)
390 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails(java.lang.String)
390 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationTokenTests.setUp()
390 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationTokenTests.testConstructorRejectsNulls()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
391 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationTokenTests.testEqualsWhenEqual()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
392 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationTokenTests.testGetters()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
java.lang.String.hashCode()
org.springframework.security.providers.cas.CasAuthenticationToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.cas.CasAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.cas.CasAuthenticationToken.getAssertion()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.providers.cas.CasAuthenticationToken.getUserDetails()
org.springframework.security.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
393 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationTokenTests.testNoArgConstructorDoesntExist()
Métodos invocados: 
java.lang.Class.getDeclaredConstructor([Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
394 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationTokenTests.testNotEqualsDueToAbstractParentEqualsCheck()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails(java.lang.String)
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
395 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationTokenTests.testNotEqualsDueToDifferentAuthenticationClass()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
396 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationTokenTests.testNotEqualsDueToKey()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
397 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationTokenTests.testNotEqualsDueToAssertion()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
398 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationTokenTests.testSetAuthenticated()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.AbstractAuthenticationToken.setAuthenticated(Z)
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
399 - Declaração do método: org.springframework.security.providers.cas.CasAuthenticationTokenTests.testToString()
Métodos invocados: 
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationTokenTests.makeUserDetails()
org.springframework.security.providers.cas.CasAuthenticationToken.toString()
java.lang.String.lastIndexOf(java.lang.String)
junit.framework.Assert.assertTrue(Z)
400 - Declaração do método: org.springframework.security.providers.cas.cache.EhCacheBasedTicketCacheTests.initCacheManaer()
Métodos invocados: 
net.sf.ehcache.CacheManager.addCache(net.sf.ehcache.Cache)
401 - Declaração do método: org.springframework.security.providers.cas.cache.EhCacheBasedTicketCacheTests.shutdownCacheManager()
Métodos invocados: 
net.sf.ehcache.CacheManager.removalAll()
net.sf.ehcache.CacheManager.shutdown()
402 - Declaração do método: org.springframework.security.providers.cas.cache.EhCacheBasedTicketCacheTests.testCacheOperation()
Métodos invocados: 
net.sf.ehcache.CacheManager.getCache(java.lang.String)
org.springframework.security.providers.cas.cache.EhCacheBasedTicketCache.setCache(net.sf.ehcache.Ehcache)
org.springframework.security.providers.cas.cache.EhCacheBasedTicketCache.afterPropertiesSet()
org.springframework.security.providers.cas.cache.AbstractStatelessTicketCacheTests.getToken()
org.springframework.security.providers.cas.cache.EhCacheBasedTicketCache.putTicketInCache(org.springframework.security.providers.cas.CasAuthenticationToken)
org.springframework.security.providers.cas.cache.EhCacheBasedTicketCache.getByTicketId(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.cas.cache.AbstractStatelessTicketCacheTests.getToken()
org.springframework.security.providers.cas.cache.EhCacheBasedTicketCache.removeTicketFromCache(org.springframework.security.providers.cas.CasAuthenticationToken)
org.springframework.security.providers.cas.cache.EhCacheBasedTicketCache.getByTicketId(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.providers.cas.cache.EhCacheBasedTicketCache.getByTicketId(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.providers.cas.cache.EhCacheBasedTicketCache.getByTicketId(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
403 - Declaração do método: org.springframework.security.providers.cas.cache.EhCacheBasedTicketCacheTests.testStartupDetectsMissingCache()
Métodos invocados: 
org.springframework.security.providers.cas.cache.EhCacheBasedTicketCache.afterPropertiesSet()
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
net.sf.ehcache.CacheManager.getCache(java.lang.String)
org.springframework.security.providers.cas.cache.EhCacheBasedTicketCache.setCache(net.sf.ehcache.Ehcache)
org.springframework.security.providers.cas.cache.EhCacheBasedTicketCache.getCache()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
404 - Declaração do método: org.springframework.security.providers.cas.cache.NullStatelessTicketCacheTests.testGetter()
Métodos invocados: 
org.springframework.security.providers.cas.StatelessTicketCache.getByTicketId(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.providers.cas.StatelessTicketCache.getByTicketId(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
405 - Declaração do método: org.springframework.security.providers.cas.cache.NullStatelessTicketCacheTests.testInsertAndGet()
Métodos invocados: 
org.springframework.security.providers.cas.cache.AbstractStatelessTicketCacheTests.getToken()
org.springframework.security.providers.cas.StatelessTicketCache.putTicketInCache(org.springframework.security.providers.cas.CasAuthenticationToken)
org.springframework.security.providers.cas.CasAuthenticationToken.getCredentials()
org.springframework.security.providers.cas.StatelessTicketCache.getByTicketId(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
406 - Declaração do método: org.springframework.security.providers.cas.cache.AbstractStatelessTicketCacheTests.getToken()
Métodos invocados: 
java.util.List.add(java.lang.String)
407 - Declaração do método: org.springframework.security.ui.cas.ServicePropertiesTests.ServicePropertiesTests()
407 - Declaração do método: org.springframework.security.ui.cas.ServicePropertiesTests.ServicePropertiesTests(java.lang.String)
407 - Declaração do método: org.springframework.security.ui.cas.ServicePropertiesTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
408 - Declaração do método: org.springframework.security.ui.cas.ServicePropertiesTests.setUp()
408 - Declaração do método: org.springframework.security.ui.cas.ServicePropertiesTests.testDetectsMissingLoginFormUrl()
Métodos invocados: 
org.springframework.security.ui.cas.ServiceProperties.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
409 - Declaração do método: org.springframework.security.ui.cas.ServicePropertiesTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.ui.cas.ServiceProperties.setSendRenew(Z)
org.springframework.security.ui.cas.ServiceProperties.isSendRenew()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.ui.cas.ServiceProperties.setSendRenew(Z)
org.springframework.security.ui.cas.ServiceProperties.isSendRenew()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ui.cas.ServiceProperties.setService(java.lang.String)
org.springframework.security.ui.cas.ServiceProperties.getService()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ui.cas.ServiceProperties.afterPropertiesSet()
410 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterTests.CasProcessingFilterTests()
410 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterTests.CasProcessingFilterTests(java.lang.String)
410 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
411 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterTests.setUp()
411 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterTests.testGetters()
Métodos invocados: 
org.springframework.security.ui.cas.CasProcessingFilter.getDefaultFilterProcessesUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
412 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterTests.testNormalOperation()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.SpringSecurityFilter.init(javax.servlet.FilterConfig)
org.springframework.security.ui.cas.CasProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertTrue(Z)
413 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterTests.testNullServiceTicketHandledGracefully()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.SpringSecurityFilter.init(javax.servlet.FilterConfig)
org.springframework.security.ui.cas.CasProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
414 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterEntryPointTests.CasProcessingFilterEntryPointTests()
414 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterEntryPointTests.CasProcessingFilterEntryPointTests(java.lang.String)
414 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterEntryPointTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
415 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterEntryPointTests.setUp()
415 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterEntryPointTests.testDetectsMissingLoginFormUrl()
Métodos invocados: 
org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.setServiceProperties(org.springframework.security.ui.cas.ServiceProperties)
org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
416 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterEntryPointTests.testDetectsMissingServiceProperties()
Métodos invocados: 
org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.setLoginUrl(java.lang.String)
org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
417 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterEntryPointTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.setLoginUrl(java.lang.String)
org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.getLoginUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.setServiceProperties(org.springframework.security.ui.cas.ServiceProperties)
org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.getServiceProperties()
junit.framework.Assert.assertTrue(Z)
418 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterEntryPointTests.testNormalOperationWithRenewFalse()
Métodos invocados: 
org.springframework.security.ui.cas.ServiceProperties.setSendRenew(Z)
org.springframework.security.ui.cas.ServiceProperties.setService(java.lang.String)
org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.setLoginUrl(java.lang.String)
org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.setServiceProperties(org.springframework.security.ui.cas.ServiceProperties)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.afterPropertiesSet()
org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
419 - Declaração do método: org.springframework.security.ui.cas.CasProcessingFilterEntryPointTests.testNormalOperationWithRenewTrue()
Métodos invocados: 
org.springframework.security.ui.cas.ServiceProperties.setSendRenew(Z)
org.springframework.security.ui.cas.ServiceProperties.setService(java.lang.String)
org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.setLoginUrl(java.lang.String)
org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.setServiceProperties(org.springframework.security.ui.cas.ServiceProperties)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.afterPropertiesSet()
org.springframework.security.ui.cas.CasProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
java.net.URLEncoder.encode(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
420 - Declaração do método: org.springframework.security.SecurityConfig.SecurityConfig(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
421 - Declaração do método: org.springframework.security.SecurityConfig.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
422 - Declaração do método: org.springframework.security.SecurityConfig.getAttribute()
422 - Declaração do método: org.springframework.security.SecurityConfig.hashCode()
Métodos invocados: 
java.lang.String.hashCode()
423 - Declaração do método: org.springframework.security.SecurityConfig.toString()
423 - Declaração do método: org.springframework.security.AccessDecisionManager.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
423 - Declaração do método: org.springframework.security.AccessDecisionManager.supports(org.springframework.security.ConfigAttribute)
423 - Declaração do método: org.springframework.security.AccessDecisionManager.supports(java.lang.Class)
423 - Declaração do método: org.springframework.security.GrantedAuthorityImpl.GrantedAuthorityImpl(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
424 - Declaração do método: org.springframework.security.GrantedAuthorityImpl.equals(java.lang.Object)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
org.springframework.security.GrantedAuthority.getAuthority()
java.lang.String.equals(java.lang.Object)
425 - Declaração do método: org.springframework.security.GrantedAuthorityImpl.getAuthority()
425 - Declaração do método: org.springframework.security.GrantedAuthorityImpl.hashCode()
Métodos invocados: 
java.lang.String.hashCode()
426 - Declaração do método: org.springframework.security.GrantedAuthorityImpl.toString()
426 - Declaração do método: org.springframework.security.GrantedAuthorityImpl.compareTo(java.lang.Object)
Métodos invocados: 
org.springframework.security.GrantedAuthority.getAuthority()
java.lang.String.compareTo(java.lang.String)
427 - Declaração do método: org.springframework.security.InsufficientAuthenticationException.InsufficientAuthenticationException(java.lang.String)
427 - Declaração do método: org.springframework.security.InsufficientAuthenticationException.InsufficientAuthenticationException(java.lang.String, java.lang.Throwable)
427 - Declaração do método: org.springframework.security.RunAsManager.buildRunAs(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
427 - Declaração do método: org.springframework.security.RunAsManager.supports(org.springframework.security.ConfigAttribute)
427 - Declaração do método: org.springframework.security.RunAsManager.supports(java.lang.Class)
427 - Declaração do método: org.springframework.security.AuthorizationServiceException.AuthorizationServiceException(java.lang.String)
427 - Declaração do método: org.springframework.security.AuthorizationServiceException.AuthorizationServiceException(java.lang.String, java.lang.Throwable)
427 - Declaração do método: org.springframework.security.LockedException.LockedException(java.lang.String)
427 - Declaração do método: org.springframework.security.LockedException.LockedException(java.lang.String, java.lang.Throwable)
427 - Declaração do método: org.springframework.security.LockedException.LockedException(java.lang.String, java.lang.Object)
427 - Declaração do método: org.springframework.security.AuthenticationException.AuthenticationException(java.lang.String, java.lang.Throwable)
427 - Declaração do método: org.springframework.security.AuthenticationException.AuthenticationException(java.lang.String)
427 - Declaração do método: org.springframework.security.AuthenticationException.AuthenticationException(java.lang.String, java.lang.Object)
427 - Declaração do método: org.springframework.security.AuthenticationException.getAuthentication()
427 - Declaração do método: org.springframework.security.AuthenticationException.setAuthentication(org.springframework.security.Authentication)
427 - Declaração do método: org.springframework.security.AuthenticationException.getExtraInformation()
427 - Declaração do método: org.springframework.security.AuthenticationException.clearExtraInformation()
427 - Declaração do método: org.springframework.security.GrantedAuthority.getAuthority()
427 - Declaração do método: org.springframework.security.AccountExpiredException.AccountExpiredException(java.lang.String)
427 - Declaração do método: org.springframework.security.AccountExpiredException.AccountExpiredException(java.lang.String, java.lang.Throwable)
427 - Declaração do método: org.springframework.security.AccountExpiredException.AccountExpiredException(java.lang.String, java.lang.Object)
427 - Declaração do método: org.springframework.security.AfterInvocationManager.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
427 - Declaração do método: org.springframework.security.AfterInvocationManager.supports(org.springframework.security.ConfigAttribute)
427 - Declaração do método: org.springframework.security.AfterInvocationManager.supports(java.lang.Class)
427 - Declaração do método: org.springframework.security.ConfigAttribute.getAttribute()
427 - Declaração do método: org.springframework.security.MutableGrantedAuthoritiesContainer.setGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;)
427 - Declaração do método: org.springframework.security.SpringSecurityMessageSource.SpringSecurityMessageSource()
Métodos invocados: 
org.springframework.context.support.ResourceBundleMessageSource.setBasename(java.lang.String)
428 - Declaração do método: org.springframework.security.SpringSecurityMessageSource.getAccessor()
428 - Declaração do método: org.springframework.security.GrantedAuthoritiesContainer.getGrantedAuthorities()
428 - Declaração do método: org.springframework.security.AuthenticationCredentialsNotFoundException.AuthenticationCredentialsNotFoundException(java.lang.String)
428 - Declaração do método: org.springframework.security.AuthenticationCredentialsNotFoundException.AuthenticationCredentialsNotFoundException(java.lang.String, java.lang.Throwable)
428 - Declaração do método: org.springframework.security.ConfigAttributeDefinition.ConfigAttributeDefinition()
428 - Declaração do método: org.springframework.security.ConfigAttributeDefinition.ConfigAttributeDefinition(java.lang.String)
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.Collections.unmodifiableList(java.util.List)
429 - Declaração do método: org.springframework.security.ConfigAttributeDefinition.ConfigAttributeDefinition(org.springframework.security.ConfigAttribute)
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.Collections.unmodifiableList(java.util.List)
430 - Declaração do método: org.springframework.security.ConfigAttributeDefinition.ConfigAttributeDefinition([Ljava.lang.String;)
Métodos invocados: 
java.lang.String.trim()
java.util.List.add(java.lang.Object)
java.util.Collections.unmodifiableList(java.util.List)
431 - Declaração do método: org.springframework.security.ConfigAttributeDefinition.ConfigAttributeDefinition(java.util.List)
Métodos invocados: 
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
java.util.Collections.unmodifiableList(java.util.List)
432 - Declaração do método: org.springframework.security.ConfigAttributeDefinition.contains(org.springframework.security.ConfigAttribute)
Métodos invocados: 
java.util.List.contains(java.lang.Object)
433 - Declaração do método: org.springframework.security.ConfigAttributeDefinition.equals(java.lang.Object)
Métodos invocados: 
java.util.List.equals(java.lang.Object)
434 - Declaração do método: org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
434 - Declaração do método: org.springframework.security.ConfigAttributeDefinition.toString()
Métodos invocados: 
java.lang.Object.toString()
435 - Declaração do método: org.springframework.security.Authentication.getAuthorities()
435 - Declaração do método: org.springframework.security.Authentication.getCredentials()
435 - Declaração do método: org.springframework.security.Authentication.getDetails()
435 - Declaração do método: org.springframework.security.Authentication.getPrincipal()
435 - Declaração do método: org.springframework.security.Authentication.isAuthenticated()
435 - Declaração do método: org.springframework.security.Authentication.setAuthenticated(Z)
435 - Declaração do método: org.springframework.security.AccountStatusException.AccountStatusException(java.lang.String)
435 - Declaração do método: org.springframework.security.AccountStatusException.AccountStatusException(java.lang.String, java.lang.Throwable)
435 - Declaração do método: org.springframework.security.AccountStatusException.AccountStatusException(java.lang.String, java.lang.Object)
435 - Declaração do método: org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
435 - Declaração do método: org.springframework.security.AccessDeniedException.AccessDeniedException(java.lang.String)
435 - Declaração do método: org.springframework.security.AccessDeniedException.AccessDeniedException(java.lang.String, java.lang.Throwable)
435 - Declaração do método: org.springframework.security.AuthenticationTrustResolver.isAnonymous(org.springframework.security.Authentication)
435 - Declaração do método: org.springframework.security.AuthenticationTrustResolver.isRememberMe(org.springframework.security.Authentication)
435 - Declaração do método: org.springframework.security.ConfigAttributeEditor.setAsText(java.lang.String)
Métodos invocados: 
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
java.beans.PropertyEditorSupport.setValue(java.lang.Object)
java.beans.PropertyEditorSupport.setValue(java.lang.Object)
436 - Declaração do método: org.springframework.security.MockAuthenticationManager.MockAuthenticationManager(Z)
436 - Declaração do método: org.springframework.security.MockAuthenticationManager.MockAuthenticationManager()
436 - Declaração do método: org.springframework.security.MockAuthenticationManager.doAuthentication(org.springframework.security.Authentication)
436 - Declaração do método: org.springframework.security.CredentialsExpiredException.CredentialsExpiredException(java.lang.String)
436 - Declaração do método: org.springframework.security.CredentialsExpiredException.CredentialsExpiredException(java.lang.String, java.lang.Throwable)
436 - Declaração do método: org.springframework.security.CredentialsExpiredException.CredentialsExpiredException(java.lang.String, java.lang.Object)
436 - Declaração do método: org.springframework.security.BadCredentialsException.BadCredentialsException(java.lang.String)
436 - Declaração do método: org.springframework.security.BadCredentialsException.BadCredentialsException(java.lang.String, java.lang.Object)
436 - Declaração do método: org.springframework.security.BadCredentialsException.BadCredentialsException(java.lang.String, java.lang.Throwable)
436 - Declaração do método: org.springframework.security.AbstractAuthenticationManager.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.AbstractAuthenticationManager.doAuthentication(org.springframework.security.Authentication)
org.springframework.security.AuthenticationException.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.AuthenticationException.clearExtraInformation()
437 - Declaração do método: org.springframework.security.AbstractAuthenticationManager.doAuthentication(org.springframework.security.Authentication)
437 - Declaração do método: org.springframework.security.AbstractAuthenticationManager.setClearExtraInformation(Z)
437 - Declaração do método: org.springframework.security.SpringSecurityException.SpringSecurityException(java.lang.String, java.lang.Throwable)
437 - Declaração do método: org.springframework.security.SpringSecurityException.SpringSecurityException(java.lang.String)
437 - Declaração do método: org.springframework.security.AuthenticationServiceException.AuthenticationServiceException(java.lang.String)
437 - Declaração do método: org.springframework.security.AuthenticationServiceException.AuthenticationServiceException(java.lang.String, java.lang.Throwable)
437 - Declaração do método: org.springframework.security.AuthenticationTrustResolverImpl.getAnonymousClass()
437 - Declaração do método: org.springframework.security.AuthenticationTrustResolverImpl.getRememberMeClass()
437 - Declaração do método: org.springframework.security.AuthenticationTrustResolverImpl.isAnonymous(org.springframework.security.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
438 - Declaração do método: org.springframework.security.AuthenticationTrustResolverImpl.isRememberMe(org.springframework.security.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
439 - Declaração do método: org.springframework.security.AuthenticationTrustResolverImpl.setAnonymousClass(java.lang.Class)
439 - Declaração do método: org.springframework.security.AuthenticationTrustResolverImpl.setRememberMeClass(java.lang.Class)
439 - Declaração do método: org.springframework.security.DisabledException.DisabledException(java.lang.String)
439 - Declaração do método: org.springframework.security.DisabledException.DisabledException(java.lang.String, java.lang.Throwable)
439 - Declaração do método: org.springframework.security.DisabledException.DisabledException(java.lang.String, java.lang.Object)
439 - Declaração do método: org.springframework.security.acl.AclProviderManager.afterPropertiesSet()
Métodos invocados: 
org.springframework.security.acl.AclProviderManager.checkIfValidList(java.util.List)
440 - Declaração do método: org.springframework.security.acl.AclProviderManager.checkIfValidList(java.util.List)
Métodos invocados: 
org.springframework.util.Assert.notEmpty(java.util.Collection, java.lang.String)
441 - Declaração do método: org.springframework.security.acl.AclProviderManager.getAcls(java.lang.Object)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.acl.AclProvider.supports(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acl.AclProvider.getAcls(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
442 - Declaração do método: org.springframework.security.acl.AclProviderManager.getAcls(java.lang.Object, org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.acl.AclProvider.supports(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acl.AclProvider.getAcls(java.lang.Object, org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
443 - Declaração do método: org.springframework.security.acl.AclProviderManager.getProviders()
443 - Declaração do método: org.springframework.security.acl.AclProviderManager.setProviders(java.util.List)
Métodos invocados: 
org.springframework.security.acl.AclProviderManager.checkIfValidList(java.util.List)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
444 - Declaração do método: org.springframework.security.acl.AclProvider.getAcls(java.lang.Object)
444 - Declaração do método: org.springframework.security.acl.AclProvider.getAcls(java.lang.Object, org.springframework.security.Authentication)
444 - Declaração do método: org.springframework.security.acl.AclProvider.supports(java.lang.Object)
444 - Declaração do método: org.springframework.security.acl.AclManager.getAcls(java.lang.Object)
444 - Declaração do método: org.springframework.security.acl.AclManager.getAcls(java.lang.Object, org.springframework.security.Authentication)
444 - Declaração do método: org.springframework.security.acl.basic.BasicAclProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.Class.isAssignableFrom(java.lang.Class)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
java.lang.Class.getConstructor([Ljava.lang.Class;)
445 - Declaração do método: org.springframework.security.acl.basic.BasicAclProvider.getAcls(java.lang.Object)
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclProvider.obtainIdentity(java.lang.Object)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acl.basic.BasicAclProvider.lookup(org.springframework.security.acl.basic.AclObjectIdentity)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.BasicAclEntry.getAclObjectParentIdentity()
org.springframework.security.acl.basic.BasicAclProvider.lookup(org.springframework.security.acl.basic.AclObjectIdentity)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
java.util.Map.containsKey(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
java.util.Map.put(java.lang.Object, java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acl.basic.BasicAclEntry.getAclObjectParentIdentity()
java.util.Map.values()
java.util.Collection.toArray([Ljava.lang.Object;)
446 - Declaração do método: org.springframework.security.acl.basic.BasicAclProvider.getAcls(java.lang.Object, org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclProvider.getAcls(java.lang.Object)
org.springframework.security.acl.basic.EffectiveAclsResolver.resolveEffectiveAcls([Lorg.springframework.security.acl.AclEntry;, org.springframework.security.Authentication)
447 - Declaração do método: org.springframework.security.acl.basic.BasicAclProvider.getBasicAclDao()
447 - Declaração do método: org.springframework.security.acl.basic.BasicAclProvider.getBasicAclEntryCache()
447 - Declaração do método: org.springframework.security.acl.basic.BasicAclProvider.getDefaultAclObjectIdentityClass()
447 - Declaração do método: org.springframework.security.acl.basic.BasicAclProvider.getEffectiveAclsResolver()
447 - Declaração do método: org.springframework.security.acl.basic.BasicAclProvider.getRestrictSupportToClass()
447 - Declaração do método: org.springframework.security.acl.basic.BasicAclProvider.lookup(org.springframework.security.acl.basic.AclObjectIdentity)
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclEntryCache.getEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.acl.basic.BasicAclDao.getAcls(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.BasicAclEntryCache.putEntriesInCache([Lorg.springframework.security.acl.basic.BasicAclEntry;)
org.springframework.security.acl.basic.BasicAclEntryCache.putEntriesInCache([Lorg.springframework.security.acl.basic.BasicAclEntry;)
448 - Declaração do método: org.springframework.security.acl.basic.BasicAclProvider.obtainIdentity(java.lang.Object)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acl.basic.AclObjectIdentityAware.getAclObjectIdentity()
java.lang.Class.getConstructor([Ljava.lang.Class;)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Throwable.getMessage()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
java.lang.Throwable.getCause()
java.lang.Throwable.getCause()
java.lang.Throwable.getMessage()
java.lang.Throwable.getCause()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
449 - Declaração do método: org.springframework.security.acl.basic.BasicAclProvider.setBasicAclDao(org.springframework.security.acl.basic.BasicAclDao)
449 - Declaração do método: org.springframework.security.acl.basic.BasicAclProvider.setBasicAclEntryCache(org.springframework.security.acl.basic.BasicAclEntryCache)
449 - Declaração do método: org.springframework.security.acl.basic.BasicAclProvider.setDefaultAclObjectIdentityClass(java.lang.Class)
449 - Declaração do método: org.springframework.security.acl.basic.BasicAclProvider.setEffectiveAclsResolver(org.springframework.security.acl.basic.EffectiveAclsResolver)
449 - Declaração do método: org.springframework.security.acl.basic.BasicAclProvider.setRestrictSupportToClass(java.lang.Class)
449 - Declaração do método: org.springframework.security.acl.basic.BasicAclProvider.supports(java.lang.Object)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acl.basic.BasicAclProvider.obtainIdentity(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.acl.basic.BasicAclProvider.obtainIdentity(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
450 - Declaração do método: org.springframework.security.acl.basic.BasicAclEntry.getAclObjectIdentity()
450 - Declaração do método: org.springframework.security.acl.basic.BasicAclEntry.getAclObjectParentIdentity()
450 - Declaração do método: org.springframework.security.acl.basic.BasicAclEntry.getMask()
450 - Declaração do método: org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
450 - Declaração do método: org.springframework.security.acl.basic.BasicAclEntry.isPermitted(I)
450 - Declaração do método: org.springframework.security.acl.basic.BasicAclEntry.setAclObjectIdentity(org.springframework.security.acl.basic.AclObjectIdentity)
450 - Declaração do método: org.springframework.security.acl.basic.BasicAclEntry.setAclObjectParentIdentity(org.springframework.security.acl.basic.AclObjectIdentity)
450 - Declaração do método: org.springframework.security.acl.basic.BasicAclEntry.setMask(I)
450 - Declaração do método: org.springframework.security.acl.basic.BasicAclEntry.setRecipient(java.lang.Object)
450 - Declaração do método: org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolver.resolveEffectiveAcls([Lorg.springframework.security.acl.AclEntry;, org.springframework.security.Authentication)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.equals(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.userdetails.UserDetails.getUsername()
java.lang.String.equals(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.Authentication.getAuthorities()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.size()
org.apache.commons.logging.Log.isDebugEnabled()
java.util.List.size()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.List.toArray([Ljava.lang.Object;)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
451 - Declaração do método: org.springframework.security.acl.basic.BasicAclExtendedDao.changeMask(org.springframework.security.acl.basic.AclObjectIdentity, java.lang.Object, java.lang.Integer)
451 - Declaração do método: org.springframework.security.acl.basic.BasicAclExtendedDao.create(org.springframework.security.acl.basic.BasicAclEntry)
451 - Declaração do método: org.springframework.security.acl.basic.BasicAclExtendedDao.delete(org.springframework.security.acl.basic.AclObjectIdentity)
451 - Declaração do método: org.springframework.security.acl.basic.BasicAclExtendedDao.delete(org.springframework.security.acl.basic.AclObjectIdentity, java.lang.Object)
451 - Declaração do método: org.springframework.security.acl.basic.BasicAclDao.getAcls(org.springframework.security.acl.basic.AclObjectIdentity)
451 - Declaração do método: org.springframework.security.acl.basic.EffectiveAclsResolver.resolveEffectiveAcls([Lorg.springframework.security.acl.AclEntry;, org.springframework.security.Authentication)
451 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.AbstractBasicAclEntry(java.lang.Object, org.springframework.security.acl.basic.AclObjectIdentity, org.springframework.security.acl.basic.AclObjectIdentity, I)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acl.basic.AbstractBasicAclEntry.getValidPermissions()
java.util.Arrays.sort([I)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.acl.basic.AbstractBasicAclEntry.printPermissionsBlock(I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.printBinary(I)
org.apache.commons.logging.Log.debug(java.lang.Object)
452 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.AbstractBasicAclEntry()
Métodos invocados: 
org.springframework.security.acl.basic.AbstractBasicAclEntry.getValidPermissions()
java.util.Arrays.sort([I)
453 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.addPermission(I)
Métodos invocados: 
org.springframework.security.acl.basic.AbstractBasicAclEntry.addPermissions([I)
454 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.addPermissions([I)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.acl.basic.AbstractBasicAclEntry.printPermissionsBlock(I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.printBinary(I)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.acl.basic.AbstractBasicAclEntry.printPermissionsBlock(I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.printBinary(I)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Arrays.binarySearch([I, I)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.acl.basic.AbstractBasicAclEntry.printPermissionsBlock(I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.printBinary(I)
org.apache.commons.logging.Log.debug(java.lang.Object)
455 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.deletePermission(I)
Métodos invocados: 
org.springframework.security.acl.basic.AbstractBasicAclEntry.deletePermissions([I)
456 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.deletePermissions([I)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.acl.basic.AbstractBasicAclEntry.printPermissionsBlock(I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.printBinary(I)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.acl.basic.AbstractBasicAclEntry.printPermissionsBlock(I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.printBinary(I)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Arrays.binarySearch([I, I)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.acl.basic.AbstractBasicAclEntry.printPermissionsBlock(I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.printBinary(I)
org.apache.commons.logging.Log.debug(java.lang.Object)
457 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.getAclObjectIdentity()
457 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.getAclObjectParentIdentity()
457 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.getMask()
457 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.getRecipient()
457 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.getValidPermissions()
457 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I)
Métodos invocados: 
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I, I)
458 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I, I)
458 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.printBinary(I)
Métodos invocados: 
java.lang.Integer.toString(I, I)
java.lang.String.length()
java.lang.String.length()
java.lang.String.substring(I, I)
java.lang.String.replace(C, C)
459 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.printPermissionsBlock(I)
459 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.printPermissionsBlock()
Métodos invocados: 
org.springframework.security.acl.basic.AbstractBasicAclEntry.printPermissionsBlock(I)
460 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.setAclObjectIdentity(org.springframework.security.acl.basic.AclObjectIdentity)
460 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.setAclObjectParentIdentity(org.springframework.security.acl.basic.AclObjectIdentity)
460 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.setMask(I)
460 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.setRecipient(java.lang.Object)
460 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.toString()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
org.springframework.security.acl.basic.AbstractBasicAclEntry.printPermissionsBlock(I)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
org.springframework.security.acl.basic.AbstractBasicAclEntry.printBinary(I)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(I)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
461 - Declaração do método: org.springframework.security.acl.basic.AbstractBasicAclEntry.togglePermission(I)
Métodos invocados: 
java.util.Arrays.binarySearch([I, I)
462 - Declaração do método: org.springframework.security.acl.basic.AclObjectIdentity.equals(java.lang.Object)
462 - Declaração do método: org.springframework.security.acl.basic.AclObjectIdentity.hashCode()
462 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntry.SimpleAclEntry()
462 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntry.SimpleAclEntry(java.lang.Object, org.springframework.security.acl.basic.AclObjectIdentity, org.springframework.security.acl.basic.AclObjectIdentity, I)
462 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntry.getValidPermissions()
Métodos invocados: 
java.lang.Object.clone()
463 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntry.printPermissionsBlock(I)
Métodos invocados: 
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I, I)
java.lang.StringBuffer.append(C)
java.lang.StringBuffer.append(C)
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I, I)
java.lang.StringBuffer.append(C)
java.lang.StringBuffer.append(C)
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I, I)
java.lang.StringBuffer.append(C)
java.lang.StringBuffer.append(C)
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I, I)
java.lang.StringBuffer.append(C)
java.lang.StringBuffer.append(C)
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I, I)
java.lang.StringBuffer.append(C)
java.lang.StringBuffer.append(C)
java.lang.StringBuffer.toString()
464 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntry.parsePermission(java.lang.String)
Métodos invocados: 
java.lang.String.equalsIgnoreCase(java.lang.String)
465 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntry.parsePermissions([Ljava.lang.String;)
Métodos invocados: 
org.springframework.security.acl.basic.SimpleAclEntry.parsePermission(java.lang.String)
466 - Declaração do método: org.springframework.security.acl.basic.BasicAclEntryCache.getEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
466 - Declaração do método: org.springframework.security.acl.basic.BasicAclEntryCache.putEntriesInCache([Lorg.springframework.security.acl.basic.BasicAclEntry;)
466 - Declaração do método: org.springframework.security.acl.basic.BasicAclEntryCache.removeEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
466 - Declaração do método: org.springframework.security.acl.basic.NamedEntityObjectIdentity.NamedEntityObjectIdentity(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
467 - Declaração do método: org.springframework.security.acl.basic.NamedEntityObjectIdentity.NamedEntityObjectIdentity(java.lang.Object)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.Object.getClass()
java.lang.Class.getName()
org.springframework.security.acl.basic.NamedEntityObjectIdentity.getPackageName(java.lang.String)
java.lang.Object.getClass()
org.springframework.util.ClassUtils.getShortName(java.lang.Class)
java.lang.Object.getClass()
java.lang.Class.getName()
org.springframework.security.acl.basic.NamedEntityObjectIdentity.getPackageName(java.lang.String)
java.lang.Object.getClass()
org.springframework.util.ClassUtils.getShortName(java.lang.Class)
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
java.lang.Object.toString()
468 - Declaração do método: org.springframework.security.acl.basic.NamedEntityObjectIdentity.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.acl.basic.NamedEntityObjectIdentity.getId()
org.springframework.security.acl.basic.NamedEntityObjectIdentity.getId()
java.lang.String.equals(java.lang.Object)
org.springframework.security.acl.basic.NamedEntityObjectIdentity.getClassname()
org.springframework.security.acl.basic.NamedEntityObjectIdentity.getClassname()
java.lang.String.equals(java.lang.Object)
469 - Declaração do método: org.springframework.security.acl.basic.NamedEntityObjectIdentity.getClassname()
469 - Declaração do método: org.springframework.security.acl.basic.NamedEntityObjectIdentity.getId()
469 - Declaração do método: org.springframework.security.acl.basic.NamedEntityObjectIdentity.getPackageName(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.substring(I, I)
470 - Declaração do método: org.springframework.security.acl.basic.NamedEntityObjectIdentity.hashCode()
Métodos invocados: 
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
java.lang.String.hashCode()
471 - Declaração do método: org.springframework.security.acl.basic.NamedEntityObjectIdentity.toString()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
472 - Declaração do método: org.springframework.security.acl.basic.AclObjectIdentityAware.getAclObjectIdentity()
472 - Declaração do método: org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCache.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
473 - Declaração do método: org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCache.getEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
Métodos invocados: 
net.sf.ehcache.Ehcache.get(java.io.Serializable)
java.lang.Throwable.getMessage()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
net.sf.ehcache.Element.getValue()
org.springframework.security.acl.basic.cache.BasicAclEntryHolder.getBasicAclEntries()
474 - Declaração do método: org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCache.putEntriesInCache([Lorg.springframework.security.acl.basic.BasicAclEntry;)
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclEntry.getAclObjectIdentity()
org.apache.commons.logging.Log.isDebugEnabled()
net.sf.ehcache.Element.getKey()
org.apache.commons.logging.Log.debug(java.lang.Object)
net.sf.ehcache.Ehcache.put(net.sf.ehcache.Element)
475 - Declaração do método: org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCache.removeEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
Métodos invocados: 
net.sf.ehcache.Ehcache.remove(java.io.Serializable)
476 - Declaração do método: org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCache.getCache()
476 - Declaração do método: org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCache.setCache(net.sf.ehcache.Ehcache)
476 - Declaração do método: org.springframework.security.acl.basic.cache.NullAclEntryCache.getEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
476 - Declaração do método: org.springframework.security.acl.basic.cache.NullAclEntryCache.putEntriesInCache([Lorg.springframework.security.acl.basic.BasicAclEntry;)
476 - Declaração do método: org.springframework.security.acl.basic.cache.NullAclEntryCache.removeEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
476 - Declaração do método: org.springframework.security.acl.basic.cache.BasicAclEntryHolder.BasicAclEntryHolder([Lorg.springframework.security.acl.basic.BasicAclEntry;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
477 - Declaração do método: org.springframework.security.acl.basic.cache.BasicAclEntryHolder.getBasicAclEntries()
477 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.JdbcDaoImpl()
477 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.convertAclObjectIdentityToString(org.springframework.security.acl.basic.AclObjectIdentity)
Métodos invocados: 
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.acl.basic.NamedEntityObjectIdentity.getClassname()
org.springframework.security.acl.basic.NamedEntityObjectIdentity.getId()
478 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.createBasicAclEntry(org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder, org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder)
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getAclClass()
java.lang.Class.newInstance()
java.lang.Throwable.getMessage()
java.lang.Throwable.getMessage()
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getAclObjectIdentity()
org.springframework.security.acl.basic.BasicAclEntry.setAclObjectIdentity(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getAclObjectParentIdentity()
org.springframework.security.acl.basic.BasicAclEntry.setAclObjectParentIdentity(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.BasicAclEntry.setMask(I)
org.springframework.security.acl.basic.BasicAclEntry.setRecipient(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getMask()
org.springframework.security.acl.basic.BasicAclEntry.setMask(I)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getRecipient()
org.springframework.security.acl.basic.BasicAclEntry.setRecipient(java.lang.Object)
479 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAcls(org.springframework.security.acl.basic.AclObjectIdentity)
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.convertAclObjectIdentityToString(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.jdbc.object.SqlQuery.execute(java.lang.String)
java.util.List.size()
java.util.List.get(I)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getForeignKeyId()
org.springframework.jdbc.object.SqlQuery.execute(J)
java.util.List.size()
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.createBasicAclEntry(org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder, org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder)
java.util.List.toArray([Ljava.lang.Object;)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.createBasicAclEntry(org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder, org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder)
java.util.List.add(java.lang.Object)
java.util.List.toArray([Ljava.lang.Object;)
480 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAclsByObjectIdentity()
480 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAclsByObjectIdentityQuery()
480 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getObjectPropertiesQuery()
480 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.initDao()
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.initMappingSqlQueries()
481 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.initMappingSqlQueries()
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.setAclsByObjectIdentity(org.springframework.jdbc.object.MappingSqlQuery)
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.setObjectProperties(org.springframework.jdbc.object.MappingSqlQuery)
482 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.setAclsByObjectIdentity(org.springframework.jdbc.object.MappingSqlQuery)
482 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.setAclsByObjectIdentityQuery(java.lang.String)
482 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.setObjectProperties(org.springframework.jdbc.object.MappingSqlQuery)
482 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.setObjectPropertiesQuery(java.lang.String)
482 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.AclDetailsHolder(java.lang.Object, I)
482 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.AclDetailsHolder(J, org.springframework.security.acl.basic.AclObjectIdentity, org.springframework.security.acl.basic.AclObjectIdentity, java.lang.Class)
482 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getAclClass()
482 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getAclObjectIdentity()
482 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getAclObjectParentIdentity()
482 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getForeignKeyId()
482 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getMask()
482 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getRecipient()
482 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclsByObjectIdentityMapping.AclsByObjectIdentityMapping(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
483 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclsByObjectIdentityMapping.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getString(I)
java.sql.ResultSet.getInt(I)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
484 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$ObjectPropertiesMapping.ObjectPropertiesMapping(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
485 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$ObjectPropertiesMapping.buildIdentity(java.lang.String)
Métodos invocados: 
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.substring(I, I)
java.lang.String.substring(I)
486 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$ObjectPropertiesMapping.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getLong(I)
java.sql.ResultSet.getString(I)
java.sql.ResultSet.getString(I)
java.sql.ResultSet.getString(I)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
java.lang.Object.getClass()
java.lang.Class.getClassLoader()
java.lang.ClassLoader.loadClass(java.lang.String)
java.lang.Throwable.getMessage()
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$ObjectPropertiesMapping.buildIdentity(java.lang.String)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$ObjectPropertiesMapping.buildIdentity(java.lang.String)
487 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.JdbcExtendedDaoImpl()
487 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.changeMask(org.springframework.security.acl.basic.AclObjectIdentity, java.lang.Object, java.lang.Integer)
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclEntryCache.removeEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.lookupAclDetailsHolder(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getForeignKeyId()
java.lang.Object.toString()
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.lookupPermissionId(J, java.lang.Object)
java.lang.Object.toString()
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclPermissionUpdate.update(java.lang.Long, java.lang.Integer)
488 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.create(org.springframework.security.acl.basic.BasicAclEntry)
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.createAclObjectIdentityIfRequired(org.springframework.security.acl.basic.BasicAclEntry)
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
org.springframework.security.acl.basic.BasicAclEntry.getAclObjectIdentity()
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.lookupAclDetailsHolder(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getForeignKeyId()
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.lookupPermissionId(J, java.lang.Object)
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getForeignKeyId()
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getForeignKeyId()
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
java.lang.Object.toString()
org.springframework.security.acl.basic.BasicAclEntry.getMask()
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclPermissionInsert.insert(java.lang.Long, java.lang.String, java.lang.Integer)
489 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.createAclObjectIdentityIfRequired(org.springframework.security.acl.basic.BasicAclEntry)
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclEntry.getAclObjectIdentity()
org.springframework.security.acl.basic.BasicAclEntryCache.removeEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.BasicAclEntry.getAclObjectIdentity()
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.convertAclObjectIdentityToString(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.jdbc.object.SqlQuery.execute(java.lang.String)
java.util.List.size()
org.springframework.security.acl.basic.BasicAclEntry.getAclObjectParentIdentity()
org.springframework.security.acl.basic.BasicAclEntry.getAclObjectParentIdentity()
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.lookupAclDetailsHolder(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getForeignKeyId()
java.lang.Object.getClass()
java.lang.Class.getName()
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclObjectIdentityInsert.insert(java.lang.String, java.lang.Long, java.lang.String)
java.lang.Object.getClass()
java.lang.Class.getName()
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclObjectIdentityInsert.insert(java.lang.String, java.lang.Long, java.lang.String)
490 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.delete(org.springframework.security.acl.basic.AclObjectIdentity)
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclEntryCache.removeEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.lookupAclDetailsHolder(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getForeignKeyId()
org.springframework.jdbc.object.SqlQuery.execute(J)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getRecipient()
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.delete(org.springframework.security.acl.basic.AclObjectIdentity, java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getForeignKeyId()
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclObjectIdentityDelete.delete(java.lang.Long)
491 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.delete(org.springframework.security.acl.basic.AclObjectIdentity, java.lang.Object)
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclEntryCache.removeEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.lookupAclDetailsHolder(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl$AclDetailsHolder.getForeignKeyId()
java.lang.Object.toString()
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclPermissionDelete.delete(java.lang.Long, java.lang.String)
492 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclObjectIdentityDelete()
492 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclObjectIdentityDeleteStatement()
492 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclObjectIdentityInsert()
492 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclObjectIdentityInsertStatement()
492 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclPermissionDelete()
492 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclPermissionDeleteStatement()
492 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclPermissionInsert()
492 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclPermissionInsertStatement()
492 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclPermissionUpdate()
492 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclPermissionUpdateStatement()
492 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getBasicAclEntryCache()
492 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getLookupPermissionIdMapping()
492 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getLookupPermissionIdQuery()
492 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.initDao()
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
493 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.lookupAclDetailsHolder(org.springframework.security.acl.basic.AclObjectIdentity)
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.convertAclObjectIdentityToString(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.jdbc.object.SqlQuery.execute(java.lang.String)
java.util.List.size()
java.util.List.get(I)
494 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.lookupPermissionId(J, java.lang.Object)
Métodos invocados: 
org.springframework.jdbc.object.SqlQuery.execute([Ljava.lang.Object;)
java.util.List.size()
java.util.List.get(I)
java.lang.Long.longValue()
495 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclObjectIdentityDelete(org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclObjectIdentityDelete)
495 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclObjectIdentityDeleteStatement(java.lang.String)
495 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclObjectIdentityInsert(org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclObjectIdentityInsert)
495 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclObjectIdentityInsertStatement(java.lang.String)
495 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclPermissionDelete(org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclPermissionDelete)
495 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclPermissionDeleteStatement(java.lang.String)
495 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclPermissionInsert(org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclPermissionInsert)
495 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclPermissionInsertStatement(java.lang.String)
495 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclPermissionUpdate(org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclPermissionUpdate)
495 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclPermissionUpdateStatement(java.lang.String)
495 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setBasicAclEntryCache(org.springframework.security.acl.basic.BasicAclEntryCache)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
496 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setLookupPermissionIdMapping(org.springframework.jdbc.object.MappingSqlQuery)
496 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setLookupPermissionIdQuery(java.lang.String)
496 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclObjectIdentityDelete.AclObjectIdentityDelete(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
497 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclObjectIdentityDelete.delete(java.lang.Long)
Métodos invocados: 
java.lang.Long.intValue()
498 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclObjectIdentityInsert.AclObjectIdentityInsert(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
499 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclObjectIdentityInsert.insert(java.lang.String, java.lang.Long, java.lang.String)
499 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclPermissionDelete.AclPermissionDelete(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
500 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclPermissionDelete.delete(java.lang.Long, java.lang.String)
500 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclPermissionInsert.AclPermissionInsert(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
501 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclPermissionInsert.insert(java.lang.Long, java.lang.String, java.lang.Integer)
501 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclPermissionUpdate.AclPermissionUpdate(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
502 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclPermissionUpdate.update(java.lang.Long, java.lang.Integer)
Métodos invocados: 
java.lang.Integer.intValue()
java.lang.Long.intValue()
503 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$LookupPermissionIdMapping.LookupPermissionIdMapping(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
504 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$LookupPermissionIdMapping.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getLong(I)
505 - Declaração do método: org.springframework.security.adapters.AuthByAdapterProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
506 - Declaração do método: org.springframework.security.adapters.AuthByAdapterProvider.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.adapters.AuthByAdapter.getKeyHash()
java.lang.String.hashCode()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
507 - Declaração do método: org.springframework.security.adapters.AuthByAdapterProvider.getKey()
507 - Declaração do método: org.springframework.security.adapters.AuthByAdapterProvider.setKey(java.lang.String)
507 - Declaração do método: org.springframework.security.adapters.AuthByAdapterProvider.setMessageSource(org.springframework.context.MessageSource)
507 - Declaração do método: org.springframework.security.adapters.AuthByAdapterProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
508 - Declaração do método: org.springframework.security.adapters.PrincipalSpringSecurityUserToken.PrincipalSpringSecurityUserToken(java.lang.String, java.lang.String, java.lang.String, [Lorg.springframework.security.GrantedAuthority;, java.lang.Object)
508 - Declaração do método: org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getCredentials()
508 - Declaração do método: org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getName()
508 - Declaração do método: org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getPrincipal()
508 - Declaração do método: org.springframework.security.adapters.HttpRequestIntegrationFilter.destroy()
508 - Declaração do método: org.springframework.security.adapters.HttpRequestIntegrationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getUserPrincipal()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
509 - Declaração do método: org.springframework.security.adapters.HttpRequestIntegrationFilter.init(javax.servlet.FilterConfig)
509 - Declaração do método: org.springframework.security.adapters.AuthByAdapter.getKeyHash()
509 - Declaração do método: org.springframework.security.adapters.AbstractAdapterAuthenticationToken.AbstractAdapterAuthenticationToken()
509 - Declaração do método: org.springframework.security.adapters.AbstractAdapterAuthenticationToken.AbstractAdapterAuthenticationToken(java.lang.String, [Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
java.lang.String.hashCode()
510 - Declaração do método: org.springframework.security.adapters.AbstractAdapterAuthenticationToken.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.getKeyHash()
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.getKeyHash()
511 - Declaração do método: org.springframework.security.adapters.AbstractAdapterAuthenticationToken.getKeyHash()
511 - Declaração do método: org.springframework.security.adapters.AbstractAdapterAuthenticationToken.isAuthenticated()
511 - Declaração do método: org.springframework.security.adapters.AbstractAdapterAuthenticationToken.isUserInRole(java.lang.String)
Métodos invocados: 
org.springframework.security.GrantedAuthority.getAuthority()
java.lang.String.equals(java.lang.Object)
512 - Declaração do método: org.springframework.security.adapters.AbstractAdapterAuthenticationToken.setAuthenticated(Z)
512 - Declaração do método: org.springframework.security.afterinvocation.CollectionFilterer.CollectionFilterer(java.util.Collection)
512 - Declaração do método: org.springframework.security.afterinvocation.CollectionFilterer.getFilteredObject()
Métodos invocados: 
java.util.Set.iterator()
java.util.Collection.size()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Collection.remove(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
java.util.Collection.size()
org.apache.commons.logging.Log.debug(java.lang.Object)
513 - Declaração do método: org.springframework.security.afterinvocation.CollectionFilterer.iterator()
Métodos invocados: 
java.util.Collection.iterator()
514 - Declaração do método: org.springframework.security.afterinvocation.CollectionFilterer.remove(java.lang.Object)
Métodos invocados: 
java.util.Set.add(java.lang.Object)
515 - Declaração do método: org.springframework.security.afterinvocation.Filterer.getFilteredObject()
515 - Declaração do método: org.springframework.security.afterinvocation.Filterer.iterator()
515 - Declaração do método: org.springframework.security.afterinvocation.Filterer.remove(java.lang.Object)
515 - Declaração do método: org.springframework.security.afterinvocation.ArrayFilterer.ArrayFilterer([Ljava.lang.Object;)
515 - Declaração do método: org.springframework.security.afterinvocation.ArrayFilterer.getFilteredObject()
Métodos invocados: 
java.util.Set.size()
java.lang.Object.getClass()
java.lang.Class.getComponentType()
java.lang.reflect.Array.newInstance(java.lang.Class, I)
java.util.Set.contains(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
516 - Declaração do método: org.springframework.security.afterinvocation.ArrayFilterer.iterator()
516 - Declaração do método: org.springframework.security.afterinvocation.ArrayFilterer.remove(java.lang.Object)
Métodos invocados: 
java.util.Set.add(java.lang.Object)
517 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
517 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProvider.supports(org.springframework.security.ConfigAttribute)
517 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProvider.supports(java.lang.Class)
517 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
518 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.supports(org.springframework.security.ConfigAttribute)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.Object.getClass()
java.lang.Class.isArray()
org.springframework.security.afterinvocation.Filterer.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
org.springframework.security.acl.AclManager.getAcls(java.lang.Object, org.springframework.security.Authentication)
org.springframework.security.acl.basic.BasicAclEntry.isPermitted(I)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.afterinvocation.Filterer.remove(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.afterinvocation.Filterer.getFilteredObject()
519 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.getAclManager()
519 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.getProcessConfigAttribute()
519 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.getRequirePermission()
519 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setAclManager(org.springframework.security.acl.AclManager)
519 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setProcessConfigAttribute(java.lang.String)
519 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setProcessDomainObjectClass(java.lang.Class)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
520 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setRequirePermission([I)
520 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setRequirePermissionFromString([Ljava.lang.String;)
Métodos invocados: 
org.springframework.security.acl.basic.SimpleAclEntry.parsePermissions([Ljava.lang.String;)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setRequirePermission([I)
521 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.getProcessConfigAttribute()
java.lang.String.equals(java.lang.Object)
522 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.supports(java.lang.Class)
522 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProviderManager.afterPropertiesSet()
Métodos invocados: 
org.springframework.security.afterinvocation.AfterInvocationProviderManager.checkIfValidList(java.util.List)
523 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProviderManager.checkIfValidList(java.util.List)
Métodos invocados: 
java.util.List.size()
524 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProviderManager.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
Métodos invocados: 
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.afterinvocation.AfterInvocationProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
525 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProviderManager.getProviders()
525 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProviderManager.setProviders(java.util.List)
Métodos invocados: 
org.springframework.security.afterinvocation.AfterInvocationProviderManager.checkIfValidList(java.util.List)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.Object.getClass()
java.lang.Class.getName()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
526 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProviderManager.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.afterinvocation.AfterInvocationProvider.supports(org.springframework.security.ConfigAttribute)
527 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProviderManager.supports(java.lang.Class)
Métodos invocados: 
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.afterinvocation.AfterInvocationProvider.supports(java.lang.Class)
528 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
529 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.supports(org.springframework.security.ConfigAttribute)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acl.AclManager.getAcls(java.lang.Object, org.springframework.security.Authentication)
java.security.Principal.getName()
org.springframework.context.i18n.LocaleContextHolder.getLocale()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String, java.util.Locale)
org.springframework.security.acl.basic.BasicAclEntry.isPermitted(I)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.security.Principal.getName()
org.springframework.context.i18n.LocaleContextHolder.getLocale()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String, java.util.Locale)
530 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.getAclManager()
530 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.getProcessConfigAttribute()
530 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.getRequirePermission()
530 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.setAclManager(org.springframework.security.acl.AclManager)
530 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.setMessageSource(org.springframework.context.MessageSource)
530 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.setProcessConfigAttribute(java.lang.String)
530 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.setProcessDomainObjectClass(java.lang.Class)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
531 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.setRequirePermission([I)
531 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.setRequirePermissionFromString([Ljava.lang.String;)
Métodos invocados: 
org.springframework.security.acl.basic.SimpleAclEntry.parsePermissions([Ljava.lang.String;)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.setRequirePermission([I)
532 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.getProcessConfigAttribute()
java.lang.String.equals(java.lang.Object)
533 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.supports(java.lang.Class)
533 - Declaração do método: org.springframework.security.authoritymapping.MappableAttributesRetriever.getMappableAttributes()
533 - Declaração do método: org.springframework.security.authoritymapping.SimpleMappableAttributesRetriever.getMappableAttributes()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
534 - Declaração do método: org.springframework.security.authoritymapping.SimpleMappableAttributesRetriever.setMappableAttributes([Ljava.lang.String;)
Métodos invocados: 
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
535 - Declaração do método: org.springframework.security.authoritymapping.Attributes2GrantedAuthoritiesMapper.getGrantedAuthorities([Ljava.lang.String;)
535 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.getMappableAttributes(java.io.InputStream)
536 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.getMappableAttributes()
Métodos invocados: 
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
537 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.getMappableAttributes(java.io.InputStream)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.getDocument(java.io.InputStream)
org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.getMappableAttributes(org.w3c.dom.Document)
org.apache.commons.logging.Log.isDebugEnabled()
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.io.InputStream.close()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
538 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.getDocument(java.io.InputStream)
Métodos invocados: 
javax.xml.parsers.DocumentBuilderFactory.newInstance()
javax.xml.parsers.DocumentBuilderFactory.setValidating(Z)
javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder()
javax.xml.parsers.DocumentBuilder.setEntityResolver(org.xml.sax.EntityResolver)
javax.xml.parsers.DocumentBuilder.parse(java.io.InputStream)
539 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.getMappableAttributes(org.w3c.dom.Document)
Métodos invocados: 
org.jaxen.BaseXPath.selectNodes(java.lang.Object)
java.util.List.size()
java.util.List.get(I)
org.w3c.dom.Node.getNodeValue()
540 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.setXmlInputStream(java.io.InputStream)
540 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.setXpathExpression(java.lang.String)
540 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.setCloseInputStream(Z)
540 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableAttributesRetriever$MyEntityResolver.resolveEntity(java.lang.String, java.lang.String)
540 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableAttributesRetriever$IgnoreCloseInputStream.IgnoreCloseInputStream(java.io.InputStream)
540 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableAttributesRetriever$IgnoreCloseInputStream.close()
540 - Declaração do método: org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.afterPropertiesSet()
Métodos invocados: 
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.isConvertAttributeToUpperCase()
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.isConvertAttributeToLowerCase()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
541 - Declaração do método: org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.getGrantedAuthorities([Ljava.lang.String;)
Métodos invocados: 
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.getGrantedAuthority(java.lang.String)
542 - Declaração do método: org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.getGrantedAuthority(java.lang.String)
Métodos invocados: 
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.isConvertAttributeToLowerCase()
java.util.Locale.getDefault()
java.lang.String.toLowerCase(java.util.Locale)
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.isConvertAttributeToUpperCase()
java.util.Locale.getDefault()
java.lang.String.toUpperCase(java.util.Locale)
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.isAddPrefixIfAlreadyExisting()
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.getAttributePrefix()
java.lang.String.startsWith(java.lang.String)
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.getAttributePrefix()
543 - Declaração do método: org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.isConvertAttributeToLowerCase()
543 - Declaração do método: org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToLowerCase(Z)
543 - Declaração do método: org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.isConvertAttributeToUpperCase()
543 - Declaração do método: org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToUpperCase(Z)
543 - Declaração do método: org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.getAttributePrefix()
543 - Declaração do método: org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.seAttributePrefix(java.lang.String)
543 - Declaração do método: org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.isAddPrefixIfAlreadyExisting()
543 - Declaração do método: org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.setAddPrefixIfAlreadyExisting(Z)
543 - Declaração do método: org.springframework.security.concurrent.SessionIdentifierAware.getSessionId()
543 - Declaração do método: org.springframework.security.concurrent.SessionAlreadyUsedException.SessionAlreadyUsedException(java.lang.String)
543 - Declaração do método: org.springframework.security.concurrent.NullConcurrentSessionController.checkAuthenticationAllowed(org.springframework.security.Authentication)
543 - Declaração do método: org.springframework.security.concurrent.NullConcurrentSessionController.registerSuccessfulAuthentication(org.springframework.security.Authentication)
543 - Declaração do método: org.springframework.security.concurrent.SessionRegistryUtils.SessionRegistryUtils()
543 - Declaração do método: org.springframework.security.concurrent.SessionRegistryUtils.obtainPrincipalFromAuthentication(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.Authentication.getPrincipal()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.Authentication.getPrincipal()
544 - Declaração do método: org.springframework.security.concurrent.SessionRegistryUtils.obtainSessionIdFromAuthentication(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.Authentication.getDetails()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.Authentication.getDetails()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object)
org.springframework.security.Authentication.getDetails()
org.springframework.security.concurrent.SessionIdentifierAware.getSessionId()
org.springframework.security.Authentication.getDetails()
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
545 - Declaração do método: org.springframework.security.concurrent.SessionInformation.SessionInformation(java.lang.Object, java.lang.String, java.util.Date)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
546 - Declaração do método: org.springframework.security.concurrent.SessionInformation.expireNow()
546 - Declaração do método: org.springframework.security.concurrent.SessionInformation.getLastRequest()
546 - Declaração do método: org.springframework.security.concurrent.SessionInformation.getPrincipal()
546 - Declaração do método: org.springframework.security.concurrent.SessionInformation.getSessionId()
546 - Declaração do método: org.springframework.security.concurrent.SessionInformation.isExpired()
546 - Declaração do método: org.springframework.security.concurrent.SessionInformation.refreshLastRequest()
546 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
547 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionFilter.doFilterHttp(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getSession(Z)
javax.servlet.http.HttpSession.getId()
org.springframework.security.concurrent.SessionRegistry.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionInformation.isExpired()
org.springframework.security.concurrent.ConcurrentSessionFilter.doLogout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.concurrent.ConcurrentSessionFilter.determineExpiredUrl(javax.servlet.http.HttpServletRequest, org.springframework.security.concurrent.SessionInformation)
javax.servlet.http.HttpServletRequest.getContextPath()
javax.servlet.http.HttpServletResponse.encodeRedirectURL(java.lang.String)
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
javax.servlet.ServletResponse.getWriter()
java.io.PrintWriter.print(java.lang.String)
javax.servlet.ServletResponse.flushBuffer()
org.springframework.security.concurrent.SessionInformation.refreshLastRequest()
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
548 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionFilter.determineExpiredUrl(javax.servlet.http.HttpServletRequest, org.springframework.security.concurrent.SessionInformation)
548 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionFilter.doLogout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.ui.logout.LogoutHandler.logout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
549 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionFilter.setExpiredUrl(java.lang.String)
549 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionFilter.setSessionRegistry(org.springframework.security.concurrent.SessionRegistry)
549 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionFilter.setLogoutHandlers([Lorg.springframework.security.ui.logout.LogoutHandler;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
550 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionFilter.getOrder()
550 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionControllerImpl.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
551 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionControllerImpl.allowableSessionsExceeded(java.lang.String, [Lorg.springframework.security.concurrent.SessionInformation;, I, org.springframework.security.concurrent.SessionRegistry)
Métodos invocados: 
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
org.springframework.security.concurrent.SessionInformation.getLastRequest()
org.springframework.security.concurrent.SessionInformation.getLastRequest()
java.util.Date.before(java.util.Date)
org.springframework.security.concurrent.SessionInformation.expireNow()
552 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionControllerImpl.checkAuthenticationAllowed(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.concurrent.SessionRegistryUtils.obtainPrincipalFromAuthentication(org.springframework.security.Authentication)
org.springframework.security.concurrent.SessionRegistryUtils.obtainSessionIdFromAuthentication(org.springframework.security.Authentication)
org.springframework.security.concurrent.SessionRegistry.getAllSessions(java.lang.Object, Z)
org.springframework.security.concurrent.ConcurrentSessionControllerImpl.getMaximumSessionsForThisUser(org.springframework.security.Authentication)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.concurrent.SessionInformation.getSessionId()
java.lang.String.equals(java.lang.Object)
org.springframework.security.concurrent.ConcurrentSessionControllerImpl.allowableSessionsExceeded(java.lang.String, [Lorg.springframework.security.concurrent.SessionInformation;, I, org.springframework.security.concurrent.SessionRegistry)
553 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionControllerImpl.getMaximumSessionsForThisUser(org.springframework.security.Authentication)
553 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionControllerImpl.registerSuccessfulAuthentication(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.concurrent.SessionRegistryUtils.obtainPrincipalFromAuthentication(org.springframework.security.Authentication)
org.springframework.security.concurrent.SessionRegistryUtils.obtainSessionIdFromAuthentication(org.springframework.security.Authentication)
org.springframework.security.concurrent.SessionRegistry.registerNewSession(java.lang.String, java.lang.Object)
554 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionControllerImpl.setExceptionIfMaximumExceeded(Z)
554 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionControllerImpl.setMaximumSessions(I)
554 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionControllerImpl.setMessageSource(org.springframework.context.MessageSource)
554 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionControllerImpl.setSessionRegistry(org.springframework.security.concurrent.SessionRegistry)
554 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImpl.getAllPrincipals()
Métodos invocados: 
java.util.Map.keySet()
java.util.Set.toArray()
555 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.concurrent.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionInformation.isExpired()
java.util.List.add(java.lang.Object)
java.util.List.toArray([Ljava.lang.Object;)
556 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImpl.getSessionInformation(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
557 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImpl.onApplicationEvent(org.springframework.context.ApplicationEvent)
Métodos invocados: 
java.util.EventObject.getSource()
javax.servlet.http.HttpSession.getId()
org.springframework.security.concurrent.SessionRegistryImpl.removeSessionInformation(java.lang.String)
558 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImpl.refreshLastRequest(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.security.concurrent.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionInformation.refreshLastRequest()
559 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.concurrent.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionRegistryImpl.removeSessionInformation(java.lang.String)
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Collections.synchronizedSet(java.util.Set)
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Set.add(java.lang.Object)
560 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImpl.removeSessionInformation(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.security.concurrent.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Map.remove(java.lang.Object)
org.springframework.security.concurrent.SessionInformation.getPrincipal()
java.util.Map.get(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Set.remove(java.lang.Object)
java.util.Set.size()
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.concurrent.SessionInformation.getPrincipal()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.concurrent.SessionInformation.getPrincipal()
java.util.Map.remove(java.lang.Object)
561 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionController.checkAuthenticationAllowed(org.springframework.security.Authentication)
561 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionController.registerSuccessfulAuthentication(org.springframework.security.Authentication)
561 - Declaração do método: org.springframework.security.concurrent.ConcurrentLoginException.ConcurrentLoginException(java.lang.String)
561 - Declaração do método: org.springframework.security.concurrent.SessionRegistry.getAllPrincipals()
561 - Declaração do método: org.springframework.security.concurrent.SessionRegistry.getAllSessions(java.lang.Object, Z)
561 - Declaração do método: org.springframework.security.concurrent.SessionRegistry.getSessionInformation(java.lang.String)
561 - Declaração do método: org.springframework.security.concurrent.SessionRegistry.refreshLastRequest(java.lang.String)
561 - Declaração do método: org.springframework.security.concurrent.SessionRegistry.registerNewSession(java.lang.String, java.lang.Object)
561 - Declaração do método: org.springframework.security.concurrent.SessionRegistry.removeSessionInformation(java.lang.String)
561 - Declaração do método: org.springframework.security.config.ApacheDSContainer.ApacheDSContainer(org.apache.directory.server.configuration.MutableServerStartupConfiguration, org.springframework.ldap.core.ContextSource, java.lang.String)
561 - Declaração do método: org.springframework.security.config.ApacheDSContainer.afterPropertiesSet()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
java.lang.System.getProperty(java.lang.String)
org.springframework.security.config.ApacheDSContainer.setWorkingDirectory(java.io.File)
org.springframework.security.config.ApacheDSContainer.start()
562 - Declaração do método: org.springframework.security.config.ApacheDSContainer.destroy()
Métodos invocados: 
org.springframework.security.config.ApacheDSContainer.stop()
563 - Declaração do método: org.springframework.security.config.ApacheDSContainer.setApplicationContext(org.springframework.context.ApplicationContext)
563 - Declaração do método: org.springframework.security.config.ApacheDSContainer.deleteDir(java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
java.io.File.list()
org.springframework.security.config.ApacheDSContainer.deleteDir(java.io.File)
java.io.File.delete()
564 - Declaração do método: org.springframework.security.config.ApacheDSContainer.setWorkingDirectory(java.io.File)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
java.io.File.getAbsolutePath()
org.apache.commons.logging.Log.info(java.lang.Object)
java.io.File.exists()
java.io.File.getAbsolutePath()
org.apache.directory.server.configuration.MutableServerStartupConfiguration.setWorkingDirectory(java.io.File)
565 - Declaração do método: org.springframework.security.config.ApacheDSContainer.start()
Métodos invocados: 
org.springframework.security.config.ApacheDSContainer.isRunning()
org.apache.directory.server.core.configuration.Configuration.getInstanceId()
org.apache.directory.server.core.DirectoryService.getInstance(java.lang.String)
org.apache.directory.server.core.DirectoryService.isStarted()
org.apache.directory.server.core.configuration.Configuration.getInstanceId()
org.apache.directory.server.core.configuration.Configuration.getInstanceId()
org.apache.commons.logging.Log.info(java.lang.Object)
java.lang.Class.getName()
java.util.Properties.setProperty(java.lang.String, java.lang.String)
java.util.Properties.setProperty(java.lang.String, java.lang.String)
java.util.Properties.setProperty(java.lang.String, java.lang.String)
java.util.Properties.setProperty(java.lang.String, java.lang.String)
org.apache.directory.server.core.configuration.Configuration.toJndiEnvironment()
java.util.Hashtable.putAll(java.util.Map)
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
org.springframework.security.config.ApacheDSContainer.importLdifs()
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
566 - Declaração do método: org.springframework.security.config.ApacheDSContainer.importLdifs()
Métodos invocados: 
org.springframework.core.io.support.ResourcePatternResolver.getResources(java.lang.String)
org.springframework.ldap.core.ContextSource.getReadWriteContext()
org.springframework.core.io.Resource.getFile()
java.io.File.getAbsolutePath()
org.apache.commons.logging.Log.info(java.lang.Object)
org.apache.directory.server.protocol.shared.store.LdifFileLoader.execute()
javax.naming.Context.close()
567 - Declaração do método: org.springframework.security.config.ApacheDSContainer.stop()
Métodos invocados: 
java.lang.Class.getName()
java.util.Properties.setProperty(java.lang.String, java.lang.String)
java.util.Properties.setProperty(java.lang.String, java.lang.String)
java.util.Properties.setProperty(java.lang.String, java.lang.String)
java.util.Properties.setProperty(java.lang.String, java.lang.String)
org.apache.directory.server.core.configuration.Configuration.getInstanceId()
org.apache.directory.server.core.configuration.Configuration.toJndiEnvironment()
java.util.Hashtable.putAll(java.util.Map)
org.apache.directory.server.core.configuration.Configuration.getInstanceId()
org.apache.commons.logging.Log.info(java.lang.Object)
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
java.io.File.exists()
java.io.File.getAbsolutePath()
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.security.config.ApacheDSContainer.deleteDir(java.io.File)
568 - Declaração do método: org.springframework.security.config.ApacheDSContainer.isRunning()
568 - Declaração do método: org.springframework.security.config.CustomAuthenticationProviderBeanDefinitionDecorator.decorate(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.security.config.ConfigUtils.getRegisteredProviders(org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.config.BeanDefinitionHolder.getBeanDefinition()
java.util.ArrayList.add(java.lang.Object)
569 - Declaração do método: org.springframework.security.config.AbstractUserDetailsServiceBeanDefinitionParser.resolveId(org.w3c.dom.Element, org.springframework.beans.factory.support.AbstractBeanDefinition, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.util.StringUtils.hasText(java.lang.String)
org.w3c.dom.Node.getParentNode()
org.w3c.dom.Node.getNodeName()
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.xml.XmlReaderContext.generateBeanName(org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.containsBeanDefinition(java.lang.String)
570 - Declaração do método: org.springframework.security.config.InterceptMethodsBeanDefinitionDecorator.decorate(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.security.config.ConfigUtils.registerProviderManagerIfNecessary(org.springframework.beans.factory.xml.ParserContext)
org.springframework.security.config.ConfigUtils.registerDefaultAccessManagerIfNecessary(org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.xml.BeanDefinitionDecorator.decorate(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.xml.ParserContext)
571 - Declaração do método: org.springframework.security.config.InternalInterceptMethodsBeanDefinitionDecorator.createInterceptorDefinition(org.w3c.dom.Node)
Métodos invocados: 
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.setAutowireMode(I)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.xml.DomUtils.getChildElementsByTagName(org.w3c.dom.Element, java.lang.String)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.security.ConfigAttributeEditor.setAsText(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.method.MethodDefinitionMap.addSecureMethod(java.lang.String, org.springframework.security.ConfigAttributeDefinition)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
572 - Declaração do método: org.springframework.security.config.BasicAuthenticationBeanDefinitionParser.BasicAuthenticationBeanDefinitionParser(java.lang.String)
572 - Declaração do método: org.springframework.security.config.BasicAuthenticationBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
573 - Declaração do método: org.springframework.security.config.LdapServerBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.LdapServerBeanDefinitionParser.createEmbeddedServer(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addIndexedArgumentValue(I, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.setSource(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
574 - Declaração do método: org.springframework.security.config.LdapServerBeanDefinitionParser.createEmbeddedServer(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.setSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.setSource(java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValues(java.lang.String, [Ljava.lang.Object;)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.getAttributes()
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.ManagedSet.add(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addIndexedArgumentValue(I, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.containsBeanDefinition(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
575 - Declaração do método: org.springframework.security.config.AnnotationDrivenBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.util.ClassUtils.isPresent(java.lang.String)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.util.ClassUtils.forName(java.lang.String)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
org.springframework.beans.factory.support.AbstractBeanDefinition.setRole(I)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.support.AbstractBeanDefinition.setRole(I)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.support.AbstractBeanDefinition.setRole(I)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.ConfigUtils.registerDefaultAccessManagerIfNecessary(org.springframework.beans.factory.xml.ParserContext)
org.springframework.security.config.ConfigUtils.addVoter(org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.support.AbstractBeanDefinition.setRole(I)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.aop.config.AopNamespaceUtils.registerAutoProxyCreatorIfNecessary(org.springframework.beans.factory.xml.ParserContext, java.lang.Object)
576 - Declaração do método: org.springframework.security.config.JdbcUserServiceBeanDefinitionParser.getBeanClass(org.w3c.dom.Element)
576 - Declaração do método: org.springframework.security.config.JdbcUserServiceBeanDefinitionParser.doParse(org.w3c.dom.Element, org.springframework.beans.factory.support.BeanDefinitionBuilder)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyReference(java.lang.String, java.lang.String)
577 - Declaração do método: org.springframework.security.config.FormLoginBeanDefinitionParser.FormLoginBeanDefinitionParser(java.lang.String, java.lang.String)
577 - Declaração do método: org.springframework.security.config.FormLoginBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.security.config.ConfigUtils.registerProviderManagerIfNecessary(org.springframework.beans.factory.xml.ParserContext)
org.springframework.security.config.FormLoginBeanDefinitionParser.createFilterBean(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.setSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
578 - Declaração do método: org.springframework.security.config.FormLoginBeanDefinitionParser.createFilterBean(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
579 - Declaração do método: org.springframework.security.config.FormLoginBeanDefinitionParser.getFilterBean()
579 - Declaração do método: org.springframework.security.config.FormLoginBeanDefinitionParser.getEntryPointBean()
579 - Declaração do método: org.springframework.security.config.FormLoginBeanDefinitionParser.getLoginPage()
579 - Declaração do método: org.springframework.security.config.ConcurrentSessionsBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.setSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.setSource(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.security.config.ConfigUtils.registerProviderManagerIfNecessary(org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
580 - Declaração do método: org.springframework.security.config.HttpSecurityConfigPostProcessor.postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
Métodos invocados: 
org.springframework.security.config.HttpSecurityConfigPostProcessor.injectUserDetailsServiceIntoRememberMeServices(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
org.springframework.security.config.HttpSecurityConfigPostProcessor.injectUserDetailsServiceIntoX509Provider(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
org.springframework.security.config.HttpSecurityConfigPostProcessor.injectUserDetailsServiceIntoOpenIDProvider(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
org.springframework.security.config.HttpSecurityConfigPostProcessor.injectAuthenticationEntryPointIntoExceptionTranslationFilter(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
org.springframework.security.config.HttpSecurityConfigPostProcessor.injectRememberMeServicesIntoFiltersRequiringIt(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
org.springframework.security.config.HttpSecurityConfigPostProcessor.configureFilterChain(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
581 - Declaração do método: org.springframework.security.config.HttpSecurityConfigPostProcessor.injectUserDetailsServiceIntoRememberMeServices(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
Métodos invocados: 
org.springframework.beans.factory.config.ConfigurableListableBeanFactory.getBeanDefinition(java.lang.String)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.getPropertyValue(java.lang.String)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.security.config.ConfigUtils.getUserDetailsService(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
582 - Declaração do método: org.springframework.security.config.HttpSecurityConfigPostProcessor.injectUserDetailsServiceIntoX509Provider(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
Métodos invocados: 
org.springframework.beans.factory.config.ConfigurableListableBeanFactory.getBeanDefinition(java.lang.String)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.getPropertyValue(java.lang.String)
org.springframework.security.config.ConfigUtils.getUserDetailsService(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
org.springframework.security.providers.preauth.UserDetailsByNameServiceWrapper.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
583 - Declaração do método: org.springframework.security.config.HttpSecurityConfigPostProcessor.injectUserDetailsServiceIntoOpenIDProvider(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
Métodos invocados: 
org.springframework.beans.factory.config.ConfigurableListableBeanFactory.getBeanDefinition(java.lang.String)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.getPropertyValue(java.lang.String)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.security.config.ConfigUtils.getUserDetailsService(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
584 - Declaração do método: org.springframework.security.config.HttpSecurityConfigPostProcessor.injectRememberMeServicesIntoFiltersRequiringIt(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
Métodos invocados: 
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
java.util.Map.size()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Map.size()
java.util.Map.values()
java.util.Collection.toArray()
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
java.util.Map.values()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.security.ui.AbstractProcessingFilter.setRememberMeServices(org.springframework.security.ui.rememberme.RememberMeServices)
org.springframework.security.config.HttpSecurityConfigPostProcessor.getBeanOfType(java.lang.Class, org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.security.ui.basicauth.BasicProcessingFilter.setRememberMeServices(org.springframework.security.ui.rememberme.RememberMeServices)
585 - Declaração do método: org.springframework.security.config.HttpSecurityConfigPostProcessor.injectAuthenticationEntryPointIntoExceptionTranslationFilter(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
Métodos invocados: 
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.beans.factory.config.ConfigurableListableBeanFactory.getBeanDefinition(java.lang.String)
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
java.util.Map.values()
java.util.List.size()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
java.util.List.size()
java.util.List.get(I)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
586 - Declaração do método: org.springframework.security.config.HttpSecurityConfigPostProcessor.configureFilterChain(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
Métodos invocados: 
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
org.springframework.security.config.HttpSecurityConfigPostProcessor.orderFilters(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
org.springframework.security.util.FilterChainProxy.getFilterChainMap()
org.springframework.security.util.FilterChainProxy.getMatcher()
org.springframework.security.util.UrlMatcher.getUniversalMatchPattern()
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.security.util.FilterChainProxy.setFilterChainMap(java.util.Map)
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
java.util.Map.isEmpty()
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
org.springframework.security.context.HttpSessionContextIntegrationFilter.setForceEagerSessionCreation(Z)
org.apache.commons.logging.Log.info(java.lang.Object)
587 - Declaração do método: org.springframework.security.config.HttpSecurityConfigPostProcessor.orderFilters(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
Métodos invocados: 
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
org.springframework.util.Assert.notEmpty(java.util.Map, java.lang.String)
java.util.Map.keySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map.get(java.lang.Object)
java.lang.Object.getClass()
java.lang.Class.getName()
java.lang.String.startsWith(java.lang.String)
org.apache.commons.logging.Log.info(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.Collections.sort(java.util.List, java.util.Comparator)
588 - Declaração do método: org.springframework.security.config.HttpSecurityConfigPostProcessor.getBeanOfType(java.lang.Class, org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
Métodos invocados: 
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
java.util.Map.size()
java.util.Map.size()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
java.util.Map.values()
java.util.Collection.toArray()
589 - Declaração do método: org.springframework.security.config.HttpSecurityConfigPostProcessor.getOrder()
589 - Declaração do método: org.springframework.security.config.FilterInvocationDefinitionSourceBeanDefinitionParser.getBeanClassName(org.w3c.dom.Element)
589 - Declaração do método: org.springframework.security.config.FilterInvocationDefinitionSourceBeanDefinitionParser.doParse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)
Métodos invocados: 
org.springframework.util.xml.DomUtils.getChildElementsByTagName(org.w3c.dom.Element, java.lang.String)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasLength(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasLength(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.security.config.HttpSecurityBeanDefinitionParser.createUrlMatcher(org.w3c.dom.Element)
org.springframework.security.util.UrlMatcher.requiresLowerCaseUrl()
org.springframework.security.config.HttpSecurityBeanDefinitionParser.parseInterceptUrlsForFilterInvocationRequestMap(java.util.List, java.util.Map, Z, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArg(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArg(java.lang.Object)
590 - Declaração do método: org.springframework.security.config.LdapUserServiceBeanDefinitionParser.getBeanClass(org.w3c.dom.Element)
590 - Declaração do método: org.springframework.security.config.LdapUserServiceBeanDefinitionParser.doParse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.security.config.LdapUserServiceBeanDefinitionParser.parseSearchBean(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArg(java.lang.Object)
org.springframework.security.config.LdapUserServiceBeanDefinitionParser.parseAuthoritiesPopulator(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArg(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.security.config.LdapConfigUtils.registerPostProcessorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry)
591 - Declaração do método: org.springframework.security.config.LdapUserServiceBeanDefinitionParser.parseSearchBean(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addIndexedArgumentValue(I, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addIndexedArgumentValue(I, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.security.config.LdapUserServiceBeanDefinitionParser.parseServerReference(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.config.ConstructorArgumentValues.addIndexedArgumentValue(I, java.lang.Object)
592 - Declaração do método: org.springframework.security.config.LdapUserServiceBeanDefinitionParser.parseServerReference(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.config.RuntimeBeanReference.setSource(java.lang.Object)
593 - Declaração do método: org.springframework.security.config.LdapUserServiceBeanDefinitionParser.parseAuthoritiesPopulator(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.security.config.LdapUserServiceBeanDefinitionParser.parseServerReference(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.config.ConstructorArgumentValues.addIndexedArgumentValue(I, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addIndexedArgumentValue(I, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasLength(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
594 - Declaração do método: org.springframework.security.config.LdapProviderBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.security.config.LdapUserServiceBeanDefinitionParser.parseServerReference(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.security.config.LdapUserServiceBeanDefinitionParser.parseSearchBean(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addIndexedArgumentValue(I, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addIndexedArgumentValue(I, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addIndexedArgumentValue(I, java.lang.Object)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.security.config.PasswordEncoderParser.getPasswordEncoder()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.security.config.PasswordEncoderParser.getSaltSource()
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.warning(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getConstructorArgumentValues()
org.springframework.security.config.LdapUserServiceBeanDefinitionParser.parseAuthoritiesPopulator(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.config.ConstructorArgumentValues.addGenericArgumentValue(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.security.config.LdapConfigUtils.registerPostProcessorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry)
org.springframework.security.config.ConfigUtils.getRegisteredProviders(org.springframework.beans.factory.xml.ParserContext)
java.util.ArrayList.add(java.lang.Object)
595 - Declaração do método: org.springframework.security.config.PortMappingsBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.setSource(java.lang.Object)
org.springframework.util.xml.DomUtils.getChildElementsByTagName(org.w3c.dom.Element, java.lang.String)
java.util.List.isEmpty()
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
596 - Declaração do método: org.springframework.security.config.AnonymousBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.security.config.ConfigUtils.registerProviderManagerIfNecessary(org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.AbstractBeanDefinition.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.getPropertyValue(java.lang.String)
org.springframework.beans.PropertyValue.getValue()
java.util.ArrayList.add(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
597 - Declaração do método: org.springframework.security.config.UserServiceBeanDefinitionParser.getBeanClass(org.w3c.dom.Element)
597 - Declaração do método: org.springframework.security.config.UserServiceBeanDefinitionParser.doParse(org.w3c.dom.Element, org.springframework.beans.factory.support.BeanDefinitionBuilder)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.xml.DomUtils.getChildElementsByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.CollectionUtils.isEmpty(java.util.Collection)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.CollectionUtils.isEmpty(java.util.Collection)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.security.util.AuthorityUtils.commaSeparatedStringToAuthorityArray(java.lang.String)
org.springframework.security.userdetails.memory.UserMap.addUser(org.springframework.security.userdetails.UserDetails)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
598 - Declaração do método: org.springframework.security.config.LdapConfigUtils$ContextSourceSettingPostProcessor.postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
Métodos invocados: 
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
java.util.Map.size()
599 - Declaração do método: org.springframework.security.config.LdapConfigUtils$ContextSourceSettingPostProcessor.getOrder()
599 - Declaração do método: org.springframework.security.config.LdapConfigUtils.registerPostProcessorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry)
Métodos invocados: 
org.springframework.beans.factory.support.BeanDefinitionRegistry.containsBeanDefinition(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
600 - Declaração do método: org.springframework.security.config.AuthenticationProviderBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.setSource(java.lang.Object)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.security.config.PasswordEncoderParser.getPasswordEncoder()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.security.config.PasswordEncoderParser.getSaltSource()
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.security.config.PasswordEncoderParser.getSaltSource()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.security.config.ConfigUtils.getRegisteredProviders(org.springframework.beans.factory.xml.ParserContext)
java.util.ArrayList.add(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.AbstractBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.xml.AbstractBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.xml.AbstractBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
601 - Declaração do método: org.springframework.security.config.SaltSourceBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.setSource(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.setSource(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
602 - Declaração do método: org.springframework.security.config.SecurityNamespaceHandler.init()
Métodos invocados: 
org.springframework.beans.factory.xml.NamespaceHandlerSupport.registerBeanDefinitionParser(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
org.springframework.beans.factory.xml.NamespaceHandlerSupport.registerBeanDefinitionParser(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
org.springframework.beans.factory.xml.NamespaceHandlerSupport.registerBeanDefinitionParser(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
org.springframework.beans.factory.xml.NamespaceHandlerSupport.registerBeanDefinitionParser(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
org.springframework.beans.factory.xml.NamespaceHandlerSupport.registerBeanDefinitionParser(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
org.springframework.beans.factory.xml.NamespaceHandlerSupport.registerBeanDefinitionParser(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
org.springframework.beans.factory.xml.NamespaceHandlerSupport.registerBeanDefinitionParser(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
org.springframework.beans.factory.xml.NamespaceHandlerSupport.registerBeanDefinitionParser(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
org.springframework.beans.factory.xml.NamespaceHandlerSupport.registerBeanDefinitionParser(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
org.springframework.beans.factory.xml.NamespaceHandlerSupport.registerBeanDefinitionParser(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionParser)
org.springframework.beans.factory.xml.NamespaceHandlerSupport.registerBeanDefinitionDecorator(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionDecorator)
org.springframework.beans.factory.xml.NamespaceHandlerSupport.registerBeanDefinitionDecorator(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionDecorator)
org.springframework.beans.factory.xml.NamespaceHandlerSupport.registerBeanDefinitionDecorator(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionDecorator)
org.springframework.beans.factory.xml.NamespaceHandlerSupport.registerBeanDefinitionDecorator(java.lang.String, org.springframework.beans.factory.xml.BeanDefinitionDecorator)
603 - Declaração do método: org.springframework.security.config.FilterChainMapBeanDefinitionDecorator.decorate(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.config.BeanDefinitionHolder.getBeanDefinition()
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.xml.DomUtils.getChildElementsByTagName(org.w3c.dom.Element, java.lang.String)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.util.StringUtils.tokenizeToStringArray(java.lang.String, java.lang.String)
java.util.ArrayList.add(java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.size()
org.springframework.beans.factory.support.ManagedMap.putAll(java.util.Map)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
604 - Declaração do método: org.springframework.security.config.RememberMeBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.ConfigUtils.registerProviderManagerIfNecessary(org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.AbstractBeanDefinition.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.getPropertyValue(java.lang.String)
org.springframework.beans.PropertyValue.getValue()
java.util.ArrayList.add(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
605 - Declaração do método: org.springframework.security.config.SecurityConfigurationException.SecurityConfigurationException(java.lang.String)
605 - Declaração do método: org.springframework.security.config.SecurityConfigurationException.SecurityConfigurationException(java.lang.String, java.lang.Throwable)
605 - Declaração do método: org.springframework.security.config.PasswordEncoderParser.PasswordEncoderParser(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.security.config.PasswordEncoderParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
606 - Declaração do método: org.springframework.security.config.PasswordEncoderParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.util.Map.get(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.setSource(java.lang.Object)
java.lang.Class.isAssignableFrom(java.lang.Class)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.apache.commons.logging.Log.warn(java.lang.Object)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.security.config.SaltSourceBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
607 - Declaração do método: org.springframework.security.config.PasswordEncoderParser.getPasswordEncoder()
607 - Declaração do método: org.springframework.security.config.PasswordEncoderParser.getSaltSource()
607 - Declaração do método: org.springframework.security.config.AuthenticationManagerBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerAlias(java.lang.String, java.lang.String)
608 - Declaração do método: org.springframework.security.config.X509BeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.setSource(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.ui.preauth.x509.SubjectDnX509PrincipalExtractor.setSubjectDnRegex(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.security.config.ConfigUtils.getRegisteredProviders(org.springframework.beans.factory.xml.ParserContext)
java.util.ArrayList.add(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.AbstractBeanDefinition.setSource(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
609 - Declaração do método: org.springframework.security.config.OrderedFilterBeanDefinitionDecorator.decorate(org.w3c.dom.Node, org.springframework.beans.factory.config.BeanDefinitionHolder, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.security.config.OrderedFilterBeanDefinitionDecorator.getOrder(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.config.BeanDefinitionHolder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.String)
org.springframework.beans.factory.config.BeanDefinitionHolder.getBeanName()
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArg(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArg(java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.config.BeanDefinitionHolder.getBeanName()
610 - Declaração do método: org.springframework.security.config.OrderedFilterBeanDefinitionDecorator.getOrder(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.ui.FilterChainOrder.getOrder(java.lang.String)
java.lang.Integer.toString(I)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.ui.FilterChainOrder.getOrder(java.lang.String)
java.lang.Integer.toString(I)
611 - Declaração do método: org.springframework.security.config.OrderedFilterBeanDefinitionDecorator$OrderedFilterDecorator.OrderedFilterDecorator(java.lang.String, javax.servlet.Filter)
611 - Declaração do método: org.springframework.security.config.OrderedFilterBeanDefinitionDecorator$OrderedFilterDecorator.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
612 - Declaração do método: org.springframework.security.config.OrderedFilterBeanDefinitionDecorator$OrderedFilterDecorator.init(javax.servlet.FilterConfig)
Métodos invocados: 
javax.servlet.Filter.init(javax.servlet.FilterConfig)
613 - Declaração do método: org.springframework.security.config.OrderedFilterBeanDefinitionDecorator$OrderedFilterDecorator.destroy()
Métodos invocados: 
javax.servlet.Filter.destroy()
614 - Declaração do método: org.springframework.security.config.OrderedFilterBeanDefinitionDecorator$OrderedFilterDecorator.getOrder()
Métodos invocados: 
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.core.Ordered.getOrder()
java.lang.Integer.intValue()
615 - Declaração do método: org.springframework.security.config.OrderedFilterBeanDefinitionDecorator$OrderedFilterDecorator.setOrder(I)
615 - Declaração do método: org.springframework.security.config.OrderedFilterBeanDefinitionDecorator$OrderedFilterDecorator.getBeanName()
615 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.security.config.PortMappingsBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.security.config.HttpSecurityBeanDefinitionParser.createUrlMatcher(org.w3c.dom.Element)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.config.ConfigUtils.registerDefaultAccessManagerIfNecessary(org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.security.config.ConfigUtils.registerProviderManagerIfNecessary(org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.security.util.UrlMatcher.requiresLowerCaseUrl()
org.springframework.util.xml.DomUtils.getChildElementsByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.security.config.HttpSecurityBeanDefinitionParser.parseInterceptUrlsForChannelSecurityAndFilterChain(java.util.List, java.util.Map, java.util.Map, Z, org.springframework.beans.factory.xml.ParserContext)
org.springframework.security.config.HttpSecurityBeanDefinitionParser.parseInterceptUrlsForFilterInvocationRequestMap(java.util.List, java.util.Map, Z, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
java.util.HashMap.size()
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
java.util.ArrayList.add(java.lang.Object)
java.util.ArrayList.add(java.lang.Object)
org.springframework.beans.factory.support.AbstractBeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.security.config.ConcurrentSessionsBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.w3c.dom.Element.getAttribute(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.security.config.AnonymousBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.security.config.RememberMeBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.security.config.LogoutBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.security.config.HttpSecurityBeanDefinitionParser.parseBasicFormLoginAndOpenID(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, Z)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.security.config.X509BeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerAlias(java.lang.String, java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
616 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParser.parseBasicFormLoginAndOpenID(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, Z)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.security.config.BasicAuthenticationBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.security.config.FormLoginBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.security.config.FormLoginBeanDefinitionParser.getFilterBean()
org.springframework.security.config.FormLoginBeanDefinitionParser.getEntryPointBean()
org.springframework.security.config.FormLoginBeanDefinitionParser.getLoginPage()
org.springframework.util.xml.DomUtils.getChildElementByTagName(org.w3c.dom.Element, java.lang.String)
org.springframework.security.config.FormLoginBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
org.springframework.security.config.FormLoginBeanDefinitionParser.getFilterBean()
org.springframework.security.config.FormLoginBeanDefinitionParser.getEntryPointBean()
org.springframework.security.config.FormLoginBeanDefinitionParser.getLoginPage()
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyReference(java.lang.String, java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.security.config.ConfigUtils.getRegisteredProviders(org.springframework.beans.factory.xml.ParserContext)
java.util.ArrayList.add(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArg(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArg(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerAlias(java.lang.String, java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerAlias(java.lang.String, java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerAlias(java.lang.String, java.lang.String)
617 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParser.createUrlMatcher(org.w3c.dom.Element)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.security.util.RegexUrlPathMatcher.setRequiresLowerCaseUrl(Z)
java.lang.String.equals(java.lang.Object)
org.springframework.security.util.AntUrlPathMatcher.setRequiresLowerCaseUrl(Z)
618 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParser.parseInterceptUrlsForChannelSecurityAndFilterChain(java.util.List, java.util.Map, java.util.Map, Z, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
java.lang.String.toLowerCase()
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
org.springframework.security.ConfigAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
java.util.Map.put(java.lang.Object, java.lang.Object)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
619 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParser.parseInterceptUrlsForFilterInvocationRequestMap(java.util.List, java.util.Map, Z, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getReaderContext()
org.springframework.beans.factory.parsing.ReaderContext.error(java.lang.String, java.lang.Object)
java.lang.String.toLowerCase()
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.ConfigAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
java.util.Map.put(java.lang.Object, java.lang.Object)
620 - Declaração do método: org.springframework.security.config.ConfigUtils.registerDefaultAccessManagerIfNecessary(org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.containsBeanDefinition(java.lang.String)
java.util.ArrayList.add(java.lang.Object)
java.util.ArrayList.add(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
621 - Declaração do método: org.springframework.security.config.ConfigUtils.addVoter(org.springframework.beans.factory.config.BeanDefinition, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.security.config.ConfigUtils.registerDefaultAccessManagerIfNecessary(org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.getBeanDefinition(java.lang.String)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.getPropertyValue(java.lang.String)
org.springframework.beans.PropertyValue.getValue()
java.util.ArrayList.add(java.lang.Object)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
622 - Declaração do método: org.springframework.security.config.ConfigUtils.registerProviderManagerIfNecessary(org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.containsBeanDefinition(java.lang.String)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.getBeanDefinition(java.lang.String)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
623 - Declaração do método: org.springframework.security.config.ConfigUtils.getUserDetailsService(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
Métodos invocados: 
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
java.util.Map.size()
java.util.Map.size()
java.util.Map.values()
java.util.Collection.toArray()
624 - Declaração do método: org.springframework.security.config.ConfigUtils.getAuthenticationManager(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)
Métodos invocados: 
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
java.util.Map.size()
java.util.Map.size()
java.util.Map.values()
java.util.Collection.toArray()
625 - Declaração do método: org.springframework.security.config.ConfigUtils.getRegisteredProviders(org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.springframework.security.config.ConfigUtils.registerProviderManagerIfNecessary(org.springframework.beans.factory.xml.ParserContext)
org.springframework.beans.factory.config.BeanDefinition.getPropertyValues()
org.springframework.beans.MutablePropertyValues.getPropertyValue(java.lang.String)
org.springframework.beans.PropertyValue.getValue()
626 - Declaração do método: org.springframework.security.config.LogoutBeanDefinitionParser.parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
Métodos invocados: 
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.w3c.dom.Element.getAttribute(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition(java.lang.Class)
org.springframework.beans.factory.xml.ParserContext.extractSource(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.setSource(java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addPropertyValue(java.lang.String, java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArg(java.lang.Object)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.security.ui.logout.SecurityContextLogoutHandler.setInvalidateHttpSession(Z)
org.springframework.security.ui.logout.SecurityContextLogoutHandler.setInvalidateHttpSession(Z)
java.util.ArrayList.add(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionRegistry.containsBeanDefinition(java.lang.String)
java.util.ArrayList.add(java.lang.Object)
org.springframework.beans.factory.support.BeanDefinitionBuilder.addConstructorArg(java.lang.Object)
org.springframework.beans.factory.xml.ParserContext.getRegistry()
org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()
org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(java.lang.String, org.springframework.beans.factory.config.BeanDefinition)
627 - Declaração do método: org.springframework.security.context.SecurityContextHolder.clearContext()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolderStrategy.clearContext()
628 - Declaração do método: org.springframework.security.context.SecurityContextHolder.getContext()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolderStrategy.getContext()
629 - Declaração do método: org.springframework.security.context.SecurityContextHolder.getInitializeCount()
629 - Declaração do método: org.springframework.security.context.SecurityContextHolder.initialize()
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.Class.forName(java.lang.String)
java.lang.Class.getConstructor([Ljava.lang.Class;)
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
630 - Declaração do método: org.springframework.security.context.SecurityContextHolder.setContext(org.springframework.security.context.SecurityContext)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolderStrategy.setContext(org.springframework.security.context.SecurityContext)
631 - Declaração do método: org.springframework.security.context.SecurityContextHolder.setStrategyName(java.lang.String)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.initialize()
632 - Declaração do método: org.springframework.security.context.SecurityContextHolder.toString()
632 - Declaração do método: org.springframework.security.context.InheritableThreadLocalSecurityContextHolderStrategy.clearContext()
Métodos invocados: 
java.lang.ThreadLocal.set(java.lang.Object)
633 - Declaração do método: org.springframework.security.context.InheritableThreadLocalSecurityContextHolderStrategy.getContext()
Métodos invocados: 
java.lang.ThreadLocal.get()
java.lang.ThreadLocal.set(java.lang.Object)
java.lang.ThreadLocal.get()
634 - Declaração do método: org.springframework.security.context.InheritableThreadLocalSecurityContextHolderStrategy.setContext(org.springframework.security.context.SecurityContext)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.ThreadLocal.set(java.lang.Object)
635 - Declaração do método: org.springframework.security.context.SecurityContext.getAuthentication()
635 - Declaração do método: org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
635 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter.isCloneFromHttpSession()
635 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter.setCloneFromHttpSession(Z)
635 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter.HttpSessionContextIntegrationFilter()
Métodos invocados: 
org.springframework.security.context.HttpSessionContextIntegrationFilter.generateNewContext()
636 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter.afterPropertiesSet()
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
637 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter.doFilterHttp(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.ServletRequest.getAttribute(java.lang.String)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
javax.servlet.http.HttpServletRequest.getSession(Z)
org.springframework.security.context.HttpSessionContextIntegrationFilter.readSecurityContextFromSession(javax.servlet.http.HttpSession)
org.springframework.security.context.HttpSessionContextIntegrationFilter.generateNewContext()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.Object.hashCode()
javax.servlet.ServletRequest.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.setContext(org.springframework.security.context.SecurityContext)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContextHolder.clearContext()
javax.servlet.ServletRequest.removeAttribute(java.lang.String)
org.springframework.security.context.HttpSessionContextIntegrationFilter$OnRedirectUpdateSessionResponseWrapper.isSessionUpdateDone()
org.springframework.security.context.HttpSessionContextIntegrationFilter.storeSecurityContextInSession(org.springframework.security.context.SecurityContext, javax.servlet.http.HttpServletRequest, Z, I)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
638 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter.readSecurityContextFromSession(javax.servlet.http.HttpSession)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
java.lang.reflect.AccessibleObject.isAccessible()
java.lang.reflect.AccessibleObject.setAccessible(Z)
java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
org.apache.commons.logging.Log.isWarnEnabled()
org.apache.commons.logging.Log.warn(java.lang.Object)
639 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter.storeSecurityContextInSession(org.springframework.security.context.SecurityContext, javax.servlet.http.HttpServletRequest, Z, I)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getSession(Z)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpServletRequest.getSession(Z)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.Object.hashCode()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
640 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter.generateNewContext()
Métodos invocados: 
java.lang.Class.newInstance()
641 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter.isAllowSessionCreation()
641 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter.setAllowSessionCreation(Z)
641 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter.getContextClass()
641 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter.setContextClass(java.lang.Class)
641 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter.isForceEagerSessionCreation()
641 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter.setForceEagerSessionCreation(Z)
641 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter.getOrder()
641 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter$OnRedirectUpdateSessionResponseWrapper.OnRedirectUpdateSessionResponseWrapper(javax.servlet.http.HttpServletResponse, javax.servlet.http.HttpServletRequest, Z, I)
641 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter$OnRedirectUpdateSessionResponseWrapper.sendError(I)
Métodos invocados: 
org.springframework.security.context.HttpSessionContextIntegrationFilter$OnRedirectUpdateSessionResponseWrapper.doSessionUpdate()
642 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter$OnRedirectUpdateSessionResponseWrapper.sendError(I, java.lang.String)
Métodos invocados: 
org.springframework.security.context.HttpSessionContextIntegrationFilter$OnRedirectUpdateSessionResponseWrapper.doSessionUpdate()
643 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter$OnRedirectUpdateSessionResponseWrapper.sendRedirect(java.lang.String)
Métodos invocados: 
org.springframework.security.context.HttpSessionContextIntegrationFilter$OnRedirectUpdateSessionResponseWrapper.doSessionUpdate()
644 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter$OnRedirectUpdateSessionResponseWrapper.doSessionUpdate()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.HttpSessionContextIntegrationFilter.storeSecurityContextInSession(org.springframework.security.context.SecurityContext, javax.servlet.http.HttpServletRequest, Z, I)
645 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilter$OnRedirectUpdateSessionResponseWrapper.isSessionUpdateDone()
645 - Declaração do método: org.springframework.security.context.SecurityContextHolderStrategy.clearContext()
645 - Declaração do método: org.springframework.security.context.SecurityContextHolderStrategy.getContext()
645 - Declaração do método: org.springframework.security.context.SecurityContextHolderStrategy.setContext(org.springframework.security.context.SecurityContext)
645 - Declaração do método: org.springframework.security.context.GlobalSecurityContextHolderStrategy.clearContext()
645 - Declaração do método: org.springframework.security.context.GlobalSecurityContextHolderStrategy.getContext()
645 - Declaração do método: org.springframework.security.context.GlobalSecurityContextHolderStrategy.setContext(org.springframework.security.context.SecurityContext)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
646 - Declaração do método: org.springframework.security.context.ThreadLocalSecurityContextHolderStrategy.clearContext()
Métodos invocados: 
java.lang.ThreadLocal.set(java.lang.Object)
647 - Declaração do método: org.springframework.security.context.ThreadLocalSecurityContextHolderStrategy.getContext()
Métodos invocados: 
java.lang.ThreadLocal.get()
java.lang.ThreadLocal.set(java.lang.Object)
java.lang.ThreadLocal.get()
648 - Declaração do método: org.springframework.security.context.ThreadLocalSecurityContextHolderStrategy.setContext(org.springframework.security.context.SecurityContext)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.ThreadLocal.set(java.lang.Object)
649 - Declaração do método: org.springframework.security.context.SecurityContextImpl.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.context.SecurityContextImpl.getAuthentication()
org.springframework.security.context.SecurityContextImpl.getAuthentication()
org.springframework.security.context.SecurityContextImpl.getAuthentication()
org.springframework.security.context.SecurityContextImpl.getAuthentication()
org.springframework.security.context.SecurityContextImpl.getAuthentication()
org.springframework.security.context.SecurityContextImpl.getAuthentication()
java.security.Principal.equals(java.lang.Object)
650 - Declaração do método: org.springframework.security.context.SecurityContextImpl.getAuthentication()
650 - Declaração do método: org.springframework.security.context.SecurityContextImpl.hashCode()
Métodos invocados: 
java.security.Principal.hashCode()
651 - Declaração do método: org.springframework.security.context.SecurityContextImpl.setAuthentication(org.springframework.security.Authentication)
651 - Declaração do método: org.springframework.security.context.SecurityContextImpl.toString()
Métodos invocados: 
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.Object)
java.lang.StringBuffer.toString()
652 - Declaração do método: org.springframework.security.context.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutor.doPrepareConnection(java.net.HttpURLConnection, I)
652 - Declaração do método: org.springframework.security.context.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutor.prepareConnection(java.net.HttpURLConnection, I)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
java.security.Principal.getName()
org.springframework.security.Authentication.getCredentials()
java.security.Principal.getName()
org.springframework.security.Authentication.getCredentials()
java.lang.Object.toString()
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
java.net.URLConnection.setRequestProperty(java.lang.String, java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
java.security.Principal.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutor.doPrepareConnection(java.net.HttpURLConnection, I)
653 - Declaração do método: org.springframework.security.context.rmi.ContextPropagatingRemoteInvocation.ContextPropagatingRemoteInvocation(org.aopalliance.intercept.MethodInvocation)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
654 - Declaração do método: org.springframework.security.context.rmi.ContextPropagatingRemoteInvocation.invoke(java.lang.Object)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.setContext(org.springframework.security.context.SecurityContext)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.Authentication.setAuthenticated(Z)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.clearContext()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
655 - Declaração do método: org.springframework.security.context.rmi.ContextPropagatingRemoteInvocationFactory.createRemoteInvocation(org.aopalliance.intercept.MethodInvocation)
655 - Declaração do método: org.springframework.security.event.authentication.AuthenticationFailureLockedEvent.AuthenticationFailureLockedEvent(org.springframework.security.Authentication, org.springframework.security.AuthenticationException)
655 - Declaração do método: org.springframework.security.event.authentication.AuthenticationFailureCredentialsExpiredEvent.AuthenticationFailureCredentialsExpiredEvent(org.springframework.security.Authentication, org.springframework.security.AuthenticationException)
655 - Declaração do método: org.springframework.security.event.authentication.AuthenticationFailureProxyUntrustedEvent.AuthenticationFailureProxyUntrustedEvent(org.springframework.security.Authentication, org.springframework.security.AuthenticationException)
655 - Declaração do método: org.springframework.security.event.authentication.AuthenticationFailureConcurrentLoginEvent.AuthenticationFailureConcurrentLoginEvent(org.springframework.security.Authentication, org.springframework.security.AuthenticationException)
655 - Declaração do método: org.springframework.security.event.authentication.AuthenticationFailureDisabledEvent.AuthenticationFailureDisabledEvent(org.springframework.security.Authentication, org.springframework.security.AuthenticationException)
655 - Declaração do método: org.springframework.security.event.authentication.AuthenticationFailureExpiredEvent.AuthenticationFailureExpiredEvent(org.springframework.security.Authentication, org.springframework.security.AuthenticationException)
655 - Declaração do método: org.springframework.security.event.authentication.AbstractAuthenticationEvent.AbstractAuthenticationEvent(org.springframework.security.Authentication)
655 - Declaração do método: org.springframework.security.event.authentication.AbstractAuthenticationEvent.getAuthentication()
655 - Declaração do método: org.springframework.security.event.authentication.AuthenticationFailureProviderNotFoundEvent.AuthenticationFailureProviderNotFoundEvent(org.springframework.security.Authentication, org.springframework.security.AuthenticationException)
655 - Declaração do método: org.springframework.security.event.authentication.AuthenticationFailureServiceExceptionEvent.AuthenticationFailureServiceExceptionEvent(org.springframework.security.Authentication, org.springframework.security.AuthenticationException)
655 - Declaração do método: org.springframework.security.event.authentication.InteractiveAuthenticationSuccessEvent.InteractiveAuthenticationSuccessEvent(org.springframework.security.Authentication, java.lang.Class)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
656 - Declaração do método: org.springframework.security.event.authentication.InteractiveAuthenticationSuccessEvent.getGeneratedBy()
656 - Declaração do método: org.springframework.security.event.authentication.AuthenticationSuccessEvent.AuthenticationSuccessEvent(org.springframework.security.Authentication)
656 - Declaração do método: org.springframework.security.event.authentication.AbstractAuthenticationFailureEvent.AbstractAuthenticationFailureEvent(org.springframework.security.Authentication, org.springframework.security.AuthenticationException)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
657 - Declaração do método: org.springframework.security.event.authentication.AbstractAuthenticationFailureEvent.getException()
657 - Declaração do método: org.springframework.security.event.authentication.LoggerListener.onApplicationEvent(org.springframework.context.ApplicationEvent)
Métodos invocados: 
org.apache.commons.logging.Log.isWarnEnabled()
java.lang.Object.getClass()
org.springframework.util.ClassUtils.getShortName(java.lang.Class)
org.springframework.security.event.authentication.AbstractAuthenticationEvent.getAuthentication()
java.security.Principal.getName()
org.springframework.security.event.authentication.AbstractAuthenticationEvent.getAuthentication()
org.springframework.security.Authentication.getDetails()
org.springframework.security.event.authentication.AbstractAuthenticationFailureEvent.getException()
org.springframework.core.NestedRuntimeException.getMessage()
org.apache.commons.logging.Log.warn(java.lang.Object)
658 - Declaração do método: org.springframework.security.event.authentication.LoggerListener.isLogInteractiveAuthenticationSuccessEvents()
658 - Declaração do método: org.springframework.security.event.authentication.LoggerListener.setLogInteractiveAuthenticationSuccessEvents(Z)
658 - Declaração do método: org.springframework.security.event.authentication.AuthenticationSwitchUserEvent.AuthenticationSwitchUserEvent(org.springframework.security.Authentication, org.springframework.security.userdetails.UserDetails)
658 - Declaração do método: org.springframework.security.event.authentication.AuthenticationSwitchUserEvent.getTargetUser()
658 - Declaração do método: org.springframework.security.event.authentication.AuthenticationFailureBadCredentialsEvent.AuthenticationFailureBadCredentialsEvent(org.springframework.security.Authentication, org.springframework.security.AuthenticationException)
658 - Declaração do método: org.springframework.security.event.authorization.AuthenticationCredentialsNotFoundEvent.AuthenticationCredentialsNotFoundEvent(java.lang.Object, org.springframework.security.ConfigAttributeDefinition, org.springframework.security.AuthenticationCredentialsNotFoundException)
658 - Declaração do método: org.springframework.security.event.authorization.AuthenticationCredentialsNotFoundEvent.getConfigAttributeDefinition()
658 - Declaração do método: org.springframework.security.event.authorization.AuthenticationCredentialsNotFoundEvent.getCredentialsNotFoundException()
658 - Declaração do método: org.springframework.security.event.authorization.PublicInvocationEvent.PublicInvocationEvent(java.lang.Object)
658 - Declaração do método: org.springframework.security.event.authorization.AuthorizedEvent.AuthorizedEvent(java.lang.Object, org.springframework.security.ConfigAttributeDefinition, org.springframework.security.Authentication)
658 - Declaração do método: org.springframework.security.event.authorization.AuthorizedEvent.getAuthentication()
658 - Declaração do método: org.springframework.security.event.authorization.AuthorizedEvent.getConfigAttributeDefinition()
658 - Declaração do método: org.springframework.security.event.authorization.LoggerListener.onApplicationEvent(org.springframework.context.ApplicationEvent)
Métodos invocados: 
org.apache.commons.logging.Log.isWarnEnabled()
org.springframework.security.event.authorization.AuthenticationCredentialsNotFoundEvent.getCredentialsNotFoundException()
java.util.EventObject.getSource()
org.springframework.security.event.authorization.AuthenticationCredentialsNotFoundEvent.getConfigAttributeDefinition()
org.apache.commons.logging.Log.warn(java.lang.Object)
org.apache.commons.logging.Log.isWarnEnabled()
org.springframework.security.event.authorization.AuthorizationFailureEvent.getAccessDeniedException()
org.springframework.security.event.authorization.AuthorizationFailureEvent.getAuthentication()
java.util.EventObject.getSource()
org.springframework.security.event.authorization.AuthorizationFailureEvent.getConfigAttributeDefinition()
org.apache.commons.logging.Log.warn(java.lang.Object)
org.apache.commons.logging.Log.isInfoEnabled()
org.springframework.security.event.authorization.AuthorizedEvent.getAuthentication()
java.util.EventObject.getSource()
org.springframework.security.event.authorization.AuthorizedEvent.getConfigAttributeDefinition()
org.apache.commons.logging.Log.info(java.lang.Object)
org.apache.commons.logging.Log.isInfoEnabled()
java.util.EventObject.getSource()
org.apache.commons.logging.Log.info(java.lang.Object)
659 - Declaração do método: org.springframework.security.event.authorization.AbstractAuthorizationEvent.AbstractAuthorizationEvent(java.lang.Object)
659 - Declaração do método: org.springframework.security.event.authorization.AuthorizationFailureEvent.AuthorizationFailureEvent(java.lang.Object, org.springframework.security.ConfigAttributeDefinition, org.springframework.security.Authentication, org.springframework.security.AccessDeniedException)
659 - Declaração do método: org.springframework.security.event.authorization.AuthorizationFailureEvent.getAccessDeniedException()
659 - Declaração do método: org.springframework.security.event.authorization.AuthorizationFailureEvent.getAuthentication()
659 - Declaração do método: org.springframework.security.event.authorization.AuthorizationFailureEvent.getConfigAttributeDefinition()
659 - Declaração do método: org.springframework.security.intercept.ObjectDefinitionSource.getAttributes(java.lang.Object)
659 - Declaração do método: org.springframework.security.intercept.ObjectDefinitionSource.getConfigAttributeDefinitions()
659 - Declaração do método: org.springframework.security.intercept.ObjectDefinitionSource.supports(java.lang.Class)
659 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.afterInvocation(org.springframework.security.intercept.InterceptorStatusToken, java.lang.Object)
Métodos invocados: 
org.springframework.security.intercept.InterceptorStatusToken.isContextHolderRefreshRequired()
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.intercept.InterceptorStatusToken.getAuthentication()
java.security.Principal.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.intercept.InterceptorStatusToken.getAuthentication()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.intercept.InterceptorStatusToken.getAuthentication()
org.springframework.security.intercept.InterceptorStatusToken.getSecureObject()
org.springframework.security.intercept.InterceptorStatusToken.getAttr()
org.springframework.security.AfterInvocationManager.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
org.springframework.security.intercept.InterceptorStatusToken.getSecureObject()
org.springframework.security.intercept.InterceptorStatusToken.getAttr()
org.springframework.security.intercept.InterceptorStatusToken.getAuthentication()
org.springframework.security.intercept.AbstractSecurityInterceptor.publishEvent(org.springframework.context.ApplicationEvent)
660 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.intercept.AbstractSecurityInterceptor.obtainObjectDefinitionSource()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.intercept.AbstractSecurityInterceptor.obtainObjectDefinitionSource()
org.springframework.security.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.security.intercept.ObjectDefinitionSource.supports(java.lang.Class)
org.springframework.security.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.security.RunAsManager.supports(java.lang.Class)
org.springframework.security.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.security.AccessDecisionManager.supports(java.lang.Class)
org.springframework.security.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.security.AfterInvocationManager.supports(java.lang.Class)
org.springframework.security.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.intercept.AbstractSecurityInterceptor.obtainObjectDefinitionSource()
org.springframework.security.intercept.ObjectDefinitionSource.getConfigAttributeDefinitions()
org.apache.commons.logging.Log.warn(java.lang.Object)
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.RunAsManager.supports(org.springframework.security.ConfigAttribute)
org.springframework.security.AccessDecisionManager.supports(org.springframework.security.ConfigAttribute)
org.springframework.security.AfterInvocationManager.supports(org.springframework.security.ConfigAttribute)
java.util.Set.add(java.lang.Object)
java.util.Set.size()
org.apache.commons.logging.Log.info(java.lang.Object)
661 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.beforeInvocation(java.lang.Object)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Object.getClass()
java.lang.Class.getName()
org.springframework.security.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
org.springframework.security.intercept.AbstractSecurityInterceptor.obtainObjectDefinitionSource()
org.springframework.security.intercept.ObjectDefinitionSource.getAttributes(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.intercept.AbstractSecurityInterceptor.publishEvent(org.springframework.context.ApplicationEvent)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.intercept.AbstractSecurityInterceptor.credentialsNotFound(java.lang.String, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.AbstractSecurityInterceptor.authenticateIfRequired()
org.springframework.security.AccessDecisionManager.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.AbstractSecurityInterceptor.publishEvent(org.springframework.context.ApplicationEvent)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.intercept.AbstractSecurityInterceptor.publishEvent(org.springframework.context.ApplicationEvent)
org.springframework.security.RunAsManager.buildRunAs(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
662 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.authenticateIfRequired()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.Authentication.isAuthenticated()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
663 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.credentialsNotFound(java.lang.String, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.publishEvent(org.springframework.context.ApplicationEvent)
664 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.getAccessDecisionManager()
664 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.getAfterInvocationManager()
664 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.getAuthenticationManager()
664 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.getRunAsManager()
664 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
664 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.isAlwaysReauthenticate()
664 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.isRejectPublicInvocations()
664 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.isValidateConfigAttributes()
664 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.obtainObjectDefinitionSource()
664 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
664 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.setAfterInvocationManager(org.springframework.security.AfterInvocationManager)
664 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.setAlwaysReauthenticate(Z)
664 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
664 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
664 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.setMessageSource(org.springframework.context.MessageSource)
664 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.setRejectPublicInvocations(Z)
664 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
664 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.setValidateConfigAttributes(Z)
664 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptor.publishEvent(org.springframework.context.ApplicationEvent)
Métodos invocados: 
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
665 - Declaração do método: org.springframework.security.intercept.InterceptorStatusToken.InterceptorStatusToken(org.springframework.security.Authentication, Z, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
665 - Declaração do método: org.springframework.security.intercept.InterceptorStatusToken.getAttr()
665 - Declaração do método: org.springframework.security.intercept.InterceptorStatusToken.getAuthentication()
665 - Declaração do método: org.springframework.security.intercept.InterceptorStatusToken.getSecureObject()
665 - Declaração do método: org.springframework.security.intercept.InterceptorStatusToken.isContextHolderRefreshRequired()
665 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditor.setAsText(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.beans.PropertyEditorSupport.setValue(java.lang.Object)
org.springframework.beans.propertyeditors.PropertiesEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
java.util.Hashtable.keySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Properties.getProperty(java.lang.String)
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
java.util.Map.put(java.lang.Object, java.lang.Object)
java.beans.PropertyEditorSupport.setValue(java.lang.Object)
666 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionMap.MethodDefinitionMap()
666 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionMap.MethodDefinitionMap(java.util.Map)
Métodos invocados: 
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
org.springframework.security.intercept.method.MethodDefinitionMap.addSecureMethod(java.lang.String, org.springframework.security.ConfigAttributeDefinition)
667 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionMap.addSecureMethod(java.lang.reflect.Method, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.apache.commons.logging.Log.info(java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
668 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionMap.addSecureMethod(java.lang.String, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.substring(I, I)
java.lang.String.substring(I)
java.lang.Thread.currentThread()
java.lang.Thread.getContextClassLoader()
java.lang.Class.forName(java.lang.String, Z, java.lang.ClassLoader)
org.springframework.security.intercept.method.MethodDefinitionMap.addSecureMethod(java.lang.Class, java.lang.String, org.springframework.security.ConfigAttributeDefinition)
669 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionMap.addSecureMethod(java.lang.Class, java.lang.String, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
java.lang.Class.getName()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.Class.getDeclaredMethods()
java.lang.reflect.Method.getName()
java.lang.String.equals(java.lang.Object)
java.lang.reflect.Method.getName()
org.springframework.security.intercept.method.MethodDefinitionMap.isMatch(java.lang.String, java.lang.String)
java.util.List.add(java.lang.Object)
java.util.List.isEmpty()
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map.get(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.length()
java.lang.String.length()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.method.MethodDefinitionMap.addSecureMethod(java.lang.reflect.Method, org.springframework.security.ConfigAttributeDefinition)
org.apache.commons.logging.Log.debug(java.lang.Object)
670 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionMap.getConfigAttributeDefinitions()
Métodos invocados: 
java.util.Map.values()
java.util.Collections.unmodifiableCollection(java.util.Collection)
671 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionMap.getMethodMapSize()
Métodos invocados: 
java.util.Map.size()
672 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionMap.isMatch(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.endsWith(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I, I)
java.lang.String.startsWith(java.lang.String)
java.lang.String.startsWith(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I, I)
java.lang.String.endsWith(java.lang.String)
673 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionMap.lookupAttributes(java.lang.reflect.Method)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
org.springframework.security.intercept.method.MethodDefinitionMap.merge(java.util.List, org.springframework.security.ConfigAttributeDefinition)
java.lang.reflect.Method.getDeclaringClass()
java.lang.Class.getInterfaces()
java.lang.reflect.Method.getName()
java.lang.reflect.Method.getParameterTypes()
java.lang.Class.getDeclaredMethod(java.lang.String, [Ljava.lang.Class;)
java.util.Map.get(java.lang.Object)
org.springframework.security.intercept.method.MethodDefinitionMap.merge(java.util.List, org.springframework.security.ConfigAttributeDefinition)
java.util.List.size()
674 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionMap.merge(java.util.List, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.List.addAll(java.util.Collection)
675 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributes.add(java.util.List, java.util.Collection)
Métodos invocados: 
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.List.add(java.lang.Object)
676 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributes.addClassAttributes(java.util.List, [Ljava.lang.Class;)
Métodos invocados: 
org.springframework.metadata.Attributes.getAttributes(java.lang.Class)
org.springframework.security.intercept.method.MethodDefinitionAttributes.add(java.util.List, java.util.Collection)
677 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributes.addInterfaceMethodAttributes(java.util.List, java.lang.reflect.Method)
Métodos invocados: 
java.lang.reflect.Method.getDeclaringClass()
java.lang.Class.getInterfaces()
java.lang.reflect.Method.getName()
java.lang.reflect.Method.getParameterTypes()
java.lang.Class.getDeclaredMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.intercept.method.MethodDefinitionAttributes.addMethodAttributes(java.util.List, java.lang.reflect.Method)
678 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributes.addMethodAttributes(java.util.List, java.lang.reflect.Method)
Métodos invocados: 
org.springframework.metadata.Attributes.getAttributes(java.lang.reflect.Method)
org.springframework.security.intercept.method.MethodDefinitionAttributes.add(java.util.List, java.util.Collection)
679 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributes.getConfigAttributeDefinitions()
679 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributes.lookupAttributes(java.lang.reflect.Method)
Métodos invocados: 
java.lang.reflect.Method.getDeclaringClass()
org.springframework.security.intercept.method.MethodDefinitionAttributes.addClassAttributes(java.util.List, [Ljava.lang.Class;)
java.lang.Class.getInterfaces()
org.springframework.security.intercept.method.MethodDefinitionAttributes.addClassAttributes(java.util.List, [Ljava.lang.Class;)
org.springframework.security.intercept.method.MethodDefinitionAttributes.addMethodAttributes(java.util.List, java.lang.reflect.Method)
org.springframework.security.intercept.method.MethodDefinitionAttributes.addInterfaceMethodAttributes(java.util.List, java.lang.reflect.Method)
java.util.List.size()
680 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributes.setAttributes(org.springframework.metadata.Attributes)
680 - Declaração do método: org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluator.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
681 - Declaração do método: org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluator.isAllowed(org.aopalliance.intercept.MethodInvocation, org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.aopalliance.intercept.MethodInvocation.getMethod()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.intercept.AbstractSecurityInterceptor.obtainObjectDefinitionSource()
org.springframework.security.intercept.ObjectDefinitionSource.getAttributes(java.lang.Object)
org.springframework.security.intercept.AbstractSecurityInterceptor.isRejectPublicInvocations()
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.intercept.AbstractSecurityInterceptor.getAccessDecisionManager()
org.springframework.security.AccessDecisionManager.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.toString()
java.security.Principal.toString()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
682 - Declaração do método: org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluator.setSecurityInterceptor(org.springframework.security.intercept.AbstractSecurityInterceptor)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
java.lang.Object.equals(java.lang.Object)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.intercept.AbstractSecurityInterceptor.getAccessDecisionManager()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
683 - Declaração do método: org.springframework.security.intercept.method.AbstractMethodDefinitionSource.getAttributes(java.lang.Object)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.aopalliance.intercept.MethodInvocation.getMethod()
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.lookupAttributes(java.lang.reflect.Method)
org.aspectj.lang.JoinPoint.getTarget()
java.lang.Object.getClass()
org.aspectj.lang.JoinPoint.getStaticPart()
org.aspectj.lang.JoinPoint$StaticPart.getSignature()
org.aspectj.lang.Signature.getName()
org.aspectj.lang.JoinPoint.getStaticPart()
org.aspectj.lang.JoinPoint$StaticPart.getSignature()
org.aspectj.lang.reflect.CodeSignature.getParameterTypes()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.lookupAttributes(java.lang.reflect.Method)
684 - Declaração do método: org.springframework.security.intercept.method.AbstractMethodDefinitionSource.lookupAttributes(java.lang.reflect.Method)
684 - Declaração do método: org.springframework.security.intercept.method.AbstractMethodDefinitionSource.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.isAssignableFrom(java.lang.Class)
685 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.getObjectDefinitionSource()
685 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.getSecureObjectClass()
685 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.invoke(org.aopalliance.intercept.MethodInvocation)
Métodos invocados: 
org.aopalliance.intercept.Joinpoint.proceed()
686 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.obtainObjectDefinitionSource()
686 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.method.MethodDefinitionSource)
686 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisor.MethodDefinitionSourceAdvisor(org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor)
Métodos invocados: 
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.getObjectDefinitionSource()
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.getObjectDefinitionSource()
687 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisor.getPointcut()
687 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisor.getAdvice()
687 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisor$MethodDefinitionSourcePointcut.matches(java.lang.reflect.Method, java.lang.Class)
Métodos invocados: 
org.springframework.security.intercept.ObjectDefinitionSource.getAttributes(java.lang.Object)
688 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisor$InternalMethodInvocation.InternalMethodInvocation(java.lang.reflect.Method)
688 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisor$InternalMethodInvocation.InternalMethodInvocation()
688 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisor$InternalMethodInvocation.getArguments()
688 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisor$InternalMethodInvocation.getMethod()
688 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisor$InternalMethodInvocation.getStaticPart()
688 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisor$InternalMethodInvocation.getThis()
688 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisor$InternalMethodInvocation.proceed()
688 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJAnnotationSecurityInterceptor.getObjectDefinitionSource()
688 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJAnnotationSecurityInterceptor.getSecureObjectClass()
688 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJAnnotationSecurityInterceptor.invoke(org.aspectj.lang.JoinPoint, org.springframework.security.intercept.method.aspectj.AspectJAnnotationCallback)
Métodos invocados: 
org.springframework.security.intercept.method.aspectj.AspectJAnnotationCallback.proceedWithObject()
689 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJAnnotationSecurityInterceptor.obtainObjectDefinitionSource()
689 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJAnnotationSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.method.MethodDefinitionSource)
689 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJAnnotationCallback.proceedWithObject()
689 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptor.getObjectDefinitionSource()
689 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptor.getSecureObjectClass()
689 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptor.invoke(org.aspectj.lang.JoinPoint, org.springframework.security.intercept.method.aspectj.AspectJCallback)
Métodos invocados: 
org.springframework.security.intercept.method.aspectj.AspectJCallback.proceedWithObject()
690 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptor.obtainObjectDefinitionSource()
690 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.method.MethodDefinitionSource)
690 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJCallback.proceedWithObject()
690 - Declaração do método: org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluator.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
691 - Declaração do método: org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluator.isAllowed(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.intercept.AbstractSecurityInterceptor.obtainObjectDefinitionSource()
org.springframework.security.intercept.ObjectDefinitionSource.getAttributes(java.lang.Object)
org.springframework.security.intercept.AbstractSecurityInterceptor.isRejectPublicInvocations()
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.intercept.AbstractSecurityInterceptor.getAccessDecisionManager()
org.springframework.security.AccessDecisionManager.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.intercept.web.FilterInvocation.toString()
java.security.Principal.toString()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
692 - Declaração do método: org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluator.setSecurityInterceptor(org.springframework.security.intercept.AbstractSecurityInterceptor)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.intercept.AbstractSecurityInterceptor.getSecureObjectClass()
java.lang.Object.equals(java.lang.Object)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.intercept.AbstractSecurityInterceptor.getAccessDecisionManager()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
693 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.beans.PropertyEditorSupport.setValue(java.lang.Object)
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.lastIndexOf(java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.io.BufferedReader.readLine()
java.lang.Throwable.getMessage()
java.lang.String.trim()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.String.startsWith(java.lang.String)
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.lastIndexOf(I)
java.lang.String.lastIndexOf(java.lang.String)
org.springframework.security.util.StringSplitUtils.substringBeforeLast(java.lang.String, java.lang.String)
org.springframework.security.util.StringSplitUtils.substringAfterLast(java.lang.String, java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I, I)
java.lang.String.toLowerCase()
java.lang.String.equals(java.lang.Object)
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
java.util.HashMap.put(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.createMatcher(Z, Z)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.setStripQueryStringFromUrls(Z)
java.beans.PropertyEditorSupport.setValue(java.lang.Object)
694 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.createMatcher(Z, Z)
Métodos invocados: 
org.springframework.security.util.AntUrlPathMatcher.setRequiresLowerCaseUrl(Z)
org.springframework.security.util.RegexUrlPathMatcher.setRequiresLowerCaseUrl(Z)
695 - Declaração do método: org.springframework.security.intercept.web.FilterInvocation.FilterInvocation(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
695 - Declaração do método: org.springframework.security.intercept.web.FilterInvocation.getChain()
695 - Declaração do método: org.springframework.security.intercept.web.FilterInvocation.getFullRequestUrl()
Métodos invocados: 
org.springframework.security.util.UrlUtils.getFullRequestUrl(org.springframework.security.intercept.web.FilterInvocation)
696 - Declaração do método: org.springframework.security.intercept.web.FilterInvocation.getHttpRequest()
696 - Declaração do método: org.springframework.security.intercept.web.FilterInvocation.getHttpResponse()
696 - Declaração do método: org.springframework.security.intercept.web.FilterInvocation.getRequest()
696 - Declaração do método: org.springframework.security.intercept.web.FilterInvocation.getRequestUrl()
Métodos invocados: 
org.springframework.security.util.UrlUtils.getRequestUrl(org.springframework.security.intercept.web.FilterInvocation)
697 - Declaração do método: org.springframework.security.intercept.web.FilterInvocation.getResponse()
697 - Declaração do método: org.springframework.security.intercept.web.FilterInvocation.toString()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocation.getRequestUrl()
698 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptor.init(javax.servlet.FilterConfig)
698 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptor.destroy()
698 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptor.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.intercept.web.FilterSecurityInterceptor.invoke(org.springframework.security.intercept.web.FilterInvocation)
699 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptor.getObjectDefinitionSource()
699 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptor.getSecureObjectClass()
699 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptor.invoke(org.springframework.security.intercept.web.FilterInvocation)
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocation.getRequest()
org.springframework.security.intercept.web.FilterInvocation.getRequest()
javax.servlet.ServletRequest.getAttribute(java.lang.String)
org.springframework.security.intercept.web.FilterInvocation.getChain()
org.springframework.security.intercept.web.FilterInvocation.getRequest()
org.springframework.security.intercept.web.FilterInvocation.getResponse()
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.intercept.web.FilterInvocation.getRequest()
org.springframework.security.intercept.web.FilterInvocation.getRequest()
javax.servlet.ServletRequest.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.intercept.web.FilterInvocation.getChain()
org.springframework.security.intercept.web.FilterInvocation.getRequest()
org.springframework.security.intercept.web.FilterInvocation.getResponse()
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
700 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptor.isObserveOncePerRequest()
700 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptor.obtainObjectDefinitionSource()
700 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.web.FilterInvocationDefinitionSource)
700 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptor.setObserveOncePerRequest(Z)
700 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptor.getOrder()
700 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.DefaultFilterInvocationDefinitionSource(org.springframework.security.util.UrlMatcher)
700 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.DefaultFilterInvocationDefinitionSource(org.springframework.security.util.UrlMatcher, java.util.LinkedHashMap)
Métodos invocados: 
java.util.HashMap.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
org.springframework.security.intercept.web.RequestKey.getUrl()
org.springframework.security.intercept.web.RequestKey.getMethod()
java.util.Map$Entry.getValue()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.addSecureUrl(java.lang.String, java.lang.String, org.springframework.security.ConfigAttributeDefinition)
701 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.addSecureUrl(java.lang.String, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.addSecureUrl(java.lang.String, java.lang.String, org.springframework.security.ConfigAttributeDefinition)
702 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.addSecureUrl(java.lang.String, java.lang.String, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getRequestMapForHttpMethod(java.lang.String)
org.springframework.security.util.UrlMatcher.compile(java.lang.String)
java.util.Map.put(java.lang.Object, java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
703 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getRequestMapForHttpMethod(java.lang.String)
Métodos invocados: 
java.util.Set.contains(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
704 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getConfigAttributeDefinitions()
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getRequestMap()
java.util.Map.values()
java.util.Collections.unmodifiableCollection(java.util.Collection)
705 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getAttributes(java.lang.Object)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.supports(java.lang.Class)
org.springframework.security.intercept.web.FilterInvocation.getRequestUrl()
org.springframework.security.intercept.web.FilterInvocation.getHttpRequest()
javax.servlet.http.HttpServletRequest.getMethod()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.lookupAttributes(java.lang.String, java.lang.String)
706 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.lookupAttributes(java.lang.String)
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.lookupAttributes(java.lang.String, java.lang.String)
707 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.lookupAttributes(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.indexOf(java.lang.String)
java.lang.String.substring(I, I)
org.springframework.security.util.UrlMatcher.requiresLowerCaseUrl()
java.lang.String.toLowerCase()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Map.get(java.lang.Object)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.lookupUrlInMap(java.util.Map, java.lang.String)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.lookupUrlInMap(java.util.Map, java.lang.String)
708 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.lookupUrlInMap(java.util.Map, java.lang.String)
Métodos invocados: 
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
org.springframework.security.util.UrlMatcher.pathMatchesUrl(java.lang.Object, java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Map$Entry.getValue()
709 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
710 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getMapSize()
Métodos invocados: 
java.util.Map.size()
711 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getRequestMap()
711 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getUrlMatcher()
711 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.isConvertUrlToLowercaseBeforeComparison()
Métodos invocados: 
org.springframework.security.util.UrlMatcher.requiresLowerCaseUrl()
712 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.setStripQueryStringFromUrls(Z)
712 - Declaração do método: org.springframework.security.intercept.web.RequestKey.RequestKey(java.lang.String)
712 - Declaração do método: org.springframework.security.intercept.web.RequestKey.RequestKey(java.lang.String, java.lang.String)
712 - Declaração do método: org.springframework.security.intercept.web.RequestKey.getUrl()
712 - Declaração do método: org.springframework.security.intercept.web.RequestKey.getMethod()
712 - Declaração do método: org.springframework.security.intercept.web.RequestKey.hashCode()
Métodos invocados: 
java.lang.String.hashCode()
java.lang.String.hashCode()
713 - Declaração do método: org.springframework.security.intercept.web.RequestKey.equals(java.lang.Object)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
714 - Declaração do método: org.springframework.security.intercept.web.FIDSToFilterChainMapConverter.FIDSToFilterChainMapConverter(org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource, org.springframework.context.ApplicationContext)
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getConfigAttributeDefinitions()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getUrlMatcher()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getRequestMap()
java.util.Map.keySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.regex.Pattern.pattern()
java.util.Map.get(java.lang.Object)
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String, java.lang.Class)
java.util.List.add(java.lang.Object)
java.util.HashMap.put(java.lang.Object, java.lang.Object)
715 - Declaração do método: org.springframework.security.intercept.web.FIDSToFilterChainMapConverter.getFilterChainMap()
715 - Declaração do método: org.springframework.security.intercept.web.FIDSToFilterChainMapConverter.getMatcher()
715 - Declaração do método: org.springframework.security.ldap.DefaultSpringSecurityContextSource.DefaultSpringSecurityContextSource(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
java.util.StringTokenizer.hasMoreTokens()
java.util.StringTokenizer.nextToken()
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.substring(I, I)
java.util.ArrayList.add(java.lang.Object)
org.apache.commons.logging.Log.info(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.util.ArrayList.size()
java.util.ArrayList.toArray([Ljava.lang.Object;)
716 - Declaração do método: org.springframework.security.ldap.DefaultSpringSecurityContextSource.getReadWriteContext(java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.ldap.core.support.AbstractContextSource.getAnonymousEnv()
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.ldap.core.support.AbstractContextSource.createContext(java.util.Hashtable)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
717 - Declaração do método: org.springframework.security.ldap.DefaultSpringSecurityContextSource.setMessageSource(org.springframework.context.MessageSource)
717 - Declaração do método: org.springframework.security.ldap.LdapCallback.doInDirContext(javax.naming.directory.DirContext)
717 - Declaração do método: org.springframework.security.ldap.NamingExceptionTranslator.translate(java.lang.String, javax.naming.NamingException)
717 - Declaração do método: org.springframework.security.ldap.LdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
717 - Declaração do método: org.springframework.security.ldap.SpringSecurityContextSource.getReadWriteContext(java.lang.String, java.lang.Object)
717 - Declaração do método: org.springframework.security.ldap.InitialDirContextFactory.getRootDn()
717 - Declaração do método: org.springframework.security.ldap.InitialDirContextFactory.newInitialDirContext()
717 - Declaração do método: org.springframework.security.ldap.InitialDirContextFactory.newInitialDirContext(java.lang.String, java.lang.String)
717 - Declaração do método: org.springframework.security.ldap.LdapUserSearch.searchForUser(java.lang.String)
717 - Declaração do método: org.springframework.security.ldap.DefaultLdapUsernameToDnMapper.DefaultLdapUsernameToDnMapper(java.lang.String, java.lang.String)
717 - Declaração do método: org.springframework.security.ldap.DefaultLdapUsernameToDnMapper.buildDn(java.lang.String)
Métodos invocados: 
org.springframework.ldap.core.DistinguishedName.add(java.lang.String, java.lang.String)
718 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.DefaultInitialDirContextFactory(java.lang.String)
Métodos invocados: 
org.springframework.security.ldap.DefaultInitialDirContextFactory.setProviderUrl(java.lang.String)
719 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.setProviderUrl(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
java.util.StringTokenizer.hasMoreTokens()
java.util.StringTokenizer.nextToken()
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
org.apache.commons.logging.Log.info(java.lang.Object)
java.lang.String.equals(java.lang.Object)
720 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.getProviderUrl()
720 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.connect(java.util.Hashtable)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
java.util.Hashtable.clone()
java.util.Hashtable.containsKey(java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
721 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.getEnvironment()
Métodos invocados: 
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.DefaultInitialDirContextFactory.getProviderUrl()
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Map.size()
java.util.Hashtable.putAll(java.util.Map)
722 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.getRootDn()
722 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.newInitialDirContext()
Métodos invocados: 
org.springframework.security.ldap.DefaultInitialDirContextFactory.newInitialDirContext(java.lang.String, java.lang.String)
org.springframework.security.ldap.DefaultInitialDirContextFactory.getEnvironment()
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.DefaultInitialDirContextFactory.connect(java.util.Hashtable)
723 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.newInitialDirContext(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.ldap.DefaultInitialDirContextFactory.getEnvironment()
java.lang.String.equals(java.lang.Object)
java.util.Hashtable.remove(java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.DefaultInitialDirContextFactory.connect(java.util.Hashtable)
724 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.getReadOnlyContext()
Métodos invocados: 
org.springframework.security.ldap.DefaultInitialDirContextFactory.newInitialDirContext()
725 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.getReadWriteContext()
Métodos invocados: 
org.springframework.security.ldap.DefaultInitialDirContextFactory.newInitialDirContext()
726 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.setAuthenticationType(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
727 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.setExtraEnvVars(java.util.Map)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
728 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.setInitialContextFactory(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
729 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.setManagerDn(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
730 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.setManagerPassword(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
731 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.setMessageSource(org.springframework.context.MessageSource)
731 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.setUseConnectionPool(Z)
731 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.setUseLdapContext(Z)
731 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.setDirObjectFactory(java.lang.String)
731 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.getReadWriteContext(java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.security.ldap.DefaultInitialDirContextFactory.newInitialDirContext(java.lang.String, java.lang.String)
732 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.getBaseLdapPath()
732 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactory.getBaseLdapPathAsString()
Métodos invocados: 
org.springframework.security.ldap.DefaultInitialDirContextFactory.getBaseLdapPath()
org.springframework.ldap.core.DistinguishedName.toString()
733 - Declaração do método: org.springframework.security.ldap.LdapEntryMapper.mapAttributes(java.lang.String, javax.naming.directory.Attributes)
733 - Declaração do método: org.springframework.security.ldap.LdapUsernameToDnMapper.buildDn(java.lang.String)
733 - Declaração do método: org.springframework.security.ldap.LdapUtils.LdapUtils()
733 - Declaração do método: org.springframework.security.ldap.LdapUtils.closeContext(javax.naming.Context)
Métodos invocados: 
javax.naming.Context.close()
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
734 - Declaração do método: org.springframework.security.ldap.LdapUtils.getRelativeName(java.lang.String, javax.naming.Context)
Métodos invocados: 
javax.naming.Context.getNameInNamespace()
java.lang.String.length()
org.springframework.ldap.core.DistinguishedName.equals(java.lang.Object)
org.springframework.ldap.core.DistinguishedName.startsWith(javax.naming.Name)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.ldap.core.DistinguishedName.removeFirst(javax.naming.Name)
org.springframework.ldap.core.DistinguishedName.toString()
735 - Declaração do método: org.springframework.security.ldap.LdapUtils.getFullDn(org.springframework.ldap.core.DistinguishedName, javax.naming.Context)
Métodos invocados: 
javax.naming.Context.getNameInNamespace()
org.springframework.ldap.core.DistinguishedName.contains(org.springframework.ldap.core.DistinguishedName)
org.springframework.ldap.core.DistinguishedName.append(org.springframework.ldap.core.DistinguishedName)
736 - Declaração do método: org.springframework.security.ldap.LdapUtils.getUtf8Bytes(java.lang.String)
Métodos invocados: 
java.lang.String.getBytes(java.lang.String)
737 - Declaração do método: org.springframework.security.ldap.LdapUtils.getUtf8BytesAsString([B)
737 - Declaração do método: org.springframework.security.ldap.LdapUtils.convertPasswordToString(java.lang.Object)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.ldap.LdapUtils.getUtf8BytesAsString([B)
738 - Declaração do método: org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String)
java.lang.String.startsWith(java.lang.String)
java.lang.String.startsWith(java.lang.String)
org.springframework.security.ldap.LdapUtils.parseLdapUrl(java.lang.String)
java.net.URI.getPath()
java.lang.String.startsWith(java.lang.String)
java.lang.String.substring(I)
739 - Declaração do método: org.springframework.security.ldap.LdapUtils.parseLdapUrl(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String)
java.lang.Throwable.initCause(java.lang.Throwable)
740 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate.SpringSecurityLdapTemplate(org.springframework.ldap.core.ContextSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.ldap.core.LdapTemplate.setContextSource(org.springframework.ldap.core.ContextSource)
javax.naming.directory.SearchControls.setSearchScope(I)
741 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate.compare(java.lang.String, java.lang.String, java.lang.Object)
Métodos invocados: 
javax.naming.directory.SearchControls.setReturningAttributes([Ljava.lang.String;)
javax.naming.directory.SearchControls.setSearchScope(I)
javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, [Ljava.lang.Object;, javax.naming.directory.SearchControls)
javax.naming.NamingEnumeration.hasMore()
java.lang.Boolean.valueOf(Z)
org.springframework.ldap.core.LdapTemplate.executeReadOnly(org.springframework.ldap.core.ContextExecutor)
java.lang.Boolean.booleanValue()
742 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate$1LdapCompareCallback.executeWithContext(javax.naming.directory.DirContext)
Métodos invocados: 
javax.naming.directory.SearchControls.setReturningAttributes([Ljava.lang.String;)
javax.naming.directory.SearchControls.setSearchScope(I)
javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, [Ljava.lang.Object;, javax.naming.directory.SearchControls)
javax.naming.NamingEnumeration.hasMore()
java.lang.Boolean.valueOf(Z)
743 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate.retrieveEntry(java.lang.String, [Ljava.lang.String;)
Métodos invocados: 
org.springframework.ldap.core.LdapTemplate.executeReadOnly(org.springframework.ldap.core.ContextExecutor)
javax.naming.directory.DirContext.getAttributes(java.lang.String, [Ljava.lang.String;)
javax.naming.Context.getNameInNamespace()
744 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate$1.executeWithContext(javax.naming.directory.DirContext)
Métodos invocados: 
javax.naming.directory.DirContext.getAttributes(java.lang.String, [Ljava.lang.String;)
javax.naming.Context.getNameInNamespace()
745 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate.searchForSingleAttributeValues(java.lang.String, java.lang.String, [Ljava.lang.Object;, java.lang.String)
Métodos invocados: 
java.text.MessageFormat.format(java.lang.String, [Ljava.lang.Object;)
org.springframework.ldap.core.DirContextAdapter.getStringAttributes(java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.AbstractCollection.addAll(java.util.Collection)
javax.naming.directory.SearchControls.getSearchScope()
javax.naming.directory.SearchControls.setSearchScope(I)
javax.naming.directory.SearchControls.setReturningAttributes([Ljava.lang.String;)
javax.naming.directory.SearchControls.setReturningObjFlag(Z)
org.springframework.ldap.core.LdapTemplate.search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls, org.springframework.ldap.core.ContextMapper)
746 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate$2.mapFromContext(java.lang.Object)
Métodos invocados: 
org.springframework.ldap.core.DirContextAdapter.getStringAttributes(java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.AbstractCollection.addAll(java.util.Collection)
747 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate.searchForSingleEntry(java.lang.String, java.lang.String, [Ljava.lang.Object;)
Métodos invocados: 
org.springframework.ldap.core.LdapTemplate.executeReadOnly(org.springframework.ldap.core.ContextExecutor)
javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, [Ljava.lang.Object;, javax.naming.directory.SearchControls)
javax.naming.NamingEnumeration.hasMore()
javax.naming.NamingEnumeration.next()
javax.naming.NamingEnumeration.hasMore()
javax.naming.NameClassPair.getName()
java.lang.String.length()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
javax.naming.directory.SearchResult.getAttributes()
java.lang.StringBuffer.toString()
javax.naming.Context.getNameInNamespace()
748 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate$3.executeWithContext(javax.naming.directory.DirContext)
Métodos invocados: 
javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, [Ljava.lang.Object;, javax.naming.directory.SearchControls)
javax.naming.NamingEnumeration.hasMore()
javax.naming.NamingEnumeration.next()
javax.naming.NamingEnumeration.hasMore()
javax.naming.NameClassPair.getName()
java.lang.String.length()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
javax.naming.directory.SearchResult.getAttributes()
java.lang.StringBuffer.toString()
javax.naming.Context.getNameInNamespace()
749 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplate.setSearchControls(javax.naming.directory.SearchControls)
749 - Declaração do método: org.springframework.security.ldap.LdapDataAccessException.LdapDataAccessException(java.lang.String)
749 - Declaração do método: org.springframework.security.ldap.LdapDataAccessException.LdapDataAccessException(java.lang.String, java.lang.Throwable)
749 - Declaração do método: org.springframework.security.ldap.SpringSecurityAuthenticationSource.getPrincipal()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.warn(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.userdetails.ldap.LdapUserDetails.getDn()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
750 - Declaração do método: org.springframework.security.ldap.SpringSecurityAuthenticationSource.getCredentials()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.warn(java.lang.Object)
org.springframework.security.Authentication.getCredentials()
751 - Declaração do método: org.springframework.security.ldap.populator.UserDetailsServiceLdapAuthoritiesPopulator.UserDetailsServiceLdapAuthoritiesPopulator(org.springframework.security.userdetails.UserDetailsService)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
752 - Declaração do método: org.springframework.security.ldap.populator.UserDetailsServiceLdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
Métodos invocados: 
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getAuthorities()
753 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.DefaultLdapAuthoritiesPopulator(org.springframework.ldap.core.ContextSource, java.lang.String)
Métodos invocados: 
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setContextSource(org.springframework.ldap.core.ContextSource)
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setGroupSearchBase(java.lang.String)
754 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.getAdditionalRoles(org.springframework.ldap.core.DirContextOperations, java.lang.String)
754 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
Métodos invocados: 
org.springframework.ldap.core.DirContextOperations.getNameInNamespace()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.getGroupMembershipRoles(java.lang.String, java.lang.String)
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.getAdditionalRoles(org.springframework.ldap.core.DirContextOperations, java.lang.String)
java.util.Set.addAll(java.util.Collection)
java.util.Set.add(java.lang.Object)
java.util.Set.size()
java.util.Set.toArray([Ljava.lang.Object;)
755 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.getGroupMembershipRoles(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.getGroupSearchBase()
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.getGroupSearchBase()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.getGroupSearchBase()
org.springframework.security.ldap.SpringSecurityLdapTemplate.searchForSingleAttributeValues(java.lang.String, java.lang.String, [Ljava.lang.Object;, java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.String.toUpperCase()
java.util.Set.add(java.lang.Object)
756 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.getContextSource()
756 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setContextSource(org.springframework.ldap.core.ContextSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.ldap.SpringSecurityLdapTemplate.setSearchControls(javax.naming.directory.SearchControls)
757 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setGroupSearchBase(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.String.length()
org.apache.commons.logging.Log.info(java.lang.Object)
758 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.getGroupSearchBase()
758 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setConvertToUpperCase(Z)
758 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setDefaultRole(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
759 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setGroupRoleAttribute(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
760 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setGroupSearchFilter(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
761 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setRolePrefix(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
762 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setSearchSubtree(Z)
Métodos invocados: 
javax.naming.directory.SearchControls.setSearchScope(I)
763 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearch.FilterBasedLdapUserSearch(java.lang.String, java.lang.String, org.springframework.ldap.core.support.BaseLdapPathContextSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.setSearchSubtree(Z)
java.lang.String.length()
org.springframework.ldap.core.support.BaseLdapPathSource.getBaseLdapPath()
org.apache.commons.logging.Log.info(java.lang.Object)
764 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearch.searchForUser(java.lang.String)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ldap.SpringSecurityLdapTemplate.setSearchControls(javax.naming.directory.SearchControls)
org.springframework.security.ldap.SpringSecurityLdapTemplate.searchForSingleEntry(java.lang.String, java.lang.String, [Ljava.lang.Object;)
org.springframework.dao.IncorrectResultSizeDataAccessException.getActualSize()
765 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearch.setDerefLinkFlag(Z)
Métodos invocados: 
javax.naming.directory.SearchControls.setDerefLinkFlag(Z)
766 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearch.setSearchSubtree(Z)
Métodos invocados: 
javax.naming.directory.SearchControls.setSearchScope(I)
767 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearch.setSearchTimeLimit(I)
Métodos invocados: 
javax.naming.directory.SearchControls.setTimeLimit(I)
768 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearch.toString()
Métodos invocados: 
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
javax.naming.directory.SearchControls.getSearchScope()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
javax.naming.directory.SearchControls.getTimeLimit()
java.lang.StringBuffer.append(I)
java.lang.StringBuffer.append(java.lang.String)
javax.naming.directory.SearchControls.getDerefLinkFlag()
java.lang.StringBuffer.append(Z)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
769 - Declaração do método: org.springframework.security.providers.UsernamePasswordAuthenticationToken.UsernamePasswordAuthenticationToken(java.lang.Object, java.lang.Object)
Métodos invocados: 
org.springframework.security.providers.UsernamePasswordAuthenticationToken.setAuthenticated(Z)
770 - Declaração do método: org.springframework.security.providers.UsernamePasswordAuthenticationToken.UsernamePasswordAuthenticationToken(java.lang.Object, java.lang.Object, [Lorg.springframework.security.GrantedAuthority;)
770 - Declaração do método: org.springframework.security.providers.UsernamePasswordAuthenticationToken.getCredentials()
770 - Declaração do método: org.springframework.security.providers.UsernamePasswordAuthenticationToken.getPrincipal()
770 - Declaração do método: org.springframework.security.providers.UsernamePasswordAuthenticationToken.setAuthenticated(Z)
770 - Declaração do método: org.springframework.security.providers.UserDetailsService.getUserDetails(java.lang.String)
770 - Declaração do método: org.springframework.security.providers.ProviderNotFoundException.ProviderNotFoundException(java.lang.String)
770 - Declaração do método: org.springframework.security.providers.ProviderNotFoundException.ProviderNotFoundException(java.lang.String, java.lang.Throwable)
770 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationToken.AbstractAuthenticationToken()
770 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationToken.AbstractAuthenticationToken([Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
771 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationToken.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getDetails()
org.springframework.security.providers.AbstractAuthenticationToken.getDetails()
org.springframework.security.providers.AbstractAuthenticationToken.getDetails()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.Authentication.getCredentials()
org.springframework.security.Authentication.getCredentials()
org.springframework.security.Authentication.getCredentials()
org.springframework.security.Authentication.getCredentials()
org.springframework.security.Authentication.getCredentials()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
772 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
Métodos invocados: 
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
773 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationToken.getDetails()
773 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationToken.getName()
Métodos invocados: 
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.Authentication.getPrincipal()
java.security.Principal.getName()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.toString()
774 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationToken.hashCode()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
java.lang.Object.hashCode()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.hashCode()
org.springframework.security.Authentication.getCredentials()
org.springframework.security.Authentication.getCredentials()
java.lang.Object.hashCode()
org.springframework.security.providers.AbstractAuthenticationToken.getDetails()
org.springframework.security.providers.AbstractAuthenticationToken.getDetails()
java.lang.Object.hashCode()
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
775 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
775 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationToken.setAuthenticated(Z)
775 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
775 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationToken.toString()
Métodos invocados: 
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
org.springframework.security.Authentication.getPrincipal()
java.lang.StringBuffer.append(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
java.lang.StringBuffer.append(Z)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getDetails()
java.lang.StringBuffer.append(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
java.lang.StringBuffer.append(java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
java.lang.StringBuffer.append(java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
java.lang.Object.toString()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
776 - Declaração do método: org.springframework.security.providers.AuthenticationProvider.authenticate(org.springframework.security.Authentication)
776 - Declaração do método: org.springframework.security.providers.AuthenticationProvider.supports(java.lang.Class)
776 - Declaração do método: org.springframework.security.providers.ProviderManager.ProviderManager()
Métodos invocados: 
java.util.Hashtable.putAll(java.util.Map)
777 - Declaração do método: org.springframework.security.providers.ProviderManager.afterPropertiesSet()
Métodos invocados: 
org.springframework.security.providers.ProviderManager.checkIfValidList(java.util.List)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.Hashtable.putAll(java.util.Map)
778 - Declaração do método: org.springframework.security.providers.ProviderManager.checkIfValidList(java.util.List)
Métodos invocados: 
java.util.List.size()
779 - Declaração do método: org.springframework.security.providers.ProviderManager.doAuthentication(org.springframework.security.Authentication)
Métodos invocados: 
java.util.List.iterator()
java.lang.Object.getClass()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.providers.AuthenticationProvider.supports(java.lang.Class)
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.providers.AuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.springframework.security.providers.ProviderManager.copyDetails(org.springframework.security.Authentication, org.springframework.security.Authentication)
org.springframework.security.concurrent.ConcurrentSessionController.checkAuthenticationAllowed(org.springframework.security.Authentication)
org.springframework.security.concurrent.ConcurrentSessionController.registerSuccessfulAuthentication(org.springframework.security.Authentication)
org.springframework.security.providers.ProviderManager.publishEvent(org.springframework.context.ApplicationEvent)
java.lang.Class.getName()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
org.springframework.security.providers.ProviderManager.publishAuthenticationFailure(org.springframework.security.AuthenticationException, org.springframework.security.Authentication)
780 - Declaração do método: org.springframework.security.providers.ProviderManager.publishAuthenticationFailure(org.springframework.security.AuthenticationException, org.springframework.security.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
java.util.Properties.getProperty(java.lang.String)
java.lang.Object.getClass()
java.lang.Class.getClassLoader()
java.lang.ClassLoader.loadClass(java.lang.String)
java.lang.Class.getConstructor([Ljava.lang.Class;)
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.providers.ProviderManager.publishEvent(org.springframework.context.ApplicationEvent)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
781 - Declaração do método: org.springframework.security.providers.ProviderManager.copyDetails(org.springframework.security.Authentication, org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.Authentication.getDetails()
org.springframework.security.Authentication.getDetails()
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
782 - Declaração do método: org.springframework.security.providers.ProviderManager.getProviders()
782 - Declaração do método: org.springframework.security.providers.ProviderManager.getSessionController()
782 - Declaração do método: org.springframework.security.providers.ProviderManager.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
782 - Declaração do método: org.springframework.security.providers.ProviderManager.setMessageSource(org.springframework.context.MessageSource)
782 - Declaração do método: org.springframework.security.providers.ProviderManager.setProviders(java.util.List)
Métodos invocados: 
org.springframework.security.providers.ProviderManager.checkIfValidList(java.util.List)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
783 - Declaração do método: org.springframework.security.providers.ProviderManager.setSessionController(org.springframework.security.concurrent.ConcurrentSessionController)
783 - Declaração do método: org.springframework.security.providers.ProviderManager.publishEvent(org.springframework.context.ApplicationEvent)
Métodos invocados: 
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
784 - Declaração do método: org.springframework.security.providers.ProviderManager.setAdditionalExceptionMappings(java.util.Properties)
784 - Declaração do método: org.springframework.security.providers.TestingAuthenticationToken.TestingAuthenticationToken(java.lang.Object, java.lang.Object, [Lorg.springframework.security.GrantedAuthority;)
784 - Declaração do método: org.springframework.security.providers.TestingAuthenticationToken.getCredentials()
784 - Declaração do método: org.springframework.security.providers.TestingAuthenticationToken.getPrincipal()
784 - Declaração do método: org.springframework.security.providers.TestingAuthenticationProvider.authenticate(org.springframework.security.Authentication)
784 - Declaração do método: org.springframework.security.providers.TestingAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
785 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationToken.AnonymousAuthenticationToken(java.lang.String, java.lang.Object, [Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.hashCode()
org.springframework.security.providers.AbstractAuthenticationToken.setAuthenticated(Z)
786 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationToken.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.providers.anonymous.AnonymousAuthenticationToken.getKeyHash()
org.springframework.security.providers.anonymous.AnonymousAuthenticationToken.getKeyHash()
787 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationToken.getCredentials()
787 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationToken.getKeyHash()
787 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationToken.getPrincipal()
787 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
org.springframework.util.Assert.hasLength(java.lang.String)
788 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilter.applyAnonymousForThisRequest(javax.servlet.http.HttpServletRequest)
788 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilter.createAuthentication(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.userdetails.memory.UserAttribute.getPassword()
org.springframework.security.userdetails.memory.UserAttribute.getAuthorities()
org.springframework.security.ui.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
789 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilter.doFilterHttp(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.applyAnonymousForThisRequest(javax.servlet.http.HttpServletRequest)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.createAuthentication(javax.servlet.http.HttpServletRequest)
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.createAuthentication(javax.servlet.http.HttpServletRequest)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
java.security.Principal.equals(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
790 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilter.getOrder()
790 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilter.getKey()
790 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilter.getUserAttribute()
790 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilter.isRemoveAfterRequest()
790 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilter.setAuthenticationDetailsSource(org.springframework.security.ui.AuthenticationDetailsSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
791 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilter.setKey(java.lang.String)
791 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilter.setRemoveAfterRequest(Z)
791 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilter.setUserAttribute(org.springframework.security.userdetails.memory.UserAttribute)
791 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
792 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.supports(java.lang.Class)
java.lang.String.hashCode()
org.springframework.security.providers.anonymous.AnonymousAuthenticationToken.getKeyHash()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
793 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.getKey()
793 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.setKey(java.lang.String)
793 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.setMessageSource(org.springframework.context.MessageSource)
793 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
794 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProvider.additionalAuthenticationChecks(org.springframework.security.userdetails.UserDetails, org.springframework.security.providers.UsernamePasswordAuthenticationToken)
Métodos invocados: 
org.springframework.security.providers.dao.SaltSource.getSalt(org.springframework.security.userdetails.UserDetails)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getCredentials()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getCredentials()
java.lang.Object.toString()
org.springframework.security.userdetails.UserDetails.getPassword()
org.springframework.security.providers.encoding.PasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
795 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProvider.doAfterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
796 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProvider.retrieveUser(java.lang.String, org.springframework.security.providers.UsernamePasswordAuthenticationToken)
Métodos invocados: 
org.springframework.security.providers.dao.DaoAuthenticationProvider.getUserDetailsService()
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.core.NestedRuntimeException.getMessage()
797 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProvider.setPasswordEncoder(org.springframework.security.providers.encoding.PasswordEncoder)
797 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProvider.getPasswordEncoder()
797 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProvider.setSaltSource(org.springframework.security.providers.dao.SaltSource)
797 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProvider.getSaltSource()
797 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
797 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProvider.getUserDetailsService()
797 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProvider.isIncludeDetailsObject()
797 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProvider.setIncludeDetailsObject(Z)
797 - Declaração do método: org.springframework.security.providers.dao.SaltSource.getSalt(org.springframework.security.userdetails.UserDetails)
797 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.additionalAuthenticationChecks(org.springframework.security.userdetails.UserDetails, org.springframework.security.providers.UsernamePasswordAuthenticationToken)
797 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.doAfterPropertiesSet()
798 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.Authentication.getPrincipal()
java.security.Principal.getName()
org.springframework.security.providers.dao.UserCache.getUserFromCache(java.lang.String)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.retrieveUser(java.lang.String, org.springframework.security.providers.UsernamePasswordAuthenticationToken)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.userdetails.UserDetailsChecker.check(org.springframework.security.userdetails.UserDetails)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.additionalAuthenticationChecks(org.springframework.security.userdetails.UserDetails, org.springframework.security.providers.UsernamePasswordAuthenticationToken)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.retrieveUser(java.lang.String, org.springframework.security.providers.UsernamePasswordAuthenticationToken)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.additionalAuthenticationChecks(org.springframework.security.userdetails.UserDetails, org.springframework.security.providers.UsernamePasswordAuthenticationToken)
org.springframework.security.userdetails.UserDetailsChecker.check(org.springframework.security.userdetails.UserDetails)
org.springframework.security.providers.dao.UserCache.putUserInCache(org.springframework.security.userdetails.UserDetails)
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.createSuccessAuthentication(java.lang.Object, org.springframework.security.Authentication, org.springframework.security.userdetails.UserDetails)
799 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.createSuccessAuthentication(java.lang.Object, org.springframework.security.Authentication, org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.Authentication.getCredentials()
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.Authentication.getDetails()
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
800 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.doAfterPropertiesSet()
800 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.getUserCache()
800 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.isForcePrincipalAsString()
800 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.isHideUserNotFoundExceptions()
800 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.retrieveUser(java.lang.String, org.springframework.security.providers.UsernamePasswordAuthenticationToken)
800 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setForcePrincipalAsString(Z)
800 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setHideUserNotFoundExceptions(Z)
800 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setMessageSource(org.springframework.context.MessageSource)
800 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
800 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
801 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.getPreAuthenticationChecks()
801 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setPreAuthenticationChecks(org.springframework.security.userdetails.UserDetailsChecker)
801 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.getPostAuthenticationChecks()
801 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setPostAuthenticationChecks(org.springframework.security.userdetails.UserDetailsChecker)
801 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider$DefaultPreAuthenticationChecks.check(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.isAccountNonLocked()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.userdetails.UserDetails.isEnabled()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.userdetails.UserDetails.isAccountNonExpired()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
802 - Declaração do método: org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider$DefaultPostAuthenticationChecks.check(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.isCredentialsNonExpired()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
803 - Declaração do método: org.springframework.security.providers.dao.UserCache.getUserFromCache(java.lang.String)
803 - Declaração do método: org.springframework.security.providers.dao.UserCache.putUserInCache(org.springframework.security.userdetails.UserDetails)
803 - Declaração do método: org.springframework.security.providers.dao.UserCache.removeUserFromCache(java.lang.String)
803 - Declaração do método: org.springframework.security.providers.dao.cache.EhCacheBasedUserCache.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
804 - Declaração do método: org.springframework.security.providers.dao.cache.EhCacheBasedUserCache.getCache()
804 - Declaração do método: org.springframework.security.providers.dao.cache.EhCacheBasedUserCache.getUserFromCache(java.lang.String)
Métodos invocados: 
net.sf.ehcache.Ehcache.get(java.io.Serializable)
java.lang.Throwable.getMessage()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
net.sf.ehcache.Element.getValue()
805 - Declaração do método: org.springframework.security.providers.dao.cache.EhCacheBasedUserCache.putUserInCache(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.getUsername()
org.apache.commons.logging.Log.isDebugEnabled()
net.sf.ehcache.Element.getKey()
org.apache.commons.logging.Log.debug(java.lang.Object)
net.sf.ehcache.Ehcache.put(net.sf.ehcache.Element)
806 - Declaração do método: org.springframework.security.providers.dao.cache.EhCacheBasedUserCache.removeUserFromCache(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.userdetails.UserDetails.getUsername()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.providers.dao.cache.EhCacheBasedUserCache.removeUserFromCache(java.lang.String)
807 - Declaração do método: org.springframework.security.providers.dao.cache.EhCacheBasedUserCache.removeUserFromCache(java.lang.String)
Métodos invocados: 
net.sf.ehcache.Ehcache.remove(java.io.Serializable)
808 - Declaração do método: org.springframework.security.providers.dao.cache.EhCacheBasedUserCache.setCache(net.sf.ehcache.Ehcache)
808 - Declaração do método: org.springframework.security.providers.dao.cache.NullUserCache.getUserFromCache(java.lang.String)
808 - Declaração do método: org.springframework.security.providers.dao.cache.NullUserCache.putUserInCache(org.springframework.security.userdetails.UserDetails)
808 - Declaração do método: org.springframework.security.providers.dao.cache.NullUserCache.removeUserFromCache(java.lang.String)
808 - Declaração do método: org.springframework.security.providers.dao.salt.SystemWideSaltSource.afterPropertiesSet()
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
809 - Declaração do método: org.springframework.security.providers.dao.salt.SystemWideSaltSource.getSalt(org.springframework.security.userdetails.UserDetails)
809 - Declaração do método: org.springframework.security.providers.dao.salt.SystemWideSaltSource.getSystemWideSalt()
809 - Declaração do método: org.springframework.security.providers.dao.salt.SystemWideSaltSource.setSystemWideSalt(java.lang.String)
809 - Declaração do método: org.springframework.security.providers.dao.salt.ReflectionSaltSource.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
810 - Declaração do método: org.springframework.security.providers.dao.salt.ReflectionSaltSource.getSalt(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.providers.dao.salt.ReflectionSaltSource.findSaltMethod(org.springframework.security.userdetails.UserDetails)
java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
java.lang.Throwable.getMessage()
811 - Declaração do método: org.springframework.security.providers.dao.salt.ReflectionSaltSource.findSaltMethod(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.util.ReflectionUtils.findMethod(java.lang.Class, java.lang.String, [Ljava.lang.Class;)
java.lang.Object.getClass()
org.springframework.beans.BeanUtils.getPropertyDescriptor(java.lang.Class, java.lang.String)
java.beans.PropertyDescriptor.getReadMethod()
java.lang.Object.getClass()
java.lang.Class.getName()
812 - Declaração do método: org.springframework.security.providers.dao.salt.ReflectionSaltSource.getUserPropertyToUse()
812 - Declaração do método: org.springframework.security.providers.dao.salt.ReflectionSaltSource.setUserPropertyToUse(java.lang.String)
812 - Declaração do método: org.springframework.security.providers.dao.salt.ReflectionSaltSource.toString()
812 - Declaração do método: org.springframework.security.providers.encoding.BasePasswordEncoder.demergePasswordAndSalt(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.length()
java.lang.String.length()
java.lang.String.substring(I, I)
java.lang.String.substring(I, I)
813 - Declaração do método: org.springframework.security.providers.encoding.BasePasswordEncoder.mergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
Métodos invocados: 
java.lang.Object.toString()
java.lang.String.lastIndexOf(java.lang.String)
java.lang.Object.toString()
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.equals(java.lang.Object)
java.lang.Object.toString()
814 - Declaração do método: org.springframework.security.providers.encoding.PlaintextPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.security.providers.encoding.BasePasswordEncoder.mergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
815 - Declaração do método: org.springframework.security.providers.encoding.PlaintextPasswordEncoder.isIgnorePasswordCase()
815 - Declaração do método: org.springframework.security.providers.encoding.PlaintextPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.security.providers.encoding.BasePasswordEncoder.mergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
java.lang.String.equals(java.lang.Object)
java.lang.String.equalsIgnoreCase(java.lang.String)
816 - Declaração do método: org.springframework.security.providers.encoding.PlaintextPasswordEncoder.obtainPasswordAndSalt(java.lang.String)
Métodos invocados: 
org.springframework.security.providers.encoding.BasePasswordEncoder.demergePasswordAndSalt(java.lang.String)
817 - Declaração do método: org.springframework.security.providers.encoding.PlaintextPasswordEncoder.setIgnorePasswordCase(Z)
817 - Declaração do método: org.springframework.security.providers.encoding.ShaPasswordEncoder.ShaPasswordEncoder()
817 - Declaração do método: org.springframework.security.providers.encoding.ShaPasswordEncoder.ShaPasswordEncoder(I)
817 - Declaração do método: org.springframework.security.providers.encoding.Md5PasswordEncoder.Md5PasswordEncoder()
817 - Declaração do método: org.springframework.security.providers.encoding.Md4.Md4()
Métodos invocados: 
org.springframework.security.providers.encoding.Md4.reset()
818 - Declaração do método: org.springframework.security.providers.encoding.Md4.reset()
818 - Declaração do método: org.springframework.security.providers.encoding.Md4.digest()
Métodos invocados: 
org.springframework.security.providers.encoding.Md4.digest([B, I, I)
819 - Declaração do método: org.springframework.security.providers.encoding.Md4.digest([B, I)
819 - Declaração do método: org.springframework.security.providers.encoding.Md4.digest([B, I, I)
Métodos invocados: 
org.springframework.security.providers.encoding.Md4.update([B, I)
org.springframework.security.providers.encoding.Md4.update([B, I)
org.springframework.security.providers.encoding.Md4.digest([B, I)
820 - Declaração do método: org.springframework.security.providers.encoding.Md4.update([B, I, I)
Métodos invocados: 
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
org.springframework.security.providers.encoding.Md4.update([B, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
821 - Declaração do método: org.springframework.security.providers.encoding.Md4.update([B, I)
Métodos invocados: 
org.springframework.security.providers.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.FF(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.GG(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.HH(I, I, I, I, I, I)
org.springframework.security.providers.encoding.Md4.HH(I, I, I, I, I, I)
822 - Declaração do método: org.springframework.security.providers.encoding.Md4.FF(I, I, I, I, I, I)
822 - Declaração do método: org.springframework.security.providers.encoding.Md4.GG(I, I, I, I, I, I)
822 - Declaração do método: org.springframework.security.providers.encoding.Md4.HH(I, I, I, I, I, I)
822 - Declaração do método: org.springframework.security.providers.encoding.PasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
822 - Declaração do método: org.springframework.security.providers.encoding.PasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
822 - Declaração do método: org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.MessageDigestPasswordEncoder(java.lang.String)
822 - Declaração do método: org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.MessageDigestPasswordEncoder(java.lang.String, Z)
Métodos invocados: 
org.springframework.security.providers.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.getMessageDigest()
823 - Declaração do método: org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.security.providers.encoding.BasePasswordEncoder.mergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.getMessageDigest()
java.lang.String.getBytes()
java.security.MessageDigest.digest([B)
org.springframework.security.providers.encoding.BaseDigestPasswordEncoder.getEncodeHashAsBase64()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.apache.commons.codec.binary.Hex.encodeHex([B)
824 - Declaração do método: org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.getMessageDigest()
Métodos invocados: 
java.security.MessageDigest.getInstance(java.lang.String)
825 - Declaração do método: org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
java.lang.String.equals(java.lang.Object)
826 - Declaração do método: org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.getAlgorithm()
826 - Declaração do método: org.springframework.security.providers.encoding.BaseDigestPasswordEncoder.getEncodeHashAsBase64()
826 - Declaração do método: org.springframework.security.providers.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
826 - Declaração do método: org.springframework.security.providers.encoding.Md4PasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.security.providers.encoding.BasePasswordEncoder.mergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
java.lang.String.getBytes()
java.lang.String.length()
org.springframework.security.providers.encoding.Md4.update([B, I, I)
org.springframework.security.providers.encoding.Md4.digest()
org.springframework.security.providers.encoding.BaseDigestPasswordEncoder.getEncodeHashAsBase64()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.apache.commons.codec.binary.Hex.encodeHex([B)
827 - Declaração do método: org.springframework.security.providers.encoding.Md4PasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.security.providers.encoding.Md4PasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
java.lang.String.equals(java.lang.Object)
828 - Declaração do método: org.springframework.security.providers.encoding.Md4PasswordEncoder.getAlgorithm()
828 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationCallbackHandler.handle(javax.security.auth.callback.Callback, org.springframework.security.Authentication)
828 - Declaração do método: org.springframework.security.providers.jaas.AuthorityGranter.grant(java.security.Principal)
828 - Declaração do método: org.springframework.security.providers.jaas.JaasPasswordCallbackHandler.handle(javax.security.auth.callback.Callback, org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.Authentication.getCredentials()
java.lang.Object.toString()
java.lang.String.toCharArray()
javax.security.auth.callback.PasswordCallback.setPassword([C)
829 - Declaração do método: org.springframework.security.providers.jaas.JaasGrantedAuthority.JaasGrantedAuthority(java.lang.String, java.security.Principal)
829 - Declaração do método: org.springframework.security.providers.jaas.JaasGrantedAuthority.getPrincipal()
829 - Declaração do método: org.springframework.security.providers.jaas.JaasNameCallbackHandler.handle(javax.security.auth.callback.Callback, org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.userdetails.UserDetails.getUsername()
java.lang.Object.toString()
javax.security.auth.callback.NameCallback.setName(java.lang.String)
830 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationToken.JaasAuthenticationToken(java.lang.Object, java.lang.Object, javax.security.auth.login.LoginContext)
830 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationToken.JaasAuthenticationToken(java.lang.Object, java.lang.Object, [Lorg.springframework.security.GrantedAuthority;, javax.security.auth.login.LoginContext)
830 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationToken.getLoginContext()
830 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.afterPropertiesSet()
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.Object.getClass()
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.configureJaas(org.springframework.core.io.Resource)
javax.security.auth.login.Configuration.getConfiguration()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
831 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
javax.security.auth.login.LoginContext.login()
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
java.util.Arrays.asList([Lorg.springframework.security.GrantedAuthority;)
java.util.Set.addAll(java.util.Collection)
javax.security.auth.login.LoginContext.getSubject()
javax.security.auth.Subject.getPrincipals()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.providers.jaas.AuthorityGranter.grant(java.security.Principal)
java.util.Set.isEmpty()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.Object.toString()
java.util.Set.add(java.lang.Object)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getPrincipal()
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getCredentials()
java.util.Set.size()
java.util.Set.toArray([Ljava.lang.Object;)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.publishSuccessEvent(org.springframework.security.providers.UsernamePasswordAuthenticationToken)
org.springframework.security.providers.jaas.LoginExceptionResolver.resolveException(javax.security.auth.login.LoginException)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.publishFailureEvent(org.springframework.security.providers.UsernamePasswordAuthenticationToken, org.springframework.security.SpringSecurityException)
832 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.configureJaas(org.springframework.core.io.Resource)
Métodos invocados: 
org.springframework.security.providers.jaas.JaasAuthenticationProvider.configureJaasUsingLoop()
833 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.configureJaasUsingLoop()
Métodos invocados: 
org.springframework.core.io.Resource.getURL()
java.net.URL.toString()
java.security.Security.getProperty(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.security.Security.setProperty(java.lang.String, java.lang.String)
834 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.getAuthorityGranters()
834 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.getCallbackHandlers()
834 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.getLoginConfig()
834 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.getLoginContextName()
834 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.getLoginExceptionResolver()
834 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.handleLogout(org.springframework.security.ui.session.HttpSessionDestroyedEvent)
Métodos invocados: 
org.springframework.security.ui.session.HttpSessionApplicationEvent.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.providers.jaas.JaasAuthenticationToken.getLoginContext()
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getPrincipal()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.security.auth.login.LoginContext.logout()
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getPrincipal()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.warn(java.lang.Object, java.lang.Throwable)
835 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.onApplicationEvent(org.springframework.context.ApplicationEvent)
Métodos invocados: 
org.springframework.security.providers.jaas.JaasAuthenticationProvider.handleLogout(org.springframework.security.ui.session.HttpSessionDestroyedEvent)
836 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.publishFailureEvent(org.springframework.security.providers.UsernamePasswordAuthenticationToken, org.springframework.security.SpringSecurityException)
Métodos invocados: 
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
837 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.publishSuccessEvent(org.springframework.security.providers.UsernamePasswordAuthenticationToken)
Métodos invocados: 
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
838 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.setAuthorityGranters([Lorg.springframework.security.providers.jaas.AuthorityGranter;)
838 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.setCallbackHandlers([Lorg.springframework.security.providers.jaas.JaasAuthenticationCallbackHandler;)
838 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.setLoginConfig(org.springframework.core.io.Resource)
838 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.setLoginContextName(java.lang.String)
838 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.setLoginExceptionResolver(org.springframework.security.providers.jaas.LoginExceptionResolver)
838 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
839 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
839 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider.getApplicationEventPublisher()
839 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider$InternalCallbackHandler.InternalCallbackHandler(org.springframework.security.Authentication)
839 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProvider$InternalCallbackHandler.handle([Ljavax.security.auth.callback.Callback;)
Métodos invocados: 
org.springframework.security.providers.jaas.JaasAuthenticationCallbackHandler.handle(javax.security.auth.callback.Callback, org.springframework.security.Authentication)
840 - Declaração do método: org.springframework.security.providers.jaas.DefaultLoginExceptionResolver.resolveException(javax.security.auth.login.LoginException)
Métodos invocados: 
java.lang.Throwable.getMessage()
841 - Declaração do método: org.springframework.security.providers.jaas.SecurityContextLoginModule.abort()
841 - Declaração do método: org.springframework.security.providers.jaas.SecurityContextLoginModule.commit()
Métodos invocados: 
javax.security.auth.Subject.getPrincipals()
java.util.Set.add(java.security.Principal)
842 - Declaração do método: org.springframework.security.providers.jaas.SecurityContextLoginModule.getAuthentication()
842 - Declaração do método: org.springframework.security.providers.jaas.SecurityContextLoginModule.getSubject()
842 - Declaração do método: org.springframework.security.providers.jaas.SecurityContextLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
java.lang.String.equals(java.lang.Object)
843 - Declaração do método: org.springframework.security.providers.jaas.SecurityContextLoginModule.login()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.warn(java.lang.Object)
844 - Declaração do método: org.springframework.security.providers.jaas.SecurityContextLoginModule.logout()
Métodos invocados: 
javax.security.auth.Subject.getPrincipals()
java.util.Set.remove(java.lang.Object)
845 - Declaração do método: org.springframework.security.providers.jaas.LoginExceptionResolver.resolveException(javax.security.auth.login.LoginException)
845 - Declaração do método: org.springframework.security.providers.jaas.event.JaasAuthenticationEvent.JaasAuthenticationEvent(org.springframework.security.Authentication)
845 - Declaração do método: org.springframework.security.providers.jaas.event.JaasAuthenticationEvent.getAuthentication()
845 - Declaração do método: org.springframework.security.providers.jaas.event.JaasAuthenticationFailedEvent.JaasAuthenticationFailedEvent(org.springframework.security.Authentication, java.lang.Exception)
845 - Declaração do método: org.springframework.security.providers.jaas.event.JaasAuthenticationFailedEvent.getException()
845 - Declaração do método: org.springframework.security.providers.jaas.event.JaasAuthenticationSuccessEvent.JaasAuthenticationSuccessEvent(org.springframework.security.Authentication)
845 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProvider.LdapAuthenticationProvider(org.springframework.security.providers.ldap.LdapAuthenticator, org.springframework.security.ldap.LdapAuthoritiesPopulator)
Métodos invocados: 
org.springframework.security.providers.ldap.LdapAuthenticationProvider.setAuthenticator(org.springframework.security.providers.ldap.LdapAuthenticator)
org.springframework.security.providers.ldap.LdapAuthenticationProvider.setAuthoritiesPopulator(org.springframework.security.ldap.LdapAuthoritiesPopulator)
846 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProvider.LdapAuthenticationProvider(org.springframework.security.providers.ldap.LdapAuthenticator)
Métodos invocados: 
org.springframework.security.providers.ldap.LdapAuthenticationProvider.setAuthenticator(org.springframework.security.providers.ldap.LdapAuthenticator)
org.springframework.security.providers.ldap.LdapAuthenticationProvider.setAuthoritiesPopulator(org.springframework.security.ldap.LdapAuthoritiesPopulator)
847 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProvider.setAuthenticator(org.springframework.security.providers.ldap.LdapAuthenticator)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
848 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProvider.getAuthenticator()
848 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProvider.setAuthoritiesPopulator(org.springframework.security.ldap.LdapAuthoritiesPopulator)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
849 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProvider.getAuthoritiesPopulator()
849 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProvider.setUserDetailsContextMapper(org.springframework.security.userdetails.ldap.UserDetailsContextMapper)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
850 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProvider.getUserDetailsContextMapper()
850 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProvider.setUseAuthenticationRequestCredentials(Z)
850 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProvider.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getName()
org.springframework.util.StringUtils.hasLength(java.lang.String)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.Authentication.getCredentials()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.String.length()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.providers.ldap.LdapAuthenticationProvider.getAuthenticator()
org.springframework.security.providers.ldap.LdapAuthenticator.authenticate(org.springframework.security.Authentication)
org.springframework.security.providers.ldap.LdapAuthenticationProvider.loadUserAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String, java.lang.String)
org.springframework.security.userdetails.ldap.UserDetailsContextMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, [Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.providers.ldap.LdapAuthenticationProvider.createSuccessfulAuthentication(org.springframework.security.providers.UsernamePasswordAuthenticationToken, org.springframework.security.userdetails.UserDetails)
org.springframework.core.NestedRuntimeException.getMessage()
851 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProvider.loadUserAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.providers.ldap.LdapAuthenticationProvider.getAuthoritiesPopulator()
org.springframework.security.ldap.LdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
852 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProvider.createSuccessfulAuthentication(org.springframework.security.providers.UsernamePasswordAuthenticationToken, org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getCredentials()
org.springframework.security.userdetails.UserDetails.getPassword()
org.springframework.security.userdetails.UserDetails.getAuthorities()
853 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
854 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProvider$NullAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
854 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticator.authenticate(org.springframework.security.Authentication)
854 - Declaração do método: org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.PasswordComparisonAuthenticator(org.springframework.ldap.core.support.BaseLdapPathContextSource)
854 - Declaração do método: org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
java.security.Principal.getName()
org.springframework.security.Authentication.getCredentials()
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getUserDns(java.lang.String)
java.util.List.iterator()
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getContextSource()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getUserAttributes()
org.springframework.security.ldap.SpringSecurityLdapTemplate.retrieveEntry(java.lang.String, [Ljava.lang.String;)
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getUserSearch()
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getUserSearch()
org.springframework.security.ldap.LdapUserSearch.searchForUser(java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.ldap.core.DirContextOperations.getDn()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.providers.encoding.PasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.springframework.security.ldap.LdapUtils.getUtf8Bytes(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getDn()
java.lang.Object.toString()
org.springframework.security.ldap.SpringSecurityLdapTemplate.compare(java.lang.String, java.lang.String, java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
855 - Declaração do método: org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.setPasswordAttributeName(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
856 - Declaração do método: org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.setPasswordEncoder(org.springframework.security.providers.encoding.PasswordEncoder)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
857 - Declaração do método: org.springframework.security.providers.ldap.authenticator.BindAuthenticator.BindAuthenticator(org.springframework.security.ldap.SpringSecurityContextSource)
857 - Declaração do método: org.springframework.security.providers.ldap.authenticator.BindAuthenticator.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
java.security.Principal.getName()
org.springframework.security.Authentication.getCredentials()
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getUserDns(java.lang.String)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.providers.ldap.authenticator.BindAuthenticator.bindWithDn(java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getUserSearch()
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getUserSearch()
org.springframework.security.ldap.LdapUserSearch.searchForUser(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getDn()
java.lang.Object.toString()
org.springframework.security.providers.ldap.authenticator.BindAuthenticator.bindWithDn(java.lang.String, java.lang.String, java.lang.String)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
858 - Declaração do método: org.springframework.security.providers.ldap.authenticator.BindAuthenticator.bindWithDn(java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getContextSource()
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getUserAttributes()
org.springframework.security.ldap.SpringSecurityLdapTemplate.retrieveEntry(java.lang.String, [Ljava.lang.String;)
org.springframework.core.NestedRuntimeException.getCause()
org.springframework.security.providers.ldap.authenticator.BindAuthenticator.handleBindException(java.lang.String, java.lang.String, java.lang.Throwable)
859 - Declaração do método: org.springframework.security.providers.ldap.authenticator.BindAuthenticator.handleBindException(java.lang.String, java.lang.String, java.lang.Throwable)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
860 - Declaração do método: org.springframework.security.providers.ldap.authenticator.BindAuthenticator$BindWithSpecificDnContextSource.BindWithSpecificDnContextSource(org.springframework.security.ldap.SpringSecurityContextSource, java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.ldap.core.support.BaseLdapPathSource.getBaseLdapPath()
org.springframework.ldap.core.DistinguishedName.prepend(org.springframework.ldap.core.DistinguishedName)
861 - Declaração do método: org.springframework.security.providers.ldap.authenticator.BindAuthenticator$BindWithSpecificDnContextSource.getReadOnlyContext()
Métodos invocados: 
org.springframework.ldap.core.DistinguishedName.toString()
org.springframework.security.ldap.SpringSecurityContextSource.getReadWriteContext(java.lang.String, java.lang.Object)
862 - Declaração do método: org.springframework.security.providers.ldap.authenticator.BindAuthenticator$BindWithSpecificDnContextSource.getReadWriteContext()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.BindAuthenticator$BindWithSpecificDnContextSource.getReadOnlyContext()
863 - Declaração do método: org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.LdapShaPasswordEncoder()
863 - Declaração do método: org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.combineHashAndSalt([B, [B)
Métodos invocados: 
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
864 - Declaração do método: org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
Métodos invocados: 
java.security.MessageDigest.getInstance(java.lang.String)
java.lang.String.getBytes()
java.security.MessageDigest.update([B)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
java.security.MessageDigest.update([B)
java.security.MessageDigest.digest()
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.combineHashAndSalt([B, [B)
org.apache.commons.codec.binary.Base64.encodeBase64([B)
865 - Declaração do método: org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.extractSalt(java.lang.String)
Métodos invocados: 
java.lang.String.substring(I)
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.decodeBase64([B)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
866 - Declaração do método: org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.extractPrefix(java.lang.String)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.extractSalt(java.lang.String)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.length()
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
java.lang.String.substring(I)
java.lang.String.substring(I)
java.lang.String.equals(java.lang.Object)
867 - Declaração do método: org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.extractPrefix(java.lang.String)
Métodos invocados: 
java.lang.String.startsWith(java.lang.String)
java.lang.String.lastIndexOf(I)
java.lang.String.substring(I, I)
868 - Declaração do método: org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.setForceLowerCasePrefix(Z)
868 - Declaração do método: org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.AbstractLdapAuthenticator(org.springframework.ldap.core.ContextSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
869 - Declaração do método: org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.isTrue(Z, java.lang.String)
870 - Declaração do método: org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getContextSource()
870 - Declaração do método: org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getUserAttributes()
870 - Declaração do método: org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getUserDns(java.lang.String)
Métodos invocados: 
java.text.Format.format(java.lang.Object)
java.util.List.add(java.lang.Object)
871 - Declaração do método: org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getUserSearch()
871 - Declaração do método: org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setMessageSource(org.springframework.context.MessageSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
872 - Declaração do método: org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setUserAttributes([Ljava.lang.String;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
873 - Declaração do método: org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setUserDnPatterns([Ljava.lang.String;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
874 - Declaração do método: org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setUserSearch(org.springframework.security.ldap.LdapUserSearch)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
875 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsService.loadUserDetails(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.Authentication.getDetails()
org.springframework.util.Assert.notNull(java.lang.Object)
org.springframework.security.Authentication.getDetails()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object)
org.springframework.security.Authentication.getDetails()
org.springframework.security.GrantedAuthoritiesContainer.getGrantedAuthorities()
org.springframework.security.providers.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsService.createuserDetails(org.springframework.security.Authentication, [Lorg.springframework.security.GrantedAuthority;)
876 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsService.createuserDetails(org.springframework.security.Authentication, [Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
java.security.Principal.getName()
877 - Declaração do método: org.springframework.security.providers.preauth.UserDetailsByNameServiceWrapper.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
878 - Declaração do método: org.springframework.security.providers.preauth.UserDetailsByNameServiceWrapper.loadUserDetails(org.springframework.security.Authentication)
Métodos invocados: 
java.security.Principal.getName()
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
879 - Declaração do método: org.springframework.security.providers.preauth.UserDetailsByNameServiceWrapper.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
879 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
880 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.supports(java.lang.Class)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.Authentication.getCredentials()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.providers.preauth.AuthenticationUserDetailsService.loadUserDetails(org.springframework.security.Authentication)
org.springframework.security.userdetails.UserDetailsChecker.check(org.springframework.security.userdetails.UserDetails)
org.springframework.security.Authentication.getCredentials()
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.Authentication.getDetails()
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
881 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
882 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.setPreAuthenticatedUserDetailsService(org.springframework.security.providers.preauth.AuthenticationUserDetailsService)
882 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.getOrder()
882 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.setOrder(I)
882 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.setThrowExceptionWhenTokenRejected(Z)
882 - Declaração do método: org.springframework.security.providers.preauth.AuthenticationUserDetailsService.loadUserDetails(org.springframework.security.Authentication)
882 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationToken.PreAuthenticatedAuthenticationToken(java.lang.Object, java.lang.Object)
882 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationToken.PreAuthenticatedAuthenticationToken(java.lang.Object, java.lang.Object, [Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.setAuthenticated(Z)
883 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationToken.getCredentials()
883 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationToken.getPrincipal()
883 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationManagerImpl.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
884 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationManagerImpl.attemptAuthentication(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
org.springframework.security.Authentication.getAuthorities()
org.springframework.core.NestedRuntimeException.getMessage()
885 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationManagerImpl.getAuthenticationManager()
885 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationManagerImpl.setAuthenticationManager(org.springframework.security.AuthenticationManager)
885 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
886 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationProvider.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.toString()
org.springframework.security.Authentication.getCredentials()
java.lang.Object.toString()
org.springframework.security.providers.rcp.RemoteAuthenticationManager.attemptAuthentication(java.lang.String, java.lang.String)
887 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationProvider.getRemoteAuthenticationManager()
887 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationProvider.setRemoteAuthenticationManager(org.springframework.security.providers.rcp.RemoteAuthenticationManager)
887 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
888 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationManager.attemptAuthentication(java.lang.String, java.lang.String)
888 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationException.RemoteAuthenticationException(java.lang.String)
888 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
889 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.supports(java.lang.Class)
java.lang.String.hashCode()
org.springframework.security.providers.rememberme.RememberMeAuthenticationToken.getKeyHash()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
890 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.getKey()
890 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.setKey(java.lang.String)
890 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.setMessageSource(org.springframework.context.MessageSource)
890 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
891 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationToken.RememberMeAuthenticationToken(java.lang.String, java.lang.Object, [Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.hashCode()
org.springframework.security.providers.AbstractAuthenticationToken.setAuthenticated(Z)
892 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationToken.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.providers.rememberme.RememberMeAuthenticationToken.getKeyHash()
org.springframework.security.providers.rememberme.RememberMeAuthenticationToken.getKeyHash()
893 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationToken.getCredentials()
893 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationToken.getKeyHash()
893 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationToken.getPrincipal()
893 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.additionalAuthenticationChecks(org.springframework.security.userdetails.UserDetails, org.springframework.security.providers.UsernamePasswordAuthenticationToken)
Métodos invocados: 
org.springframework.security.userdetails.UserDetailsChecker.check(org.springframework.security.userdetails.UserDetails)
894 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.doAfterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
895 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.getUserDetailsService()
895 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.retrieveUser(java.lang.String, org.springframework.security.providers.UsernamePasswordAuthenticationToken)
Métodos invocados: 
org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.getUserDetailsService()
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.core.NestedRuntimeException.getMessage()
896 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
896 - Declaração do método: org.springframework.security.providers.x509.X509AuthoritiesPopulator.getUserDetails(java.security.cert.X509Certificate)
896 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
897 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationProvider.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.security.providers.x509.X509AuthenticationProvider.supports(java.lang.Class)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.Authentication.getCredentials()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.providers.x509.X509UserCache.getUserFromCache(java.security.cert.X509Certificate)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.providers.x509.X509AuthoritiesPopulator.getUserDetails(java.security.cert.X509Certificate)
org.springframework.security.providers.x509.X509UserCache.putUserInCache(java.security.cert.X509Certificate, org.springframework.security.userdetails.UserDetails)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.Authentication.getDetails()
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
898 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationProvider.setMessageSource(org.springframework.context.MessageSource)
898 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationProvider.setX509AuthoritiesPopulator(org.springframework.security.providers.x509.X509AuthoritiesPopulator)
898 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationProvider.setX509UserCache(org.springframework.security.providers.x509.X509UserCache)
898 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
899 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationToken.X509AuthenticationToken(java.security.cert.X509Certificate)
899 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationToken.X509AuthenticationToken(java.lang.Object, java.security.cert.X509Certificate, [Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.setAuthenticated(Z)
900 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationToken.getCredentials()
900 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationToken.getPrincipal()
900 - Declaração do método: org.springframework.security.providers.x509.X509UserCache.getUserFromCache(java.security.cert.X509Certificate)
900 - Declaração do método: org.springframework.security.providers.x509.X509UserCache.putUserInCache(java.security.cert.X509Certificate, org.springframework.security.userdetails.UserDetails)
900 - Declaração do método: org.springframework.security.providers.x509.X509UserCache.removeUserFromCache(java.security.cert.X509Certificate)
900 - Declaração do método: org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCache.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
901 - Declaração do método: org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCache.getUserFromCache(java.security.cert.X509Certificate)
Métodos invocados: 
net.sf.ehcache.Ehcache.get(java.io.Serializable)
java.lang.Throwable.getMessage()
org.apache.commons.logging.Log.isDebugEnabled()
java.security.cert.X509Certificate.getSubjectDN()
java.security.cert.X509Certificate.getSubjectDN()
java.security.Principal.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
net.sf.ehcache.Element.getValue()
902 - Declaração do método: org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCache.putUserInCache(java.security.cert.X509Certificate, org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
java.security.cert.X509Certificate.getSubjectDN()
org.apache.commons.logging.Log.debug(java.lang.Object)
net.sf.ehcache.Ehcache.put(net.sf.ehcache.Element)
903 - Declaração do método: org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCache.removeUserFromCache(java.security.cert.X509Certificate)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
java.security.cert.X509Certificate.getSubjectDN()
org.apache.commons.logging.Log.debug(java.lang.Object)
net.sf.ehcache.Ehcache.remove(java.io.Serializable)
904 - Declaração do método: org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCache.setCache(net.sf.ehcache.Ehcache)
904 - Declaração do método: org.springframework.security.providers.x509.cache.NullX509UserCache.getUserFromCache(java.security.cert.X509Certificate)
904 - Declaração do método: org.springframework.security.providers.x509.cache.NullX509UserCache.putUserInCache(java.security.cert.X509Certificate, org.springframework.security.userdetails.UserDetails)
904 - Declaração do método: org.springframework.security.providers.x509.cache.NullX509UserCache.removeUserFromCache(java.security.cert.X509Certificate)
904 - Declaração do método: org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.regex.Pattern.compile(java.lang.String, I)
905 - Declaração do método: org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.getUserDetails(java.security.cert.X509Certificate)
Métodos invocados: 
java.security.cert.X509Certificate.getSubjectDN()
java.security.Principal.getName()
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.util.regex.Matcher.find()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
java.util.regex.Matcher.groupCount()
java.util.regex.Matcher.group(I)
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
906 - Declaração do método: org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.setMessageSource(org.springframework.context.MessageSource)
906 - Declaração do método: org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.setSubjectDNRegex(java.lang.String)
906 - Declaração do método: org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
906 - Declaração do método: org.springframework.security.runas.RunAsUserToken.RunAsUserToken(java.lang.String, java.lang.Object, java.lang.Object, [Lorg.springframework.security.GrantedAuthority;, java.lang.Class)
Métodos invocados: 
java.lang.String.hashCode()
org.springframework.security.providers.AbstractAuthenticationToken.setAuthenticated(Z)
907 - Declaração do método: org.springframework.security.runas.RunAsUserToken.getCredentials()
907 - Declaração do método: org.springframework.security.runas.RunAsUserToken.getKeyHash()
907 - Declaração do método: org.springframework.security.runas.RunAsUserToken.getOriginalAuthentication()
907 - Declaração do método: org.springframework.security.runas.RunAsUserToken.getPrincipal()
907 - Declaração do método: org.springframework.security.runas.RunAsUserToken.toString()
Métodos invocados: 
java.lang.StringBuffer.append(java.lang.String)
java.lang.Class.getName()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
908 - Declaração do método: org.springframework.security.runas.RunAsManagerImpl.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
909 - Declaração do método: org.springframework.security.runas.RunAsManagerImpl.buildRunAs(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.runas.RunAsManagerImpl.supports(org.springframework.security.ConfigAttribute)
org.springframework.security.runas.RunAsManagerImpl.getRolePrefix()
org.springframework.security.ConfigAttribute.getAttribute()
java.util.List.add(java.lang.Object)
java.util.List.size()
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.Authentication.getAuthorities()
java.util.List.add(java.lang.Object)
java.util.List.toArray([Ljava.lang.Object;)
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.Authentication.getCredentials()
java.lang.Object.getClass()
910 - Declaração do método: org.springframework.security.runas.RunAsManagerImpl.getKey()
910 - Declaração do método: org.springframework.security.runas.RunAsManagerImpl.getRolePrefix()
910 - Declaração do método: org.springframework.security.runas.RunAsManagerImpl.setKey(java.lang.String)
910 - Declaração do método: org.springframework.security.runas.RunAsManagerImpl.setRolePrefix(java.lang.String)
910 - Declaração do método: org.springframework.security.runas.RunAsManagerImpl.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.startsWith(java.lang.String)
911 - Declaração do método: org.springframework.security.runas.RunAsManagerImpl.supports(java.lang.Class)
911 - Declaração do método: org.springframework.security.runas.NullRunAsManager.buildRunAs(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
911 - Declaração do método: org.springframework.security.runas.NullRunAsManager.supports(org.springframework.security.ConfigAttribute)
911 - Declaração do método: org.springframework.security.runas.NullRunAsManager.supports(java.lang.Class)
911 - Declaração do método: org.springframework.security.runas.RunAsImplAuthenticationProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
912 - Declaração do método: org.springframework.security.runas.RunAsImplAuthenticationProvider.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.runas.RunAsUserToken.getKeyHash()
java.lang.String.hashCode()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
913 - Declaração do método: org.springframework.security.runas.RunAsImplAuthenticationProvider.getKey()
913 - Declaração do método: org.springframework.security.runas.RunAsImplAuthenticationProvider.setKey(java.lang.String)
913 - Declaração do método: org.springframework.security.runas.RunAsImplAuthenticationProvider.setMessageSource(org.springframework.context.MessageSource)
913 - Declaração do método: org.springframework.security.runas.RunAsImplAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
914 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpsEntryPoint.RetryWithHttpsEntryPoint()
914 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpsEntryPoint.getMappedPort(java.lang.Integer)
Métodos invocados: 
org.springframework.security.securechannel.AbstractRetryEntryPoint.getPortMapper()
org.springframework.security.util.PortMapper.lookupHttpsPort(java.lang.Integer)
915 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.intercept.ObjectDefinitionSource.getConfigAttributeDefinitions()
org.apache.commons.logging.Log.isWarnEnabled()
org.apache.commons.logging.Log.warn(java.lang.Object)
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.securechannel.ChannelDecisionManager.supports(org.springframework.security.ConfigAttribute)
java.util.Set.add(java.lang.Object)
java.util.Set.size()
org.apache.commons.logging.Log.isInfoEnabled()
org.apache.commons.logging.Log.info(java.lang.Object)
java.lang.Object.toString()
916 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilter.doFilterHttp(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.intercept.ObjectDefinitionSource.getAttributes(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.intercept.web.FilterInvocation.toString()
org.springframework.security.ConfigAttributeDefinition.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.securechannel.ChannelDecisionManager.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.web.FilterInvocation.getResponse()
javax.servlet.ServletResponse.isCommitted()
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
917 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilter.getChannelDecisionManager()
917 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilter.getFilterInvocationDefinitionSource()
917 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilter.setChannelDecisionManager(org.springframework.security.securechannel.ChannelDecisionManager)
917 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilter.setFilterInvocationDefinitionSource(org.springframework.security.intercept.web.FilterInvocationDefinitionSource)
917 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilter.getOrder()
917 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManagerImpl.afterPropertiesSet()
Métodos invocados: 
org.springframework.security.securechannel.ChannelDecisionManagerImpl.checkIfValidList(java.util.List)
918 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManagerImpl.checkIfValidList(java.util.List)
Métodos invocados: 
org.springframework.util.Assert.notEmpty(java.util.Collection, java.lang.String)
919 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManagerImpl.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.securechannel.ChannelProcessor.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.web.FilterInvocation.getResponse()
javax.servlet.ServletResponse.isCommitted()
920 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManagerImpl.getChannelProcessors()
920 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManagerImpl.setChannelProcessors(java.util.List)
Métodos invocados: 
org.springframework.security.securechannel.ChannelDecisionManagerImpl.checkIfValidList(java.util.List)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.Object.getClass()
java.lang.Class.getName()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
921 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManagerImpl.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.securechannel.ChannelProcessor.supports(org.springframework.security.ConfigAttribute)
922 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpEntryPoint.RetryWithHttpEntryPoint()
922 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpEntryPoint.getMappedPort(java.lang.Integer)
Métodos invocados: 
org.springframework.security.securechannel.AbstractRetryEntryPoint.getPortMapper()
org.springframework.security.util.PortMapper.lookupHttpPort(java.lang.Integer)
923 - Declaração do método: org.springframework.security.securechannel.InsecureChannelProcessor.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
924 - Declaração do método: org.springframework.security.securechannel.InsecureChannelProcessor.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.securechannel.InsecureChannelProcessor.supports(org.springframework.security.ConfigAttribute)
org.springframework.security.intercept.web.FilterInvocation.getHttpRequest()
javax.servlet.ServletRequest.isSecure()
org.springframework.security.intercept.web.FilterInvocation.getRequest()
org.springframework.security.intercept.web.FilterInvocation.getResponse()
org.springframework.security.securechannel.ChannelEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
925 - Declaração do método: org.springframework.security.securechannel.InsecureChannelProcessor.getEntryPoint()
925 - Declaração do método: org.springframework.security.securechannel.InsecureChannelProcessor.getInsecureKeyword()
925 - Declaração do método: org.springframework.security.securechannel.InsecureChannelProcessor.setEntryPoint(org.springframework.security.securechannel.ChannelEntryPoint)
925 - Declaração do método: org.springframework.security.securechannel.InsecureChannelProcessor.setInsecureKeyword(java.lang.String)
925 - Declaração do método: org.springframework.security.securechannel.InsecureChannelProcessor.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.security.securechannel.InsecureChannelProcessor.getInsecureKeyword()
java.lang.String.equals(java.lang.Object)
926 - Declaração do método: org.springframework.security.securechannel.SecureChannelProcessor.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
927 - Declaração do método: org.springframework.security.securechannel.SecureChannelProcessor.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.securechannel.SecureChannelProcessor.supports(org.springframework.security.ConfigAttribute)
org.springframework.security.intercept.web.FilterInvocation.getHttpRequest()
javax.servlet.ServletRequest.isSecure()
org.springframework.security.intercept.web.FilterInvocation.getRequest()
org.springframework.security.intercept.web.FilterInvocation.getResponse()
org.springframework.security.securechannel.ChannelEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
928 - Declaração do método: org.springframework.security.securechannel.SecureChannelProcessor.getEntryPoint()
928 - Declaração do método: org.springframework.security.securechannel.SecureChannelProcessor.getSecureKeyword()
928 - Declaração do método: org.springframework.security.securechannel.SecureChannelProcessor.setEntryPoint(org.springframework.security.securechannel.ChannelEntryPoint)
928 - Declaração do método: org.springframework.security.securechannel.SecureChannelProcessor.setSecureKeyword(java.lang.String)
928 - Declaração do método: org.springframework.security.securechannel.SecureChannelProcessor.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.security.securechannel.SecureChannelProcessor.getSecureKeyword()
java.lang.String.equals(java.lang.Object)
929 - Declaração do método: org.springframework.security.securechannel.ChannelEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
929 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManager.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
929 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManager.supports(org.springframework.security.ConfigAttribute)
929 - Declaração do método: org.springframework.security.securechannel.ChannelProcessor.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
929 - Declaração do método: org.springframework.security.securechannel.ChannelProcessor.supports(org.springframework.security.ConfigAttribute)
929 - Declaração do método: org.springframework.security.securechannel.AbstractRetryEntryPoint.AbstractRetryEntryPoint(java.lang.String, I)
929 - Declaração do método: org.springframework.security.securechannel.AbstractRetryEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getPathInfo()
javax.servlet.http.HttpServletRequest.getQueryString()
javax.servlet.http.HttpServletRequest.getContextPath()
javax.servlet.http.HttpServletRequest.getServletPath()
org.springframework.security.util.PortResolver.getServerPort(javax.servlet.ServletRequest)
org.springframework.security.securechannel.AbstractRetryEntryPoint.getMappedPort(java.lang.Integer)
java.lang.Integer.intValue()
javax.servlet.ServletRequest.getServerName()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpServletResponse.encodeRedirectURL(java.lang.String)
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
930 - Declaração do método: org.springframework.security.securechannel.AbstractRetryEntryPoint.getMappedPort(java.lang.Integer)
930 - Declaração do método: org.springframework.security.securechannel.AbstractRetryEntryPoint.getPortMapper()
930 - Declaração do método: org.springframework.security.securechannel.AbstractRetryEntryPoint.getPortResolver()
930 - Declaração do método: org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
931 - Declaração do método: org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
932 - Declaração do método: org.springframework.security.ui.WebAuthenticationDetailsSource.buildDetails(java.lang.Object)
Métodos invocados: 
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object)
java.lang.Class.getConstructor([Ljava.lang.Class;)
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
933 - Declaração do método: org.springframework.security.ui.WebAuthenticationDetailsSource.setClazz(java.lang.Class)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
934 - Declaração do método: org.springframework.security.ui.AuthenticationDetailsSourceImpl.buildDetails(java.lang.Object)
Métodos invocados: 
org.springframework.security.ui.AuthenticationDetailsSourceImpl.getFirstMatchingConstructor(java.lang.Object)
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
935 - Declaração do método: org.springframework.security.ui.AuthenticationDetailsSourceImpl.getFirstMatchingConstructor(java.lang.Object)
Métodos invocados: 
java.lang.Class.getDeclaredConstructors()
java.lang.reflect.Constructor.getParameterTypes()
java.lang.Class.isInstance(java.lang.Object)
java.lang.Object.getClass()
936 - Declaração do método: org.springframework.security.ui.AuthenticationDetailsSourceImpl.setClazz(java.lang.Class)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
937 - Declaração do método: org.springframework.security.ui.FilterChainOrder.getOrder(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.Integer.intValue()
938 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
939 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
939 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.doFilterHttp(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilter.requiresAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.AbstractProcessingFilter.onPreAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.ui.AbstractProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
org.springframework.security.ui.AbstractProcessingFilter.unsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.ui.AbstractProcessingFilter.successfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
940 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.obtainFullSavedRequestUrl(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilter.getSavedRequest(javax.servlet.http.HttpServletRequest)
org.springframework.security.ui.savedrequest.SavedRequest.getFullRequestUrl()
941 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.getSavedRequest(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getSession(Z)
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
942 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.onPreAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
942 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.onSuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
942 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.onUnsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
942 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.requiresAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getRequestURI()
java.lang.String.indexOf(I)
java.lang.String.substring(I, I)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.equals(java.lang.Object)
java.lang.String.endsWith(java.lang.String)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.endsWith(java.lang.String)
943 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
Métodos invocados: 
org.springframework.security.util.RedirectUtils.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String, Z)
944 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.successfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
java.security.Principal.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.AbstractProcessingFilter.startNewSessionIfRequired(javax.servlet.http.HttpServletRequest)
org.springframework.security.ui.AbstractProcessingFilter.determineTargetUrl(javax.servlet.http.HttpServletRequest)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.AbstractProcessingFilter.onSuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
org.springframework.security.ui.rememberme.RememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
java.lang.Object.getClass()
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
org.springframework.security.ui.AbstractProcessingFilter.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
945 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.startNewSessionIfRequired(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getSession(Z)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpSession.invalidate()
javax.servlet.http.HttpServletRequest.getSession(Z)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpSession.getAttributeNames()
java.util.Enumeration.hasMoreElements()
java.util.Enumeration.nextElement()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
java.util.HashMap.put(java.lang.Object, java.lang.Object)
javax.servlet.http.HttpSession.invalidate()
javax.servlet.http.HttpServletRequest.getSession(Z)
java.util.HashMap.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
946 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.determineTargetUrl(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilter.getSavedRequest(javax.servlet.http.HttpServletRequest)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.ui.TargetUrlResolver.determineTargetUrl(org.springframework.security.ui.savedrequest.SavedRequest, javax.servlet.http.HttpServletRequest, org.springframework.security.Authentication)
org.springframework.security.ui.AbstractProcessingFilter.getDefaultTargetUrl()
947 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.unsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.AbstractProcessingFilter.determineFailureUrl(javax.servlet.http.HttpServletRequest, org.springframework.security.AuthenticationException)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Throwable.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpServletRequest.getSession(Z)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.ui.AbstractProcessingFilter.onUnsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
org.springframework.security.ui.rememberme.RememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.core.NestedRuntimeException.getMessage()
javax.servlet.http.HttpServletResponse.sendError(I, java.lang.String)
javax.servlet.ServletRequest.getRequestDispatcher(java.lang.String)
javax.servlet.RequestDispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.ui.AbstractProcessingFilter.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
948 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.determineFailureUrl(javax.servlet.http.HttpServletRequest, org.springframework.security.AuthenticationException)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
java.util.Properties.getProperty(java.lang.String, java.lang.String)
949 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.getAuthenticationFailureUrl()
949 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationFailureUrl(java.lang.String)
949 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.getAuthenticationManager()
949 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
949 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.getDefaultFilterProcessesUrl()
949 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.getDefaultTargetUrl()
949 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
Métodos invocados: 
java.lang.String.startsWith(java.lang.String)
java.lang.String.startsWith(java.lang.String)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
950 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.getExceptionMappings()
950 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.setExceptionMappings(java.util.Properties)
950 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.getFilterProcessesUrl()
950 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.setFilterProcessesUrl(java.lang.String)
950 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.getRememberMeServices()
950 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.setRememberMeServices(org.springframework.security.ui.rememberme.RememberMeServices)
950 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.isAlwaysUseDefaultTargetUrl()
950 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.setAlwaysUseDefaultTargetUrl(Z)
950 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.setContinueChainBeforeSuccessfulAuthentication(Z)
950 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
950 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationDetailsSource(org.springframework.security.ui.AuthenticationDetailsSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
951 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.setMessageSource(org.springframework.context.MessageSource)
951 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.setInvalidateSessionOnSuccessfulAuthentication(Z)
951 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.setMigrateInvalidatedSessionAttributes(Z)
951 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.getAuthenticationDetailsSource()
951 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.setUseRelativeContext(Z)
951 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.getAllowSessionCreation()
951 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.setAllowSessionCreation(Z)
951 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.getTargetUrlResolver()
951 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.setTargetUrlResolver(org.springframework.security.ui.TargetUrlResolver)
951 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilter.setServerSideRedirect(Z)
951 - Declaração do método: org.springframework.security.ui.TargetUrlResolver.determineTargetUrl(org.springframework.security.ui.savedrequest.SavedRequest, javax.servlet.http.HttpServletRequest, org.springframework.security.Authentication)
951 - Declaração do método: org.springframework.security.ui.TargetUrlResolverImpl.determineTargetUrl(org.springframework.security.ui.savedrequest.SavedRequest, javax.servlet.http.HttpServletRequest, org.springframework.security.Authentication)
Métodos invocados: 
javax.servlet.ServletRequest.getParameter(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.net.URLDecoder.decode(java.lang.String, java.lang.String)
org.springframework.security.ui.savedrequest.SavedRequest.getMethod()
java.lang.String.equals(java.lang.Object)
org.springframework.security.ui.savedrequest.SavedRequest.getFullRequestUrl()
952 - Declaração do método: org.springframework.security.ui.TargetUrlResolverImpl.isJustUseSavedRequestOnGet()
952 - Declaração do método: org.springframework.security.ui.TargetUrlResolverImpl.setJustUseSavedRequestOnGet(Z)
952 - Declaração do método: org.springframework.security.ui.TargetUrlResolverImpl.setTargetUrlParameter(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
953 - Declaração do método: org.springframework.security.ui.WebAuthenticationDetails.WebAuthenticationDetails(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getRemoteAddr()
javax.servlet.http.HttpServletRequest.getSession(Z)
javax.servlet.http.HttpSession.getId()
org.springframework.security.ui.WebAuthenticationDetails.doPopulateAdditionalInformation(javax.servlet.http.HttpServletRequest)
954 - Declaração do método: org.springframework.security.ui.WebAuthenticationDetails.doPopulateAdditionalInformation(javax.servlet.http.HttpServletRequest)
954 - Declaração do método: org.springframework.security.ui.WebAuthenticationDetails.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.ui.WebAuthenticationDetails.getRemoteAddress()
org.springframework.security.ui.WebAuthenticationDetails.getRemoteAddress()
org.springframework.security.ui.WebAuthenticationDetails.getRemoteAddress()
java.lang.String.equals(java.lang.Object)
org.springframework.security.ui.WebAuthenticationDetails.getSessionId()
org.springframework.security.ui.WebAuthenticationDetails.getSessionId()
org.springframework.security.ui.WebAuthenticationDetails.getSessionId()
java.lang.String.equals(java.lang.Object)
955 - Declaração do método: org.springframework.security.ui.WebAuthenticationDetails.getRemoteAddress()
955 - Declaração do método: org.springframework.security.ui.WebAuthenticationDetails.getSessionId()
955 - Declaração do método: org.springframework.security.ui.WebAuthenticationDetails.hashCode()
Métodos invocados: 
java.lang.String.hashCode()
java.lang.String.hashCode()
956 - Declaração do método: org.springframework.security.ui.WebAuthenticationDetails.toString()
Métodos invocados: 
java.lang.StringBuffer.append(java.lang.String)
org.springframework.security.ui.WebAuthenticationDetails.getRemoteAddress()
java.lang.StringBuffer.append(java.lang.String)
org.springframework.security.ui.WebAuthenticationDetails.getSessionId()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
957 - Declaração do método: org.springframework.security.ui.AccessDeniedHandler.handle(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AccessDeniedException)
957 - Declaração do método: org.springframework.security.ui.AccessDeniedHandlerImpl.handle(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AccessDeniedException)
Métodos invocados: 
javax.servlet.ServletRequest.setAttribute(java.lang.String, java.lang.Object)
javax.servlet.ServletRequest.getRequestDispatcher(java.lang.String)
javax.servlet.RequestDispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
javax.servlet.ServletResponse.isCommitted()
org.springframework.core.NestedRuntimeException.getMessage()
javax.servlet.http.HttpServletResponse.sendError(I, java.lang.String)
958 - Declaração do método: org.springframework.security.ui.AccessDeniedHandlerImpl.setErrorPage(java.lang.String)
Métodos invocados: 
java.lang.String.startsWith(java.lang.String)
959 - Declaração do método: org.springframework.security.ui.AuthenticationEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
959 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
960 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilter.doFilterHttp(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.util.ThrowableAnalyzer.determineCauseChain(java.lang.Throwable)
org.springframework.security.util.ThrowableAnalyzer.getFirstThrowableOfType(java.lang.Class, [Ljava.lang.Throwable;)
org.springframework.security.ui.ExceptionTranslationFilter.handleException(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain, org.springframework.security.SpringSecurityException)
961 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilter.getAuthenticationEntryPoint()
961 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilter.getAuthenticationTrustResolver()
961 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilter.getPortResolver()
961 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilter.handleException(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain, org.springframework.security.SpringSecurityException)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.springframework.security.ui.ExceptionTranslationFilter.sendStartAuthentication(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain, org.springframework.security.AuthenticationException)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.AuthenticationTrustResolver.isAnonymous(org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.springframework.security.ui.ExceptionTranslationFilter.sendStartAuthentication(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain, org.springframework.security.AuthenticationException)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.springframework.security.ui.AccessDeniedHandler.handle(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AccessDeniedException)
962 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilter.isCreateSessionAllowed()
962 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilter.sendStartAuthentication(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain, org.springframework.security.AuthenticationException)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.AuthenticationEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
963 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilter.setAccessDeniedHandler(org.springframework.security.ui.AccessDeniedHandler)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
964 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilter.setAuthenticationEntryPoint(org.springframework.security.ui.AuthenticationEntryPoint)
964 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilter.setAuthenticationTrustResolver(org.springframework.security.AuthenticationTrustResolver)
964 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilter.setCreateSessionAllowed(Z)
964 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilter.setPortResolver(org.springframework.security.util.PortResolver)
964 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilter.setThrowableAnalyzer(org.springframework.security.util.ThrowableAnalyzer)
964 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilter.getOrder()
964 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilter$DefaultThrowableAnalyzer.initExtractorMap()
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.registerExtractor(java.lang.Class, org.springframework.security.util.ThrowableCauseExtractor)
org.springframework.security.util.ThrowableAnalyzer.verifyThrowableHierarchy(java.lang.Throwable, java.lang.Class)
javax.servlet.ServletException.getRootCause()
965 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilter$DefaultThrowableAnalyzer$1.extractCause(java.lang.Throwable)
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.verifyThrowableHierarchy(java.lang.Throwable, java.lang.Class)
javax.servlet.ServletException.getRootCause()
966 - Declaração do método: org.springframework.security.ui.SpringSecurityFilter.init(javax.servlet.FilterConfig)
966 - Declaração do método: org.springframework.security.ui.SpringSecurityFilter.destroy()
966 - Declaração do método: org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.ui.SpringSecurityFilter.doFilterHttp(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)
967 - Declaração do método: org.springframework.security.ui.SpringSecurityFilter.doFilterHttp(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)
967 - Declaração do método: org.springframework.security.ui.SpringSecurityFilter.toString()
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.core.Ordered.getOrder()
968 - Declaração do método: org.springframework.security.ui.AuthenticationDetails.AuthenticationDetails(java.lang.Object)
Métodos invocados: 
java.lang.Object.toString()
org.springframework.security.ui.AuthenticationDetails.doPopulateAdditionalInformation(java.lang.Object)
969 - Declaração do método: org.springframework.security.ui.AuthenticationDetails.AuthenticationDetails()
969 - Declaração do método: org.springframework.security.ui.AuthenticationDetails.doPopulateAdditionalInformation(java.lang.Object)
969 - Declaração do método: org.springframework.security.ui.AuthenticationDetails.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.ui.AuthenticationDetails.getContext()
org.springframework.security.ui.AuthenticationDetails.getContext()
org.springframework.security.ui.AuthenticationDetails.getContext()
java.lang.String.equals(java.lang.Object)
970 - Declaração do método: org.springframework.security.ui.AuthenticationDetails.getContext()
970 - Declaração do método: org.springframework.security.ui.AuthenticationDetails.toString()
Métodos invocados: 
java.lang.StringBuffer.append(java.lang.String)
org.springframework.security.ui.AuthenticationDetails.getContext()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
971 - Declaração do método: org.springframework.security.ui.AuthenticationDetailsSource.buildDetails(java.lang.Object)
971 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPoint.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
972 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
Métodos invocados: 
javax.servlet.http.HttpServletResponse.addHeader(java.lang.String, java.lang.String)
org.springframework.core.NestedRuntimeException.getMessage()
javax.servlet.http.HttpServletResponse.sendError(I, java.lang.String)
973 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPoint.getRealmName()
973 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPoint.setRealmName(java.lang.String)
973 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.ui.basicauth.BasicProcessingFilter.isIgnoreFailure()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
974 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilter.doFilterHttp(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.String.startsWith(java.lang.String)
java.lang.String.substring(I)
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.decodeBase64([B)
java.lang.String.indexOf(java.lang.String)
java.lang.String.substring(I, I)
java.lang.String.substring(I)
org.springframework.security.ui.basicauth.BasicProcessingFilter.authenticationIsRequired(java.lang.String)
org.springframework.security.ui.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Throwable.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.rememberme.RememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.ui.AuthenticationEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.apache.commons.logging.Log.isDebugEnabled()
java.security.Principal.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.rememberme.RememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
975 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilter.authenticationIsRequired(java.lang.String)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.Authentication.isAuthenticated()
java.security.Principal.getName()
java.lang.String.equals(java.lang.Object)
976 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilter.getAuthenticationEntryPoint()
976 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilter.setAuthenticationEntryPoint(org.springframework.security.ui.AuthenticationEntryPoint)
976 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilter.getAuthenticationManager()
976 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
976 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilter.isIgnoreFailure()
976 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilter.setIgnoreFailure(Z)
976 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilter.setAuthenticationDetailsSource(org.springframework.security.ui.AuthenticationDetailsSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
977 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilter.setRememberMeServices(org.springframework.security.ui.rememberme.RememberMeServices)
977 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilter.getOrder()
977 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.getOrder()
977 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.setOrder(I)
977 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.afterPropertiesSet()
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
978 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
Métodos invocados: 
java.lang.System.currentTimeMillis()
org.apache.commons.codec.digest.DigestUtils.md5Hex(java.lang.String)
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpServletResponse.addHeader(java.lang.String, java.lang.String)
org.springframework.core.NestedRuntimeException.getMessage()
javax.servlet.http.HttpServletResponse.sendError(I, java.lang.String)
979 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.getKey()
979 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.getNonceValiditySeconds()
979 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.getRealmName()
979 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.setKey(java.lang.String)
979 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.setNonceValiditySeconds(I)
979 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.setRealmName(java.lang.String)
979 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
980 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilter.destroy()
980 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.String.startsWith(java.lang.String)
java.lang.String.substring(I)
org.springframework.security.util.StringSplitUtils.splitIgnoringQuotes(java.lang.String, C)
org.springframework.security.util.StringSplitUtils.splitEachArrayElementAndCreateMap([Ljava.lang.String;, java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilter.fail(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
java.lang.String.equals(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilter.fail(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.security.ui.digestauth.DigestProcessingFilter.getAuthenticationEntryPoint()
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.getRealmName()
java.lang.String.equals(java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilter.getAuthenticationEntryPoint()
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.getRealmName()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilter.fail(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilter.fail(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.decodeBase64([B)
org.springframework.util.StringUtils.delimitedListToStringArray(java.lang.String, java.lang.String)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilter.fail(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
java.lang.Long.longValue()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilter.fail(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.security.ui.digestauth.DigestProcessingFilter.getAuthenticationEntryPoint()
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.getKey()
org.apache.commons.codec.digest.DigestUtils.md5Hex(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilter.fail(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.security.providers.dao.UserCache.getUserFromCache(java.lang.String)
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilter.fail(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.security.providers.dao.UserCache.putUserInCache(org.springframework.security.userdetails.UserDetails)
org.springframework.security.userdetails.UserDetails.getPassword()
javax.servlet.http.HttpServletRequest.getMethod()
org.springframework.security.ui.digestauth.DigestProcessingFilter.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
java.lang.String.equals(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilter.fail(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.security.providers.dao.UserCache.putUserInCache(org.springframework.security.userdetails.UserDetails)
org.springframework.security.userdetails.UserDetails.getPassword()
javax.servlet.http.HttpServletRequest.getMethod()
org.springframework.security.ui.digestauth.DigestProcessingFilter.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
java.lang.String.equals(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilter.fail(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
java.lang.System.currentTimeMillis()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilter.fail(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.userdetails.UserDetails.getPassword()
org.springframework.security.ui.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
981 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilter.encodePasswordInA1Format(java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.codec.digest.DigestUtils.md5Hex(java.lang.String)
982 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilter.fail(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
983 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilter.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.codec.digest.DigestUtils.md5Hex(java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilter.encodePasswordInA1Format(java.lang.String, java.lang.String, java.lang.String)
java.lang.String.equals(java.lang.Object)
org.apache.commons.codec.digest.DigestUtils.md5Hex(java.lang.String)
984 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilter.getAuthenticationEntryPoint()
984 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilter.getUserCache()
984 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilter.getUserDetailsService()
984 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilter.init(javax.servlet.FilterConfig)
984 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilter.setAuthenticationDetailsSource(org.springframework.security.ui.AuthenticationDetailsSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
985 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilter.setAuthenticationEntryPoint(org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint)
985 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilter.setMessageSource(org.springframework.context.MessageSource)
985 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilter.setPasswordAlreadyEncoded(Z)
985 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilter.setUserCache(org.springframework.security.providers.dao.UserCache)
985 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilter.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
985 - Declaração do método: org.springframework.security.ui.digestauth.NonceExpiredException.NonceExpiredException(java.lang.String)
985 - Declaração do método: org.springframework.security.ui.digestauth.NonceExpiredException.NonceExpiredException(java.lang.String, java.lang.Throwable)
985 - Declaração do método: org.springframework.security.ui.logout.LogoutHandler.logout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
985 - Declaração do método: org.springframework.security.ui.logout.SecurityContextLogoutHandler.logout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
javax.servlet.http.HttpServletRequest.getSession(Z)
javax.servlet.http.HttpSession.invalidate()
org.springframework.security.context.SecurityContextHolder.clearContext()
986 - Declaração do método: org.springframework.security.ui.logout.SecurityContextLogoutHandler.isInvalidateHttpSession()
986 - Declaração do método: org.springframework.security.ui.logout.SecurityContextLogoutHandler.setInvalidateHttpSession(Z)
986 - Declaração do método: org.springframework.security.ui.logout.LogoutFilter.LogoutFilter(java.lang.String, [Lorg.springframework.security.ui.logout.LogoutHandler;)
Métodos invocados: 
org.springframework.util.Assert.notEmpty([Ljava.lang.Object;, java.lang.String)
987 - Declaração do método: org.springframework.security.ui.logout.LogoutFilter.doFilterHttp(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.ui.logout.LogoutFilter.requiresLogout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.logout.LogoutHandler.logout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
org.springframework.security.ui.logout.LogoutFilter.determineTargetUrl(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.ui.logout.LogoutFilter.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
988 - Declaração do método: org.springframework.security.ui.logout.LogoutFilter.requiresLogout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getRequestURI()
java.lang.String.indexOf(I)
java.lang.String.substring(I, I)
java.lang.String.indexOf(I)
java.lang.String.substring(I, I)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.equals(java.lang.Object)
java.lang.String.endsWith(java.lang.String)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.endsWith(java.lang.String)
989 - Declaração do método: org.springframework.security.ui.logout.LogoutFilter.determineTargetUrl(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
javax.servlet.ServletRequest.getParameter(java.lang.String)
org.springframework.util.StringUtils.hasLength(java.lang.String)
org.springframework.util.StringUtils.hasLength(java.lang.String)
javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)
org.springframework.util.StringUtils.hasLength(java.lang.String)
990 - Declaração do método: org.springframework.security.ui.logout.LogoutFilter.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
Métodos invocados: 
org.springframework.security.util.RedirectUtils.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String, Z)
991 - Declaração do método: org.springframework.security.ui.logout.LogoutFilter.setFilterProcessesUrl(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
992 - Declaração do método: org.springframework.security.ui.logout.LogoutFilter.getFilterProcessesUrl()
992 - Declaração do método: org.springframework.security.ui.logout.LogoutFilter.setUseRelativeContext(Z)
992 - Declaração do método: org.springframework.security.ui.logout.LogoutFilter.getOrder()
992 - Declaração do método: org.springframework.security.ui.preauth.AbstractPreAuthenticatedProcessingFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
993 - Declaração do método: org.springframework.security.ui.preauth.AbstractPreAuthenticatedProcessingFilter.doFilterHttp(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.ui.preauth.AbstractPreAuthenticatedProcessingFilter.doAuthenticate(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
994 - Declaração do método: org.springframework.security.ui.preauth.AbstractPreAuthenticatedProcessingFilter.doAuthenticate(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.security.ui.preauth.AbstractPreAuthenticatedProcessingFilter.getPreAuthenticatedPrincipal(javax.servlet.http.HttpServletRequest)
org.springframework.security.ui.preauth.AbstractPreAuthenticatedProcessingFilter.getPreAuthenticatedCredentials(javax.servlet.http.HttpServletRequest)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
org.springframework.security.ui.preauth.AbstractPreAuthenticatedProcessingFilter.successfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
org.springframework.security.ui.preauth.AbstractPreAuthenticatedProcessingFilter.unsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
995 - Declaração do método: org.springframework.security.ui.preauth.AbstractPreAuthenticatedProcessingFilter.successfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
java.lang.Object.getClass()
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
996 - Declaração do método: org.springframework.security.ui.preauth.AbstractPreAuthenticatedProcessingFilter.unsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
997 - Declaração do método: org.springframework.security.ui.preauth.AbstractPreAuthenticatedProcessingFilter.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
997 - Declaração do método: org.springframework.security.ui.preauth.AbstractPreAuthenticatedProcessingFilter.setAuthenticationDetailsSource(org.springframework.security.ui.AuthenticationDetailsSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
998 - Declaração do método: org.springframework.security.ui.preauth.AbstractPreAuthenticatedProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
998 - Declaração do método: org.springframework.security.ui.preauth.AbstractPreAuthenticatedProcessingFilter.getPreAuthenticatedPrincipal(javax.servlet.http.HttpServletRequest)
998 - Declaração do método: org.springframework.security.ui.preauth.AbstractPreAuthenticatedProcessingFilter.getPreAuthenticatedCredentials(javax.servlet.http.HttpServletRequest)
998 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpServletResponse.sendError(I, java.lang.String)
999 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterEntryPoint.getOrder()
999 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterEntryPoint.setOrder(I)
999 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails(javax.servlet.http.HttpServletRequest)
999 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.getGrantedAuthorities()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
1000 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.setGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
1001 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.toString()
Métodos invocados: 
java.lang.StringBuffer.append(java.lang.String)
java.util.Arrays.asList([Lorg.springframework.security.GrantedAuthority;)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
1002 - Declaração do método: org.springframework.security.ui.preauth.j2ee.WebXmlMappableAttributesRetriever.WebXmlMappableAttributesRetriever()
1002 - Declaração do método: org.springframework.security.ui.preauth.j2ee.WebXmlMappableAttributesRetriever.setWebXmlInputStream(java.io.InputStream)
1002 - Declaração do método: org.springframework.security.ui.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.AbstractPreAuthenticatedAuthenticationDetailsSource()
1002 - Declaração do método: org.springframework.security.ui.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1003 - Declaração do método: org.springframework.security.ui.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.buildDetails(java.lang.Object)
Métodos invocados: 
org.springframework.security.ui.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.getUserRoles(java.lang.Object, [Ljava.lang.String;)
org.springframework.security.authoritymapping.Attributes2GrantedAuthoritiesMapper.getGrantedAuthorities([Ljava.lang.String;)
org.apache.commons.logging.Log.isDebugEnabled()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Arrays.asList([Lorg.springframework.security.GrantedAuthority;)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.MutableGrantedAuthoritiesContainer.setGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;)
1004 - Declaração do método: org.springframework.security.ui.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.getUserRoles(java.lang.Object, [Ljava.lang.String;)
1004 - Declaração do método: org.springframework.security.ui.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.setMappableRolesRetriever(org.springframework.security.authoritymapping.MappableAttributesRetriever)
Métodos invocados: 
org.springframework.security.authoritymapping.MappableAttributesRetriever.getMappableAttributes()
1005 - Declaração do método: org.springframework.security.ui.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.setUserRoles2GrantedAuthoritiesMapper(org.springframework.security.authoritymapping.Attributes2GrantedAuthoritiesMapper)
1005 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eePreAuthenticatedProcessingFilter.getPreAuthenticatedPrincipal(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getUserPrincipal()
javax.servlet.http.HttpServletRequest.getUserPrincipal()
java.security.Principal.getName()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1006 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eePreAuthenticatedProcessingFilter.getPreAuthenticatedCredentials(javax.servlet.http.HttpServletRequest)
1006 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eePreAuthenticatedProcessingFilter.getOrder()
1006 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSource.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSource()
1006 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSource.getUserRoles(java.lang.Object, [Ljava.lang.String;)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.isUserInRole(java.lang.String)
java.util.ArrayList.add(java.lang.Object)
java.util.ArrayList.size()
java.util.ArrayList.toArray([Ljava.lang.Object;)
1007 - Declaração do método: org.springframework.security.ui.preauth.x509.X509PrincipalExtractor.extractPrincipal(java.security.cert.X509Certificate)
1007 - Declaração do método: org.springframework.security.ui.preauth.x509.X509PreAuthenticatedProcessingFilter.getPreAuthenticatedPrincipal(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.ui.preauth.x509.X509PreAuthenticatedProcessingFilter.extractClientCertificate(javax.servlet.http.HttpServletRequest)
org.springframework.security.ui.preauth.x509.X509PrincipalExtractor.extractPrincipal(java.security.cert.X509Certificate)
1008 - Declaração do método: org.springframework.security.ui.preauth.x509.X509PreAuthenticatedProcessingFilter.getPreAuthenticatedCredentials(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.ui.preauth.x509.X509PreAuthenticatedProcessingFilter.extractClientCertificate(javax.servlet.http.HttpServletRequest)
1009 - Declaração do método: org.springframework.security.ui.preauth.x509.X509PreAuthenticatedProcessingFilter.extractClientCertificate(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getAttribute(java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1010 - Declaração do método: org.springframework.security.ui.preauth.x509.X509PreAuthenticatedProcessingFilter.setPrincipalExtractor(org.springframework.security.ui.preauth.x509.X509PrincipalExtractor)
1010 - Declaração do método: org.springframework.security.ui.preauth.x509.X509PreAuthenticatedProcessingFilter.getOrder()
1010 - Declaração do método: org.springframework.security.ui.preauth.x509.SubjectDnX509PrincipalExtractor.SubjectDnX509PrincipalExtractor()
Métodos invocados: 
org.springframework.security.ui.preauth.x509.SubjectDnX509PrincipalExtractor.setSubjectDnRegex(java.lang.String)
1011 - Declaração do método: org.springframework.security.ui.preauth.x509.SubjectDnX509PrincipalExtractor.extractPrincipal(java.security.cert.X509Certificate)
Métodos invocados: 
java.security.cert.X509Certificate.getSubjectDN()
java.security.Principal.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.util.regex.Matcher.find()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
java.util.regex.Matcher.groupCount()
java.util.regex.Matcher.group(I)
org.apache.commons.logging.Log.debug(java.lang.Object)
1012 - Declaração do método: org.springframework.security.ui.preauth.x509.SubjectDnX509PrincipalExtractor.setSubjectDnRegex(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
java.util.regex.Pattern.compile(java.lang.String, I)
1013 - Declaração do método: org.springframework.security.ui.preauth.x509.SubjectDnX509PrincipalExtractor.setMessageSource(org.springframework.context.MessageSource)
1013 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.String;)
java.lang.Long.longValue()
org.springframework.security.ui.rememberme.TokenBasedRememberMeServices.isTokenExpired(J)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.getUserDetailsService()
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.userdetails.UserDetails.getPassword()
org.springframework.security.ui.rememberme.TokenBasedRememberMeServices.makeTokenSignature(J, java.lang.String, java.lang.String)
java.lang.String.equals(java.lang.Object)
1014 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServices.makeTokenSignature(J, java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.getKey()
org.apache.commons.codec.digest.DigestUtils.md5Hex(java.lang.String)
1015 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServices.isTokenExpired(J)
Métodos invocados: 
java.lang.System.currentTimeMillis()
1016 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServices.onLoginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.ui.rememberme.TokenBasedRememberMeServices.retrieveUserName(org.springframework.security.Authentication)
org.springframework.security.ui.rememberme.TokenBasedRememberMeServices.retrievePassword(org.springframework.security.Authentication)
org.springframework.util.StringUtils.hasLength(java.lang.String)
org.springframework.util.StringUtils.hasLength(java.lang.String)
org.springframework.security.ui.rememberme.TokenBasedRememberMeServices.calculateLoginLifetime(javax.servlet.http.HttpServletRequest, org.springframework.security.Authentication)
java.lang.System.currentTimeMillis()
org.springframework.security.ui.rememberme.TokenBasedRememberMeServices.makeTokenSignature(J, java.lang.String, java.lang.String)
java.lang.Long.toString(J)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setCookie([Ljava.lang.String;, I, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1017 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServices.calculateLoginLifetime(javax.servlet.http.HttpServletRequest, org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.getTokenValiditySeconds()
1018 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServices.retrieveUserName(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.ui.rememberme.TokenBasedRememberMeServices.isInstanceOfUserDetails(org.springframework.security.Authentication)
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.toString()
1019 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServices.retrievePassword(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.ui.rememberme.TokenBasedRememberMeServices.isInstanceOfUserDetails(org.springframework.security.Authentication)
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.userdetails.UserDetails.getPassword()
org.springframework.security.Authentication.getCredentials()
java.lang.Object.toString()
1020 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServices.isInstanceOfUserDetails(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.Authentication.getPrincipal()
1021 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1022 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilter.doFilterHttp(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.ui.rememberme.RememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.onSuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
java.lang.Object.getClass()
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.springframework.security.ui.rememberme.RememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.onUnsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1023 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilter.onSuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
1023 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilter.onUnsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
1023 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilter.getRememberMeServices()
1023 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilter.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
1023 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
1023 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilter.setRememberMeServices(org.springframework.security.ui.rememberme.RememberMeServices)
1023 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilter.getOrder()
1023 - Declaração do método: org.springframework.security.ui.rememberme.InvalidCookieException.InvalidCookieException(java.lang.String)
1023 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.PersistentTokenBasedRememberMeServices()
Métodos invocados: 
java.security.SecureRandom.getInstance(java.lang.String)
1024 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.String;)
org.springframework.security.ui.rememberme.PersistentTokenRepository.getTokenForSeries(java.lang.String)
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getTokenValue()
java.lang.String.equals(java.lang.Object)
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getUsername()
org.springframework.security.ui.rememberme.PersistentTokenRepository.removeUserTokens(java.lang.String)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getDate()
java.util.Date.getTime()
org.springframework.security.ui.rememberme.AbstractRememberMeServices.getTokenValiditySeconds()
java.lang.System.currentTimeMillis()
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getUsername()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getSeries()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getUsername()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getSeries()
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.generateTokenData()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getSeries()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getTokenValue()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getDate()
org.springframework.security.ui.rememberme.PersistentTokenRepository.updateToken(java.lang.String, java.lang.String, java.util.Date)
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.addCookie(org.springframework.security.ui.rememberme.PersistentRememberMeToken, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.getUserDetailsService()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getUsername()
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
1025 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.onLoginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
Métodos invocados: 
java.security.Principal.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.generateSeriesData()
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.generateTokenData()
org.springframework.security.ui.rememberme.PersistentTokenRepository.createNewToken(org.springframework.security.ui.rememberme.PersistentRememberMeToken)
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.addCookie(org.springframework.security.ui.rememberme.PersistentRememberMeToken, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
1026 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.generateSeriesData()
Métodos invocados: 
java.security.SecureRandom.nextBytes([B)
org.apache.commons.codec.binary.Base64.encodeBase64([B)
1027 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.generateTokenData()
Métodos invocados: 
java.security.SecureRandom.nextBytes([B)
org.apache.commons.codec.binary.Base64.encodeBase64([B)
1028 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.addCookie(org.springframework.security.ui.rememberme.PersistentRememberMeToken, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getSeries()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getTokenValue()
org.springframework.security.ui.rememberme.AbstractRememberMeServices.getTokenValiditySeconds()
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setCookie([Ljava.lang.String;, I, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1029 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.setTokenRepository(org.springframework.security.ui.rememberme.PersistentTokenRepository)
1029 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.setSeriesLength(I)
1029 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.setTokenLength(I)
1029 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeAuthenticationException.RememberMeAuthenticationException(java.lang.String)
1029 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1029 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1029 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
1029 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String)
org.springframework.util.Assert.hasLength(java.lang.String)
org.springframework.util.Assert.hasLength(java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object)
1030 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.extractRememberMeCookie(javax.servlet.http.HttpServletRequest)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.decodeCookie(java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.userdetails.UserDetailsChecker.check(org.springframework.security.userdetails.UserDetails)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.cancelCookie(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.cancelCookie(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.cancelCookie(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.core.NestedRuntimeException.getMessage()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.cancelCookie(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.core.NestedRuntimeException.getMessage()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.cancelCookie(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.core.NestedRuntimeException.getMessage()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.ui.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
1031 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.extractRememberMeCookie(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getCookies()
javax.servlet.http.Cookie.getName()
java.lang.String.equals(java.lang.Object)
javax.servlet.http.Cookie.getValue()
1032 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.decodeCookie(java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.decodeBase64([B)
org.springframework.util.StringUtils.delimitedListToStringArray(java.lang.String, java.lang.String)
1033 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.encodeCookie([Ljava.lang.String;)
Métodos invocados: 
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
java.lang.StringBuffer.length()
java.lang.StringBuffer.charAt(I)
java.lang.StringBuffer.length()
java.lang.StringBuffer.deleteCharAt(I)
java.lang.StringBuffer.toString()
1034 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.cancelCookie(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.onLoginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1035 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.onLoginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1035 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.rememberMeRequested(javax.servlet.http.HttpServletRequest, java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.onLoginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
1036 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.onLoginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
1036 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.rememberMeRequested(javax.servlet.http.HttpServletRequest, java.lang.String)
Métodos invocados: 
org.springframework.web.bind.ServletRequestUtils.getBooleanParameter(javax.servlet.ServletRequest, java.lang.String, Z)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1037 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1037 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.cancelCookie(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.Cookie.setMaxAge(I)
javax.servlet.http.HttpServletRequest.getContextPath()
org.springframework.util.StringUtils.hasLength(java.lang.String)
javax.servlet.http.HttpServletRequest.getContextPath()
javax.servlet.http.Cookie.setPath(java.lang.String)
javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
1038 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.setCookie([Ljava.lang.String;, I, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.encodeCookie([Ljava.lang.String;)
javax.servlet.http.Cookie.setMaxAge(I)
javax.servlet.http.HttpServletRequest.getContextPath()
org.springframework.util.StringUtils.hasLength(java.lang.String)
javax.servlet.http.HttpServletRequest.getContextPath()
javax.servlet.http.Cookie.setPath(java.lang.String)
javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
1039 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.logout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
java.security.Principal.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.cancelCookie(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1040 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.setCookieName(java.lang.String)
1040 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.setAlwaysRemember(Z)
1040 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.setParameter(java.lang.String)
1040 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.getParameter()
1040 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.getUserDetailsService()
1040 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
1040 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.setKey(java.lang.String)
1040 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.getKey()
1040 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.setTokenValiditySeconds(I)
1040 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.getTokenValiditySeconds()
1040 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServices.getAuthenticationDetailsSource()
1040 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImpl.initDao()
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
1041 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImpl.createNewToken(org.springframework.security.ui.rememberme.PersistentRememberMeToken)
Métodos invocados: 
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getUsername()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getSeries()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getTokenValue()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getDate()
org.springframework.jdbc.object.SqlUpdate.update([Ljava.lang.Object;)
1042 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImpl.updateToken(java.lang.String, java.lang.String, java.util.Date)
Métodos invocados: 
org.springframework.jdbc.object.SqlUpdate.update([Ljava.lang.Object;)
1043 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImpl.getTokenForSeries(java.lang.String)
Métodos invocados: 
org.springframework.jdbc.object.SqlQuery.findObject(java.lang.String)
org.apache.commons.logging.Log.error(java.lang.Object)
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
1044 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImpl.removeUserTokens(java.lang.String)
Métodos invocados: 
org.springframework.jdbc.object.SqlUpdate.update(java.lang.String)
1045 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImpl.setCreateTableOnStartup(Z)
1045 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImpl$TokensBySeriesMapping.TokensBySeriesMapping(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1046 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImpl$TokensBySeriesMapping.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getString(I)
java.sql.ResultSet.getString(I)
java.sql.ResultSet.getString(I)
java.sql.ResultSet.getTimestamp(I)
1047 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImpl$UpdateToken.UpdateToken(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.SqlUpdate.setMaxRowsAffected(I)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1048 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImpl$InsertToken.InsertToken(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1049 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImpl$RemoveUserTokens.RemoveUserTokens(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1050 - Declaração do método: org.springframework.security.ui.rememberme.InMemoryTokenRepositoryImpl.createNewToken(org.springframework.security.ui.rememberme.PersistentRememberMeToken)
Métodos invocados: 
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getSeries()
java.util.Map.get(java.lang.Object)
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getSeries()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getSeries()
java.util.Map.put(java.lang.Object, java.lang.Object)
1051 - Declaração do método: org.springframework.security.ui.rememberme.InMemoryTokenRepositoryImpl.updateToken(java.lang.String, java.lang.String, java.util.Date)
Métodos invocados: 
org.springframework.security.ui.rememberme.InMemoryTokenRepositoryImpl.getTokenForSeries(java.lang.String)
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getUsername()
java.util.Map.put(java.lang.Object, java.lang.Object)
1052 - Declaração do método: org.springframework.security.ui.rememberme.InMemoryTokenRepositoryImpl.getTokenForSeries(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
1053 - Declaração do método: org.springframework.security.ui.rememberme.InMemoryTokenRepositoryImpl.removeUserTokens(java.lang.String)
Métodos invocados: 
java.util.Map.keySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map.get(java.lang.Object)
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getUsername()
java.lang.String.equals(java.lang.Object)
java.util.Iterator.remove()
1054 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenRepository.createNewToken(org.springframework.security.ui.rememberme.PersistentRememberMeToken)
1054 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenRepository.updateToken(java.lang.String, java.lang.String, java.util.Date)
1054 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenRepository.getTokenForSeries(java.lang.String)
1054 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenRepository.removeUserTokens(java.lang.String)
1054 - Declaração do método: org.springframework.security.ui.rememberme.CookieTheftException.CookieTheftException(java.lang.String)
1054 - Declaração do método: org.springframework.security.ui.rememberme.PersistentRememberMeToken.PersistentRememberMeToken(java.lang.String, java.lang.String, java.lang.String, java.util.Date)
1054 - Declaração do método: org.springframework.security.ui.rememberme.PersistentRememberMeToken.getUsername()
1054 - Declaração do método: org.springframework.security.ui.rememberme.PersistentRememberMeToken.getSeries()
1054 - Declaração do método: org.springframework.security.ui.rememberme.PersistentRememberMeToken.getTokenValue()
1054 - Declaração do método: org.springframework.security.ui.rememberme.PersistentRememberMeToken.getDate()
1054 - Declaração do método: org.springframework.security.ui.rememberme.NullRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1054 - Declaração do método: org.springframework.security.ui.rememberme.NullRememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
1054 - Declaração do método: org.springframework.security.ui.rememberme.NullRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
1054 - Declaração do método: org.springframework.security.ui.savedrequest.FastHttpDateFormat.formatDate(J, java.text.DateFormat)
Métodos invocados: 
java.util.HashMap.get(java.lang.Object)
java.text.DateFormat.format(java.util.Date)
org.springframework.security.ui.savedrequest.FastHttpDateFormat.updateCache(java.util.HashMap, java.lang.Object, java.lang.Object)
java.text.DateFormat.format(java.util.Date)
org.springframework.security.ui.savedrequest.FastHttpDateFormat.updateCache(java.util.HashMap, java.lang.Object, java.lang.Object)
1055 - Declaração do método: org.springframework.security.ui.savedrequest.FastHttpDateFormat.getCurrentDate()
Métodos invocados: 
java.lang.System.currentTimeMillis()
java.text.DateFormat.format(java.util.Date)
1056 - Declaração do método: org.springframework.security.ui.savedrequest.FastHttpDateFormat.internalParseDate(java.lang.String, [Ljava.text.DateFormat;)
Métodos invocados: 
java.text.DateFormat.parse(java.lang.String)
java.util.Date.getTime()
1057 - Declaração do método: org.springframework.security.ui.savedrequest.FastHttpDateFormat.parseDate(java.lang.String, [Ljava.text.DateFormat;)
Métodos invocados: 
java.util.HashMap.get(java.lang.Object)
java.lang.Long.longValue()
org.springframework.security.ui.savedrequest.FastHttpDateFormat.internalParseDate(java.lang.String, [Ljava.text.DateFormat;)
org.springframework.security.ui.savedrequest.FastHttpDateFormat.updateCache(java.util.HashMap, java.lang.Object, java.lang.Object)
org.springframework.security.ui.savedrequest.FastHttpDateFormat.internalParseDate(java.lang.String, [Ljava.text.DateFormat;)
org.springframework.security.ui.savedrequest.FastHttpDateFormat.updateCache(java.util.HashMap, java.lang.Object, java.lang.Object)
java.lang.Long.longValue()
1058 - Declaração do método: org.springframework.security.ui.savedrequest.FastHttpDateFormat.updateCache(java.util.HashMap, java.lang.Object, java.lang.Object)
Métodos invocados: 
java.util.HashMap.size()
java.util.HashMap.clear()
java.util.HashMap.put(java.lang.Object, java.lang.Object)
1059 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookie.SavedCookie(java.lang.String, java.lang.String, java.lang.String, java.lang.String, I, java.lang.String, Z, I)
1059 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookie.SavedCookie(javax.servlet.http.Cookie)
Métodos invocados: 
javax.servlet.http.Cookie.getName()
javax.servlet.http.Cookie.getValue()
javax.servlet.http.Cookie.getComment()
javax.servlet.http.Cookie.getDomain()
javax.servlet.http.Cookie.getMaxAge()
javax.servlet.http.Cookie.getPath()
javax.servlet.http.Cookie.getSecure()
javax.servlet.http.Cookie.getVersion()
1060 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookie.getName()
1060 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookie.getValue()
1060 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookie.getComment()
1060 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookie.getDomain()
1060 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookie.getMaxAge()
1060 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookie.getPath()
1060 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookie.isSecure()
1060 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookie.getVersion()
1060 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookie.getCookie()
Métodos invocados: 
org.springframework.security.ui.savedrequest.SavedCookie.getName()
org.springframework.security.ui.savedrequest.SavedCookie.getValue()
org.springframework.security.ui.savedrequest.SavedCookie.getComment()
org.springframework.security.ui.savedrequest.SavedCookie.getComment()
javax.servlet.http.Cookie.setComment(java.lang.String)
org.springframework.security.ui.savedrequest.SavedCookie.getDomain()
org.springframework.security.ui.savedrequest.SavedCookie.getDomain()
javax.servlet.http.Cookie.setDomain(java.lang.String)
org.springframework.security.ui.savedrequest.SavedCookie.getPath()
org.springframework.security.ui.savedrequest.SavedCookie.getPath()
javax.servlet.http.Cookie.setPath(java.lang.String)
org.springframework.security.ui.savedrequest.SavedCookie.getVersion()
javax.servlet.http.Cookie.setVersion(I)
org.springframework.security.ui.savedrequest.SavedCookie.getMaxAge()
javax.servlet.http.Cookie.setMaxAge(I)
org.springframework.security.ui.savedrequest.SavedCookie.isSecure()
javax.servlet.http.Cookie.setSecure(Z)
1061 - Declaração do método: org.springframework.security.ui.savedrequest.Enumerator.Enumerator(java.util.Collection)
Métodos invocados: 
java.util.Collection.iterator()
1062 - Declaração do método: org.springframework.security.ui.savedrequest.Enumerator.Enumerator(java.util.Collection, Z)
Métodos invocados: 
java.util.Collection.iterator()
1063 - Declaração do método: org.springframework.security.ui.savedrequest.Enumerator.Enumerator(java.util.Iterator)
1063 - Declaração do método: org.springframework.security.ui.savedrequest.Enumerator.Enumerator(java.util.Iterator, Z)
Métodos invocados: 
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.List.add(java.lang.Object)
java.util.List.iterator()
1064 - Declaração do método: org.springframework.security.ui.savedrequest.Enumerator.Enumerator(java.util.Map)
Métodos invocados: 
java.util.Map.values()
java.util.Collection.iterator()
1065 - Declaração do método: org.springframework.security.ui.savedrequest.Enumerator.Enumerator(java.util.Map, Z)
Métodos invocados: 
java.util.Map.values()
java.util.Collection.iterator()
1066 - Declaração do método: org.springframework.security.ui.savedrequest.Enumerator.hasMoreElements()
Métodos invocados: 
java.util.Iterator.hasNext()
1067 - Declaração do método: org.springframework.security.ui.savedrequest.Enumerator.nextElement()
Métodos invocados: 
java.util.Iterator.next()
1068 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.SavedRequest(javax.servlet.http.HttpServletRequest, org.springframework.security.util.PortResolver)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
javax.servlet.http.HttpServletRequest.getCookies()
org.springframework.security.ui.savedrequest.SavedRequest.addCookie(javax.servlet.http.Cookie)
javax.servlet.http.HttpServletRequest.getHeaderNames()
java.util.Enumeration.hasMoreElements()
java.util.Enumeration.nextElement()
javax.servlet.http.HttpServletRequest.getHeaders(java.lang.String)
java.util.Enumeration.hasMoreElements()
java.util.Enumeration.nextElement()
org.springframework.security.ui.savedrequest.SavedRequest.addHeader(java.lang.String, java.lang.String)
javax.servlet.ServletRequest.getLocales()
java.util.Enumeration.hasMoreElements()
java.util.Enumeration.nextElement()
org.springframework.security.ui.savedrequest.SavedRequest.addLocale(java.util.Locale)
javax.servlet.ServletRequest.getParameterMap()
java.util.Map.keySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map.get(java.lang.Object)
org.springframework.security.ui.savedrequest.SavedRequest.addParameter(java.lang.String, [Ljava.lang.String;)
org.apache.commons.logging.Log.isWarnEnabled()
org.apache.commons.logging.Log.warn(java.lang.Object)
javax.servlet.http.HttpServletRequest.getMethod()
javax.servlet.http.HttpServletRequest.getPathInfo()
javax.servlet.http.HttpServletRequest.getQueryString()
javax.servlet.http.HttpServletRequest.getRequestURI()
org.springframework.security.util.PortResolver.getServerPort(javax.servlet.ServletRequest)
javax.servlet.http.HttpServletRequest.getRequestURL()
java.lang.StringBuffer.toString()
javax.servlet.ServletRequest.getScheme()
javax.servlet.ServletRequest.getServerName()
javax.servlet.http.HttpServletRequest.getContextPath()
javax.servlet.http.HttpServletRequest.getServletPath()
1069 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.addCookie(javax.servlet.http.Cookie)
Métodos invocados: 
java.util.ArrayList.add(java.lang.Object)
1070 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.addHeader(java.lang.String, java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.ArrayList.add(java.lang.Object)
1071 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.addLocale(java.util.Locale)
Métodos invocados: 
java.util.ArrayList.add(java.lang.Object)
1072 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.addParameter(java.lang.String, [Ljava.lang.String;)
Métodos invocados: 
java.util.Map.put(java.lang.Object, java.lang.Object)
1073 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.doesRequestMatch(javax.servlet.http.HttpServletRequest, org.springframework.security.util.PortResolver)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
javax.servlet.http.HttpServletRequest.getPathInfo()
org.springframework.security.ui.savedrequest.SavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
javax.servlet.http.HttpServletRequest.getQueryString()
org.springframework.security.ui.savedrequest.SavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
javax.servlet.http.HttpServletRequest.getRequestURI()
org.springframework.security.ui.savedrequest.SavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
org.springframework.security.util.PortResolver.getServerPort(javax.servlet.ServletRequest)
org.springframework.security.ui.savedrequest.SavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
javax.servlet.http.HttpServletRequest.getRequestURL()
java.lang.StringBuffer.toString()
org.springframework.security.ui.savedrequest.SavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
javax.servlet.ServletRequest.getScheme()
org.springframework.security.ui.savedrequest.SavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
javax.servlet.ServletRequest.getServerName()
org.springframework.security.ui.savedrequest.SavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
javax.servlet.http.HttpServletRequest.getContextPath()
org.springframework.security.ui.savedrequest.SavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
javax.servlet.http.HttpServletRequest.getServletPath()
org.springframework.security.ui.savedrequest.SavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
1074 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.getContextPath()
1074 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.getCookies()
Métodos invocados: 
java.util.ArrayList.size()
java.util.AbstractList.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.ui.savedrequest.SavedCookie.getCookie()
java.util.List.add(java.lang.Object)
1075 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.getFullRequestUrl()
Métodos invocados: 
org.springframework.security.util.UrlUtils.getFullRequestUrl(org.springframework.security.ui.savedrequest.SavedRequest)
1076 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.getHeaderNames()
Métodos invocados: 
java.util.Map.keySet()
java.util.Set.iterator()
1077 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.getHeaderValues(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
java.util.AbstractList.iterator()
java.util.AbstractList.iterator()
1078 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.getLocales()
Métodos invocados: 
java.util.AbstractList.iterator()
1079 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.getMethod()
1079 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.getParameterMap()
1079 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.getParameterNames()
Métodos invocados: 
java.util.Map.keySet()
java.util.Set.iterator()
1080 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.getParameterValues(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
1081 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.getPathInfo()
1081 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.getQueryString()
1081 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.getRequestURI()
1081 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.getRequestURL()
1081 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.getRequestUrl()
Métodos invocados: 
org.springframework.security.util.UrlUtils.getRequestUrl(org.springframework.security.ui.savedrequest.SavedRequest)
1082 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.getScheme()
1082 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.getServerName()
1082 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.getServerPort()
1082 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.getServletPath()
1082 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.propertyEquals(java.lang.String, java.lang.Object, java.lang.Object)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1083 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequest.toString()
Métodos invocados: 
org.springframework.security.ui.savedrequest.SavedRequest.getFullRequestUrl()
1084 - Declaração do método: org.springframework.security.ui.session.HttpSessionCreatedEvent.HttpSessionCreatedEvent(javax.servlet.http.HttpSession)
1084 - Declaração do método: org.springframework.security.ui.session.HttpSessionEventPublisher.getContext(javax.servlet.ServletContext)
Métodos invocados: 
org.springframework.web.context.support.WebApplicationContextUtils.getWebApplicationContext(javax.servlet.ServletContext)
1085 - Declaração do método: org.springframework.security.ui.session.HttpSessionEventPublisher.sessionCreated(javax.servlet.http.HttpSessionEvent)
Métodos invocados: 
javax.servlet.http.HttpSessionEvent.getSession()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpSessionEvent.getSession()
javax.servlet.http.HttpSession.getServletContext()
org.springframework.security.ui.session.HttpSessionEventPublisher.getContext(javax.servlet.ServletContext)
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
1086 - Declaração do método: org.springframework.security.ui.session.HttpSessionEventPublisher.sessionDestroyed(javax.servlet.http.HttpSessionEvent)
Métodos invocados: 
javax.servlet.http.HttpSessionEvent.getSession()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpSessionEvent.getSession()
javax.servlet.http.HttpSession.getServletContext()
org.springframework.security.ui.session.HttpSessionEventPublisher.getContext(javax.servlet.ServletContext)
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
1087 - Declaração do método: org.springframework.security.ui.session.HttpSessionDestroyedEvent.HttpSessionDestroyedEvent(javax.servlet.http.HttpSession)
1087 - Declaração do método: org.springframework.security.ui.session.HttpSessionApplicationEvent.HttpSessionApplicationEvent(javax.servlet.http.HttpSession)
1087 - Declaração do método: org.springframework.security.ui.session.HttpSessionApplicationEvent.getSession()
Métodos invocados: 
java.util.EventObject.getSource()
1088 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserAuthorityChanger.modifyGrantedAuthorities(org.springframework.security.userdetails.UserDetails, org.springframework.security.Authentication, java.util.List)
1088 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserGrantedAuthority.SwitchUserGrantedAuthority(java.lang.String, org.springframework.security.Authentication)
1088 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserGrantedAuthority.getSource()
1088 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1089 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.attemptExitUser(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.getSourceAuthentication(org.springframework.security.Authentication)
org.apache.commons.logging.Log.error(java.lang.Object)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.Authentication.getPrincipal()
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
1090 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.attemptSwitchUser(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getParameter(java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetailsChecker.check(org.springframework.security.userdetails.UserDetails)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.createSwitchUserToken(javax.servlet.http.HttpServletRequest, org.springframework.security.userdetails.UserDetails)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
1091 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.createSwitchUserToken(javax.servlet.http.HttpServletRequest, org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.userdetails.UserDetails.getAuthorities()
java.util.Arrays.asList([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.ui.switchuser.SwitchUserAuthorityChanger.modifyGrantedAuthorities(org.springframework.security.userdetails.UserDetails, org.springframework.security.Authentication, java.util.List)
java.util.List.add(java.lang.Object)
java.util.List.size()
java.util.List.toArray([Ljava.lang.Object;)
org.springframework.security.userdetails.UserDetails.getPassword()
org.springframework.security.ui.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
1092 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.doFilterHttp(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.requiresSwitchUser(javax.servlet.http.HttpServletRequest)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.attemptSwitchUser(javax.servlet.http.HttpServletRequest)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.redirectToFailureUrl(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.requiresExitUser(javax.servlet.http.HttpServletRequest)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.attemptExitUser(javax.servlet.http.HttpServletRequest)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1093 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.redirectToFailureUrl(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
javax.servlet.http.HttpServletRequest.getContextPath()
javax.servlet.http.HttpServletResponse.encodeRedirectURL(java.lang.String)
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
javax.servlet.ServletResponse.getWriter()
org.springframework.core.NestedRuntimeException.getMessage()
java.io.PrintWriter.print(java.lang.String)
javax.servlet.ServletResponse.flushBuffer()
1094 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
Métodos invocados: 
org.springframework.security.util.RedirectUtils.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String, Z)
1095 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.getSourceAuthentication(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.ui.switchuser.SwitchUserGrantedAuthority.getSource()
org.apache.commons.logging.Log.debug(java.lang.Object)
1096 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.requiresExitUser(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.stripUri(javax.servlet.http.HttpServletRequest)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.endsWith(java.lang.String)
1097 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.requiresSwitchUser(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.stripUri(javax.servlet.http.HttpServletRequest)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.endsWith(java.lang.String)
1098 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
1098 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setAuthenticationDetailsSource(org.springframework.security.ui.AuthenticationDetailsSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1099 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setExitUserUrl(java.lang.String)
1099 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setMessageSource(org.springframework.context.MessageSource)
1099 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setSwitchUserUrl(java.lang.String)
1099 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setTargetUrl(java.lang.String)
1099 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
1099 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setUseRelativeContext(Z)
1099 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setSwitchFailureUrl(java.lang.String)
1099 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.stripUri(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getRequestURI()
java.lang.String.indexOf(I)
java.lang.String.substring(I, I)
1100 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setSwitchUserAuthorityChanger(org.springframework.security.ui.switchuser.SwitchUserAuthorityChanger)
1100 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.getOrder()
1100 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.SiteminderAuthenticationProcessingFilter()
1100 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
java.lang.String.length()
java.lang.String.length()
javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)
javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)
java.lang.String.length()
java.lang.String.length()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.String.length()
javax.servlet.ServletRequest.getParameter(java.lang.String)
javax.servlet.ServletRequest.getParameter(java.lang.String)
org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.obtainPassword(javax.servlet.http.HttpServletRequest)
java.lang.String.toUpperCase()
java.lang.String.toUpperCase()
org.springframework.security.ui.webapp.AuthenticationProcessingFilter.setDetails(javax.servlet.http.HttpServletRequest, org.springframework.security.providers.UsernamePasswordAuthenticationToken)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.ui.AbstractProcessingFilter.getAuthenticationManager()
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
1101 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.getFormPasswordParameterKey()
1101 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.getFormUsernameParameterKey()
1101 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.getSiteminderPasswordHeaderKey()
1101 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.getSiteminderUsernameHeaderKey()
1101 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.obtainPassword(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
java.lang.String.length()
javax.servlet.ServletRequest.getParameter(java.lang.String)
javax.servlet.ServletRequest.getParameter(java.lang.String)
1102 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.requiresAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getRequestURI()
java.lang.String.indexOf(I)
java.lang.String.substring(I, I)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
javax.servlet.http.HttpServletRequest.getContextPath()
org.springframework.security.ui.AbstractProcessingFilter.getFilterProcessesUrl()
java.lang.String.endsWith(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.getDefaultTargetUrl()
org.springframework.security.ui.AbstractProcessingFilter.getDefaultTargetUrl()
java.lang.String.endsWith(java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1103 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.setFormPasswordParameterKey(java.lang.String)
1103 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.setFormUsernameParameterKey(java.lang.String)
1103 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.setSiteminderPasswordHeaderKey(java.lang.String)
1103 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.setSiteminderUsernameHeaderKey(java.lang.String)
1103 - Declaração do método: org.springframework.security.ui.webapp.DefaultLoginPageGeneratingFilter.DefaultLoginPageGeneratingFilter(org.springframework.security.ui.AbstractProcessingFilter)
Métodos invocados: 
org.springframework.security.ui.webapp.DefaultLoginPageGeneratingFilter.init(org.springframework.security.ui.webapp.AuthenticationProcessingFilter, org.springframework.security.ui.AbstractProcessingFilter)
org.springframework.security.ui.webapp.DefaultLoginPageGeneratingFilter.init(org.springframework.security.ui.webapp.AuthenticationProcessingFilter, org.springframework.security.ui.AbstractProcessingFilter)
1104 - Declaração do método: org.springframework.security.ui.webapp.DefaultLoginPageGeneratingFilter.DefaultLoginPageGeneratingFilter(org.springframework.security.ui.webapp.AuthenticationProcessingFilter, org.springframework.security.ui.AbstractProcessingFilter)
Métodos invocados: 
org.springframework.security.ui.webapp.DefaultLoginPageGeneratingFilter.init(org.springframework.security.ui.webapp.AuthenticationProcessingFilter, org.springframework.security.ui.AbstractProcessingFilter)
1105 - Declaração do método: org.springframework.security.ui.webapp.DefaultLoginPageGeneratingFilter.init(org.springframework.security.ui.webapp.AuthenticationProcessingFilter, org.springframework.security.ui.AbstractProcessingFilter)
Métodos invocados: 
org.springframework.security.ui.webapp.AuthenticationProcessingFilter.getDefaultFilterProcessesUrl()
org.springframework.security.ui.webapp.AuthenticationProcessingFilter.getUsernameParameter()
org.springframework.security.ui.webapp.AuthenticationProcessingFilter.getPasswordParameter()
org.springframework.security.ui.AbstractProcessingFilter.getRememberMeServices()
org.springframework.security.ui.AbstractProcessingFilter.getRememberMeServices()
org.springframework.security.ui.rememberme.AbstractRememberMeServices.getParameter()
org.springframework.security.ui.AbstractProcessingFilter.getDefaultFilterProcessesUrl()
org.springframework.beans.BeanWrapperImpl.getPropertyValue(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.getRememberMeServices()
org.springframework.security.ui.AbstractProcessingFilter.getRememberMeServices()
org.springframework.security.ui.rememberme.AbstractRememberMeServices.getParameter()
1106 - Declaração do método: org.springframework.security.ui.webapp.DefaultLoginPageGeneratingFilter.doFilterHttp(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.ui.webapp.DefaultLoginPageGeneratingFilter.isLoginUrlRequest(javax.servlet.http.HttpServletRequest)
javax.servlet.ServletResponse.getOutputStream()
org.springframework.security.ui.webapp.DefaultLoginPageGeneratingFilter.generateLoginPageHtml(javax.servlet.http.HttpServletRequest)
javax.servlet.ServletOutputStream.print(java.lang.String)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1107 - Declaração do método: org.springframework.security.ui.webapp.DefaultLoginPageGeneratingFilter.generateLoginPageHtml(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getParameter(java.lang.String)
javax.servlet.http.HttpServletRequest.getSession(Z)
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.springframework.core.NestedRuntimeException.getMessage()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
1108 - Declaração do método: org.springframework.security.ui.webapp.DefaultLoginPageGeneratingFilter.getOrder()
1108 - Declaração do método: org.springframework.security.ui.webapp.DefaultLoginPageGeneratingFilter.isLoginUrlRequest(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getRequestURI()
java.lang.String.indexOf(I)
java.lang.String.substring(I, I)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.equals(java.lang.Object)
java.lang.String.endsWith(java.lang.String)
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.endsWith(java.lang.String)
1109 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.ui.webapp.AuthenticationProcessingFilter.obtainUsername(javax.servlet.http.HttpServletRequest)
org.springframework.security.ui.webapp.AuthenticationProcessingFilter.obtainPassword(javax.servlet.http.HttpServletRequest)
java.lang.String.trim()
javax.servlet.http.HttpServletRequest.getSession(Z)
org.springframework.security.ui.AbstractProcessingFilter.getAllowSessionCreation()
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.ui.webapp.AuthenticationProcessingFilter.setDetails(javax.servlet.http.HttpServletRequest, org.springframework.security.providers.UsernamePasswordAuthenticationToken)
org.springframework.security.ui.AbstractProcessingFilter.getAuthenticationManager()
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
1110 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilter.getDefaultFilterProcessesUrl()
1110 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilter.obtainPassword(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getParameter(java.lang.String)
1111 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilter.obtainUsername(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getParameter(java.lang.String)
1112 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilter.setDetails(javax.servlet.http.HttpServletRequest, org.springframework.security.providers.UsernamePasswordAuthenticationToken)
Métodos invocados: 
org.springframework.security.ui.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
1113 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilter.setUsernameParameter(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
1114 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilter.setPasswordParameter(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
1115 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilter.getOrder()
1115 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilter.getUsernameParameter()
1115 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilter.getPasswordParameter()
1115 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1116 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.determineUrlToUseForThisRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
Métodos invocados: 
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.getLoginFormUrl()
1117 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
Métodos invocados: 
javax.servlet.ServletRequest.getScheme()
java.lang.String.equals(java.lang.Object)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.buildHttpsRedirectUrlForRequest(javax.servlet.http.HttpServletRequest)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.determineUrlToUseForThisRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.ServletRequest.getRequestDispatcher(java.lang.String)
javax.servlet.RequestDispatcher.forward(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.buildRedirectUrlToLoginPage(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
javax.servlet.http.HttpServletResponse.encodeRedirectURL(java.lang.String)
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
1118 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.buildRedirectUrlToLoginPage(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
Métodos invocados: 
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.determineUrlToUseForThisRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
org.springframework.security.util.PortResolver.getServerPort(javax.servlet.ServletRequest)
javax.servlet.ServletRequest.getScheme()
org.springframework.security.util.RedirectUrlBuilder.setScheme(java.lang.String)
javax.servlet.ServletRequest.getServerName()
org.springframework.security.util.RedirectUrlBuilder.setServerName(java.lang.String)
org.springframework.security.util.RedirectUrlBuilder.setPort(I)
javax.servlet.http.HttpServletRequest.getContextPath()
org.springframework.security.util.RedirectUrlBuilder.setContextPath(java.lang.String)
org.springframework.security.util.RedirectUrlBuilder.setPathInfo(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.security.util.PortMapper.lookupHttpsPort(java.lang.Integer)
org.springframework.security.util.RedirectUrlBuilder.setScheme(java.lang.String)
java.lang.Integer.intValue()
org.springframework.security.util.RedirectUrlBuilder.setPort(I)
org.apache.commons.logging.Log.warn(java.lang.Object)
org.springframework.security.util.RedirectUrlBuilder.getUrl()
1119 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.buildHttpsRedirectUrlForRequest(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.util.PortResolver.getServerPort(javax.servlet.ServletRequest)
org.springframework.security.util.PortMapper.lookupHttpsPort(java.lang.Integer)
org.springframework.security.util.RedirectUrlBuilder.setScheme(java.lang.String)
javax.servlet.ServletRequest.getServerName()
org.springframework.security.util.RedirectUrlBuilder.setServerName(java.lang.String)
java.lang.Integer.intValue()
org.springframework.security.util.RedirectUrlBuilder.setPort(I)
javax.servlet.http.HttpServletRequest.getContextPath()
org.springframework.security.util.RedirectUrlBuilder.setContextPath(java.lang.String)
javax.servlet.http.HttpServletRequest.getServletPath()
org.springframework.security.util.RedirectUrlBuilder.setServletPath(java.lang.String)
javax.servlet.http.HttpServletRequest.getPathInfo()
org.springframework.security.util.RedirectUrlBuilder.setPathInfo(java.lang.String)
javax.servlet.http.HttpServletRequest.getQueryString()
org.springframework.security.util.RedirectUrlBuilder.setQuery(java.lang.String)
org.springframework.security.util.RedirectUrlBuilder.getUrl()
org.apache.commons.logging.Log.warn(java.lang.Object)
1120 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setForceHttps(Z)
1120 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.isForceHttps()
1120 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setLoginFormUrl(java.lang.String)
1120 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.getLoginFormUrl()
1120 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
1120 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.getPortMapper()
1120 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
1120 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.getPortResolver()
1120 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setServerSideRedirect(Z)
1120 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.isServerSideRedirect()
1120 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpServletResponse.sendError(I, java.lang.String)
1121 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1122 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilter.destroy()
1122 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.ui.x509.X509ProcessingFilter.extractClientCertificate(javax.servlet.http.HttpServletRequest)
org.springframework.security.ui.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
org.springframework.security.ui.x509.X509ProcessingFilter.successfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
org.springframework.security.ui.x509.X509ProcessingFilter.unsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1123 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilter.extractClientCertificate(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getAttribute(java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1124 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilter.init(javax.servlet.FilterConfig)
1124 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilter.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
1124 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilter.setAuthenticationDetailsSource(org.springframework.security.ui.AuthenticationDetailsSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1125 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
1125 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilter.successfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
java.lang.Object.getClass()
org.springframework.context.ApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
1126 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilter.unsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
1127 - Declaração do método: org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
1127 - Declaração do método: org.springframework.security.userdetails.GroupManager.findAllGroups()
1127 - Declaração do método: org.springframework.security.userdetails.GroupManager.findUsersInGroup(java.lang.String)
1127 - Declaração do método: org.springframework.security.userdetails.GroupManager.createGroup(java.lang.String, [Lorg.springframework.security.GrantedAuthority;)
1127 - Declaração do método: org.springframework.security.userdetails.GroupManager.deleteGroup(java.lang.String)
1127 - Declaração do método: org.springframework.security.userdetails.GroupManager.renameGroup(java.lang.String, java.lang.String)
1127 - Declaração do método: org.springframework.security.userdetails.GroupManager.addUserToGroup(java.lang.String, java.lang.String)
1127 - Declaração do método: org.springframework.security.userdetails.GroupManager.removeUserFromGroup(java.lang.String, java.lang.String)
1127 - Declaração do método: org.springframework.security.userdetails.GroupManager.findGroupAuthorities(java.lang.String)
1127 - Declaração do método: org.springframework.security.userdetails.GroupManager.addGroupAuthority(java.lang.String, org.springframework.security.GrantedAuthority)
1127 - Declaração do método: org.springframework.security.userdetails.GroupManager.removeGroupAuthority(java.lang.String, org.springframework.security.GrantedAuthority)
1127 - Declaração do método: org.springframework.security.userdetails.UserDetailsManager.createUser(org.springframework.security.userdetails.UserDetails)
1127 - Declaração do método: org.springframework.security.userdetails.UserDetailsManager.updateUser(org.springframework.security.userdetails.UserDetails)
1127 - Declaração do método: org.springframework.security.userdetails.UserDetailsManager.deleteUser(java.lang.String)
1127 - Declaração do método: org.springframework.security.userdetails.UserDetailsManager.changePassword(java.lang.String, java.lang.String)
1127 - Declaração do método: org.springframework.security.userdetails.UserDetailsManager.userExists(java.lang.String)
1127 - Declaração do método: org.springframework.security.userdetails.UserDetails.getAuthorities()
1127 - Declaração do método: org.springframework.security.userdetails.UserDetails.getPassword()
1127 - Declaração do método: org.springframework.security.userdetails.UserDetails.getUsername()
1127 - Declaração do método: org.springframework.security.userdetails.UserDetails.isAccountNonExpired()
1127 - Declaração do método: org.springframework.security.userdetails.UserDetails.isAccountNonLocked()
1127 - Declaração do método: org.springframework.security.userdetails.UserDetails.isCredentialsNonExpired()
1127 - Declaração do método: org.springframework.security.userdetails.UserDetails.isEnabled()
1127 - Declaração do método: org.springframework.security.userdetails.UsernameNotFoundException.UsernameNotFoundException(java.lang.String)
1127 - Declaração do método: org.springframework.security.userdetails.UsernameNotFoundException.UsernameNotFoundException(java.lang.String, java.lang.Object)
1127 - Declaração do método: org.springframework.security.userdetails.UsernameNotFoundException.UsernameNotFoundException(java.lang.String, java.lang.Throwable)
1127 - Declaração do método: org.springframework.security.userdetails.UserDetailsChecker.check(org.springframework.security.userdetails.UserDetails)
1127 - Declaração do método: org.springframework.security.userdetails.User.User(java.lang.String, java.lang.String, Z, [Lorg.springframework.security.GrantedAuthority;)
1127 - Declaração do método: org.springframework.security.userdetails.User.User(java.lang.String, java.lang.String, Z, Z, Z, [Lorg.springframework.security.GrantedAuthority;)
1127 - Declaração do método: org.springframework.security.userdetails.User.User(java.lang.String, java.lang.String, Z, Z, Z, Z, [Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
org.springframework.security.userdetails.User.setAuthorities([Lorg.springframework.security.GrantedAuthority;)
1128 - Declaração do método: org.springframework.security.userdetails.User.equals(java.lang.Object)
Métodos invocados: 
org.springframework.security.userdetails.User.getAuthorities()
org.springframework.security.userdetails.User.getAuthorities()
org.springframework.security.userdetails.User.getAuthorities()
org.springframework.security.userdetails.User.getAuthorities()
org.springframework.security.userdetails.User.getAuthorities()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.userdetails.User.getPassword()
org.springframework.security.userdetails.User.getPassword()
java.lang.String.equals(java.lang.Object)
org.springframework.security.userdetails.User.getUsername()
org.springframework.security.userdetails.User.getUsername()
java.lang.String.equals(java.lang.Object)
org.springframework.security.userdetails.User.isAccountNonExpired()
org.springframework.security.userdetails.User.isAccountNonExpired()
org.springframework.security.userdetails.User.isAccountNonLocked()
org.springframework.security.userdetails.User.isAccountNonLocked()
org.springframework.security.userdetails.User.isCredentialsNonExpired()
org.springframework.security.userdetails.User.isCredentialsNonExpired()
org.springframework.security.userdetails.User.isEnabled()
org.springframework.security.userdetails.User.isEnabled()
1129 - Declaração do método: org.springframework.security.userdetails.User.getAuthorities()
1129 - Declaração do método: org.springframework.security.userdetails.User.getPassword()
1129 - Declaração do método: org.springframework.security.userdetails.User.getUsername()
1129 - Declaração do método: org.springframework.security.userdetails.User.hashCode()
Métodos invocados: 
org.springframework.security.userdetails.User.getAuthorities()
org.springframework.security.userdetails.User.getAuthorities()
org.springframework.security.userdetails.User.getAuthorities()
java.lang.Object.hashCode()
org.springframework.security.userdetails.User.getPassword()
org.springframework.security.userdetails.User.getPassword()
java.lang.String.hashCode()
org.springframework.security.userdetails.User.getUsername()
org.springframework.security.userdetails.User.getUsername()
java.lang.String.hashCode()
org.springframework.security.userdetails.User.isAccountNonExpired()
org.springframework.security.userdetails.User.isAccountNonLocked()
org.springframework.security.userdetails.User.isCredentialsNonExpired()
org.springframework.security.userdetails.User.isEnabled()
1130 - Declaração do método: org.springframework.security.userdetails.User.isAccountNonExpired()
1130 - Declaração do método: org.springframework.security.userdetails.User.isAccountNonLocked()
1130 - Declaração do método: org.springframework.security.userdetails.User.isCredentialsNonExpired()
1130 - Declaração do método: org.springframework.security.userdetails.User.isEnabled()
1130 - Declaração do método: org.springframework.security.userdetails.User.setAuthorities([Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.Set.add(java.lang.Object)
java.util.Set.size()
java.util.Set.toArray([Ljava.lang.Object;)
1131 - Declaração do método: org.springframework.security.userdetails.User.toString()
Métodos invocados: 
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(Z)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(Z)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(Z)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(Z)
java.lang.StringBuffer.append(java.lang.String)
org.springframework.security.userdetails.User.getAuthorities()
java.lang.StringBuffer.append(java.lang.String)
org.springframework.security.userdetails.User.getAuthorities()
java.lang.StringBuffer.append(java.lang.String)
org.springframework.security.userdetails.User.getAuthorities()
java.lang.Object.toString()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
1132 - Declaração do método: org.springframework.security.userdetails.checker.AccountStatusUserDetailsChecker.check(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.isAccountNonLocked()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.userdetails.UserDetails.isEnabled()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.userdetails.UserDetails.isAccountNonExpired()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.userdetails.UserDetails.isCredentialsNonExpired()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
1133 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.buildRolesReachableInOneStepMap()
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.buildRolesReachableInOneOrMoreStepsMap()
1134 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
java.util.Set.add(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Set.addAll(java.util.Collection)
org.apache.commons.logging.Log.isDebugEnabled()
java.util.Arrays.asList([Lorg.springframework.security.GrantedAuthority;)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Set.size()
java.util.Set.toArray([Ljava.lang.Object;)
1135 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.buildRolesReachableInOneStepMap()
Métodos invocados: 
java.util.regex.Pattern.compile(java.lang.String)
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.util.regex.Matcher.find()
java.util.regex.Matcher.group(I)
java.util.regex.Matcher.group(I)
java.util.Map.containsKey(java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Set.add(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
1136 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.buildRolesReachableInOneOrMoreStepsMap()
Métodos invocados: 
java.util.Map.keySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map.containsKey(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Set.addAll(java.util.Collection)
java.util.Set.isEmpty()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Set.remove(java.lang.Object)
java.util.Set.add(java.lang.Object)
java.util.Map.containsKey(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Set.contains(java.lang.Object)
java.util.Set.contains(java.lang.Object)
java.util.Set.addAll(java.util.Collection)
java.util.Map.put(java.lang.Object, java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
1137 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.UserDetailsWrapper(org.springframework.security.userdetails.UserDetails, org.springframework.security.userdetails.hierarchicalroles.RoleHierarchy)
1137 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.isAccountNonExpired()
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.isAccountNonExpired()
1138 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.isAccountNonLocked()
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.isAccountNonLocked()
1139 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.getAuthorities()
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchy.getReachableGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;)
1140 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.isCredentialsNonExpired()
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.isCredentialsNonExpired()
1141 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.isEnabled()
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.isEnabled()
1142 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.getPassword()
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.getPassword()
1143 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.getUsername()
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.getUsername()
1144 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.getUnwrappedUserDetails()
1144 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.RoleHierarchy.getReachableGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;)
1144 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsServiceWrapper.setRoleHierarchy(org.springframework.security.userdetails.hierarchicalroles.RoleHierarchy)
1144 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsServiceWrapper.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
1144 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsServiceWrapper.loadUserByUsername(java.lang.String)
Métodos invocados: 
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
1145 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsServiceWrapper.getWrappedUserDetailsService()
1145 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.CycleInRoleHierarchyException.CycleInRoleHierarchyException()
1145 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.initDao()
Métodos invocados: 
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
1146 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.createUser(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.validateUserDetails(org.springframework.security.userdetails.UserDetails)
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.userdetails.UserDetails.getPassword()
org.springframework.security.userdetails.UserDetails.isEnabled()
java.lang.Boolean.valueOf(Z)
org.springframework.jdbc.object.SqlUpdate.update([Ljava.lang.Object;)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.insertUserAuthorities(org.springframework.security.userdetails.UserDetails)
1147 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.updateUser(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.validateUserDetails(org.springframework.security.userdetails.UserDetails)
org.springframework.security.userdetails.UserDetails.getPassword()
org.springframework.security.userdetails.UserDetails.isEnabled()
java.lang.Boolean.valueOf(Z)
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.jdbc.object.SqlUpdate.update([Ljava.lang.Object;)
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.jdbc.object.SqlUpdate.update(java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.insertUserAuthorities(org.springframework.security.userdetails.UserDetails)
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.providers.dao.UserCache.removeUserFromCache(java.lang.String)
1148 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.insertUserAuthorities(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
org.springframework.jdbc.object.SqlUpdate.update(java.lang.String, java.lang.String)
1149 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.deleteUser(java.lang.String)
Métodos invocados: 
org.springframework.jdbc.object.SqlUpdate.update(java.lang.String)
org.springframework.jdbc.object.SqlUpdate.update(java.lang.String)
org.springframework.security.providers.dao.UserCache.removeUserFromCache(java.lang.String)
1150 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.changePassword(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
java.security.Principal.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.jdbc.object.SqlUpdate.update([Ljava.lang.Object;)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.createNewAuthentication(org.springframework.security.Authentication, java.lang.String)
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.providers.dao.UserCache.removeUserFromCache(java.lang.String)
1151 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.createNewAuthentication(org.springframework.security.Authentication, java.lang.String)
Métodos invocados: 
java.security.Principal.getName()
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.Authentication.getDetails()
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
1152 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.userExists(java.lang.String)
Métodos invocados: 
org.springframework.jdbc.object.SqlQuery.execute(java.lang.String)
java.util.List.size()
java.util.List.size()
1153 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.findAllGroups()
Métodos invocados: 
org.springframework.jdbc.object.SqlQuery.execute()
java.util.List.toArray([Ljava.lang.Object;)
1154 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.findUsersInGroup(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.jdbc.object.SqlQuery.execute(java.lang.String)
java.util.List.toArray([Ljava.lang.Object;)
1155 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.createGroup(java.lang.String, [Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object)
org.springframework.security.util.AuthorityUtils.authorityArrayToSet([Lorg.springframework.security.GrantedAuthority;)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.jdbc.object.SqlUpdate.update(java.lang.String)
org.springframework.jdbc.object.SqlQuery.findObject(java.lang.String)
org.springframework.security.GrantedAuthority.getAuthority()
org.springframework.jdbc.object.SqlUpdate.update([Ljava.lang.Object;)
1156 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.deleteGroup(java.lang.String)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.jdbc.object.SqlQuery.findObject(java.lang.String)
java.lang.Integer.intValue()
org.springframework.jdbc.object.SqlUpdate.update(I)
org.springframework.jdbc.object.SqlUpdate.update(I)
org.springframework.jdbc.object.SqlUpdate.update(I)
1157 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.renameGroup(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.jdbc.object.SqlUpdate.update(java.lang.String, java.lang.String)
1158 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.addUserToGroup(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.jdbc.object.SqlQuery.findObject(java.lang.String)
org.springframework.jdbc.object.SqlUpdate.update([Ljava.lang.Object;)
org.springframework.security.providers.dao.UserCache.removeUserFromCache(java.lang.String)
1159 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.removeUserFromGroup(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.jdbc.object.SqlQuery.findObject(java.lang.String)
org.springframework.jdbc.object.SqlUpdate.update([Ljava.lang.Object;)
org.springframework.security.providers.dao.UserCache.removeUserFromCache(java.lang.String)
1160 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.findGroupAuthorities(java.lang.String)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.jdbc.object.SqlQuery.execute(java.lang.String)
java.util.List.toArray([Ljava.lang.Object;)
1161 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.removeGroupAuthority(java.lang.String, org.springframework.security.GrantedAuthority)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object)
org.springframework.jdbc.object.SqlQuery.findObject(java.lang.String)
org.springframework.jdbc.object.SqlUpdate.update([Ljava.lang.Object;)
1162 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.addGroupAuthority(java.lang.String, org.springframework.security.GrantedAuthority)
Métodos invocados: 
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.Assert.hasText(java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object)
org.springframework.jdbc.object.SqlQuery.findObject(java.lang.String)
org.springframework.security.GrantedAuthority.getAuthority()
org.springframework.jdbc.object.SqlUpdate.update([Ljava.lang.Object;)
1163 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setAuthenticationManager(org.springframework.security.AuthenticationManager)
1163 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setCreateUserSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
1164 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setDeleteUserSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
1165 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setUpdateUserSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
1166 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setCreateAuthoritySql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
1167 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setDeleteUserAuthoritiesSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
1168 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setUserExistsSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
1169 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setChangePasswordSql(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
1170 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setFindAllGroupsSql(java.lang.String)
1170 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setUserCache(org.springframework.security.providers.dao.UserCache)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1171 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.validateUserDetails(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.validateAuthorities([Lorg.springframework.security.GrantedAuthority;)
1172 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.validateAuthorities([Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.GrantedAuthority.getAuthority()
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
1173 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$InsertUser.InsertUser(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1174 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$DeleteUser.DeleteUser(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1175 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$InsertAuthority.InsertAuthority(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1176 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$DeleteUserAuthorities.DeleteUserAuthorities(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1177 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$UpdateUser.UpdateUser(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1178 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$ChangePassword.ChangePassword(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1179 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$UserExistsQuery.UserExistsQuery(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1180 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$UserExistsQuery.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getString(I)
1181 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$AllGroupsQuery.AllGroupsQuery(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.compile()
1182 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$AllGroupsQuery.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getString(I)
1183 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$GroupMembersQuery.GroupMembersQuery(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1184 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$GroupMembersQuery.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getString(I)
1185 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$InsertGroup.InsertGroup(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1186 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$FindGroupIdQuery.FindGroupIdQuery(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1187 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$FindGroupIdQuery.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getInt(I)
1188 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$InsertGroupAuthority.InsertGroupAuthority(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1189 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$DeleteGroup.DeleteGroup(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1190 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$DeleteGroupMembers.DeleteGroupMembers(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1191 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$DeleteGroupAuthorities.DeleteGroupAuthorities(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1192 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$RenameGroup.RenameGroup(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1193 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$InsertGroupMember.InsertGroupMember(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1194 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$DeleteGroupMember.DeleteGroupMember(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1195 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$GroupAuthoritiesByGroupNameMapping.GroupAuthoritiesByGroupNameMapping(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1196 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$GroupAuthoritiesByGroupNameMapping.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.getRolePrefix()
java.sql.ResultSet.getString(I)
1197 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager$DeleteGroupAuthority.DeleteGroupAuthority(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1198 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl.JdbcDaoImpl()
1198 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl.addCustomAuthorities(java.lang.String, java.util.List)
1198 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl.getUsersByUsernameQuery()
1198 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl.initDao()
Métodos invocados: 
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.initMappingSqlQueries()
1199 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl.initMappingSqlQueries()
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
1200 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
Métodos invocados: 
org.springframework.jdbc.object.SqlQuery.execute(java.lang.String)
java.util.List.size()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
java.util.List.get(I)
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.jdbc.object.SqlQuery.execute(java.lang.String)
java.util.Set.addAll(java.util.Collection)
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.jdbc.object.SqlQuery.execute(java.lang.String)
java.util.Set.addAll(java.util.Collection)
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.addCustomAuthorities(java.lang.String, java.util.List)
java.util.List.size()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
java.util.List.size()
java.util.List.toArray([Ljava.lang.Object;)
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.userdetails.UserDetails.getPassword()
org.springframework.security.userdetails.UserDetails.isEnabled()
1201 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl.setAuthoritiesByUsernameQuery(java.lang.String)
1201 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl.getAuthoritiesByUsernameQuery()
1201 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl.setGroupAuthoritiesByUsernameQuery(java.lang.String)
1201 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl.setRolePrefix(java.lang.String)
1201 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl.getRolePrefix()
1201 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl.setUsernameBasedPrimaryKey(Z)
1201 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl.isUsernameBasedPrimaryKey()
1201 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl.setUsersByUsernameQuery(java.lang.String)
1201 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl.getEnableAuthorities()
1201 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl.setEnableAuthorities(Z)
1201 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl.getEnableGroups()
1201 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl.setEnableGroups(Z)
1201 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl$AuthoritiesByUsernameMapping.AuthoritiesByUsernameMapping(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1202 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl$AuthoritiesByUsernameMapping.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getString(I)
1203 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl$GroupAuthoritiesByUsernameMapping.GroupAuthoritiesByUsernameMapping(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1204 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl$GroupAuthoritiesByUsernameMapping.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getString(I)
1205 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl$UsersByUsernameMapping.UsersByUsernameMapping(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
1206 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImpl$UsersByUsernameMapping.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getString(I)
java.sql.ResultSet.getString(I)
java.sql.ResultSet.getBoolean(I)
1207 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsService.LdapUserDetailsService(org.springframework.security.ldap.LdapUserSearch, org.springframework.security.ldap.LdapAuthoritiesPopulator)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1208 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsService.loadUserByUsername(java.lang.String)
Métodos invocados: 
org.springframework.security.ldap.LdapUserSearch.searchForUser(java.lang.String)
org.springframework.security.ldap.LdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
org.springframework.security.userdetails.ldap.UserDetailsContextMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, [Lorg.springframework.security.GrantedAuthority;)
1209 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsService.setUserDetailsMapper(org.springframework.security.userdetails.ldap.UserDetailsContextMapper)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1210 - Declaração do método: org.springframework.security.userdetails.ldap.Person.Person()
1210 - Declaração do método: org.springframework.security.userdetails.ldap.Person.getSn()
1210 - Declaração do método: org.springframework.security.userdetails.ldap.Person.getCn()
Métodos invocados: 
java.util.List.size()
java.util.List.toArray([Ljava.lang.Object;)
1211 - Declaração do método: org.springframework.security.userdetails.ldap.Person.populateContext(org.springframework.ldap.core.DirContextAdapter)
Métodos invocados: 
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.security.userdetails.ldap.Person.getCn()
org.springframework.ldap.core.DirContextAdapter.setAttributeValues(java.lang.String, [Ljava.lang.Object;)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getPassword()
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getPassword()
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValues(java.lang.String, [Ljava.lang.Object;)
1212 - Declaração do método: org.springframework.security.userdetails.ldap.Person$Essence.Essence()
1212 - Declaração do método: org.springframework.security.userdetails.ldap.Person$Essence.Essence(org.springframework.ldap.core.DirContextOperations)
Métodos invocados: 
org.springframework.ldap.core.DirContextOperations.getStringAttributes(java.lang.String)
org.springframework.security.userdetails.ldap.Person$Essence.setCn([Ljava.lang.String;)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.userdetails.ldap.Person$Essence.setSn(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getObjectAttribute(java.lang.String)
org.springframework.security.ldap.LdapUtils.convertPasswordToString(java.lang.Object)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setPassword(java.lang.String)
1213 - Declaração do método: org.springframework.security.userdetails.ldap.Person$Essence.Essence(org.springframework.security.userdetails.ldap.Person)
Métodos invocados: 
org.springframework.security.userdetails.ldap.Person$Essence.setSn(java.lang.String)
1214 - Declaração do método: org.springframework.security.userdetails.ldap.Person$Essence.createTarget()
1214 - Declaração do método: org.springframework.security.userdetails.ldap.Person$Essence.setSn(java.lang.String)
1214 - Declaração do método: org.springframework.security.userdetails.ldap.Person$Essence.setCn([Ljava.lang.String;)
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.String;)
1215 - Declaração do método: org.springframework.security.userdetails.ldap.Person$Essence.addCn(java.lang.String)
Métodos invocados: 
java.util.List.add(java.lang.Object)
1216 - Declaração do método: org.springframework.security.userdetails.ldap.Person$Essence.createUserDetails()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object)
org.springframework.util.Assert.notEmpty(java.util.Collection)
1217 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, [Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
org.springframework.ldap.core.DirContextOperations.getNameInNamespace()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setDn(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getObjectAttribute(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.mapPassword(java.lang.Object)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setPassword(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setUsername(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttributes(java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.createAuthority(java.lang.Object)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.addAuthority(org.springframework.security.GrantedAuthority)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.addAuthority(org.springframework.security.GrantedAuthority)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.createUserDetails()
1218 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.mapUserToContext(org.springframework.security.userdetails.UserDetails, org.springframework.ldap.core.DirContextAdapter)
1218 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.mapPassword(java.lang.Object)
1218 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.createAuthority(java.lang.Object)
Métodos invocados: 
java.lang.String.toUpperCase()
1219 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.setConvertToUpperCase(Z)
1219 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.setPasswordAttributeName(java.lang.String)
1219 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.setRoleAttributes([Ljava.lang.String;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1220 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.setRolePrefix(java.lang.String)
1220 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager$1.mapFromAttributes(javax.naming.directory.Attributes)
Métodos invocados: 
javax.naming.directory.Attributes.get(java.lang.String)
javax.naming.directory.Attribute.getAll()
javax.naming.NamingEnumeration.next()
java.lang.Object.toString()
java.lang.String.toUpperCase()
1221 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.LdapUserDetailsManager(org.springframework.ldap.core.ContextSource)
1221 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.loadUserByUsername(java.lang.String)
Métodos invocados: 
org.springframework.security.ldap.LdapUsernameToDnMapper.buildDn(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.getUserAuthorities(org.springframework.ldap.core.DistinguishedName, java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.loadUserAsContext(org.springframework.ldap.core.DistinguishedName, java.lang.String)
org.springframework.security.userdetails.ldap.UserDetailsContextMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, [Lorg.springframework.security.GrantedAuthority;)
1222 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.loadUserAsContext(org.springframework.ldap.core.DistinguishedName, java.lang.String)
Métodos invocados: 
org.springframework.ldap.core.LdapTemplate.executeReadOnly(org.springframework.ldap.core.ContextExecutor)
javax.naming.directory.DirContext.getAttributes(javax.naming.Name, [Ljava.lang.String;)
org.springframework.security.ldap.LdapUtils.getFullDn(org.springframework.ldap.core.DistinguishedName, javax.naming.Context)
1223 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager$2.executeWithContext(javax.naming.directory.DirContext)
Métodos invocados: 
javax.naming.directory.DirContext.getAttributes(javax.naming.Name, [Ljava.lang.String;)
org.springframework.security.ldap.LdapUtils.getFullDn(org.springframework.ldap.core.DistinguishedName, javax.naming.Context)
1224 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.changePassword(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.security.Principal.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ldap.LdapUsernameToDnMapper.buildDn(java.lang.String)
org.springframework.ldap.core.LdapTemplate.modifyAttributes(javax.naming.Name, [Ljavax.naming.directory.ModificationItem;)
org.springframework.ldap.core.LdapTemplate.executeReadWrite(org.springframework.ldap.core.ContextExecutor)
javax.naming.Context.removeFromEnvironment(java.lang.String)
org.springframework.security.ldap.LdapUtils.getFullDn(org.springframework.ldap.core.DistinguishedName, javax.naming.Context)
org.springframework.ldap.core.DistinguishedName.toUrl()
javax.naming.Context.addToEnvironment(java.lang.String, java.lang.Object)
javax.naming.Context.addToEnvironment(java.lang.String, java.lang.Object)
javax.naming.ldap.LdapContext.reconnect([Ljavax.naming.ldap.Control;)
javax.naming.directory.DirContext.modifyAttributes(javax.naming.Name, [Ljavax.naming.directory.ModificationItem;)
1225 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager$3.executeWithContext(javax.naming.directory.DirContext)
Métodos invocados: 
javax.naming.Context.removeFromEnvironment(java.lang.String)
org.springframework.security.ldap.LdapUtils.getFullDn(org.springframework.ldap.core.DistinguishedName, javax.naming.Context)
org.springframework.ldap.core.DistinguishedName.toUrl()
javax.naming.Context.addToEnvironment(java.lang.String, java.lang.Object)
javax.naming.Context.addToEnvironment(java.lang.String, java.lang.Object)
javax.naming.ldap.LdapContext.reconnect([Ljavax.naming.ldap.Control;)
javax.naming.directory.DirContext.modifyAttributes(javax.naming.Name, [Ljavax.naming.directory.ModificationItem;)
1226 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.getUserAuthorities(org.springframework.ldap.core.DistinguishedName, java.lang.String)
Métodos invocados: 
org.springframework.security.ldap.LdapUtils.getFullDn(org.springframework.ldap.core.DistinguishedName, javax.naming.Context)
javax.naming.directory.SearchControls.setReturningAttributes([Ljava.lang.String;)
org.springframework.ldap.core.DistinguishedName.toUrl()
javax.naming.directory.DirContext.search(javax.naming.Name, java.lang.String, [Ljava.lang.Object;, javax.naming.directory.SearchControls)
org.springframework.ldap.core.LdapTemplate.search(org.springframework.ldap.core.SearchExecutor, org.springframework.ldap.core.NameClassPairCallbackHandler)
org.springframework.ldap.core.CollectingNameClassPairCallbackHandler.getList()
java.util.List.size()
java.util.List.toArray([Ljava.lang.Object;)
1227 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager$4.executeSearch(javax.naming.directory.DirContext)
Métodos invocados: 
org.springframework.security.ldap.LdapUtils.getFullDn(org.springframework.ldap.core.DistinguishedName, javax.naming.Context)
javax.naming.directory.SearchControls.setReturningAttributes([Ljava.lang.String;)
org.springframework.ldap.core.DistinguishedName.toUrl()
javax.naming.directory.DirContext.search(javax.naming.Name, java.lang.String, [Ljava.lang.Object;, javax.naming.directory.SearchControls)
1228 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.createUser(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.copyToContext(org.springframework.security.userdetails.UserDetails, org.springframework.ldap.core.DirContextAdapter)
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.ldap.LdapUsernameToDnMapper.buildDn(java.lang.String)
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.getUserAuthorities(org.springframework.ldap.core.DistinguishedName, java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.removeAuthorities(org.springframework.ldap.core.DistinguishedName, [Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.UserDetails.getUsername()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.ldap.core.LdapTemplate.bind(javax.naming.Name, java.lang.Object, javax.naming.directory.Attributes)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.addAuthorities(org.springframework.ldap.core.DistinguishedName, [Lorg.springframework.security.GrantedAuthority;)
1229 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.updateUser(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.ldap.LdapUsernameToDnMapper.buildDn(java.lang.String)
org.springframework.security.userdetails.UserDetails.getUsername()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.getUserAuthorities(org.springframework.ldap.core.DistinguishedName, java.lang.String)
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.loadUserAsContext(org.springframework.ldap.core.DistinguishedName, java.lang.String)
org.springframework.ldap.core.DirContextAdapter.setUpdateMode(Z)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.copyToContext(org.springframework.security.userdetails.UserDetails, org.springframework.ldap.core.DirContextAdapter)
org.springframework.ldap.core.DirContextAdapter.getModificationItems()
java.util.Arrays.asList([Ljavax.naming.directory.ModificationItem;)
java.util.List.listIterator()
java.util.ListIterator.hasNext()
java.util.ListIterator.next()
javax.naming.directory.ModificationItem.getAttribute()
javax.naming.directory.Attribute.getID()
java.lang.String.equalsIgnoreCase(java.lang.String)
java.util.ListIterator.remove()
java.util.List.size()
java.util.List.toArray([Ljava.lang.Object;)
org.springframework.ldap.core.LdapTemplate.modifyAttributes(javax.naming.Name, [Ljavax.naming.directory.ModificationItem;)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.removeAuthorities(org.springframework.ldap.core.DistinguishedName, [Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.addAuthorities(org.springframework.ldap.core.DistinguishedName, [Lorg.springframework.security.GrantedAuthority;)
1230 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.deleteUser(java.lang.String)
Métodos invocados: 
org.springframework.security.ldap.LdapUsernameToDnMapper.buildDn(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.getUserAuthorities(org.springframework.ldap.core.DistinguishedName, java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.removeAuthorities(org.springframework.ldap.core.DistinguishedName, [Lorg.springframework.security.GrantedAuthority;)
org.springframework.ldap.core.LdapTemplate.unbind(javax.naming.Name)
1231 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.userExists(java.lang.String)
Métodos invocados: 
org.springframework.security.ldap.LdapUsernameToDnMapper.buildDn(java.lang.String)
org.springframework.ldap.core.LdapTemplate.lookup(javax.naming.Name)
org.springframework.security.ldap.LdapUtils.closeContext(javax.naming.Context)
1232 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.buildGroupDn(java.lang.String)
Métodos invocados: 
java.lang.String.toLowerCase()
org.springframework.ldap.core.DistinguishedName.add(java.lang.String, java.lang.String)
1233 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.copyToContext(org.springframework.security.userdetails.UserDetails, org.springframework.ldap.core.DirContextAdapter)
Métodos invocados: 
org.springframework.security.userdetails.ldap.UserDetailsContextMapper.mapUserToContext(org.springframework.security.userdetails.UserDetails, org.springframework.ldap.core.DirContextAdapter)
1234 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.addAuthorities(org.springframework.ldap.core.DistinguishedName, [Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.modifyAuthorities(org.springframework.ldap.core.DistinguishedName, [Lorg.springframework.security.GrantedAuthority;, I)
1235 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.removeAuthorities(org.springframework.ldap.core.DistinguishedName, [Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.modifyAuthorities(org.springframework.ldap.core.DistinguishedName, [Lorg.springframework.security.GrantedAuthority;, I)
1236 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.modifyAuthorities(org.springframework.ldap.core.DistinguishedName, [Lorg.springframework.security.GrantedAuthority;, I)
Métodos invocados: 
org.springframework.ldap.core.LdapTemplate.executeReadWrite(org.springframework.ldap.core.ContextExecutor)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.convertAuthorityToGroup(org.springframework.security.GrantedAuthority)
org.springframework.security.ldap.LdapUtils.getFullDn(org.springframework.ldap.core.DistinguishedName, javax.naming.Context)
org.springframework.ldap.core.DistinguishedName.toUrl()
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.buildGroupDn(java.lang.String)
javax.naming.directory.DirContext.modifyAttributes(javax.naming.Name, [Ljavax.naming.directory.ModificationItem;)
1237 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager$5.executeWithContext(javax.naming.directory.DirContext)
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.convertAuthorityToGroup(org.springframework.security.GrantedAuthority)
org.springframework.security.ldap.LdapUtils.getFullDn(org.springframework.ldap.core.DistinguishedName, javax.naming.Context)
org.springframework.ldap.core.DistinguishedName.toUrl()
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.buildGroupDn(java.lang.String)
javax.naming.directory.DirContext.modifyAttributes(javax.naming.Name, [Ljavax.naming.directory.ModificationItem;)
1238 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.convertAuthorityToGroup(org.springframework.security.GrantedAuthority)
Métodos invocados: 
org.springframework.security.GrantedAuthority.getAuthority()
java.lang.String.startsWith(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I)
1239 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.setUsernameMapper(org.springframework.security.ldap.LdapUsernameToDnMapper)
1239 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.setPasswordAttributeName(java.lang.String)
1239 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.setGroupSearchBase(java.lang.String)
1239 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.setGroupRoleAttributeName(java.lang.String)
1239 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.setAttributesToRetrieve([Ljava.lang.String;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
1240 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.setUserDetailsMapper(org.springframework.security.userdetails.ldap.UserDetailsContextMapper)
1240 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.setGroupMemberAttributeName(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String)
1241 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManager.setRoleMapper(org.springframework.ldap.core.AttributesMapper)
1241 - Declaração do método: org.springframework.security.userdetails.ldap.UserDetailsContextMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, [Lorg.springframework.security.GrantedAuthority;)
1241 - Declaração do método: org.springframework.security.userdetails.ldap.UserDetailsContextMapper.mapUserToContext(org.springframework.security.userdetails.UserDetails, org.springframework.ldap.core.DirContextAdapter)
1241 - Declaração do método: org.springframework.security.userdetails.ldap.PersonContextMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, [Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setUsername(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setAuthorities([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.ldap.Person$Essence.createUserDetails()
1242 - Declaração do método: org.springframework.security.userdetails.ldap.PersonContextMapper.mapUserToContext(org.springframework.security.userdetails.UserDetails, org.springframework.ldap.core.DirContextAdapter)
Métodos invocados: 
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.userdetails.ldap.Person.populateContext(org.springframework.ldap.core.DirContextAdapter)
1243 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetails.getAttributes()
1243 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetails.getDn()
1243 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPersonContextMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, [Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setUsername(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setAuthorities([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.ldap.Person$Essence.createUserDetails()
1244 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPersonContextMapper.mapUserToContext(org.springframework.security.userdetails.UserDetails, org.springframework.ldap.core.DirContextAdapter)
Métodos invocados: 
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.userdetails.ldap.InetOrgPerson.populateContext(org.springframework.ldap.core.DirContextAdapter)
1245 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.LdapUserDetailsImpl()
1245 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getAttributes()
1245 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getAuthorities()
1245 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getDn()
1245 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getPassword()
1245 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getUsername()
1245 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.isAccountNonExpired()
1245 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.isAccountNonLocked()
1245 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.isCredentialsNonExpired()
1245 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.isEnabled()
1245 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.toString()
Métodos invocados: 
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(Z)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(Z)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(Z)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(Z)
java.lang.StringBuffer.append(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getAuthorities()
java.lang.StringBuffer.append(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getAuthorities()
java.lang.StringBuffer.append(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getAuthorities()
java.lang.Object.toString()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
1246 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.Essence()
1246 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.Essence(org.springframework.ldap.core.DirContextOperations)
Métodos invocados: 
org.springframework.ldap.core.DirContextOperations.getDn()
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setDn(javax.naming.Name)
1247 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.Essence(org.springframework.security.userdetails.ldap.LdapUserDetails)
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetails.getDn()
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setDn(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetails.getAttributes()
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setAttributes(javax.naming.directory.Attributes)
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setPassword(java.lang.String)
org.springframework.security.userdetails.UserDetails.isEnabled()
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setEnabled(Z)
org.springframework.security.userdetails.UserDetails.isAccountNonExpired()
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setAccountNonExpired(Z)
org.springframework.security.userdetails.UserDetails.isCredentialsNonExpired()
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setCredentialsNonExpired(Z)
org.springframework.security.userdetails.UserDetails.isAccountNonLocked()
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setAccountNonLocked(Z)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setAuthorities([Lorg.springframework.security.GrantedAuthority;)
1248 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.createTarget()
1248 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.addAuthority(org.springframework.security.GrantedAuthority)
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.hasAuthority(org.springframework.security.GrantedAuthority)
java.util.List.add(java.lang.Object)
1249 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.hasAuthority(org.springframework.security.GrantedAuthority)
Métodos invocados: 
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.Object.equals(java.lang.Object)
1250 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.createUserDetails()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getDn()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.getGrantedAuthorities()
1251 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.getGrantedAuthorities()
Métodos invocados: 
java.util.List.toArray([Ljava.lang.Object;)
1252 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setAccountNonExpired(Z)
1252 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setAccountNonLocked(Z)
1252 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setAttributes(javax.naming.directory.Attributes)
1252 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setAuthorities([Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
java.util.Arrays.asList([Lorg.springframework.security.GrantedAuthority;)
1253 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setCredentialsNonExpired(Z)
1253 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setDn(java.lang.String)
1253 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setDn(javax.naming.Name)
Métodos invocados: 
java.lang.Object.toString()
1254 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setEnabled(Z)
1254 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setPassword(java.lang.String)
1254 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setUsername(java.lang.String)
1254 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPerson.getMail()
1254 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPerson.getUid()
1254 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPerson.getEmployeeNumber()
1254 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPerson.getDestinationIndicator()
1254 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPerson.populateContext(org.springframework.ldap.core.DirContextAdapter)
Métodos invocados: 
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValues(java.lang.String, [Ljava.lang.Object;)
1255 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.Essence()
1255 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.Essence(org.springframework.security.userdetails.ldap.InetOrgPerson)
Métodos invocados: 
org.springframework.security.userdetails.ldap.InetOrgPerson.getMail()
org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.setMail(java.lang.String)
org.springframework.security.userdetails.ldap.InetOrgPerson.getUid()
org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.setUid(java.lang.String)
org.springframework.security.userdetails.ldap.InetOrgPerson.getDestinationIndicator()
org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.setDestinationIndicator(java.lang.String)
org.springframework.security.userdetails.ldap.InetOrgPerson.getEmployeeNumber()
org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.setEmployeeNumber(java.lang.String)
1256 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.Essence(org.springframework.ldap.core.DirContextOperations)
Métodos invocados: 
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.setMail(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.setUid(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.setEmployeeNumber(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.setDestinationIndicator(java.lang.String)
1257 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.createTarget()
1257 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.setMail(java.lang.String)
1257 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.setUid(java.lang.String)
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getUsername()
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setUsername(java.lang.String)
1258 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.setEmployeeNumber(java.lang.String)
1258 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.setDestinationIndicator(java.lang.String)
1258 - Declaração do método: org.springframework.security.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
Métodos invocados: 
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
java.lang.String.trim()
org.springframework.security.userdetails.memory.UserAttribute.setPassword(java.lang.String)
java.lang.String.toLowerCase()
java.lang.String.equals(java.lang.Object)
org.springframework.security.userdetails.memory.UserAttribute.setEnabled(Z)
java.lang.String.toLowerCase()
java.lang.String.equals(java.lang.Object)
org.springframework.security.userdetails.memory.UserAttribute.setEnabled(Z)
java.util.List.add(java.lang.Object)
org.springframework.security.userdetails.memory.UserAttribute.setAuthoritiesAsString(java.util.List)
org.springframework.security.userdetails.memory.UserAttribute.isValid()
java.beans.PropertyEditorSupport.setValue(java.lang.Object)
java.beans.PropertyEditorSupport.setValue(java.lang.Object)
java.beans.PropertyEditorSupport.setValue(java.lang.Object)
1259 - Declaração do método: org.springframework.security.userdetails.memory.UserAttribute.UserAttribute()
1259 - Declaração do método: org.springframework.security.userdetails.memory.UserAttribute.addAuthority(org.springframework.security.GrantedAuthority)
Métodos invocados: 
java.util.List.add(java.lang.Object)
1260 - Declaração do método: org.springframework.security.userdetails.memory.UserAttribute.getAuthorities()
Métodos invocados: 
java.util.List.toArray([Ljava.lang.Object;)
1261 - Declaração do método: org.springframework.security.userdetails.memory.UserAttribute.setAuthorities(java.util.List)
1261 - Declaração do método: org.springframework.security.userdetails.memory.UserAttribute.setAuthoritiesAsString(java.util.List)
Métodos invocados: 
java.util.List.size()
org.springframework.security.userdetails.memory.UserAttribute.setAuthorities(java.util.List)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.userdetails.memory.UserAttribute.addAuthority(org.springframework.security.GrantedAuthority)
1262 - Declaração do método: org.springframework.security.userdetails.memory.UserAttribute.getPassword()
1262 - Declaração do método: org.springframework.security.userdetails.memory.UserAttribute.isEnabled()
1262 - Declaração do método: org.springframework.security.userdetails.memory.UserAttribute.isValid()
Métodos invocados: 
java.util.List.size()
1263 - Declaração do método: org.springframework.security.userdetails.memory.UserAttribute.setEnabled(Z)
1263 - Declaração do método: org.springframework.security.userdetails.memory.UserAttribute.setPassword(java.lang.String)
1263 - Declaração do método: org.springframework.security.userdetails.memory.InMemoryDaoImpl.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1264 - Declaração do método: org.springframework.security.userdetails.memory.InMemoryDaoImpl.getUserMap()
1264 - Declaração do método: org.springframework.security.userdetails.memory.InMemoryDaoImpl.loadUserByUsername(java.lang.String)
Métodos invocados: 
org.springframework.security.userdetails.memory.UserMap.getUser(java.lang.String)
1265 - Declaração do método: org.springframework.security.userdetails.memory.InMemoryDaoImpl.setUserMap(org.springframework.security.userdetails.memory.UserMap)
1265 - Declaração do método: org.springframework.security.userdetails.memory.InMemoryDaoImpl.setUserProperties(java.util.Properties)
Métodos invocados: 
org.springframework.security.userdetails.memory.UserMapEditor.addUsersFromProperties(org.springframework.security.userdetails.memory.UserMap, java.util.Properties)
1266 - Declaração do método: org.springframework.security.userdetails.memory.UserMap.addUser(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.security.userdetails.UserDetails.getUsername()
java.lang.String.toLowerCase()
java.util.Map.put(java.lang.Object, java.lang.Object)
1267 - Declaração do método: org.springframework.security.userdetails.memory.UserMap.getUser(java.lang.String)
Métodos invocados: 
java.lang.String.toLowerCase()
java.util.Map.get(java.lang.Object)
1268 - Declaração do método: org.springframework.security.userdetails.memory.UserMap.getUserCount()
Métodos invocados: 
java.util.Map.size()
1269 - Declaração do método: org.springframework.security.userdetails.memory.UserMap.setUsers(java.util.Map)
1269 - Declaração do método: org.springframework.security.userdetails.memory.UserMapEditor.addUsersFromProperties(org.springframework.security.userdetails.memory.UserMap, java.util.Properties)
Métodos invocados: 
java.util.Hashtable.keySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Properties.getProperty(java.lang.String)
org.springframework.security.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.userdetails.memory.UserAttribute.getPassword()
org.springframework.security.userdetails.memory.UserAttribute.isEnabled()
org.springframework.security.userdetails.memory.UserAttribute.getAuthorities()
org.springframework.security.userdetails.memory.UserMap.addUser(org.springframework.security.userdetails.UserDetails)
1270 - Declaração do método: org.springframework.security.userdetails.memory.UserMapEditor.setAsText(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
org.springframework.beans.propertyeditors.PropertiesEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.userdetails.memory.UserMapEditor.addUsersFromProperties(org.springframework.security.userdetails.memory.UserMap, java.util.Properties)
java.beans.PropertyEditorSupport.setValue(java.lang.Object)
1271 - Declaração do método: org.springframework.security.util.FilterChainProxy.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.isNull(java.lang.Object, java.lang.String)
org.springframework.security.intercept.web.FIDSToFilterChainMapConverter.getFilterChainMap()
org.springframework.security.util.FilterChainProxy.setFilterChainMap(java.util.Map)
org.springframework.security.intercept.web.FIDSToFilterChainMapConverter.getMatcher()
org.springframework.security.util.FilterChainProxy.setMatcher(org.springframework.security.util.UrlMatcher)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1272 - Declaração do método: org.springframework.security.util.FilterChainProxy.init(javax.servlet.FilterConfig)
Métodos invocados: 
org.springframework.security.util.FilterChainProxy.obtainAllDefinedFilters()
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.Filter.init(javax.servlet.FilterConfig)
1273 - Declaração do método: org.springframework.security.util.FilterChainProxy.destroy()
Métodos invocados: 
org.springframework.security.util.FilterChainProxy.obtainAllDefinedFilters()
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.Filter.destroy()
1274 - Declaração do método: org.springframework.security.util.FilterChainProxy.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocation.getRequestUrl()
org.springframework.security.util.FilterChainProxy.getFilters(java.lang.String)
java.util.List.size()
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.intercept.web.FilterInvocation.getRequestUrl()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.security.intercept.web.FilterInvocation.getRequest()
org.springframework.security.intercept.web.FilterInvocation.getResponse()
org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1275 - Declaração do método: org.springframework.security.util.FilterChainProxy.getFilters(java.lang.String)
Métodos invocados: 
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
org.springframework.security.util.UrlMatcher.requiresLowerCaseUrl()
java.lang.String.toLowerCase()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.util.UrlMatcher.pathMatchesUrl(java.lang.Object, java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.Map$Entry.getValue()
1276 - Declaração do método: org.springframework.security.util.FilterChainProxy.obtainAllDefinedFilters()
Métodos invocados: 
java.util.Map.values()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Set.addAll(java.util.Collection)
java.util.ArrayList.toArray([Ljava.lang.Object;)
1277 - Declaração do método: org.springframework.security.util.FilterChainProxy.setApplicationContext(org.springframework.context.ApplicationContext)
1277 - Declaração do método: org.springframework.security.util.FilterChainProxy.setFilterInvocationDefinitionSource(org.springframework.security.intercept.web.FilterInvocationDefinitionSource)
Métodos invocados: 
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
1278 - Declaração do método: org.springframework.security.util.FilterChainProxy.setFilterChainMap(java.util.Map)
Métodos invocados: 
org.springframework.security.util.FilterChainProxy.checkPathOrder()
org.springframework.security.util.FilterChainProxy.createCompiledMap()
1279 - Declaração do método: org.springframework.security.util.FilterChainProxy.checkPathOrder()
Métodos invocados: 
java.util.Map.keySet()
java.util.Set.toArray([Ljava.lang.Object;)
org.springframework.security.util.UrlMatcher.getUniversalMatchPattern()
java.lang.String.equals(java.lang.Object)
1280 - Declaração do método: org.springframework.security.util.FilterChainProxy.createCompiledMap()
Métodos invocados: 
java.util.Map.keySet()
java.util.Set.iterator()
java.util.Map.size()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.security.util.UrlMatcher.compile(java.lang.String)
java.util.Map.get(java.lang.Object)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
java.util.Map.put(java.lang.Object, java.lang.Object)
1281 - Declaração do método: org.springframework.security.util.FilterChainProxy.getFilterChainMap()
1281 - Declaração do método: org.springframework.security.util.FilterChainProxy.setMatcher(org.springframework.security.util.UrlMatcher)
1281 - Declaração do método: org.springframework.security.util.FilterChainProxy.getMatcher()
1281 - Declaração do método: org.springframework.security.util.FilterChainProxy.toString()
Métodos invocados: 
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
1282 - Declaração do método: org.springframework.security.util.FilterChainProxy$VirtualFilterChain.VirtualFilterChain(org.springframework.security.intercept.web.FilterInvocation, java.util.List)
1282 - Declaração do método: org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
Métodos invocados: 
java.util.List.size()
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.intercept.web.FilterInvocation.getRequestUrl()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.intercept.web.FilterInvocation.getChain()
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
java.util.List.get(I)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.intercept.web.FilterInvocation.getRequestUrl()
java.util.List.size()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
1283 - Declaração do método: org.springframework.security.util.ThrowableAnalyzer$1.extractCause(java.lang.Throwable)
Métodos invocados: 
java.lang.Throwable.getCause()
1284 - Declaração do método: org.springframework.security.util.ThrowableAnalyzer$2.extractCause(java.lang.Throwable)
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.verifyThrowableHierarchy(java.lang.Throwable, java.lang.Class)
java.lang.reflect.InvocationTargetException.getTargetException()
1285 - Declaração do método: org.springframework.security.util.ThrowableAnalyzer$3.compare(java.lang.Object, java.lang.Object)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.getName()
java.lang.Class.getName()
java.lang.String.compareTo(java.lang.String)
1286 - Declaração do método: org.springframework.security.util.ThrowableAnalyzer.ThrowableAnalyzer()
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.initExtractorMap()
1287 - Declaração do método: org.springframework.security.util.ThrowableAnalyzer.registerExtractor(java.lang.Class, org.springframework.security.util.ThrowableCauseExtractor)
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.verifyThrowableType(java.lang.Class)
java.util.Map.put(java.lang.Object, java.lang.Object)
1288 - Declaração do método: org.springframework.security.util.ThrowableAnalyzer.initExtractorMap()
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.registerExtractor(java.lang.Class, org.springframework.security.util.ThrowableCauseExtractor)
org.springframework.security.util.ThrowableAnalyzer.registerExtractor(java.lang.Class, org.springframework.security.util.ThrowableCauseExtractor)
1289 - Declaração do método: org.springframework.security.util.ThrowableAnalyzer.getRegisteredTypes()
Métodos invocados: 
java.util.Map.keySet()
java.util.List.size()
java.util.List.toArray([Ljava.lang.Object;)
1290 - Declaração do método: org.springframework.security.util.ThrowableAnalyzer.determineCauseChain(java.lang.Throwable)
Métodos invocados: 
java.util.List.add(java.lang.Object)
org.springframework.security.util.ThrowableAnalyzer.extractCause(java.lang.Throwable)
java.util.List.size()
java.util.List.toArray([Ljava.lang.Object;)
1291 - Declaração do método: org.springframework.security.util.ThrowableAnalyzer.extractCause(java.lang.Throwable)
Métodos invocados: 
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.lang.Class.isInstance(java.lang.Object)
java.util.Map$Entry.getValue()
org.springframework.security.util.ThrowableCauseExtractor.extractCause(java.lang.Throwable)
1292 - Declaração do método: org.springframework.security.util.ThrowableAnalyzer.getFirstThrowableOfType(java.lang.Class, [Ljava.lang.Throwable;)
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.verifyThrowableType(java.lang.Class)
java.lang.Class.isInstance(java.lang.Object)
1293 - Declaração do método: org.springframework.security.util.ThrowableAnalyzer.verifyThrowableType(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.getName()
java.lang.Class.getName()
1294 - Declaração do método: org.springframework.security.util.ThrowableAnalyzer.verifyThrowableHierarchy(java.lang.Throwable, java.lang.Class)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.getName()
java.lang.Class.getName()
1295 - Declaração do método: org.springframework.security.util.PortMapper.lookupHttpPort(java.lang.Integer)
1295 - Declaração do método: org.springframework.security.util.PortMapper.lookupHttpsPort(java.lang.Integer)
1295 - Declaração do método: org.springframework.security.util.RedirectUrlBuilder.setScheme(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
1296 - Declaração do método: org.springframework.security.util.RedirectUrlBuilder.setServerName(java.lang.String)
1296 - Declaração do método: org.springframework.security.util.RedirectUrlBuilder.setPort(I)
1296 - Declaração do método: org.springframework.security.util.RedirectUrlBuilder.setContextPath(java.lang.String)
1296 - Declaração do método: org.springframework.security.util.RedirectUrlBuilder.setServletPath(java.lang.String)
1296 - Declaração do método: org.springframework.security.util.RedirectUrlBuilder.setPathInfo(java.lang.String)
1296 - Declaração do método: org.springframework.security.util.RedirectUrlBuilder.setQuery(java.lang.String)
1296 - Declaração do método: org.springframework.security.util.RedirectUrlBuilder.getUrl()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
org.springframework.util.Assert.notNull(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.String.equals(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
java.lang.Integer.toString(I)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
1297 - Declaração do método: org.springframework.security.util.InMemoryXmlApplicationContext.InMemoryXmlApplicationContext(java.lang.String)
1297 - Declaração do método: org.springframework.security.util.InMemoryXmlApplicationContext.InMemoryXmlApplicationContext(java.lang.String, Z)
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.refresh()
1298 - Declaração do método: org.springframework.security.util.InMemoryXmlApplicationContext.getConfigResources()
1298 - Declaração do método: org.springframework.security.util.FilterInvocationUtils.FilterInvocationUtils()
1298 - Declaração do método: org.springframework.security.util.FilterInvocationUtils.create(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
1299 - Declaração do método: org.springframework.security.util.FilterInvocationUtils$1.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1299 - Declaração do método: org.springframework.security.util.FilterInvocationUtils.create(java.lang.String)
Métodos invocados: 
org.springframework.security.util.FilterInvocationUtils.create(java.lang.String, java.lang.String)
1300 - Declaração do método: org.springframework.security.util.InMemoryResource.InMemoryResource(java.lang.String)
Métodos invocados: 
java.lang.String.getBytes()
1301 - Declaração do método: org.springframework.security.util.InMemoryResource.InMemoryResource([B)
1301 - Declaração do método: org.springframework.security.util.InMemoryResource.InMemoryResource([B, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
1302 - Declaração do método: org.springframework.security.util.InMemoryResource.getDescription()
1302 - Declaração do método: org.springframework.security.util.InMemoryResource.getInputStream()
1302 - Declaração do método: org.springframework.security.util.InMemoryResource.hashCode()
Métodos invocados: 
java.lang.Object.hashCode()
1303 - Declaração do método: org.springframework.security.util.InMemoryResource.equals(java.lang.Object)
Métodos invocados: 
java.util.Arrays.equals([B, [B)
1304 - Declaração do método: org.springframework.security.util.StringSplitUtils.StringSplitUtils()
1304 - Declaração do método: org.springframework.security.util.StringSplitUtils.split(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
java.lang.String.length()
java.lang.String.indexOf(java.lang.String)
java.lang.String.substring(I, I)
java.lang.String.substring(I)
1305 - Declaração do método: org.springframework.security.util.StringSplitUtils.splitEachArrayElementAndCreateMap([Ljava.lang.String;, java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.util.StringUtils.replace(java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.util.StringSplitUtils.split(java.lang.String, java.lang.String)
java.lang.String.trim()
java.lang.String.trim()
java.util.Map.put(java.lang.Object, java.lang.Object)
1306 - Declaração do método: org.springframework.security.util.StringSplitUtils.substringBeforeLast(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.length()
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.substring(I, I)
1307 - Declaração do método: org.springframework.security.util.StringSplitUtils.substringAfterLast(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.length()
java.lang.String.lastIndexOf(java.lang.String)
java.lang.String.length()
java.lang.String.length()
java.lang.String.length()
java.lang.String.substring(I)
1308 - Declaração do método: org.springframework.security.util.StringSplitUtils.splitIgnoringQuotes(java.lang.String, C)
Métodos invocados: 
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.String.charAt(I)
java.lang.String.charAt(I)
java.lang.String.substring(I, I)
java.util.List.add(java.lang.Object)
java.lang.String.substring(I, I)
java.util.List.add(java.lang.Object)
java.util.List.size()
java.util.List.toArray([Ljava.lang.Object;)
1309 - Declaração do método: org.springframework.security.util.PortResolverImpl.getPortMapper()
1309 - Declaração do método: org.springframework.security.util.PortResolverImpl.getServerPort(javax.servlet.ServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getServerPort()
javax.servlet.ServletRequest.getScheme()
java.lang.String.toLowerCase()
java.lang.String.equals(java.lang.Object)
org.springframework.security.util.PortMapper.lookupHttpPort(java.lang.Integer)
java.lang.String.equals(java.lang.Object)
org.springframework.security.util.PortMapper.lookupHttpsPort(java.lang.Integer)
java.lang.Integer.intValue()
1310 - Declaração do método: org.springframework.security.util.PortResolverImpl.setPortMapper(org.springframework.security.util.PortMapper)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1311 - Declaração do método: org.springframework.security.util.UrlMatcher.compile(java.lang.String)
1311 - Declaração do método: org.springframework.security.util.UrlMatcher.pathMatchesUrl(java.lang.Object, java.lang.String)
1311 - Declaração do método: org.springframework.security.util.UrlMatcher.getUniversalMatchPattern()
1311 - Declaração do método: org.springframework.security.util.UrlMatcher.requiresLowerCaseUrl()
1311 - Declaração do método: org.springframework.security.util.MethodInvocationUtils.MethodInvocationUtils()
1311 - Declaração do método: org.springframework.security.util.MethodInvocationUtils.create(java.lang.Object, java.lang.String)
Métodos invocados: 
org.springframework.security.util.MethodInvocationUtils.create(java.lang.Object, java.lang.String, [Ljava.lang.Object;)
1312 - Declaração do método: org.springframework.security.util.MethodInvocationUtils.create(java.lang.Object, java.lang.String, [Ljava.lang.Object;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.Object.getClass()
java.util.List.add(java.lang.Object)
java.util.List.toArray([Ljava.lang.Object;)
java.lang.Object.getClass()
org.springframework.security.util.MethodInvocationUtils.createFromClass(java.lang.Class, java.lang.String, [Ljava.lang.Class;, [Ljava.lang.Object;)
1313 - Declaração do método: org.springframework.security.util.MethodInvocationUtils.createFromClass(java.lang.Class, java.lang.String)
Métodos invocados: 
org.springframework.security.util.MethodInvocationUtils.createFromClass(java.lang.Class, java.lang.String, [Ljava.lang.Class;, [Ljava.lang.Object;)
1314 - Declaração do método: org.springframework.security.util.MethodInvocationUtils.createFromClass(java.lang.Class, java.lang.String, [Ljava.lang.Class;, [Ljava.lang.Object;)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
1315 - Declaração do método: org.springframework.security.util.EncryptionUtils.EncryptionUtils()
1315 - Declaração do método: org.springframework.security.util.EncryptionUtils.stringToByteArray(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
java.lang.String.getBytes(java.lang.String)
java.lang.String.getBytes()
1316 - Declaração do método: org.springframework.security.util.EncryptionUtils.byteArrayToString([B)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
1317 - Declaração do método: org.springframework.security.util.EncryptionUtils.cipher(java.lang.String, [B, I)
Métodos invocados: 
org.springframework.security.util.EncryptionUtils.stringToByteArray(java.lang.String)
javax.crypto.SecretKeyFactory.getInstance(java.lang.String)
javax.crypto.Cipher.getInstance(java.lang.String)
javax.crypto.SecretKeyFactory.generateSecret(java.security.spec.KeySpec)
javax.crypto.Cipher.init(I, java.security.Key)
javax.crypto.Cipher.doFinal([B)
java.lang.Throwable.getMessage()
1318 - Declaração do método: org.springframework.security.util.EncryptionUtils.encrypt(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.util.EncryptionUtils.isValidKey(java.lang.String)
org.springframework.security.util.EncryptionUtils.stringToByteArray(java.lang.String)
org.springframework.security.util.EncryptionUtils.cipher(java.lang.String, [B, I)
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.security.util.EncryptionUtils.byteArrayToString([B)
1319 - Declaração do método: org.springframework.security.util.EncryptionUtils.encrypt(java.lang.String, [B)
Métodos invocados: 
org.springframework.security.util.EncryptionUtils.isValidKey(java.lang.String)
org.springframework.security.util.EncryptionUtils.cipher(java.lang.String, [B, I)
org.apache.commons.codec.binary.Base64.encodeBase64([B)
1320 - Declaração do método: org.springframework.security.util.EncryptionUtils.decrypt(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.security.util.EncryptionUtils.stringToByteArray(java.lang.String)
org.apache.commons.codec.binary.Base64.decodeBase64([B)
org.springframework.security.util.EncryptionUtils.cipher(java.lang.String, [B, I)
org.springframework.security.util.EncryptionUtils.byteArrayToString([B)
1321 - Declaração do método: org.springframework.security.util.EncryptionUtils.decrypt(java.lang.String, [B)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.apache.commons.codec.binary.Base64.decodeBase64([B)
org.springframework.security.util.EncryptionUtils.cipher(java.lang.String, [B, I)
1322 - Declaração do método: org.springframework.security.util.EncryptionUtils.isValidKey(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
java.lang.String.length()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
1323 - Declaração do método: org.springframework.security.util.EncryptionUtils$EncryptionException.EncryptionException(java.lang.String, java.lang.Throwable)
1323 - Declaração do método: org.springframework.security.util.EncryptionUtils$EncryptionException.EncryptionException(java.lang.String)
1323 - Declaração do método: org.springframework.security.util.PortResolver.getServerPort(javax.servlet.ServletRequest)
1323 - Declaração do método: org.springframework.security.util.FieldUtils.FieldUtils()
1323 - Declaração do método: org.springframework.security.util.FieldUtils.getAccessorName(java.lang.String, java.lang.Class)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.Class.getName()
java.lang.String.equals(java.lang.Object)
org.springframework.util.StringUtils.capitalize(java.lang.String)
org.springframework.util.StringUtils.capitalize(java.lang.String)
1324 - Declaração do método: org.springframework.security.util.FieldUtils.getField(java.lang.Class, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
java.lang.Class.getDeclaredField(java.lang.String)
java.lang.Class.getSuperclass()
java.lang.Class.getSuperclass()
org.springframework.security.util.FieldUtils.getField(java.lang.Class, java.lang.String)
1325 - Declaração do método: org.springframework.security.util.FieldUtils.getMutatorName(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.StringUtils.capitalize(java.lang.String)
1326 - Declaração do método: org.springframework.security.util.FieldUtils.getProtectedFieldValue(java.lang.String, java.lang.Object)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.security.util.FieldUtils.getField(java.lang.Class, java.lang.String)
java.lang.reflect.AccessibleObject.setAccessible(Z)
java.lang.reflect.Field.get(java.lang.Object)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
1327 - Declaração do método: org.springframework.security.util.FieldUtils.setProtectedFieldValue(java.lang.String, java.lang.Object, java.lang.Object)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.security.util.FieldUtils.getField(java.lang.Class, java.lang.String)
java.lang.reflect.AccessibleObject.setAccessible(Z)
java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
1328 - Declaração do método: org.springframework.security.util.FilterToBeanProxy.destroy()
Métodos invocados: 
javax.servlet.Filter.destroy()
1329 - Declaração do método: org.springframework.security.util.FilterToBeanProxy.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
org.springframework.security.util.FilterToBeanProxy.doInit()
javax.servlet.Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
1330 - Declaração do método: org.springframework.security.util.FilterToBeanProxy.doInit()
Métodos invocados: 
javax.servlet.FilterConfig.getInitParameter(java.lang.String)
java.lang.String.equals(java.lang.Object)
javax.servlet.FilterConfig.getInitParameter(java.lang.String)
java.lang.String.equals(java.lang.Object)
org.springframework.security.util.FilterToBeanProxy.getContext(javax.servlet.FilterConfig)
org.springframework.beans.factory.BeanFactory.containsBean(java.lang.String)
javax.servlet.FilterConfig.getInitParameter(java.lang.String)
java.lang.String.equals(java.lang.Object)
java.lang.Thread.currentThread()
java.lang.Thread.getContextClassLoader()
java.lang.ClassLoader.loadClass(java.lang.String)
org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, Z, Z)
java.util.Map.size()
java.util.Map.keySet()
java.util.Set.iterator()
java.util.Iterator.next()
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
javax.servlet.Filter.init(javax.servlet.FilterConfig)
1331 - Declaração do método: org.springframework.security.util.FilterToBeanProxy.getContext(javax.servlet.FilterConfig)
Métodos invocados: 
javax.servlet.FilterConfig.getServletContext()
org.springframework.web.context.support.WebApplicationContextUtils.getRequiredWebApplicationContext(javax.servlet.ServletContext)
1332 - Declaração do método: org.springframework.security.util.FilterToBeanProxy.init(javax.servlet.FilterConfig)
Métodos invocados: 
javax.servlet.FilterConfig.getInitParameter(java.lang.String)
java.lang.String.toLowerCase()
java.lang.String.equals(java.lang.Object)
org.springframework.security.util.FilterToBeanProxy.doInit()
1333 - Declaração do método: org.springframework.security.util.ThrowableCauseExtractor.extractCause(java.lang.Throwable)
1333 - Declaração do método: org.springframework.security.util.SimpleMethodInvocation.SimpleMethodInvocation(java.lang.reflect.Method, [Ljava.lang.Object;)
1333 - Declaração do método: org.springframework.security.util.SimpleMethodInvocation.SimpleMethodInvocation()
1333 - Declaração do método: org.springframework.security.util.SimpleMethodInvocation.getArguments()
1333 - Declaração do método: org.springframework.security.util.SimpleMethodInvocation.getMethod()
1333 - Declaração do método: org.springframework.security.util.SimpleMethodInvocation.getStaticPart()
1333 - Declaração do método: org.springframework.security.util.SimpleMethodInvocation.getThis()
1333 - Declaração do método: org.springframework.security.util.SimpleMethodInvocation.proceed()
1333 - Declaração do método: org.springframework.security.util.AntUrlPathMatcher.AntUrlPathMatcher()
1333 - Declaração do método: org.springframework.security.util.AntUrlPathMatcher.AntUrlPathMatcher(Z)
1333 - Declaração do método: org.springframework.security.util.AntUrlPathMatcher.compile(java.lang.String)
Métodos invocados: 
java.lang.String.toLowerCase()
1334 - Declaração do método: org.springframework.security.util.AntUrlPathMatcher.setRequiresLowerCaseUrl(Z)
1334 - Declaração do método: org.springframework.security.util.AntUrlPathMatcher.pathMatchesUrl(java.lang.Object, java.lang.String)
Métodos invocados: 
org.springframework.util.PathMatcher.match(java.lang.String, java.lang.String)
1335 - Declaração do método: org.springframework.security.util.AntUrlPathMatcher.getUniversalMatchPattern()
1335 - Declaração do método: org.springframework.security.util.AntUrlPathMatcher.requiresLowerCaseUrl()
1335 - Declaração do método: org.springframework.security.util.PortMapperImpl.PortMapperImpl()
Métodos invocados: 
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
1336 - Declaração do método: org.springframework.security.util.PortMapperImpl.getTranslatedPortMappings()
1336 - Declaração do método: org.springframework.security.util.PortMapperImpl.lookupHttpPort(java.lang.Integer)
Métodos invocados: 
java.util.Map.keySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map.get(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
1337 - Declaração do método: org.springframework.security.util.PortMapperImpl.lookupHttpsPort(java.lang.Integer)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
1338 - Declaração do método: org.springframework.security.util.PortMapperImpl.setPortMappings(java.util.Map)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.util.Map.clear()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.lang.Integer.intValue()
java.lang.Integer.intValue()
java.lang.Integer.intValue()
java.lang.Integer.intValue()
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.size()
1339 - Declaração do método: org.springframework.security.util.UrlUtils.UrlUtils()
1339 - Declaração do método: org.springframework.security.util.UrlUtils.buildFullRequestUrl(java.lang.String, java.lang.String, I, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.toLowerCase()
java.lang.String.equals(java.lang.Object)
java.lang.String.toLowerCase()
java.lang.String.equals(java.lang.Object)
org.springframework.security.util.UrlUtils.buildRequestUrl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
1340 - Declaração do método: org.springframework.security.util.UrlUtils.buildRequestUrl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.substring(I)
1341 - Declaração do método: org.springframework.security.util.UrlUtils.getFullRequestUrl(org.springframework.security.intercept.web.FilterInvocation)
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocation.getHttpRequest()
javax.servlet.ServletRequest.getScheme()
javax.servlet.ServletRequest.getServerName()
javax.servlet.ServletRequest.getServerPort()
javax.servlet.http.HttpServletRequest.getContextPath()
javax.servlet.http.HttpServletRequest.getRequestURL()
java.lang.StringBuffer.toString()
javax.servlet.http.HttpServletRequest.getServletPath()
javax.servlet.http.HttpServletRequest.getRequestURI()
javax.servlet.http.HttpServletRequest.getPathInfo()
javax.servlet.http.HttpServletRequest.getQueryString()
org.springframework.security.util.UrlUtils.buildFullRequestUrl(java.lang.String, java.lang.String, I, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
1342 - Declaração do método: org.springframework.security.util.UrlUtils.getFullRequestUrl(org.springframework.security.ui.savedrequest.SavedRequest)
Métodos invocados: 
org.springframework.security.ui.savedrequest.SavedRequest.getScheme()
org.springframework.security.ui.savedrequest.SavedRequest.getServerName()
org.springframework.security.ui.savedrequest.SavedRequest.getServerPort()
org.springframework.security.ui.savedrequest.SavedRequest.getContextPath()
org.springframework.security.ui.savedrequest.SavedRequest.getRequestURL()
org.springframework.security.ui.savedrequest.SavedRequest.getServletPath()
org.springframework.security.ui.savedrequest.SavedRequest.getRequestURI()
org.springframework.security.ui.savedrequest.SavedRequest.getPathInfo()
org.springframework.security.ui.savedrequest.SavedRequest.getQueryString()
org.springframework.security.util.UrlUtils.buildFullRequestUrl(java.lang.String, java.lang.String, I, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
1343 - Declaração do método: org.springframework.security.util.UrlUtils.getRequestUrl(org.springframework.security.intercept.web.FilterInvocation)
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocation.getHttpRequest()
javax.servlet.http.HttpServletRequest.getServletPath()
javax.servlet.http.HttpServletRequest.getRequestURI()
javax.servlet.http.HttpServletRequest.getContextPath()
javax.servlet.http.HttpServletRequest.getPathInfo()
javax.servlet.http.HttpServletRequest.getQueryString()
org.springframework.security.util.UrlUtils.buildRequestUrl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
1344 - Declaração do método: org.springframework.security.util.UrlUtils.getRequestUrl(org.springframework.security.ui.savedrequest.SavedRequest)
Métodos invocados: 
org.springframework.security.ui.savedrequest.SavedRequest.getServletPath()
org.springframework.security.ui.savedrequest.SavedRequest.getRequestURI()
org.springframework.security.ui.savedrequest.SavedRequest.getContextPath()
org.springframework.security.ui.savedrequest.SavedRequest.getPathInfo()
org.springframework.security.ui.savedrequest.SavedRequest.getQueryString()
org.springframework.security.util.UrlUtils.buildRequestUrl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
1345 - Declaração do método: org.springframework.security.util.RedirectUtils.RedirectUtils()
1345 - Declaração do método: org.springframework.security.util.RedirectUtils.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String, Z)
Métodos invocados: 
java.lang.String.startsWith(java.lang.String)
java.lang.String.startsWith(java.lang.String)
javax.servlet.http.HttpServletRequest.getContextPath()
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.length()
javax.servlet.http.HttpServletRequest.getContextPath()
java.lang.String.indexOf(java.lang.String)
java.lang.String.substring(I)
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.String.substring(I)
javax.servlet.http.HttpServletResponse.encodeRedirectURL(java.lang.String)
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
1346 - Declaração do método: org.springframework.security.util.AuthorityUtils.userHasAuthority(java.lang.String)
Métodos invocados: 
org.springframework.security.util.AuthorityUtils.getUserAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
java.lang.String.equals(java.lang.Object)
1347 - Declaração do método: org.springframework.security.util.AuthorityUtils.getUserAuthorities()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.Authentication.getAuthorities()
1348 - Declaração do método: org.springframework.security.util.AuthorityUtils.commaSeparatedStringToAuthorityArray(java.lang.String)
Métodos invocados: 
org.springframework.util.StringUtils.tokenizeToStringArray(java.lang.String, java.lang.String)
1349 - Declaração do método: org.springframework.security.util.AuthorityUtils.authorityArrayToSet([Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
org.springframework.security.GrantedAuthority.getAuthority()
java.util.Set.add(java.lang.Object)
1350 - Declaração do método: org.springframework.security.util.AuthorityUtils.stringArrayToAuthorityArray([Ljava.lang.String;)
1350 - Declaração do método: org.springframework.security.util.RegexUrlPathMatcher.compile(java.lang.String)
Métodos invocados: 
java.util.regex.Pattern.compile(java.lang.String)
1351 - Declaração do método: org.springframework.security.util.RegexUrlPathMatcher.setRequiresLowerCaseUrl(Z)
1351 - Declaração do método: org.springframework.security.util.RegexUrlPathMatcher.pathMatchesUrl(java.lang.Object, java.lang.String)
Métodos invocados: 
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.util.regex.Matcher.matches()
1352 - Declaração do método: org.springframework.security.util.RegexUrlPathMatcher.getUniversalMatchPattern()
1352 - Declaração do método: org.springframework.security.util.RegexUrlPathMatcher.requiresLowerCaseUrl()
1352 - Declaração do método: org.springframework.security.vote.LabeledData.getLabel()
1352 - Declaração do método: org.springframework.security.vote.AffirmativeBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.vote.AbstractAccessDecisionManager.getDecisionVoters()
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.vote.AccessDecisionVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.vote.AbstractAccessDecisionManager.checkAllowIfAllAbstainDecisions()
1353 - Declaração do método: org.springframework.security.vote.LabelBasedAclVoter.setAllowAccessIfNoAttributesAreLabeled(Z)
1353 - Declaração do método: org.springframework.security.vote.LabelBasedAclVoter.setAttributeIndicatingLabeledOperation(java.lang.String)
1353 - Declaração do método: org.springframework.security.vote.LabelBasedAclVoter.setLabelMap(java.util.Map)
1353 - Declaração do método: org.springframework.security.vote.LabelBasedAclVoter.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1354 - Declaração do método: org.springframework.security.vote.LabelBasedAclVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.next()
org.springframework.security.vote.LabelBasedAclVoter.supports(org.springframework.security.ConfigAttribute)
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
java.util.Map.containsKey(java.lang.Object)
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
java.util.List.add(java.lang.Object)
java.security.Principal.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.aopalliance.intercept.Invocation.getArguments()
org.aopalliance.intercept.Invocation.getArguments()
org.aopalliance.intercept.Invocation.getArguments()
org.springframework.security.vote.LabeledData.getLabel()
org.aopalliance.intercept.Invocation.getArguments()
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.List.size()
java.util.List.get(I)
java.util.Map.get(java.lang.Object)
java.util.List.addAll(java.util.Collection)
org.apache.commons.logging.Log.debug(java.lang.Object)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.String.equals(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
1355 - Declaração do método: org.springframework.security.vote.AbstractAclVoter.getDomainObjectInstance(java.lang.Object)
Métodos invocados: 
org.aopalliance.intercept.MethodInvocation.getMethod()
java.lang.reflect.Method.getParameterTypes()
org.aopalliance.intercept.Invocation.getArguments()
org.aspectj.lang.JoinPoint.getStaticPart()
org.aspectj.lang.JoinPoint$StaticPart.getSignature()
org.aspectj.lang.reflect.CodeSignature.getParameterTypes()
org.aspectj.lang.JoinPoint.getArgs()
java.lang.Class.isAssignableFrom(java.lang.Class)
1356 - Declaração do método: org.springframework.security.vote.AbstractAclVoter.getProcessDomainObjectClass()
1356 - Declaração do método: org.springframework.security.vote.AbstractAclVoter.setProcessDomainObjectClass(java.lang.Class)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1357 - Declaração do método: org.springframework.security.vote.AbstractAclVoter.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.isAssignableFrom(java.lang.Class)
1358 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManager.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notEmpty(java.util.Collection, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1359 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManager.checkAllowIfAllAbstainDecisions()
Métodos invocados: 
org.springframework.security.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
1360 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManager.getDecisionVoters()
1360 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
1360 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManager.setAllowIfAllAbstainDecisions(Z)
1360 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
Métodos invocados: 
org.springframework.util.Assert.notEmpty(java.util.Collection)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.Object.getClass()
java.lang.Class.getName()
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
1361 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManager.setMessageSource(org.springframework.context.MessageSource)
1361 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManager.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.vote.AccessDecisionVoter.supports(org.springframework.security.ConfigAttribute)
1362 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManager.supports(java.lang.Class)
Métodos invocados: 
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.vote.AccessDecisionVoter.supports(java.lang.Class)
1363 - Declaração do método: org.springframework.security.vote.InterfaceBasedLabelParameterStrategy.getLabel(java.lang.reflect.Method, java.lang.Object)
Métodos invocados: 
org.springframework.security.vote.InterfaceBasedLabelParameterStrategy.isLabeled(java.lang.reflect.Method, java.lang.Object)
org.springframework.security.vote.LabeledData.getLabel()
1364 - Declaração do método: org.springframework.security.vote.InterfaceBasedLabelParameterStrategy.getNoLabel()
1364 - Declaração do método: org.springframework.security.vote.InterfaceBasedLabelParameterStrategy.isLabeled(java.lang.reflect.Method, java.lang.Object)
1364 - Declaração do método: org.springframework.security.vote.InterfaceBasedLabelParameterStrategy.setNoLabel(java.lang.String)
1364 - Declaração do método: org.springframework.security.vote.RoleVoter.getRolePrefix()
1364 - Declaração do método: org.springframework.security.vote.RoleVoter.setRolePrefix(java.lang.String)
1364 - Declaração do método: org.springframework.security.vote.RoleVoter.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.security.vote.RoleVoter.getRolePrefix()
java.lang.String.startsWith(java.lang.String)
1365 - Declaração do método: org.springframework.security.vote.RoleVoter.supports(java.lang.Class)
1365 - Declaração do método: org.springframework.security.vote.RoleVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.vote.RoleVoter.supports(org.springframework.security.ConfigAttribute)
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.security.GrantedAuthority.getAuthority()
java.lang.String.equals(java.lang.Object)
1366 - Declaração do método: org.springframework.security.vote.AuthenticatedVoter.isFullyAuthenticated(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.AuthenticationTrustResolver.isAnonymous(org.springframework.security.Authentication)
org.springframework.security.AuthenticationTrustResolver.isRememberMe(org.springframework.security.Authentication)
1367 - Declaração do método: org.springframework.security.vote.AuthenticatedVoter.setAuthenticationTrustResolver(org.springframework.security.AuthenticationTrustResolver)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1368 - Declaração do método: org.springframework.security.vote.AuthenticatedVoter.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
1369 - Declaração do método: org.springframework.security.vote.AuthenticatedVoter.supports(java.lang.Class)
1369 - Declaração do método: org.springframework.security.vote.AuthenticatedVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.vote.AuthenticatedVoter.supports(org.springframework.security.ConfigAttribute)
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
org.springframework.security.vote.AuthenticatedVoter.isFullyAuthenticated(org.springframework.security.Authentication)
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
org.springframework.security.AuthenticationTrustResolver.isRememberMe(org.springframework.security.Authentication)
org.springframework.security.vote.AuthenticatedVoter.isFullyAuthenticated(org.springframework.security.Authentication)
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
org.springframework.security.AuthenticationTrustResolver.isAnonymous(org.springframework.security.Authentication)
org.springframework.security.vote.AuthenticatedVoter.isFullyAuthenticated(org.springframework.security.Authentication)
org.springframework.security.AuthenticationTrustResolver.isRememberMe(org.springframework.security.Authentication)
1370 - Declaração do método: org.springframework.security.vote.ConsensusBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.vote.AbstractAccessDecisionManager.getDecisionVoters()
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.vote.AccessDecisionVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.vote.AbstractAccessDecisionManager.checkAllowIfAllAbstainDecisions()
1371 - Declaração do método: org.springframework.security.vote.ConsensusBased.isAllowIfEqualGrantedDeniedDecisions()
1371 - Declaração do método: org.springframework.security.vote.ConsensusBased.setAllowIfEqualGrantedDeniedDecisions(Z)
1371 - Declaração do método: org.springframework.security.vote.LabelParameterStrategy.getLabel(java.lang.reflect.Method, java.lang.Object)
1371 - Declaração do método: org.springframework.security.vote.LabelParameterStrategy.isLabeled(java.lang.reflect.Method, java.lang.Object)
1371 - Declaração do método: org.springframework.security.vote.UnanimousBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.vote.AbstractAccessDecisionManager.getDecisionVoters()
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.vote.AccessDecisionVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.springframework.security.vote.AbstractAccessDecisionManager.checkAllowIfAllAbstainDecisions()
1372 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1373 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoter.getAclManager()
1373 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoter.getInternalMethod()
1373 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoter.getProcessConfigAttribute()
1373 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoter.getRequirePermission()
1373 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoter.setAclManager(org.springframework.security.acl.AclManager)
1373 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoter.setInternalMethod(java.lang.String)
1373 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoter.setProcessConfigAttribute(java.lang.String)
1373 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoter.setRequirePermission([I)
1373 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoter.setRequirePermissionFromString([Ljava.lang.String;)
Métodos invocados: 
org.springframework.security.acl.basic.SimpleAclEntry.parsePermissions([Ljava.lang.String;)
org.springframework.security.vote.BasicAclEntryVoter.setRequirePermission([I)
1374 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoter.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.security.vote.BasicAclEntryVoter.getProcessConfigAttribute()
java.lang.String.equals(java.lang.Object)
1375 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.vote.BasicAclEntryVoter.supports(org.springframework.security.ConfigAttribute)
org.springframework.security.vote.AbstractAclVoter.getDomainObjectInstance(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
java.lang.Object.getClass()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
java.lang.Throwable.getCause()
java.lang.Throwable.getCause()
java.lang.Throwable.getMessage()
java.lang.Throwable.getCause()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
java.lang.reflect.InvocationTargetException.getCause()
java.lang.reflect.InvocationTargetException.getCause()
java.lang.Throwable.getMessage()
java.lang.reflect.InvocationTargetException.getCause()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.springframework.security.acl.AclManager.getAcls(java.lang.Object, org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.acl.basic.BasicAclEntry.isPermitted(I)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1376 - Declaração do método: org.springframework.security.vote.AccessDecisionVoter.supports(org.springframework.security.ConfigAttribute)
1376 - Declaração do método: org.springframework.security.vote.AccessDecisionVoter.supports(java.lang.Class)
1376 - Declaração do método: org.springframework.security.vote.AccessDecisionVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
1376 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.SecurityContextHolderAwareRequestWrapper(javax.servlet.http.HttpServletRequest, org.springframework.security.util.PortResolver, java.lang.String)
1376 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.getAuthentication()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.AuthenticationTrustResolver.isAnonymous(org.springframework.security.Authentication)
1377 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.getRemoteUser()
Métodos invocados: 
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.getAuthentication()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.toString()
1378 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.getUserPrincipal()
Métodos invocados: 
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.getAuthentication()
org.springframework.security.Authentication.getPrincipal()
1379 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.isGranted(java.lang.String)
Métodos invocados: 
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.getAuthentication()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
java.lang.String.equals(java.lang.Object)
1380 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
Métodos invocados: 
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.isGranted(java.lang.String)
1381 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilter.setPortResolver(org.springframework.security.util.PortResolver)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
1382 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilter.setWrapperClass(java.lang.Class)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.Class.isAssignableFrom(java.lang.Class)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
1383 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilter.setRolePrefix(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.String.trim()
1384 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilter.doFilterHttp(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.getConstructor([Ljava.lang.Class;)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1385 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilter.getOrder()
1385 - Declaração do método: org.springframework.security.wrapper.SavedRequestAwareWrapper.SavedRequestAwareWrapper(javax.servlet.http.HttpServletRequest, org.springframework.security.util.PortResolver, java.lang.String)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getSession(Z)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.springframework.security.ui.savedrequest.SavedRequest.doesRequestMatch(javax.servlet.http.HttpServletRequest, org.springframework.security.util.PortResolver)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpSession.removeAttribute(java.lang.String)
java.text.DateFormat.setTimeZone(java.util.TimeZone)
java.text.DateFormat.setTimeZone(java.util.TimeZone)
java.text.DateFormat.setTimeZone(java.util.TimeZone)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
1386 - Declaração do método: org.springframework.security.wrapper.SavedRequestAwareWrapper.getCookies()
Métodos invocados: 
org.springframework.security.ui.savedrequest.SavedRequest.getCookies()
java.util.List.size()
java.util.List.toArray([Ljava.lang.Object;)
1387 - Declaração do método: org.springframework.security.wrapper.SavedRequestAwareWrapper.getDateHeader(java.lang.String)
Métodos invocados: 
org.springframework.security.wrapper.SavedRequestAwareWrapper.getHeader(java.lang.String)
org.springframework.security.ui.savedrequest.FastHttpDateFormat.parseDate(java.lang.String, [Ljava.text.DateFormat;)
1388 - Declaração do método: org.springframework.security.wrapper.SavedRequestAwareWrapper.getHeader(java.lang.String)
Métodos invocados: 
org.springframework.security.ui.savedrequest.SavedRequest.getHeaderValues(java.lang.String)
java.util.Iterator.hasNext()
java.util.Iterator.next()
1389 - Declaração do método: org.springframework.security.wrapper.SavedRequestAwareWrapper.getHeaderNames()
Métodos invocados: 
org.springframework.security.ui.savedrequest.SavedRequest.getHeaderNames()
1390 - Declaração do método: org.springframework.security.wrapper.SavedRequestAwareWrapper.getHeaders(java.lang.String)
Métodos invocados: 
org.springframework.security.ui.savedrequest.SavedRequest.getHeaderValues(java.lang.String)
1391 - Declaração do método: org.springframework.security.wrapper.SavedRequestAwareWrapper.getIntHeader(java.lang.String)
Métodos invocados: 
org.springframework.security.wrapper.SavedRequestAwareWrapper.getHeader(java.lang.String)
java.lang.Integer.parseInt(java.lang.String)
1392 - Declaração do método: org.springframework.security.wrapper.SavedRequestAwareWrapper.getLocale()
Métodos invocados: 
org.springframework.security.ui.savedrequest.SavedRequest.getLocales()
java.util.Iterator.hasNext()
java.util.Iterator.next()
1393 - Declaração do método: org.springframework.security.wrapper.SavedRequestAwareWrapper.getLocales()
Métodos invocados: 
org.springframework.security.ui.savedrequest.SavedRequest.getLocales()
java.util.Iterator.hasNext()
java.util.ArrayList.add(java.lang.Object)
java.util.AbstractList.iterator()
1394 - Declaração do método: org.springframework.security.wrapper.SavedRequestAwareWrapper.getMethod()
Métodos invocados: 
org.springframework.security.ui.savedrequest.SavedRequest.getMethod()
1395 - Declaração do método: org.springframework.security.wrapper.SavedRequestAwareWrapper.getParameter(java.lang.String)
Métodos invocados: 
org.springframework.security.ui.savedrequest.SavedRequest.getParameterValues(java.lang.String)
1396 - Declaração do método: org.springframework.security.wrapper.SavedRequestAwareWrapper.getParameterMap()
Métodos invocados: 
org.springframework.security.ui.savedrequest.SavedRequest.getParameterMap()
1397 - Declaração do método: org.springframework.security.wrapper.SavedRequestAwareWrapper.getParameterNames()
Métodos invocados: 
org.springframework.security.ui.savedrequest.SavedRequest.getParameterNames()
1398 - Declaração do método: org.springframework.security.wrapper.SavedRequestAwareWrapper.getParameterValues(java.lang.String)
Métodos invocados: 
org.springframework.security.ui.savedrequest.SavedRequest.getParameterValues(java.lang.String)
1399 - Declaração do método: org.springframework.security.TargetObject.computeHashCode(java.lang.String)
Métodos invocados: 
java.lang.String.hashCode()
1400 - Declaração do método: org.springframework.security.TargetObject.countLength(java.lang.String)
Métodos invocados: 
java.lang.String.length()
1401 - Declaração do método: org.springframework.security.TargetObject.makeLowerCase(java.lang.String)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
java.lang.String.toLowerCase()
java.lang.String.toLowerCase()
java.lang.Object.getClass()
java.lang.Class.getName()
org.springframework.security.Authentication.isAuthenticated()
1402 - Declaração do método: org.springframework.security.TargetObject.makeUpperCase(java.lang.String)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
java.lang.String.toUpperCase()
java.lang.Object.getClass()
java.lang.Class.getName()
org.springframework.security.Authentication.isAuthenticated()
1403 - Declaração do método: org.springframework.security.TargetObject.publicMakeLowerCase(java.lang.String)
Métodos invocados: 
org.springframework.security.TargetObject.makeLowerCase(java.lang.String)
1404 - Declaração do método: org.springframework.security.PopulatedDatabase.PopulatedDatabase()
1404 - Declaração do método: org.springframework.security.PopulatedDatabase.getDataSource()
Métodos invocados: 
org.springframework.security.PopulatedDatabase.setupDataSource()
1405 - Declaração do método: org.springframework.security.PopulatedDatabase.setupDataSource()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.PopulatedDatabase.createGroupTables(org.springframework.jdbc.core.JdbcTemplate)
org.springframework.security.PopulatedDatabase.insertGroupData(org.springframework.jdbc.core.JdbcTemplate)
1406 - Declaração do método: org.springframework.security.PopulatedDatabase.createGroupTables(org.springframework.jdbc.core.JdbcTemplate)
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
1407 - Declaração do método: org.springframework.security.PopulatedDatabase.insertGroupData(org.springframework.jdbc.core.JdbcTemplate)
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
1408 - Declaração do método: org.springframework.security.MockFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1408 - Declaração do método: org.springframework.security.OtherTargetObject.countLength(java.lang.String)
1408 - Declaração do método: org.springframework.security.OtherTargetObject.makeLowerCase(java.lang.String)
1408 - Declaração do método: org.springframework.security.OtherTargetObject.makeUpperCase(java.lang.String)
1408 - Declaração do método: org.springframework.security.OtherTargetObject.publicMakeLowerCase(java.lang.String)
1408 - Declaração do método: org.springframework.security.SecurityConfigTests.testHashCode()
Métodos invocados: 
java.lang.String.hashCode()
org.springframework.security.SecurityConfig.hashCode()
junit.framework.Assert.assertEquals(I, I)
1409 - Declaração do método: org.springframework.security.SecurityConfigTests.testCannotConstructWithNullAttribute()
1409 - Declaração do método: org.springframework.security.SecurityConfigTests.testCannotConstructWithEmptyAttribute()
1409 - Declaração do método: org.springframework.security.SecurityConfigTests.testNoArgConstructorDoesntExist()
Métodos invocados: 
java.lang.Class.getDeclaredConstructor([Ljava.lang.Class;)
1410 - Declaração do método: org.springframework.security.SecurityConfigTests.testObjectEquals()
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)
org.springframework.security.SecurityConfig.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.SecurityConfig.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.SecurityConfig.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.SecurityConfig.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
1411 - Declaração do método: org.springframework.security.SecurityConfigTests.testToString()
Métodos invocados: 
org.springframework.security.SecurityConfig.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1412 - Declaração do método: org.springframework.security.SecurityConfigTests$MockConfigAttribute.MockConfigAttribute(java.lang.String)
1412 - Declaração do método: org.springframework.security.SecurityConfigTests$MockConfigAttribute.getAttribute()
1412 - Declaração do método: org.springframework.security.MockRunAsAuthenticationToken.MockRunAsAuthenticationToken()
1412 - Declaração do método: org.springframework.security.MockRunAsAuthenticationToken.getCredentials()
1412 - Declaração do método: org.springframework.security.MockRunAsAuthenticationToken.getPrincipal()
1412 - Declaração do método: org.springframework.security.ConfigAttributeEditorTests.ConfigAttributeEditorTests()
1412 - Declaração do método: org.springframework.security.ConfigAttributeEditorTests.ConfigAttributeEditorTests(java.lang.String)
1412 - Declaração do método: org.springframework.security.ConfigAttributeEditorTests.testCorrectOperation()
Métodos invocados: 
org.springframework.security.ConfigAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.ConfigAttributeDefinition.contains(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ConfigAttributeDefinition.contains(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ConfigAttributeDefinition.contains(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertFalse(Z)
1413 - Declaração do método: org.springframework.security.ConfigAttributeEditorTests.testEmptyStringReturnsNull()
Métodos invocados: 
org.springframework.security.ConfigAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
junit.framework.Assert.assertTrue(Z)
1414 - Declaração do método: org.springframework.security.ConfigAttributeEditorTests.testEqualsHandlingWhenDifferentObjectTypes()
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
1415 - Declaração do método: org.springframework.security.ConfigAttributeEditorTests.testEqualsHandlingWhenExactlyEqual()
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1416 - Declaração do método: org.springframework.security.ConfigAttributeEditorTests.testEqualsHandlingWhenOrderingNotEqual()
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1417 - Declaração do método: org.springframework.security.ConfigAttributeEditorTests.testEqualsHandlingWhenTestObjectHasNoAttributes()
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.ConfigAttributeDefinition.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1418 - Declaração do método: org.springframework.security.ConfigAttributeEditorTests.testNullReturnsNull()
Métodos invocados: 
org.springframework.security.ConfigAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
junit.framework.Assert.assertTrue(Z)
1419 - Declaração do método: org.springframework.security.ConfigAttributeEditorTests.testStripsTrailingAndLeadingSpaces()
Métodos invocados: 
org.springframework.security.ConfigAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.ArrayList.add(java.lang.Object)
java.util.ArrayList.get(I)
org.springframework.security.ConfigAttribute.getAttribute()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.ArrayList.get(I)
org.springframework.security.ConfigAttribute.getAttribute()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.ArrayList.get(I)
org.springframework.security.ConfigAttribute.getAttribute()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.ArrayList.get(I)
org.springframework.security.ConfigAttribute.getAttribute()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.ArrayList.get(I)
org.springframework.security.ConfigAttribute.getAttribute()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1420 - Declaração do método: org.springframework.security.ConfigAttributeEditorTests.testToString()
Métodos invocados: 
org.springframework.security.ConfigAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.ConfigAttributeDefinition.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1421 - Declaração do método: org.springframework.security.MockAccessDecisionManager.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.MockAccessDecisionManager.supports(org.springframework.security.ConfigAttribute)
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
java.lang.String.equals(java.lang.Object)
1422 - Declaração do método: org.springframework.security.MockAccessDecisionManager.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.startsWith(java.lang.String)
1423 - Declaração do método: org.springframework.security.MockAccessDecisionManager.supports(java.lang.Class)
1423 - Declaração do método: org.springframework.security.MockJoinPoint.MockJoinPoint(java.lang.Object, java.lang.reflect.Method)
1423 - Declaração do método: org.springframework.security.MockJoinPoint.getArgs()
1423 - Declaração do método: org.springframework.security.MockJoinPoint.getKind()
1423 - Declaração do método: org.springframework.security.MockJoinPoint.getSignature()
1423 - Declaração do método: org.springframework.security.MockJoinPoint.getSourceLocation()
1423 - Declaração do método: org.springframework.security.MockJoinPoint.getStaticPart()
1423 - Declaração do método: org.springframework.security.MockJoinPoint.getTarget()
1423 - Declaração do método: org.springframework.security.MockJoinPoint.getThis()
1423 - Declaração do método: org.springframework.security.MockJoinPoint.toLongString()
1423 - Declaração do método: org.springframework.security.MockJoinPoint.toShortString()
1423 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.MockCodeSignature(java.lang.reflect.Method)
1423 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.getDeclaringType()
1423 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.getDeclaringTypeName()
1423 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.getExceptionTypes()
1423 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.getModifiers()
1423 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.getName()
Métodos invocados: 
java.lang.reflect.Method.getName()
1424 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.getParameterNames()
1424 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.getParameterTypes()
Métodos invocados: 
java.lang.reflect.Method.getParameterTypes()
1425 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.toLongString()
1425 - Declaração do método: org.springframework.security.MockJoinPoint$MockCodeSignature.toShortString()
1425 - Declaração do método: org.springframework.security.MockJoinPoint$MockStaticPart.MockStaticPart(java.lang.reflect.Method)
1425 - Declaração do método: org.springframework.security.MockJoinPoint$MockStaticPart.getKind()
1425 - Declaração do método: org.springframework.security.MockJoinPoint$MockStaticPart.getSignature()
1425 - Declaração do método: org.springframework.security.MockJoinPoint$MockStaticPart.getSourceLocation()
1425 - Declaração do método: org.springframework.security.MockJoinPoint$MockStaticPart.toLongString()
1425 - Declaração do método: org.springframework.security.MockJoinPoint$MockStaticPart.toShortString()
1425 - Declaração do método: org.springframework.security.AuthenticationTrustResolverImplTests.AuthenticationTrustResolverImplTests()
1425 - Declaração do método: org.springframework.security.AuthenticationTrustResolverImplTests.AuthenticationTrustResolverImplTests(java.lang.String)
1425 - Declaração do método: org.springframework.security.AuthenticationTrustResolverImplTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1426 - Declaração do método: org.springframework.security.AuthenticationTrustResolverImplTests.testCorrectOperationIsAnonymous()
Métodos invocados: 
org.springframework.security.AuthenticationTrustResolverImpl.isAnonymous(org.springframework.security.Authentication)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.AuthenticationTrustResolverImpl.isAnonymous(org.springframework.security.Authentication)
junit.framework.Assert.assertFalse(Z)
1427 - Declaração do método: org.springframework.security.AuthenticationTrustResolverImplTests.testCorrectOperationIsRememberMe()
Métodos invocados: 
org.springframework.security.AuthenticationTrustResolverImpl.isRememberMe(org.springframework.security.Authentication)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.AuthenticationTrustResolverImpl.isAnonymous(org.springframework.security.Authentication)
junit.framework.Assert.assertFalse(Z)
1428 - Declaração do método: org.springframework.security.AuthenticationTrustResolverImplTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.AuthenticationTrustResolverImpl.getAnonymousClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.AuthenticationTrustResolverImpl.setAnonymousClass(java.lang.Class)
org.springframework.security.AuthenticationTrustResolverImpl.getAnonymousClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.AuthenticationTrustResolverImpl.getRememberMeClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.AuthenticationTrustResolverImpl.setRememberMeClass(java.lang.Class)
org.springframework.security.AuthenticationTrustResolverImpl.getRememberMeClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1429 - Declaração do método: org.springframework.security.MockPortResolver.MockPortResolver(I, I)
1429 - Declaração do método: org.springframework.security.MockPortResolver.getServerPort(javax.servlet.ServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getScheme()
javax.servlet.ServletRequest.getScheme()
java.lang.String.equals(java.lang.Object)
1430 - Declaração do método: org.springframework.security.MockRunAsManager.buildRunAs(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.MockRunAsManager.supports(org.springframework.security.ConfigAttribute)
org.springframework.security.Authentication.setAuthenticated(Z)
1431 - Declaração do método: org.springframework.security.MockRunAsManager.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.startsWith(java.lang.String)
1432 - Declaração do método: org.springframework.security.MockRunAsManager.supports(java.lang.Class)
1432 - Declaração do método: org.springframework.security.TestDataSource.TestDataSource(java.lang.String)
Métodos invocados: 
java.io.PrintStream.println(java.lang.String)
org.springframework.jdbc.datasource.DriverManagerDataSource.setDriverClassName(java.lang.String)
org.springframework.jdbc.datasource.DriverManagerDataSource.setUrl(java.lang.String)
org.springframework.jdbc.datasource.DriverManagerDataSource.setUsername(java.lang.String)
org.springframework.jdbc.datasource.DriverManagerDataSource.setPassword(java.lang.String)
1433 - Declaração do método: org.springframework.security.TestDataSource.destroy()
Métodos invocados: 
java.io.PrintStream.println(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
1434 - Declaração do método: org.springframework.security.MockFilterConfig.getFilterName()
1434 - Declaração do método: org.springframework.security.MockFilterConfig.getInitParameter(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
1435 - Declaração do método: org.springframework.security.MockFilterConfig.getInitParameterNames()
1435 - Declaração do método: org.springframework.security.MockFilterConfig.getServletContext()
1435 - Declaração do método: org.springframework.security.MockFilterConfig.setInitParmeter(java.lang.String, java.lang.String)
Métodos invocados: 
java.util.Map.put(java.lang.Object, java.lang.Object)
1436 - Declaração do método: org.springframework.security.MockAuthenticationEntryPoint.MockAuthenticationEntryPoint(java.lang.String)
1436 - Declaração do método: org.springframework.security.MockAuthenticationEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getContextPath()
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
1437 - Declaração do método: org.springframework.security.MockApplicationEventPublisher.MockApplicationEventPublisher()
1437 - Declaração do método: org.springframework.security.MockApplicationEventPublisher.MockApplicationEventPublisher(Z)
Métodos invocados: 
java.lang.Boolean.valueOf(Z)
1438 - Declaração do método: org.springframework.security.MockApplicationEventPublisher.publishEvent(org.springframework.context.ApplicationEvent)
Métodos invocados: 
java.lang.Boolean.booleanValue()
1439 - Declaração do método: org.springframework.security.MockApplicationEventPublisher.getLastEvent()
1439 - Declaração do método: org.springframework.security.SpringSecurityMessageSourceTests.SpringSecurityMessageSourceTests()
1439 - Declaração do método: org.springframework.security.SpringSecurityMessageSourceTests.SpringSecurityMessageSourceTests(java.lang.String)
1439 - Declaração do método: org.springframework.security.SpringSecurityMessageSourceTests.testOperation()
Métodos invocados: 
org.springframework.context.support.AbstractMessageSource.getMessage(java.lang.String, [Ljava.lang.Object;, java.util.Locale)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1440 - Declaração do método: org.springframework.security.SpringSecurityMessageSourceTests.testReplacableLookup()
Métodos invocados: 
org.springframework.context.i18n.LocaleContextHolder.getLocale()
org.springframework.context.i18n.LocaleContextHolder.setLocale(java.util.Locale)
org.springframework.security.SpringSecurityMessageSource.getAccessor()
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.context.i18n.LocaleContextHolder.setLocale(java.util.Locale)
1441 - Declaração do método: org.springframework.security.ITargetObject.computeHashCode(java.lang.String)
1441 - Declaração do método: org.springframework.security.ITargetObject.countLength(java.lang.String)
1441 - Declaração do método: org.springframework.security.ITargetObject.makeLowerCase(java.lang.String)
1441 - Declaração do método: org.springframework.security.ITargetObject.makeUpperCase(java.lang.String)
1441 - Declaração do método: org.springframework.security.ITargetObject.publicMakeLowerCase(java.lang.String)
1441 - Declaração do método: org.springframework.security.MockAfterInvocationManager.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.MockAfterInvocationManager.supports(org.springframework.security.ConfigAttribute)
1442 - Declaração do método: org.springframework.security.MockAfterInvocationManager.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
1443 - Declaração do método: org.springframework.security.MockAfterInvocationManager.supports(java.lang.Class)
1443 - Declaração do método: org.springframework.security.GrantedAuthorityImplTests.GrantedAuthorityImplTests()
1443 - Declaração do método: org.springframework.security.GrantedAuthorityImplTests.GrantedAuthorityImplTests(java.lang.String)
1443 - Declaração do método: org.springframework.security.GrantedAuthorityImplTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1444 - Declaração do método: org.springframework.security.GrantedAuthorityImplTests.setUp()
1444 - Declaração do método: org.springframework.security.GrantedAuthorityImplTests.testObjectEquals()
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.GrantedAuthorityImpl.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.GrantedAuthorityImpl.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.GrantedAuthorityImpl.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.GrantedAuthorityImpl.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
1445 - Declaração do método: org.springframework.security.GrantedAuthorityImplTests.testToString()
Métodos invocados: 
org.springframework.security.GrantedAuthorityImpl.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1446 - Declaração do método: org.springframework.security.GrantedAuthorityImplTests$MockGrantedAuthorityImpl.MockGrantedAuthorityImpl(java.lang.String)
1446 - Declaração do método: org.springframework.security.GrantedAuthorityImplTests$MockGrantedAuthorityImpl.compareTo(java.lang.Object)
Métodos invocados: 
org.springframework.security.GrantedAuthority.getAuthority()
java.lang.String.compareTo(java.lang.String)
1447 - Declaração do método: org.springframework.security.GrantedAuthorityImplTests$MockGrantedAuthorityImpl.MockGrantedAuthorityImpl()
1447 - Declaração do método: org.springframework.security.GrantedAuthorityImplTests$MockGrantedAuthorityImpl.getAuthority()
1447 - Declaração do método: org.springframework.security.MockAclManager.MockAclManager(java.lang.Object, java.lang.Object, [Lorg.springframework.security.acl.AclEntry;)
1447 - Declaração do método: org.springframework.security.MockAclManager.getAcls(java.lang.Object, org.springframework.security.Authentication)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.equals(java.lang.Object)
1448 - Declaração do método: org.springframework.security.MockAclManager.getAcls(java.lang.Object)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
1449 - Declaração do método: org.springframework.security.acl.AclProviderManagerTests.AclProviderManagerTests()
1449 - Declaração do método: org.springframework.security.acl.AclProviderManagerTests.AclProviderManagerTests(java.lang.String)
1449 - Declaração do método: org.springframework.security.acl.AclProviderManagerTests.makeProviderManager()
Métodos invocados: 
java.util.List.add(java.lang.Object)
org.springframework.security.acl.AclProviderManager.setProviders(java.util.List)
1450 - Declaração do método: org.springframework.security.acl.AclProviderManagerTests.setUp()
1450 - Declaração do método: org.springframework.security.acl.AclProviderManagerTests.testAclLookupFails()
Métodos invocados: 
org.springframework.security.acl.AclProviderManagerTests.makeProviderManager()
org.springframework.security.acl.AclProviderManager.getAcls(java.lang.Object)
junit.framework.Assert.assertNull(java.lang.Object)
1451 - Declaração do método: org.springframework.security.acl.AclProviderManagerTests.testAclLookupForGivenAuthenticationSuccess()
Métodos invocados: 
org.springframework.security.acl.AclProviderManagerTests.makeProviderManager()
org.springframework.security.acl.AclProviderManager.getAcls(java.lang.Object, org.springframework.security.Authentication)
junit.framework.Assert.assertNotNull(java.lang.Object)
1452 - Declaração do método: org.springframework.security.acl.AclProviderManagerTests.testAclLookupSuccess()
Métodos invocados: 
org.springframework.security.acl.AclProviderManagerTests.makeProviderManager()
org.springframework.security.acl.AclProviderManager.getAcls(java.lang.Object)
junit.framework.Assert.assertNotNull(java.lang.Object)
1453 - Declaração do método: org.springframework.security.acl.AclProviderManagerTests.testRejectsNulls()
Métodos invocados: 
org.springframework.security.acl.AclProviderManager.getAcls(java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acl.AclProviderManager.getAcls(java.lang.Object, org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acl.AclProviderManager.getAcls(java.lang.Object, org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1454 - Declaração do método: org.springframework.security.acl.AclProviderManagerTests.testReturnsNullIfNoSupportingProvider()
Métodos invocados: 
org.springframework.security.acl.AclProviderManagerTests.makeProviderManager()
org.springframework.security.acl.AclProviderManager.getAcls(java.lang.Object, org.springframework.security.Authentication)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.acl.AclProviderManager.getAcls(java.lang.Object)
junit.framework.Assert.assertNull(java.lang.Object)
1455 - Declaração do método: org.springframework.security.acl.AclProviderManagerTests.testStartupFailsIfProviderListNotContainingProviders()
Métodos invocados: 
java.util.List.add(java.lang.Object)
org.springframework.security.acl.AclProviderManager.setProviders(java.util.List)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1456 - Declaração do método: org.springframework.security.acl.AclProviderManagerTests.testStartupFailsIfProviderListNotSet()
Métodos invocados: 
org.springframework.security.acl.AclProviderManager.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1457 - Declaração do método: org.springframework.security.acl.AclProviderManagerTests.testStartupFailsIfProviderListNull()
Métodos invocados: 
org.springframework.security.acl.AclProviderManager.setProviders(java.util.List)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1458 - Declaração do método: org.springframework.security.acl.AclProviderManagerTests.testSuccessfulStartup()
Métodos invocados: 
org.springframework.security.acl.AclProviderManagerTests.makeProviderManager()
org.springframework.security.acl.AclProviderManager.afterPropertiesSet()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acl.AclProviderManager.getProviders()
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
1459 - Declaração do método: org.springframework.security.acl.AclProviderManagerTests$MockProvider.getAcls(java.lang.Object, org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getPrincipal()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getPrincipal()
java.lang.Object.equals(java.lang.Object)
1460 - Declaração do método: org.springframework.security.acl.AclProviderManagerTests$MockProvider.getAcls(java.lang.Object)
1460 - Declaração do método: org.springframework.security.acl.AclProviderManagerTests$MockProvider.supports(java.lang.Object)
1460 - Declaração do método: org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolverTests.GrantedAuthorityEffectiveAclsResolverTests()
1460 - Declaração do método: org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolverTests.GrantedAuthorityEffectiveAclsResolverTests(java.lang.String)
1460 - Declaração do método: org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolverTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1461 - Declaração do método: org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolverTests.setUp()
1461 - Declaração do método: org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolverTests.testResolveAclsForDianneWhoHasANullForAuthorities()
Métodos invocados: 
org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolver.resolveEffectiveAcls([Lorg.springframework.security.acl.AclEntry;, org.springframework.security.Authentication)
junit.framework.Assert.assertNull(java.lang.Object)
1462 - Declaração do método: org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolverTests.testResolveAclsForrod()
Métodos invocados: 
org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolver.resolveEffectiveAcls([Lorg.springframework.security.acl.AclEntry;, org.springframework.security.Authentication)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolver.resolveEffectiveAcls([Lorg.springframework.security.acl.AclEntry;, org.springframework.security.Authentication)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolver.resolveEffectiveAcls([Lorg.springframework.security.acl.AclEntry;, org.springframework.security.Authentication)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolver.resolveEffectiveAcls([Lorg.springframework.security.acl.AclEntry;, org.springframework.security.Authentication)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1463 - Declaração do método: org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolverTests.testResolveAclsForScottWithStringObjectAsPrincipal()
Métodos invocados: 
org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolver.resolveEffectiveAcls([Lorg.springframework.security.acl.AclEntry;, org.springframework.security.Authentication)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolver.resolveEffectiveAcls([Lorg.springframework.security.acl.AclEntry;, org.springframework.security.Authentication)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolver.resolveEffectiveAcls([Lorg.springframework.security.acl.AclEntry;, org.springframework.security.Authentication)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolver.resolveEffectiveAcls([Lorg.springframework.security.acl.AclEntry;, org.springframework.security.Authentication)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1464 - Declaração do método: org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolverTests.testResolveAclsForScottWithUserDetailsObjectAsPrincipal()
Métodos invocados: 
org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolver.resolveEffectiveAcls([Lorg.springframework.security.acl.AclEntry;, org.springframework.security.Authentication)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolver.resolveEffectiveAcls([Lorg.springframework.security.acl.AclEntry;, org.springframework.security.Authentication)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolver.resolveEffectiveAcls([Lorg.springframework.security.acl.AclEntry;, org.springframework.security.Authentication)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolver.resolveEffectiveAcls([Lorg.springframework.security.acl.AclEntry;, org.springframework.security.Authentication)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1465 - Declaração do método: org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolverTests.testResolveAclsReturnsNullIfNoAclsInFirstPlace()
Métodos invocados: 
org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolver.resolveEffectiveAcls([Lorg.springframework.security.acl.AclEntry;, org.springframework.security.Authentication)
junit.framework.Assert.assertNull(java.lang.Object)
1466 - Declaração do método: org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolverTests.testSkipsNonBasicAclEntryObjects()
Métodos invocados: 
org.springframework.security.acl.basic.GrantedAuthorityEffectiveAclsResolver.resolveEffectiveAcls([Lorg.springframework.security.acl.AclEntry;, org.springframework.security.Authentication)
junit.framework.Assert.assertEquals(I, I)
1467 - Declaração do método: org.springframework.security.acl.basic.SomeDomain.getId()
1467 - Declaração do método: org.springframework.security.acl.basic.SomeDomain.setId(I)
1467 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntryTests.SimpleAclEntryTests()
1467 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntryTests.SimpleAclEntryTests(java.lang.String)
1467 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntryTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1468 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntryTests.setUp()
1468 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntryTests.testCorrectOperation()
Métodos invocados: 
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acl.basic.AbstractBasicAclEntry.addPermission(I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acl.basic.AbstractBasicAclEntry.printPermissionsBlock()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acl.basic.AbstractBasicAclEntry.deletePermission(I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acl.basic.AbstractBasicAclEntry.printPermissionsBlock()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acl.basic.AbstractBasicAclEntry.addPermissions([I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.addPermission(I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acl.basic.AbstractBasicAclEntry.printPermissionsBlock()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acl.basic.AbstractBasicAclEntry.deletePermission(I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.deletePermissions([I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.printPermissionsBlock()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acl.basic.AbstractBasicAclEntry.togglePermission(I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acl.basic.AbstractBasicAclEntry.togglePermission(I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acl.basic.AbstractBasicAclEntry.togglePermission(I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.isPermitted(I)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acl.basic.AbstractBasicAclEntry.printPermissionsBlock()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1469 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntryTests.testDetectsNullOnMainConstructor()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1470 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntryTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.acl.basic.AbstractBasicAclEntry.setAclObjectIdentity(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.AbstractBasicAclEntry.getAclObjectIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.AbstractBasicAclEntry.setAclObjectParentIdentity(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.AbstractBasicAclEntry.getAclObjectParentIdentity()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.AbstractBasicAclEntry.setMask(I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.getMask()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.setRecipient(java.lang.Object)
org.springframework.security.acl.basic.AbstractBasicAclEntry.getRecipient()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1471 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntryTests.testRejectsInvalidMasksInAddMethod()
Métodos invocados: 
org.springframework.security.acl.basic.AbstractBasicAclEntry.addPermission(I)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1472 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntryTests.testRejectsInvalidMasksInDeleteMethod()
Métodos invocados: 
org.springframework.security.acl.basic.AbstractBasicAclEntry.addPermissions([I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.deletePermission(I)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1473 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntryTests.testRejectsInvalidMasksInTogglePermissionMethod()
Métodos invocados: 
org.springframework.security.acl.basic.AbstractBasicAclEntry.addPermissions([I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.togglePermission(I)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1474 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntryTests.testToString()
Métodos invocados: 
org.springframework.security.acl.basic.AbstractBasicAclEntry.addPermissions([I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.toString()
java.lang.String.endsWith(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1475 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntryTests.testParsePermission()
Métodos invocados: 
org.springframework.security.acl.basic.SimpleAclEntryTests.assertPermission(java.lang.String, I)
org.springframework.security.acl.basic.SimpleAclEntryTests.assertPermission(java.lang.String, I)
org.springframework.security.acl.basic.SimpleAclEntryTests.assertPermission(java.lang.String, I)
org.springframework.security.acl.basic.SimpleAclEntryTests.assertPermission(java.lang.String, I)
org.springframework.security.acl.basic.SimpleAclEntryTests.assertPermission(java.lang.String, I)
org.springframework.security.acl.basic.SimpleAclEntryTests.assertPermission(java.lang.String, I)
org.springframework.security.acl.basic.SimpleAclEntryTests.assertPermission(java.lang.String, I)
1476 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntryTests.testParsePermissionWrongValues()
Métodos invocados: 
org.springframework.security.acl.basic.SimpleAclEntry.parsePermission(java.lang.String)
java.lang.Class.getName()
junit.framework.Assert.fail(java.lang.String)
1477 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntryTests.assertPermission(java.lang.String, I)
Métodos invocados: 
org.springframework.security.acl.basic.SimpleAclEntry.parsePermission(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
1478 - Declaração do método: org.springframework.security.acl.basic.SimpleAclEntryTests.testGetPermissions()
Métodos invocados: 
org.springframework.security.acl.basic.SimpleAclEntry.getValidPermissions()
org.springframework.security.acl.basic.SimpleAclEntry.getValidPermissions()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1479 - Declaração do método: org.springframework.security.acl.basic.NamedEntityObjectIdentityTests.NamedEntityObjectIdentityTests()
1479 - Declaração do método: org.springframework.security.acl.basic.NamedEntityObjectIdentityTests.NamedEntityObjectIdentityTests(java.lang.String)
1479 - Declaração do método: org.springframework.security.acl.basic.NamedEntityObjectIdentityTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1480 - Declaração do método: org.springframework.security.acl.basic.NamedEntityObjectIdentityTests.setUp()
1480 - Declaração do método: org.springframework.security.acl.basic.NamedEntityObjectIdentityTests.testConstructionViaReflection()
Métodos invocados: 
org.springframework.security.acl.basic.SomeDomain.setId(I)
org.springframework.security.acl.basic.NamedEntityObjectIdentity.getId()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.lang.Object.getClass()
java.lang.Class.getName()
org.springframework.security.acl.basic.NamedEntityObjectIdentity.getClassname()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acl.basic.NamedEntityObjectIdentity.toString()
1481 - Declaração do método: org.springframework.security.acl.basic.NamedEntityObjectIdentityTests.testConstructionViaReflectionFailsIfNoGetIdMethod()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1482 - Declaração do método: org.springframework.security.acl.basic.NamedEntityObjectIdentityTests.testConstructionViaReflectionFailsIfNullPassed()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1483 - Declaração do método: org.springframework.security.acl.basic.NamedEntityObjectIdentityTests.testEquality()
Métodos invocados: 
org.springframework.security.acl.basic.NamedEntityObjectIdentity.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acl.basic.NamedEntityObjectIdentity.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acl.basic.NamedEntityObjectIdentity.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acl.basic.NamedEntityObjectIdentity.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acl.basic.NamedEntityObjectIdentity.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
1484 - Declaração do método: org.springframework.security.acl.basic.NamedEntityObjectIdentityTests.testNoArgConstructorDoesntExist()
Métodos invocados: 
java.lang.Class.getDeclaredConstructor([Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1485 - Declaração do método: org.springframework.security.acl.basic.NamedEntityObjectIdentityTests.testNormalConstructionRejectedIfInvalidArguments()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1486 - Declaração do método: org.springframework.security.acl.basic.NamedEntityObjectIdentityTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.acl.basic.NamedEntityObjectIdentity.getClassname()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acl.basic.NamedEntityObjectIdentity.getId()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1487 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests.BasicAclProviderTests()
1487 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests.BasicAclProviderTests(java.lang.String)
1487 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1488 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests.makePopulatedJdbcDao()
Métodos invocados: 
org.springframework.security.PopulatedDatabase.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.setDataSource(javax.sql.DataSource)
org.springframework.dao.support.DaoSupport.afterPropertiesSet()
1489 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests.setUp()
1489 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests.testCachingUsedProperly()
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclProviderTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.BasicAclProvider.setBasicAclDao(org.springframework.security.acl.basic.BasicAclDao)
org.springframework.security.acl.basic.BasicAclProvider.setBasicAclEntryCache(org.springframework.security.acl.basic.BasicAclEntryCache)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getGets()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getGetsHits()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getPuts()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getBackingMap()
java.util.Map.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProvider.getAcls(java.lang.Object)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getGets()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getGetsHits()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getPuts()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getBackingMap()
java.util.Map.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProvider.getAcls(java.lang.Object)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getGets()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getGetsHits()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getPuts()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getBackingMap()
java.util.Map.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProvider.getAcls(java.lang.Object)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getGets()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getGetsHits()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getPuts()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getBackingMap()
java.util.Map.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProvider.getAcls(java.lang.Object)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getGets()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getGetsHits()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getPuts()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getBackingMap()
java.util.Map.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProvider.getAcls(java.lang.Object)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getGets()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getGetsHits()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getPuts()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getBackingMap()
java.util.Map.size()
junit.framework.Assert.assertEquals(I, I)
1490 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests.testExceptionThrownIfUnsupportedObjectIsSubmitted()
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclProviderTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.BasicAclProvider.setBasicAclDao(org.springframework.security.acl.basic.BasicAclDao)
org.springframework.security.acl.basic.BasicAclProvider.supports(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acl.basic.BasicAclProvider.getAcls(java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1491 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests.testGetAclsForInstanceNotFound()
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclProviderTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.BasicAclProvider.setBasicAclDao(org.springframework.security.acl.basic.BasicAclDao)
org.springframework.security.acl.basic.BasicAclProvider.getAcls(java.lang.Object)
junit.framework.Assert.assertNull(java.lang.Object)
1492 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests.testGetAclsForInstanceWithParentLevels()
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclProviderTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.BasicAclProvider.setBasicAclDao(org.springframework.security.acl.basic.BasicAclDao)
org.springframework.security.acl.basic.BasicAclProvider.getAcls(java.lang.Object)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.BasicAclEntry.getMask()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1493 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests.testGetAclsForInstanceWithParentLevelsButNoDirectAclsAgainstInstance()
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclProviderTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.BasicAclProvider.setBasicAclDao(org.springframework.security.acl.basic.BasicAclDao)
org.springframework.security.acl.basic.BasicAclProvider.getAcls(java.lang.Object)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.BasicAclEntry.getMask()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.BasicAclEntry.getMask()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1494 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests.testGetAclsWithAuthentication()
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclProviderTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.BasicAclProvider.setBasicAclDao(org.springframework.security.acl.basic.BasicAclDao)
org.springframework.security.acl.basic.BasicAclProvider.getAcls(java.lang.Object, org.springframework.security.Authentication)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1495 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclProvider.getBasicAclEntryCache()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.BasicAclProvider.getDefaultAclObjectIdentityClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.BasicAclProvider.getEffectiveAclsResolver()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.BasicAclProvider.setBasicAclEntryCache(org.springframework.security.acl.basic.BasicAclEntryCache)
org.springframework.security.acl.basic.BasicAclProvider.getBasicAclEntryCache()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.acl.basic.BasicAclProvider.setDefaultAclObjectIdentityClass(java.lang.Class)
org.springframework.security.acl.basic.BasicAclProvider.getDefaultAclObjectIdentityClass()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.acl.basic.BasicAclProvider.setEffectiveAclsResolver(org.springframework.security.acl.basic.EffectiveAclsResolver)
org.springframework.security.acl.basic.BasicAclProvider.getEffectiveAclsResolver()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.acl.basic.BasicAclProvider.setBasicAclDao(org.springframework.security.acl.basic.BasicAclDao)
org.springframework.security.acl.basic.BasicAclProvider.getBasicAclDao()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acl.basic.BasicAclProvider.getRestrictSupportToClass()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.acl.basic.BasicAclProvider.setRestrictSupportToClass(java.lang.Class)
org.springframework.security.acl.basic.BasicAclProvider.getRestrictSupportToClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1496 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests.testStartupFailsIfNullAclDao()
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1497 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests.testStartupFailsIfNullEffectiveAclsResolver()
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclProviderTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.BasicAclProvider.setBasicAclDao(org.springframework.security.acl.basic.BasicAclDao)
org.springframework.security.acl.basic.BasicAclProvider.setEffectiveAclsResolver(org.springframework.security.acl.basic.EffectiveAclsResolver)
org.springframework.security.acl.basic.BasicAclProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1498 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests.testStartupFailsIfNullEntryCache()
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclProviderTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.BasicAclProvider.setBasicAclDao(org.springframework.security.acl.basic.BasicAclDao)
org.springframework.security.acl.basic.BasicAclProvider.setBasicAclEntryCache(org.springframework.security.acl.basic.BasicAclEntryCache)
org.springframework.security.acl.basic.BasicAclProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1499 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests.testStartupFailsIfProblemWithAclObjectIdentityClass()
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclProviderTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.BasicAclProvider.setBasicAclDao(org.springframework.security.acl.basic.BasicAclDao)
org.springframework.security.acl.basic.BasicAclProvider.setDefaultAclObjectIdentityClass(java.lang.Class)
org.springframework.security.acl.basic.BasicAclProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acl.basic.BasicAclProvider.setDefaultAclObjectIdentityClass(java.lang.Class)
org.springframework.security.acl.basic.BasicAclProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acl.basic.BasicAclProvider.setDefaultAclObjectIdentityClass(java.lang.Class)
org.springframework.security.acl.basic.BasicAclProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1500 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests.testSupports()
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclProviderTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.BasicAclProvider.setBasicAclDao(org.springframework.security.acl.basic.BasicAclDao)
org.springframework.security.acl.basic.BasicAclProvider.supports(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.acl.basic.BasicAclProvider.supports(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acl.basic.BasicAclProvider.supports(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acl.basic.BasicAclProvider.setRestrictSupportToClass(java.lang.Class)
org.springframework.security.acl.basic.BasicAclProvider.getRestrictSupportToClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.BasicAclProvider.supports(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.acl.basic.BasicAclProvider.supports(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1501 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests.testSupportsReturnsNullIfObjectNull()
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclProvider.supports(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1502 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getBackingMap()
1502 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
org.springframework.security.acl.basic.cache.BasicAclEntryHolder.getBasicAclEntries()
1503 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getGets()
1503 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getGetsHits()
1503 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.getPuts()
1503 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.putEntriesInCache([Lorg.springframework.security.acl.basic.BasicAclEntry;)
Métodos invocados: 
org.springframework.security.acl.basic.BasicAclEntry.getAclObjectIdentity()
java.util.Map.put(java.lang.Object, java.lang.Object)
1504 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests$MockCache.removeEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
1504 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests$MockDao.getAcls(org.springframework.security.acl.basic.AclObjectIdentity)
1504 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests$MockDomain.MockDomain(I)
1504 - Declaração do método: org.springframework.security.acl.basic.BasicAclProviderTests$MockDomain.getAclObjectIdentity()
Métodos invocados: 
java.lang.Integer.toString()
1505 - Declaração do método: org.springframework.security.acl.basic.cache.BasicAclEntryHolderTests.BasicAclEntryHolderTests()
1505 - Declaração do método: org.springframework.security.acl.basic.cache.BasicAclEntryHolderTests.BasicAclEntryHolderTests(java.lang.String)
1505 - Declaração do método: org.springframework.security.acl.basic.cache.BasicAclEntryHolderTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1506 - Declaração do método: org.springframework.security.acl.basic.cache.BasicAclEntryHolderTests.setUp()
1506 - Declaração do método: org.springframework.security.acl.basic.cache.BasicAclEntryHolderTests.testRejectsNull()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1507 - Declaração do método: org.springframework.security.acl.basic.cache.NullAclEntryCacheTests.NullAclEntryCacheTests()
1507 - Declaração do método: org.springframework.security.acl.basic.cache.NullAclEntryCacheTests.NullAclEntryCacheTests(java.lang.String)
1507 - Declaração do método: org.springframework.security.acl.basic.cache.NullAclEntryCacheTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1508 - Declaração do método: org.springframework.security.acl.basic.cache.NullAclEntryCacheTests.setUp()
1508 - Declaração do método: org.springframework.security.acl.basic.cache.NullAclEntryCacheTests.testCacheOperation()
Métodos invocados: 
org.springframework.security.acl.basic.cache.NullAclEntryCache.putEntriesInCache([Lorg.springframework.security.acl.basic.BasicAclEntry;)
org.springframework.security.acl.basic.cache.NullAclEntryCache.getEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.cache.NullAclEntryCache.removeEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
1509 - Declaração do método: org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCacheTests.initCacheManaer()
Métodos invocados: 
net.sf.ehcache.CacheManager.addCache(net.sf.ehcache.Cache)
1510 - Declaração do método: org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCacheTests.shutdownCacheManager()
Métodos invocados: 
net.sf.ehcache.CacheManager.removalAll()
net.sf.ehcache.CacheManager.shutdown()
1511 - Declaração do método: org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCacheTests.getCache()
Métodos invocados: 
net.sf.ehcache.CacheManager.getCache(java.lang.String)
net.sf.ehcache.Ehcache.removeAll()
1512 - Declaração do método: org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCacheTests.cacheOperationSucceeds()
Métodos invocados: 
org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCacheTests.getCache()
org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCache.setCache(net.sf.ehcache.Ehcache)
org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCache.afterPropertiesSet()
org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCache.putEntriesInCache([Lorg.springframework.security.acl.basic.BasicAclEntry;)
org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCache.putEntriesInCache([Lorg.springframework.security.acl.basic.BasicAclEntry;)
org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCache.getEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCache.getEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCache.getEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCache.getEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCache.removeEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCache.getEntriesFromCache(org.springframework.security.acl.basic.AclObjectIdentity)
org.junit.Assert.assertNull(java.lang.Object)
1513 - Declaração do método: org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCacheTests.startupDetectsMissingCache()
Métodos invocados: 
org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCache.afterPropertiesSet()
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCacheTests.getCache()
org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCache.setCache(net.sf.ehcache.Ehcache)
org.springframework.security.acl.basic.cache.EhCacheBasedAclEntryCache.getCache()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1514 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImplTests.JdbcDaoImplTests()
1514 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImplTests.JdbcDaoImplTests(java.lang.String)
1514 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImplTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1515 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
Métodos invocados: 
org.springframework.security.PopulatedDatabase.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.setDataSource(javax.sql.DataSource)
org.springframework.dao.support.DaoSupport.afterPropertiesSet()
1516 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImplTests.setUp()
1516 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImplTests.testExceptionThrownIfBasicAclEntryClassNotFound()
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAcls(org.springframework.security.acl.basic.AclObjectIdentity)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1517 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImplTests.testGetsEntriesWhichExistInDatabaseAndHaveAcls()
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAcls(org.springframework.security.acl.basic.AclObjectIdentity)
junit.framework.Assert.assertEquals(I, I)
1518 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImplTests.testGetsEntriesWhichExistInDatabaseButHaveNoAcls()
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAcls(org.springframework.security.acl.basic.AclObjectIdentity)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1519 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImplTests.testGetsEntriesWhichHaveNoParent()
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAcls(org.springframework.security.acl.basic.AclObjectIdentity)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclEntry.getAclObjectParentIdentity()
junit.framework.Assert.assertNull(java.lang.Object)
1520 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImplTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.setAclsByObjectIdentity(org.springframework.jdbc.object.MappingSqlQuery)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAclsByObjectIdentity()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.setAclsByObjectIdentityQuery(java.lang.String)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAclsByObjectIdentityQuery()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.setObjectPropertiesQuery(java.lang.String)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getObjectPropertiesQuery()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1521 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImplTests.testNullReturnedIfEntityNotFound()
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAcls(org.springframework.security.acl.basic.AclObjectIdentity)
junit.framework.Assert.assertNull(java.lang.Object)
1522 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImplTests.testReturnsNullForUnNamedEntityObjectIdentity()
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAcls(org.springframework.security.acl.basic.AclObjectIdentity)
junit.framework.Assert.assertNull(java.lang.Object)
1523 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcDaoImplTests$MockMappingSqlQuery.mapRow(java.sql.ResultSet, I)
1523 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.JdbcExtendedDaoImplTests()
1523 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.JdbcExtendedDaoImplTests(java.lang.String)
1523 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1524 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.makePopulatedJdbcDao()
Métodos invocados: 
org.springframework.security.PopulatedDatabase.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.setDataSource(javax.sql.DataSource)
org.springframework.dao.support.DaoSupport.afterPropertiesSet()
1525 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.setUp()
1525 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.testChangeMask()
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.create(org.springframework.security.acl.basic.BasicAclEntry)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.create(org.springframework.security.acl.basic.BasicAclEntry)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAcls(org.springframework.security.acl.basic.AclObjectIdentity)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclEntry.getMask()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclEntry.getMask()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.changeMask(org.springframework.security.acl.basic.AclObjectIdentity, java.lang.Object, java.lang.Integer)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.changeMask(org.springframework.security.acl.basic.AclObjectIdentity, java.lang.Object, java.lang.Integer)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAcls(org.springframework.security.acl.basic.AclObjectIdentity)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.BasicAclEntry.getMask()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.BasicAclEntry.getMask()
junit.framework.Assert.assertEquals(I, I)
1526 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.testChangeMaskThrowsExceptionWhenExistingRecordNotFound()
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.create(org.springframework.security.acl.basic.BasicAclEntry)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.changeMask(org.springframework.security.acl.basic.AclObjectIdentity, java.lang.Object, java.lang.Integer)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1527 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.testConvertAclObjectIdentity()
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.convertAclObjectIdentityToString(org.springframework.security.acl.basic.AclObjectIdentity)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1528 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.testCreationOfIdentityThenAclInSeparateInvocations()
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.AbstractBasicAclEntry.setAclObjectIdentity(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.AbstractBasicAclEntry.setAclObjectParentIdentity(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.create(org.springframework.security.acl.basic.BasicAclEntry)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.delete(org.springframework.security.acl.basic.AclObjectIdentity)
1529 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.testDeletionOfAllRecipients()
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.create(org.springframework.security.acl.basic.BasicAclEntry)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.create(org.springframework.security.acl.basic.BasicAclEntry)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAcls(org.springframework.security.acl.basic.AclObjectIdentity)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.delete(org.springframework.security.acl.basic.AclObjectIdentity)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAcls(org.springframework.security.acl.basic.AclObjectIdentity)
junit.framework.Assert.assertNull(java.lang.Object)
1530 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.testDeletionOfSpecificRecipient()
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.create(org.springframework.security.acl.basic.BasicAclEntry)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.create(org.springframework.security.acl.basic.BasicAclEntry)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAcls(org.springframework.security.acl.basic.AclObjectIdentity)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.delete(org.springframework.security.acl.basic.AclObjectIdentity, java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAcls(org.springframework.security.acl.basic.AclObjectIdentity)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.getRecipient()
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1531 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclObjectIdentityDelete()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclObjectIdentityDelete(org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclObjectIdentityDelete)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclObjectIdentityDelete()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclObjectIdentityInsert()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclObjectIdentityInsert(org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclObjectIdentityInsert)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclObjectIdentityInsert()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclPermissionDelete()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclPermissionDelete(org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclPermissionDelete)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclPermissionDelete()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclPermissionInsert()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclPermissionInsert(org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclPermissionInsert)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclPermissionInsert()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclPermissionUpdate()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclPermissionUpdate(org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl$AclPermissionUpdate)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclPermissionUpdate()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAclsByObjectIdentity()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.setAclsByObjectIdentity(org.springframework.jdbc.object.MappingSqlQuery)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAclsByObjectIdentity()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getLookupPermissionIdMapping()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setLookupPermissionIdMapping(org.springframework.jdbc.object.MappingSqlQuery)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getLookupPermissionIdMapping()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclObjectIdentityDeleteStatement()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclObjectIdentityDeleteStatement(java.lang.String)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclObjectIdentityDeleteStatement()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclObjectIdentityInsertStatement()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclObjectIdentityInsertStatement(java.lang.String)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclObjectIdentityInsertStatement()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclPermissionDeleteStatement()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclPermissionDeleteStatement(java.lang.String)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclPermissionDeleteStatement()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclPermissionInsertStatement()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclPermissionInsertStatement(java.lang.String)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclPermissionInsertStatement()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclPermissionUpdateStatement()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setAclPermissionUpdateStatement(java.lang.String)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getAclPermissionUpdateStatement()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAclsByObjectIdentityQuery()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.setAclsByObjectIdentityQuery(java.lang.String)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAclsByObjectIdentityQuery()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getLookupPermissionIdQuery()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.setLookupPermissionIdQuery(java.lang.String)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.getLookupPermissionIdQuery()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1532 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.testNormalCreationAndDuplicateDetection()
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.create(org.springframework.security.acl.basic.BasicAclEntry)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.create(org.springframework.security.acl.basic.BasicAclEntry)
org.springframework.security.acl.basic.jdbc.JdbcDaoImpl.getAcls(org.springframework.security.acl.basic.AclObjectIdentity)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.getRecipient()
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.AbstractBasicAclEntry.getMask()
org.springframework.security.acl.basic.BasicAclEntry.getMask()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.AbstractBasicAclEntry.getRecipient()
org.springframework.security.acl.basic.BasicAclEntry.getRecipient()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.acl.basic.AbstractBasicAclEntry.getMask()
org.springframework.security.acl.basic.BasicAclEntry.getMask()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.create(org.springframework.security.acl.basic.BasicAclEntry)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1533 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.testRejectsInvalidParent()
Métodos invocados: 
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImpl.create(org.springframework.security.acl.basic.BasicAclEntry)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1534 - Declaração do método: org.springframework.security.acl.basic.jdbc.JdbcExtendedDaoImplTests$MockMappingSqlQuery.mapRow(java.sql.ResultSet, I)
1534 - Declaração do método: org.springframework.security.adapters.HttpRequestIntegrationFilterTests.HttpRequestIntegrationFilterTests()
1534 - Declaração do método: org.springframework.security.adapters.HttpRequestIntegrationFilterTests.HttpRequestIntegrationFilterTests(java.lang.String)
1534 - Declaração do método: org.springframework.security.adapters.HttpRequestIntegrationFilterTests.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
1535 - Declaração do método: org.springframework.security.adapters.HttpRequestIntegrationFilterTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
1536 - Declaração do método: org.springframework.security.adapters.HttpRequestIntegrationFilterTests.testCorrectOperation()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setUserPrincipal(java.security.Principal)
org.springframework.security.adapters.HttpRequestIntegrationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
java.io.PrintStream.println(java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1537 - Declaração do método: org.springframework.security.adapters.HttpRequestIntegrationFilterTests.testHandlesIfHttpRequestIsNullForSomeReason()
Métodos invocados: 
org.springframework.security.adapters.HttpRequestIntegrationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1538 - Declaração do método: org.springframework.security.adapters.HttpRequestIntegrationFilterTests.testHandlesIfThereIsNoPrincipal()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.adapters.HttpRequestIntegrationFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
1539 - Declaração do método: org.springframework.security.adapters.MockPrincipal.getName()
1539 - Declaração do método: org.springframework.security.adapters.PrincipalSpringSecurityUserTokenTests.PrincipalSpringSecurityUserTokenTests()
1539 - Declaração do método: org.springframework.security.adapters.PrincipalSpringSecurityUserTokenTests.PrincipalSpringSecurityUserTokenTests(java.lang.String)
1539 - Declaração do método: org.springframework.security.adapters.PrincipalSpringSecurityUserTokenTests.testGetters()
Métodos invocados: 
org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.String.hashCode()
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1540 - Declaração do método: org.springframework.security.adapters.PrincipalSpringSecurityUserTokenTests.testNoArgConstructorDoesntExist()
Métodos invocados: 
java.lang.Class.getDeclaredConstructor([Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1541 - Declaração do método: org.springframework.security.adapters.AbstractAdapterAuthenticationTokenTests.AbstractAdapterAuthenticationTokenTests()
1541 - Declaração do método: org.springframework.security.adapters.AbstractAdapterAuthenticationTokenTests.AbstractAdapterAuthenticationTokenTests(java.lang.String)
1541 - Declaração do método: org.springframework.security.adapters.AbstractAdapterAuthenticationTokenTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1542 - Declaração do método: org.springframework.security.adapters.AbstractAdapterAuthenticationTokenTests.setUp()
1542 - Declaração do método: org.springframework.security.adapters.AbstractAdapterAuthenticationTokenTests.testGetters()
Métodos invocados: 
org.springframework.security.adapters.AbstractAdapterAuthenticationTokenTests$MockDecisionManagerImpl.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.AbstractAdapterAuthenticationTokenTests$MockDecisionManagerImpl.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.String.hashCode()
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
1543 - Declaração do método: org.springframework.security.adapters.AbstractAdapterAuthenticationTokenTests.testIsUserInRole()
Métodos invocados: 
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.isUserInRole(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.isUserInRole(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.isUserInRole(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.isUserInRole(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.isUserInRole(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.isUserInRole(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1544 - Declaração do método: org.springframework.security.adapters.AbstractAdapterAuthenticationTokenTests.testObjectsEquals()
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
1545 - Declaração do método: org.springframework.security.adapters.AbstractAdapterAuthenticationTokenTests.testSetAuthenticatedAlwaysReturnsTrue()
Métodos invocados: 
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.setAuthenticated(Z)
org.springframework.security.adapters.AbstractAdapterAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
1546 - Declaração do método: org.springframework.security.adapters.AbstractAdapterAuthenticationTokenTests$MockDecisionManagerImpl.MockDecisionManagerImpl(java.lang.String, java.lang.String, java.lang.String, [Lorg.springframework.security.GrantedAuthority;)
1546 - Declaração do método: org.springframework.security.adapters.AbstractAdapterAuthenticationTokenTests$MockDecisionManagerImpl.getCredentials()
1546 - Declaração do método: org.springframework.security.adapters.AbstractAdapterAuthenticationTokenTests$MockDecisionManagerImpl.getPrincipal()
1546 - Declaração do método: org.springframework.security.adapters.AuthByAdapterTests.AuthByAdapterTests()
1546 - Declaração do método: org.springframework.security.adapters.AuthByAdapterTests.AuthByAdapterTests(java.lang.String)
1546 - Declaração do método: org.springframework.security.adapters.AuthByAdapterTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1547 - Declaração do método: org.springframework.security.adapters.AuthByAdapterTests.setUp()
1547 - Declaração do método: org.springframework.security.adapters.AuthByAdapterTests.testAuthByAdapterProviderCorrectAuthenticationOperation()
Métodos invocados: 
org.springframework.security.adapters.AuthByAdapterProvider.setKey(java.lang.String)
java.lang.Object.getClass()
org.springframework.security.adapters.AuthByAdapterProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.AuthByAdapterProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getCredentials()
org.springframework.security.Authentication.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getPrincipal()
org.springframework.security.Authentication.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.Authentication.getAuthorities()
java.util.Arrays.equals([Ljava.lang.Object;, [Ljava.lang.Object;)
junit.framework.Assert.assertTrue(Z)
java.lang.Object.getClass()
java.lang.Object.getClass()
java.lang.Object.equals(java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getName()
org.springframework.security.adapters.PrincipalSpringSecurityUserToken.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1548 - Declaração do método: org.springframework.security.adapters.AuthByAdapterTests.testAuthByAdapterProviderNonAuthenticationMethods()
Métodos invocados: 
org.springframework.security.adapters.AuthByAdapterProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.AuthByAdapterProvider.setKey(java.lang.String)
org.springframework.security.adapters.AuthByAdapterProvider.afterPropertiesSet()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.AuthByAdapterProvider.getKey()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1549 - Declaração do método: org.springframework.security.adapters.AuthByAdapterTests.testAuthByAdapterProviderOnlyAcceptsAuthByAdapterImplementations()
Métodos invocados: 
org.springframework.security.adapters.AuthByAdapterProvider.setKey(java.lang.String)
java.lang.Object.getClass()
org.springframework.security.adapters.AuthByAdapterProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.adapters.AuthByAdapterProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1550 - Declaração do método: org.springframework.security.adapters.AuthByAdapterTests.testAuthByAdapterProviderRequiresCorrectKey()
Métodos invocados: 
org.springframework.security.adapters.AuthByAdapterProvider.setKey(java.lang.String)
org.springframework.security.adapters.AuthByAdapterProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1551 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProviderTests.BasicAclEntryAfterInvocationCollectionFilteringProviderTests()
1551 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProviderTests.BasicAclEntryAfterInvocationCollectionFilteringProviderTests(java.lang.String)
1551 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProviderTests.testCorrectOperationWhenPrincipalHasIncorrectPermissionToDomainObject()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.afterPropertiesSet()
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
1552 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProviderTests.testCorrectOperationWhenPrincipalHasNoPermissionToDomainObject()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.afterPropertiesSet()
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
1553 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProviderTests.testCorrectOperationWhenPrincipalIsAuthorised()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.getAclManager()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.afterPropertiesSet()
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
java.util.List.get(I)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1554 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProviderTests.testCorrectOperationWhenReturnedObjectIsArray()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.getAclManager()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.afterPropertiesSet()
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1555 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProviderTests.testDetectsIfReturnedObjectIsNotACollection()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.afterPropertiesSet()
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1556 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProviderTests.testGrantsAccessIfReturnedObjectIsNull()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.afterPropertiesSet()
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
junit.framework.Assert.assertNull(java.lang.Object)
1557 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProviderTests.testRespectsModificationsToProcessConfigAttribute()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.getProcessConfigAttribute()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setProcessConfigAttribute(java.lang.String)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.getProcessConfigAttribute()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.afterPropertiesSet()
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
java.util.List.get(I)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1558 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProviderTests.testRespectsModificationsToRequirePermissions()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.getRequirePermission()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setRequirePermission([I)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.getRequirePermission()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.afterPropertiesSet()
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
java.util.List.get(I)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1559 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProviderTests.testStartupDetectsMissingAclManager()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1560 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProviderTests.testStartupDetectsMissingProcessConfigAttribute()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setProcessConfigAttribute(java.lang.String)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1561 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProviderTests.testStartupDetectsMissingRequirePermission()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.setRequirePermission([I)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1562 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProviderTests.testSupportsAnything()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
1563 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProviderManagerTests.AfterInvocationProviderManagerTests()
1563 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProviderManagerTests.AfterInvocationProviderManagerTests(java.lang.String)
1563 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProviderManagerTests.testCorrectOperation()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.afterinvocation.AfterInvocationProviderManager.setProviders(java.util.List)
org.springframework.security.afterinvocation.AfterInvocationProviderManager.getProviders()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.afterinvocation.AfterInvocationProviderManager.afterPropertiesSet()
org.springframework.security.afterinvocation.AfterInvocationProviderManager.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.afterinvocation.AfterInvocationProviderManager.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.afterinvocation.AfterInvocationProviderManager.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.afterinvocation.AfterInvocationProviderManager.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.afterinvocation.AfterInvocationProviderManager.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1564 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProviderManagerTests.testRejectsEmptyProvidersList()
Métodos invocados: 
org.springframework.security.afterinvocation.AfterInvocationProviderManager.setProviders(java.util.List)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1565 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProviderManagerTests.testRejectsNonAfterInvocationProviders()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.afterinvocation.AfterInvocationProviderManager.setProviders(java.util.List)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1566 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProviderManagerTests.testRejectsNullProvidersList()
Métodos invocados: 
org.springframework.security.afterinvocation.AfterInvocationProviderManager.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1567 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProviderManagerTests.testSupportsConfigAttributeIteration()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.afterinvocation.AfterInvocationProviderManager.setProviders(java.util.List)
org.springframework.security.afterinvocation.AfterInvocationProviderManager.afterPropertiesSet()
org.springframework.security.afterinvocation.AfterInvocationProviderManager.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.afterinvocation.AfterInvocationProviderManager.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
1568 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProviderManagerTests.testSupportsSecureObjectIteration()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.afterinvocation.AfterInvocationProviderManager.setProviders(java.util.List)
org.springframework.security.afterinvocation.AfterInvocationProviderManager.afterPropertiesSet()
org.springframework.security.afterinvocation.AfterInvocationProviderManager.supports(java.lang.Class)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.afterinvocation.AfterInvocationProviderManager.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
1569 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProviderManagerTests$MockAfterInvocationProvider.MockAfterInvocationProvider(java.lang.Object, java.lang.Class, org.springframework.security.ConfigAttribute)
1569 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProviderManagerTests$MockAfterInvocationProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.contains(org.springframework.security.ConfigAttribute)
1570 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProviderManagerTests$MockAfterInvocationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
1571 - Declaração do método: org.springframework.security.afterinvocation.AfterInvocationProviderManagerTests$MockAfterInvocationProvider.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
1572 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProviderTests.testCorrectOperationWhenPrincipalHasIncorrectPermissionToDomainObject()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.afterPropertiesSet()
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1573 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProviderTests.testCorrectOperationWhenPrincipalHasNoPermissionToDomainObject()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.afterPropertiesSet()
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1574 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProviderTests.testCorrectOperationWhenPrincipalIsAuthorised()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.getAclManager()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.afterPropertiesSet()
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1575 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProviderTests.testGrantsAccessIfReturnedObjectIsNull()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.afterPropertiesSet()
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
junit.framework.Assert.assertNull(java.lang.Object)
1576 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProviderTests.testRespectsModificationsToProcessConfigAttribute()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.getProcessConfigAttribute()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.setProcessConfigAttribute(java.lang.String)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.getProcessConfigAttribute()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.afterPropertiesSet()
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1577 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProviderTests.testRespectsModificationsToRequirePermissions()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.getRequirePermission()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.setRequirePermission([I)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.getRequirePermission()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.afterPropertiesSet()
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1578 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProviderTests.testStartupDetectsMissingAclManager()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1579 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProviderTests.testStartupDetectsMissingProcessConfigAttribute()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.setProcessConfigAttribute(java.lang.String)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1580 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProviderTests.testStartupDetectsMissingRequirePermission()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.setRequirePermission([I)
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1581 - Declaração do método: org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProviderTests.testSupportsAnything()
Métodos invocados: 
org.springframework.security.afterinvocation.BasicAclEntryAfterInvocationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
1582 - Declaração do método: org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.testAfterPropertiesSetConvertToUpperAndLowerCase()
Métodos invocados: 
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToLowerCase(Z)
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToUpperCase(Z)
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
1583 - Declaração do método: org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.testAfterPropertiesSet()
Métodos invocados: 
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
1584 - Declaração do método: org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthoritiesNoConversion()
Métodos invocados: 
org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.getDefaultMapper()
org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthorities(org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1585 - Declaração do método: org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthoritiesToUpperCase()
Métodos invocados: 
org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.getDefaultMapper()
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToUpperCase(Z)
org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthorities(org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1586 - Declaração do método: org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthoritiesToLowerCase()
Métodos invocados: 
org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.getDefaultMapper()
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToLowerCase(Z)
org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthorities(org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1587 - Declaração do método: org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthoritiesAddPrefixIfAlreadyExisting()
Métodos invocados: 
org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.getDefaultMapper()
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.setAddPrefixIfAlreadyExisting(Z)
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.seAttributePrefix(java.lang.String)
org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthorities(org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1588 - Declaração do método: org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthoritiesDontAddPrefixIfAlreadyExisting1()
Métodos invocados: 
org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.getDefaultMapper()
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.setAddPrefixIfAlreadyExisting(Z)
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.seAttributePrefix(java.lang.String)
org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthorities(org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1589 - Declaração do método: org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthoritiesDontAddPrefixIfAlreadyExisting2()
Métodos invocados: 
org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.getDefaultMapper()
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.setAddPrefixIfAlreadyExisting(Z)
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.seAttributePrefix(java.lang.String)
org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthorities(org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1590 - Declaração do método: org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthoritiesCombination1()
Métodos invocados: 
org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.getDefaultMapper()
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.setAddPrefixIfAlreadyExisting(Z)
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToUpperCase(Z)
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.seAttributePrefix(java.lang.String)
org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthorities(org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
1591 - Declaração do método: org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.testGetGrantedAuthorities(org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper, [Ljava.lang.String;, [Ljava.lang.String;)
Métodos invocados: 
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.getGrantedAuthorities([Ljava.lang.String;)
org.springframework.security.GrantedAuthority.getAuthority()
java.util.Collection.add(java.lang.Object)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Collection.containsAll(java.util.Collection)
java.util.Collection.containsAll(java.util.Collection)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1592 - Declaração do método: org.springframework.security.authoritymapping.SimpleRoles2GrantedAuthoritiesMapperTests.getDefaultMapper()
Métodos invocados: 
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.seAttributePrefix(java.lang.String)
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToLowerCase(Z)
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToUpperCase(Z)
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.setAddPrefixIfAlreadyExisting(Z)
1593 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableRolesRetrieverTests.testAfterPropertiesSetException()
Métodos invocados: 
org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
1594 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableRolesRetrieverTests.testGetMappableRoles()
Métodos invocados: 
org.springframework.security.authoritymapping.XmlMappableRolesRetrieverTests.getDefaultInputStream()
org.springframework.security.authoritymapping.XmlMappableRolesRetrieverTests.getXmlMappableRolesRetriever(Z, java.io.InputStream, java.lang.String)
org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.getMappableAttributes()
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Collection.containsAll(java.util.Collection)
java.util.Collection.containsAll(java.util.Collection)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1595 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableRolesRetrieverTests.testCloseInputStream()
Métodos invocados: 
org.springframework.security.authoritymapping.XmlMappableRolesRetrieverTests.testCloseInputStream(Z)
1596 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableRolesRetrieverTests.testDontCloseInputStream()
Métodos invocados: 
org.springframework.security.authoritymapping.XmlMappableRolesRetrieverTests.testCloseInputStream(Z)
1597 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableRolesRetrieverTests.testCloseInputStream(Z)
Métodos invocados: 
org.springframework.security.authoritymapping.XmlMappableRolesRetrieverTests.getDefaultInputStream()
org.springframework.security.authoritymapping.XmlMappableRolesRetrieverTests.getXmlMappableRolesRetriever(Z, java.io.InputStream, java.lang.String)
org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.getMappableAttributes()
org.springframework.security.authoritymapping.XmlMappableRolesRetrieverTests$CloseableByteArrayInputStream.isClosed()
junit.framework.Assert.assertEquals(Z, Z)
1598 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableRolesRetrieverTests.getXmlMappableRolesRetriever(Z, java.io.InputStream, java.lang.String)
Métodos invocados: 
org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.setCloseInputStream(Z)
org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.setXmlInputStream(java.io.InputStream)
org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.setXpathExpression(java.lang.String)
org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.afterPropertiesSet()
java.lang.Throwable.toString()
junit.framework.Assert.fail(java.lang.String)
1599 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableRolesRetrieverTests.getDefaultInputStream()
Métodos invocados: 
org.springframework.security.authoritymapping.XmlMappableRolesRetrieverTests.getInputStream(java.lang.String)
1600 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableRolesRetrieverTests.getInputStream(java.lang.String)
Métodos invocados: 
java.lang.String.getBytes()
1601 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableRolesRetrieverTests$CloseableByteArrayInputStream.CloseableByteArrayInputStream([B)
1601 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableRolesRetrieverTests$CloseableByteArrayInputStream.close()
1601 - Declaração do método: org.springframework.security.authoritymapping.XmlMappableRolesRetrieverTests$CloseableByteArrayInputStream.isClosed()
1601 - Declaração do método: org.springframework.security.authoritymapping.SimpleMappableRolesRetrieverTests.testGetSetMappableRoles()
Métodos invocados: 
org.springframework.security.authoritymapping.SimpleMappableAttributesRetriever.setMappableAttributes([Ljava.lang.String;)
org.springframework.security.authoritymapping.SimpleMappableAttributesRetriever.getMappableAttributes()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Collection.containsAll(java.util.Collection)
java.util.Collection.containsAll(java.util.Collection)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1602 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImplTests.setUp()
1602 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImplTests.testEventPublishing()
Métodos invocados: 
org.springframework.mock.web.MockHttpSession.getId()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.concurrent.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.security.concurrent.SessionRegistryImpl.onApplicationEvent(org.springframework.context.ApplicationEvent)
org.springframework.security.concurrent.SessionRegistryImpl.getSessionInformation(java.lang.String)
junit.framework.Assert.assertNull(java.lang.Object)
1603 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImplTests.testMultiplePrincipals()
Métodos invocados: 
org.springframework.security.concurrent.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.security.concurrent.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.security.concurrent.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.security.concurrent.SessionRegistryImpl.getAllPrincipals()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.concurrent.SessionRegistryImpl.getAllPrincipals()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1604 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImplTests.testSessionInformationLifecycle()
Métodos invocados: 
org.springframework.security.concurrent.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.security.concurrent.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionInformation.getLastRequest()
org.springframework.security.concurrent.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionInformation.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.concurrent.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionInformation.getSessionId()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.concurrent.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionInformation.getLastRequest()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.concurrent.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
junit.framework.Assert.assertEquals(I, I)
java.lang.Thread.sleep(J)
org.springframework.security.concurrent.SessionRegistryImpl.refreshLastRequest(java.lang.String)
org.springframework.security.concurrent.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionInformation.getLastRequest()
java.util.Date.after(java.util.Date)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.concurrent.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
org.springframework.security.concurrent.SessionInformation.getLastRequest()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.concurrent.SessionRegistryImpl.removeSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionRegistryImpl.getSessionInformation(java.lang.String)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.concurrent.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
junit.framework.Assert.assertNull(java.lang.Object)
1605 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImplTests.testTwoSessionsOnePrincipalExpiring()
Métodos invocados: 
org.springframework.security.concurrent.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.security.concurrent.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.concurrent.SessionRegistryImplTests.contains(java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.concurrent.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.security.concurrent.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.concurrent.SessionRegistryImplTests.contains(java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.concurrent.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionInformation.expireNow()
org.springframework.security.concurrent.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionInformation.isExpired()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.concurrent.SessionRegistryImpl.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionInformation.isExpired()
junit.framework.Assert.assertFalse(Z)
1606 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImplTests.testTwoSessionsOnePrincipalHandling()
Métodos invocados: 
org.springframework.security.concurrent.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.security.concurrent.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.concurrent.SessionRegistryImplTests.contains(java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.concurrent.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.security.concurrent.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.concurrent.SessionRegistryImplTests.contains(java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.concurrent.SessionRegistryImpl.removeSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.concurrent.SessionRegistryImplTests.contains(java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.concurrent.SessionRegistryImpl.removeSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionRegistryImpl.getSessionInformation(java.lang.String)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.concurrent.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
junit.framework.Assert.assertNull(java.lang.Object)
1607 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImplTests.contains(java.lang.String, java.lang.Object)
Métodos invocados: 
org.springframework.security.concurrent.SessionRegistryImpl.getAllSessions(java.lang.Object, Z)
org.springframework.security.concurrent.SessionInformation.getSessionId()
java.lang.String.equals(java.lang.Object)
1608 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionFilterTests.ConcurrentSessionFilterTests(java.lang.String)
1608 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.Filter.init(javax.servlet.FilterConfig)
javax.servlet.Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
javax.servlet.Filter.destroy()
1609 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionFilterTests.testDetectsExpiredSessions()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.springframework.mock.web.MockHttpSession.getId()
org.springframework.security.concurrent.SessionRegistry.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpSession.getId()
org.springframework.security.concurrent.SessionRegistry.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionInformation.expireNow()
org.springframework.security.concurrent.ConcurrentSessionFilter.setSessionRegistry(org.springframework.security.concurrent.SessionRegistry)
org.springframework.security.concurrent.ConcurrentSessionFilter.setExpiredUrl(java.lang.String)
org.springframework.security.concurrent.ConcurrentSessionFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1610 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionFilterTests.testReturnsExpectedMessageWhenNoExpiredUrlSet()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.springframework.mock.web.MockHttpSession.getId()
org.springframework.security.concurrent.SessionRegistry.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpSession.getId()
org.springframework.security.concurrent.SessionRegistry.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionInformation.expireNow()
org.springframework.security.concurrent.ConcurrentSessionFilter.setSessionRegistry(org.springframework.security.concurrent.SessionRegistry)
org.springframework.security.concurrent.ConcurrentSessionFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getContentAsString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1611 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionFilterTests.testDetectsMissingSessionRegistry()
Métodos invocados: 
org.springframework.security.concurrent.ConcurrentSessionFilter.setExpiredUrl(java.lang.String)
org.springframework.security.concurrent.ConcurrentSessionFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1612 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionFilterTests.testUpdatesLastRequestTime()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.springframework.mock.web.MockHttpSession.getId()
org.springframework.security.concurrent.SessionRegistry.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpSession.getId()
org.springframework.security.concurrent.SessionRegistry.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionInformation.getLastRequest()
org.springframework.security.concurrent.ConcurrentSessionFilter.setSessionRegistry(org.springframework.security.concurrent.SessionRegistry)
org.springframework.security.concurrent.ConcurrentSessionFilter.setExpiredUrl(java.lang.String)
java.lang.Thread.sleep(J)
org.springframework.security.concurrent.ConcurrentSessionFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpSession.getId()
org.springframework.security.concurrent.SessionRegistry.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionInformation.getLastRequest()
java.util.Date.after(java.util.Date)
junit.framework.Assert.assertTrue(Z)
1613 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionFilterTests$MockFilterChain.MockFilterChain(Z)
1613 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionFilterTests$MockFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
Métodos invocados: 
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
1614 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionControllerImplTests.createAuthentication(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.concurrent.ConcurrentSessionControllerImplTests.createWebDetails(org.springframework.security.Authentication)
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
1615 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionControllerImplTests.createWebDetails(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.springframework.mock.web.MockHttpServletRequest.setUserPrincipal(java.security.Principal)
1616 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionControllerImplTests.testLifecycle()
Métodos invocados: 
org.springframework.security.concurrent.ConcurrentSessionControllerImpl.setSessionRegistry(org.springframework.security.concurrent.SessionRegistry)
org.springframework.security.concurrent.ConcurrentSessionControllerImplTests.createAuthentication(java.lang.String, java.lang.String)
org.springframework.security.concurrent.ConcurrentSessionControllerImpl.checkAuthenticationAllowed(org.springframework.security.Authentication)
org.springframework.security.concurrent.ConcurrentSessionControllerImpl.registerSuccessfulAuthentication(org.springframework.security.Authentication)
org.springframework.security.Authentication.getDetails()
org.springframework.security.ui.WebAuthenticationDetails.getSessionId()
org.springframework.security.concurrent.SessionRegistry.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionInformation.isExpired()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.concurrent.ConcurrentSessionControllerImpl.checkAuthenticationAllowed(org.springframework.security.Authentication)
org.springframework.security.concurrent.ConcurrentSessionControllerImpl.registerSuccessfulAuthentication(org.springframework.security.Authentication)
org.springframework.security.concurrent.ConcurrentSessionControllerImpl.setExceptionIfMaximumExceeded(Z)
org.springframework.security.concurrent.ConcurrentSessionControllerImplTests.createAuthentication(java.lang.String, java.lang.String)
org.springframework.security.concurrent.SessionRegistry.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionInformation.isExpired()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.concurrent.ConcurrentSessionControllerImpl.checkAuthenticationAllowed(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.concurrent.ConcurrentSessionControllerImpl.setExceptionIfMaximumExceeded(Z)
org.springframework.security.concurrent.ConcurrentSessionControllerImplTests.createAuthentication(java.lang.String, java.lang.String)
org.springframework.security.concurrent.ConcurrentSessionControllerImpl.checkAuthenticationAllowed(org.springframework.security.Authentication)
org.springframework.security.concurrent.ConcurrentSessionControllerImpl.registerSuccessfulAuthentication(org.springframework.security.Authentication)
org.springframework.security.Authentication.getDetails()
org.springframework.security.ui.WebAuthenticationDetails.getSessionId()
org.springframework.security.concurrent.SessionRegistry.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionInformation.isExpired()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.concurrent.SessionRegistry.getSessionInformation(java.lang.String)
org.springframework.security.concurrent.SessionInformation.isExpired()
junit.framework.Assert.assertFalse(Z)
1617 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionControllerImplTests.testStartupDetectsInvalidMaximumSessions()
Métodos invocados: 
org.springframework.security.concurrent.ConcurrentSessionControllerImpl.setMaximumSessions(I)
org.springframework.security.concurrent.ConcurrentSessionControllerImpl.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1618 - Declaração do método: org.springframework.security.concurrent.ConcurrentSessionControllerImplTests.testStartupDetectsInvalidSessionRegistry()
Métodos invocados: 
org.springframework.security.concurrent.ConcurrentSessionControllerImpl.setSessionRegistry(org.springframework.security.concurrent.SessionRegistry)
org.springframework.security.concurrent.ConcurrentSessionControllerImpl.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1619 - Declaração do método: org.springframework.security.concurrent.SessionInformationTests.testObject()
Métodos invocados: 
org.springframework.security.concurrent.SessionInformation.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.concurrent.SessionInformation.getSessionId()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.concurrent.SessionInformation.getLastRequest()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Thread.sleep(J)
org.springframework.security.concurrent.SessionInformation.refreshLastRequest()
org.springframework.security.concurrent.SessionInformation.getLastRequest()
java.util.Date.after(java.util.Date)
junit.framework.Assert.assertTrue(Z)
1620 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImplMultithreadedTests.setUp()
1620 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImplMultithreadedTests.testConcurrencyOfReadAndRemoveIsSafe()
Métodos invocados: 
java.util.Collections.synchronizedSet(java.util.Set)
java.lang.Integer.toString(I)
java.util.Set.add(java.lang.Object)
org.springframework.security.concurrent.SessionRegistryImpl.registerNewSession(java.lang.String, java.lang.Object)
java.lang.Thread.start()
java.lang.Thread.start()
java.lang.Thread.isAlive()
org.springframework.security.concurrent.SessionRegistryImplMultithreadedTests.pause(I)
junit.framework.Assert.assertFalse(java.lang.String, Z)
1621 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImplMultithreadedTests.testConcurrentRemovalIsSafe()
Métodos invocados: 
java.util.Collections.synchronizedSet(java.util.Set)
java.lang.Thread.start()
java.lang.Thread.start()
org.springframework.security.concurrent.SessionRegistryImplMultithreadedTests.stillRunning([Ljava.lang.Thread;)
org.springframework.security.concurrent.SessionRegistryImplMultithreadedTests.pause(I)
1622 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImplMultithreadedTests.stillRunning([Ljava.lang.Thread;)
Métodos invocados: 
java.lang.Thread.isAlive()
1623 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImplMultithreadedTests$SessionRegisterer.SessionRegisterer(java.lang.Object, org.springframework.security.concurrent.SessionRegistry, I, java.util.Set)
1623 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImplMultithreadedTests$SessionRegisterer.run()
Métodos invocados: 
java.lang.Integer.toString(I)
java.util.Set.add(java.lang.Object)
org.springframework.security.concurrent.SessionRegistry.registerNewSession(java.lang.String, java.lang.Object)
org.springframework.security.concurrent.SessionRegistryImplMultithreadedTests.pause(I)
java.lang.Thread.yield()
java.lang.Throwable.printStackTrace()
1624 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImplMultithreadedTests$SessionRegistryReader.SessionRegistryReader(java.lang.Object, org.springframework.security.concurrent.SessionRegistry)
1624 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImplMultithreadedTests$SessionRegistryReader.run()
Métodos invocados: 
org.springframework.security.concurrent.SessionRegistry.getAllSessions(java.lang.Object, Z)
org.springframework.security.concurrent.SessionRegistry.getAllPrincipals()
org.springframework.security.concurrent.SessionRegistry.getAllSessions(java.lang.Object, Z)
java.lang.Thread.yield()
java.lang.Throwable.printStackTrace()
1625 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImplMultithreadedTests$SessionRemover.SessionRemover(java.lang.String, org.springframework.security.concurrent.SessionRegistry, java.util.Set)
1625 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImplMultithreadedTests$SessionRemover.run()
Métodos invocados: 
java.util.Set.isEmpty()
java.io.PrintStream.println(java.lang.String)
org.springframework.security.concurrent.SessionRegistryImplMultithreadedTests.pause(I)
java.util.Set.toArray()
org.springframework.security.concurrent.SessionRegistry.removeSessionInformation(java.lang.String)
java.util.Random.nextInt(I)
org.springframework.security.concurrent.SessionRegistryImplMultithreadedTests.pause(I)
java.util.Set.remove(java.lang.Object)
java.lang.Thread.yield()
java.lang.Throwable.printStackTrace()
1626 - Declaração do método: org.springframework.security.concurrent.SessionRegistryImplMultithreadedTests.pause(I)
Métodos invocados: 
java.lang.Thread.sleep(J)
1627 - Declaração do método: org.springframework.security.config.DataSourcePopulator.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
1628 - Declaração do método: org.springframework.security.config.DataSourcePopulator.setDataSource(javax.sql.DataSource)
1628 - Declaração do método: org.springframework.security.config.CustomAuthenticationProviderBeanDefinitionDecoratorTests.decoratorParsesSuccessfully()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
1629 - Declaração do método: org.springframework.security.config.TestBusinessBeanImpl.setInteger(I)
1629 - Declaração do método: org.springframework.security.config.TestBusinessBeanImpl.getInteger()
1629 - Declaração do método: org.springframework.security.config.TestBusinessBeanImpl.setString(java.lang.String)
1629 - Declaração do método: org.springframework.security.config.TestBusinessBeanImpl.getString()
1629 - Declaração do método: org.springframework.security.config.TestBusinessBeanImpl.doSomething()
1629 - Declaração do método: org.springframework.security.config.TestBusinessBeanImpl.unprotected()
1629 - Declaração do método: org.springframework.security.config.LdapServerBeanDefinitionParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
1630 - Declaração do método: org.springframework.security.config.LdapServerBeanDefinitionParserTests.embeddedServerCreationContainsExpectedContextSourceAndData()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.ldap.core.LdapTemplate.lookup(java.lang.String)
1631 - Declaração do método: org.springframework.security.config.LdapServerBeanDefinitionParserTests.useOfUrlAttributeCreatesCorrectContextSource()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.ldap.core.LdapTemplate.lookup(java.lang.String)
1632 - Declaração do método: org.springframework.security.config.LdapServerBeanDefinitionParserTests.loadingSpecificLdifFileIsSuccessful()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.ldap.core.LdapTemplate.lookup(java.lang.String)
1633 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
1634 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.httpAutoConfigSetsUpCorrectFilterList()
Métodos invocados: 
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.getFilterChainProxy()
org.springframework.security.util.FilterChainProxy.getFilters(java.lang.String)
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.checkAutoConfigFilters(java.util.List)
1635 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.checkAutoConfigFilters(java.util.List)
Métodos invocados: 
java.util.List.size()
org.junit.Assert.assertEquals(java.lang.String, J, J)
java.util.List.iterator()
java.util.Iterator.next()
org.junit.Assert.assertTrue(Z)
java.util.Iterator.next()
org.junit.Assert.assertTrue(Z)
java.util.Iterator.next()
org.junit.Assert.assertTrue(Z)
java.util.Iterator.next()
org.junit.Assert.assertTrue(Z)
java.util.Iterator.next()
org.junit.Assert.assertTrue(Z)
java.util.Iterator.next()
org.junit.Assert.assertTrue(Z)
java.util.Iterator.next()
org.junit.Assert.assertTrue(Z)
java.util.Iterator.next()
org.junit.Assert.assertTrue(Z)
java.util.Iterator.next()
org.junit.Assert.assertTrue(Z)
java.util.Iterator.next()
org.junit.Assert.assertTrue(Z)
1636 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.filterListShouldBeEmptyForUnprotectedUrl()
Métodos invocados: 
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.getFilterChainProxy()
org.springframework.security.util.FilterChainProxy.getFilters(java.lang.String)
java.util.List.size()
org.junit.Assert.assertTrue(Z)
1637 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.regexPathsWorkCorrectly()
Métodos invocados: 
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.getFilterChainProxy()
org.springframework.security.util.FilterChainProxy.getFilters(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.util.FilterChainProxy.getFilters(java.lang.String)
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.checkAutoConfigFilters(java.util.List)
1638 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.lowerCaseComparisonAttributeIsRespectedByFilterChainProxy()
Métodos invocados: 
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.getFilterChainProxy()
org.springframework.security.util.FilterChainProxy.getFilters(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.util.FilterChainProxy.getFilters(java.lang.String)
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.checkAutoConfigFilters(java.util.List)
org.springframework.security.util.FilterChainProxy.getFilters(java.lang.String)
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.checkAutoConfigFilters(java.util.List)
1639 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.formLoginWithNoLoginPageAddsDefaultLoginPageFilter()
Métodos invocados: 
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.getFilterChainProxy()
org.springframework.security.util.FilterChainProxy.getFilters(java.lang.String)
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.checkAutoConfigFilters(java.util.List)
1640 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.lowerCaseComparisonIsRespectedBySecurityFilterInvocationDefinitionSource()
Métodos invocados: 
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.intercept.web.FilterSecurityInterceptor.getObjectDefinitionSource()
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.createFilterinvocation(java.lang.String, java.lang.String)
org.springframework.security.intercept.ObjectDefinitionSource.getAttributes(java.lang.Object)
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.ConfigAttributeDefinition.contains(org.springframework.security.ConfigAttribute)
org.junit.Assert.assertTrue(Z)
org.springframework.security.ConfigAttributeDefinition.contains(org.springframework.security.ConfigAttribute)
org.junit.Assert.assertTrue(Z)
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.createFilterinvocation(java.lang.String, java.lang.String)
org.springframework.security.intercept.ObjectDefinitionSource.getAttributes(java.lang.Object)
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.ConfigAttributeDefinition.contains(org.springframework.security.ConfigAttribute)
org.junit.Assert.assertTrue(Z)
1641 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.httpMethodMatchIsSupported()
Métodos invocados: 
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.intercept.web.FilterSecurityInterceptor.getObjectDefinitionSource()
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.createFilterinvocation(java.lang.String, java.lang.String)
org.springframework.security.intercept.ObjectDefinitionSource.getAttributes(java.lang.Object)
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.ConfigAttributeDefinition.contains(org.springframework.security.ConfigAttribute)
org.junit.Assert.assertTrue(Z)
org.springframework.security.ConfigAttributeDefinition.contains(org.springframework.security.ConfigAttribute)
org.junit.Assert.assertTrue(Z)
1642 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.minimalConfigurationParses()
Métodos invocados: 
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.setContext(java.lang.String)
1643 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.interceptUrlWithRequiresChannelAddsChannelFilterToStack()
Métodos invocados: 
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.getFilterChainProxy()
org.springframework.security.util.FilterChainProxy.getFilters(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(java.lang.String, J, J)
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
1644 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.portMappingsAreParsedCorrectly()
Métodos invocados: 
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.util.PortMapperImpl.getTranslatedPortMappings()
java.util.Map.size()
org.junit.Assert.assertEquals(J, J)
java.lang.Integer.valueOf(I)
org.springframework.security.util.PortMapperImpl.lookupHttpPort(java.lang.Integer)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Integer.valueOf(I)
org.springframework.security.util.PortMapperImpl.lookupHttpsPort(java.lang.Integer)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1645 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.externalFiltersAreTreatedCorrectly()
Métodos invocados: 
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.getFilterChainProxy()
org.springframework.security.util.FilterChainProxy.getFilters(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
java.util.List.get(I)
org.springframework.security.config.OrderedFilterBeanDefinitionDecorator$OrderedFilterDecorator.getBeanName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1646 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.rememberMeServiceWorksWithTokenRepoRef()
Métodos invocados: 
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.junit.Assert.assertTrue(Z)
1647 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.x509SupportAddsFilterAtExpectedPosition()
Métodos invocados: 
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.getFilterChainProxy()
org.springframework.security.util.FilterChainProxy.getFilters(java.lang.String)
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
1648 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.setContext(java.lang.String)
1648 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.getFilterChainProxy()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
1649 - Declaração do método: org.springframework.security.config.HttpSecurityBeanDefinitionParserTests.createFilterinvocation(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setMethod(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
1650 - Declaração do método: org.springframework.security.config.JdbcUserServiceBeanDefinitionParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
1651 - Declaração do método: org.springframework.security.config.JdbcUserServiceBeanDefinitionParserTests.validUsernameIsFound()
Métodos invocados: 
org.springframework.security.config.JdbcUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.junit.Assert.assertTrue(Z)
1652 - Declaração do método: org.springframework.security.config.JdbcUserServiceBeanDefinitionParserTests.beanIdIsParsedCorrectly()
Métodos invocados: 
org.springframework.security.config.JdbcUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
1653 - Declaração do método: org.springframework.security.config.JdbcUserServiceBeanDefinitionParserTests.isSupportedByAuthenticationProviderElement()
Métodos invocados: 
org.springframework.security.config.JdbcUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
1654 - Declaração do método: org.springframework.security.config.JdbcUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
1654 - Declaração do método: org.springframework.security.config.LdapUserServiceBeanDefinitionParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
1655 - Declaração do método: org.springframework.security.config.LdapUserServiceBeanDefinitionParserTests.minimalConfigurationIsParsedOk()
Métodos invocados: 
org.springframework.security.config.LdapUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
1656 - Declaração do método: org.springframework.security.config.LdapUserServiceBeanDefinitionParserTests.userServiceReturnsExpectedData()
Métodos invocados: 
org.springframework.security.config.LdapUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.util.AuthorityUtils.authorityArrayToSet([Lorg.springframework.security.GrantedAuthority;)
java.util.Set.size()
org.junit.Assert.assertEquals(J, J)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
1657 - Declaração do método: org.springframework.security.config.LdapUserServiceBeanDefinitionParserTests.differentUserSearchBaseWorksAsExpected()
Métodos invocados: 
org.springframework.security.config.LdapUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getUsername()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1658 - Declaração do método: org.springframework.security.config.LdapUserServiceBeanDefinitionParserTests.differentGroupRoleAttributeWorksAsExpected()
Métodos invocados: 
org.springframework.security.config.LdapUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.util.AuthorityUtils.authorityArrayToSet([Lorg.springframework.security.GrantedAuthority;)
java.util.Set.size()
org.junit.Assert.assertEquals(J, J)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
1659 - Declaração do método: org.springframework.security.config.LdapUserServiceBeanDefinitionParserTests.isSupportedByAuthenticationProviderElement()
Métodos invocados: 
org.springframework.security.config.LdapUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
1660 - Declaração do método: org.springframework.security.config.LdapUserServiceBeanDefinitionParserTests.setContext(java.lang.String)
1660 - Declaração do método: org.springframework.security.config.TestBusinessBean.setInteger(I)
1660 - Declaração do método: org.springframework.security.config.TestBusinessBean.getInteger()
1660 - Declaração do método: org.springframework.security.config.TestBusinessBean.setString(java.lang.String)
1660 - Declaração do método: org.springframework.security.config.TestBusinessBean.doSomething()
1660 - Declaração do método: org.springframework.security.config.TestBusinessBean.unprotected()
1660 - Declaração do método: org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
1661 - Declaração do método: org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.worksWithEmbeddedUserService()
Métodos invocados: 
org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.providers.AuthenticationProvider.authenticate(org.springframework.security.Authentication)
1662 - Declaração do método: org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.externalUserServiceRefWorks()
Métodos invocados: 
org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.providers.AuthenticationProvider.authenticate(org.springframework.security.Authentication)
1663 - Declaração do método: org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.providerWithMd5PasswordEncoderWorks()
Métodos invocados: 
org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.providers.AuthenticationProvider.authenticate(org.springframework.security.Authentication)
1664 - Declaração do método: org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.providerWithShaPasswordEncoderWorks()
Métodos invocados: 
org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.providers.AuthenticationProvider.authenticate(org.springframework.security.Authentication)
1665 - Declaração do método: org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.worksWithJdbcUserService()
Métodos invocados: 
org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.providers.AuthenticationProvider.authenticate(org.springframework.security.Authentication)
1666 - Declaração do método: org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.externalUserServiceAndPasswordEncoderWork()
Métodos invocados: 
org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.providers.AuthenticationProvider.authenticate(org.springframework.security.Authentication)
1667 - Declaração do método: org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.getProvider()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.providers.ProviderManager.getProviders()
java.util.List.get(I)
1668 - Declaração do método: org.springframework.security.config.AuthenticationProviderBeanDefinitionParserTests.setContext(java.lang.String)
1668 - Declaração do método: org.springframework.security.config.FilterInvocationDefinitionSourceParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
1669 - Declaração do método: org.springframework.security.config.FilterInvocationDefinitionSourceParserTests.setContext(java.lang.String)
1669 - Declaração do método: org.springframework.security.config.FilterInvocationDefinitionSourceParserTests.parsingMinimalConfigurationIsSuccessful()
Métodos invocados: 
org.springframework.security.config.FilterInvocationDefinitionSourceParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.config.FilterInvocationDefinitionSourceParserTests.createFilterInvocation(java.lang.String, java.lang.String)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getAttributes(java.lang.Object)
org.springframework.security.ConfigAttributeDefinition.contains(org.springframework.security.ConfigAttribute)
org.junit.Assert.assertTrue(Z)
1670 - Declaração do método: org.springframework.security.config.FilterInvocationDefinitionSourceParserTests.parsingWithinFilterSecurityInterceptorIsSuccessful()
Métodos invocados: 
org.springframework.security.config.FilterInvocationDefinitionSourceParserTests.setContext(java.lang.String)
1671 - Declaração do método: org.springframework.security.config.FilterInvocationDefinitionSourceParserTests.createFilterInvocation(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setMethod(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
1672 - Declaração do método: org.springframework.security.config.InterceptMethodsBeanDefinitionDecoratorTests.loadContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
1673 - Declaração do método: org.springframework.security.config.InterceptMethodsBeanDefinitionDecoratorTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
org.springframework.security.context.SecurityContextHolder.clearContext()
1674 - Declaração do método: org.springframework.security.config.InterceptMethodsBeanDefinitionDecoratorTests.targetShouldAllowUnprotectedMethodInvocationWithNoContext()
Métodos invocados: 
org.springframework.security.config.TestBusinessBean.unprotected()
1675 - Declaração do método: org.springframework.security.config.InterceptMethodsBeanDefinitionDecoratorTests.targetShouldPreventProtectedMethodInvocationWithNoContext()
Métodos invocados: 
org.springframework.security.config.TestBusinessBean.doSomething()
org.junit.Assert.fail(java.lang.String)
1676 - Declaração do método: org.springframework.security.config.InterceptMethodsBeanDefinitionDecoratorTests.targetShouldAllowProtectedMethodInvocationWithCorrectRole()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.config.TestBusinessBean.doSomething()
1677 - Declaração do método: org.springframework.security.config.InterceptMethodsBeanDefinitionDecoratorTests.targetShouldPreventProtectedMethodInvocationWithIncorrectRole()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.config.TestBusinessBean.doSomething()
org.junit.Assert.fail(java.lang.String)
1678 - Declaração do método: org.springframework.security.config.UserServiceBeanDefinitionParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
1679 - Declaração do método: org.springframework.security.config.UserServiceBeanDefinitionParserTests.userServiceWithValidPropertiesFileWorksSuccessfully()
Métodos invocados: 
org.springframework.security.config.UserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
1680 - Declaração do método: org.springframework.security.config.UserServiceBeanDefinitionParserTests.userServiceWithEmbeddedUsersWorksSuccessfully()
Métodos invocados: 
org.springframework.security.config.UserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
1681 - Declaração do método: org.springframework.security.config.UserServiceBeanDefinitionParserTests.userWithBothPropertiesAndEmbeddedUsersThrowsException()
Métodos invocados: 
org.springframework.security.config.UserServiceBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
1682 - Declaração do método: org.springframework.security.config.UserServiceBeanDefinitionParserTests.multipleTopLevelUseWithoutIdThrowsException()
Métodos invocados: 
org.springframework.security.config.UserServiceBeanDefinitionParserTests.setContext(java.lang.String)
1683 - Declaração do método: org.springframework.security.config.UserServiceBeanDefinitionParserTests.userServiceWithMissingPropertiesFileThrowsException()
Métodos invocados: 
org.springframework.security.config.UserServiceBeanDefinitionParserTests.setContext(java.lang.String)
1684 - Declaração do método: org.springframework.security.config.UserServiceBeanDefinitionParserTests.setContext(java.lang.String)
1684 - Declaração do método: org.springframework.security.config.LdapProviderBeanDefinitionParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
1685 - Declaração do método: org.springframework.security.config.LdapProviderBeanDefinitionParserTests.simpleProviderAuthenticatesCorrectly()
Métodos invocados: 
org.springframework.security.config.LdapProviderBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.LdapProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.providers.ldap.LdapAuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getAuthorities()
org.junit.Assert.assertEquals(J, J)
1686 - Declaração do método: org.springframework.security.config.LdapProviderBeanDefinitionParserTests.missingServerEltCausesConfigException()
Métodos invocados: 
org.springframework.security.config.LdapProviderBeanDefinitionParserTests.setContext(java.lang.String)
1687 - Declaração do método: org.springframework.security.config.LdapProviderBeanDefinitionParserTests.supportsPasswordComparisonAuthentication()
Métodos invocados: 
org.springframework.security.config.LdapProviderBeanDefinitionParserTests.setContext(java.lang.String)
org.springframework.security.config.LdapProviderBeanDefinitionParserTests.getProvider()
org.springframework.security.providers.ldap.LdapAuthenticationProvider.authenticate(org.springframework.security.Authentication)
1688 - Declaração do método: org.springframework.security.config.LdapProviderBeanDefinitionParserTests.setContext(java.lang.String)
1688 - Declaração do método: org.springframework.security.config.LdapProviderBeanDefinitionParserTests.getProvider()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.providers.ProviderManager.getProviders()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.providers.ProviderManager.getProviders()
java.util.List.get(I)
1689 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilterTests.HttpSessionContextIntegrationFilterTests()
1689 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilterTests.HttpSessionContextIntegrationFilterTests(java.lang.String)
1689 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.Filter.init(javax.servlet.FilterConfig)
javax.servlet.Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
javax.servlet.Filter.destroy()
1690 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilterTests.testDetectsIncompatibleSessionProperties()
Métodos invocados: 
org.springframework.security.context.HttpSessionContextIntegrationFilter.setAllowSessionCreation(Z)
org.springframework.security.context.HttpSessionContextIntegrationFilter.setForceEagerSessionCreation(Z)
org.springframework.security.context.HttpSessionContextIntegrationFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.context.HttpSessionContextIntegrationFilter.setAllowSessionCreation(Z)
org.springframework.security.context.HttpSessionContextIntegrationFilter.afterPropertiesSet()
junit.framework.Assert.assertTrue(Z)
1691 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilterTests.testDetectsMissingOrInvalidContext()
Métodos invocados: 
org.springframework.security.context.HttpSessionContextIntegrationFilter.setContextClass(java.lang.Class)
org.springframework.security.context.HttpSessionContextIntegrationFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.context.HttpSessionContextIntegrationFilter.setContextClass(java.lang.Class)
org.springframework.security.context.HttpSessionContextIntegrationFilter.getContextClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.context.HttpSessionContextIntegrationFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1692 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilterTests.testExceptionWithinFilterChainStillClearsSecurityContextHolder()
Métodos invocados: 
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.context.HttpSessionContextIntegrationFilter.setContextClass(java.lang.Class)
org.springframework.security.context.HttpSessionContextIntegrationFilter.afterPropertiesSet()
org.springframework.security.context.HttpSessionContextIntegrationFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.getAttribute(java.lang.String)
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
1693 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilterTests.testExistingContextContentsCopiedIntoContextHolderFromSessionAndChangesToContextCopiedBackToSession()
Métodos invocados: 
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.context.HttpSessionContextIntegrationFilter.setContextClass(java.lang.Class)
org.springframework.security.context.HttpSessionContextIntegrationFilter.afterPropertiesSet()
org.springframework.security.context.HttpSessionContextIntegrationFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1694 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilterTests.testHttpSessionCreatedWhenContextHolderChanges()
Métodos invocados: 
org.springframework.security.context.HttpSessionContextIntegrationFilter.setContextClass(java.lang.Class)
org.springframework.security.context.HttpSessionContextIntegrationFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletRequest.getSession(Z)
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1695 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilterTests.testHttpSessionEagerlyCreatedWhenDirected()
Métodos invocados: 
org.springframework.security.context.HttpSessionContextIntegrationFilter.setContextClass(java.lang.Class)
org.springframework.security.context.HttpSessionContextIntegrationFilter.setForceEagerSessionCreation(Z)
org.springframework.security.context.HttpSessionContextIntegrationFilter.afterPropertiesSet()
org.springframework.security.context.HttpSessionContextIntegrationFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletRequest.getSession(Z)
junit.framework.Assert.assertNotNull(java.lang.Object)
1696 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilterTests.testHttpSessionNotCreatedUnlessContextHolderChanges()
Métodos invocados: 
org.springframework.security.context.HttpSessionContextIntegrationFilter.setContextClass(java.lang.Class)
org.springframework.security.context.HttpSessionContextIntegrationFilter.afterPropertiesSet()
org.springframework.security.context.HttpSessionContextIntegrationFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletRequest.getSession(Z)
junit.framework.Assert.assertNull(java.lang.Object)
1697 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilterTests.testHttpSessionWithNonContextInWellKnownLocationIsOverwritten()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.context.HttpSessionContextIntegrationFilter.setContextClass(java.lang.Class)
org.springframework.security.context.HttpSessionContextIntegrationFilter.afterPropertiesSet()
org.springframework.security.context.HttpSessionContextIntegrationFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1698 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilterTests.testConcurrentThreadsLazilyChangeFilterAppliedValueToTrue()
Métodos invocados: 
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.context.HttpSessionContextIntegrationFilter.setContextClass(java.lang.Class)
org.springframework.security.context.HttpSessionContextIntegrationFilter.afterPropertiesSet()
java.lang.Thread.start()
1699 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilterTests$MockFilterChain.MockFilterChain(org.springframework.security.Authentication, org.springframework.security.Authentication, java.io.IOException)
1699 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilterTests$MockFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.context.SecurityContextHolder.setContext(org.springframework.security.context.SecurityContext)
1700 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilterTests$ThreadRunner.ThreadRunner(org.springframework.mock.web.MockHttpServletRequest, org.springframework.mock.web.MockHttpServletResponse, org.springframework.security.context.HttpSessionContextIntegrationFilter, org.springframework.security.context.HttpSessionContextIntegrationFilterTests$MockFilterChain)
1700 - Declaração do método: org.springframework.security.context.HttpSessionContextIntegrationFilterTests$ThreadRunner.run()
Métodos invocados: 
org.springframework.security.context.HttpSessionContextIntegrationFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletRequest.getSession(Z)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.lang.Throwable.printStackTrace()
1701 - Declaração do método: org.springframework.security.context.SecurityContextImplTests.SecurityContextImplTests()
1701 - Declaração do método: org.springframework.security.context.SecurityContextImplTests.SecurityContextImplTests(java.lang.String)
1701 - Declaração do método: org.springframework.security.context.SecurityContextImplTests.testEmptyObjectsAreEquals()
Métodos invocados: 
org.springframework.security.context.SecurityContextImpl.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
1702 - Declaração do método: org.springframework.security.context.SecurityContextImplTests.testSecurityContextCorrectOperation()
Métodos invocados: 
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Object.toString()
java.lang.String.lastIndexOf(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1703 - Declaração do método: org.springframework.security.context.SecurityContextHolderTests.SecurityContextHolderTests()
1703 - Declaração do método: org.springframework.security.context.SecurityContextHolderTests.SecurityContextHolderTests(java.lang.String)
1703 - Declaração do método: org.springframework.security.context.SecurityContextHolderTests.loadStartAndWaitForThreads(Z, java.lang.String, I, Z, Z)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolderTests.makeThread(java.lang.String, Z, Z, Z, Z, java.lang.String)
org.springframework.security.context.SecurityContextHolderTests.makeThread(java.lang.String, Z, Z, Z, Z, java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.context.SecurityContextHolderTests.makeThread(java.lang.String, Z, Z, Z, Z, java.lang.String)
org.springframework.security.context.SecurityContextHolderTests.makeThread(java.lang.String, Z, Z, Z, Z, java.lang.String)
org.springframework.security.context.SecurityContextHolderTests.makeThread(java.lang.String, Z, Z, Z, Z, java.lang.String)
org.springframework.security.context.SecurityContextHolderTests.makeThread(java.lang.String, Z, Z, Z, Z, java.lang.String)
org.springframework.security.context.SecurityContextHolderTests.makeThread(java.lang.String, Z, Z, Z, Z, java.lang.String)
org.springframework.security.context.SecurityContextHolderTests.makeThread(java.lang.String, Z, Z, Z, Z, java.lang.String)
org.springframework.security.context.SecurityContextHolderTests.startAndRun([Ljava.lang.Thread;)
1704 - Declaração do método: org.springframework.security.context.SecurityContextHolderTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1705 - Declaração do método: org.springframework.security.context.SecurityContextHolderTests.makeThread(java.lang.String, Z, Z, Z, Z, java.lang.String)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
java.security.Principal.getName()
java.io.PrintStream.println(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
java.util.Random.nextInt(I)
java.lang.Thread.sleep(J)
org.springframework.security.context.SecurityContextHolderTests.loadStartAndWaitForThreads(Z, java.lang.String, I, Z, Z)
org.springframework.security.context.SecurityContextHolderTests.loadStartAndWaitForThreads(Z, java.lang.String, I, Z, Z)
1706 - Declaração do método: org.springframework.security.context.SecurityContextHolderTests$1.run()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
java.security.Principal.getName()
java.io.PrintStream.println(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
java.util.Random.nextInt(I)
java.lang.Thread.sleep(J)
org.springframework.security.context.SecurityContextHolderTests.loadStartAndWaitForThreads(Z, java.lang.String, I, Z, Z)
org.springframework.security.context.SecurityContextHolderTests.loadStartAndWaitForThreads(Z, java.lang.String, I, Z, Z)
1707 - Declaração do método: org.springframework.security.context.SecurityContextHolderTests.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.setStrategyName(java.lang.String)
1708 - Declaração do método: org.springframework.security.context.SecurityContextHolderTests.startAndRun([Ljava.lang.Thread;)
Métodos invocados: 
java.lang.Thread.start()
org.springframework.security.context.SecurityContextHolderTests.stillRunning([Ljava.lang.Thread;)
java.lang.Thread.sleep(J)
1709 - Declaração do método: org.springframework.security.context.SecurityContextHolderTests.stillRunning([Ljava.lang.Thread;)
Métodos invocados: 
java.lang.Thread.isAlive()
1710 - Declaração do método: org.springframework.security.context.SecurityContextHolderTests.testContextHolderGetterSetterClearer()
Métodos invocados: 
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.context.SecurityContextHolder.setContext(org.springframework.security.context.SecurityContext)
org.springframework.security.context.SecurityContextHolder.getContext()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.clearContext()
org.springframework.security.context.SecurityContextHolder.getContext()
junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.clearContext()
1711 - Declaração do método: org.springframework.security.context.SecurityContextHolderTests.testNeverReturnsNull()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.clearContext()
1712 - Declaração do método: org.springframework.security.context.SecurityContextHolderTests.testRejectsNulls()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.setContext(org.springframework.security.context.SecurityContext)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1713 - Declaração do método: org.springframework.security.context.SecurityContextHolderTests.testSynchronizationCustomStrategyLoading()
Métodos invocados: 
java.lang.Class.getName()
org.springframework.security.context.SecurityContextHolder.setStrategyName(java.lang.String)
org.springframework.security.context.SecurityContextHolder.toString()
java.lang.String.lastIndexOf(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.context.SecurityContextHolderTests.loadStartAndWaitForThreads(Z, java.lang.String, I, Z, Z)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1714 - Declaração do método: org.springframework.security.context.SecurityContextHolderTests.testSynchronizationGlobal()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
org.springframework.security.context.SecurityContextHolder.setStrategyName(java.lang.String)
org.springframework.security.context.SecurityContextHolderTests.loadStartAndWaitForThreads(Z, java.lang.String, I, Z, Z)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1715 - Declaração do método: org.springframework.security.context.SecurityContextHolderTests.testSynchronizationInheritableThreadLocal()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
org.springframework.security.context.SecurityContextHolder.setStrategyName(java.lang.String)
org.springframework.security.context.SecurityContextHolderTests.loadStartAndWaitForThreads(Z, java.lang.String, I, Z, Z)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1716 - Declaração do método: org.springframework.security.context.SecurityContextHolderTests.testSynchronizationThreadLocal()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
org.springframework.security.context.SecurityContextHolder.setStrategyName(java.lang.String)
org.springframework.security.context.SecurityContextHolderTests.loadStartAndWaitForThreads(Z, java.lang.String, I, Z, Z)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1717 - Declaração do método: org.springframework.security.context.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests.AuthenticationSimpleHttpInvokerRequestExecutorTests()
1717 - Declaração do método: org.springframework.security.context.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests.AuthenticationSimpleHttpInvokerRequestExecutorTests(java.lang.String)
1717 - Declaração do método: org.springframework.security.context.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
1718 - Declaração do método: org.springframework.security.context.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.context.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutor.prepareConnection(java.net.HttpURLConnection, I)
java.net.URLConnection.getRequestProperty(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1719 - Declaração do método: org.springframework.security.context.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests.testNullContextHolderIsNull()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.context.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutor.prepareConnection(java.net.HttpURLConnection, I)
java.net.URLConnection.getRequestProperty(java.lang.String)
junit.framework.Assert.assertNull(java.lang.Object)
1720 - Declaração do método: org.springframework.security.context.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests$MockHttpURLConnection.MockHttpURLConnection(java.net.URL)
1720 - Declaração do método: org.springframework.security.context.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests$MockHttpURLConnection.connect()
1720 - Declaração do método: org.springframework.security.context.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests$MockHttpURLConnection.disconnect()
1720 - Declaração do método: org.springframework.security.context.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests$MockHttpURLConnection.getRequestProperty(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
1721 - Declaração do método: org.springframework.security.context.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests$MockHttpURLConnection.setRequestProperty(java.lang.String, java.lang.String)
Métodos invocados: 
java.util.Map.put(java.lang.Object, java.lang.Object)
1722 - Declaração do método: org.springframework.security.context.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutorTests$MockHttpURLConnection.usingProxy()
1722 - Declaração do método: org.springframework.security.context.rmi.ContextPropagatingRemoteInvocationTests.ContextPropagatingRemoteInvocationTests()
1722 - Declaração do método: org.springframework.security.context.rmi.ContextPropagatingRemoteInvocationTests.ContextPropagatingRemoteInvocationTests(java.lang.String)
1722 - Declaração do método: org.springframework.security.context.rmi.ContextPropagatingRemoteInvocationTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
1723 - Declaração do método: org.springframework.security.context.rmi.ContextPropagatingRemoteInvocationTests.getRemoteInvocation()
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.context.rmi.ContextPropagatingRemoteInvocationFactory.createRemoteInvocation(org.aopalliance.intercept.MethodInvocation)
1724 - Declaração do método: org.springframework.security.context.rmi.ContextPropagatingRemoteInvocationTests.testContextIsResetEvenIfExceptionOccurs()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.context.rmi.ContextPropagatingRemoteInvocationTests.getRemoteInvocation()
org.springframework.remoting.support.RemoteInvocation.setArguments([Ljava.lang.Object;)
java.lang.Class.newInstance()
org.springframework.security.context.rmi.ContextPropagatingRemoteInvocation.invoke(java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
1725 - Declaração do método: org.springframework.security.context.rmi.ContextPropagatingRemoteInvocationTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.context.rmi.ContextPropagatingRemoteInvocationTests.getRemoteInvocation()
org.springframework.security.context.SecurityContextHolder.clearContext()
org.springframework.security.context.rmi.ContextPropagatingRemoteInvocation.invoke(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1726 - Declaração do método: org.springframework.security.context.rmi.ContextPropagatingRemoteInvocationTests.testNullContextHolderDoesNotCauseInvocationProblems()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.context.rmi.ContextPropagatingRemoteInvocationTests.getRemoteInvocation()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.context.rmi.ContextPropagatingRemoteInvocation.invoke(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1727 - Declaração do método: org.springframework.security.event.authentication.AuthenticationEventTests.getAuthentication()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
1728 - Declaração do método: org.springframework.security.event.authentication.AuthenticationEventTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1729 - Declaração do método: org.springframework.security.event.authentication.AuthenticationEventTests.setUp()
1729 - Declaração do método: org.springframework.security.event.authentication.AuthenticationEventTests.testAbstractAuthenticationEvent()
Métodos invocados: 
org.springframework.security.event.authentication.AuthenticationEventTests.getAuthentication()
org.springframework.security.event.authentication.AbstractAuthenticationEvent.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1730 - Declaração do método: org.springframework.security.event.authentication.AuthenticationEventTests.testAbstractAuthenticationFailureEvent()
Métodos invocados: 
org.springframework.security.event.authentication.AuthenticationEventTests.getAuthentication()
org.springframework.security.event.authentication.AbstractAuthenticationEvent.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.event.authentication.AbstractAuthenticationFailureEvent.getException()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1731 - Declaração do método: org.springframework.security.event.authentication.AuthenticationEventTests.testRejectsNullAuthentication()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1732 - Declaração do método: org.springframework.security.event.authentication.AuthenticationEventTests.testRejectsNullAuthenticationException()
Métodos invocados: 
org.springframework.security.event.authentication.AuthenticationEventTests.getAuthentication()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1733 - Declaração do método: org.springframework.security.event.authentication.LoggerListenerTests.getAuthentication()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
1734 - Declaração do método: org.springframework.security.event.authentication.LoggerListenerTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1735 - Declaração do método: org.springframework.security.event.authentication.LoggerListenerTests.setUp()
1735 - Declaração do método: org.springframework.security.event.authentication.LoggerListenerTests.testLogsEvents()
Métodos invocados: 
org.springframework.security.event.authentication.LoggerListenerTests.getAuthentication()
org.springframework.security.event.authentication.LoggerListener.onApplicationEvent(org.springframework.context.ApplicationEvent)
junit.framework.Assert.assertTrue(Z)
1736 - Declaração do método: org.springframework.security.event.authorization.AuthorizedEventTests.AuthorizedEventTests()
1736 - Declaração do método: org.springframework.security.event.authorization.AuthorizedEventTests.AuthorizedEventTests(java.lang.String)
1736 - Declaração do método: org.springframework.security.event.authorization.AuthorizedEventTests.testRejectsNulls()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1737 - Declaração do método: org.springframework.security.event.authorization.AuthorizationFailureEventTests.AuthorizationFailureEventTests()
1737 - Declaração do método: org.springframework.security.event.authorization.AuthorizationFailureEventTests.AuthorizationFailureEventTests(java.lang.String)
1737 - Declaração do método: org.springframework.security.event.authorization.AuthorizationFailureEventTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1738 - Declaração do método: org.springframework.security.event.authorization.AuthorizationFailureEventTests.testRejectsNulls()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1739 - Declaração do método: org.springframework.security.event.authorization.AuthenticationCredentialsNotFoundEventTests.AuthenticationCredentialsNotFoundEventTests()
1739 - Declaração do método: org.springframework.security.event.authorization.AuthenticationCredentialsNotFoundEventTests.AuthenticationCredentialsNotFoundEventTests(java.lang.String)
1739 - Declaração do método: org.springframework.security.event.authorization.AuthenticationCredentialsNotFoundEventTests.testRejectsNulls()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1740 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptorTests.AbstractSecurityInterceptorTests()
1740 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptorTests.AbstractSecurityInterceptorTests(java.lang.String)
1740 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptorTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1741 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptorTests.testDetectsIfInvocationPassedIncompatibleSecureObject()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAfterInvocationManager(org.springframework.security.AfterInvocationManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.AbstractSecurityInterceptorTests$MockSecurityInterceptorWhichOnlySupportsStrings.setObjectDefinitionSource(org.springframework.security.intercept.ObjectDefinitionSource)
org.springframework.security.intercept.AbstractSecurityInterceptor.beforeInvocation(java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1742 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptorTests.testDetectsViolationOfGetSecureObjectClassMethod()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAfterInvocationManager(org.springframework.security.AfterInvocationManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.AbstractSecurityInterceptorTests$MockSecurityInterceptorReturnsNull.setObjectDefinitionSource(org.springframework.security.intercept.ObjectDefinitionSource)
org.springframework.security.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1743 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptorTests$MockSecurityInterceptorReturnsNull.getSecureObjectClass()
1743 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptorTests$MockSecurityInterceptorReturnsNull.obtainObjectDefinitionSource()
1743 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptorTests$MockSecurityInterceptorReturnsNull.setObjectDefinitionSource(org.springframework.security.intercept.ObjectDefinitionSource)
1743 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptorTests$MockSecurityInterceptorWhichOnlySupportsStrings.getSecureObjectClass()
1743 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptorTests$MockSecurityInterceptorWhichOnlySupportsStrings.obtainObjectDefinitionSource()
1743 - Declaração do método: org.springframework.security.intercept.AbstractSecurityInterceptorTests$MockSecurityInterceptorWhichOnlySupportsStrings.setObjectDefinitionSource(org.springframework.security.intercept.ObjectDefinitionSource)
1743 - Declaração do método: org.springframework.security.intercept.InterceptorStatusTokenTests.InterceptorStatusTokenTests()
1743 - Declaração do método: org.springframework.security.intercept.InterceptorStatusTokenTests.InterceptorStatusTokenTests(java.lang.String)
1743 - Declaração do método: org.springframework.security.intercept.InterceptorStatusTokenTests.testNoArgConstructorDoesntExist()
Métodos invocados: 
java.lang.Class.getDeclaredConstructor([Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1744 - Declaração do método: org.springframework.security.intercept.InterceptorStatusTokenTests.testOperation()
Métodos invocados: 
org.springframework.security.intercept.InterceptorStatusToken.isContextHolderRefreshRequired()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.intercept.InterceptorStatusToken.getAttr()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.InterceptorStatusToken.getSecureObject()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.InterceptorStatusToken.getAuthentication()
org.springframework.security.Authentication.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1745 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests.MethodDefinitionSourceEditorTests()
1745 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests.MethodDefinitionSourceEditorTests(java.lang.String)
1745 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests.setUp()
1745 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests.testAspectJJointPointLookup()
Métodos invocados: 
org.springframework.security.intercept.method.MethodDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1746 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests.testClassNameNotFoundResultsInException()
Métodos invocados: 
org.springframework.security.intercept.method.MethodDefinitionSourceEditor.setAsText(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1747 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests.testClassNameNotInProperFormatResultsInException()
Métodos invocados: 
org.springframework.security.intercept.method.MethodDefinitionSourceEditor.setAsText(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1748 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests.testClassNameValidButMethodNameInvalidResultsInException()
Métodos invocados: 
org.springframework.security.intercept.method.MethodDefinitionSourceEditor.setAsText(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1749 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests.testConcreteClassInvocationsAlsoReturnDefinitionsAgainstInterface()
Métodos invocados: 
org.springframework.security.intercept.method.MethodDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.method.MethodDefinitionMap.getMethodMapSize()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1750 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests.testEmptyStringReturnsEmptyMap()
Métodos invocados: 
org.springframework.security.intercept.method.MethodDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.method.MethodDefinitionMap.getMethodMapSize()
junit.framework.Assert.assertEquals(I, I)
1751 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests.testIterator()
Métodos invocados: 
org.springframework.security.intercept.method.MethodDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.method.MethodDefinitionMap.getConfigAttributeDefinitions()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
junit.framework.Assert.assertEquals(I, I)
1752 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests.testMultiMethodParsing()
Métodos invocados: 
org.springframework.security.intercept.method.MethodDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.method.MethodDefinitionMap.getMethodMapSize()
junit.framework.Assert.assertEquals(I, I)
1753 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests.testMultiMethodParsingWhereLaterMethodsOverrideEarlierMethods()
Métodos invocados: 
org.springframework.security.intercept.method.MethodDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.method.MethodDefinitionMap.getMethodMapSize()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1754 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests.testNullIsReturnedByMethodDefinitionSourceWhenMethodInvocationNotDefined()
Métodos invocados: 
org.springframework.security.intercept.method.MethodDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.assertNull(java.lang.Object)
1755 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests.testNullReturnsEmptyMap()
Métodos invocados: 
org.springframework.security.intercept.method.MethodDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.method.MethodDefinitionMap.getMethodMapSize()
junit.framework.Assert.assertEquals(I, I)
1756 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests.testSingleMethodParsing()
Métodos invocados: 
org.springframework.security.intercept.method.MethodDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1757 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests$MockMethodInvocation.MockMethodInvocation(java.lang.Class, java.lang.String, [Ljava.lang.Class;)
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
1758 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests$MockMethodInvocation.getArguments()
1758 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests$MockMethodInvocation.getMethod()
1758 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests$MockMethodInvocation.getStaticPart()
1758 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests$MockMethodInvocation.getThis()
1758 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionSourceEditorTests$MockMethodInvocation.proceed()
1758 - Declaração do método: org.springframework.security.intercept.method.MockMethodDefinitionSource.MockMethodDefinitionSource(Z, Z)
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
1759 - Declaração do método: org.springframework.security.intercept.method.MockMethodDefinitionSource.getConfigAttributeDefinitions()
1759 - Declaração do método: org.springframework.security.intercept.method.MockMethodDefinitionSource.lookupAttributes(java.lang.reflect.Method)
1759 - Declaração do método: org.springframework.security.intercept.method.MockAttributes.getAttributes(java.lang.Class)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
1760 - Declaração do método: org.springframework.security.intercept.method.MockAttributes.getAttributes(java.lang.reflect.Method)
Métodos invocados: 
java.lang.reflect.Method.getDeclaringClass()
java.lang.Object.equals(java.lang.Object)
java.lang.reflect.Method.getName()
java.lang.String.equals(java.lang.Object)
java.lang.reflect.Method.getName()
java.lang.String.equals(java.lang.Object)
java.lang.reflect.Method.getName()
java.lang.String.equals(java.lang.Object)
java.lang.reflect.Method.getName()
java.lang.String.equals(java.lang.Object)
java.lang.reflect.Method.getDeclaringClass()
java.lang.Object.equals(java.lang.Object)
java.lang.reflect.Method.getName()
java.lang.String.equals(java.lang.Object)
java.lang.reflect.Method.getName()
java.lang.String.equals(java.lang.Object)
java.lang.reflect.Method.getName()
java.lang.String.equals(java.lang.Object)
java.lang.reflect.Method.getName()
java.lang.String.equals(java.lang.Object)
java.lang.reflect.Method.getDeclaringClass()
java.lang.Object.equals(java.lang.Object)
java.lang.reflect.Method.getName()
java.lang.String.equals(java.lang.Object)
java.lang.reflect.Method.getName()
java.lang.String.equals(java.lang.Object)
java.lang.reflect.Method.getName()
java.lang.String.equals(java.lang.Object)
java.lang.reflect.Method.getName()
java.lang.String.equals(java.lang.Object)
1761 - Declaração do método: org.springframework.security.intercept.method.MockAttributes.getAttributes(java.lang.Class, java.lang.Class)
1761 - Declaração do método: org.springframework.security.intercept.method.MockAttributes.getAttributes(java.lang.reflect.Field, java.lang.Class)
1761 - Declaração do método: org.springframework.security.intercept.method.MockAttributes.getAttributes(java.lang.reflect.Field)
1761 - Declaração do método: org.springframework.security.intercept.method.MockAttributes.getAttributes(java.lang.reflect.Method, java.lang.Class)
1761 - Declaração do método: org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluatorTests.MethodInvocationPrivilegeEvaluatorTests()
1761 - Declaração do método: org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluatorTests.MethodInvocationPrivilegeEvaluatorTests(java.lang.String)
1761 - Declaração do método: org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluatorTests.lookupTargetObject()
Métodos invocados: 
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
1762 - Declaração do método: org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluatorTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1763 - Declaração do método: org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluatorTests.makeSecurityInterceptor()
Métodos invocados: 
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
1764 - Declaração do método: org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluatorTests.testAllowsAccessUsingCreate()
Métodos invocados: 
org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluatorTests.lookupTargetObject()
org.springframework.security.util.MethodInvocationUtils.create(java.lang.Object, java.lang.String, [Ljava.lang.Object;)
org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluatorTests.makeSecurityInterceptor()
org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluator.setSecurityInterceptor(org.springframework.security.intercept.AbstractSecurityInterceptor)
org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluator.afterPropertiesSet()
org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluator.isAllowed(org.aopalliance.intercept.MethodInvocation, org.springframework.security.Authentication)
junit.framework.Assert.assertTrue(Z)
1765 - Declaração do método: org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluatorTests.testAllowsAccessUsingCreateFromClass()
Métodos invocados: 
org.springframework.security.util.MethodInvocationUtils.createFromClass(java.lang.Class, java.lang.String, [Ljava.lang.Class;, [Ljava.lang.Object;)
org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluatorTests.makeSecurityInterceptor()
org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluator.setSecurityInterceptor(org.springframework.security.intercept.AbstractSecurityInterceptor)
org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluator.afterPropertiesSet()
org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluator.isAllowed(org.aopalliance.intercept.MethodInvocation, org.springframework.security.Authentication)
junit.framework.Assert.assertTrue(Z)
1766 - Declaração do método: org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluatorTests.testDeclinesAccessUsingCreate()
Métodos invocados: 
org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluatorTests.lookupTargetObject()
org.springframework.security.util.MethodInvocationUtils.create(java.lang.Object, java.lang.String, [Ljava.lang.Object;)
org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluatorTests.makeSecurityInterceptor()
org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluator.setSecurityInterceptor(org.springframework.security.intercept.AbstractSecurityInterceptor)
org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluator.afterPropertiesSet()
org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluator.isAllowed(org.aopalliance.intercept.MethodInvocation, org.springframework.security.Authentication)
junit.framework.Assert.assertFalse(Z)
1767 - Declaração do método: org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluatorTests.testDeclinesAccessUsingCreateFromClass()
Métodos invocados: 
org.springframework.security.util.MethodInvocationUtils.createFromClass(java.lang.Class, java.lang.String, [Ljava.lang.Class;, [Ljava.lang.Object;)
org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluatorTests.makeSecurityInterceptor()
org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluator.setSecurityInterceptor(org.springframework.security.intercept.AbstractSecurityInterceptor)
org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluator.afterPropertiesSet()
org.springframework.security.intercept.method.MethodInvocationPrivilegeEvaluator.isAllowed(org.aopalliance.intercept.MethodInvocation, org.springframework.security.Authentication)
junit.framework.Assert.assertFalse(Z)
1768 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributesTests.MethodDefinitionAttributesTests(java.lang.String)
1768 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributesTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
1769 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributesTests.getConfigAttributeDefinition(java.lang.Class, java.lang.String, [Ljava.lang.Class;)
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.intercept.method.MethodDefinitionAttributes.setAttributes(org.springframework.metadata.Attributes)
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.getAttributes(java.lang.Object)
1770 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributesTests$1.getMethod()
1770 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributesTests.makeInterceptedTarget()
Métodos invocados: 
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
1771 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributesTests.setUp()
1771 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributesTests.testAttributesForInterfaceTargetObject()
Métodos invocados: 
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.getConfigAttributeDefinition(java.lang.Class, java.lang.String, [Ljava.lang.Class;)
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.toSet(org.springframework.security.ConfigAttributeDefinition)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.getConfigAttributeDefinition(java.lang.Class, java.lang.String, [Ljava.lang.Class;)
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.toSet(org.springframework.security.ConfigAttributeDefinition)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.getConfigAttributeDefinition(java.lang.Class, java.lang.String, [Ljava.lang.Class;)
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.toSet(org.springframework.security.ConfigAttributeDefinition)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
1772 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributesTests.testAttributesForOtherTargetObject()
Métodos invocados: 
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.getConfigAttributeDefinition(java.lang.Class, java.lang.String, [Ljava.lang.Class;)
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.toSet(org.springframework.security.ConfigAttributeDefinition)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.getConfigAttributeDefinition(java.lang.Class, java.lang.String, [Ljava.lang.Class;)
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.toSet(org.springframework.security.ConfigAttributeDefinition)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.getConfigAttributeDefinition(java.lang.Class, java.lang.String, [Ljava.lang.Class;)
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.toSet(org.springframework.security.ConfigAttributeDefinition)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.size()
junit.framework.Assert.assertEquals(I, I)
1773 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributesTests.testAttributesForTargetObject()
Métodos invocados: 
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.getConfigAttributeDefinition(java.lang.Class, java.lang.String, [Ljava.lang.Class;)
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.toSet(org.springframework.security.ConfigAttributeDefinition)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.getConfigAttributeDefinition(java.lang.Class, java.lang.String, [Ljava.lang.Class;)
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.toSet(org.springframework.security.ConfigAttributeDefinition)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.size()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.getConfigAttributeDefinition(java.lang.Class, java.lang.String, [Ljava.lang.Class;)
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.toSet(org.springframework.security.ConfigAttributeDefinition)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.size()
junit.framework.Assert.assertEquals(I, I)
1774 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributesTests.testMethodCallWithRunAsReplacement()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.makeInterceptedTarget()
org.springframework.security.ITargetObject.makeUpperCase(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1775 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributesTests.testMethodCallWithoutRunAsReplacement()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.makeInterceptedTarget()
org.springframework.security.ITargetObject.makeLowerCase(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1776 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributesTests.testNullReturnedIfZeroAttributesDefinedForMethodInvocation()
Métodos invocados: 
org.springframework.security.intercept.method.MethodDefinitionAttributesTests.getConfigAttributeDefinition(java.lang.Class, java.lang.String, [Ljava.lang.Class;)
junit.framework.Assert.assertNull(java.lang.Object)
1777 - Declaração do método: org.springframework.security.intercept.method.MethodDefinitionAttributesTests.toSet(org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Set.add(java.lang.Object)
1778 - Declaração do método: org.springframework.security.intercept.method.AbstractMethodDefinitionSourceTests.AbstractMethodDefinitionSourceTests()
1778 - Declaração do método: org.springframework.security.intercept.method.AbstractMethodDefinitionSourceTests.AbstractMethodDefinitionSourceTests(java.lang.String)
1778 - Declaração do método: org.springframework.security.intercept.method.AbstractMethodDefinitionSourceTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1779 - Declaração do método: org.springframework.security.intercept.method.AbstractMethodDefinitionSourceTests.setUp()
1779 - Declaração do método: org.springframework.security.intercept.method.AbstractMethodDefinitionSourceTests.testDoesNotSupportAnotherObject()
Métodos invocados: 
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.supports(java.lang.Class)
junit.framework.Assert.assertFalse(Z)
1780 - Declaração do método: org.springframework.security.intercept.method.AbstractMethodDefinitionSourceTests.testGetAttributesForANonMethodInvocation()
Métodos invocados: 
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1781 - Declaração do método: org.springframework.security.intercept.method.AbstractMethodDefinitionSourceTests.testGetAttributesForANullObject()
Métodos invocados: 
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1782 - Declaração do método: org.springframework.security.intercept.method.AbstractMethodDefinitionSourceTests.testGetAttributesForMethodInvocation()
Métodos invocados: 
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1783 - Declaração do método: org.springframework.security.intercept.method.AbstractMethodDefinitionSourceTests.testSupportsMethodInvocation()
Métodos invocados: 
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
1784 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisorTests.MethodDefinitionSourceAdvisorTests()
1784 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisorTests.MethodDefinitionSourceAdvisorTests(java.lang.String)
1784 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisorTests.getInterceptor()
Métodos invocados: 
org.springframework.security.intercept.method.MethodDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.method.MethodDefinitionSource)
1785 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisorTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1786 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisorTests.setUp()
1786 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisorTests.testAdvisorReturnsFalseWhenMethodInvocationNotDefined()
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisorTests.getInterceptor()
org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisor.getPointcut()
org.springframework.aop.Pointcut.getMethodMatcher()
org.springframework.aop.MethodMatcher.matches(java.lang.reflect.Method, java.lang.Class)
junit.framework.Assert.assertFalse(Z)
1787 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisorTests.testAdvisorReturnsTrueWhenMethodInvocationIsDefined()
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisorTests.getInterceptor()
org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisor.getPointcut()
org.springframework.aop.Pointcut.getMethodMatcher()
org.springframework.aop.MethodMatcher.matches(java.lang.reflect.Method, java.lang.Class)
junit.framework.Assert.assertTrue(Z)
1788 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisorTests.testDetectsImproperlyConfiguredAdvice()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1789 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisorTests.testUnsupportedOperations()
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisorTests.getInterceptor()
org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisor$InternalMethodInvocation.getArguments()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisor$InternalMethodInvocation.getStaticPart()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisor$InternalMethodInvocation.getThis()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisor$InternalMethodInvocation.proceed()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.intercept.method.aopalliance.MethodDefinitionSourceAdvisorTests.getInterceptor()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1790 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.MethodSecurityInterceptorTests()
1790 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.MethodSecurityInterceptorTests(java.lang.String)
1790 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
1791 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
1792 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.makeInterceptedTarget()
Métodos invocados: 
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
1793 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.makeInterceptedTargetRejectsAuthentication()
Métodos invocados: 
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
1794 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.makeInterceptedTargetWithoutAnAfterInvocationManager()
Métodos invocados: 
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAfterInvocationManager(org.springframework.security.AfterInvocationManager)
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
1795 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testCallingAPublicMethodFacadeWillNotRepeatSecurityChecksWhenPassedToTheSecuredMethodItFronts()
Métodos invocados: 
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.makeInterceptedTarget()
org.springframework.security.ITargetObject.publicMakeLowerCase(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1796 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testCallingAPublicMethodWhenPresentingAnAuthenticationObjectWillNotChangeItsIsAuthenticatedProperty()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.makeInterceptedTarget()
org.springframework.security.ITargetObject.publicMakeLowerCase(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1797 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testDeniesWhenAppropriate()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.makeInterceptedTarget()
org.springframework.security.ITargetObject.makeUpperCase(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1798 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testGetters()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.method.MethodDefinitionSource)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAfterInvocationManager(org.springframework.security.AfterInvocationManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.getAccessDecisionManager()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.AbstractSecurityInterceptor.getRunAsManager()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.AbstractSecurityInterceptor.getAuthenticationManager()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.getObjectDefinitionSource()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.AbstractSecurityInterceptor.getAfterInvocationManager()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1799 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testMethodCallWithRunAsReplacement()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.makeInterceptedTarget()
org.springframework.security.ITargetObject.makeUpperCase(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1800 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testMethodCallWithoutRunAsReplacement()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.makeInterceptedTargetWithoutAnAfterInvocationManager()
org.springframework.security.ITargetObject.makeLowerCase(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1801 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testRejectionOfEmptySecurityContext()
Métodos invocados: 
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.makeInterceptedTarget()
org.springframework.security.ITargetObject.makeUpperCase(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1802 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testRejectsAccessDecisionManagersThatDoNotSupportMethodInvocation()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.method.MethodDefinitionSource)
org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1803 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testRejectsCallsWhenAuthenticationIsIncorrect()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.makeInterceptedTargetRejectsAuthentication()
org.springframework.security.ITargetObject.makeLowerCase(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1804 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testRejectsCallsWhenObjectDefinitionSourceDoesNotSupportObject()
Métodos invocados: 
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.method.MethodDefinitionSource)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1805 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testRejectsCallsWhenObjectIsNull()
Métodos invocados: 
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.invoke(org.aopalliance.intercept.MethodInvocation)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1806 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testRejectsRunAsManagersThatDoNotSupportMethodInvocation()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.method.MethodDefinitionSource)
org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAfterInvocationManager(org.springframework.security.AfterInvocationManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1807 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testStartupCheckForAccessDecisionManager()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAfterInvocationManager(org.springframework.security.AfterInvocationManager)
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.method.MethodDefinitionSource)
org.springframework.security.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1808 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testStartupCheckForAuthenticationManager()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAfterInvocationManager(org.springframework.security.AfterInvocationManager)
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.method.MethodDefinitionSource)
org.springframework.security.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1809 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testStartupCheckForMethodDefinitionSource()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1810 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testStartupCheckForRunAsManager()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.method.MethodDefinitionSource)
org.springframework.security.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1811 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testStartupCheckForValidAfterInvocationManager()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAfterInvocationManager(org.springframework.security.AfterInvocationManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.method.MethodDefinitionSource)
org.springframework.security.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1812 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testValidationFailsIfInvalidAttributePresented()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.isValidateConfigAttributes()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.method.MethodDefinitionSource)
org.springframework.security.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1813 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testValidationNotAttemptedIfIsValidateConfigAttributesSetToFalse()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.isValidateConfigAttributes()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.intercept.AbstractSecurityInterceptor.setValidateConfigAttributes(Z)
org.springframework.security.intercept.AbstractSecurityInterceptor.isValidateConfigAttributes()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.method.MethodDefinitionSource)
org.springframework.security.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
junit.framework.Assert.assertTrue(Z)
1814 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests.testValidationNotAttemptedIfMethodDefinitionSourceCannotReturnIterator()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.isValidateConfigAttributes()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.method.MethodDefinitionSource)
org.springframework.security.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
junit.framework.Assert.assertTrue(Z)
1815 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests$MockAccessDecisionManagerWhichOnlySupportsStrings.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
1815 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests$MockAccessDecisionManagerWhichOnlySupportsStrings.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
1816 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests$MockAccessDecisionManagerWhichOnlySupportsStrings.supports(org.springframework.security.ConfigAttribute)
1816 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests$MockAfterInvocationManagerWhichOnlySupportsStrings.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition, java.lang.Object)
1816 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests$MockAfterInvocationManagerWhichOnlySupportsStrings.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
1817 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests$MockAfterInvocationManagerWhichOnlySupportsStrings.supports(org.springframework.security.ConfigAttribute)
1817 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests$MockObjectDefinitionSourceWhichOnlySupportsStrings.getConfigAttributeDefinitions()
1817 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests$MockObjectDefinitionSourceWhichOnlySupportsStrings.lookupAttributes(java.lang.reflect.Method)
1817 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests$MockObjectDefinitionSourceWhichOnlySupportsStrings.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
1818 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests$MockRunAsManagerWhichOnlySupportsStrings.buildRunAs(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
1818 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests$MockRunAsManagerWhichOnlySupportsStrings.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
1819 - Declaração do método: org.springframework.security.intercept.method.aopalliance.MethodSecurityInterceptorTests$MockRunAsManagerWhichOnlySupportsStrings.supports(org.springframework.security.ConfigAttribute)
1819 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptorTests.AspectJSecurityInterceptorTests()
1819 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptorTests.AspectJSecurityInterceptorTests(java.lang.String)
1819 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptorTests.setUp()
1819 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptorTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
1820 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptorTests.testCallbackIsInvokedWhenPermissionGranted()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
org.springframework.security.intercept.method.MethodDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.method.MethodDefinitionSource)
org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptor.getObjectDefinitionSource()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptor.invoke(org.aspectj.lang.JoinPoint, org.springframework.security.intercept.method.aspectj.AspectJCallback)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1821 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptorTests.testCallbackIsNotInvokedWhenPermissionDenied()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
org.springframework.security.intercept.method.MethodDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.method.MethodDefinitionSource)
org.springframework.security.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptorTests$MockAspectJCallback.setThrowExceptionIfInvoked(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptor.invoke(org.aspectj.lang.JoinPoint, org.springframework.security.intercept.method.aspectj.AspectJCallback)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1822 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptorTests$MockAspectJCallback.MockAspectJCallback()
1822 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptorTests$MockAspectJCallback.proceedWithObject()
1822 - Declaração do método: org.springframework.security.intercept.method.aspectj.AspectJSecurityInterceptorTests$MockAspectJCallback.setThrowExceptionIfInvoked(Z)
1822 - Declaração do método: org.springframework.security.intercept.web.AbstractFilterInvocationDefinitionSourceTests.AbstractFilterInvocationDefinitionSourceTests()
1822 - Declaração do método: org.springframework.security.intercept.web.AbstractFilterInvocationDefinitionSourceTests.AbstractFilterInvocationDefinitionSourceTests(java.lang.String)
1822 - Declaração do método: org.springframework.security.intercept.web.AbstractFilterInvocationDefinitionSourceTests.testDoesNotSupportAnotherObject()
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.supports(java.lang.Class)
junit.framework.Assert.assertFalse(Z)
1823 - Declaração do método: org.springframework.security.intercept.web.AbstractFilterInvocationDefinitionSourceTests.testGetAttributesForANonFilterInvocation()
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1824 - Declaração do método: org.springframework.security.intercept.web.AbstractFilterInvocationDefinitionSourceTests.testGetAttributesForANullObject()
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1825 - Declaração do método: org.springframework.security.intercept.web.AbstractFilterInvocationDefinitionSourceTests.testGetAttributesForFilterInvocationSuccess()
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1826 - Declaração do método: org.springframework.security.intercept.web.AbstractFilterInvocationDefinitionSourceTests.testSupportsFilterInvocation()
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
1827 - Declaração do método: org.springframework.security.intercept.web.AbstractFilterInvocationDefinitionSourceTests$MockFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
1827 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.createMap()
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.setStripQueryStringFromUrls(Z)
1828 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.convertUrlToLowercaseIsTrueByDefault()
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.isConvertUrlToLowercaseBeforeComparison()
org.junit.Assert.assertTrue(Z)
1829 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.lookupNotRequiringExactMatchSuccessIfNotMatching()
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.addSecureUrl(java.lang.String, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.createFilterInvocation(java.lang.String, java.lang.String)
org.springframework.security.intercept.web.FilterInvocation.getRequestUrl()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.lookupAttributes(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1830 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.lookupNotRequiringExactMatchSucceedsIfSecureUrlPathContainsUpperCase()
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.addSecureUrl(java.lang.String, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.createFilterInvocation(java.lang.String, java.lang.String)
org.springframework.security.intercept.web.FilterInvocation.getRequestUrl()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.lookupAttributes(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1831 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.lookupRequiringExactMatchFailsIfNotMatching()
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.addSecureUrl(java.lang.String, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.createFilterInvocation(java.lang.String, java.lang.String)
org.springframework.security.intercept.web.FilterInvocation.getRequestUrl()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.lookupAttributes(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1832 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.lookupRequiringExactMatchIsSuccessful()
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.addSecureUrl(java.lang.String, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.createFilterInvocation(java.lang.String, java.lang.String)
org.springframework.security.intercept.web.FilterInvocation.getRequestUrl()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.lookupAttributes(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1833 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.lookupRequiringExactMatchWithAdditionalSlashesIsSuccessful()
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.addSecureUrl(java.lang.String, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.createFilterInvocation(java.lang.String, java.lang.String)
org.springframework.security.intercept.web.FilterInvocation.getRequestUrl()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.lookupAttributes(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1834 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.unknownHttpMethodIsRejected()
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.addSecureUrl(java.lang.String, java.lang.String, org.springframework.security.ConfigAttributeDefinition)
1835 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.httpMethodLookupSucceeds()
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.addSecureUrl(java.lang.String, java.lang.String, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.createFilterInvocation(java.lang.String, java.lang.String)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getAttributes(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1836 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.requestWithDifferentHttpMethodDoesntMatch()
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.addSecureUrl(java.lang.String, java.lang.String, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.createFilterInvocation(java.lang.String, java.lang.String)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getAttributes(java.lang.Object)
org.junit.Assert.assertNull(java.lang.Object)
1837 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.httpMethodSpecificUrlTakesPrecedence()
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.addSecureUrl(java.lang.String, java.lang.String, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.addSecureUrl(java.lang.String, java.lang.String, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.createFilterInvocation(java.lang.String, java.lang.String)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getAttributes(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1838 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.extraQuestionMarkStillMatches()
Métodos invocados: 
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.addSecureUrl(java.lang.String, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.createFilterInvocation(java.lang.String, java.lang.String)
org.springframework.security.intercept.web.FilterInvocation.getRequestUrl()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.lookupAttributes(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.createFilterInvocation(java.lang.String, java.lang.String)
org.springframework.security.intercept.web.FilterInvocation.getRequestUrl()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.lookupAttributes(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1839 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.xmlMapConfigurationIsSuccessful()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.lookupAttributes(java.lang.String, java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.context.support.AbstractApplicationContext.close()
1840 - Declaração do método: org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSourceTests.createFilterInvocation(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setMethod(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
1841 - Declaração do método: org.springframework.security.intercept.web.MockFilterInvocationDefinitionSource.MockFilterInvocationDefinitionSource(Z, Z)
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
1842 - Declaração do método: org.springframework.security.intercept.web.MockFilterInvocationDefinitionSource.getConfigAttributeDefinitions()
1842 - Declaração do método: org.springframework.security.intercept.web.MockFilterInvocationDefinitionSource.lookupAttributes(java.lang.String, java.lang.String)
1842 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests.FilterSecurityInterceptorTests()
1842 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests.FilterSecurityInterceptorTests(java.lang.String)
1842 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
1843 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
1844 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests.testEnsuresAccessDecisionManagerSupportsFilterInvocationClass()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.web.FilterSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.web.FilterInvocationDefinitionSource)
org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1845 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests$1.supports(java.lang.Class)
1845 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests$1.supports(org.springframework.security.ConfigAttribute)
1845 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests$1.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
1845 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests.testEnsuresRunAsManagerSupportsFilterInvocationClass()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.web.FilterSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.web.FilterInvocationDefinitionSource)
org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1846 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests$2.supports(java.lang.Class)
1846 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests$2.supports(org.springframework.security.ConfigAttribute)
1846 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests$2.buildRunAs(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
1846 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests.testHttpsInvocationReflectsPortNumber()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
org.springframework.security.intercept.web.FilterSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.web.FilterInvocationDefinitionSource)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.intercept.web.FilterSecurityInterceptor.invoke(org.springframework.security.intercept.web.FilterInvocation)
1847 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests.testNormalStartupAndGetter()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.web.FilterSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.web.FilterInvocationDefinitionSource)
org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.afterPropertiesSet()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.intercept.web.FilterSecurityInterceptor.getObjectDefinitionSource()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1848 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests.testSuccessfulInvocation()
Métodos invocados: 
org.springframework.security.intercept.AbstractSecurityInterceptor.setAccessDecisionManager(org.springframework.security.AccessDecisionManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setRunAsManager(org.springframework.security.RunAsManager)
org.springframework.security.intercept.AbstractSecurityInterceptor.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
org.springframework.security.intercept.web.FilterSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.web.FilterInvocationDefinitionSource)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.intercept.web.FilterSecurityInterceptor.invoke(org.springframework.security.intercept.web.FilterInvocation)
1849 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests.testNotLoadedFromApplicationContext()
Métodos invocados: 
java.util.HashMap.put(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.web.FilterSecurityInterceptor.setObjectDefinitionSource(org.springframework.security.intercept.web.FilterInvocationDefinitionSource)
org.springframework.security.intercept.web.FilterSecurityInterceptor.invoke(org.springframework.security.intercept.web.FilterInvocation)
1850 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests$MockFilterChain.MockFilterChain(Z)
1850 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests$MockFilterChain.MockFilterChain()
1850 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests$MockFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
Métodos invocados: 
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
1851 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests$MockFilterInvocationDefinitionMap.MockFilterInvocationDefinitionMap(java.lang.String, org.springframework.security.ConfigAttributeDefinition)
1851 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests$MockFilterInvocationDefinitionMap.getAttributes(java.lang.Object)
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocation.getHttpRequest()
javax.servlet.http.HttpServletRequest.getServletPath()
java.lang.String.equals(java.lang.Object)
1852 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests$MockFilterInvocationDefinitionMap.getConfigAttributeDefinitions()
1852 - Declaração do método: org.springframework.security.intercept.web.FilterSecurityInterceptorTests$MockFilterInvocationDefinitionMap.supports(java.lang.Class)
1852 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.FilterInvocationDefinitionSourceEditorTests()
1852 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.FilterInvocationDefinitionSourceEditorTests(java.lang.String)
1852 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testConvertUrlToLowercaseDefaultSettingUnchangedByEditor()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.isConvertUrlToLowercaseBeforeComparison()
junit.framework.Assert.assertFalse(Z)
1853 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testConvertUrlToLowercaseDetectsUppercaseEntries()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.lastIndexOf(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1854 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testConvertUrlToLowercaseSettingApplied()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.isConvertUrlToLowercaseBeforeComparison()
junit.framework.Assert.assertTrue(Z)
1855 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testDefaultIsRegularExpression()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getUrlMatcher()
junit.framework.Assert.assertTrue(Z)
1856 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testDetectsDuplicateDirectivesOnSameLineSituation1()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.lastIndexOf(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1857 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testDetectsDuplicateDirectivesOnSameLineSituation2()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.lastIndexOf(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1858 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testDetectsDuplicateDirectivesOnSameLineSituation3()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.lastIndexOf(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1859 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testEmptyStringReturnsEmptyMap()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getMapSize()
junit.framework.Assert.assertEquals(I, I)
1860 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testInvalidRegularExpressionsDetected()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
1861 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testIterator()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getConfigAttributeDefinitions()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
junit.framework.Assert.assertEquals(I, I)
1862 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testMapReturnsNullWhenNoMatchFound()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1863 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testMultiUrlParsing()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getMapSize()
junit.framework.Assert.assertEquals(I, I)
1864 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testNullReturnsEmptyMap()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getMapSize()
junit.framework.Assert.assertEquals(I, I)
1865 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testOrderOfEntriesIsPreservedOrderA()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1866 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testOrderOfEntriesIsPreservedOrderB()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1867 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testSingleUrlParsingWithRegularExpressions()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1868 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testSingleUrlParsingWithAntPaths()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1869 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testWhitespaceAndCommentsAndLinesWithoutEqualsSignsAreIgnored()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getMapSize()
junit.framework.Assert.assertEquals(I, I)
1870 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testAntPathDirectiveIsDetected()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getUrlMatcher()
junit.framework.Assert.assertTrue(Z)
1871 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testInvalidNameValueFailsToParse()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
1872 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditorTests.testSingleUrlParsing()
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.intercept.web.DefaultFilterInvocationDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1873 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationTests.FilterInvocationTests()
1873 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationTests.FilterInvocationTests(java.lang.String)
1873 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1874 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationTests.setUp()
1874 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationTests.testGettersAndStringMethods()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setPathInfo(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.intercept.web.FilterInvocation.getRequest()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.web.FilterInvocation.getHttpRequest()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.web.FilterInvocation.getResponse()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.web.FilterInvocation.getHttpResponse()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.web.FilterInvocation.getChain()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.web.FilterInvocation.getRequestUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.intercept.web.FilterInvocation.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.intercept.web.FilterInvocation.getFullRequestUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1875 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationTests.testNoArgConstructorDoesntExist()
Métodos invocados: 
java.lang.Class.getDeclaredConstructor([Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1876 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationTests.testRejectsNullFilterChain()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1877 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationTests.testRejectsNullServletRequest()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1878 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationTests.testRejectsNullServletResponse()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1879 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationTests.testRejectsServletRequestWhichIsNotHttpServletRequest()
Métodos invocados: 
org.jmock.core.MockObjectSupportTestCase.newDummy(java.lang.Class)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1880 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationTests.testRejectsServletResponseWhichIsNotHttpServletResponse()
Métodos invocados: 
org.jmock.core.MockObjectSupportTestCase.newDummy(java.lang.Class)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1881 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationTests.testStringMethodsWithAQueryString()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.intercept.web.FilterInvocation.getRequestUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.intercept.web.FilterInvocation.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.intercept.web.FilterInvocation.getFullRequestUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1882 - Declaração do método: org.springframework.security.intercept.web.FilterInvocationTests.testStringMethodsWithoutAnyQueryString()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.intercept.web.FilterInvocation.getRequestUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.intercept.web.FilterInvocation.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.intercept.web.FilterInvocation.getFullRequestUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1883 - Declaração do método: org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluatorTests.WebInvocationPrivilegeEvaluatorTests()
1883 - Declaração do método: org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluatorTests.WebInvocationPrivilegeEvaluatorTests(java.lang.String)
1883 - Declaração do método: org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluatorTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1884 - Declaração do método: org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluatorTests.makeFilterSecurityInterceptor()
Métodos invocados: 
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
1885 - Declaração do método: org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluatorTests.testAllowsAccess1()
Métodos invocados: 
org.springframework.security.util.FilterInvocationUtils.create(java.lang.String)
org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluatorTests.makeFilterSecurityInterceptor()
org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluator.setSecurityInterceptor(org.springframework.security.intercept.AbstractSecurityInterceptor)
org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluator.afterPropertiesSet()
org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluator.isAllowed(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.Authentication)
junit.framework.Assert.assertTrue(Z)
1886 - Declaração do método: org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluatorTests.testAllowsAccess2()
Métodos invocados: 
org.springframework.security.util.FilterInvocationUtils.create(java.lang.String)
org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluatorTests.makeFilterSecurityInterceptor()
org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluator.setSecurityInterceptor(org.springframework.security.intercept.AbstractSecurityInterceptor)
org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluator.afterPropertiesSet()
org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluator.isAllowed(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.Authentication)
junit.framework.Assert.assertTrue(Z)
1887 - Declaração do método: org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluatorTests.testDeniesAccess1()
Métodos invocados: 
org.springframework.security.util.FilterInvocationUtils.create(java.lang.String)
org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluatorTests.makeFilterSecurityInterceptor()
org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluator.setSecurityInterceptor(org.springframework.security.intercept.AbstractSecurityInterceptor)
org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluator.afterPropertiesSet()
org.springframework.security.intercept.web.WebInvocationPrivilegeEvaluator.isAllowed(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.Authentication)
junit.framework.Assert.assertFalse(Z)
1888 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests.onSetUp()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
1889 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests.testCompareOfCorrectValueSucceeds()
Métodos invocados: 
org.springframework.security.ldap.SpringSecurityLdapTemplate.compare(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
1890 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests.testCompareOfCorrectByteValueSucceeds()
Métodos invocados: 
org.springframework.security.ldap.LdapUtils.getUtf8Bytes(java.lang.String)
org.springframework.security.ldap.SpringSecurityLdapTemplate.compare(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
1891 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests.testCompareOfWrongByteValueFails()
Métodos invocados: 
org.springframework.security.ldap.LdapUtils.getUtf8Bytes(java.lang.String)
org.springframework.security.ldap.SpringSecurityLdapTemplate.compare(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertFalse(Z)
1892 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests.testCompareOfWrongValueFails()
Métodos invocados: 
org.springframework.security.ldap.SpringSecurityLdapTemplate.compare(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertFalse(Z)
1893 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests.testNamingExceptionIsTranslatedCorrectly()
Métodos invocados: 
org.springframework.ldap.core.LdapTemplate.executeReadOnly(org.springframework.ldap.core.ContextExecutor)
org.junit.Assert.fail(java.lang.String)
1894 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests$1.executeWithContext(javax.naming.directory.DirContext)
1894 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests.testRoleSearchReturnsCorrectNumberOfRoles()
Métodos invocados: 
org.springframework.security.ldap.SpringSecurityLdapTemplate.searchForSingleAttributeValues(java.lang.String, java.lang.String, [Ljava.lang.Object;, java.lang.String)
java.util.Set.size()
org.junit.Assert.assertEquals(java.lang.String, J, J)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
1895 - Declaração do método: org.springframework.security.ldap.SpringSecurityLdapTemplateTests.testRoleSearchForMissingAttributeFailsGracefully()
Métodos invocados: 
org.springframework.security.ldap.SpringSecurityLdapTemplate.searchForSingleAttributeValues(java.lang.String, java.lang.String, [Ljava.lang.Object;, java.lang.String)
java.util.Set.size()
org.junit.Assert.assertEquals(J, J)
1896 - Declaração do método: org.springframework.security.ldap.MockSpringSecurityContextSource.MockSpringSecurityContextSource()
1896 - Declaração do método: org.springframework.security.ldap.MockSpringSecurityContextSource.MockSpringSecurityContextSource(javax.naming.directory.DirContext, java.lang.String)
1896 - Declaração do método: org.springframework.security.ldap.MockSpringSecurityContextSource.getReadOnlyContext()
1896 - Declaração do método: org.springframework.security.ldap.MockSpringSecurityContextSource.getReadWriteContext()
1896 - Declaração do método: org.springframework.security.ldap.MockSpringSecurityContextSource.getReadWriteContext(java.lang.String, java.lang.Object)
1896 - Declaração do método: org.springframework.security.ldap.MockSpringSecurityContextSource.getBaseLdapPath()
1896 - Declaração do método: org.springframework.security.ldap.MockSpringSecurityContextSource.getBaseLdapPathAsString()
Métodos invocados: 
org.springframework.security.ldap.MockSpringSecurityContextSource.getBaseLdapPath()
org.springframework.ldap.core.DistinguishedName.toString()
1897 - Declaração do método: org.springframework.security.ldap.LdapUtilsTests.testCloseContextSwallowsNamingException()
Métodos invocados: 
org.jmock.MockObjectTestCase.mock(java.lang.Class)
org.jmock.MockObjectTestCase.once()
org.jmock.Mock.expects(org.jmock.core.InvocationMatcher)
org.jmock.builder.NameMatchBuilder.method(java.lang.String)
org.jmock.MockObjectTestCase.throwException(java.lang.Throwable)
org.jmock.builder.StubBuilder.will(org.jmock.core.Stub)
org.jmock.Mock.proxy()
org.springframework.security.ldap.LdapUtils.closeContext(javax.naming.Context)
1898 - Declaração do método: org.springframework.security.ldap.LdapUtilsTests.testGetRelativeNameReturnsEmptyStringForDnEqualToBaseName()
Métodos invocados: 
org.jmock.MockObjectTestCase.mock(java.lang.Class)
org.jmock.MockObjectTestCase.atLeastOnce()
org.jmock.Mock.expects(org.jmock.core.InvocationMatcher)
org.jmock.builder.NameMatchBuilder.method(java.lang.String)
org.jmock.MockObjectTestCase.returnValue(java.lang.Object)
org.jmock.builder.StubBuilder.will(org.jmock.core.Stub)
org.jmock.Mock.proxy()
org.springframework.security.ldap.LdapUtils.getRelativeName(java.lang.String, javax.naming.Context)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1899 - Declaração do método: org.springframework.security.ldap.LdapUtilsTests.testGetRelativeNameReturnsFullDnWithEmptyBaseName()
Métodos invocados: 
org.jmock.MockObjectTestCase.mock(java.lang.Class)
org.jmock.MockObjectTestCase.atLeastOnce()
org.jmock.Mock.expects(org.jmock.core.InvocationMatcher)
org.jmock.builder.NameMatchBuilder.method(java.lang.String)
org.jmock.MockObjectTestCase.returnValue(java.lang.Object)
org.jmock.builder.StubBuilder.will(org.jmock.core.Stub)
org.jmock.Mock.proxy()
org.springframework.security.ldap.LdapUtils.getRelativeName(java.lang.String, javax.naming.Context)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1900 - Declaração do método: org.springframework.security.ldap.LdapUtilsTests.testGetRelativeNameWorksWithArbitrarySpaces()
Métodos invocados: 
org.jmock.MockObjectTestCase.mock(java.lang.Class)
org.jmock.MockObjectTestCase.atLeastOnce()
org.jmock.Mock.expects(org.jmock.core.InvocationMatcher)
org.jmock.builder.NameMatchBuilder.method(java.lang.String)
org.jmock.MockObjectTestCase.returnValue(java.lang.Object)
org.jmock.builder.StubBuilder.will(org.jmock.core.Stub)
org.jmock.Mock.proxy()
org.springframework.security.ldap.LdapUtils.getRelativeName(java.lang.String, javax.naming.Context)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1901 - Declaração do método: org.springframework.security.ldap.LdapUtilsTests.testRootDnsAreParsedFromUrlsCorrectly()
Métodos invocados: 
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ldap.LdapUtils.parseRootDnFromUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1902 - Declaração do método: org.springframework.security.ldap.DefaultSpringSecurityContextSourceTests.instantiationSucceeds()
1902 - Declaração do método: org.springframework.security.ldap.SpringSecurityAuthenticationSourceTests.clearContext()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
1903 - Declaração do método: org.springframework.security.ldap.SpringSecurityAuthenticationSourceTests.principalAndCredentialsAreEmptyWithNoAuthentication()
Métodos invocados: 
org.springframework.ldap.core.AuthenticationSource.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.ldap.core.AuthenticationSource.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1904 - Declaração do método: org.springframework.security.ldap.SpringSecurityAuthenticationSourceTests.principalIsEmptyForAnonymousUser()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.util.AuthorityUtils.commaSeparatedStringToAuthorityArray(java.lang.String)
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.ldap.core.AuthenticationSource.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1905 - Declaração do método: org.springframework.security.ldap.SpringSecurityAuthenticationSourceTests.getPrincipalRejectsNonLdapUserDetailsObject()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.ldap.core.AuthenticationSource.getPrincipal()
1906 - Declaração do método: org.springframework.security.ldap.SpringSecurityAuthenticationSourceTests.expectedCredentialsAreReturned()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.ldap.core.AuthenticationSource.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1907 - Declaração do método: org.springframework.security.ldap.SpringSecurityAuthenticationSourceTests.expectedPrincipalIsReturned()
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setUsername(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setDn(javax.naming.Name)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.createUserDetails()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.ldap.core.AuthenticationSource.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1908 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactoryTests.onSetUp()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.getInitialDirContextFactory()
org.springframework.security.ldap.DefaultInitialDirContextFactory.setMessageSource(org.springframework.context.MessageSource)
1909 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactoryTests.testAnonymousBindSucceeds()
Métodos invocados: 
org.springframework.security.ldap.DefaultInitialDirContextFactory.newInitialDirContext()
javax.naming.Context.close()
1910 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactoryTests.testBaseDnIsParsedFromCorrectlyFromUrl()
Métodos invocados: 
org.springframework.security.ldap.DefaultInitialDirContextFactory.getRootDn()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.DefaultInitialDirContextFactory.getRootDn()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.DefaultInitialDirContextFactory.getRootDn()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1911 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactoryTests.testBindAsManagerFailsIfNoPasswordSet()
Métodos invocados: 
org.springframework.security.ldap.DefaultInitialDirContextFactory.setManagerDn(java.lang.String)
org.springframework.security.ldap.DefaultInitialDirContextFactory.newInitialDirContext()
org.junit.Assert.fail(java.lang.String)
org.springframework.security.ldap.LdapUtils.closeContext(javax.naming.Context)
1912 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactoryTests.testBindAsManagerSucceeds()
Métodos invocados: 
org.springframework.security.ldap.DefaultInitialDirContextFactory.setManagerPassword(java.lang.String)
org.springframework.security.ldap.DefaultInitialDirContextFactory.setManagerDn(java.lang.String)
org.springframework.security.ldap.DefaultInitialDirContextFactory.newInitialDirContext()
javax.naming.Context.close()
1913 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactoryTests.testConnectionAsSpecificUserSucceeds()
Métodos invocados: 
org.springframework.security.ldap.DefaultInitialDirContextFactory.newInitialDirContext(java.lang.String, java.lang.String)
javax.naming.Context.close()
1914 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactoryTests.testConnectionFailure()
Métodos invocados: 
org.springframework.security.ldap.DefaultInitialDirContextFactory.setInitialContextFactory(java.lang.String)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.DefaultInitialDirContextFactory.setExtraEnvVars(java.util.Map)
org.springframework.security.ldap.DefaultInitialDirContextFactory.setUseConnectionPool(Z)
org.springframework.security.ldap.DefaultInitialDirContextFactory.newInitialDirContext()
org.junit.Assert.fail(java.lang.String)
1915 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactoryTests.testEnvironment()
Métodos invocados: 
org.springframework.security.ldap.DefaultInitialDirContextFactory.getEnvironment()
java.util.Hashtable.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Hashtable.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Hashtable.get(java.lang.Object)
org.junit.Assert.assertNull(java.lang.Object)
java.util.Hashtable.get(java.lang.Object)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.ldap.DefaultInitialDirContextFactory.setInitialContextFactory(java.lang.String)
org.springframework.security.ldap.DefaultInitialDirContextFactory.getEnvironment()
java.util.Hashtable.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.DefaultInitialDirContextFactory.setAuthenticationType(java.lang.String)
org.springframework.security.ldap.DefaultInitialDirContextFactory.getEnvironment()
java.util.Hashtable.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.ldap.DefaultInitialDirContextFactory.setExtraEnvVars(java.util.Map)
org.springframework.security.ldap.DefaultInitialDirContextFactory.getEnvironment()
java.util.Hashtable.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1916 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactoryTests.testInvalidPasswordCausesBadCredentialsException()
Métodos invocados: 
org.springframework.security.ldap.DefaultInitialDirContextFactory.setManagerDn(java.lang.String)
org.springframework.security.ldap.DefaultInitialDirContextFactory.setManagerPassword(java.lang.String)
org.springframework.security.ldap.DefaultInitialDirContextFactory.newInitialDirContext()
org.junit.Assert.fail(java.lang.String)
org.springframework.security.ldap.LdapUtils.closeContext(javax.naming.Context)
1917 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactoryTests.testMultipleProviderUrlsAreAccepted()
1917 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactoryTests.testMultipleProviderUrlsWithDifferentRootsAreRejected()
Métodos invocados: 
org.junit.Assert.fail(java.lang.String)
1918 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactoryTests.testSecureLdapUrlIsSupported()
Métodos invocados: 
org.springframework.security.ldap.DefaultInitialDirContextFactory.getRootDn()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1919 - Declaração do método: org.springframework.security.ldap.DefaultInitialDirContextFactoryTests.testServiceLocationUrlIsSupported()
Métodos invocados: 
org.springframework.security.ldap.DefaultInitialDirContextFactory.getRootDn()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1920 - Declaração do método: org.springframework.security.ldap.AbstractLdapIntegrationTests.AbstractLdapIntegrationTests()
1920 - Declaração do método: org.springframework.security.ldap.AbstractLdapIntegrationTests.loadContext()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.shutdownRunningServers()
1921 - Declaração do método: org.springframework.security.ldap.AbstractLdapIntegrationTests.closeContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
org.springframework.security.ldap.AbstractLdapIntegrationTests.shutdownRunningServers()
1922 - Declaração do método: org.springframework.security.ldap.AbstractLdapIntegrationTests.shutdownRunningServers()
Métodos invocados: 
org.apache.directory.server.core.DirectoryService.getInstance()
org.apache.directory.server.core.DirectoryService.isStarted()
org.apache.directory.server.core.DirectoryService.getConfiguration()
org.apache.directory.server.core.DirectoryServiceConfiguration.getStartupConfiguration()
java.lang.Object.toString()
java.io.PrintStream.println(java.lang.String)
java.io.PrintStream.println(java.lang.String)
org.apache.directory.server.core.DirectoryService.shutdown()
1923 - Declaração do método: org.springframework.security.ldap.AbstractLdapIntegrationTests.onSetUp()
1923 - Declaração do método: org.springframework.security.ldap.AbstractLdapIntegrationTests.reloadServerDataIfDirty()
Métodos invocados: 
org.springframework.core.io.ClassPathResource.getFile()
java.io.File.exists()
org.springframework.core.io.ClassPathResource.getFile()
java.io.File.getAbsolutePath()
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
org.springframework.ldap.core.ContextSource.getReadWriteContext()
org.springframework.security.ldap.AbstractLdapIntegrationTests.clearSubContexts(javax.naming.directory.DirContext, javax.naming.Name)
org.springframework.core.io.ClassPathResource.getFile()
java.io.File.getAbsolutePath()
org.apache.directory.server.protocol.shared.store.LdifFileLoader.execute()
javax.naming.Context.close()
1924 - Declaração do método: org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
1925 - Declaração do método: org.springframework.security.ldap.AbstractLdapIntegrationTests.getInitialDirContextFactory()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
1926 - Declaração do método: org.springframework.security.ldap.AbstractLdapIntegrationTests.clearSubContexts(javax.naming.directory.DirContext, javax.naming.Name)
Métodos invocados: 
javax.naming.Context.listBindings(javax.naming.Name)
javax.naming.NamingEnumeration.hasMore()
javax.naming.NamingEnumeration.next()
javax.naming.NameClassPair.getName()
org.springframework.ldap.core.DistinguishedName.prepend(org.springframework.ldap.core.DistinguishedName)
javax.naming.Context.destroySubcontext(javax.naming.Name)
org.springframework.security.ldap.AbstractLdapIntegrationTests.clearSubContexts(javax.naming.directory.DirContext, javax.naming.Name)
javax.naming.Context.destroySubcontext(javax.naming.Name)
java.lang.Throwable.printStackTrace()
javax.naming.NamingEnumeration.close()
1927 - Declaração do método: org.springframework.security.ldap.populator.UserDetailsServiceLdapAuthoritiesPopulatorTests.delegationToUserDetailsServiceReturnsCorrectRoles()
Métodos invocados: 
org.springframework.security.ldap.populator.UserDetailsServiceLdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
org.junit.Assert.assertEquals(J, J)
org.springframework.security.GrantedAuthority.getAuthority()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1928 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulatorTests.onSetUp()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
1929 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulatorTests.testDefaultRoleIsAssignedWhenSet()
Métodos invocados: 
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setDefaultRole(java.lang.String)
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
org.junit.Assert.assertEquals(J, J)
org.springframework.security.GrantedAuthority.getAuthority()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1930 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulatorTests.testGroupSearchReturnsExpectedRoles()
Métodos invocados: 
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setRolePrefix(java.lang.String)
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setGroupRoleAttribute(java.lang.String)
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setSearchSubtree(Z)
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setSearchSubtree(Z)
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setConvertToUpperCase(Z)
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setGroupSearchFilter(java.lang.String)
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
org.junit.Assert.assertEquals(java.lang.String, J, J)
java.lang.Object.toString()
java.util.Set.add(java.lang.Object)
java.lang.Object.toString()
java.util.Set.add(java.lang.Object)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
1931 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulatorTests.testUseOfUsernameParameterReturnsExpectedRoles()
Métodos invocados: 
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setGroupRoleAttribute(java.lang.String)
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setConvertToUpperCase(Z)
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setGroupSearchFilter(java.lang.String)
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
org.junit.Assert.assertEquals(java.lang.String, J, J)
org.springframework.security.GrantedAuthority.getAuthority()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1932 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulatorTests.testSubGroupRolesAreNotFoundByDefault()
Métodos invocados: 
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setGroupRoleAttribute(java.lang.String)
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setConvertToUpperCase(Z)
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
org.junit.Assert.assertEquals(java.lang.String, J, J)
org.springframework.security.GrantedAuthority.getAuthority()
java.util.Set.add(java.lang.Object)
org.springframework.security.GrantedAuthority.getAuthority()
java.util.Set.add(java.lang.Object)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
1933 - Declaração do método: org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulatorTests.testSubGroupRolesAreFoundWhenSubtreeSearchIsEnabled()
Métodos invocados: 
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setGroupRoleAttribute(java.lang.String)
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setConvertToUpperCase(Z)
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.setSearchSubtree(Z)
org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
org.junit.Assert.assertEquals(java.lang.String, J, J)
org.springframework.security.GrantedAuthority.getAuthority()
java.util.Set.add(java.lang.Object)
org.springframework.security.GrantedAuthority.getAuthority()
java.util.Set.add(java.lang.Object)
org.springframework.security.GrantedAuthority.getAuthority()
java.util.Set.add(java.lang.Object)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
1934 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearchTests.onSetUp()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
1935 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearchTests.basicSearchSucceeds()
Métodos invocados: 
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.setSearchSubtree(Z)
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.setSearchTimeLimit(I)
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.setDerefLinkFlag(Z)
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.searchForUser(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.ldap.core.DirContextOperations.getDn()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1936 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearchTests.extraFilterPartToExcludeBob()
Métodos invocados: 
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.searchForUser(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1937 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearchTests.searchFailsOnMultipleMatches()
Métodos invocados: 
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.searchForUser(java.lang.String)
1938 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearchTests.searchForInvalidUserFails()
Métodos invocados: 
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.searchForUser(java.lang.String)
1939 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearchTests.subTreeSearchSucceeds()
Métodos invocados: 
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.setSearchSubtree(Z)
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.searchForUser(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.ldap.core.DirContextOperations.getDn()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1940 - Declaração do método: org.springframework.security.ldap.search.FilterBasedLdapUserSearchTests.searchWithDifferentSearchBaseIsSuccessful()
Métodos invocados: 
org.springframework.security.ldap.search.FilterBasedLdapUserSearch.searchForUser(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1941 - Declaração do método: org.springframework.security.providers.TestingAuthenticationProviderTests.TestingAuthenticationProviderTests()
1941 - Declaração do método: org.springframework.security.providers.TestingAuthenticationProviderTests.TestingAuthenticationProviderTests(java.lang.String)
1941 - Declaração do método: org.springframework.security.providers.TestingAuthenticationProviderTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1942 - Declaração do método: org.springframework.security.providers.TestingAuthenticationProviderTests.setUp()
1942 - Declaração do método: org.springframework.security.providers.TestingAuthenticationProviderTests.testAuthenticates()
Métodos invocados: 
org.springframework.security.providers.TestingAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.providers.TestingAuthenticationToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.TestingAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1943 - Declaração do método: org.springframework.security.providers.TestingAuthenticationProviderTests.testSupports()
Métodos invocados: 
org.springframework.security.providers.TestingAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.TestingAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
1944 - Declaração do método: org.springframework.security.providers.ProviderManagerTests.authenticationFailsWithUnsupportedToken()
Métodos invocados: 
org.springframework.security.providers.ProviderManagerTests.makeProviderManager()
org.springframework.security.providers.ProviderManager.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
org.springframework.security.AbstractAuthenticationManager.authenticate(org.springframework.security.Authentication)
1945 - Declaração do método: org.springframework.security.providers.ProviderManagerTests.authenticationSucceedsWithSupportedTokenAndReturnsExpectedObject()
Métodos invocados: 
org.springframework.security.providers.ProviderManagerTests.makeProviderManager()
org.springframework.security.providers.ProviderManager.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
org.springframework.security.AbstractAuthenticationManager.authenticate(org.springframework.security.Authentication)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.providers.TestingAuthenticationToken.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.TestingAuthenticationToken.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1946 - Declaração do método: org.springframework.security.providers.ProviderManagerTests.authenticationSuccessWhenFirstProviderReturnsNullButSecondAuthenticates()
Métodos invocados: 
org.springframework.security.providers.ProviderManagerTests.makeProviderManagerWithMockProviderWhichReturnsNullInList()
org.springframework.security.providers.ProviderManager.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
org.springframework.security.AbstractAuthenticationManager.authenticate(org.springframework.security.Authentication)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.providers.TestingAuthenticationToken.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.TestingAuthenticationToken.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1947 - Declaração do método: org.springframework.security.providers.ProviderManagerTests.concurrentSessionControllerConfiguration()
Métodos invocados: 
org.springframework.security.providers.ProviderManager.getSessionController()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.providers.ProviderManager.getSessionController()
org.junit.Assert.assertTrue(Z)
org.springframework.security.providers.ProviderManager.setSessionController(org.springframework.security.concurrent.ConcurrentSessionController)
org.springframework.security.providers.ProviderManager.getSessionController()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1948 - Declaração do método: org.springframework.security.providers.ProviderManagerTests.startupFailsIfProviderListDoesNotContainProviders()
Métodos invocados: 
java.util.List.add(java.lang.Object)
org.springframework.security.providers.ProviderManager.setProviders(java.util.List)
1949 - Declaração do método: org.springframework.security.providers.ProviderManagerTests.startupFailsIfProviderListNotSet()
Métodos invocados: 
org.springframework.security.providers.ProviderManager.afterPropertiesSet()
1950 - Declaração do método: org.springframework.security.providers.ProviderManagerTests.testStartupFailsIfProviderListNull()
Métodos invocados: 
org.springframework.security.providers.ProviderManager.setProviders(java.util.List)
1951 - Declaração do método: org.springframework.security.providers.ProviderManagerTests.detailsAreNotSetOnAuthenticationTokenIfAlreadySetByProvider()
Métodos invocados: 
org.springframework.security.providers.ProviderManagerTests.makeProviderManager()
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
java.util.Arrays.asList([Lorg.springframework.security.providers.AuthenticationProvider;)
org.springframework.security.providers.ProviderManager.setProviders(java.util.List)
org.springframework.security.providers.ProviderManagerTests.createAuthenticationToken()
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.AbstractAuthenticationManager.authenticate(org.springframework.security.Authentication)
org.springframework.security.Authentication.getDetails()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1952 - Declaração do método: org.springframework.security.providers.ProviderManagerTests$1.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
1953 - Declaração do método: org.springframework.security.providers.ProviderManagerTests$1.supports(java.lang.Class)
1953 - Declaração do método: org.springframework.security.providers.ProviderManagerTests.detailsAreSetOnAuthenticationTokenIfNotAlreadySetByProvider()
Métodos invocados: 
org.springframework.security.providers.ProviderManagerTests.makeProviderManager()
org.springframework.security.providers.ProviderManagerTests.createAuthenticationToken()
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.AbstractAuthenticationManager.authenticate(org.springframework.security.Authentication)
org.springframework.security.Authentication.getDetails()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1954 - Declaração do método: org.springframework.security.providers.ProviderManagerTests.accountStatusExceptionPreventsCallsToSubsequentProviders()
Métodos invocados: 
org.springframework.security.providers.ProviderManagerTests.makeProviderManager()
java.util.Arrays.asList([Lorg.springframework.security.providers.AuthenticationProvider;)
org.springframework.security.providers.ProviderManager.setProviders(java.util.List)
org.springframework.security.providers.ProviderManagerTests.createAuthenticationToken()
org.springframework.security.AbstractAuthenticationManager.authenticate(org.springframework.security.Authentication)
1955 - Declaração do método: org.springframework.security.providers.ProviderManagerTests.concurrentLoginExceptionPreventsCallsToSubsequentProviders()
Métodos invocados: 
org.springframework.security.providers.ProviderManagerTests.makeProviderManager()
java.util.Arrays.asList([Lorg.springframework.security.providers.AuthenticationProvider;)
org.springframework.security.providers.ProviderManager.setProviders(java.util.List)
org.springframework.security.providers.ProviderManagerTests.createAuthenticationToken()
org.springframework.security.AbstractAuthenticationManager.authenticate(org.springframework.security.Authentication)
1956 - Declaração do método: org.springframework.security.providers.ProviderManagerTests.createAuthenticationToken()
1956 - Declaração do método: org.springframework.security.providers.ProviderManagerTests.makeProviderManager()
Métodos invocados: 
java.util.List.add(java.lang.Object)
org.springframework.security.providers.ProviderManager.setProviders(java.util.List)
org.springframework.security.providers.ProviderManager.afterPropertiesSet()
1957 - Declaração do método: org.springframework.security.providers.ProviderManagerTests.makeProviderManagerWithMockProviderWhichReturnsNullInList()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.providers.ProviderManager.setProviders(java.util.List)
1958 - Declaração do método: org.springframework.security.providers.ProviderManagerTests$MockProvider.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.security.providers.ProviderManagerTests$MockProvider.supports(java.lang.Class)
1959 - Declaração do método: org.springframework.security.providers.ProviderManagerTests$MockProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
1960 - Declaração do método: org.springframework.security.providers.ProviderManagerTests$MockProviderWhichReturnsNull.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.security.providers.ProviderManagerTests$MockProviderWhichReturnsNull.supports(java.lang.Class)
1961 - Declaração do método: org.springframework.security.providers.ProviderManagerTests$MockProviderWhichReturnsNull.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
1962 - Declaração do método: org.springframework.security.providers.ProviderManagerTests$MockProviderWhichThrowsAccountStatusException.authenticate(org.springframework.security.Authentication)
1962 - Declaração do método: org.springframework.security.providers.ProviderManagerTests$MockProviderWhichThrowsAccountStatusException.supports(java.lang.Class)
1962 - Declaração do método: org.springframework.security.providers.ProviderManagerTests$MockProviderWhichThrowsConcurrentLoginException.authenticate(org.springframework.security.Authentication)
1962 - Declaração do método: org.springframework.security.providers.ProviderManagerTests$MockProviderWhichThrowsConcurrentLoginException.supports(java.lang.Class)
1962 - Declaração do método: org.springframework.security.providers.UsernamePasswordAuthenticationTokenTests.UsernamePasswordAuthenticationTokenTests()
1962 - Declaração do método: org.springframework.security.providers.UsernamePasswordAuthenticationTokenTests.UsernamePasswordAuthenticationTokenTests(java.lang.String)
1962 - Declaração do método: org.springframework.security.providers.UsernamePasswordAuthenticationTokenTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1963 - Declaração do método: org.springframework.security.providers.UsernamePasswordAuthenticationTokenTests.setUp()
1963 - Declaração do método: org.springframework.security.providers.UsernamePasswordAuthenticationTokenTests.testAuthenticated()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.setAuthenticated(Z)
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.setAuthenticated(Z)
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.setAuthenticated(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1964 - Declaração do método: org.springframework.security.providers.UsernamePasswordAuthenticationTokenTests.testGetters()
Métodos invocados: 
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1965 - Declaração do método: org.springframework.security.providers.UsernamePasswordAuthenticationTokenTests.testNoArgConstructorDoesntExist()
Métodos invocados: 
java.lang.Class.getDeclaredConstructor([Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1966 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationTokenTests.AbstractAuthenticationTokenTests()
1966 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationTokenTests.AbstractAuthenticationTokenTests(java.lang.String)
1966 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationTokenTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1967 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationTokenTests.setUp()
1967 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationTokenTests.testAuthoritiesAreImmutable()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Object.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
java.lang.Object.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1968 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationTokenTests.testGetters()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationTokenTests$MockAuthenticationImpl.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationTokenTests$MockAuthenticationImpl.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1969 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationTokenTests.testHashCode()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.hashCode()
org.springframework.security.providers.AbstractAuthenticationToken.hashCode()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.providers.AbstractAuthenticationToken.hashCode()
org.springframework.security.providers.AbstractAuthenticationToken.hashCode()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.AbstractAuthenticationToken.setAuthenticated(Z)
org.springframework.security.providers.AbstractAuthenticationToken.hashCode()
org.springframework.security.providers.AbstractAuthenticationToken.hashCode()
junit.framework.Assert.assertTrue(Z)
1970 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationTokenTests.testObjectsEquals()
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.AbstractAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.AbstractAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.AbstractAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.AbstractAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.AbstractAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.AbstractAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
1971 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationTokenTests.testSetAuthenticated()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.AbstractAuthenticationToken.setAuthenticated(Z)
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
1972 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationTokenTests.testToStringWithAuthorities()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.toString()
java.lang.String.lastIndexOf(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1973 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationTokenTests.testToStringWithNullAuthorities()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.toString()
java.lang.String.lastIndexOf(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1974 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationTokenTests$MockAuthenticationImpl.MockAuthenticationImpl(java.lang.Object, java.lang.Object, [Lorg.springframework.security.GrantedAuthority;)
1974 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationTokenTests$MockAuthenticationImpl.getCredentials()
1974 - Declaração do método: org.springframework.security.providers.AbstractAuthenticationTokenTests$MockAuthenticationImpl.getPrincipal()
1974 - Declaração do método: org.springframework.security.providers.TestingAuthenticationTokenTests.TestingAuthenticationTokenTests()
1974 - Declaração do método: org.springframework.security.providers.TestingAuthenticationTokenTests.TestingAuthenticationTokenTests(java.lang.String)
1974 - Declaração do método: org.springframework.security.providers.TestingAuthenticationTokenTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1975 - Declaração do método: org.springframework.security.providers.TestingAuthenticationTokenTests.setUp()
1975 - Declaração do método: org.springframework.security.providers.TestingAuthenticationTokenTests.testAuthenticated()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.AbstractAuthenticationToken.setAuthenticated(Z)
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
1976 - Declaração do método: org.springframework.security.providers.TestingAuthenticationTokenTests.testGetters()
Métodos invocados: 
org.springframework.security.providers.TestingAuthenticationToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.TestingAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1977 - Declaração do método: org.springframework.security.providers.TestingAuthenticationTokenTests.testNoArgConstructorDoesntExist()
Métodos invocados: 
java.lang.Class.getDeclaredConstructor([Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1978 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationTokenTests.AnonymousAuthenticationTokenTests()
1978 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationTokenTests.AnonymousAuthenticationTokenTests(java.lang.String)
1978 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationTokenTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
1979 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationTokenTests.setUp()
1979 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationTokenTests.testConstructorRejectsNulls()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1980 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationTokenTests.testEqualsWhenEqual()
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1981 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationTokenTests.testGetters()
Métodos invocados: 
java.lang.String.hashCode()
org.springframework.security.providers.anonymous.AnonymousAuthenticationToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.providers.anonymous.AnonymousAuthenticationToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.anonymous.AnonymousAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
1982 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationTokenTests.testNoArgConstructorDoesntExist()
Métodos invocados: 
java.lang.Class.getDeclaredConstructor([Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1983 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationTokenTests.testNotEqualsDueToAbstractParentEqualsCheck()
Métodos invocados: 
org.springframework.security.providers.anonymous.AnonymousAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1984 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationTokenTests.testNotEqualsDueToDifferentAuthenticationClass()
Métodos invocados: 
org.springframework.security.providers.anonymous.AnonymousAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1985 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationTokenTests.testNotEqualsDueToKey()
Métodos invocados: 
org.springframework.security.providers.anonymous.AnonymousAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1986 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationTokenTests.testSetAuthenticatedIgnored()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.AbstractAuthenticationToken.setAuthenticated(Z)
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
1987 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilterTests.AnonymousProcessingFilterTests()
1987 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilterTests.AnonymousProcessingFilterTests(java.lang.String)
1987 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.Filter.init(javax.servlet.FilterConfig)
javax.servlet.Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
javax.servlet.Filter.destroy()
1988 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilterTests.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
1989 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilterTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
1990 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilterTests.testDetectsMissingKey()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserAttribute.setPassword(java.lang.String)
org.springframework.security.userdetails.memory.UserAttribute.addAuthority(org.springframework.security.GrantedAuthority)
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.setUserAttribute(org.springframework.security.userdetails.memory.UserAttribute)
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1991 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilterTests.testDetectsUserAttribute()
Métodos invocados: 
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.setKey(java.lang.String)
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1992 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilterTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserAttribute.setPassword(java.lang.String)
org.springframework.security.userdetails.memory.UserAttribute.addAuthority(org.springframework.security.GrantedAuthority)
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.setKey(java.lang.String)
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.setUserAttribute(org.springframework.security.userdetails.memory.UserAttribute)
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.isRemoveAfterRequest()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.afterPropertiesSet()
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.getKey()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.getUserAttribute()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.setRemoveAfterRequest(Z)
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.isRemoveAfterRequest()
junit.framework.Assert.assertFalse(Z)
1993 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilterTests.testOperationWhenAuthenticationExistsInContextHolder()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.userdetails.memory.UserAttribute.setPassword(java.lang.String)
org.springframework.security.userdetails.memory.UserAttribute.addAuthority(org.springframework.security.GrantedAuthority)
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.setKey(java.lang.String)
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.setUserAttribute(org.springframework.security.userdetails.memory.UserAttribute)
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.providers.anonymous.AnonymousProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1994 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilterTests.testOperationWhenNoAuthenticationInSecurityContextHolder()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserAttribute.setPassword(java.lang.String)
org.springframework.security.userdetails.memory.UserAttribute.addAuthority(org.springframework.security.GrantedAuthority)
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.setKey(java.lang.String)
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.setUserAttribute(org.springframework.security.userdetails.memory.UserAttribute)
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.setRemoveAfterRequest(Z)
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.providers.anonymous.AnonymousProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.Authentication.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.Authentication.getAuthorities()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.providers.anonymous.AnonymousProcessingFilter.setRemoveAfterRequest(Z)
org.springframework.security.providers.anonymous.AnonymousProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
1995 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilterTests$MockFilterChain.MockFilterChain(Z)
1995 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousProcessingFilterTests$MockFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
Métodos invocados: 
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
1996 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationProviderTests.AnonymousAuthenticationProviderTests()
1996 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationProviderTests.AnonymousAuthenticationProviderTests(java.lang.String)
1996 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationProviderTests.testDetectsAnInvalidKey()
Métodos invocados: 
org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
1997 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationProviderTests.testDetectsMissingKey()
Métodos invocados: 
org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1998 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationProviderTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.afterPropertiesSet()
org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.getKey()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1999 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationProviderTests.testIgnoresClassesItDoesNotSupport()
Métodos invocados: 
org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.assertNull(java.lang.Object)
2000 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationProviderTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2001 - Declaração do método: org.springframework.security.providers.anonymous.AnonymousAuthenticationProviderTests.testSupports()
Métodos invocados: 
org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertFalse(Z)
2002 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testAuthenticateFailsForIncorrectPasswordCase()
Métodos invocados: 
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2003 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testReceivedBadCredentialsWhenCredentialsNotProvided()
Métodos invocados: 
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2004 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testAuthenticateFailsIfAccountExpired()
Métodos invocados: 
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2005 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testAuthenticateFailsIfAccountLocked()
Métodos invocados: 
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2006 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testAuthenticateFailsIfCredentialsExpired()
Métodos invocados: 
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2007 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testAuthenticateFailsIfUserDisabled()
Métodos invocados: 
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2008 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testAuthenticateFailsWhenAuthenticationDaoHasBackendFailure()
Métodos invocados: 
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2009 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testAuthenticateFailsWithEmptyUsername()
Métodos invocados: 
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2010 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testAuthenticateFailsWithInvalidPassword()
Métodos invocados: 
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2011 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testAuthenticateFailsWithInvalidUsernameAndHideUserNotFoundExceptionFalse()
Métodos invocados: 
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setHideUserNotFoundExceptions(Z)
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2012 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testAuthenticateFailsWithInvalidUsernameAndHideUserNotFoundExceptionsWithDefaultOfTrue()
Métodos invocados: 
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.isHideUserNotFoundExceptions()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2013 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testAuthenticateFailsWithMixedCaseUsernameIfDefaultChanged()
Métodos invocados: 
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2014 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testAuthenticates()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getPrincipal()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getDetails()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2015 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testAuthenticatesASecondTime()
Métodos invocados: 
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.Authentication.getCredentials()
org.springframework.security.Authentication.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2016 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testAuthenticatesWhenASaltIsUsed()
Métodos invocados: 
org.springframework.security.providers.dao.salt.SystemWideSaltSource.setSystemWideSalt(java.lang.String)
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.DaoAuthenticationProvider.setSaltSource(org.springframework.security.providers.dao.SaltSource)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getPrincipal()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2017 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testAuthenticatesWithForcePrincipalAsString()
Métodos invocados: 
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setForcePrincipalAsString(Z)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getPrincipal()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2018 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testDetectsNullBeingReturnedFromAuthenticationDao()
Métodos invocados: 
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.core.NestedRuntimeException.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2019 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.providers.dao.DaoAuthenticationProvider.setPasswordEncoder(org.springframework.security.providers.encoding.PasswordEncoder)
org.springframework.security.providers.dao.DaoAuthenticationProvider.getPasswordEncoder()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.dao.DaoAuthenticationProvider.setSaltSource(org.springframework.security.providers.dao.SaltSource)
org.springframework.security.providers.dao.DaoAuthenticationProvider.getSaltSource()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.getUserCache()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.isForcePrincipalAsString()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setForcePrincipalAsString(Z)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.isForcePrincipalAsString()
junit.framework.Assert.assertTrue(Z)
2020 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testGoesBackToAuthenticationDaoToObtainLatestPasswordIfCachedPasswordSeemsIncorrect()
Métodos invocados: 
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.springframework.security.providers.dao.DaoAuthenticationProviderTests$MockUserCache.getUserFromCache(java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoUserrod.setPassword(java.lang.String)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.springframework.security.providers.dao.DaoAuthenticationProviderTests$MockUserCache.getUserFromCache(java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2021 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testStartupFailsIfNoAuthenticationDao()
Métodos invocados: 
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2022 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testStartupFailsIfNoUserCacheSet()
Métodos invocados: 
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.getUserCache()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2023 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testStartupSuccess()
Métodos invocados: 
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.DaoAuthenticationProvider.getUserDetailsService()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.assertTrue(Z)
2024 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests.testSupports()
Métodos invocados: 
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
2025 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoReturnsNull.loadUserByUsername(java.lang.String)
2025 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoSimulateBackendError.loadUserByUsername(java.lang.String)
2025 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoUserrod.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
2026 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoUserrod.setPassword(java.lang.String)
2026 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoUserrodWithSalt.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
2027 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoUserPeter.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
2028 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoUserPeterAccountExpired.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
2029 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoUserPeterAccountLocked.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
2030 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests$MockAuthenticationDaoUserPeterCredentialsExpired.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
2031 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests$MockUserCache.getUserFromCache(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
2032 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests$MockUserCache.putUserInCache(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.getUsername()
java.util.Map.put(java.lang.Object, java.lang.Object)
2033 - Declaração do método: org.springframework.security.providers.dao.DaoAuthenticationProviderTests$MockUserCache.removeUserFromCache(java.lang.String)
2033 - Declaração do método: org.springframework.security.providers.dao.cache.NullUserCacheTests.NullUserCacheTests()
2033 - Declaração do método: org.springframework.security.providers.dao.cache.NullUserCacheTests.NullUserCacheTests(java.lang.String)
2033 - Declaração do método: org.springframework.security.providers.dao.cache.NullUserCacheTests.getUser()
2033 - Declaração do método: org.springframework.security.providers.dao.cache.NullUserCacheTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2034 - Declaração do método: org.springframework.security.providers.dao.cache.NullUserCacheTests.setUp()
2034 - Declaração do método: org.springframework.security.providers.dao.cache.NullUserCacheTests.testCacheOperation()
Métodos invocados: 
org.springframework.security.providers.dao.cache.NullUserCacheTests.getUser()
org.springframework.security.providers.dao.cache.NullUserCache.putUserInCache(org.springframework.security.userdetails.UserDetails)
org.springframework.security.providers.dao.cache.NullUserCache.getUserFromCache(java.lang.String)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.providers.dao.cache.NullUserCache.removeUserFromCache(java.lang.String)
2035 - Declaração do método: org.springframework.security.providers.dao.cache.EhCacheBasedUserCacheTests.initCacheManaer()
Métodos invocados: 
net.sf.ehcache.CacheManager.addCache(net.sf.ehcache.Cache)
2036 - Declaração do método: org.springframework.security.providers.dao.cache.EhCacheBasedUserCacheTests.shutdownCacheManager()
Métodos invocados: 
net.sf.ehcache.CacheManager.removalAll()
net.sf.ehcache.CacheManager.shutdown()
2037 - Declaração do método: org.springframework.security.providers.dao.cache.EhCacheBasedUserCacheTests.getCache()
Métodos invocados: 
net.sf.ehcache.CacheManager.getCache(java.lang.String)
net.sf.ehcache.Ehcache.removeAll()
2038 - Declaração do método: org.springframework.security.providers.dao.cache.EhCacheBasedUserCacheTests.getUser()
2038 - Declaração do método: org.springframework.security.providers.dao.cache.EhCacheBasedUserCacheTests.cacheOperationsAreSuccessful()
Métodos invocados: 
org.springframework.security.providers.dao.cache.EhCacheBasedUserCacheTests.getCache()
org.springframework.security.providers.dao.cache.EhCacheBasedUserCache.setCache(net.sf.ehcache.Ehcache)
org.springframework.security.providers.dao.cache.EhCacheBasedUserCache.afterPropertiesSet()
org.springframework.security.providers.dao.cache.EhCacheBasedUserCacheTests.getUser()
org.springframework.security.providers.dao.cache.EhCacheBasedUserCache.putUserInCache(org.springframework.security.userdetails.UserDetails)
org.springframework.security.providers.dao.cache.EhCacheBasedUserCacheTests.getUser()
org.springframework.security.userdetails.User.getPassword()
org.springframework.security.providers.dao.cache.EhCacheBasedUserCacheTests.getUser()
org.springframework.security.userdetails.User.getUsername()
org.springframework.security.providers.dao.cache.EhCacheBasedUserCache.getUserFromCache(java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.dao.cache.EhCacheBasedUserCacheTests.getUser()
org.springframework.security.providers.dao.cache.EhCacheBasedUserCache.removeUserFromCache(org.springframework.security.userdetails.UserDetails)
org.springframework.security.providers.dao.cache.EhCacheBasedUserCacheTests.getUser()
org.springframework.security.userdetails.User.getUsername()
org.springframework.security.providers.dao.cache.EhCacheBasedUserCache.getUserFromCache(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.providers.dao.cache.EhCacheBasedUserCache.getUserFromCache(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.providers.dao.cache.EhCacheBasedUserCache.getUserFromCache(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
2039 - Declaração do método: org.springframework.security.providers.dao.cache.EhCacheBasedUserCacheTests.startupDetectsMissingCache()
Métodos invocados: 
org.springframework.security.providers.dao.cache.EhCacheBasedUserCache.afterPropertiesSet()
org.junit.Assert.fail(java.lang.String)
org.springframework.security.providers.dao.cache.EhCacheBasedUserCacheTests.getCache()
org.springframework.security.providers.dao.cache.EhCacheBasedUserCache.setCache(net.sf.ehcache.Ehcache)
org.springframework.security.providers.dao.cache.EhCacheBasedUserCache.getCache()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2040 - Declaração do método: org.springframework.security.providers.dao.salt.SystemWideSaltSourceTests.SystemWideSaltSourceTests()
2040 - Declaração do método: org.springframework.security.providers.dao.salt.SystemWideSaltSourceTests.SystemWideSaltSourceTests(java.lang.String)
2040 - Declaração do método: org.springframework.security.providers.dao.salt.SystemWideSaltSourceTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2041 - Declaração do método: org.springframework.security.providers.dao.salt.SystemWideSaltSourceTests.setUp()
2041 - Declaração do método: org.springframework.security.providers.dao.salt.SystemWideSaltSourceTests.testDetectsMissingSystemWideSalt()
Métodos invocados: 
org.springframework.security.providers.dao.salt.SystemWideSaltSource.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2042 - Declaração do método: org.springframework.security.providers.dao.salt.SystemWideSaltSourceTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.providers.dao.salt.SystemWideSaltSource.setSystemWideSalt(java.lang.String)
org.springframework.security.providers.dao.salt.SystemWideSaltSource.getSystemWideSalt()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2043 - Declaração do método: org.springframework.security.providers.dao.salt.SystemWideSaltSourceTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.providers.dao.salt.SystemWideSaltSource.setSystemWideSalt(java.lang.String)
org.springframework.security.providers.dao.salt.SystemWideSaltSource.afterPropertiesSet()
org.springframework.security.providers.dao.salt.SystemWideSaltSource.getSalt(org.springframework.security.userdetails.UserDetails)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2044 - Declaração do método: org.springframework.security.providers.dao.salt.ReflectionSaltSourceTests.detectsMissingUserPropertyToUse()
Métodos invocados: 
org.springframework.security.providers.dao.salt.ReflectionSaltSource.afterPropertiesSet()
2045 - Declaração do método: org.springframework.security.providers.dao.salt.ReflectionSaltSourceTests.exceptionIsThrownWhenInvalidPropertyRequested()
Métodos invocados: 
org.springframework.security.providers.dao.salt.ReflectionSaltSource.setUserPropertyToUse(java.lang.String)
org.springframework.security.providers.dao.salt.ReflectionSaltSource.afterPropertiesSet()
org.springframework.security.providers.dao.salt.ReflectionSaltSource.getSalt(org.springframework.security.userdetails.UserDetails)
2046 - Declaração do método: org.springframework.security.providers.dao.salt.ReflectionSaltSourceTests.methodNameAsPropertyToUseReturnsCorrectSaltValue()
Métodos invocados: 
org.springframework.security.providers.dao.salt.ReflectionSaltSource.setUserPropertyToUse(java.lang.String)
org.springframework.security.providers.dao.salt.ReflectionSaltSource.getSalt(org.springframework.security.userdetails.UserDetails)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2047 - Declaração do método: org.springframework.security.providers.dao.salt.ReflectionSaltSourceTests.propertyNameAsPropertyToUseReturnsCorrectSaltValue()
Métodos invocados: 
org.springframework.security.providers.dao.salt.ReflectionSaltSource.setUserPropertyToUse(java.lang.String)
org.springframework.security.providers.dao.salt.ReflectionSaltSource.getSalt(org.springframework.security.userdetails.UserDetails)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2048 - Declaração do método: org.springframework.security.providers.encoding.PlaintextPasswordEncoderTests.testBasicFunctionality()
Métodos invocados: 
org.springframework.security.providers.encoding.PlaintextPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.encoding.PlaintextPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.encoding.PlaintextPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.providers.encoding.PlaintextPasswordEncoder.isIgnorePasswordCase()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.providers.encoding.PlaintextPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.springframework.security.providers.encoding.PlaintextPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.providers.encoding.PlaintextPasswordEncoder.setIgnorePasswordCase(Z)
org.springframework.security.providers.encoding.PlaintextPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.springframework.security.providers.encoding.PlaintextPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.encoding.PlaintextPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertFalse(Z)
2049 - Declaração do método: org.springframework.security.providers.encoding.PlaintextPasswordEncoderTests.testMergeDemerge()
Métodos invocados: 
org.springframework.security.providers.encoding.PlaintextPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.springframework.security.providers.encoding.PlaintextPasswordEncoder.obtainPasswordAndSalt(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2050 - Declaração do método: org.springframework.security.providers.encoding.Md4PasswordEncoderTests.testEncodeUnsaltedPassword()
Métodos invocados: 
org.springframework.security.providers.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
org.springframework.security.providers.encoding.Md4PasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2051 - Declaração do método: org.springframework.security.providers.encoding.Md4PasswordEncoderTests.testEncodeSaltedPassword()
Métodos invocados: 
org.springframework.security.providers.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
org.springframework.security.providers.encoding.Md4PasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2052 - Declaração do método: org.springframework.security.providers.encoding.Md4PasswordEncoderTests.testEncodeNullPassword()
Métodos invocados: 
org.springframework.security.providers.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
org.springframework.security.providers.encoding.Md4PasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2053 - Declaração do método: org.springframework.security.providers.encoding.Md4PasswordEncoderTests.testEncodeEmptyPassword()
Métodos invocados: 
org.springframework.security.providers.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
org.springframework.security.providers.encoding.Md4PasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2054 - Declaração do método: org.springframework.security.providers.encoding.Md4PasswordEncoderTests.testIsHexPasswordValid()
Métodos invocados: 
org.springframework.security.providers.encoding.Md4PasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
2055 - Declaração do método: org.springframework.security.providers.encoding.Md4PasswordEncoderTests.testIsPasswordValid()
Métodos invocados: 
org.springframework.security.providers.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
org.springframework.security.providers.encoding.Md4PasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
2056 - Declaração do método: org.springframework.security.providers.encoding.Md4PasswordEncoderTests.testIsSaltedPasswordValid()
Métodos invocados: 
org.springframework.security.providers.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
org.springframework.security.providers.encoding.Md4PasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
2057 - Declaração do método: org.springframework.security.providers.encoding.ShaPasswordEncoderTests.testBasicFunctionality()
Métodos invocados: 
org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertFalse(Z)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2058 - Declaração do método: org.springframework.security.providers.encoding.ShaPasswordEncoderTests.testBase64()
Métodos invocados: 
org.springframework.security.providers.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertFalse(Z)
java.lang.String.length()
junit.framework.Assert.assertTrue(Z)
2059 - Declaração do método: org.springframework.security.providers.encoding.ShaPasswordEncoderTests.test256()
Métodos invocados: 
org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2060 - Declaração do método: org.springframework.security.providers.encoding.ShaPasswordEncoderTests.testInvalidStrength()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
2061 - Declaração do método: org.springframework.security.providers.encoding.Md5PasswordEncoderTests.testBasicFunctionality()
Métodos invocados: 
org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertFalse(Z)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.getAlgorithm()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2062 - Declaração do método: org.springframework.security.providers.encoding.Md5PasswordEncoderTests.testBase64()
Métodos invocados: 
org.springframework.security.providers.encoding.BaseDigestPasswordEncoder.setEncodeHashAsBase64(Z)
org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.encoding.MessageDigestPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
junit.framework.Assert.assertFalse(Z)
java.lang.String.length()
junit.framework.Assert.assertTrue(Z)
2063 - Declaração do método: org.springframework.security.providers.encoding.BasePasswordEncoderTests.testDemergeHandlesEmptyAndNullSalts()
Métodos invocados: 
org.springframework.security.providers.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowMergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
org.springframework.security.providers.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowDemergePasswordAndSalt(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowMergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
org.springframework.security.providers.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowDemergePasswordAndSalt(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2064 - Declaração do método: org.springframework.security.providers.encoding.BasePasswordEncoderTests.testDemergeWithEmptyStringIsRejected()
Métodos invocados: 
org.springframework.security.providers.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowDemergePasswordAndSalt(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2065 - Declaração do método: org.springframework.security.providers.encoding.BasePasswordEncoderTests.testDemergeWithNullIsRejected()
Métodos invocados: 
org.springframework.security.providers.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowDemergePasswordAndSalt(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2066 - Declaração do método: org.springframework.security.providers.encoding.BasePasswordEncoderTests.testMergeDemerge()
Métodos invocados: 
org.springframework.security.providers.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowMergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowDemergePasswordAndSalt(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2067 - Declaração do método: org.springframework.security.providers.encoding.BasePasswordEncoderTests.testMergeDemergeWithDelimitersInPassword()
Métodos invocados: 
org.springframework.security.providers.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowMergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowDemergePasswordAndSalt(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2068 - Declaração do método: org.springframework.security.providers.encoding.BasePasswordEncoderTests.testMergeDemergeWithNullAsPassword()
Métodos invocados: 
org.springframework.security.providers.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowMergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowDemergePasswordAndSalt(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2069 - Declaração do método: org.springframework.security.providers.encoding.BasePasswordEncoderTests.testStrictMergeRejectsDelimitersInSalt1()
Métodos invocados: 
org.springframework.security.providers.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowMergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2070 - Declaração do método: org.springframework.security.providers.encoding.BasePasswordEncoderTests.testStrictMergeRejectsDelimitersInSalt2()
Métodos invocados: 
org.springframework.security.providers.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowMergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2071 - Declaração do método: org.springframework.security.providers.encoding.BasePasswordEncoderTests$MockPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
2071 - Declaração do método: org.springframework.security.providers.encoding.BasePasswordEncoderTests$MockPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
2071 - Declaração do método: org.springframework.security.providers.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowDemergePasswordAndSalt(java.lang.String)
Métodos invocados: 
org.springframework.security.providers.encoding.BasePasswordEncoder.demergePasswordAndSalt(java.lang.String)
2072 - Declaração do método: org.springframework.security.providers.encoding.BasePasswordEncoderTests$MockPasswordEncoder.nowMergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
Métodos invocados: 
org.springframework.security.providers.encoding.BasePasswordEncoder.mergePasswordAndSalt(java.lang.String, java.lang.Object, Z)
2073 - Declaração do método: org.springframework.security.providers.jaas.TestCallbackHandler.handle(javax.security.auth.callback.Callback, org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.toString()
javax.security.auth.callback.TextInputCallback.setText(java.lang.String)
2074 - Declaração do método: org.springframework.security.providers.jaas.JaasEventCheck.onApplicationEvent(org.springframework.context.ApplicationEvent)
2074 - Declaração do método: org.springframework.security.providers.jaas.TestAuthorityGranter.grant(java.security.Principal)
Métodos invocados: 
java.security.Principal.getName()
java.lang.String.equals(java.lang.Object)
java.util.Set.add(java.lang.Object)
java.util.Set.add(java.lang.Object)
2075 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProviderTests.setUp()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
java.lang.String.replace(C, C)
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
2076 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProviderTests.testBadPassword()
Métodos invocados: 
org.springframework.security.providers.jaas.JaasAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
org.springframework.security.providers.jaas.event.JaasAuthenticationFailedEvent.getException()
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
2077 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProviderTests.testBadUser()
Métodos invocados: 
org.springframework.security.providers.jaas.JaasAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
org.springframework.security.providers.jaas.event.JaasAuthenticationFailedEvent.getException()
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
2078 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProviderTests.testConfigurationLoop()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
java.lang.String.replace(C, C)
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
java.net.URL.toString()
java.security.Security.setProperty(java.lang.String, java.lang.String)
org.springframework.security.providers.jaas.JaasAuthenticationProviderTests.setUp()
org.springframework.security.providers.jaas.JaasAuthenticationProviderTests.testFull()
2079 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProviderTests.testDetectsMissingLoginConfig()
Métodos invocados: 
org.springframework.security.providers.jaas.JaasAuthenticationProvider.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.getAuthorityGranters()
org.springframework.security.providers.jaas.JaasAuthenticationProvider.setAuthorityGranters([Lorg.springframework.security.providers.jaas.AuthorityGranter;)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.getCallbackHandlers()
org.springframework.security.providers.jaas.JaasAuthenticationProvider.setCallbackHandlers([Lorg.springframework.security.providers.jaas.JaasAuthenticationCallbackHandler;)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.getLoginContextName()
org.springframework.security.providers.jaas.JaasAuthenticationProvider.setLoginContextName(java.lang.String)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2080 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProviderTests.testDetectsMissingLoginContextName()
Métodos invocados: 
org.springframework.security.providers.jaas.JaasAuthenticationProvider.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.getAuthorityGranters()
org.springframework.security.providers.jaas.JaasAuthenticationProvider.setAuthorityGranters([Lorg.springframework.security.providers.jaas.AuthorityGranter;)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.getCallbackHandlers()
org.springframework.security.providers.jaas.JaasAuthenticationProvider.setCallbackHandlers([Lorg.springframework.security.providers.jaas.JaasAuthenticationCallbackHandler;)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.getLoginConfig()
org.springframework.security.providers.jaas.JaasAuthenticationProvider.setLoginConfig(org.springframework.core.io.Resource)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.setLoginContextName(java.lang.String)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.setLoginContextName(java.lang.String)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2081 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProviderTests.testFull()
Métodos invocados: 
org.springframework.security.providers.jaas.JaasAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.getAuthorityGranters()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.getCallbackHandlers()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.getLoginConfig()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.getLoginContextName()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.Authentication.getAuthorities()
java.util.Arrays.asList([Lorg.springframework.security.GrantedAuthority;)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.size()
java.util.List.get(I)
org.springframework.security.providers.jaas.JaasGrantedAuthority.getPrincipal()
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
org.springframework.security.providers.jaas.event.JaasAuthenticationEvent.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
2082 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProviderTests.testGetApplicationEventPublisher()
Métodos invocados: 
org.springframework.security.providers.jaas.JaasAuthenticationProvider.getApplicationEventPublisher()
junit.framework.Assert.assertNotNull(java.lang.Object)
2083 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProviderTests.testLoginExceptionResolver()
Métodos invocados: 
org.springframework.security.providers.jaas.JaasAuthenticationProvider.getLoginExceptionResolver()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.setLoginExceptionResolver(org.springframework.security.providers.jaas.LoginExceptionResolver)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
2084 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProviderTests$1.resolveException(javax.security.auth.login.LoginException)
2084 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProviderTests.testLogout()
Métodos invocados: 
org.springframework.security.providers.jaas.JaasAuthenticationProvider.getLoginContextName()
org.springframework.security.context.SecurityContextImpl.setAuthentication(org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.onApplicationEvent(org.springframework.context.ApplicationEvent)
junit.framework.Assert.assertTrue(Z)
2085 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProviderTests.testNullDefaultAuthorities()
Métodos invocados: 
org.springframework.security.providers.jaas.JaasAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.jaas.JaasAuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.springframework.security.Authentication.getAuthorities()
junit.framework.Assert.assertTrue(java.lang.String, Z)
2086 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProviderTests.testUnsupportedAuthenticationObjectReturnsNull()
Métodos invocados: 
org.springframework.security.providers.jaas.JaasAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.assertNull(java.lang.Object)
2087 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProviderTests$MockLoginContext.MockLoginContext(java.lang.String)
2087 - Declaração do método: org.springframework.security.providers.jaas.JaasAuthenticationProviderTests$MockLoginContext.logout()
2087 - Declaração do método: org.springframework.security.providers.jaas.TestLoginModule.abort()
2087 - Declaração do método: org.springframework.security.providers.jaas.TestLoginModule.commit()
2087 - Declaração do método: org.springframework.security.providers.jaas.TestLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
Métodos invocados: 
javax.security.auth.callback.CallbackHandler.handle([Ljavax.security.auth.callback.Callback;)
javax.security.auth.callback.PasswordCallback.getPassword()
javax.security.auth.callback.NameCallback.getName()
2088 - Declaração do método: org.springframework.security.providers.jaas.TestLoginModule.login()
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
javax.security.auth.Subject.getPrincipals()
java.util.Set.add(java.security.Principal)
javax.security.auth.Subject.getPrincipals()
java.util.Set.add(java.security.Principal)
2089 - Declaração do método: org.springframework.security.providers.jaas.TestLoginModule$1.getName()
2089 - Declaração do método: org.springframework.security.providers.jaas.TestLoginModule$2.getName()
2089 - Declaração do método: org.springframework.security.providers.jaas.TestLoginModule.logout()
2089 - Declaração do método: org.springframework.security.providers.jaas.SecurityContextLoginModuleTests.setUp()
Métodos invocados: 
org.springframework.security.providers.jaas.SecurityContextLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
org.springframework.security.context.SecurityContextHolder.clearContext()
2090 - Declaração do método: org.springframework.security.providers.jaas.SecurityContextLoginModuleTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
2091 - Declaração do método: org.springframework.security.providers.jaas.SecurityContextLoginModuleTests.testAbort()
Métodos invocados: 
org.springframework.security.providers.jaas.SecurityContextLoginModule.abort()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.providers.jaas.SecurityContextLoginModule.login()
org.springframework.security.providers.jaas.SecurityContextLoginModule.commit()
org.springframework.security.providers.jaas.SecurityContextLoginModule.abort()
junit.framework.Assert.assertTrue(Z)
2092 - Declaração do método: org.springframework.security.providers.jaas.SecurityContextLoginModuleTests.testLoginException()
Métodos invocados: 
org.springframework.security.providers.jaas.SecurityContextLoginModule.login()
junit.framework.Assert.fail(java.lang.String)
2093 - Declaração do método: org.springframework.security.providers.jaas.SecurityContextLoginModuleTests.testLoginSuccess()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.providers.jaas.SecurityContextLoginModule.login()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.springframework.security.providers.jaas.SecurityContextLoginModule.commit()
junit.framework.Assert.assertTrue(java.lang.String, Z)
javax.security.auth.Subject.getPrincipals()
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
2094 - Declaração do método: org.springframework.security.providers.jaas.SecurityContextLoginModuleTests.testLogout()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.providers.jaas.SecurityContextLoginModule.login()
org.springframework.security.providers.jaas.SecurityContextLoginModule.logout()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.springframework.security.providers.jaas.SecurityContextLoginModule.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
javax.security.auth.Subject.getPrincipals()
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
2095 - Declaração do método: org.springframework.security.providers.jaas.SecurityContextLoginModuleTests.testNullAuthenticationInSecurityContext()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.providers.jaas.SecurityContextLoginModule.login()
junit.framework.Assert.fail(java.lang.String)
2096 - Declaração do método: org.springframework.security.providers.jaas.SecurityContextLoginModuleTests.testNullAuthenticationInSecurityContextIgnored()
Métodos invocados: 
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.security.providers.jaas.SecurityContextLoginModule.initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.providers.jaas.SecurityContextLoginModule.login()
junit.framework.Assert.assertFalse(java.lang.String, Z)
2097 - Declaração do método: org.springframework.security.providers.jaas.SecurityContextLoginModuleTests.testNullLogout()
Métodos invocados: 
org.springframework.security.providers.jaas.SecurityContextLoginModule.logout()
junit.framework.Assert.assertFalse(Z)
2098 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProviderTests.LdapAuthenticationProviderTests(java.lang.String)
2098 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProviderTests.LdapAuthenticationProviderTests()
2098 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProviderTests.testSupportsUsernamePasswordAuthenticationToken()
Métodos invocados: 
org.springframework.security.providers.ldap.LdapAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
2099 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProviderTests.testDefaultMapperIsSet()
Métodos invocados: 
org.springframework.security.providers.ldap.LdapAuthenticationProvider.getUserDetailsContextMapper()
junit.framework.Assert.assertTrue(Z)
2100 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProviderTests.testEmptyOrNullUserNameThrowsException()
Métodos invocados: 
org.springframework.security.providers.ldap.LdapAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.providers.ldap.LdapAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
2101 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProviderTests.testEmptyPasswordIsRejected()
Métodos invocados: 
org.springframework.security.providers.ldap.LdapAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
2102 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProviderTests.testNormalUsage()
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.setRoleAttributes([Ljava.lang.String;)
org.springframework.security.providers.ldap.LdapAuthenticationProvider.setUserDetailsContextMapper(org.springframework.security.userdetails.ldap.UserDetailsContextMapper)
org.springframework.security.providers.ldap.LdapAuthenticationProvider.getAuthoritiesPopulator()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.providers.ldap.LdapAuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.springframework.security.Authentication.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.userdetails.UserDetails.getAuthorities()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.ldap.LdapAuthenticationProviderTests$MockAuthoritiesPopulator.getRequestedUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
java.util.ArrayList.add(java.lang.Object)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
java.util.ArrayList.add(java.lang.Object)
java.util.ArrayList.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.ArrayList.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
2103 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProviderTests.testPasswordIsSetFromUserDataIfUseAuthenticationRequestCredentialsIsFalse()
Métodos invocados: 
org.springframework.security.providers.ldap.LdapAuthenticationProvider.setUseAuthenticationRequestCredentials(Z)
org.springframework.security.providers.ldap.LdapAuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.springframework.security.Authentication.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2104 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProviderTests.testUseWithNullAuthoritiesPopulatorReturnsCorrectRole()
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.setRoleAttributes([Ljava.lang.String;)
org.springframework.security.providers.ldap.LdapAuthenticationProvider.setUserDetailsContextMapper(org.springframework.security.userdetails.ldap.UserDetailsContextMapper)
org.springframework.security.providers.ldap.LdapAuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.userdetails.UserDetails.getAuthorities()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2105 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProviderTests$MockAuthenticator.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
java.security.Principal.getName()
org.springframework.security.Authentication.getCredentials()
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setDn(javax.naming.Name)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setDn(javax.naming.Name)
2106 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProviderTests$MockAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
2106 - Declaração do método: org.springframework.security.providers.ldap.LdapAuthenticationProviderTests$MockAuthoritiesPopulator.getRequestedUsername()
2106 - Declaração do método: org.springframework.security.providers.ldap.authenticator.MockUserSearch.MockUserSearch()
2106 - Declaração do método: org.springframework.security.providers.ldap.authenticator.MockUserSearch.MockUserSearch(org.springframework.ldap.core.DirContextOperations)
2106 - Declaração do método: org.springframework.security.providers.ldap.authenticator.MockUserSearch.searchForUser(java.lang.String)
2106 - Declaração do método: org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticatorTests.onSetUp()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.setPasswordEncoder(org.springframework.security.providers.encoding.PasswordEncoder)
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setUserDnPatterns([Ljava.lang.String;)
2107 - Declaração do método: org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticatorTests.testAllAttributesAreRetrievedByDefault()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.authenticate(org.springframework.security.Authentication)
org.springframework.ldap.core.DirContextAdapter.getAttributes()
javax.naming.directory.Attributes.size()
org.junit.Assert.assertEquals(java.lang.String, J, J)
2108 - Declaração do método: org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticatorTests.testFailedSearchGivesUserNotFoundException()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getUserDns(java.lang.String)
java.util.List.isEmpty()
org.junit.Assert.assertTrue(java.lang.String, Z)
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setUserSearch(org.springframework.security.ldap.LdapUserSearch)
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.afterPropertiesSet()
org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.authenticate(org.springframework.security.Authentication)
org.junit.Assert.fail(java.lang.String)
2109 - Declaração do método: org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticatorTests.testLdapPasswordCompareFailsWithWrongPassword()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setUserAttributes([Ljava.lang.String;)
org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.authenticate(org.springframework.security.Authentication)
2110 - Declaração do método: org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticatorTests.testMultipleDnPatternsWorkOk()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setUserDnPatterns([Ljava.lang.String;)
org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.authenticate(org.springframework.security.Authentication)
2111 - Declaração do método: org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticatorTests.testOnlySpecifiedAttributesAreRetrieved()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setUserAttributes([Ljava.lang.String;)
org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.authenticate(org.springframework.security.Authentication)
org.springframework.ldap.core.DirContextAdapter.getAttributes()
javax.naming.directory.Attributes.size()
org.junit.Assert.assertEquals(java.lang.String, J, J)
2112 - Declaração do método: org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticatorTests.testLdapCompareSucceedsWithCorrectPassword()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setUserAttributes([Ljava.lang.String;)
org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.authenticate(org.springframework.security.Authentication)
2113 - Declaração do método: org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticatorTests.testLdapCompareSucceedsWithShaEncodedPassword()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setUserAttributes([Ljava.lang.String;)
org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.setPasswordEncoder(org.springframework.security.providers.encoding.PasswordEncoder)
org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.authenticate(org.springframework.security.Authentication)
2114 - Declaração do método: org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticatorTests.testPasswordEncoderCantBeNull()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.setPasswordEncoder(org.springframework.security.providers.encoding.PasswordEncoder)
2115 - Declaração do método: org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticatorTests.testUseOfDifferentPasswordAttributeSucceeds()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.setPasswordAttributeName(java.lang.String)
org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.authenticate(org.springframework.security.Authentication)
2116 - Declaração do método: org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticatorTests.testLdapCompareWithDifferentPasswordAttributeSucceeds()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setUserAttributes([Ljava.lang.String;)
org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.setPasswordAttributeName(java.lang.String)
org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.authenticate(org.springframework.security.Authentication)
2117 - Declaração do método: org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticatorTests.testWithUserSearch()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.setPasswordEncoder(org.springframework.security.providers.encoding.PasswordEncoder)
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getUserDns(java.lang.String)
java.util.List.isEmpty()
org.junit.Assert.assertTrue(java.lang.String, Z)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setUserSearch(org.springframework.security.ldap.LdapUserSearch)
org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.authenticate(org.springframework.security.Authentication)
2118 - Declaração do método: org.springframework.security.providers.ldap.authenticator.BindAuthenticatorTests.onSetUp()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setMessageSource(org.springframework.context.MessageSource)
2119 - Declaração do método: org.springframework.security.providers.ldap.authenticator.BindAuthenticatorTests.testAuthenticationWithCorrectPasswordSucceeds()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setUserDnPatterns([Ljava.lang.String;)
org.springframework.security.providers.ldap.authenticator.BindAuthenticator.authenticate(org.springframework.security.Authentication)
org.springframework.ldap.core.DirContextOperations.getStringAttribute(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2120 - Declaração do método: org.springframework.security.providers.ldap.authenticator.BindAuthenticatorTests.testAuthenticationWithInvalidUserNameFails()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setUserDnPatterns([Ljava.lang.String;)
org.springframework.security.providers.ldap.authenticator.BindAuthenticator.authenticate(org.springframework.security.Authentication)
org.junit.Assert.fail(java.lang.String)
2121 - Declaração do método: org.springframework.security.providers.ldap.authenticator.BindAuthenticatorTests.testAuthenticationWithUserSearch()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setUserSearch(org.springframework.security.ldap.LdapUserSearch)
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.afterPropertiesSet()
org.springframework.security.providers.ldap.authenticator.BindAuthenticator.authenticate(org.springframework.security.Authentication)
2122 - Declaração do método: org.springframework.security.providers.ldap.authenticator.BindAuthenticatorTests.testAuthenticationWithWrongPasswordFails()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setUserDnPatterns([Ljava.lang.String;)
org.springframework.security.providers.ldap.authenticator.BindAuthenticator.authenticate(org.springframework.security.Authentication)
org.junit.Assert.fail(java.lang.String)
2123 - Declaração do método: org.springframework.security.providers.ldap.authenticator.BindAuthenticatorTests.testUserDnPatternReturnsCorrectDn()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setUserDnPatterns([Ljava.lang.String;)
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getUserDns(java.lang.String)
java.util.List.get(I)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2124 - Declaração do método: org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoderTests.setUp()
2124 - Declaração do método: org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoderTests.invalidPasswordFails()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertFalse(Z)
2125 - Declaração do método: org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoderTests.invalidSaltedPasswordFails()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertFalse(Z)
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertFalse(Z)
2126 - Declaração do método: org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoderTests.nonByteArraySaltThrowsException()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
2127 - Declaração do método: org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoderTests.validPasswordSucceeds()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.setForceLowerCasePrefix(Z)
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.setForceLowerCasePrefix(Z)
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
2128 - Declaração do método: org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoderTests.validSaltedPasswordSucceeds()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.setForceLowerCasePrefix(Z)
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.setForceLowerCasePrefix(Z)
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
2129 - Declaração do método: org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoderTests.correctPrefixCaseIsUsed()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.setForceLowerCasePrefix(Z)
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.String.getBytes()
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
java.lang.String.startsWith(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.setForceLowerCasePrefix(Z)
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.String.getBytes()
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.encodePassword(java.lang.String, java.lang.Object)
java.lang.String.startsWith(java.lang.String)
org.junit.Assert.assertTrue(Z)
2130 - Declaração do método: org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoderTests.invalidPrefixIsRejected()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
2131 - Declaração do método: org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoderTests.malformedPrefixIsRejected()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.LdapShaPasswordEncoder.isPasswordValid(java.lang.String, java.lang.String, java.lang.Object)
2132 - Declaração do método: org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticatorMockTests.testLdapCompareIsUsedWhenPasswordIsNotRetrieved()
Métodos invocados: 
org.jmock.MockObjectTestCase.mock(java.lang.Class)
javax.naming.directory.BasicAttributes.put(javax.naming.directory.Attribute)
org.jmock.Mock.proxy()
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setUserDnPatterns([Ljava.lang.String;)
org.jmock.MockObjectTestCase.once()
org.jmock.Mock.expects(org.jmock.core.InvocationMatcher)
org.jmock.builder.NameMatchBuilder.method(java.lang.String)
org.jmock.core.MockObjectSupportTestCase.eq(java.lang.Object)
org.jmock.builder.ArgumentsMatchBuilder.with(org.jmock.core.Constraint, org.jmock.core.Constraint)
org.jmock.MockObjectTestCase.returnValue(java.lang.Object)
org.jmock.builder.StubBuilder.will(org.jmock.core.Stub)
org.jmock.MockObjectTestCase.once()
org.jmock.Mock.expects(org.jmock.core.InvocationMatcher)
org.jmock.builder.NameMatchBuilder.method(java.lang.String)
org.jmock.MockObjectTestCase.returnValue(java.lang.Object)
org.jmock.builder.StubBuilder.will(org.jmock.core.Stub)
org.jmock.MockObjectTestCase.once()
org.jmock.Mock.expects(org.jmock.core.InvocationMatcher)
org.jmock.builder.NameMatchBuilder.method(java.lang.String)
org.jmock.core.MockObjectSupportTestCase.eq(java.lang.Object)
org.jmock.core.MockObjectSupportTestCase.eq(java.lang.Object)
org.jmock.builder.ArgumentsMatchBuilder.with(org.jmock.core.Constraint, org.jmock.core.Constraint, org.jmock.core.Constraint, org.jmock.core.Constraint)
javax.naming.directory.Attributes.getAll()
org.jmock.MockObjectTestCase.returnValue(java.lang.Object)
org.jmock.builder.StubBuilder.will(org.jmock.core.Stub)
org.jmock.MockObjectTestCase.atLeastOnce()
org.jmock.Mock.expects(org.jmock.core.InvocationMatcher)
org.jmock.builder.NameMatchBuilder.method(java.lang.String)
org.springframework.security.providers.ldap.authenticator.PasswordComparisonAuthenticator.authenticate(org.springframework.security.Authentication)
2133 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationTokenTests.testPreAuthenticatedAuthenticationTokenRequestWithDetails()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getDetails()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
junit.framework.Assert.assertNull(java.lang.Object)
2134 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationTokenTests.testPreAuthenticatedAuthenticationTokenRequestWithoutDetails()
Métodos invocados: 
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getDetails()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
junit.framework.Assert.assertNull(java.lang.Object)
2135 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationTokenTests.testPreAuthenticatedAuthenticationTokenResponse()
Métodos invocados: 
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getDetails()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
junit.framework.Assert.assertNotNull(java.lang.Object)
java.util.Arrays.asList([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
java.util.Arrays.asList([Lorg.springframework.security.GrantedAuthority;)
java.util.Collection.containsAll(java.util.Collection)
java.util.Collection.containsAll(java.util.Collection)
junit.framework.Assert.assertTrue(java.lang.String, Z)
2136 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests.afterPropertiesSet()
Métodos invocados: 
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.afterPropertiesSet()
2137 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests.authenticateInvalidToken()
Métodos invocados: 
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests.getProvider(org.springframework.security.userdetails.UserDetails)
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.junit.Assert.assertNull(java.lang.Object)
2138 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests.nullPrincipalReturnsNullAuthentication()
Métodos invocados: 
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.junit.Assert.assertNull(java.lang.Object)
2139 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests.authenticateKnownUser()
Métodos invocados: 
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests.getProvider(org.springframework.security.userdetails.UserDetails)
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2140 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests.authenticateIgnoreCredentials()
Métodos invocados: 
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests.getProvider(org.springframework.security.userdetails.UserDetails)
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2141 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests.authenticateUnknownUserThrowsException()
Métodos invocados: 
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests.getProvider(org.springframework.security.userdetails.UserDetails)
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.authenticate(org.springframework.security.Authentication)
2142 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests.supportsArbitraryObject()
Métodos invocados: 
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests.getProvider(org.springframework.security.userdetails.UserDetails)
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.supports(java.lang.Class)
org.junit.Assert.assertFalse(Z)
2143 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests.supportsPreAuthenticatedAuthenticationToken()
Métodos invocados: 
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests.getProvider(org.springframework.security.userdetails.UserDetails)
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.supports(java.lang.Class)
org.junit.Assert.assertTrue(Z)
2144 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests.getSetOrder()
Métodos invocados: 
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests.getProvider(org.springframework.security.userdetails.UserDetails)
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.setOrder(I)
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.getOrder()
org.junit.Assert.assertEquals(J, J)
2145 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests.getProvider(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests.getPreAuthenticatedUserDetailsService(org.springframework.security.userdetails.UserDetails)
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.setPreAuthenticatedUserDetailsService(org.springframework.security.providers.preauth.AuthenticationUserDetailsService)
org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProvider.afterPropertiesSet()
2146 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests.getPreAuthenticatedUserDetailsService(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.getUsername()
java.security.Principal.getName()
java.lang.String.equals(java.lang.Object)
2147 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedAuthenticationProviderTests$1.loadUserDetails(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.getUsername()
java.security.Principal.getName()
java.lang.String.equals(java.lang.Object)
2148 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsServiceTests.testGetUserDetailsInvalidType()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.providers.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsService.loadUserDetails(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
2149 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsServiceTests.testGetUserDetailsNoDetails()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.providers.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsService.loadUserDetails(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
2150 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsServiceTests.testGetUserDetailsEmptyAuthorities()
Métodos invocados: 
org.springframework.security.providers.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsServiceTests.testGetUserDetails(java.lang.String, [Lorg.springframework.security.GrantedAuthority;)
2151 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsServiceTests.testGetUserDetailsWithAuthorities()
Métodos invocados: 
org.springframework.security.providers.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsServiceTests.testGetUserDetails(java.lang.String, [Lorg.springframework.security.GrantedAuthority;)
2152 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsServiceTests.testGetUserDetails(java.lang.String, [Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.providers.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsService.loadUserDetails(org.springframework.security.Authentication)
org.springframework.security.userdetails.UserDetails.isAccountNonExpired()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.UserDetails.isAccountNonLocked()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.UserDetails.isCredentialsNonExpired()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.UserDetails.isEnabled()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Arrays.asList([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.UserDetails.getAuthorities()
java.util.Arrays.asList([Lorg.springframework.security.GrantedAuthority;)
java.util.Collection.containsAll(java.util.Collection)
java.util.Collection.containsAll(java.util.Collection)
junit.framework.Assert.assertTrue(java.lang.String, Z)
2153 - Declaração do método: org.springframework.security.providers.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsServiceTests$1.getGrantedAuthorities()
2153 - Declaração do método: org.springframework.security.providers.preauth.UserDetailsByNameServiceWrapperTests.testAfterPropertiesSet()
Métodos invocados: 
org.springframework.security.providers.preauth.UserDetailsByNameServiceWrapper.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
2154 - Declaração do método: org.springframework.security.providers.preauth.UserDetailsByNameServiceWrapperTests.testGetUserDetails()
Métodos invocados: 
org.springframework.security.providers.preauth.UserDetailsByNameServiceWrapper.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.userdetails.User.getUsername()
java.lang.String.equals(java.lang.Object)
org.springframework.security.providers.preauth.UserDetailsByNameServiceWrapper.afterPropertiesSet()
org.springframework.security.providers.preauth.UserDetailsByNameServiceWrapper.loadUserDetails(org.springframework.security.Authentication)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
org.springframework.security.providers.preauth.UserDetailsByNameServiceWrapper.loadUserDetails(org.springframework.security.Authentication)
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
2155 - Declaração do método: org.springframework.security.providers.preauth.UserDetailsByNameServiceWrapperTests$1.loadUserByUsername(java.lang.String)
Métodos invocados: 
org.springframework.security.userdetails.User.getUsername()
java.lang.String.equals(java.lang.Object)
2156 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationProviderTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2157 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationProviderTests.setUp()
2157 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationProviderTests.testExceptionsGetPassedBackToCaller()
Métodos invocados: 
org.springframework.security.providers.rcp.RemoteAuthenticationProvider.setRemoteAuthenticationManager(org.springframework.security.providers.rcp.RemoteAuthenticationManager)
org.springframework.security.providers.rcp.RemoteAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2158 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationProviderTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.providers.rcp.RemoteAuthenticationProvider.setRemoteAuthenticationManager(org.springframework.security.providers.rcp.RemoteAuthenticationManager)
org.springframework.security.providers.rcp.RemoteAuthenticationProvider.getRemoteAuthenticationManager()
junit.framework.Assert.assertNotNull(java.lang.Object)
2159 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationProviderTests.testStartupChecksAuthenticationManagerSet()
Métodos invocados: 
org.springframework.security.providers.rcp.RemoteAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.rcp.RemoteAuthenticationProvider.setRemoteAuthenticationManager(org.springframework.security.providers.rcp.RemoteAuthenticationManager)
org.springframework.security.providers.rcp.RemoteAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.assertTrue(Z)
2160 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationProviderTests.testSuccessfulAuthenticationCreatesObject()
Métodos invocados: 
org.springframework.security.providers.rcp.RemoteAuthenticationProvider.setRemoteAuthenticationManager(org.springframework.security.providers.rcp.RemoteAuthenticationManager)
org.springframework.security.providers.rcp.RemoteAuthenticationProvider.authenticate(org.springframework.security.Authentication)
org.springframework.security.Authentication.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.Authentication.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2161 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationProviderTests.testSupports()
Métodos invocados: 
org.springframework.security.providers.rcp.RemoteAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
2162 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationProviderTests$MockRemoteAuthenticationManager.MockRemoteAuthenticationManager(Z)
2162 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationProviderTests$MockRemoteAuthenticationManager.attemptAuthentication(java.lang.String, java.lang.String)
2162 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationManagerImplTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2163 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationManagerImplTests.setUp()
2163 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationManagerImplTests.testFailedAuthenticationReturnsRemoteAuthenticationException()
Métodos invocados: 
org.springframework.security.providers.rcp.RemoteAuthenticationManagerImpl.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.providers.rcp.RemoteAuthenticationManagerImpl.attemptAuthentication(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2164 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationManagerImplTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.providers.rcp.RemoteAuthenticationManagerImpl.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.providers.rcp.RemoteAuthenticationManagerImpl.getAuthenticationManager()
junit.framework.Assert.assertNotNull(java.lang.Object)
2165 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationManagerImplTests.testStartupChecksAuthenticationManagerSet()
Métodos invocados: 
org.springframework.security.providers.rcp.RemoteAuthenticationManagerImpl.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.rcp.RemoteAuthenticationManagerImpl.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.providers.rcp.RemoteAuthenticationManagerImpl.afterPropertiesSet()
junit.framework.Assert.assertTrue(Z)
2166 - Declaração do método: org.springframework.security.providers.rcp.RemoteAuthenticationManagerImplTests.testSuccessfulAuthentication()
Métodos invocados: 
org.springframework.security.providers.rcp.RemoteAuthenticationManagerImpl.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.providers.rcp.RemoteAuthenticationManagerImpl.attemptAuthentication(java.lang.String, java.lang.String)
junit.framework.Assert.assertTrue(Z)
2167 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationProviderTests.RememberMeAuthenticationProviderTests()
2167 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationProviderTests.RememberMeAuthenticationProviderTests(java.lang.String)
2167 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationProviderTests.testDetectsAnInvalidKey()
Métodos invocados: 
org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
2168 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationProviderTests.testDetectsMissingKey()
Métodos invocados: 
org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2169 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationProviderTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.afterPropertiesSet()
org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.getKey()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2170 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationProviderTests.testIgnoresClassesItDoesNotSupport()
Métodos invocados: 
org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.assertNull(java.lang.Object)
2171 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationProviderTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2172 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationProviderTests.testSupports()
Métodos invocados: 
org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertFalse(Z)
2173 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationTokenTests.RememberMeAuthenticationTokenTests()
2173 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationTokenTests.RememberMeAuthenticationTokenTests(java.lang.String)
2173 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationTokenTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2174 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationTokenTests.setUp()
2174 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationTokenTests.testConstructorRejectsNulls()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2175 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationTokenTests.testEqualsWhenEqual()
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2176 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationTokenTests.testGetters()
Métodos invocados: 
java.lang.String.hashCode()
org.springframework.security.providers.rememberme.RememberMeAuthenticationToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.providers.rememberme.RememberMeAuthenticationToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.rememberme.RememberMeAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
2177 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationTokenTests.testNoArgConstructorDoesntExist()
Métodos invocados: 
java.lang.Class.getDeclaredConstructor([Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2178 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationTokenTests.testNotEqualsDueToAbstractParentEqualsCheck()
Métodos invocados: 
org.springframework.security.providers.rememberme.RememberMeAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
2179 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationTokenTests.testNotEqualsDueToDifferentAuthenticationClass()
Métodos invocados: 
org.springframework.security.providers.rememberme.RememberMeAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
2180 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationTokenTests.testNotEqualsDueToKey()
Métodos invocados: 
org.springframework.security.providers.rememberme.RememberMeAuthenticationToken.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
2181 - Declaração do método: org.springframework.security.providers.rememberme.RememberMeAuthenticationTokenTests.testSetAuthenticatedIgnored()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.AbstractAuthenticationToken.setAuthenticated(Z)
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
2182 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests.testAuthenticateFailsIfAccountExpired()
Métodos invocados: 
org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2183 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests.testAuthenticateFailsIfAccountLocked()
Métodos invocados: 
org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2184 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests.testAuthenticateFailsIfCredentialsExpired()
Métodos invocados: 
org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2185 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests.testAuthenticateFailsIfUserDisabled()
Métodos invocados: 
org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2186 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests.testAuthenticateFailsWhenUserDetailsServiceHasBackendFailure()
Métodos invocados: 
org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2187 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests.testAuthenticateFailsWithEmptyUsername()
Métodos invocados: 
org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2188 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests.testAuthenticateFailsWithInvalidUsernameAndHideUserNotFoundExceptionFalse()
Métodos invocados: 
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setHideUserNotFoundExceptions(Z)
org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2189 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests.testAuthenticateFailsWithInvalidUsernameAndHideUserNotFoundExceptionsWithDefaultOfTrue()
Métodos invocados: 
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.isHideUserNotFoundExceptions()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2190 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests.testAuthenticateFailsWithMixedCaseUsernameIfDefaultChanged()
Métodos invocados: 
org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2191 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests.testAuthenticates()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getPrincipal()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.providers.AbstractAuthenticationToken.getDetails()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2192 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests.testAuthenticatesASecondTime()
Métodos invocados: 
org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.Authentication.getCredentials()
org.springframework.security.Authentication.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2193 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests.testAuthenticatesWithForcePrincipalAsString()
Métodos invocados: 
org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setForcePrincipalAsString(Z)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getPrincipal()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2194 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests.testDetectsNullBeingReturnedFromUserDetailsService()
Métodos invocados: 
org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.core.NestedRuntimeException.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2195 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.getUserCache()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.isForcePrincipalAsString()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setForcePrincipalAsString(Z)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.isForcePrincipalAsString()
junit.framework.Assert.assertTrue(Z)
2196 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests.testStartupFailsIfNoUserDetailsService()
Métodos invocados: 
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2197 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests.testStartupFailsIfNoUserCacheSet()
Métodos invocados: 
org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.getUserCache()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2198 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests.testStartupSuccess()
Métodos invocados: 
org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.providers.siteminder.SiteminderAuthenticationProvider.getUserDetailsService()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.assertTrue(Z)
2199 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests.testSupports()
Métodos invocados: 
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.dao.AbstractUserDetailsAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
2200 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests$MockUserDetailsServiceReturnsNull.loadUserByUsername(java.lang.String)
2200 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests$MockUserDetailsServiceSimulateBackendError.loadUserByUsername(java.lang.String)
2200 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests$MockUserDetailsServiceUserrod.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
2201 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests$MockUserDetailsServiceUserrod.setPassword(java.lang.String)
2201 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests$MockUserDetailsServiceUserrodWithSalt.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
2202 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests$MockUserDetailsServiceUserPeter.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
2203 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests$MockUserDetailsServiceUserPeterAccountExpired.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
2204 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests$MockUserDetailsServiceUserPeterAccountLocked.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
2205 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests$MockUserDetailsServiceUserPeterCredentialsExpired.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
2206 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests$MockUserCache.getUserFromCache(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
2207 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests$MockUserCache.putUserInCache(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.getUsername()
java.util.Map.put(java.lang.Object, java.lang.Object)
2208 - Declaração do método: org.springframework.security.providers.siteminder.SiteminderAuthenticationProviderTests$MockUserCache.removeUserFromCache(java.lang.String)
2208 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationTokenTests.X509AuthenticationTokenTests()
2208 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationTokenTests.X509AuthenticationTokenTests(java.lang.String)
2208 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationTokenTests.setUp()
2208 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationTokenTests.testAuthenticated()
Métodos invocados: 
org.springframework.security.providers.x509.X509TestUtils.createToken()
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.AbstractAuthenticationToken.setAuthenticated(Z)
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
2209 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationTokenTests.testEquals()
Métodos invocados: 
org.springframework.security.providers.x509.X509TestUtils.createToken()
org.springframework.security.providers.x509.X509TestUtils.createToken()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2210 - Declaração do método: org.springframework.security.providers.x509.X509TestUtils.buildTestCertificate()
Métodos invocados: 
java.lang.String.getBytes()
java.security.cert.CertificateFactory.getInstance(java.lang.String)
java.security.cert.CertificateFactory.generateCertificate(java.io.InputStream)
2211 - Declaração do método: org.springframework.security.providers.x509.X509TestUtils.createToken()
Métodos invocados: 
org.springframework.security.providers.x509.X509TestUtils.buildTestCertificate()
2212 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationProviderTests.X509AuthenticationProviderTests()
2212 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationProviderTests.X509AuthenticationProviderTests(java.lang.String)
2212 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationProviderTests.setUp()
2212 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationProviderTests.testAuthenticationIsNullWithUnsupportedToken()
Métodos invocados: 
org.springframework.security.providers.x509.X509AuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.assertNull(java.lang.Object)
2213 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationProviderTests.testFailsWithNullCertificate()
Métodos invocados: 
org.springframework.security.providers.x509.X509AuthenticationProvider.setX509AuthoritiesPopulator(org.springframework.security.providers.x509.X509AuthoritiesPopulator)
org.springframework.security.providers.x509.X509AuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
2214 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationProviderTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.providers.x509.X509AuthenticationProvider.setX509AuthoritiesPopulator(org.springframework.security.providers.x509.X509AuthoritiesPopulator)
org.springframework.security.providers.x509.X509AuthenticationProvider.afterPropertiesSet()
org.springframework.security.providers.x509.X509TestUtils.createToken()
org.springframework.security.providers.x509.X509AuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.Authentication.getAuthorities()
junit.framework.Assert.assertNotNull(java.lang.Object)
2215 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationProviderTests.testPopulatorRejectionCausesFailure()
Métodos invocados: 
org.springframework.security.providers.x509.X509AuthenticationProvider.setX509AuthoritiesPopulator(org.springframework.security.providers.x509.X509AuthoritiesPopulator)
org.springframework.security.providers.x509.X509TestUtils.createToken()
org.springframework.security.providers.x509.X509AuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
2216 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationProviderTests.testRequiresPopulator()
Métodos invocados: 
org.springframework.security.providers.x509.X509AuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
2217 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationProviderTests$MockAuthoritiesPopulator.MockAuthoritiesPopulator(Z)
2217 - Declaração do método: org.springframework.security.providers.x509.X509AuthenticationProviderTests$MockAuthoritiesPopulator.getUserDetails(java.security.cert.X509Certificate)
2217 - Declaração do método: org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCacheTests.initCacheManaer()
Métodos invocados: 
net.sf.ehcache.CacheManager.addCache(net.sf.ehcache.Cache)
2218 - Declaração do método: org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCacheTests.shutdownCacheManager()
Métodos invocados: 
net.sf.ehcache.CacheManager.removalAll()
net.sf.ehcache.CacheManager.shutdown()
2219 - Declaração do método: org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCacheTests.getCache()
Métodos invocados: 
net.sf.ehcache.CacheManager.getCache(java.lang.String)
net.sf.ehcache.Ehcache.removeAll()
2220 - Declaração do método: org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCacheTests.getUser()
2220 - Declaração do método: org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCacheTests.cacheOperationsAreSucessful()
Métodos invocados: 
org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCacheTests.getCache()
org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCache.setCache(net.sf.ehcache.Ehcache)
org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCache.afterPropertiesSet()
org.springframework.security.providers.x509.X509TestUtils.buildTestCertificate()
org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCacheTests.getUser()
org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCache.putUserInCache(java.security.cert.X509Certificate, org.springframework.security.userdetails.UserDetails)
org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCacheTests.getUser()
org.springframework.security.userdetails.UserDetails.getPassword()
org.springframework.security.providers.x509.X509TestUtils.buildTestCertificate()
org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCache.getUserFromCache(java.security.cert.X509Certificate)
org.springframework.security.userdetails.UserDetails.getPassword()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.x509.X509TestUtils.buildTestCertificate()
org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCache.removeUserFromCache(java.security.cert.X509Certificate)
org.springframework.security.providers.x509.X509TestUtils.buildTestCertificate()
org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCache.getUserFromCache(java.security.cert.X509Certificate)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.providers.x509.cache.EhCacheBasedX509UserCache.getUserFromCache(java.security.cert.X509Certificate)
org.junit.Assert.assertNull(java.lang.Object)
2221 - Declaração do método: org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulatorTests.DaoX509AuthoritiesPopulatorTests()
2221 - Declaração do método: org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulatorTests.DaoX509AuthoritiesPopulatorTests(java.lang.String)
2221 - Declaração do método: org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulatorTests.setUp()
2221 - Declaração do método: org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulatorTests.testDefaultCNPatternMatch()
Métodos invocados: 
org.springframework.security.providers.x509.X509TestUtils.buildTestCertificate()
org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.afterPropertiesSet()
org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.getUserDetails(java.security.cert.X509Certificate)
2222 - Declaração do método: org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulatorTests.testEmailPatternMatch()
Métodos invocados: 
org.springframework.security.providers.x509.X509TestUtils.buildTestCertificate()
org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.setSubjectDNRegex(java.lang.String)
org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.afterPropertiesSet()
org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.getUserDetails(java.security.cert.X509Certificate)
2223 - Declaração do método: org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulatorTests.testInvalidRegexFails()
Métodos invocados: 
org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.setSubjectDNRegex(java.lang.String)
org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
2224 - Declaração do método: org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulatorTests.testMatchOnShoeSizeFieldInDNFails()
Métodos invocados: 
org.springframework.security.providers.x509.X509TestUtils.buildTestCertificate()
org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.setSubjectDNRegex(java.lang.String)
org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.afterPropertiesSet()
org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.getUserDetails(java.security.cert.X509Certificate)
junit.framework.Assert.fail(java.lang.String)
2225 - Declaração do método: org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulatorTests.testPatternWithNoGroupFails()
Métodos invocados: 
org.springframework.security.providers.x509.X509TestUtils.buildTestCertificate()
org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.setSubjectDNRegex(java.lang.String)
org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.afterPropertiesSet()
org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.getUserDetails(java.security.cert.X509Certificate)
junit.framework.Assert.fail(java.lang.String)
2226 - Declaração do método: org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulatorTests.testRequiresDao()
Métodos invocados: 
org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulator.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
2227 - Declaração do método: org.springframework.security.providers.x509.populator.DaoX509AuthoritiesPopulatorTests$MockAuthenticationDaoMatchesNameOrEmail.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
2228 - Declaração do método: org.springframework.security.runas.NullRunAsManagerTests.NullRunAsManagerTests()
2228 - Declaração do método: org.springframework.security.runas.NullRunAsManagerTests.NullRunAsManagerTests(java.lang.String)
2228 - Declaração do método: org.springframework.security.runas.NullRunAsManagerTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2229 - Declaração do método: org.springframework.security.runas.NullRunAsManagerTests.setUp()
2229 - Declaração do método: org.springframework.security.runas.NullRunAsManagerTests.testAlwaysReturnsNull()
Métodos invocados: 
org.springframework.security.runas.NullRunAsManager.buildRunAs(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertNull(java.lang.Object)
2230 - Declaração do método: org.springframework.security.runas.NullRunAsManagerTests.testAlwaysSupportsClass()
Métodos invocados: 
org.springframework.security.runas.NullRunAsManager.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
2231 - Declaração do método: org.springframework.security.runas.NullRunAsManagerTests.testNeverSupportsAttribute()
Métodos invocados: 
org.springframework.security.runas.NullRunAsManager.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertFalse(Z)
2232 - Declaração do método: org.springframework.security.runas.RunAsManagerImplTests.RunAsManagerImplTests()
2232 - Declaração do método: org.springframework.security.runas.RunAsManagerImplTests.RunAsManagerImplTests(java.lang.String)
2232 - Declaração do método: org.springframework.security.runas.RunAsManagerImplTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2233 - Declaração do método: org.springframework.security.runas.RunAsManagerImplTests.setUp()
2233 - Declaração do método: org.springframework.security.runas.RunAsManagerImplTests.testAlwaysSupportsClass()
Métodos invocados: 
org.springframework.security.runas.RunAsManagerImpl.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
2234 - Declaração do método: org.springframework.security.runas.RunAsManagerImplTests.testDoesNotReturnAdditionalAuthoritiesIfCalledWithoutARunAsSetting()
Métodos invocados: 
org.springframework.security.runas.RunAsManagerImpl.setKey(java.lang.String)
org.springframework.security.runas.RunAsManagerImpl.buildRunAs(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2235 - Declaração do método: org.springframework.security.runas.RunAsManagerImplTests.testRespectsRolePrefix()
Métodos invocados: 
org.springframework.security.runas.RunAsManagerImpl.setKey(java.lang.String)
org.springframework.security.runas.RunAsManagerImpl.setRolePrefix(java.lang.String)
org.springframework.security.runas.RunAsManagerImpl.buildRunAs(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getPrincipal()
org.springframework.security.Authentication.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getCredentials()
org.springframework.security.Authentication.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.lang.String.hashCode()
org.springframework.security.runas.RunAsUserToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
2236 - Declaração do método: org.springframework.security.runas.RunAsManagerImplTests.testReturnsAdditionalGrantedAuthorities()
Métodos invocados: 
org.springframework.security.runas.RunAsManagerImpl.setKey(java.lang.String)
org.springframework.security.runas.RunAsManagerImpl.buildRunAs(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getPrincipal()
org.springframework.security.Authentication.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.UsernamePasswordAuthenticationToken.getCredentials()
org.springframework.security.Authentication.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.lang.String.hashCode()
org.springframework.security.runas.RunAsUserToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
2237 - Declaração do método: org.springframework.security.runas.RunAsManagerImplTests.testStartupDetectsMissingKey()
Métodos invocados: 
org.springframework.security.runas.RunAsManagerImpl.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2238 - Declaração do método: org.springframework.security.runas.RunAsManagerImplTests.testStartupSuccessfulWithKey()
Métodos invocados: 
org.springframework.security.runas.RunAsManagerImpl.setKey(java.lang.String)
org.springframework.security.runas.RunAsManagerImpl.afterPropertiesSet()
org.springframework.security.runas.RunAsManagerImpl.getKey()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2239 - Declaração do método: org.springframework.security.runas.RunAsManagerImplTests.testSupports()
Métodos invocados: 
org.springframework.security.RunAsManager.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.RunAsManager.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.RunAsManager.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
2240 - Declaração do método: org.springframework.security.runas.RunAsImplAuthenticationProviderTests.RunAsImplAuthenticationProviderTests()
2240 - Declaração do método: org.springframework.security.runas.RunAsImplAuthenticationProviderTests.RunAsImplAuthenticationProviderTests(java.lang.String)
2240 - Declaração do método: org.springframework.security.runas.RunAsImplAuthenticationProviderTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2241 - Declaração do método: org.springframework.security.runas.RunAsImplAuthenticationProviderTests.setUp()
2241 - Declaração do método: org.springframework.security.runas.RunAsImplAuthenticationProviderTests.testAuthenticationFailDueToWrongKey()
Métodos invocados: 
org.springframework.security.runas.RunAsImplAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.runas.RunAsImplAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2242 - Declaração do método: org.springframework.security.runas.RunAsImplAuthenticationProviderTests.testAuthenticationSuccess()
Métodos invocados: 
org.springframework.security.runas.RunAsImplAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.runas.RunAsImplAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
java.lang.String.hashCode()
org.springframework.security.runas.RunAsUserToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
2243 - Declaração do método: org.springframework.security.runas.RunAsImplAuthenticationProviderTests.testStartupFailsIfNoKey()
Métodos invocados: 
org.springframework.security.runas.RunAsImplAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2244 - Declaração do método: org.springframework.security.runas.RunAsImplAuthenticationProviderTests.testStartupSuccess()
Métodos invocados: 
org.springframework.security.runas.RunAsImplAuthenticationProvider.setKey(java.lang.String)
org.springframework.security.runas.RunAsImplAuthenticationProvider.getKey()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.runas.RunAsImplAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.assertTrue(Z)
2245 - Declaração do método: org.springframework.security.runas.RunAsImplAuthenticationProviderTests.testSupports()
Métodos invocados: 
org.springframework.security.runas.RunAsImplAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.runas.RunAsImplAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
2246 - Declaração do método: org.springframework.security.runas.RunAsUserTokenTests.RunAsUserTokenTests()
2246 - Declaração do método: org.springframework.security.runas.RunAsUserTokenTests.RunAsUserTokenTests(java.lang.String)
2246 - Declaração do método: org.springframework.security.runas.RunAsUserTokenTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2247 - Declaração do método: org.springframework.security.runas.RunAsUserTokenTests.setUp()
2247 - Declaração do método: org.springframework.security.runas.RunAsUserTokenTests.testAuthenticationSetting()
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.AbstractAuthenticationToken.setAuthenticated(Z)
org.springframework.security.providers.AbstractAuthenticationToken.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
2248 - Declaração do método: org.springframework.security.runas.RunAsUserTokenTests.testGetters()
Métodos invocados: 
org.springframework.security.runas.RunAsUserToken.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.runas.RunAsUserToken.getCredentials()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.String.hashCode()
org.springframework.security.runas.RunAsUserToken.getKeyHash()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.runas.RunAsUserToken.getOriginalAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2249 - Declaração do método: org.springframework.security.runas.RunAsUserTokenTests.testNoArgConstructorDoesntExist()
Métodos invocados: 
java.lang.Class.getDeclaredConstructor([Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2250 - Declaração do método: org.springframework.security.runas.RunAsUserTokenTests.testToString()
Métodos invocados: 
org.springframework.security.runas.RunAsUserToken.toString()
java.lang.String.lastIndexOf(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2251 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpsEntryPointTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2252 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpsEntryPointTests.setUp()
2252 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpsEntryPointTests.testDetectsMissingPortMapper()
Métodos invocados: 
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
junit.framework.Assert.fail(java.lang.String)
2253 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpsEntryPointTests.testDetectsMissingPortResolver()
Métodos invocados: 
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
junit.framework.Assert.fail(java.lang.String)
2254 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpsEntryPointTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.securechannel.AbstractRetryEntryPoint.getPortMapper()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.securechannel.AbstractRetryEntryPoint.getPortResolver()
junit.framework.Assert.assertTrue(Z)
2255 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpsEntryPointTests.testNormalOperation()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setPathInfo(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.securechannel.AbstractRetryEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2256 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpsEntryPointTests.testNormalOperationWithNullPathInfoAndNullQueryString()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setPathInfo(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.securechannel.AbstractRetryEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2257 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpsEntryPointTests.testOperationWhenTargetPortIsUnknown()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setPathInfo(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.securechannel.AbstractRetryEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2258 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpsEntryPointTests.testOperationWithNonStandardPort()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setPathInfo(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.security.util.PortMapperImpl.setPortMappings(java.util.Map)
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.securechannel.AbstractRetryEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2259 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests.testDetectsMissingChannelDecisionManager()
Métodos invocados: 
org.springframework.security.securechannel.ChannelProcessingFilter.setFilterInvocationDefinitionSource(org.springframework.security.intercept.web.FilterInvocationDefinitionSource)
org.springframework.security.securechannel.ChannelProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2260 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests.testDetectsMissingFilterInvocationDefinitionSource()
Métodos invocados: 
org.springframework.security.securechannel.ChannelProcessingFilter.setChannelDecisionManager(org.springframework.security.securechannel.ChannelDecisionManager)
org.springframework.security.securechannel.ChannelProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2261 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests.testDetectsSupportedConfigAttribute()
Métodos invocados: 
org.springframework.security.securechannel.ChannelProcessingFilter.setChannelDecisionManager(org.springframework.security.securechannel.ChannelDecisionManager)
org.springframework.security.securechannel.ChannelProcessingFilter.setFilterInvocationDefinitionSource(org.springframework.security.intercept.web.FilterInvocationDefinitionSource)
org.springframework.security.securechannel.ChannelProcessingFilter.afterPropertiesSet()
junit.framework.Assert.assertTrue(Z)
2262 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests.testDetectsUnsupportedConfigAttribute()
Métodos invocados: 
org.springframework.security.securechannel.ChannelProcessingFilter.setChannelDecisionManager(org.springframework.security.securechannel.ChannelDecisionManager)
org.springframework.security.securechannel.ChannelProcessingFilter.setFilterInvocationDefinitionSource(org.springframework.security.intercept.web.FilterInvocationDefinitionSource)
org.springframework.security.securechannel.ChannelProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2263 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests.testDoFilterWhenManagerDoesCommitResponse()
Métodos invocados: 
org.springframework.security.securechannel.ChannelProcessingFilter.setChannelDecisionManager(org.springframework.security.securechannel.ChannelDecisionManager)
org.springframework.security.securechannel.ChannelProcessingFilter.setFilterInvocationDefinitionSource(org.springframework.security.intercept.web.FilterInvocationDefinitionSource)
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.assertTrue(Z)
2264 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests.testDoFilterWhenManagerDoesNotCommitResponse()
Métodos invocados: 
org.springframework.security.securechannel.ChannelProcessingFilter.setChannelDecisionManager(org.springframework.security.securechannel.ChannelDecisionManager)
org.springframework.security.securechannel.ChannelProcessingFilter.setFilterInvocationDefinitionSource(org.springframework.security.intercept.web.FilterInvocationDefinitionSource)
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.assertTrue(Z)
2265 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests.testDoFilterWhenNullConfigAttributeReturned()
Métodos invocados: 
org.springframework.security.securechannel.ChannelProcessingFilter.setChannelDecisionManager(org.springframework.security.securechannel.ChannelDecisionManager)
org.springframework.security.securechannel.ChannelProcessingFilter.setFilterInvocationDefinitionSource(org.springframework.security.intercept.web.FilterInvocationDefinitionSource)
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.assertTrue(Z)
2266 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests.testDoFilterWithNonHttpServletRequestDetected()
Métodos invocados: 
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.fail(java.lang.String)
2267 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests.testDoFilterWithNonHttpServletResponseDetected()
Métodos invocados: 
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.fail(java.lang.String)
2268 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests.testGetterSetters()
Métodos invocados: 
org.springframework.security.securechannel.ChannelProcessingFilter.setChannelDecisionManager(org.springframework.security.securechannel.ChannelDecisionManager)
org.springframework.security.securechannel.ChannelProcessingFilter.getChannelDecisionManager()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.securechannel.ChannelProcessingFilter.setFilterInvocationDefinitionSource(org.springframework.security.intercept.web.FilterInvocationDefinitionSource)
org.springframework.security.securechannel.ChannelProcessingFilter.getFilterInvocationDefinitionSource()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ui.SpringSecurityFilter.init(javax.servlet.FilterConfig)
org.springframework.security.securechannel.ChannelProcessingFilter.afterPropertiesSet()
org.springframework.security.ui.SpringSecurityFilter.destroy()
2269 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests$MockChannelDecisionManager.MockChannelDecisionManager(Z, java.lang.String)
2269 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests$MockChannelDecisionManager.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocation.getHttpResponse()
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
2270 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests$MockChannelDecisionManager.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
2271 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests$MockFilterChain.MockFilterChain(Z)
2271 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests$MockFilterChain.MockFilterChain()
2271 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests$MockFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
Métodos invocados: 
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
2272 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests$MockFilterInvocationDefinitionMap.MockFilterInvocationDefinitionMap(java.lang.String, org.springframework.security.ConfigAttributeDefinition, Z)
2272 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests$MockFilterInvocationDefinitionMap.getAttributes(java.lang.Object)
Métodos invocados: 
org.springframework.security.intercept.web.FilterInvocation.getHttpRequest()
javax.servlet.http.HttpServletRequest.getServletPath()
java.lang.String.equals(java.lang.Object)
2273 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests$MockFilterInvocationDefinitionMap.getConfigAttributeDefinitions()
Métodos invocados: 
java.util.List.add(java.lang.Object)
2274 - Declaração do método: org.springframework.security.securechannel.ChannelProcessingFilterTests$MockFilterInvocationDefinitionMap.supports(java.lang.Class)
2274 - Declaração do método: org.springframework.security.securechannel.InsecureChannelProcessorTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2275 - Declaração do método: org.springframework.security.securechannel.InsecureChannelProcessorTests.setUp()
2275 - Declaração do método: org.springframework.security.securechannel.InsecureChannelProcessorTests.testDecideDetectsAcceptableChannel()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.securechannel.InsecureChannelProcessor.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.web.FilterInvocation.getResponse()
javax.servlet.ServletResponse.isCommitted()
junit.framework.Assert.assertFalse(Z)
2276 - Declaração do método: org.springframework.security.securechannel.InsecureChannelProcessorTests.testDecideDetectsUnacceptableChannel()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setSecure(Z)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.securechannel.InsecureChannelProcessor.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.web.FilterInvocation.getResponse()
javax.servlet.ServletResponse.isCommitted()
junit.framework.Assert.assertTrue(Z)
2277 - Declaração do método: org.springframework.security.securechannel.InsecureChannelProcessorTests.testDecideRejectsNulls()
Métodos invocados: 
org.springframework.security.securechannel.InsecureChannelProcessor.afterPropertiesSet()
org.springframework.security.securechannel.InsecureChannelProcessor.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2278 - Declaração do método: org.springframework.security.securechannel.InsecureChannelProcessorTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.securechannel.InsecureChannelProcessor.getInsecureKeyword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.securechannel.InsecureChannelProcessor.setInsecureKeyword(java.lang.String)
org.springframework.security.securechannel.InsecureChannelProcessor.getInsecureKeyword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.securechannel.InsecureChannelProcessor.getEntryPoint()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.securechannel.InsecureChannelProcessor.setEntryPoint(org.springframework.security.securechannel.ChannelEntryPoint)
org.springframework.security.securechannel.InsecureChannelProcessor.getEntryPoint()
junit.framework.Assert.assertTrue(Z)
2279 - Declaração do método: org.springframework.security.securechannel.InsecureChannelProcessorTests.testMissingEntryPoint()
Métodos invocados: 
org.springframework.security.securechannel.InsecureChannelProcessor.setEntryPoint(org.springframework.security.securechannel.ChannelEntryPoint)
org.springframework.security.securechannel.InsecureChannelProcessor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2280 - Declaração do método: org.springframework.security.securechannel.InsecureChannelProcessorTests.testMissingSecureChannelKeyword()
Métodos invocados: 
org.springframework.security.securechannel.InsecureChannelProcessor.setInsecureKeyword(java.lang.String)
org.springframework.security.securechannel.InsecureChannelProcessor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.securechannel.InsecureChannelProcessor.setInsecureKeyword(java.lang.String)
org.springframework.security.securechannel.InsecureChannelProcessor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2281 - Declaração do método: org.springframework.security.securechannel.InsecureChannelProcessorTests.testSupports()
Métodos invocados: 
org.springframework.security.securechannel.InsecureChannelProcessor.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.securechannel.InsecureChannelProcessor.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.securechannel.InsecureChannelProcessor.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertFalse(Z)
2282 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpEntryPointTests.testDetectsMissingPortMapper()
Métodos invocados: 
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
junit.framework.Assert.fail(java.lang.String)
2283 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpEntryPointTests.testDetectsMissingPortResolver()
Métodos invocados: 
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
junit.framework.Assert.fail(java.lang.String)
2284 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpEntryPointTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.securechannel.AbstractRetryEntryPoint.getPortMapper()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.securechannel.AbstractRetryEntryPoint.getPortResolver()
junit.framework.Assert.assertTrue(Z)
2285 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpEntryPointTests.testNormalOperation()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setPathInfo(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.securechannel.AbstractRetryEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2286 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpEntryPointTests.testNormalOperationWithNullPathInfoAndNullQueryString()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setPathInfo(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.securechannel.AbstractRetryEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2287 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpEntryPointTests.testOperationWhenTargetPortIsUnknown()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setPathInfo(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.securechannel.AbstractRetryEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2288 - Declaração do método: org.springframework.security.securechannel.RetryWithHttpEntryPointTests.testOperationWithNonStandardPort()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setPathInfo(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.security.util.PortMapperImpl.setPortMappings(java.util.Map)
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.securechannel.AbstractRetryEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.securechannel.AbstractRetryEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2289 - Declaração do método: org.springframework.security.securechannel.SecureChannelProcessorTests.testDecideDetectsAcceptableChannel()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setSecure(Z)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.securechannel.SecureChannelProcessor.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.web.FilterInvocation.getResponse()
javax.servlet.ServletResponse.isCommitted()
junit.framework.Assert.assertFalse(Z)
2290 - Declaração do método: org.springframework.security.securechannel.SecureChannelProcessorTests.testDecideDetectsUnacceptableChannel()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setQueryString(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.securechannel.SecureChannelProcessor.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.web.FilterInvocation.getResponse()
javax.servlet.ServletResponse.isCommitted()
junit.framework.Assert.assertTrue(Z)
2291 - Declaração do método: org.springframework.security.securechannel.SecureChannelProcessorTests.testDecideRejectsNulls()
Métodos invocados: 
org.springframework.security.securechannel.SecureChannelProcessor.afterPropertiesSet()
org.springframework.security.securechannel.SecureChannelProcessor.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2292 - Declaração do método: org.springframework.security.securechannel.SecureChannelProcessorTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.securechannel.SecureChannelProcessor.getSecureKeyword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.securechannel.SecureChannelProcessor.setSecureKeyword(java.lang.String)
org.springframework.security.securechannel.SecureChannelProcessor.getSecureKeyword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.securechannel.SecureChannelProcessor.getEntryPoint()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.securechannel.SecureChannelProcessor.setEntryPoint(org.springframework.security.securechannel.ChannelEntryPoint)
org.springframework.security.securechannel.SecureChannelProcessor.getEntryPoint()
junit.framework.Assert.assertTrue(Z)
2293 - Declaração do método: org.springframework.security.securechannel.SecureChannelProcessorTests.testMissingEntryPoint()
Métodos invocados: 
org.springframework.security.securechannel.SecureChannelProcessor.setEntryPoint(org.springframework.security.securechannel.ChannelEntryPoint)
org.springframework.security.securechannel.SecureChannelProcessor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2294 - Declaração do método: org.springframework.security.securechannel.SecureChannelProcessorTests.testMissingSecureChannelKeyword()
Métodos invocados: 
org.springframework.security.securechannel.SecureChannelProcessor.setSecureKeyword(java.lang.String)
org.springframework.security.securechannel.SecureChannelProcessor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.securechannel.SecureChannelProcessor.setSecureKeyword(java.lang.String)
org.springframework.security.securechannel.SecureChannelProcessor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2295 - Declaração do método: org.springframework.security.securechannel.SecureChannelProcessorTests.testSupports()
Métodos invocados: 
org.springframework.security.securechannel.SecureChannelProcessor.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.securechannel.SecureChannelProcessor.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.securechannel.SecureChannelProcessor.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertFalse(Z)
2296 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManagerImplTests.testCannotSetEmptyChannelProcessorsList()
Métodos invocados: 
org.springframework.security.securechannel.ChannelDecisionManagerImpl.setChannelProcessors(java.util.List)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2297 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManagerImplTests.testCannotSetIncorrectObjectTypesIntoChannelProcessorsList()
Métodos invocados: 
java.util.List.add(java.lang.Object)
org.springframework.security.securechannel.ChannelDecisionManagerImpl.setChannelProcessors(java.util.List)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2298 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManagerImplTests.testCannotSetNullChannelProcessorsList()
Métodos invocados: 
org.springframework.security.securechannel.ChannelDecisionManagerImpl.setChannelProcessors(java.util.List)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2299 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManagerImplTests.testDecideIsOperational()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.securechannel.ChannelDecisionManagerImpl.setChannelProcessors(java.util.List)
org.springframework.security.securechannel.ChannelDecisionManagerImpl.afterPropertiesSet()
org.springframework.security.securechannel.ChannelDecisionManagerImpl.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.web.FilterInvocation.getResponse()
javax.servlet.ServletResponse.isCommitted()
junit.framework.Assert.assertTrue(Z)
2300 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManagerImplTests.testAnyChannelAttributeCausesProcessorsToBeSkipped()
Métodos invocados: 
java.util.List.add(java.lang.Object)
org.springframework.security.securechannel.ChannelDecisionManagerImpl.setChannelProcessors(java.util.List)
org.springframework.security.securechannel.ChannelDecisionManagerImpl.afterPropertiesSet()
org.springframework.security.securechannel.ChannelDecisionManagerImpl.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.web.FilterInvocation.getResponse()
javax.servlet.ServletResponse.isCommitted()
junit.framework.Assert.assertFalse(Z)
2301 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManagerImplTests.testDecideIteratesAllProcessorsIfNoneCommitAResponse()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.securechannel.ChannelDecisionManagerImpl.setChannelProcessors(java.util.List)
org.springframework.security.securechannel.ChannelDecisionManagerImpl.afterPropertiesSet()
org.springframework.security.securechannel.ChannelDecisionManagerImpl.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
org.springframework.security.intercept.web.FilterInvocation.getResponse()
javax.servlet.ServletResponse.isCommitted()
junit.framework.Assert.assertFalse(Z)
2302 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManagerImplTests.testDelegatesSupports()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.securechannel.ChannelDecisionManagerImpl.setChannelProcessors(java.util.List)
org.springframework.security.securechannel.ChannelDecisionManagerImpl.afterPropertiesSet()
org.springframework.security.securechannel.ChannelDecisionManagerImpl.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.securechannel.ChannelDecisionManagerImpl.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.securechannel.ChannelDecisionManagerImpl.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertFalse(Z)
2303 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManagerImplTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.securechannel.ChannelDecisionManagerImpl.getChannelProcessors()
junit.framework.Assert.assertNull(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.securechannel.ChannelDecisionManagerImpl.setChannelProcessors(java.util.List)
org.springframework.security.securechannel.ChannelDecisionManagerImpl.getChannelProcessors()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2304 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManagerImplTests.testStartupFailsWithEmptyChannelProcessorsList()
Métodos invocados: 
org.springframework.security.securechannel.ChannelDecisionManagerImpl.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2305 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManagerImplTests$MockChannelProcessor.MockChannelProcessor(java.lang.String, Z)
2305 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManagerImplTests$MockChannelProcessor.decide(org.springframework.security.intercept.web.FilterInvocation, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
junit.framework.Assert.fail(java.lang.String)
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
org.springframework.security.intercept.web.FilterInvocation.getHttpResponse()
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
2306 - Declaração do método: org.springframework.security.securechannel.ChannelDecisionManagerImplTests$MockChannelProcessor.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
2307 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.AbstractProcessingFilterTests()
2307 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.AbstractProcessingFilterTests(java.lang.String)
2307 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.createMockRequest()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
2308 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.Filter.init(javax.servlet.FilterConfig)
javax.servlet.Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
javax.servlet.Filter.destroy()
2309 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.makeSavedRequestForUrl()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilterTests.createMockRequest()
org.springframework.mock.web.MockHttpServletRequest.setMethod(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
2310 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.makePostSavedRequestForUrl()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilterTests.createMockRequest()
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setMethod(java.lang.String)
2311 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
2312 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
2313 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testDefaultProcessesFilterUrlWithPathParameter()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilterTests.createMockRequest()
org.springframework.security.ui.AbstractProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilterTests$MockAbstractProcessingFilter.requiresAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertTrue(Z)
2314 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testDoFilterWithNonHttpServletRequestDetected()
Métodos invocados: 
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2315 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testDoFilterWithNonHttpServletResponseDetected()
Métodos invocados: 
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2316 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testFailedAuthenticationRedirectsAppropriately()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilterTests.createMockRequest()
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationFailureUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationFailureUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.getExceptionMappings()
java.lang.Class.getName()
java.util.Properties.setProperty(java.lang.String, java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setExceptionMappings(java.util.Properties)
org.springframework.security.ui.AbstractProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
2317 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testFilterProcessesUrlVariationsRespected()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilterTests.createMockRequest()
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2318 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilter.getRememberMeServices()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.ui.AbstractProcessingFilter.setRememberMeServices(org.springframework.security.ui.rememberme.RememberMeServices)
org.springframework.security.ui.AbstractProcessingFilter.getRememberMeServices()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationFailureUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.getAuthenticationFailureUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.AbstractProcessingFilter.getAuthenticationManager()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.getDefaultTargetUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.getFilterProcessesUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationFailureUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.getAuthenticationFailureUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2319 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testDefaultUrlMuststartWithSlashOrHttpScheme()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
2320 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testIgnoresAnyServletPathOtherThanFilterProcessesUrl()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilterTests.createMockRequest()
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
2321 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testNormalOperationWithDefaultFilterProcessesUrl()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilterTests.createMockRequest()
org.springframework.mock.web.MockHttpServletRequest.getSession()
org.springframework.security.ui.AbstractProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationFailureUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.AbstractProcessingFilter.afterPropertiesSet()
org.springframework.security.ui.AbstractProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.getSession()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2322 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testStartupDetectsInvalidAuthenticationManager()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationFailureUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2323 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testStartupDetectsInvalidDefaultTargetUrl()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationFailureUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.AbstractProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2324 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testStartupDetectsInvalidFilterProcessesUrl()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationFailureUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2325 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testSuccessLoginThenFailureLoginResultsInSessionLosingToken()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilterTests.createMockRequest()
org.springframework.security.ui.AbstractProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationFailureUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
2326 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testSuccessfulAuthenticationButWithAlwaysUseDefaultTargetUrlCausesRedirectToDefaultTargetUrl()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilterTests.createMockRequest()
org.springframework.mock.web.MockHttpServletRequest.getSession()
org.springframework.security.ui.AbstractProcessingFilterTests.makeSavedRequestForUrl()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.ui.AbstractProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.isAlwaysUseDefaultTargetUrl()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.ui.AbstractProcessingFilter.setAlwaysUseDefaultTargetUrl(Z)
org.springframework.security.ui.AbstractProcessingFilter.isAlwaysUseDefaultTargetUrl()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ui.AbstractProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNotNull(java.lang.Object)
2327 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testSuccessfulAuthenticationCausesRedirectToSessionSpecifiedUrl()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilterTests.createMockRequest()
org.springframework.mock.web.MockHttpServletRequest.getSession()
org.springframework.security.ui.AbstractProcessingFilterTests.makeSavedRequestForUrl()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.ui.AbstractProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.ui.AbstractProcessingFilterTests.makeSavedRequestForUrl()
org.springframework.security.ui.savedrequest.SavedRequest.getFullRequestUrl()
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNotNull(java.lang.Object)
2328 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testSuccessfulAuthenticationCausesRedirectToDefaultTargetUrlOnPOSTSavedRequest()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilterTests.createMockRequest()
org.springframework.mock.web.MockHttpServletRequest.getSession()
org.springframework.security.ui.AbstractProcessingFilterTests.makePostSavedRequestForUrl()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.ui.AbstractProcessingFilter.setFilterProcessesUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
org.springframework.security.ui.TargetUrlResolverImpl.setJustUseSavedRequestOnGet(Z)
org.springframework.security.ui.AbstractProcessingFilter.setTargetUrlResolver(org.springframework.security.ui.TargetUrlResolver)
org.springframework.security.ui.AbstractProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNotNull(java.lang.Object)
2329 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testFullDefaultTargetUrlDoesNotHaveContextPathPrepended()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilterTests.createMockRequest()
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAlwaysUseDefaultTargetUrl(Z)
org.springframework.security.ui.AbstractProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNotNull(java.lang.Object)
2330 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testNewSessionIsCreatedIfInvalidateSessionOnSuccessfulAuthenticationIsSet()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilterTests.createMockRequest()
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.ui.AbstractProcessingFilter.setInvalidateSessionOnSuccessfulAuthentication(Z)
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.getId()
javax.servlet.http.HttpSession.getId()
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2331 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testAttributesAreNotMigratedToNewlyCreatedSessionIfMigrateAttributesIsFalse()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilterTests.createMockRequest()
org.springframework.mock.web.MockHttpServletRequest.getSession()
org.springframework.security.ui.AbstractProcessingFilter.setInvalidateSessionOnSuccessfulAuthentication(Z)
org.springframework.security.ui.AbstractProcessingFilter.setMigrateInvalidatedSessionAttributes(Z)
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.getId()
javax.servlet.http.HttpSession.getId()
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
junit.framework.Assert.assertNull(java.lang.Object)
2332 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testNoSessionIsCreatedIfAllowSessionCreationIsFalse()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilterTests.createMockRequest()
org.springframework.security.ui.AbstractProcessingFilter.setAllowSessionCreation(Z)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationFailureUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletRequest.getSession(Z)
junit.framework.Assert.assertNull(java.lang.Object)
2333 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testLoginErrorWithNoFailureUrlSendsUnauthorizedStatus()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilterTests.createMockRequest()
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
2334 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testServerSideRedirectForwardsToFailureUrl()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilterTests.createMockRequest()
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationFailureUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setServerSideRedirect(Z)
org.springframework.security.ui.AbstractProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getForwardedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2335 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests.testTargetUrlParameterIsUsedIfPresent()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilterTests.createMockRequest()
org.springframework.mock.web.MockHttpServletRequest.setParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.TargetUrlResolverImpl.setTargetUrlParameter(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setTargetUrlResolver(org.springframework.security.ui.TargetUrlResolver)
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationFailureUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2336 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests$MockAbstractProcessingFilter.MockAbstractProcessingFilter(Z)
2336 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests$MockAbstractProcessingFilter.MockAbstractProcessingFilter(org.springframework.security.AuthenticationException)
2336 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests$MockAbstractProcessingFilter.MockAbstractProcessingFilter()
2336 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests$MockAbstractProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
2336 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests$MockAbstractProcessingFilter.getDefaultFilterProcessesUrl()
2336 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests$MockAbstractProcessingFilter.requiresAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2336 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests$MockAbstractProcessingFilter.getOrder()
2336 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests$MockFilterChain.MockFilterChain(Z)
2336 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests$MockFilterChain.MockFilterChain()
2336 - Declaração do método: org.springframework.security.ui.AbstractProcessingFilterTests$MockFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
Métodos invocados: 
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
2337 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilterTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
2338 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilterTests.testAccessDeniedWhenAnonymous()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.ExceptionTranslationFilter.setAuthenticationEntryPoint(org.springframework.security.ui.AuthenticationEntryPoint)
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.obtainFullSavedRequestUrl(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2339 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilterTests.testAccessDeniedWhenNonAnonymous()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.AccessDeniedHandlerImpl.setErrorPage(java.lang.String)
org.springframework.security.ui.ExceptionTranslationFilter.setAuthenticationEntryPoint(org.springframework.security.ui.AuthenticationEntryPoint)
org.springframework.security.ui.ExceptionTranslationFilter.setAccessDeniedHandler(org.springframework.security.ui.AccessDeniedHandler)
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
org.springframework.mock.web.MockHttpServletRequest.getAttribute(java.lang.String)
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2340 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilterTests.testDoFilterWithNonHttpServletRequestDetected()
Métodos invocados: 
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2341 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilterTests.testDoFilterWithNonHttpServletResponseDetected()
Métodos invocados: 
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2342 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilterTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.ui.ExceptionTranslationFilter.setAuthenticationEntryPoint(org.springframework.security.ui.AuthenticationEntryPoint)
org.springframework.security.ui.ExceptionTranslationFilter.getAuthenticationEntryPoint()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ui.ExceptionTranslationFilter.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.ui.ExceptionTranslationFilter.getPortResolver()
junit.framework.Assert.assertTrue(Z)
2343 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilterTests.testRedirectedToLoginFormAndSessionShowsOriginalTargetWhenAuthenticationException()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.ExceptionTranslationFilter.setAuthenticationEntryPoint(org.springframework.security.ui.AuthenticationEntryPoint)
org.springframework.security.ui.ExceptionTranslationFilter.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.obtainFullSavedRequestUrl(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2344 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilterTests.testRedirectedToLoginFormAndSessionShowsOriginalTargetWithExoticPortWhenAuthenticationException()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.ExceptionTranslationFilter.setAuthenticationEntryPoint(org.springframework.security.ui.AuthenticationEntryPoint)
org.springframework.security.ui.ExceptionTranslationFilter.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.obtainFullSavedRequestUrl(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2345 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilterTests.testStartupDetectsMissingAuthenticationEntryPoint()
Métodos invocados: 
org.springframework.security.ui.ExceptionTranslationFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2346 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilterTests.testStartupDetectsMissingPortResolver()
Métodos invocados: 
org.springframework.security.ui.ExceptionTranslationFilter.setAuthenticationEntryPoint(org.springframework.security.ui.AuthenticationEntryPoint)
org.springframework.security.ui.ExceptionTranslationFilter.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.ui.ExceptionTranslationFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2347 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilterTests.testSuccessfulAccessGrant()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.ui.ExceptionTranslationFilter.setAuthenticationEntryPoint(org.springframework.security.ui.AuthenticationEntryPoint)
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
2348 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilterTests.testSuccessfulStartupAndShutdownDown()
Métodos invocados: 
org.springframework.security.ui.SpringSecurityFilter.init(javax.servlet.FilterConfig)
org.springframework.security.ui.SpringSecurityFilter.destroy()
junit.framework.Assert.assertTrue(Z)
2349 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilterTests.testThrowIOException()
Métodos invocados: 
org.springframework.security.ui.ExceptionTranslationFilter.setAuthenticationEntryPoint(org.springframework.security.ui.AuthenticationEntryPoint)
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getCause()
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
2350 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilterTests.testThrowServletException()
Métodos invocados: 
org.springframework.security.ui.ExceptionTranslationFilter.setAuthenticationEntryPoint(org.springframework.security.ui.AuthenticationEntryPoint)
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getCause()
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
2351 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilterTests$MockFilterChain.MockFilterChain(Z, Z, Z, Z)
2351 - Declaração do método: org.springframework.security.ui.ExceptionTranslationFilterTests$MockFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
2351 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPointTests.BasicProcessingFilterEntryPointTests()
2351 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPointTests.BasicProcessingFilterEntryPointTests(java.lang.String)
2351 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPointTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2352 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPointTests.setUp()
2352 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPointTests.testDetectsMissingRealmName()
Métodos invocados: 
org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPoint.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2353 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPointTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPoint.setRealmName(java.lang.String)
org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPoint.getRealmName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2354 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPointTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPoint.setRealmName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.basicauth.BasicProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
org.springframework.mock.web.MockHttpServletResponse.getErrorMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletResponse.getHeader(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2355 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterTests.BasicProcessingFilterTests()
2355 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterTests.BasicProcessingFilterTests(java.lang.String)
2355 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
Métodos invocados: 
javax.servlet.Filter.init(javax.servlet.FilterConfig)
org.jmock.MockObjectTestCase.mock(java.lang.Class)
org.jmock.Mock.proxy()
org.jmock.MockObjectTestCase.once()
org.jmock.MockObjectTestCase.never()
org.jmock.Mock.expects(org.jmock.core.InvocationMatcher)
org.jmock.builder.NameMatchBuilder.method(java.lang.String)
javax.servlet.Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
javax.servlet.Filter.destroy()
2356 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterTests.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
org.springframework.security.userdetails.memory.UserMapEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.userdetails.memory.InMemoryDaoImpl.setUserMap(org.springframework.security.userdetails.memory.UserMap)
org.springframework.security.providers.dao.DaoAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
java.util.Arrays.asList([Ljava.lang.Object;)
org.springframework.security.providers.ProviderManager.setProviders(java.util.List)
org.springframework.security.providers.ProviderManager.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
org.springframework.security.providers.ProviderManager.afterPropertiesSet()
org.springframework.security.ui.basicauth.BasicProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.basicauth.BasicProcessingFilter.setAuthenticationEntryPoint(org.springframework.security.ui.AuthenticationEntryPoint)
2357 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
2358 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterTests.testDoFilterWithNonHttpServletRequestDetected()
Métodos invocados: 
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2359 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterTests.testDoFilterWithNonHttpServletResponseDetected()
Métodos invocados: 
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2360 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterTests.testFilterIgnoresRequestsContainingNoAuthorizationHeader()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.ui.basicauth.BasicProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
2361 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.ui.basicauth.BasicProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.basicauth.BasicProcessingFilter.getAuthenticationManager()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ui.basicauth.BasicProcessingFilter.setAuthenticationEntryPoint(org.springframework.security.ui.AuthenticationEntryPoint)
org.springframework.security.ui.basicauth.BasicProcessingFilter.getAuthenticationEntryPoint()
junit.framework.Assert.assertTrue(Z)
2362 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterTests.testInvalidBasicAuthorizationTokenIsIgnored()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.springframework.security.ui.basicauth.BasicProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
2363 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterTests.testNormalOperation()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.ui.basicauth.BasicProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2364 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterTests.testOtherAuthorizationSchemeIsIgnored()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.ui.basicauth.BasicProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
2365 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterTests.testStartupDetectsMissingAuthenticationEntryPoint()
Métodos invocados: 
org.springframework.security.ui.basicauth.BasicProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.basicauth.BasicProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2366 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterTests.testStartupDetectsMissingAuthenticationManager()
Métodos invocados: 
org.springframework.security.ui.basicauth.BasicProcessingFilter.setAuthenticationEntryPoint(org.springframework.security.ui.AuthenticationEntryPoint)
org.springframework.security.ui.basicauth.BasicProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2367 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterTests.testSuccessLoginThenFailureLoginResultsInSessionLosingToken()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.springframework.security.ui.basicauth.BasicProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.springframework.security.ui.basicauth.BasicProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
2368 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterTests.testWrongPasswordContinuesFilterChainIfIgnoreFailureIsTrue()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.springframework.security.ui.basicauth.BasicProcessingFilter.setIgnoreFailure(Z)
org.springframework.security.ui.basicauth.BasicProcessingFilter.isIgnoreFailure()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ui.basicauth.BasicProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
2369 - Declaração do método: org.springframework.security.ui.basicauth.BasicProcessingFilterTests.testWrongPasswordReturnsForbiddenIfIgnoreFailureIsFalse()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setSession(javax.servlet.http.HttpSession)
org.springframework.security.ui.basicauth.BasicProcessingFilter.isIgnoreFailure()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.ui.basicauth.BasicProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
2370 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPointTests.DigestProcessingFilterEntryPointTests()
2370 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPointTests.DigestProcessingFilterEntryPointTests(java.lang.String)
2370 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPointTests.checkNonceValid(java.lang.String)
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)
junit.framework.Assert.assertTrue(Z)
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.decodeBase64([B)
org.springframework.util.StringUtils.delimitedListToStringArray(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.codec.digest.DigestUtils.md5Hex(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2371 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPointTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2372 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPointTests.setUp()
2372 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPointTests.testDetectsMissingKey()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.setRealmName(java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2373 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPointTests.testDetectsMissingRealmName()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.setKey(java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.setNonceValiditySeconds(I)
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2374 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPointTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.getNonceValiditySeconds()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.setRealmName(java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.getRealmName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.setKey(java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.getKey()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.setNonceValiditySeconds(I)
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.getNonceValiditySeconds()
junit.framework.Assert.assertEquals(I, I)
2375 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPointTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.setRealmName(java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.setKey(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.afterPropertiesSet()
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
org.springframework.mock.web.MockHttpServletResponse.getHeader(java.lang.String)
java.lang.Object.toString()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.springframework.mock.web.MockHttpServletResponse.getHeader(java.lang.String)
java.lang.Object.toString()
java.lang.String.substring(I)
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
org.springframework.security.util.StringSplitUtils.splitEachArrayElementAndCreateMap([Ljava.lang.String;, java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertNull(java.lang.Object)
java.util.Map.get(java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPointTests.checkNonceValid(java.lang.String)
2376 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPointTests.testOperationIfDueToStaleNonce()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.setRealmName(java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.setKey(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.afterPropertiesSet()
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
org.springframework.mock.web.MockHttpServletResponse.getHeader(java.lang.String)
java.lang.Object.toString()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.mock.web.MockHttpServletResponse.getHeader(java.lang.String)
java.lang.Object.toString()
java.lang.String.substring(I)
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
org.springframework.security.util.StringSplitUtils.splitEachArrayElementAndCreateMap([Ljava.lang.String;, java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPointTests.checkNonceValid(java.lang.String)
2377 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.DigestProcessingFilterTests()
2377 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.DigestProcessingFilterTests(java.lang.String)
2377 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
2377 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
Métodos invocados: 
javax.servlet.Filter.init(javax.servlet.FilterConfig)
org.jmock.MockObjectTestCase.mock(java.lang.Class)
org.jmock.Mock.proxy()
org.jmock.MockObjectTestCase.once()
org.jmock.MockObjectTestCase.never()
org.jmock.Mock.expects(org.jmock.core.InvocationMatcher)
org.jmock.builder.NameMatchBuilder.method(java.lang.String)
javax.servlet.Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
javax.servlet.Filter.destroy()
2378 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.generateNonce(I)
Métodos invocados: 
java.lang.System.currentTimeMillis()
org.apache.commons.codec.digest.DigestUtils.md5Hex(java.lang.String)
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
2379 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
org.springframework.security.userdetails.memory.UserMapEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.userdetails.memory.InMemoryDaoImpl.setUserMap(org.springframework.security.userdetails.memory.UserMap)
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.setRealmName(java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint.setKey(java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilter.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.digestauth.DigestProcessingFilter.setAuthenticationEntryPoint(org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
2380 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
2381 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testDoFilterWithNonHttpServletRequestDetected()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2382 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testDoFilterWithNonHttpServletResponseDetected()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2383 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testExpiredNonceReturnsForbiddenWithStaleHeader()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.generateNonce(I)
org.springframework.security.ui.digestauth.DigestProcessingFilter.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
java.lang.Thread.sleep(J)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
org.springframework.mock.web.MockHttpServletResponse.getHeader(java.lang.String)
java.lang.Object.toString()
java.lang.String.substring(I)
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
org.springframework.security.util.StringSplitUtils.splitEachArrayElementAndCreateMap([Ljava.lang.String;, java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2384 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testFilterIgnoresRequestsContainingNoAuthorizationHeader()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
2385 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilter.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.digestauth.DigestProcessingFilter.getUserDetailsService()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ui.digestauth.DigestProcessingFilter.setAuthenticationEntryPoint(org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint)
org.springframework.security.ui.digestauth.DigestProcessingFilter.getAuthenticationEntryPoint()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ui.digestauth.DigestProcessingFilter.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.ui.digestauth.DigestProcessingFilter.getUserCache()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilter.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.security.ui.digestauth.DigestProcessingFilter.getUserCache()
junit.framework.Assert.assertNotNull(java.lang.Object)
2386 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testInvalidDigestAuthorizationTokenGeneratesError()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
2387 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testMalformedHeaderReturnsForbidden()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
2388 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testNonBase64EncodedNonceReturnsForbidden()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilter.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
2389 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testNonceWithIncorrectSignatureForNumericFieldReturnsForbidden()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.security.ui.digestauth.DigestProcessingFilter.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
2390 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testNonceWithNonNumericFirstElementReturnsForbidden()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.security.ui.digestauth.DigestProcessingFilter.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
2391 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testNonceWithoutTwoColonSeparatedElementsReturnsForbidden()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.security.ui.digestauth.DigestProcessingFilter.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
2392 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testNormalOperationWhenPasswordIsAlreadyEncoded()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilter.encodePasswordInA1Format(java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilter.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2393 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testNormalOperationWhenPasswordNotAlreadyEncoded()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilter.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2394 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testOtherAuthorizationSchemeIsIgnored()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
2395 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testStartupDetectsMissingAuthenticationEntryPoint()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilter.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.digestauth.DigestProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2396 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testStartupDetectsMissingUserDetailsService()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilter.setAuthenticationEntryPoint(org.springframework.security.ui.digestauth.DigestProcessingFilterEntryPoint)
org.springframework.security.ui.digestauth.DigestProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2397 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testSuccessLoginThenFailureLoginResultsInSessionLosingToken()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilter.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilter.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
2398 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testWrongCnonceBasedOnDigestReturnsForbidden()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilter.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
2399 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testWrongDigestReturnsForbidden()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilter.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
2400 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testWrongRealmReturnsForbidden()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilter.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
2401 - Declaração do método: org.springframework.security.ui.digestauth.DigestProcessingFilterTests.testWrongUsernameReturnsForbidden()
Métodos invocados: 
org.springframework.security.ui.digestauth.DigestProcessingFilter.generateDigest(Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.createAuthorizationHeader(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.ui.digestauth.DigestProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.Filter, javax.servlet.ServletRequest, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
2402 - Declaração do método: org.springframework.security.ui.logout.LogoutHandlerTests.setUp()
2402 - Declaração do método: org.springframework.security.ui.logout.LogoutHandlerTests.testRequiresLogoutUrlWorksWithPathParams()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.logout.LogoutFilter.requiresLogout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertTrue(Z)
2403 - Declaração do método: org.springframework.security.ui.logout.LogoutHandlerTests.testRequiresLogoutUrlWorksWithQueryParams()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.logout.LogoutFilter.requiresLogout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertTrue(Z)
2404 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterTests.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
2405 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterTests.testAfterPropertiesSet()
Métodos invocados: 
org.springframework.security.ui.preauth.AbstractPreAuthenticatedProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
2406 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterTests.testDoFilterAuthenticated()
Métodos invocados: 
org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterTests.testDoFilter(Z)
2407 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterTests.testDoFilterUnauthenticated()
Métodos invocados: 
org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterTests.testDoFilter(Z)
2408 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterTests.testDoFilter(Z)
Métodos invocados: 
org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterTests.getFilter(Z)
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(Z, Z)
2409 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterTests.getFilter(Z)
Métodos invocados: 
org.springframework.security.ui.preauth.AbstractPreAuthenticatedProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.preauth.AbstractPreAuthenticatedProcessingFilter.afterPropertiesSet()
2410 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterTests$ConcretePreAuthenticatedProcessingFilter.getPreAuthenticatedPrincipal(javax.servlet.http.HttpServletRequest)
2410 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterTests$ConcretePreAuthenticatedProcessingFilter.getPreAuthenticatedCredentials(javax.servlet.http.HttpServletRequest)
2410 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterTests$ConcretePreAuthenticatedProcessingFilter.getOrder()
2410 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterEntryPointTests.testGetSetOrder()
Métodos invocados: 
org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterEntryPoint.setOrder(I)
org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterEntryPoint.getOrder()
junit.framework.Assert.assertEquals(I, I)
2411 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterEntryPointTests.testCommence()
Métodos invocados: 
org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
2412 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetailsTests.testToString()
Métodos invocados: 
org.springframework.security.ui.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetailsTests.getRequest(java.lang.String, [Ljava.lang.String;)
org.springframework.security.ui.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.setGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.ui.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.toString()
java.lang.String.contains(java.lang.CharSequence)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.lang.String.contains(java.lang.CharSequence)
junit.framework.Assert.assertTrue(java.lang.String, Z)
2413 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetailsTests.testGetSetPreAuthenticatedGrantedAuthorities()
Métodos invocados: 
org.springframework.security.ui.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetailsTests.getRequest(java.lang.String, [Ljava.lang.String;)
java.util.Arrays.asList([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.ui.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.setGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.ui.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.getGrantedAuthorities()
java.util.Arrays.asList([Lorg.springframework.security.GrantedAuthority;)
java.util.Collection.containsAll(java.util.Collection)
java.util.Collection.containsAll(java.util.Collection)
junit.framework.Assert.assertTrue(java.lang.String, Z)
2414 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetailsTests.testGetWithoutSetPreAuthenticatedGrantedAuthorities()
Métodos invocados: 
org.springframework.security.ui.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetailsTests.getRequest(java.lang.String, [Ljava.lang.String;)
org.springframework.security.ui.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.getGrantedAuthorities()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.toString()
junit.framework.Assert.fail(java.lang.String)
2415 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetailsTests.getRequest(java.lang.String, [Ljava.lang.String;)
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.contains(java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setRemoteUser(java.lang.String)
2416 - Declaração do método: org.springframework.security.ui.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetailsTests$1.isUserInRole(java.lang.String)
Métodos invocados: 
java.util.Set.contains(java.lang.Object)
2417 - Declaração do método: org.springframework.security.ui.preauth.j2ee.WebXmlJ2eeDefinedRolesRetrieverTests.testRole1To4Roles()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.String;)
java.lang.Thread.currentThread()
java.lang.Thread.getContextClassLoader()
java.lang.ClassLoader.getResourceAsStream(java.lang.String)
org.springframework.security.ui.preauth.j2ee.WebXmlMappableAttributesRetriever.setWebXmlInputStream(java.io.InputStream)
org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.afterPropertiesSet()
org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.getMappableAttributes()
junit.framework.Assert.assertNotNull(java.lang.Object)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.size()
java.util.List.size()
java.util.List.size()
java.util.List.size()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.containsAll(java.util.Collection)
junit.framework.Assert.assertTrue(java.lang.String, Z)
2418 - Declaração do método: org.springframework.security.ui.preauth.j2ee.WebXmlJ2eeDefinedRolesRetrieverTests.testGetZeroJ2eeRoles()
Métodos invocados: 
java.lang.Thread.currentThread()
java.lang.Thread.getContextClassLoader()
java.lang.ClassLoader.getResourceAsStream(java.lang.String)
org.springframework.security.ui.preauth.j2ee.WebXmlMappableAttributesRetriever.setWebXmlInputStream(java.io.InputStream)
org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.afterPropertiesSet()
org.springframework.security.authoritymapping.XmlMappableAttributesRetriever.getMappableAttributes()
junit.framework.Assert.assertTrue(java.lang.String, Z)
2419 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eePreAuthenticatedProcessingFilterTests.testGetPreAuthenticatedPrincipal()
Métodos invocados: 
org.springframework.security.ui.preauth.j2ee.J2eePreAuthenticatedProcessingFilterTests.getRequest(java.lang.String, [Ljava.lang.String;)
org.springframework.security.ui.preauth.j2ee.J2eePreAuthenticatedProcessingFilter.getPreAuthenticatedPrincipal(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2420 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eePreAuthenticatedProcessingFilterTests.testGetPreAuthenticatedCredentials()
Métodos invocados: 
org.springframework.security.ui.preauth.j2ee.J2eePreAuthenticatedProcessingFilterTests.getRequest(java.lang.String, [Ljava.lang.String;)
org.springframework.security.ui.preauth.j2ee.J2eePreAuthenticatedProcessingFilter.getPreAuthenticatedCredentials(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2421 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eePreAuthenticatedProcessingFilterTests.getRequest(java.lang.String, [Ljava.lang.String;)
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.contains(java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setRemoteUser(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setUserPrincipal(java.security.Principal)
2422 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eePreAuthenticatedProcessingFilterTests$1.isUserInRole(java.lang.String)
Métodos invocados: 
java.util.Set.contains(java.lang.Object)
2423 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eePreAuthenticatedProcessingFilterTests$2.getName()
2423 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testAfterPropertiesSetException()
Métodos invocados: 
org.springframework.security.ui.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
2424 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testBuildDetailsHttpServletRequestNoMappedNoUserRoles()
Métodos invocados: 
org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testDetails([Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)
2425 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testBuildDetailsHttpServletRequestNoMappedUnmappedUserRoles()
Métodos invocados: 
org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testDetails([Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)
2426 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testBuildDetailsHttpServletRequestNoUserRoles()
Métodos invocados: 
org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testDetails([Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)
2427 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testBuildDetailsHttpServletRequestAllUserRoles()
Métodos invocados: 
org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testDetails([Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)
2428 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testBuildDetailsHttpServletRequestUnmappedUserRoles()
Métodos invocados: 
org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testDetails([Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)
2429 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testBuildDetailsHttpServletRequestPartialUserRoles()
Métodos invocados: 
org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testDetails([Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)
2430 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testBuildDetailsHttpServletRequestPartialAndUnmappedUserRoles()
Métodos invocados: 
org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testDetails([Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)
2431 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.testDetails([Ljava.lang.String;, [Ljava.lang.String;, [Ljava.lang.String;)
Métodos invocados: 
org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.getJ2eeBasedPreAuthenticatedWebAuthenticationDetailsSource([Ljava.lang.String;)
org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.getRequest(java.lang.String, [Ljava.lang.String;)
org.springframework.security.ui.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.buildDetails(java.lang.Object)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.lang.Object.getClass()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.springframework.security.ui.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails.getGrantedAuthorities()
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.springframework.security.GrantedAuthority.getAuthority()
java.util.Collection.add(java.lang.Object)
java.util.Collection.containsAll(java.util.Collection)
java.util.Collection.containsAll(java.util.Collection)
junit.framework.Assert.assertTrue(java.lang.String, Z)
2432 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.getJ2eeBasedPreAuthenticatedWebAuthenticationDetailsSource([Ljava.lang.String;)
Métodos invocados: 
org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.getMappableRolesRetriever([Ljava.lang.String;)
org.springframework.security.ui.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.setMappableRolesRetriever(org.springframework.security.authoritymapping.MappableAttributesRetriever)
org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.getJ2eeUserRoles2GrantedAuthoritiesMapper()
org.springframework.security.ui.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.setUserRoles2GrantedAuthoritiesMapper(org.springframework.security.authoritymapping.Attributes2GrantedAuthoritiesMapper)
org.springframework.security.ui.AuthenticationDetailsSourceImpl.setClazz(java.lang.Class)
org.springframework.security.ui.preauth.j2ee.AbstractPreAuthenticatedAuthenticationDetailsSource.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
2433 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.getMappableRolesRetriever([Ljava.lang.String;)
Métodos invocados: 
org.springframework.security.authoritymapping.SimpleMappableAttributesRetriever.setMappableAttributes([Ljava.lang.String;)
2434 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.getJ2eeUserRoles2GrantedAuthoritiesMapper()
Métodos invocados: 
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.setAddPrefixIfAlreadyExisting(Z)
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToLowerCase(Z)
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.setConvertAttributeToUpperCase(Z)
org.springframework.security.authoritymapping.SimpleAttributes2GrantedAuthoritiesMapper.seAttributePrefix(java.lang.String)
2435 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests.getRequest(java.lang.String, [Ljava.lang.String;)
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.contains(java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setRemoteUser(java.lang.String)
2436 - Declaração do método: org.springframework.security.ui.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSourceTests$1.isUserInRole(java.lang.String)
Métodos invocados: 
java.util.Set.contains(java.lang.Object)
2437 - Declaração do método: org.springframework.security.ui.preauth.x509.SubjectDnX509PrincipalExtractorTests.setUp()
Métodos invocados: 
org.springframework.security.ui.preauth.x509.SubjectDnX509PrincipalExtractor.setMessageSource(org.springframework.context.MessageSource)
2438 - Declaração do método: org.springframework.security.ui.preauth.x509.SubjectDnX509PrincipalExtractorTests.invalidRegexFails()
Métodos invocados: 
org.springframework.security.ui.preauth.x509.SubjectDnX509PrincipalExtractor.setSubjectDnRegex(java.lang.String)
2439 - Declaração do método: org.springframework.security.ui.preauth.x509.SubjectDnX509PrincipalExtractorTests.defaultCNPatternReturnsExcpectedPrincipal()
Métodos invocados: 
org.springframework.security.providers.x509.X509TestUtils.buildTestCertificate()
org.springframework.security.ui.preauth.x509.SubjectDnX509PrincipalExtractor.extractPrincipal(java.security.cert.X509Certificate)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2440 - Declaração do método: org.springframework.security.ui.preauth.x509.SubjectDnX509PrincipalExtractorTests.matchOnEmailReturnsExpectedPrincipal()
Métodos invocados: 
org.springframework.security.ui.preauth.x509.SubjectDnX509PrincipalExtractor.setSubjectDnRegex(java.lang.String)
org.springframework.security.providers.x509.X509TestUtils.buildTestCertificate()
org.springframework.security.ui.preauth.x509.SubjectDnX509PrincipalExtractor.extractPrincipal(java.security.cert.X509Certificate)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2441 - Declaração do método: org.springframework.security.ui.preauth.x509.SubjectDnX509PrincipalExtractorTests.matchOnShoeSizeThrowsBadCredentials()
Métodos invocados: 
org.springframework.security.ui.preauth.x509.SubjectDnX509PrincipalExtractor.setSubjectDnRegex(java.lang.String)
org.springframework.security.providers.x509.X509TestUtils.buildTestCertificate()
org.springframework.security.ui.preauth.x509.SubjectDnX509PrincipalExtractor.extractPrincipal(java.security.cert.X509Certificate)
2442 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests.setUpData()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setCookieName(java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
2443 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests.loginIsRejectedWithWrongNumberOfCookieTokens()
Métodos invocados: 
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2444 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests.loginIsRejectedWhenNoTokenMatchingSeriesIsFound()
Métodos invocados: 
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.setTokenRepository(org.springframework.security.ui.rememberme.PersistentTokenRepository)
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2445 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests.loginIsRejectedWhenTokenIsExpired()
Métodos invocados: 
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.setTokenRepository(org.springframework.security.ui.rememberme.PersistentTokenRepository)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setTokenValiditySeconds(I)
java.lang.Thread.sleep(J)
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.setTokenRepository(org.springframework.security.ui.rememberme.PersistentTokenRepository)
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2446 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests.cookieTheftIsDetectedWhenSeriesAndTokenDontMatch()
Métodos invocados: 
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.setTokenRepository(org.springframework.security.ui.rememberme.PersistentTokenRepository)
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2447 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests.successfulAutoLoginCreatesNewTokenAndCookieWithSameSeries()
Métodos invocados: 
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.setTokenRepository(org.springframework.security.ui.rememberme.PersistentTokenRepository)
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.setTokenLength(I)
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.getStoredToken()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getSeries()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.getStoredToken()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getTokenValue()
java.lang.String.length()
org.junit.Assert.assertEquals(J, J)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
javax.servlet.http.Cookie.getValue()
org.springframework.security.ui.rememberme.AbstractRememberMeServices.decodeCookie(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.getStoredToken()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getTokenValue()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2448 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests.loginSuccessCreatesNewTokenAndCookieWithNewSeries()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setAlwaysRemember(Z)
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.setTokenRepository(org.springframework.security.ui.rememberme.PersistentTokenRepository)
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.setTokenLength(I)
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServices.setSeriesLength(I)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.getStoredToken()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getSeries()
java.lang.String.length()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.getStoredToken()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getTokenValue()
java.lang.String.length()
org.junit.Assert.assertEquals(J, J)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
javax.servlet.http.Cookie.getValue()
org.springframework.security.ui.rememberme.AbstractRememberMeServices.decodeCookie(java.lang.String)
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.getStoredToken()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getSeries()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.getStoredToken()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getTokenValue()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2449 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.MockTokenRepository(org.springframework.security.ui.rememberme.PersistentRememberMeToken)
2449 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.createNewToken(org.springframework.security.ui.rememberme.PersistentRememberMeToken)
2449 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.updateToken(java.lang.String, java.lang.String, java.util.Date)
Métodos invocados: 
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getUsername()
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getSeries()
2450 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.getTokenForSeries(java.lang.String)
2450 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.removeUserTokens(java.lang.String)
2450 - Declaração do método: org.springframework.security.ui.rememberme.PersistentTokenBasedRememberMeServicesTests$MockTokenRepository.getStoredToken()
2450 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.nonBase64CookieShouldBeDetected()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.decodeCookie(java.lang.String)
2451 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.cookieShouldBeCorrectlyEncodedAndDecoded()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.encodeCookie([Ljava.lang.String;)
java.lang.String.endsWith(java.lang.String)
org.junit.Assert.assertFalse(Z)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.decodeCookie(java.lang.String)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2452 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.autoLoginShouldReturnNullIfNoLoginCookieIsPresented()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
2453 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.successfulAutoLoginReturnsExpectedAuthentication()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.getUserDetailsService()
org.junit.Assert.assertNotNull(java.lang.Object)
org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.createLoginCookie(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNotNull(java.lang.Object)
2454 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.autoLoginShouldFailIfInvalidCookieExceptionIsRaised()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.createLoginCookie(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.assertCookieCancelled(org.springframework.mock.web.MockHttpServletResponse)
2455 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.autoLoginShouldFailIfUserNotFound()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.createLoginCookie(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.assertCookieCancelled(org.springframework.mock.web.MockHttpServletResponse)
2456 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.autoLoginShouldFailIfUserAccountIsLocked()
Métodos invocados: 
org.springframework.security.userdetails.User.getAuthorities()
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.createLoginCookie(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.junit.Assert.assertNull(java.lang.Object)
org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.assertCookieCancelled(org.springframework.mock.web.MockHttpServletResponse)
2457 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.loginFailShouldCancelCookie()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.createLoginCookie(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.assertCookieCancelled(org.springframework.mock.web.MockHttpServletResponse)
2458 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.cookieTheftExceptionShouldBeRethrown()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.createLoginCookie(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2459 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests$1.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2459 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.loginSuccessCallsOnLoginSuccessCorrectly()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
org.junit.Assert.assertFalse(Z)
org.springframework.mock.web.MockHttpServletRequest.setParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
org.junit.Assert.assertTrue(Z)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setParameter(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
org.junit.Assert.assertTrue(Z)
org.springframework.mock.web.MockHttpServletRequest.setParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
org.junit.Assert.assertFalse(Z)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setAlwaysRemember(Z)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
org.junit.Assert.assertTrue(Z)
2460 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.setCookieUsesCorrectNamePathAndValue()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setCookieName(java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setCookie([Ljava.lang.String;, I, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getValue()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
javax.servlet.http.Cookie.getName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
javax.servlet.http.Cookie.getPath()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2461 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests$2.encodeCookie([Ljava.lang.String;)
2461 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.createLoginCookie(java.lang.String)
Métodos invocados: 
org.springframework.util.StringUtils.delimitedListToStringArray(java.lang.String, java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.encodeCookie([Ljava.lang.String;)
2462 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests.assertCookieCancelled(org.springframework.mock.web.MockHttpServletResponse)
Métodos invocados: 
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getMaxAge()
org.junit.Assert.assertEquals(J, J)
2463 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests$MockRememberMeServices.MockRememberMeServices()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setKey(java.lang.String)
2464 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests$MockRememberMeServices.onLoginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
2464 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests$MockRememberMeServices.processAutoLoginCookie([Ljava.lang.String;, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.getUserDetailsService()
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
2465 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests$MockUserDetailsService.MockUserDetailsService(org.springframework.security.userdetails.UserDetails, Z)
2465 - Declaração do método: org.springframework.security.ui.rememberme.AbstractRememberMeServicesTests$MockUserDetailsService.loadUserByUsername(java.lang.String)
2465 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.TokenBasedRememberMeServicesTests()
2465 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.TokenBasedRememberMeServicesTests(java.lang.String)
2465 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.determineExpiryTimeFromBased64EncodedToken(java.lang.String)
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.decodeBase64([B)
org.springframework.util.StringUtils.delimitedListToStringArray(java.lang.String, java.lang.String)
java.lang.Long.longValue()
2466 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.generateCorrectCookieContentForToken(J, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.codec.digest.DigestUtils.md5Hex(java.lang.String)
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
2467 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.testAutoLoginIfDoesNotPresentAnyCookies()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setKey(java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
junit.framework.Assert.assertNull(java.lang.Object)
2468 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.testAutoLoginIfDoesNotPresentRequiredCookie()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setKey(java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
junit.framework.Assert.assertNull(java.lang.Object)
2469 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.testAutoLoginIfExpired()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setKey(java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
java.lang.System.currentTimeMillis()
org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.generateCorrectCookieContentForToken(J, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
junit.framework.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getMaxAge()
junit.framework.Assert.assertEquals(I, I)
2470 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.testAutoLoginIfMissingThreeTokensInCookieValue()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setKey(java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
junit.framework.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getMaxAge()
junit.framework.Assert.assertEquals(I, I)
2471 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.testAutoLoginIfNotBase64Encoded()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setKey(java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
junit.framework.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getMaxAge()
junit.framework.Assert.assertEquals(I, I)
2472 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.testAutoLoginIfSignatureBlocksDoesNotMatchExpectedValue()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setKey(java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
java.lang.System.currentTimeMillis()
org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.generateCorrectCookieContentForToken(J, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
junit.framework.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getMaxAge()
junit.framework.Assert.assertEquals(I, I)
2473 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.testAutoLoginIfTokenDoesNotContainANumberInCookieValue()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setKey(java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.encodeBase64([B)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
junit.framework.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getMaxAge()
junit.framework.Assert.assertEquals(I, I)
2474 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.testAutoLoginIfUserNotFound()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setKey(java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
java.lang.System.currentTimeMillis()
org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.generateCorrectCookieContentForToken(J, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
junit.framework.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getMaxAge()
junit.framework.Assert.assertEquals(I, I)
2475 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.testAutoLoginWithValidToken()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setKey(java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
java.lang.System.currentTimeMillis()
org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.generateCorrectCookieContentForToken(J, java.lang.String, java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setCookies([Ljavax.servlet.http.Cookie;)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2476 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.getUserDetailsService()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setKey(java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.getKey()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.getParameter()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setParameter(java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.getParameter()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.setTokenValiditySeconds(I)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.getTokenValiditySeconds()
junit.framework.Assert.assertEquals(I, I)
2477 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.testLoginFail()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
junit.framework.Assert.assertNotNull(java.lang.Object)
javax.servlet.http.Cookie.getMaxAge()
junit.framework.Assert.assertEquals(I, I)
2478 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.testLoginSuccessIgnoredIfParameterNotSetOrFalse()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
junit.framework.Assert.assertNull(java.lang.Object)
2479 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.testLoginSuccessNormalWithNonUserDetailsBasedPrincipal()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.getTokenValiditySeconds()
javax.servlet.http.Cookie.getMaxAge()
junit.framework.Assert.assertEquals(I, I)
javax.servlet.http.Cookie.getValue()
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)
junit.framework.Assert.assertTrue(Z)
javax.servlet.http.Cookie.getValue()
org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.determineExpiryTimeFromBased64EncodedToken(java.lang.String)
java.util.Date.before(java.util.Date)
junit.framework.Assert.assertTrue(Z)
2480 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.testLoginSuccessNormalWithUserDetailsBasedPrincipal()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpServletResponse.getCookie(java.lang.String)
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.ui.rememberme.AbstractRememberMeServices.getTokenValiditySeconds()
javax.servlet.http.Cookie.getMaxAge()
junit.framework.Assert.assertEquals(I, I)
javax.servlet.http.Cookie.getValue()
java.lang.String.getBytes()
org.apache.commons.codec.binary.Base64.isArrayByteBase64([B)
junit.framework.Assert.assertTrue(Z)
javax.servlet.http.Cookie.getValue()
org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests.determineExpiryTimeFromBased64EncodedToken(java.lang.String)
java.util.Date.before(java.util.Date)
junit.framework.Assert.assertTrue(Z)
2481 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests$MockAuthenticationDao.MockAuthenticationDao(org.springframework.security.userdetails.UserDetails, Z)
2481 - Declaração do método: org.springframework.security.ui.rememberme.TokenBasedRememberMeServicesTests$MockAuthenticationDao.loadUserByUsername(java.lang.String)
2481 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImplTests.createDataSource()
2481 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImplTests.clearDataSource()
Métodos invocados: 
org.springframework.security.TestDataSource.destroy()
2482 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImplTests.populateDatabase()
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.setDataSource(javax.sql.DataSource)
org.springframework.security.ui.rememberme.JdbcTokenRepositoryImpl.initDao()
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
2483 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImplTests.clearData()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
2484 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImplTests.createNewTokenInsertsCorrectData()
Métodos invocados: 
org.springframework.security.ui.rememberme.JdbcTokenRepositoryImpl.createNewToken(org.springframework.security.ui.rememberme.PersistentRememberMeToken)
org.springframework.jdbc.core.JdbcTemplate.queryForMap(java.lang.String)
java.util.Map.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2485 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImplTests.retrievingTokenReturnsCorrectData()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.ui.rememberme.JdbcTokenRepositoryImpl.getTokenForSeries(java.lang.String)
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getUsername()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getSeries()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getTokenValue()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.sql.Timestamp.valueOf(java.lang.String)
org.springframework.security.ui.rememberme.PersistentRememberMeToken.getDate()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2486 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImplTests.retrievingTokenWithDuplicateSeriesReturnsNull()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.ui.rememberme.JdbcTokenRepositoryImpl.getTokenForSeries(java.lang.String)
org.junit.Assert.assertNull(java.lang.Object)
2487 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImplTests.removingUserTokensDeletesData()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.ui.rememberme.JdbcTokenRepositoryImpl.removeUserTokens(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
2488 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImplTests.updatingTokenModifiesTokenValueAndLastUsed()
Métodos invocados: 
java.lang.System.currentTimeMillis()
java.sql.Timestamp.toString()
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.ui.rememberme.JdbcTokenRepositoryImpl.updateToken(java.lang.String, java.lang.String, java.util.Date)
org.springframework.jdbc.core.JdbcTemplate.queryForMap(java.lang.String)
java.util.Map.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Date.getTime()
java.sql.Timestamp.getTime()
org.junit.Assert.assertTrue(Z)
2489 - Declaração do método: org.springframework.security.ui.rememberme.JdbcTokenRepositoryImplTests.createTableOnStartupCreatesCorrectTable()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.support.JdbcDaoSupport.setDataSource(javax.sql.DataSource)
org.springframework.security.ui.rememberme.JdbcTokenRepositoryImpl.setCreateTableOnStartup(Z)
org.springframework.security.ui.rememberme.JdbcTokenRepositoryImpl.initDao()
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
2490 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests.RememberMeProcessingFilterTests()
2490 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests.RememberMeProcessingFilterTests(java.lang.String)
2490 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.Filter.init(javax.servlet.FilterConfig)
javax.servlet.Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
javax.servlet.Filter.destroy()
2491 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
2492 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
2493 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests.testDetectsAuthenticationManagerProperty()
Métodos invocados: 
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.setRememberMeServices(org.springframework.security.ui.rememberme.RememberMeServices)
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.afterPropertiesSet()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2494 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests.testDetectsRememberMeServicesProperty()
Métodos invocados: 
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.setRememberMeServices(org.springframework.security.ui.rememberme.RememberMeServices)
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.getRememberMeServices()
java.lang.Object.getClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.setRememberMeServices(org.springframework.security.ui.rememberme.RememberMeServices)
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2495 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests.testOperationWhenAuthenticationExistsInContextHolder()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.setRememberMeServices(org.springframework.security.ui.rememberme.RememberMeServices)
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2496 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests.testOperationWhenNoAuthenticationInContextHolder()
Métodos invocados: 
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.setRememberMeServices(org.springframework.security.ui.rememberme.RememberMeServices)
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2497 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests.testOnunsuccessfulLoginIsCalledWhenProviderRejectsAuth()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.setRememberMeServices(org.springframework.security.ui.rememberme.RememberMeServices)
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)
org.springframework.security.ui.rememberme.RememberMeProcessingFilter.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2498 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests$1.onUnsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
2499 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests$MockFilterChain.MockFilterChain(Z)
2499 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests$MockFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
Métodos invocados: 
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
2500 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests$MockRememberMeServices.MockRememberMeServices(org.springframework.security.Authentication)
2500 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests$MockRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2500 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests$MockRememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
2500 - Declaração do método: org.springframework.security.ui.rememberme.RememberMeProcessingFilterTests$MockRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
2500 - Declaração do método: org.springframework.security.ui.rememberme.NullRememberMeServicesTests.NullRememberMeServicesTests()
2500 - Declaração do método: org.springframework.security.ui.rememberme.NullRememberMeServicesTests.NullRememberMeServicesTests(java.lang.String)
2500 - Declaração do método: org.springframework.security.ui.rememberme.NullRememberMeServicesTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2501 - Declaração do método: org.springframework.security.ui.rememberme.NullRememberMeServicesTests.testAlwaysReturnsNull()
Métodos invocados: 
org.springframework.security.ui.rememberme.NullRememberMeServices.autoLogin(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.ui.rememberme.NullRememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.ui.rememberme.NullRememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.Authentication)
junit.framework.Assert.assertTrue(Z)
2502 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookieTests.setUp()
Métodos invocados: 
javax.servlet.http.Cookie.setComment(java.lang.String)
javax.servlet.http.Cookie.setDomain(java.lang.String)
javax.servlet.http.Cookie.setMaxAge(I)
javax.servlet.http.Cookie.setPath(java.lang.String)
javax.servlet.http.Cookie.setSecure(Z)
javax.servlet.http.Cookie.setVersion(I)
2503 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookieTests.testGetName()
Métodos invocados: 
javax.servlet.http.Cookie.getName()
org.springframework.security.ui.savedrequest.SavedCookie.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2504 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookieTests.testGetValue()
Métodos invocados: 
javax.servlet.http.Cookie.getValue()
org.springframework.security.ui.savedrequest.SavedCookie.getValue()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2505 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookieTests.testGetComment()
Métodos invocados: 
javax.servlet.http.Cookie.getComment()
org.springframework.security.ui.savedrequest.SavedCookie.getComment()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2506 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookieTests.testGetDomain()
Métodos invocados: 
javax.servlet.http.Cookie.getDomain()
org.springframework.security.ui.savedrequest.SavedCookie.getDomain()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2507 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookieTests.testGetMaxAge()
Métodos invocados: 
javax.servlet.http.Cookie.getMaxAge()
org.springframework.security.ui.savedrequest.SavedCookie.getMaxAge()
junit.framework.Assert.assertEquals(I, I)
2508 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookieTests.testGetPath()
Métodos invocados: 
javax.servlet.http.Cookie.getPath()
org.springframework.security.ui.savedrequest.SavedCookie.getPath()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2509 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookieTests.testGetVersion()
Métodos invocados: 
javax.servlet.http.Cookie.getVersion()
org.springframework.security.ui.savedrequest.SavedCookie.getVersion()
junit.framework.Assert.assertEquals(I, I)
2510 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookieTests.testGetCookie()
Métodos invocados: 
org.springframework.security.ui.savedrequest.SavedCookie.getCookie()
javax.servlet.http.Cookie.getComment()
javax.servlet.http.Cookie.getComment()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
javax.servlet.http.Cookie.getDomain()
javax.servlet.http.Cookie.getDomain()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
javax.servlet.http.Cookie.getMaxAge()
javax.servlet.http.Cookie.getMaxAge()
junit.framework.Assert.assertEquals(I, I)
javax.servlet.http.Cookie.getName()
javax.servlet.http.Cookie.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
javax.servlet.http.Cookie.getPath()
javax.servlet.http.Cookie.getPath()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
javax.servlet.http.Cookie.getSecure()
javax.servlet.http.Cookie.getSecure()
junit.framework.Assert.assertEquals(Z, Z)
javax.servlet.http.Cookie.getValue()
javax.servlet.http.Cookie.getValue()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
javax.servlet.http.Cookie.getVersion()
javax.servlet.http.Cookie.getVersion()
junit.framework.Assert.assertEquals(I, I)
2511 - Declaração do método: org.springframework.security.ui.savedrequest.SavedCookieTests.testSerializable()
Métodos invocados: 
junit.framework.Assert.assertTrue(Z)
2512 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequestTests.testCaseInsensitveHeaders()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.ui.savedrequest.SavedRequest.getHeaderValues(java.lang.String)
java.util.Iterator.next()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2513 - Declaração do método: org.springframework.security.ui.savedrequest.SavedRequestTests.testCaseInsensitveParameters()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.savedrequest.SavedRequest.getParameterValues(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2514 - Declaração do método: org.springframework.security.ui.session.TestListener.getCreatedEvent()
2514 - Declaração do método: org.springframework.security.ui.session.TestListener.getDestroyedEvent()
2514 - Declaração do método: org.springframework.security.ui.session.TestListener.onApplicationEvent(org.springframework.context.ApplicationEvent)
2514 - Declaração do método: org.springframework.security.ui.session.TestListener.setCreatedEvent(org.springframework.security.ui.session.HttpSessionCreatedEvent)
2514 - Declaração do método: org.springframework.security.ui.session.TestListener.setDestroyedEvent(org.springframework.security.ui.session.HttpSessionDestroyedEvent)
2514 - Declaração do método: org.springframework.security.ui.session.HttpSessionEventPublisherTests.testPublisher()
Métodos invocados: 
org.springframework.mock.web.MockServletContext.setAttribute(java.lang.String, java.lang.Object)
org.springframework.web.context.support.StaticWebApplicationContext.setServletContext(javax.servlet.ServletContext)
org.springframework.context.support.StaticApplicationContext.registerSingleton(java.lang.String, java.lang.Class, org.springframework.beans.MutablePropertyValues)
org.springframework.context.support.AbstractApplicationContext.refresh()
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
org.springframework.security.ui.session.HttpSessionEventPublisher.sessionCreated(javax.servlet.http.HttpSessionEvent)
org.springframework.security.ui.session.TestListener.getCreatedEvent()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.ui.session.TestListener.getDestroyedEvent()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.ui.session.TestListener.getCreatedEvent()
org.springframework.security.ui.session.HttpSessionApplicationEvent.getSession()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ui.session.TestListener.setCreatedEvent(org.springframework.security.ui.session.HttpSessionCreatedEvent)
org.springframework.security.ui.session.TestListener.setDestroyedEvent(org.springframework.security.ui.session.HttpSessionDestroyedEvent)
org.springframework.security.ui.session.HttpSessionEventPublisher.sessionDestroyed(javax.servlet.http.HttpSessionEvent)
org.springframework.security.ui.session.TestListener.getDestroyedEvent()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.ui.session.TestListener.getCreatedEvent()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.ui.session.TestListener.getDestroyedEvent()
org.springframework.security.ui.session.HttpSessionApplicationEvent.getSession()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2515 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.SwitchUserProcessingFilterTests()
2515 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.SwitchUserProcessingFilterTests(java.lang.String)
2515 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
2516 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.createMockSwitchRequest()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
2517 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.testAttemptSwitchToUnknownUser()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.attemptSwitchUser(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.fail(java.lang.String)
2518 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.testAttemptSwitchToUserThatIsDisabled()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.attemptSwitchUser(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.fail(java.lang.String)
2519 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.testAttemptSwitchToUserWithAccountExpired()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.attemptSwitchUser(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.fail(java.lang.String)
2520 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.testAttemptSwitchToUserWithExpiredCredentials()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.attemptSwitchUser(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.fail(java.lang.String)
2521 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.testAttemptSwitchUser()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.attemptSwitchUser(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertTrue(Z)
2522 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.testSwitchToLockedAccountCausesRedirectToSwitchFailureUrl()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.createMockSwitchRequest()
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.doFilterHttp(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getContentAsString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setSwitchFailureUrl(java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.doFilterHttp(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2523 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.testIfSwitchUserWithNullUsernameThrowsException()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.attemptSwitchUser(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertFalse(Z)
2524 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.testBadConfigMissingAuthenticationDao()
Métodos invocados: 
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setSwitchUserUrl(java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setExitUserUrl(java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setTargetUrl(java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
2525 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.testBadConfigMissingTargetUrl()
Métodos invocados: 
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setSwitchUserUrl(java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setExitUserUrl(java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
2526 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.testDefaultProcessesFilterUrlWithPathParameter()
Métodos invocados: 
org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.createMockSwitchRequest()
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setSwitchUserUrl(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.requiresSwitchUser(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertTrue(Z)
2527 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.testExitRequestUserJackLordToDano()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.createMockSwitchRequest()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setExitUserUrl(java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setTargetUrl(java.lang.String)
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2528 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.testExitUserWithNoCurrentUser()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.createMockSwitchRequest()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setExitUserUrl(java.lang.String)
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.fail(java.lang.String)
2529 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.testRedirectToTargetUrl()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.createMockSwitchRequest()
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setSwitchUserUrl(java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setTargetUrl(java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2530 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.testRedirectOmitsContextPathIfUseRelativeContextSet()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.createMockSwitchRequest()
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setSwitchUserUrl(java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setTargetUrl(java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setUseRelativeContext(Z)
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2531 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.testRequiresExitUser()
Métodos invocados: 
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setExitUserUrl(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.requiresExitUser(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertTrue(Z)
2532 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.testRequiresSwitch()
Métodos invocados: 
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setSwitchUserUrl(java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.createMockSwitchRequest()
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.requiresSwitchUser(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertTrue(Z)
2533 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.testSwitchRequestFromDanoToJackLord()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setSwitchUserUrl(java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setTargetUrl(java.lang.String)
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.userdetails.User.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2534 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests.testModificationOfAuthoritiesWorks()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.setSwitchUserAuthorityChanger(org.springframework.security.ui.switchuser.SwitchUserAuthorityChanger)
java.util.List.add(java.lang.Object)
org.springframework.security.ui.switchuser.SwitchUserProcessingFilter.attemptSwitchUser(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.Authentication.getAuthorities()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2535 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests$1.modifyGrantedAuthorities(org.springframework.security.userdetails.UserDetails, org.springframework.security.Authentication, java.util.List)
Métodos invocados: 
java.util.List.add(java.lang.Object)
2536 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests$MockAuthenticationDaoUserJackLord.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
2537 - Declaração do método: org.springframework.security.ui.switchuser.SwitchUserProcessingFilterTests$MockAuthenticationDaoUserJackLord.setPassword(java.lang.String)
2537 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterTests.AuthenticationProcessingFilterTests()
2537 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterTests.AuthenticationProcessingFilterTests(java.lang.String)
2537 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterTests.testGetters()
Métodos invocados: 
org.springframework.security.ui.webapp.AuthenticationProcessingFilter.getDefaultFilterProcessesUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2538 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterTests.testNormalOperation()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.SpringSecurityFilter.init(javax.servlet.FilterConfig)
org.springframework.security.ui.webapp.AuthenticationProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertTrue(Z)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.Authentication.getDetails()
org.springframework.security.ui.WebAuthenticationDetails.getRemoteAddress()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2539 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterTests.testNullPasswordHandledGracefully()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.webapp.AuthenticationProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertTrue(Z)
2540 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterTests.testNullUsernameHandledGracefully()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.webapp.AuthenticationProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertTrue(Z)
2541 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterTests.testUsingDifferentParameterNamesWorksAsExpected()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.webapp.AuthenticationProcessingFilter.setUsernameParameter(java.lang.String)
org.springframework.security.ui.webapp.AuthenticationProcessingFilter.setPasswordParameter(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.webapp.AuthenticationProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.Authentication.getDetails()
org.springframework.security.ui.WebAuthenticationDetails.getRemoteAddress()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2542 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterTests.testSpacesAreTrimmedCorrectlyFromUsername()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.webapp.AuthenticationProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
java.security.Principal.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2543 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterTests.testFailedAuthenticationThrowsException()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.webapp.AuthenticationProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.fail(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2544 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterTests.testNoSessionIsCreatedIfAllowSessionCreationIsFalse()
Métodos invocados: 
org.springframework.security.ui.AbstractProcessingFilter.setAllowSessionCreation(Z)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.webapp.AuthenticationProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
org.springframework.mock.web.MockHttpServletRequest.getSession(Z)
junit.framework.Assert.assertNull(java.lang.Object)
2545 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPointTests.testDetectsMissingLoginFormUrl()
Métodos invocados: 
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2546 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPointTests.testDetectsMissingPortMapper()
Métodos invocados: 
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2547 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPointTests.testDetectsMissingPortResolver()
Métodos invocados: 
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2548 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPointTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.getLoginFormUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.getPortMapper()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.getPortResolver()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setForceHttps(Z)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.isForceHttps()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setForceHttps(Z)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.isForceHttps()
junit.framework.Assert.assertTrue(Z)
2549 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPointTests.testHttpsOperationFromOriginalHttpUrl()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setForceHttps(Z)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.afterPropertiesSet()
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.security.util.PortMapperImpl.setPortMappings(java.util.Map)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setForceHttps(Z)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.afterPropertiesSet()
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2550 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPointTests.testHttpsOperationFromOriginalHttpsUrl()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setForceHttps(Z)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.afterPropertiesSet()
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2551 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPointTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2552 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPointTests.testOperationWhenHttpsRequestsButHttpsPortUnknown()
Métodos invocados: 
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setPortResolver(org.springframework.security.util.PortResolver)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setForceHttps(Z)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2553 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPointTests.testServerSideRedirectWithoutForceHttpsForwardsToLoginPage()
Métodos invocados: 
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setServerSideRedirect(Z)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getForwardedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2554 - Declaração do método: org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPointTests.testServerSideRedirectWithForceHttpsRedirectsCurrentRequest()
Métodos invocados: 
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setLoginFormUrl(java.lang.String)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setServerSideRedirect(Z)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.setForceHttps(Z)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.afterPropertiesSet()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerName(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setContextPath(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getRedirectedUrl()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2555 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilterTests.SiteminderAuthenticationProcessingFilterTests()
2555 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilterTests.SiteminderAuthenticationProcessingFilterTests(java.lang.String)
2555 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilterTests.testAccessors()
Métodos invocados: 
org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.setFormUsernameParameterKey(java.lang.String)
org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.getFormUsernameParameterKey()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.setSiteminderUsernameHeaderKey(java.lang.String)
org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.getSiteminderUsernameHeaderKey()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2556 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilterTests.testFormNormalOperation()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.SpringSecurityFilter.init(javax.servlet.FilterConfig)
org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.Authentication.getDetails()
org.springframework.security.ui.WebAuthenticationDetails.getRemoteAddress()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2557 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilterTests.testFormNullPasswordHandledGracefully()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.SpringSecurityFilter.init(javax.servlet.FilterConfig)
org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertTrue(Z)
2558 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilterTests.testFormNullUsernameHandledGracefully()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addParameter(java.lang.String, java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.SpringSecurityFilter.init(javax.servlet.FilterConfig)
org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertTrue(Z)
2559 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilterTests.testRequiresAuthentication()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.ui.AbstractProcessingFilter.setDefaultTargetUrl(java.lang.String)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.setSiteminderUsernameHeaderKey(java.lang.String)
org.springframework.security.ui.SpringSecurityFilter.init(javax.servlet.FilterConfig)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.requiresAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertFalse(Z)
org.springframework.mock.web.MockHttpServletRequest.getContextPath()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.requiresAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertTrue(Z)
org.springframework.mock.web.MockHttpServletRequest.getContextPath()
org.springframework.security.ui.AbstractProcessingFilter.getDefaultTargetUrl()
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.requiresAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
junit.framework.Assert.assertTrue(Z)
2560 - Declaração do método: org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilterTests.testSiteminderNormalOperation()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.addHeader(java.lang.String, java.lang.Object)
org.springframework.security.ui.AbstractProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.setSiteminderUsernameHeaderKey(java.lang.String)
org.springframework.security.ui.SpringSecurityFilter.init(javax.servlet.FilterConfig)
org.springframework.security.ui.webapp.SiteminderAuthenticationProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.Authentication.getDetails()
org.springframework.security.ui.WebAuthenticationDetails.getRemoteAddress()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2561 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilterTests.X509ProcessingFilterTests()
2561 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilterTests.X509ProcessingFilterTests(java.lang.String)
2561 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilterTests.setUp()
2561 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilterTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
2562 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilterTests.testAuthenticationIsNullWithNoCertificate()
Métodos invocados: 
org.springframework.security.ui.x509.X509ProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.x509.X509ProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.mock.web.MockHttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
2563 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilterTests.testDoFilterWithNonHttpServletRequestDetected()
Métodos invocados: 
org.springframework.security.ui.x509.X509ProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2564 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilterTests.testDoFilterWithNonHttpServletResponseDetected()
Métodos invocados: 
org.springframework.security.ui.x509.X509ProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2565 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilterTests.testFailedAuthentication()
Métodos invocados: 
org.springframework.security.providers.x509.X509TestUtils.buildTestCertificate()
org.springframework.mock.web.MockHttpServletRequest.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.x509.X509ProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.x509.X509ProcessingFilter.afterPropertiesSet()
org.springframework.security.ui.x509.X509ProcessingFilter.init(javax.servlet.FilterConfig)
org.springframework.security.ui.x509.X509ProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.ui.x509.X509ProcessingFilter.destroy()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
2566 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilterTests.testNeedsAuthenticationManager()
Métodos invocados: 
org.springframework.security.ui.x509.X509ProcessingFilter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
2567 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilterTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.providers.x509.X509TestUtils.buildTestCertificate()
org.springframework.mock.web.MockHttpServletRequest.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.x509.X509ProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.x509.X509ProcessingFilter.afterPropertiesSet()
org.springframework.security.ui.x509.X509ProcessingFilter.init(javax.servlet.FilterConfig)
org.springframework.security.ui.x509.X509ProcessingFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.ui.x509.X509ProcessingFilter.destroy()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNotNull(java.lang.Object)
2568 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilterTests$MockX509AuthenticationManager.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.Authentication.getCredentials()
2569 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilterEntryPointTests.X509ProcessingFilterEntryPointTests()
2569 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilterEntryPointTests.X509ProcessingFilterEntryPointTests(java.lang.String)
2569 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilterEntryPointTests.setUp()
2569 - Declaração do método: org.springframework.security.ui.x509.X509ProcessingFilterEntryPointTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.ui.x509.X509ProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
org.springframework.mock.web.MockHttpServletResponse.getStatus()
junit.framework.Assert.assertEquals(I, I)
2570 - Declaração do método: org.springframework.security.userdetails.MockUserDetailsService.MockUserDetailsService()
Métodos invocados: 
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
2571 - Declaração do método: org.springframework.security.userdetails.MockUserDetailsService.loadUserByUsername(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
2572 - Declaração do método: org.springframework.security.userdetails.UserTests.UserTests()
2572 - Declaração do método: org.springframework.security.userdetails.UserTests.UserTests(java.lang.String)
2572 - Declaração do método: org.springframework.security.userdetails.UserTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2573 - Declaração do método: org.springframework.security.userdetails.UserTests.setUp()
2573 - Declaração do método: org.springframework.security.userdetails.UserTests.testEquals()
Métodos invocados: 
org.springframework.security.userdetails.User.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.userdetails.User.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.userdetails.User.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.User.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.User.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.User.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.userdetails.User.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.userdetails.User.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.userdetails.User.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.userdetails.User.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.userdetails.User.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.userdetails.User.equals(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
2574 - Declaração do método: org.springframework.security.userdetails.UserTests.testNoArgConstructorDoesntExist()
Métodos invocados: 
java.lang.Class.getDeclaredConstructor([Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2575 - Declaração do método: org.springframework.security.userdetails.UserTests.testNullValuesRejected()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2576 - Declaração do método: org.springframework.security.userdetails.UserTests.testNullWithinGrantedAuthorityElementIsRejected()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2577 - Declaração do método: org.springframework.security.userdetails.UserTests.testUserGettersSetter()
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.UserDetails.isEnabled()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.UserDetails.getAuthorities()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.userdetails.UserDetails.getAuthorities()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Object.toString()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2578 - Declaração do método: org.springframework.security.userdetails.UserTests.testUserIsEnabled()
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.isEnabled()
junit.framework.Assert.assertTrue(Z)
2579 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImplTests.RoleHierarchyImplTests()
2579 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImplTests.RoleHierarchyImplTests(java.lang.String)
2579 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImplTests.testSimpleRoleHierarchy()
Métodos invocados: 
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertTrue(Z)
2580 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImplTests.testTransitiveRoleHierarchies()
Métodos invocados: 
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertTrue(Z)
2581 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImplTests.testComplexRoleHierarchy()
Métodos invocados: 
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.getReachableGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertTrue(Z)
2582 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImplTests.testCyclesInRoleHierarchy()
Métodos invocados: 
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
2583 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImplTests.testNoCyclesInRoleHierarchy()
Métodos invocados: 
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
2584 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsServiceWrapperTests.UserDetailsServiceWrapperTests()
2584 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsServiceWrapperTests.UserDetailsServiceWrapperTests(java.lang.String)
2584 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsServiceWrapperTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2585 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsServiceWrapperTests.setUp()
Métodos invocados: 
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
org.jmock.MockObjectTestCase.mock(java.lang.Class)
org.jmock.Mock.stubs()
org.jmock.builder.NameMatchBuilder.method(java.lang.String)
org.jmock.core.MockObjectSupportTestCase.eq(java.lang.Object)
org.jmock.builder.ArgumentsMatchBuilder.with(org.jmock.core.Constraint)
org.jmock.MockObjectTestCase.returnValue(java.lang.Object)
org.jmock.builder.StubBuilder.will(org.jmock.core.Stub)
org.jmock.Mock.stubs()
org.jmock.builder.NameMatchBuilder.method(java.lang.String)
org.jmock.core.MockObjectSupportTestCase.eq(java.lang.Object)
org.jmock.builder.ArgumentsMatchBuilder.with(org.jmock.core.Constraint)
org.jmock.MockObjectTestCase.throwException(java.lang.Throwable)
org.jmock.builder.StubBuilder.will(org.jmock.core.Stub)
org.jmock.Mock.stubs()
org.jmock.builder.NameMatchBuilder.method(java.lang.String)
org.jmock.core.MockObjectSupportTestCase.eq(java.lang.Object)
org.jmock.builder.ArgumentsMatchBuilder.with(org.jmock.core.Constraint)
org.jmock.MockObjectTestCase.throwException(java.lang.Throwable)
org.jmock.builder.StubBuilder.will(org.jmock.core.Stub)
org.jmock.Mock.proxy()
org.springframework.security.userdetails.hierarchicalroles.UserDetailsServiceWrapper.setRoleHierarchy(org.springframework.security.userdetails.hierarchicalroles.RoleHierarchy)
org.springframework.security.userdetails.hierarchicalroles.UserDetailsServiceWrapper.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
2586 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsServiceWrapperTests.testLoadUserByUsername()
Métodos invocados: 
org.springframework.security.userdetails.hierarchicalroles.UserDetailsServiceWrapper.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
org.springframework.security.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.UserDetails.isAccountNonExpired()
org.springframework.security.userdetails.UserDetails.isAccountNonExpired()
junit.framework.Assert.assertEquals(Z, Z)
org.springframework.security.userdetails.UserDetails.isAccountNonLocked()
org.springframework.security.userdetails.UserDetails.isAccountNonLocked()
junit.framework.Assert.assertEquals(Z, Z)
org.springframework.security.userdetails.UserDetails.isCredentialsNonExpired()
org.springframework.security.userdetails.UserDetails.isCredentialsNonExpired()
junit.framework.Assert.assertEquals(Z, Z)
org.springframework.security.userdetails.UserDetails.isEnabled()
org.springframework.security.userdetails.UserDetails.isEnabled()
junit.framework.Assert.assertEquals(Z, Z)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.hierarchicalroles.UserDetailsServiceWrapper.loadUserByUsername(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.userdetails.hierarchicalroles.UserDetailsServiceWrapper.loadUserByUsername(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
2587 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsServiceWrapperTests.testGetWrappedUserDetailsService()
Métodos invocados: 
org.springframework.security.userdetails.hierarchicalroles.UserDetailsServiceWrapper.getWrappedUserDetailsService()
junit.framework.Assert.assertTrue(Z)
2588 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapperTests.UserDetailsWrapperTests()
2588 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapperTests.UserDetailsWrapperTests(java.lang.String)
2588 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapperTests.setUp()
Métodos invocados: 
org.springframework.security.userdetails.hierarchicalroles.RoleHierarchyImpl.setHierarchy(java.lang.String)
2589 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapperTests.testIsAccountNonExpired()
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.isAccountNonExpired()
org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.isAccountNonExpired()
junit.framework.Assert.assertEquals(Z, Z)
org.springframework.security.userdetails.UserDetails.isAccountNonExpired()
org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.isAccountNonExpired()
junit.framework.Assert.assertEquals(Z, Z)
2590 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapperTests.testIsAccountNonLocked()
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.isAccountNonLocked()
org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.isAccountNonLocked()
junit.framework.Assert.assertEquals(Z, Z)
org.springframework.security.userdetails.UserDetails.isAccountNonLocked()
org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.isAccountNonLocked()
junit.framework.Assert.assertEquals(Z, Z)
2591 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapperTests.testGetAuthorities()
Métodos invocados: 
org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.getAuthorities()
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.getAuthorities()
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertTrue(Z)
2592 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapperTests.testIsCredentialsNonExpired()
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.isCredentialsNonExpired()
org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.isCredentialsNonExpired()
junit.framework.Assert.assertEquals(Z, Z)
org.springframework.security.userdetails.UserDetails.isCredentialsNonExpired()
org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.isCredentialsNonExpired()
junit.framework.Assert.assertEquals(Z, Z)
2593 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapperTests.testIsEnabled()
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.isEnabled()
org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.isEnabled()
junit.framework.Assert.assertEquals(Z, Z)
org.springframework.security.userdetails.UserDetails.isEnabled()
org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.isEnabled()
junit.framework.Assert.assertEquals(Z, Z)
2594 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapperTests.testGetPassword()
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.getPassword()
org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2595 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapperTests.testGetUsername()
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2596 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapperTests.testGetUnwrappedUserDetails()
Métodos invocados: 
org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.getUnwrappedUserDetails()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.hierarchicalroles.UserDetailsWrapper.getUnwrappedUserDetails()
junit.framework.Assert.assertTrue(Z)
2597 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.TestHelperTests.TestHelperTests()
2597 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.TestHelperTests.TestHelperTests(java.lang.String)
2597 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.TestHelperTests.testContainTheSameGrantedAuthorities()
Métodos invocados: 
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
junit.framework.Assert.assertFalse(Z)
2598 - Declaração do método: org.springframework.security.userdetails.hierarchicalroles.HierarchicalRolesTestHelper.containTheSameGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;, [Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
org.apache.commons.collections.CollectionUtils.addAll(java.util.Collection, [Ljava.lang.Object;)
org.apache.commons.collections.CollectionUtils.addAll(java.util.Collection, [Ljava.lang.Object;)
org.apache.commons.collections.CollectionUtils.isEqualCollection(java.util.Collection, java.util.Collection)
2599 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.createDataSource()
2599 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.clearDataSource()
Métodos invocados: 
org.springframework.security.TestDataSource.destroy()
2600 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.initializeManagerAndCreateTables()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setUserCache(org.springframework.security.providers.dao.UserCache)
org.springframework.jdbc.core.support.JdbcDaoSupport.setDataSource(javax.sql.DataSource)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setCreateUserSql(java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setUpdateUserSql(java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setUserExistsSql(java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setCreateAuthoritySql(java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setDeleteUserAuthoritiesSql(java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setDeleteUserSql(java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setChangePasswordSql(java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.initDao()
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.PopulatedDatabase.createGroupTables(org.springframework.jdbc.core.JdbcTemplate)
org.springframework.security.PopulatedDatabase.insertGroupData(org.springframework.jdbc.core.JdbcTemplate)
2601 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.dropTablesAndClearContext()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.context.SecurityContextHolder.clearContext()
2602 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.createUserInsertsCorrectData()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.createUser(org.springframework.security.userdetails.UserDetails)
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2603 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.deleteUserRemovesUserDataAndAuthoritiesAndClearsCache()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.insertJoe()
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.deleteUser(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests$MockUserCache.getUserMap()
java.util.Map.containsKey(java.lang.Object)
org.junit.Assert.assertFalse(Z)
2604 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.updateUserChangesDataCorrectlyAndClearsCache()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.insertJoe()
org.springframework.security.util.AuthorityUtils.stringArrayToAuthorityArray([Ljava.lang.String;)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.updateUser(org.springframework.security.userdetails.UserDetails)
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests$MockUserCache.getUserMap()
java.util.Map.containsKey(java.lang.Object)
org.junit.Assert.assertFalse(Z)
2605 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.userExistsReturnsFalseForNonExistentUsername()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.userExists(java.lang.String)
org.junit.Assert.assertFalse(Z)
2606 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.userExistsReturnsTrueForExistingUsername()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.insertJoe()
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.userExists(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests$MockUserCache.getUserMap()
java.util.Map.containsKey(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2607 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.changePasswordFailsForUnauthenticatedUser()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.changePassword(java.lang.String, java.lang.String)
2608 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.changePasswordSucceedsWithAuthenticatedUserAndNoAuthenticationManagerSet()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.insertJoe()
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.authenticateJoe()
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.changePassword(java.lang.String, java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests$MockUserCache.getUserMap()
java.util.Map.containsKey(java.lang.Object)
org.junit.Assert.assertFalse(Z)
2609 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.changePasswordSucceedsWithIfReAuthenticationSucceeds()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.insertJoe()
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.authenticateJoe()
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.changePassword(java.lang.String, java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
java.security.Principal.getName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.Authentication.getDetails()
org.springframework.security.Authentication.getDetails()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.Authentication.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests$MockUserCache.getUserMap()
java.util.Map.containsKey(java.lang.Object)
org.junit.Assert.assertFalse(Z)
2610 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.changePasswordFailsIfReAuthenticationFails()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.insertJoe()
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.authenticateJoe()
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.changePassword(java.lang.String, java.lang.String)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.Authentication.getCredentials()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests$MockUserCache.getUserMap()
java.util.Map.containsKey(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2611 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.findAllGroupsReturnsExpectedGroupNames()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.findAllGroups()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.Collections.sort(java.util.List)
java.util.List.get(I)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.List.get(I)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.List.get(I)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.List.get(I)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2612 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.findGroupMembersReturnsCorrectData()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.findUsersInGroup(java.lang.String)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.findUsersInGroup(java.lang.String)
org.junit.Assert.assertEquals(J, J)
2613 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.createGroupInsertsCorrectData()
Métodos invocados: 
org.springframework.security.util.AuthorityUtils.stringArrayToAuthorityArray([Ljava.lang.String;)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.createGroup(java.lang.String, [Lorg.springframework.security.GrantedAuthority;)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
2614 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.deleteGroupRemovesData()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.deleteGroup(java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.deleteGroup(java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.deleteGroup(java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.deleteGroup(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
2615 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.renameGroupIsSuccessful()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.renameGroup(java.lang.String, java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.queryForInt(java.lang.String)
org.junit.Assert.assertEquals(J, J)
2616 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.addingGroupUserSetsCorrectData()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.addUserToGroup(java.lang.String, java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
2617 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.removeUserFromGroupDeletesGroupMemberRow()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.removeUserFromGroup(java.lang.String, java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
2618 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.findGroupAuthoritiesReturnsCorrectAuthorities()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.findGroupAuthorities(java.lang.String)
org.springframework.security.GrantedAuthority.getAuthority()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2619 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.addGroupAuthorityInsertsCorrectGroupAuthorityRow()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.addGroupAuthority(java.lang.String, org.springframework.security.GrantedAuthority)
org.springframework.jdbc.core.JdbcTemplate.queryForObject(java.lang.String, java.lang.Class)
2620 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.deleteGroupAuthorityRemovesCorrectRows()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.removeGroupAuthority(java.lang.String, org.springframework.security.GrantedAuthority)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManager.removeGroupAuthority(java.lang.String, org.springframework.security.GrantedAuthority)
org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
2621 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.authenticateJoe()
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
2622 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests.insertJoe()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests$MockUserCache.putUserInCache(org.springframework.security.userdetails.UserDetails)
2623 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests$MockUserCache.getUserFromCache(java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
2624 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests$MockUserCache.putUserInCache(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.getUsername()
java.util.Map.put(java.lang.String, org.springframework.security.userdetails.UserDetails)
2625 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests$MockUserCache.removeUserFromCache(java.lang.String)
Métodos invocados: 
java.util.Map.remove(java.lang.Object)
2626 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcUserDetailsManagerTests$MockUserCache.getUserMap()
2626 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.JdbcDaoImplTests()
2626 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.JdbcDaoImplTests(java.lang.String)
2626 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
Métodos invocados: 
org.springframework.security.PopulatedDatabase.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.setDataSource(javax.sql.DataSource)
org.springframework.dao.support.DaoSupport.afterPropertiesSet()
2627 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDaoWithRolePrefix()
Métodos invocados: 
org.springframework.security.PopulatedDatabase.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.setDataSource(javax.sql.DataSource)
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.setRolePrefix(java.lang.String)
org.springframework.dao.support.DaoSupport.afterPropertiesSet()
2628 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.testCheckDaoAccessUserSuccess()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.UserDetails.isEnabled()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
java.util.HashSet.add(java.lang.Object)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
java.util.HashSet.add(java.lang.Object)
java.util.HashSet.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.HashSet.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
2629 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.testCheckDaoOnlyReturnsGrantedAuthoritiesGrantedToUser()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.UserDetails.getAuthorities()
junit.framework.Assert.assertEquals(I, I)
2630 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.testCheckDaoReturnsCorrectDisabledProperty()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.isEnabled()
junit.framework.Assert.assertTrue(Z)
2631 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.setAuthoritiesByUsernameQuery(java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.getAuthoritiesByUsernameQuery()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.setUsersByUsernameQuery(java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.getUsersByUsernameQuery()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2632 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.testLookupFailsIfUserHasNoGrantedAuthorities()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.springframework.core.NestedRuntimeException.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2633 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.testLookupFailsWithWrongUsername()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2634 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.testLookupSuccessWithMixedCase()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2635 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.testRolePrefixWorks()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDaoWithRolePrefix()
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.getRolePrefix()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.UserDetails.getAuthorities()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
java.util.HashSet.add(java.lang.Object)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
java.util.HashSet.add(java.lang.Object)
java.util.HashSet.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.HashSet.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
2636 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.testGroupAuthoritiesAreLoadedCorrectly()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.setEnableAuthorities(Z)
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.setEnableGroups(Z)
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getAuthorities()
junit.framework.Assert.assertEquals(I, I)
2637 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.testDuplicateGroupAuthoritiesAreRemoved()
Métodos invocados: 
org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.makePopulatedJdbcDao()
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.setEnableAuthorities(Z)
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.setEnableGroups(Z)
org.springframework.security.userdetails.jdbc.JdbcDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getAuthorities()
junit.framework.Assert.assertEquals(I, I)
2638 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.testStartupFailsIfDataSourceNotSet()
Métodos invocados: 
org.springframework.dao.support.DaoSupport.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2639 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImplTests.testStartupFailsIfUserMapSetToNull()
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.setDataSource(javax.sql.DataSource)
org.springframework.dao.support.DaoSupport.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2640 - Declaração do método: org.springframework.security.userdetails.jdbc.JdbcDaoImplTests$MockMappingSqlQuery.mapRow(java.sql.ResultSet, I)
2640 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManagerTests.onSetUp()
Métodos invocados: 
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
org.springframework.security.ldap.AbstractLdapIntegrationTests.getContextSource()
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.LdapTemplate.bind(java.lang.String, java.lang.Object, javax.naming.directory.Attributes)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.LdapTemplate.bind(java.lang.String, java.lang.Object, javax.naming.directory.Attributes)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.LdapTemplate.bind(java.lang.String, java.lang.Object, javax.naming.directory.Attributes)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.LdapTemplate.bind(java.lang.String, java.lang.Object, javax.naming.directory.Attributes)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.setUsernameMapper(org.springframework.security.ldap.LdapUsernameToDnMapper)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.setGroupSearchBase(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.setGroupRoleAttributeName(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.setGroupMemberAttributeName(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.setUserDetailsMapper(org.springframework.security.userdetails.ldap.UserDetailsContextMapper)
2641 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManagerTests.onTearDown()
Métodos invocados: 
org.springframework.ldap.core.LdapTemplate.unbind(java.lang.String, Z)
org.springframework.ldap.core.LdapTemplate.unbind(java.lang.String, Z)
org.springframework.security.context.SecurityContextHolder.clearContext()
2642 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManagerTests.testLoadUserByUsernameReturnsCorrectData()
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.setUsernameMapper(org.springframework.security.ldap.LdapUsernameToDnMapper)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.setGroupSearchBase(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getUsername()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.userdetails.ldap.LdapUserDetails.getDn()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.userdetails.UserDetails.getPassword()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.junit.Assert.assertEquals(J, J)
2643 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManagerTests.testLoadingInvalidUsernameThrowsUsernameNotFoundException()
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.loadUserByUsername(java.lang.String)
2644 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManagerTests.testUserExistsReturnsTrueForValidUser()
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.setUsernameMapper(org.springframework.security.ldap.LdapUsernameToDnMapper)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.userExists(java.lang.String)
org.junit.Assert.assertTrue(Z)
2645 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManagerTests.testUserExistsReturnsFalseForInValidUser()
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.userExists(java.lang.String)
org.junit.Assert.assertFalse(Z)
2646 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManagerTests.testCreateNewUserSucceeds()
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setDn(java.lang.String)
org.springframework.security.userdetails.ldap.Person$Essence.setCn([Ljava.lang.String;)
org.springframework.security.userdetails.ldap.Person$Essence.setSn(java.lang.String)
org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.setUid(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setAuthorities([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.ldap.Person$Essence.createUserDetails()
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.createUser(org.springframework.security.userdetails.UserDetails)
2647 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManagerTests.testDeleteUserSucceeds()
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setDn(java.lang.String)
org.springframework.security.userdetails.ldap.Person$Essence.setCn([Ljava.lang.String;)
org.springframework.security.userdetails.ldap.Person$Essence.setSn(java.lang.String)
org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.setUid(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setAuthorities([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.ldap.Person$Essence.createUserDetails()
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.createUser(org.springframework.security.userdetails.UserDetails)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.setUserDetailsMapper(org.springframework.security.userdetails.ldap.UserDetailsContextMapper)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getAuthorities()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.deleteUser(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.loadUserByUsername(java.lang.String)
org.junit.Assert.fail(java.lang.String)
org.springframework.security.ldap.LdapUsernameToDnMapper.buildDn(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.getUserAuthorities(org.springframework.ldap.core.DistinguishedName, java.lang.String)
org.junit.Assert.assertEquals(J, J)
2648 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManagerTests.testPasswordChangeWithCorrectOldPasswordSucceeds()
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setDn(java.lang.String)
org.springframework.security.userdetails.ldap.Person$Essence.setCn([Ljava.lang.String;)
org.springframework.security.userdetails.ldap.Person$Essence.setSn(java.lang.String)
org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.setUid(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setPassword(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setAuthorities([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.ldap.Person$Essence.createUserDetails()
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.createUser(org.springframework.security.userdetails.UserDetails)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.changePassword(java.lang.String, java.lang.String)
org.springframework.security.ldap.SpringSecurityLdapTemplate.compare(java.lang.String, java.lang.String, java.lang.Object)
org.junit.Assert.assertTrue(Z)
2649 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsManagerTests.testPasswordChangeWithWrongOldPasswordFails()
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setDn(java.lang.String)
org.springframework.security.userdetails.ldap.Person$Essence.setCn([Ljava.lang.String;)
org.springframework.security.userdetails.ldap.Person$Essence.setSn(java.lang.String)
org.springframework.security.userdetails.ldap.InetOrgPerson$Essence.setUid(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setPassword(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setAuthorities([Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.ldap.Person$Essence.createUserDetails()
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.createUser(org.springframework.security.userdetails.UserDetails)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.userdetails.ldap.LdapUserDetailsManager.changePassword(java.lang.String, java.lang.String)
2650 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsServiceTests.rejectsNullSearchObject()
2650 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsServiceTests.rejectsNullAuthoritiesPopulator()
2650 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsServiceTests.correctAuthoritiesAreReturned()
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsService.setUserDetailsMapper(org.springframework.security.userdetails.ldap.UserDetailsContextMapper)
org.springframework.security.userdetails.ldap.LdapUserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.util.AuthorityUtils.authorityArrayToSet([Lorg.springframework.security.GrantedAuthority;)
java.util.Set.size()
org.junit.Assert.assertEquals(J, J)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2651 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsServiceTests$MockAuthoritiesPopulator.getGrantedAuthorities(org.springframework.ldap.core.DirContextOperations, java.lang.String)
2651 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsMapperTests.testMultipleRoleAttributeValuesAreMappedToAuthorities()
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.setConvertToUpperCase(Z)
org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.setRolePrefix(java.lang.String)
org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.setRoleAttributes([Ljava.lang.String;)
org.springframework.ldap.core.DirContextAdapter.setAttributeValues(java.lang.String, [Ljava.lang.Object;)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, [Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getAuthorities()
junit.framework.Assert.assertEquals(I, I)
2652 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsMapperTests.testNonRetrievedRoleAttributeIsIgnored()
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.setRoleAttributes([Ljava.lang.String;)
javax.naming.directory.BasicAttributes.put(javax.naming.directory.Attribute)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, [Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getAuthorities()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2653 - Declaração do método: org.springframework.security.userdetails.ldap.LdapUserDetailsMapperTests.testPasswordAttributeIsMappedCorrectly()
Métodos invocados: 
org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.setPasswordAttributeName(java.lang.String)
java.lang.String.getBytes()
javax.naming.directory.BasicAttributes.put(javax.naming.directory.Attribute)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.security.userdetails.ldap.LdapUserDetailsMapper.mapUserFromContext(org.springframework.ldap.core.DirContextOperations, java.lang.String, [Lorg.springframework.security.GrantedAuthority;)
org.springframework.security.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2654 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPersonTests.testUsernameIsMappedFromContextUidIfNotSet()
Métodos invocados: 
org.springframework.security.userdetails.ldap.InetOrgPersonTests.createUserContext()
org.springframework.security.userdetails.ldap.Person$Essence.createUserDetails()
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2655 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPersonTests.testUsernameIsDifferentFromContextUidIfSet()
Métodos invocados: 
org.springframework.security.userdetails.ldap.InetOrgPersonTests.createUserContext()
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl$Essence.setUsername(java.lang.String)
org.springframework.security.userdetails.ldap.Person$Essence.createUserDetails()
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.ldap.InetOrgPerson.getUid()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2656 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPersonTests.testAttributesMapCorrectlyFromContext()
Métodos invocados: 
org.springframework.security.userdetails.ldap.InetOrgPersonTests.createUserContext()
org.springframework.security.userdetails.ldap.Person$Essence.createUserDetails()
org.springframework.security.userdetails.ldap.InetOrgPerson.getMail()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.ldap.Person.getSn()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.ldap.Person.getCn()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.ldap.InetOrgPerson.getEmployeeNumber()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.ldap.InetOrgPerson.getDestinationIndicator()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2657 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPersonTests.testPasswordIsSetFromContextUserPassword()
Métodos invocados: 
org.springframework.security.userdetails.ldap.InetOrgPersonTests.createUserContext()
org.springframework.security.userdetails.ldap.Person$Essence.createUserDetails()
org.springframework.security.userdetails.ldap.LdapUserDetailsImpl.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2658 - Declaração do método: org.springframework.security.userdetails.ldap.InetOrgPersonTests.createUserContext()
Métodos invocados: 
org.springframework.ldap.core.DirContextAdapter.setDn(javax.naming.Name)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
org.springframework.ldap.core.DirContextAdapter.setAttributeValue(java.lang.String, java.lang.Object)
2659 - Declaração do método: org.springframework.security.userdetails.memory.UserAttributeEditorTests.UserAttributeEditorTests()
2659 - Declaração do método: org.springframework.security.userdetails.memory.UserAttributeEditorTests.UserAttributeEditorTests(java.lang.String)
2659 - Declaração do método: org.springframework.security.userdetails.memory.UserAttributeEditorTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2660 - Declaração do método: org.springframework.security.userdetails.memory.UserAttributeEditorTests.setUp()
2660 - Declaração do método: org.springframework.security.userdetails.memory.UserAttributeEditorTests.testCorrectOperationWithTrailingSpaces()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.userdetails.memory.UserAttribute.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.memory.UserAttribute.getAuthorities()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.userdetails.memory.UserAttribute.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.memory.UserAttribute.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2661 - Declaração do método: org.springframework.security.userdetails.memory.UserAttributeEditorTests.testCorrectOperationWithoutEnabledDisabledKeyword()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.userdetails.memory.UserAttribute.isValid()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.memory.UserAttribute.isEnabled()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.memory.UserAttribute.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.memory.UserAttribute.getAuthorities()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.userdetails.memory.UserAttribute.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.memory.UserAttribute.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2662 - Declaração do método: org.springframework.security.userdetails.memory.UserAttributeEditorTests.testDisabledKeyword()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.userdetails.memory.UserAttribute.isValid()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.memory.UserAttribute.isEnabled()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.memory.UserAttribute.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.memory.UserAttribute.getAuthorities()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.userdetails.memory.UserAttribute.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.memory.UserAttribute.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2663 - Declaração do método: org.springframework.security.userdetails.memory.UserAttributeEditorTests.testEmptyStringReturnsNull()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
junit.framework.Assert.assertTrue(Z)
2664 - Declaração do método: org.springframework.security.userdetails.memory.UserAttributeEditorTests.testEnabledKeyword()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.userdetails.memory.UserAttribute.isValid()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.memory.UserAttribute.isEnabled()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.userdetails.memory.UserAttribute.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.memory.UserAttribute.getAuthorities()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.userdetails.memory.UserAttribute.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.memory.UserAttribute.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2665 - Declaração do método: org.springframework.security.userdetails.memory.UserAttributeEditorTests.testMalformedStringReturnsNull()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
junit.framework.Assert.assertTrue(Z)
2666 - Declaração do método: org.springframework.security.userdetails.memory.UserAttributeEditorTests.testNoPasswordOrRolesReturnsNull()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
junit.framework.Assert.assertTrue(Z)
2667 - Declaração do método: org.springframework.security.userdetails.memory.UserAttributeEditorTests.testNoRolesReturnsNull()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
junit.framework.Assert.assertTrue(Z)
2668 - Declaração do método: org.springframework.security.userdetails.memory.UserAttributeEditorTests.testNullReturnsNull()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserAttributeEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
junit.framework.Assert.assertTrue(Z)
2669 - Declaração do método: org.springframework.security.userdetails.memory.UserMapTests.UserMapTests()
2669 - Declaração do método: org.springframework.security.userdetails.memory.UserMapTests.UserMapTests(java.lang.String)
2669 - Declaração do método: org.springframework.security.userdetails.memory.UserMapTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2670 - Declaração do método: org.springframework.security.userdetails.memory.UserMapTests.setUp()
2670 - Declaração do método: org.springframework.security.userdetails.memory.UserMapTests.testAddAndRetrieveUser()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserMap.addUser(org.springframework.security.userdetails.UserDetails)
org.springframework.security.userdetails.memory.UserMap.addUser(org.springframework.security.userdetails.UserDetails)
org.springframework.security.userdetails.memory.UserMap.addUser(org.springframework.security.userdetails.UserDetails)
org.springframework.security.userdetails.memory.UserMap.getUserCount()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.userdetails.memory.UserMap.getUser(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.userdetails.memory.UserMap.getUser(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.userdetails.memory.UserMap.getUser(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2671 - Declaração do método: org.springframework.security.userdetails.memory.UserMapTests.testNullUserCannotBeAdded()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserMap.getUserCount()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.userdetails.memory.UserMap.addUser(org.springframework.security.userdetails.UserDetails)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2672 - Declaração do método: org.springframework.security.userdetails.memory.UserMapTests.testUnknownUserIsNotRetrieved()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserMap.getUserCount()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.userdetails.memory.UserMap.addUser(org.springframework.security.userdetails.UserDetails)
org.springframework.security.userdetails.memory.UserMap.getUserCount()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.userdetails.memory.UserMap.getUser(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2673 - Declaração do método: org.springframework.security.userdetails.memory.UserMapEditorTests.UserMapEditorTests()
2673 - Declaração do método: org.springframework.security.userdetails.memory.UserMapEditorTests.UserMapEditorTests(java.lang.String)
2673 - Declaração do método: org.springframework.security.userdetails.memory.UserMapEditorTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2674 - Declaração do método: org.springframework.security.userdetails.memory.UserMapEditorTests.setUp()
2674 - Declaração do método: org.springframework.security.userdetails.memory.UserMapEditorTests.testConvertedIntoUserSuccessfullyWhenDisabled()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserMapEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.userdetails.memory.UserMap.getUser(java.lang.String)
org.springframework.security.userdetails.UserDetails.isEnabled()
junit.framework.Assert.assertTrue(Z)
2675 - Declaração do método: org.springframework.security.userdetails.memory.UserMapEditorTests.testConvertedIntoUserSuccessfullyWhenEnabled()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserMapEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.userdetails.memory.UserMap.getUser(java.lang.String)
org.springframework.security.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.memory.UserMap.getUser(java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.memory.UserMap.getUser(java.lang.String)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.memory.UserMap.getUser(java.lang.String)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.GrantedAuthority.getAuthority()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.memory.UserMap.getUser(java.lang.String)
org.springframework.security.userdetails.UserDetails.isEnabled()
junit.framework.Assert.assertTrue(Z)
2676 - Declaração do método: org.springframework.security.userdetails.memory.UserMapEditorTests.testEmptyStringReturnsEmptyMap()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserMapEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.userdetails.memory.UserMap.getUserCount()
junit.framework.Assert.assertEquals(I, I)
2677 - Declaração do método: org.springframework.security.userdetails.memory.UserMapEditorTests.testMalformedStringReturnsEmptyMap()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserMapEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.userdetails.memory.UserMap.getUserCount()
junit.framework.Assert.assertEquals(I, I)
2678 - Declaração do método: org.springframework.security.userdetails.memory.UserMapEditorTests.testMultiUserParsing()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserMapEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.userdetails.memory.UserMap.getUser(java.lang.String)
org.springframework.security.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.memory.UserMap.getUser(java.lang.String)
org.springframework.security.userdetails.UserDetails.getUsername()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2679 - Declaração do método: org.springframework.security.userdetails.memory.UserMapEditorTests.testNullReturnsEmptyMap()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserMapEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.userdetails.memory.UserMap.getUserCount()
junit.framework.Assert.assertEquals(I, I)
2680 - Declaração do método: org.springframework.security.userdetails.memory.InMemoryDaoTests.InMemoryDaoTests()
2680 - Declaração do método: org.springframework.security.userdetails.memory.InMemoryDaoTests.InMemoryDaoTests(java.lang.String)
2680 - Declaração do método: org.springframework.security.userdetails.memory.InMemoryDaoTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2681 - Declaração do método: org.springframework.security.userdetails.memory.InMemoryDaoTests.makeUserMap()
Métodos invocados: 
org.springframework.security.userdetails.memory.UserMapEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
2682 - Declaração do método: org.springframework.security.userdetails.memory.InMemoryDaoTests.setUp()
2682 - Declaração do método: org.springframework.security.userdetails.memory.InMemoryDaoTests.testLookupFails()
Métodos invocados: 
org.springframework.security.userdetails.memory.InMemoryDaoTests.makeUserMap()
org.springframework.security.userdetails.memory.InMemoryDaoImpl.setUserMap(org.springframework.security.userdetails.memory.UserMap)
org.springframework.security.userdetails.memory.InMemoryDaoImpl.afterPropertiesSet()
org.springframework.security.userdetails.memory.InMemoryDaoImpl.loadUserByUsername(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2683 - Declaração do método: org.springframework.security.userdetails.memory.InMemoryDaoTests.testLookupSuccess()
Métodos invocados: 
org.springframework.security.userdetails.memory.InMemoryDaoTests.makeUserMap()
org.springframework.security.userdetails.memory.InMemoryDaoImpl.setUserMap(org.springframework.security.userdetails.memory.UserMap)
org.springframework.security.userdetails.memory.InMemoryDaoImpl.afterPropertiesSet()
org.springframework.security.userdetails.memory.InMemoryDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.memory.InMemoryDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2684 - Declaração do método: org.springframework.security.userdetails.memory.InMemoryDaoTests.testLookupSuccessWithMixedCase()
Métodos invocados: 
org.springframework.security.userdetails.memory.InMemoryDaoTests.makeUserMap()
org.springframework.security.userdetails.memory.InMemoryDaoImpl.setUserMap(org.springframework.security.userdetails.memory.UserMap)
org.springframework.security.userdetails.memory.InMemoryDaoImpl.afterPropertiesSet()
org.springframework.security.userdetails.memory.InMemoryDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.memory.InMemoryDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2685 - Declaração do método: org.springframework.security.userdetails.memory.InMemoryDaoTests.testStartupFailsIfUserMapNotSet()
Métodos invocados: 
org.springframework.security.userdetails.memory.InMemoryDaoImpl.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2686 - Declaração do método: org.springframework.security.userdetails.memory.InMemoryDaoTests.testStartupFailsIfUserMapSetToNull()
Métodos invocados: 
org.springframework.security.userdetails.memory.InMemoryDaoImpl.setUserMap(org.springframework.security.userdetails.memory.UserMap)
org.springframework.security.userdetails.memory.InMemoryDaoImpl.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2687 - Declaração do método: org.springframework.security.userdetails.memory.InMemoryDaoTests.testStartupSuccessIfUserMapSet()
Métodos invocados: 
org.springframework.security.userdetails.memory.InMemoryDaoTests.makeUserMap()
org.springframework.security.userdetails.memory.InMemoryDaoImpl.setUserMap(org.springframework.security.userdetails.memory.UserMap)
org.springframework.security.userdetails.memory.InMemoryDaoImpl.afterPropertiesSet()
org.springframework.security.userdetails.memory.InMemoryDaoImpl.getUserMap()
org.springframework.security.userdetails.memory.UserMap.getUserCount()
junit.framework.Assert.assertEquals(I, I)
2688 - Declaração do método: org.springframework.security.userdetails.memory.InMemoryDaoTests.testUseOfExternalPropertiesObject()
Métodos invocados: 
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
java.util.Hashtable.put(java.lang.Object, java.lang.Object)
org.springframework.security.userdetails.memory.InMemoryDaoImpl.setUserProperties(java.util.Properties)
org.springframework.security.userdetails.memory.InMemoryDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.userdetails.memory.InMemoryDaoImpl.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getPassword()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2689 - Declaração do método: org.springframework.security.util.FilterToBeanProxyTests.FilterToBeanProxyTests()
2689 - Declaração do método: org.springframework.security.util.FilterToBeanProxyTests.FilterToBeanProxyTests(java.lang.String)
2689 - Declaração do método: org.springframework.security.util.FilterToBeanProxyTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.Filter.init(javax.servlet.FilterConfig)
javax.servlet.Filter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
javax.servlet.Filter.destroy()
2690 - Declaração do método: org.springframework.security.util.FilterToBeanProxyTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2691 - Declaração do método: org.springframework.security.util.FilterToBeanProxyTests.setUp()
2691 - Declaração do método: org.springframework.security.util.FilterToBeanProxyTests.testDetectsClassNotInClassLoader()
Métodos invocados: 
org.springframework.security.MockFilterConfig.setInitParmeter(java.lang.String, java.lang.String)
org.springframework.security.util.FilterToBeanProxy.init(javax.servlet.FilterConfig)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2692 - Declaração do método: org.springframework.security.util.FilterToBeanProxyTests.testDetectsNeitherPropertyBeingSet()
Métodos invocados: 
org.springframework.security.util.FilterToBeanProxy.init(javax.servlet.FilterConfig)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2693 - Declaração do método: org.springframework.security.util.FilterToBeanProxyTests.testDetectsTargetBeanIsNotAFilter()
Métodos invocados: 
org.springframework.security.MockFilterConfig.setInitParmeter(java.lang.String, java.lang.String)
org.springframework.security.util.FilterToBeanProxy.init(javax.servlet.FilterConfig)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2694 - Declaração do método: org.springframework.security.util.FilterToBeanProxyTests.testDetectsTargetBeanNotInBeanContext()
Métodos invocados: 
org.springframework.security.MockFilterConfig.setInitParmeter(java.lang.String, java.lang.String)
org.springframework.security.util.FilterToBeanProxy.init(javax.servlet.FilterConfig)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2695 - Declaração do método: org.springframework.security.util.FilterToBeanProxyTests.testDetectsTargetClassNotInBeanContext()
Métodos invocados: 
org.springframework.security.MockFilterConfig.setInitParmeter(java.lang.String, java.lang.String)
org.springframework.security.util.FilterToBeanProxy.init(javax.servlet.FilterConfig)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2696 - Declaração do método: org.springframework.security.util.FilterToBeanProxyTests.testIgnoresEmptyTargetBean()
Métodos invocados: 
org.springframework.security.MockFilterConfig.setInitParmeter(java.lang.String, java.lang.String)
org.springframework.security.MockFilterConfig.setInitParmeter(java.lang.String, java.lang.String)
org.springframework.security.util.FilterToBeanProxyTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
2697 - Declaração do método: org.springframework.security.util.FilterToBeanProxyTests.testNormalOperationWithLazyTrue()
Métodos invocados: 
org.springframework.security.MockFilterConfig.setInitParmeter(java.lang.String, java.lang.String)
org.springframework.security.MockFilterConfig.setInitParmeter(java.lang.String, java.lang.String)
org.springframework.security.util.FilterToBeanProxyTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
2698 - Declaração do método: org.springframework.security.util.FilterToBeanProxyTests.testNormalOperationWithSpecificBeanName()
Métodos invocados: 
org.springframework.security.MockFilterConfig.setInitParmeter(java.lang.String, java.lang.String)
org.springframework.security.util.FilterToBeanProxyTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
2699 - Declaração do método: org.springframework.security.util.FilterToBeanProxyTests.testNormalOperationWithTargetClass()
Métodos invocados: 
org.springframework.security.MockFilterConfig.setInitParmeter(java.lang.String, java.lang.String)
org.springframework.security.util.FilterToBeanProxyTests.executeFilterInContainerSimulator(javax.servlet.FilterConfig, javax.servlet.Filter, javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
2700 - Declaração do método: org.springframework.security.util.FilterToBeanProxyTests.testNullDelegateDoesNotCauseNullPointerException()
Métodos invocados: 
org.springframework.security.MockFilterConfig.setInitParmeter(java.lang.String, java.lang.String)
org.springframework.security.MockFilterConfig.setInitParmeter(java.lang.String, java.lang.String)
org.springframework.security.util.FilterToBeanProxy.destroy()
2701 - Declaração do método: org.springframework.security.util.FilterToBeanProxyTests$MockFilterToBeanProxy.MockFilterToBeanProxy(java.lang.String)
2701 - Declaração do método: org.springframework.security.util.FilterToBeanProxyTests$MockFilterToBeanProxy.getContext(javax.servlet.FilterConfig)
2701 - Declaração do método: org.springframework.security.util.StringSplitUtilsTests.StringSplitUtilsTests()
2701 - Declaração do método: org.springframework.security.util.StringSplitUtilsTests.StringSplitUtilsTests(java.lang.String)
2701 - Declaração do método: org.springframework.security.util.StringSplitUtilsTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2702 - Declaração do método: org.springframework.security.util.StringSplitUtilsTests.testSplitEachArrayElementAndCreateMapNormalOperation()
Métodos invocados: 
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
org.springframework.security.util.StringSplitUtils.splitEachArrayElementAndCreateMap([Ljava.lang.String;, java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.size()
junit.framework.Assert.assertEquals(I, I)
2703 - Declaração do método: org.springframework.security.util.StringSplitUtilsTests.testSplitEachArrayElementAndCreateMapRespectsInstructionNotToRemoveCharacters()
Métodos invocados: 
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
org.springframework.security.util.StringSplitUtils.splitEachArrayElementAndCreateMap([Ljava.lang.String;, java.lang.String, java.lang.String)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.get(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.util.Map.size()
junit.framework.Assert.assertEquals(I, I)
2704 - Declaração do método: org.springframework.security.util.StringSplitUtilsTests.testSplitEachArrayElementAndCreateMapReturnsNullIfArrayEmptyOrNull()
Métodos invocados: 
org.springframework.security.util.StringSplitUtils.splitEachArrayElementAndCreateMap([Ljava.lang.String;, java.lang.String, java.lang.String)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.util.StringSplitUtils.splitEachArrayElementAndCreateMap([Ljava.lang.String;, java.lang.String, java.lang.String)
junit.framework.Assert.assertNull(java.lang.Object)
2705 - Declaração do método: org.springframework.security.util.StringSplitUtilsTests.testSplitNormalOperation()
Métodos invocados: 
org.springframework.security.util.StringSplitUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.util.StringSplitUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2706 - Declaração do método: org.springframework.security.util.StringSplitUtilsTests.testSplitRejectsNullsAndIncorrectLengthStrings()
Métodos invocados: 
org.springframework.security.util.StringSplitUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.util.StringSplitUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.util.StringSplitUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.util.StringSplitUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.util.StringSplitUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2707 - Declaração do método: org.springframework.security.util.StringSplitUtilsTests.testSplitWorksWithDifferentDelimiters()
Métodos invocados: 
org.springframework.security.util.StringSplitUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.util.StringSplitUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.util.StringSplitUtils.split(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
2708 - Declaração do método: org.springframework.security.util.StringSplitUtilsTests.testAuthorizationHeaderWithCommasIsSplitCorrectly()
Métodos invocados: 
org.springframework.security.util.StringSplitUtils.splitIgnoringQuotes(java.lang.String, C)
junit.framework.Assert.assertEquals(I, I)
2709 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests$NonStandardException.NonStandardException(java.lang.String, java.lang.Throwable)
2709 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests$NonStandardException.resolveCause()
2709 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests$NonStandardExceptionCauseExtractor.extractCause(java.lang.Throwable)
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.verifyThrowableHierarchy(java.lang.Throwable, java.lang.Class)
org.springframework.security.util.ThrowableAnalyzerTests$NonStandardException.resolveCause()
2710 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests.setUp()
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.registerExtractor(java.lang.Class, org.springframework.security.util.ThrowableCauseExtractor)
2711 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests$1.initExtractorMap()
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.registerExtractor(java.lang.Class, org.springframework.security.util.ThrowableCauseExtractor)
2712 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests.tearDown()
2712 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests.testRegisterExtractorWithInvalidClass()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
2713 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests$2.initExtractorMap()
2713 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests.testRegisterExtractorWithInvalidExtractor()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
2714 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests$3.initExtractorMap()
2714 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests.testGetRegisteredTypes()
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.getRegisteredTypes()
java.lang.Class.isAssignableFrom(java.lang.Class)
junit.framework.Assert.assertFalse(java.lang.String, Z)
2715 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests.testDetermineCauseChainWithNoExtractors()
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.getRegisteredTypes()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.springframework.security.util.ThrowableAnalyzer.determineCauseChain(java.lang.Throwable)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
2716 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests$4.initExtractorMap()
2716 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests.testDetermineCauseChainWithDefaultExtractors()
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.getRegisteredTypes()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.springframework.security.util.ThrowableAnalyzer.determineCauseChain(java.lang.Throwable)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
2717 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests.testDetermineCauseChainWithCustomExtractors()
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.determineCauseChain(java.lang.Throwable)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
2718 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests.testGetFirstThrowableOfTypeWithSuccess1()
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.determineCauseChain(java.lang.Throwable)
org.springframework.security.util.ThrowableAnalyzer.getFirstThrowableOfType(java.lang.Class, [Ljava.lang.Throwable;)
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
2719 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests.testGetFirstThrowableOfTypeWithSuccess2()
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.determineCauseChain(java.lang.Throwable)
org.springframework.security.util.ThrowableAnalyzer.getFirstThrowableOfType(java.lang.Class, [Ljava.lang.Throwable;)
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
2720 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests.testGetFirstThrowableOfTypeWithFailure()
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.determineCauseChain(java.lang.Throwable)
org.springframework.security.util.ThrowableAnalyzer.getFirstThrowableOfType(java.lang.Class, [Ljava.lang.Throwable;)
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
2721 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests.testVerifyThrowableHierarchyWithExactType()
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.verifyThrowableHierarchy(java.lang.Throwable, java.lang.Class)
2722 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests.testVerifyThrowableHierarchyWithCompatibleType()
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.verifyThrowableHierarchy(java.lang.Throwable, java.lang.Class)
2723 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests.testVerifyThrowableHierarchyWithNull()
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.verifyThrowableHierarchy(java.lang.Throwable, java.lang.Class)
junit.framework.Assert.fail(java.lang.String)
2724 - Declaração do método: org.springframework.security.util.ThrowableAnalyzerTests.testVerifyThrowableHierarchyWithNonmatchingType()
Métodos invocados: 
org.springframework.security.util.ThrowableAnalyzer.verifyThrowableHierarchy(java.lang.Throwable, java.lang.Class)
junit.framework.Assert.fail(java.lang.String)
2725 - Declaração do método: org.springframework.security.util.AuthorityUtilsTests.clearContext()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
2726 - Declaração do método: org.springframework.security.util.AuthorityUtilsTests.userHasAuthorityReturnsFalseForUnauthenticatedUser()
Métodos invocados: 
org.springframework.security.util.AuthorityUtils.userHasAuthority(java.lang.String)
org.junit.Assert.assertFalse(Z)
2727 - Declaração do método: org.springframework.security.util.AuthorityUtilsTests.userHasAuthorityReturnsFalseWhenUserHasNoAuthorities()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.util.AuthorityUtils.userHasAuthority(java.lang.String)
org.junit.Assert.assertFalse(Z)
2728 - Declaração do método: org.springframework.security.util.AuthorityUtilsTests.userHasAuthorityReturnsTrueWhenUserHasCorrectAuthority()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.util.AuthorityUtils.stringArrayToAuthorityArray([Ljava.lang.String;)
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.util.AuthorityUtils.userHasAuthority(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.util.AuthorityUtils.userHasAuthority(java.lang.String)
org.junit.Assert.assertTrue(Z)
org.springframework.security.util.AuthorityUtils.userHasAuthority(java.lang.String)
org.junit.Assert.assertFalse(Z)
2729 - Declaração do método: org.springframework.security.util.AuthorityUtilsTests.commaSeparatedStringIsParsedCorrectly()
Métodos invocados: 
org.springframework.security.util.AuthorityUtils.commaSeparatedStringToAuthorityArray(java.lang.String)
org.springframework.security.util.AuthorityUtils.authorityArrayToSet([Lorg.springframework.security.GrantedAuthority;)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
org.junit.Assert.assertTrue(Z)
2730 - Declaração do método: org.springframework.security.util.MockFilterChain.MockFilterChain(Z)
2730 - Declaração do método: org.springframework.security.util.MockFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
Métodos invocados: 
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail(java.lang.String)
2731 - Declaração do método: org.springframework.security.util.PortMapperImplTests.PortMapperImplTests()
2731 - Declaração do método: org.springframework.security.util.PortMapperImplTests.PortMapperImplTests(java.lang.String)
2731 - Declaração do método: org.springframework.security.util.PortMapperImplTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2732 - Declaração do método: org.springframework.security.util.PortMapperImplTests.setUp()
2732 - Declaração do método: org.springframework.security.util.PortMapperImplTests.testDefaultMappingsAreKnown()
Métodos invocados: 
org.springframework.security.util.PortMapperImpl.lookupHttpPort(java.lang.Integer)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.util.PortMapperImpl.lookupHttpPort(java.lang.Integer)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.util.PortMapperImpl.lookupHttpsPort(java.lang.Integer)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.util.PortMapperImpl.lookupHttpsPort(java.lang.Integer)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2733 - Declaração do método: org.springframework.security.util.PortMapperImplTests.testDetectsEmptyMap()
Métodos invocados: 
org.springframework.security.util.PortMapperImpl.setPortMappings(java.util.Map)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2734 - Declaração do método: org.springframework.security.util.PortMapperImplTests.testDetectsNullMap()
Métodos invocados: 
org.springframework.security.util.PortMapperImpl.setPortMappings(java.util.Map)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2735 - Declaração do método: org.springframework.security.util.PortMapperImplTests.testGetTranslatedPortMappings()
Métodos invocados: 
org.springframework.security.util.PortMapperImpl.getTranslatedPortMappings()
java.util.Map.size()
junit.framework.Assert.assertEquals(I, I)
2736 - Declaração do método: org.springframework.security.util.PortMapperImplTests.testRejectsOutOfRangeMappings()
Métodos invocados: 
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.security.util.PortMapperImpl.setPortMappings(java.util.Map)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2737 - Declaração do método: org.springframework.security.util.PortMapperImplTests.testReturnsNullIfHttpPortCannotBeFound()
Métodos invocados: 
org.springframework.security.util.PortMapperImpl.lookupHttpPort(java.lang.Integer)
junit.framework.Assert.assertTrue(Z)
2738 - Declaração do método: org.springframework.security.util.PortMapperImplTests.testSupportsCustomMappings()
Métodos invocados: 
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.security.util.PortMapperImpl.setPortMappings(java.util.Map)
org.springframework.security.util.PortMapperImpl.lookupHttpPort(java.lang.Integer)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.util.PortMapperImpl.lookupHttpsPort(java.lang.Integer)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2739 - Declaração do método: org.springframework.security.util.PortResolverImplTests.PortResolverImplTests()
2739 - Declaração do método: org.springframework.security.util.PortResolverImplTests.PortResolverImplTests(java.lang.String)
2739 - Declaração do método: org.springframework.security.util.PortResolverImplTests.setUp()
2739 - Declaração do método: org.springframework.security.util.PortResolverImplTests.testDetectsBuggyIeHttpRequest()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.security.util.PortResolverImpl.getServerPort(javax.servlet.ServletRequest)
junit.framework.Assert.assertEquals(I, I)
2740 - Declaração do método: org.springframework.security.util.PortResolverImplTests.testDetectsBuggyIeHttpsRequest()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.security.util.PortResolverImpl.getServerPort(javax.servlet.ServletRequest)
junit.framework.Assert.assertEquals(I, I)
2741 - Declaração do método: org.springframework.security.util.PortResolverImplTests.testDetectsEmptyPortMapper()
Métodos invocados: 
org.springframework.security.util.PortResolverImpl.setPortMapper(org.springframework.security.util.PortMapper)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2742 - Declaração do método: org.springframework.security.util.PortResolverImplTests.testGettersSetters()
Métodos invocados: 
org.springframework.security.util.PortResolverImpl.getPortMapper()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.util.PortResolverImpl.setPortMapper(org.springframework.security.util.PortMapper)
org.springframework.security.util.PortResolverImpl.getPortMapper()
junit.framework.Assert.assertTrue(Z)
2743 - Declaração do método: org.springframework.security.util.PortResolverImplTests.testNormalOperation()
Métodos invocados: 
org.springframework.mock.web.MockHttpServletRequest.setScheme(java.lang.String)
org.springframework.mock.web.MockHttpServletRequest.setServerPort(I)
org.springframework.security.util.PortResolverImpl.getServerPort(javax.servlet.ServletRequest)
junit.framework.Assert.assertEquals(I, I)
2744 - Declaração do método: org.springframework.security.util.MockFilter.destroy()
2744 - Declaração do método: org.springframework.security.util.MockFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
2745 - Declaração do método: org.springframework.security.util.MockFilter.init(javax.servlet.FilterConfig)
2745 - Declaração do método: org.springframework.security.util.MockFilter.isWasDestroyed()
2745 - Declaração do método: org.springframework.security.util.MockFilter.isWasDoFiltered()
2745 - Declaração do método: org.springframework.security.util.MockFilter.isWasInitialized()
2745 - Declaração do método: org.springframework.security.util.FilterChainProxyTests.loadContext()
2745 - Declaração do método: org.springframework.security.util.FilterChainProxyTests.closeContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
2746 - Declaração do método: org.springframework.security.util.FilterChainProxyTests.testDetectsFilterInvocationDefinitionSourceThatDoesNotReturnAllConfigAttributes()
Métodos invocados: 
org.springframework.security.util.FilterChainProxy.setApplicationContext(org.springframework.context.ApplicationContext)
org.springframework.security.util.FilterChainProxy.setFilterInvocationDefinitionSource(org.springframework.security.intercept.web.FilterInvocationDefinitionSource)
org.springframework.security.util.FilterChainProxy.afterPropertiesSet()
org.junit.Assert.fail(java.lang.String)
2747 - Declaração do método: org.springframework.security.util.FilterChainProxyTests.testDetectsIfConfigAttributeDoesNotReturnValueForGetAttributeMethod()
Métodos invocados: 
org.springframework.security.util.FilterChainProxy.setApplicationContext(org.springframework.context.ApplicationContext)
java.util.HashMap.put(java.lang.Object, java.lang.Object)
org.springframework.security.util.FilterChainProxy.setFilterInvocationDefinitionSource(org.springframework.security.intercept.web.FilterInvocationDefinitionSource)
org.springframework.security.util.FilterChainProxy.afterPropertiesSet()
org.springframework.security.util.FilterChainProxy.init(javax.servlet.FilterConfig)
org.junit.Assert.fail(java.lang.String)
2748 - Declaração do método: org.springframework.security.util.FilterChainProxyTests.testDetectsMissingFilterInvocationDefinitionSource()
Métodos invocados: 
org.springframework.security.util.FilterChainProxy.setApplicationContext(org.springframework.context.ApplicationContext)
org.springframework.security.util.FilterChainProxy.afterPropertiesSet()
2749 - Declaração do método: org.springframework.security.util.FilterChainProxyTests.testDoNotFilter()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String, java.lang.Class)
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String, java.lang.Class)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.util.FilterChainProxy.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.util.MockFilter.isWasInitialized()
org.junit.Assert.assertFalse(Z)
org.springframework.security.util.MockFilter.isWasDoFiltered()
org.junit.Assert.assertFalse(Z)
org.springframework.security.util.MockFilter.isWasDestroyed()
org.junit.Assert.assertFalse(Z)
2750 - Declaração do método: org.springframework.security.util.FilterChainProxyTests.misplacedUniversalPathShouldBeDetected()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String, java.lang.Class)
org.junit.Assert.fail(java.lang.String)
2751 - Declaração do método: org.springframework.security.util.FilterChainProxyTests.normalOperation()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String, java.lang.Class)
org.springframework.security.util.FilterChainProxyTests.doNormalOperation(org.springframework.security.util.FilterChainProxy)
2752 - Declaração do método: org.springframework.security.util.FilterChainProxyTests.normalOperationWithNewConfig()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String, java.lang.Class)
org.springframework.security.util.FilterChainProxyTests.checkPathAndFilterOrder(org.springframework.security.util.FilterChainProxy)
org.springframework.security.util.FilterChainProxyTests.doNormalOperation(org.springframework.security.util.FilterChainProxy)
2753 - Declaração do método: org.springframework.security.util.FilterChainProxyTests.normalOperationWithNewConfigRegex()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String, java.lang.Class)
org.springframework.security.util.FilterChainProxyTests.checkPathAndFilterOrder(org.springframework.security.util.FilterChainProxy)
org.springframework.security.util.FilterChainProxyTests.doNormalOperation(org.springframework.security.util.FilterChainProxy)
2754 - Declaração do método: org.springframework.security.util.FilterChainProxyTests.normalOperationWithNewConfigNonNamespace()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String, java.lang.Class)
org.springframework.security.util.FilterChainProxyTests.checkPathAndFilterOrder(org.springframework.security.util.FilterChainProxy)
org.springframework.security.util.FilterChainProxyTests.doNormalOperation(org.springframework.security.util.FilterChainProxy)
2755 - Declaração do método: org.springframework.security.util.FilterChainProxyTests.checkPathAndFilterOrder(org.springframework.security.util.FilterChainProxy)
Métodos invocados: 
org.springframework.security.util.FilterChainProxy.getFilters(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
org.springframework.security.util.FilterChainProxy.getFilters(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
org.springframework.security.util.FilterChainProxy.getFilters(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
org.springframework.security.util.FilterChainProxy.getFilters(java.lang.String)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
java.util.List.get(I)
org.junit.Assert.assertTrue(Z)
2756 - Declaração do método: org.springframework.security.util.FilterChainProxyTests.doNormalOperation(org.springframework.security.util.FilterChainProxy)
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String, java.lang.Class)
org.springframework.security.util.MockFilter.isWasInitialized()
org.junit.Assert.assertFalse(Z)
org.springframework.security.util.MockFilter.isWasDoFiltered()
org.junit.Assert.assertFalse(Z)
org.springframework.security.util.MockFilter.isWasDestroyed()
org.junit.Assert.assertFalse(Z)
org.springframework.security.util.FilterChainProxy.init(javax.servlet.FilterConfig)
org.springframework.security.util.MockFilter.isWasInitialized()
org.junit.Assert.assertTrue(Z)
org.springframework.security.util.MockFilter.isWasDoFiltered()
org.junit.Assert.assertFalse(Z)
org.springframework.security.util.MockFilter.isWasDestroyed()
org.junit.Assert.assertFalse(Z)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.util.FilterChainProxy.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.util.MockFilter.isWasInitialized()
org.junit.Assert.assertTrue(Z)
org.springframework.security.util.MockFilter.isWasDoFiltered()
org.junit.Assert.assertTrue(Z)
org.springframework.security.util.MockFilter.isWasDestroyed()
org.junit.Assert.assertFalse(Z)
org.springframework.mock.web.MockHttpServletRequest.setServletPath(java.lang.String)
org.springframework.security.util.FilterChainProxy.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.util.FilterChainProxy.destroy()
org.springframework.security.util.MockFilter.isWasInitialized()
org.junit.Assert.assertTrue(Z)
org.springframework.security.util.MockFilter.isWasDoFiltered()
org.junit.Assert.assertTrue(Z)
org.springframework.security.util.MockFilter.isWasDestroyed()
org.junit.Assert.assertTrue(Z)
2757 - Declaração do método: org.springframework.security.util.FilterChainProxyTests$MockConfigAttribute.getAttribute()
2757 - Declaração do método: org.springframework.security.util.EncryptionUtilsTests.testEncryptsUsingDESEde()
Métodos invocados: 
org.springframework.security.util.EncryptionUtils.encrypt(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2758 - Declaração do método: org.springframework.security.util.EncryptionUtilsTests.testEncryptByteArrayUsingDESEde()
Métodos invocados: 
org.springframework.security.util.EncryptionUtils.stringToByteArray(java.lang.String)
org.springframework.security.util.EncryptionUtils.encrypt(java.lang.String, [B)
org.springframework.security.util.EncryptionUtils.byteArrayToString([B)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2759 - Declaração do método: org.springframework.security.util.EncryptionUtilsTests.testEncryptionKeyCanContainLetters()
Métodos invocados: 
org.springframework.security.util.EncryptionUtils.encrypt(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2760 - Declaração do método: org.springframework.security.util.EncryptionUtilsTests.testDecryptsUsingDESEde()
Métodos invocados: 
org.springframework.security.util.EncryptionUtils.decrypt(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2761 - Declaração do método: org.springframework.security.util.EncryptionUtilsTests.testDecryptByteArrayUsingDESEde()
Métodos invocados: 
org.springframework.security.util.EncryptionUtils.stringToByteArray(java.lang.String)
org.springframework.security.util.EncryptionUtils.decrypt(java.lang.String, [B)
org.springframework.security.util.EncryptionUtils.byteArrayToString([B)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2762 - Declaração do método: org.springframework.security.util.EncryptionUtilsTests.testFailEncryptWithNullEncryptionKey()
Métodos invocados: 
org.springframework.security.util.EncryptionUtils.encrypt(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
junit.framework.Assert.assertTrue(Z)
2763 - Declaração do método: org.springframework.security.util.EncryptionUtilsTests.testFailEncryptWithEmptyEncryptionKey()
Métodos invocados: 
org.springframework.security.util.EncryptionUtils.encrypt(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
junit.framework.Assert.assertTrue(Z)
2764 - Declaração do método: org.springframework.security.util.EncryptionUtilsTests.teastFailEncryptWithShortEncryptionKey()
Métodos invocados: 
org.springframework.security.util.EncryptionUtils.encrypt(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
junit.framework.Assert.assertTrue(Z)
2765 - Declaração do método: org.springframework.security.util.EncryptionUtilsTests.testFailDecryptWithEmptyString()
Métodos invocados: 
org.springframework.security.util.EncryptionUtils.decrypt(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
junit.framework.Assert.assertTrue(Z)
2766 - Declaração do método: org.springframework.security.util.EncryptionUtilsTests.testFailEncryptWithEmptyString()
Métodos invocados: 
org.springframework.security.util.EncryptionUtils.encrypt(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
junit.framework.Assert.assertTrue(Z)
2767 - Declaração do método: org.springframework.security.util.EncryptionUtilsTests.testFailEncryptWithNullString()
Métodos invocados: 
org.springframework.security.util.EncryptionUtils.encrypt(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
junit.framework.Assert.assertTrue(Z)
2768 - Declaração do método: org.springframework.security.util.EncryptionUtilsTests.testEncryptAndDecrypt()
Métodos invocados: 
org.springframework.security.util.EncryptionUtils.encrypt(java.lang.String, java.lang.String)
org.springframework.security.util.EncryptionUtils.decrypt(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2769 - Declaração do método: org.springframework.security.vote.ConsensusBasedTests.testOneAffirmativeVoteOneDenyVoteOneAbstainVoteDeniesAccessWithoutDefault()
Métodos invocados: 
org.springframework.security.vote.ConsensusBasedTests.makeTestToken()
org.springframework.security.vote.ConsensusBasedTests.makeDecisionManager()
org.springframework.security.vote.ConsensusBased.setAllowIfEqualGrantedDeniedDecisions(Z)
org.springframework.security.vote.ConsensusBased.isAllowIfEqualGrantedDeniedDecisions()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.vote.ConsensusBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2770 - Declaração do método: org.springframework.security.vote.ConsensusBasedTests.testOneAffirmativeVoteOneDenyVoteOneAbstainVoteGrantsAccessWithDefault()
Métodos invocados: 
org.springframework.security.vote.ConsensusBasedTests.makeTestToken()
org.springframework.security.vote.ConsensusBasedTests.makeDecisionManager()
org.springframework.security.vote.ConsensusBased.isAllowIfEqualGrantedDeniedDecisions()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.vote.ConsensusBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertTrue(Z)
2771 - Declaração do método: org.springframework.security.vote.ConsensusBasedTests.testOneAffirmativeVoteTwoAbstainVotesGrantsAccess()
Métodos invocados: 
org.springframework.security.vote.ConsensusBasedTests.makeTestToken()
org.springframework.security.vote.ConsensusBasedTests.makeDecisionManager()
org.springframework.security.vote.ConsensusBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertTrue(Z)
2772 - Declaração do método: org.springframework.security.vote.ConsensusBasedTests.testOneDenyVoteTwoAbstainVotesDeniesAccess()
Métodos invocados: 
org.springframework.security.vote.ConsensusBasedTests.makeTestToken()
org.springframework.security.vote.ConsensusBasedTests.makeDecisionManager()
org.springframework.security.vote.ConsensusBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2773 - Declaração do método: org.springframework.security.vote.ConsensusBasedTests.testThreeAbstainVotesDeniesAccessWithDefault()
Métodos invocados: 
org.springframework.security.vote.ConsensusBasedTests.makeTestToken()
org.springframework.security.vote.ConsensusBasedTests.makeDecisionManager()
org.springframework.security.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.vote.ConsensusBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2774 - Declaração do método: org.springframework.security.vote.ConsensusBasedTests.testThreeAbstainVotesGrantsAccessWithoutDefault()
Métodos invocados: 
org.springframework.security.vote.ConsensusBasedTests.makeTestToken()
org.springframework.security.vote.ConsensusBasedTests.makeDecisionManager()
org.springframework.security.vote.AbstractAccessDecisionManager.setAllowIfAllAbstainDecisions(Z)
org.springframework.security.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.vote.ConsensusBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertTrue(Z)
2775 - Declaração do método: org.springframework.security.vote.ConsensusBasedTests.testTwoAffirmativeVotesTwoAbstainVotesGrantsAccess()
Métodos invocados: 
org.springframework.security.vote.ConsensusBasedTests.makeTestToken()
org.springframework.security.vote.ConsensusBasedTests.makeDecisionManager()
org.springframework.security.vote.ConsensusBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertTrue(Z)
2776 - Declaração do método: org.springframework.security.vote.ConsensusBasedTests.makeDecisionManager()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
2777 - Declaração do método: org.springframework.security.vote.ConsensusBasedTests.makeTestToken()
2777 - Declaração do método: org.springframework.security.vote.AuthenticatedVoterTests.AuthenticatedVoterTests()
2777 - Declaração do método: org.springframework.security.vote.AuthenticatedVoterTests.AuthenticatedVoterTests(java.lang.String)
2777 - Declaração do método: org.springframework.security.vote.AuthenticatedVoterTests.createAnonymous()
2777 - Declaração do método: org.springframework.security.vote.AuthenticatedVoterTests.createFullyAuthenticated()
2777 - Declaração do método: org.springframework.security.vote.AuthenticatedVoterTests.createRememberMe()
2777 - Declaração do método: org.springframework.security.vote.AuthenticatedVoterTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2778 - Declaração do método: org.springframework.security.vote.AuthenticatedVoterTests.setUp()
2778 - Declaração do método: org.springframework.security.vote.AuthenticatedVoterTests.testAnonymousWorks()
Métodos invocados: 
org.springframework.security.vote.AuthenticatedVoterTests.createAnonymous()
org.springframework.security.vote.AuthenticatedVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.vote.AuthenticatedVoterTests.createRememberMe()
org.springframework.security.vote.AuthenticatedVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.vote.AuthenticatedVoterTests.createFullyAuthenticated()
org.springframework.security.vote.AuthenticatedVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertEquals(I, I)
2779 - Declaração do método: org.springframework.security.vote.AuthenticatedVoterTests.testFullyWorks()
Métodos invocados: 
org.springframework.security.vote.AuthenticatedVoterTests.createAnonymous()
org.springframework.security.vote.AuthenticatedVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.vote.AuthenticatedVoterTests.createRememberMe()
org.springframework.security.vote.AuthenticatedVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.vote.AuthenticatedVoterTests.createFullyAuthenticated()
org.springframework.security.vote.AuthenticatedVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertEquals(I, I)
2780 - Declaração do método: org.springframework.security.vote.AuthenticatedVoterTests.testRememberMeWorks()
Métodos invocados: 
org.springframework.security.vote.AuthenticatedVoterTests.createAnonymous()
org.springframework.security.vote.AuthenticatedVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.vote.AuthenticatedVoterTests.createRememberMe()
org.springframework.security.vote.AuthenticatedVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.vote.AuthenticatedVoterTests.createFullyAuthenticated()
org.springframework.security.vote.AuthenticatedVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertEquals(I, I)
2781 - Declaração do método: org.springframework.security.vote.AuthenticatedVoterTests.testSetterRejectsNull()
Métodos invocados: 
org.springframework.security.vote.AuthenticatedVoter.setAuthenticationTrustResolver(org.springframework.security.AuthenticationTrustResolver)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2782 - Declaração do método: org.springframework.security.vote.AuthenticatedVoterTests.testSupports()
Métodos invocados: 
org.springframework.security.vote.AuthenticatedVoter.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.vote.AuthenticatedVoter.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.vote.AuthenticatedVoter.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.vote.AuthenticatedVoter.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.vote.AuthenticatedVoter.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertFalse(Z)
2783 - Declaração do método: org.springframework.security.vote.SomeDomainObjectManager.someServiceMethod(org.springframework.security.vote.SomeDomainObject)
2783 - Declaração do método: org.springframework.security.vote.AffirmativeBasedTests.AffirmativeBasedTests()
2783 - Declaração do método: org.springframework.security.vote.AffirmativeBasedTests.AffirmativeBasedTests(java.lang.String)
2783 - Declaração do método: org.springframework.security.vote.AffirmativeBasedTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2784 - Declaração do método: org.springframework.security.vote.AffirmativeBasedTests.makeDecisionManager()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
2785 - Declaração do método: org.springframework.security.vote.AffirmativeBasedTests.makeTestToken()
2785 - Declaração do método: org.springframework.security.vote.AffirmativeBasedTests.setUp()
2785 - Declaração do método: org.springframework.security.vote.AffirmativeBasedTests.testOneAffirmativeVoteOneDenyVoteOneAbstainVoteGrantsAccess()
Métodos invocados: 
org.springframework.security.vote.AffirmativeBasedTests.makeTestToken()
org.springframework.security.vote.AffirmativeBasedTests.makeDecisionManager()
org.springframework.security.vote.AffirmativeBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertTrue(Z)
2786 - Declaração do método: org.springframework.security.vote.AffirmativeBasedTests.testOneAffirmativeVoteTwoAbstainVotesGrantsAccess()
Métodos invocados: 
org.springframework.security.vote.AffirmativeBasedTests.makeTestToken()
org.springframework.security.vote.AffirmativeBasedTests.makeDecisionManager()
org.springframework.security.vote.AffirmativeBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertTrue(Z)
2787 - Declaração do método: org.springframework.security.vote.AffirmativeBasedTests.testOneDenyVoteTwoAbstainVotesDeniesAccess()
Métodos invocados: 
org.springframework.security.vote.AffirmativeBasedTests.makeTestToken()
org.springframework.security.vote.AffirmativeBasedTests.makeDecisionManager()
org.springframework.security.vote.AffirmativeBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2788 - Declaração do método: org.springframework.security.vote.AffirmativeBasedTests.testThreeAbstainVotesDeniesAccessWithDefault()
Métodos invocados: 
org.springframework.security.vote.AffirmativeBasedTests.makeTestToken()
org.springframework.security.vote.AffirmativeBasedTests.makeDecisionManager()
org.springframework.security.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.vote.AffirmativeBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2789 - Declaração do método: org.springframework.security.vote.AffirmativeBasedTests.testThreeAbstainVotesGrantsAccessWithoutDefault()
Métodos invocados: 
org.springframework.security.vote.AffirmativeBasedTests.makeTestToken()
org.springframework.security.vote.AffirmativeBasedTests.makeDecisionManager()
org.springframework.security.vote.AbstractAccessDecisionManager.setAllowIfAllAbstainDecisions(Z)
org.springframework.security.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.vote.AffirmativeBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertTrue(Z)
2790 - Declaração do método: org.springframework.security.vote.AffirmativeBasedTests.testTwoAffirmativeVotesTwoAbstainVotesGrantsAccess()
Métodos invocados: 
org.springframework.security.vote.AffirmativeBasedTests.makeTestToken()
org.springframework.security.vote.AffirmativeBasedTests.makeDecisionManager()
org.springframework.security.vote.AffirmativeBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertTrue(Z)
2791 - Declaração do método: org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
2791 - Declaração do método: org.springframework.security.vote.SampleService.getTheSampleData()
2791 - Declaração do método: org.springframework.security.vote.DenyVoter.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
2792 - Declaração do método: org.springframework.security.vote.DenyVoter.supports(java.lang.Class)
2792 - Declaração do método: org.springframework.security.vote.DenyVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.vote.DenyVoter.supports(org.springframework.security.ConfigAttribute)
2793 - Declaração do método: org.springframework.security.vote.SomeDomainObject.SomeDomainObject(java.lang.String)
2793 - Declaração do método: org.springframework.security.vote.SomeDomainObject.getParent()
2793 - Declaração do método: org.springframework.security.vote.UnanimousBasedTests.makeDecisionManager()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
2794 - Declaração do método: org.springframework.security.vote.UnanimousBasedTests.makeDecisionManagerWithFooBarPrefix()
Métodos invocados: 
org.springframework.security.vote.RoleVoter.setRolePrefix(java.lang.String)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
2795 - Declaração do método: org.springframework.security.vote.UnanimousBasedTests.makeTestToken()
2795 - Declaração do método: org.springframework.security.vote.UnanimousBasedTests.makeTestTokenWithFooBarPrefix()
2795 - Declaração do método: org.springframework.security.vote.UnanimousBasedTests.setUp()
2795 - Declaração do método: org.springframework.security.vote.UnanimousBasedTests.testOneAffirmativeVoteOneDenyVoteOneAbstainVoteDeniesAccess()
Métodos invocados: 
org.springframework.security.vote.UnanimousBasedTests.makeTestToken()
org.springframework.security.vote.UnanimousBasedTests.makeDecisionManager()
org.springframework.security.vote.UnanimousBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2796 - Declaração do método: org.springframework.security.vote.UnanimousBasedTests.testOneAffirmativeVoteTwoAbstainVotesGrantsAccess()
Métodos invocados: 
org.springframework.security.vote.UnanimousBasedTests.makeTestToken()
org.springframework.security.vote.UnanimousBasedTests.makeDecisionManager()
org.springframework.security.vote.UnanimousBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertTrue(Z)
2797 - Declaração do método: org.springframework.security.vote.UnanimousBasedTests.testOneDenyVoteTwoAbstainVotesDeniesAccess()
Métodos invocados: 
org.springframework.security.vote.UnanimousBasedTests.makeTestToken()
org.springframework.security.vote.UnanimousBasedTests.makeDecisionManager()
org.springframework.security.vote.UnanimousBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2798 - Declaração do método: org.springframework.security.vote.UnanimousBasedTests.testRoleVoterPrefixObserved()
Métodos invocados: 
org.springframework.security.vote.UnanimousBasedTests.makeTestTokenWithFooBarPrefix()
org.springframework.security.vote.UnanimousBasedTests.makeDecisionManagerWithFooBarPrefix()
org.springframework.security.vote.UnanimousBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertTrue(Z)
2799 - Declaração do método: org.springframework.security.vote.UnanimousBasedTests.testThreeAbstainVotesDeniesAccessWithDefault()
Métodos invocados: 
org.springframework.security.vote.UnanimousBasedTests.makeTestToken()
org.springframework.security.vote.UnanimousBasedTests.makeDecisionManager()
org.springframework.security.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.vote.UnanimousBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2800 - Declaração do método: org.springframework.security.vote.UnanimousBasedTests.testThreeAbstainVotesGrantsAccessWithoutDefault()
Métodos invocados: 
org.springframework.security.vote.UnanimousBasedTests.makeTestToken()
org.springframework.security.vote.UnanimousBasedTests.makeDecisionManager()
org.springframework.security.vote.AbstractAccessDecisionManager.setAllowIfAllAbstainDecisions(Z)
org.springframework.security.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.vote.UnanimousBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertTrue(Z)
2801 - Declaração do método: org.springframework.security.vote.UnanimousBasedTests.testTwoAffirmativeVotesTwoAbstainVotesGrantsAccess()
Métodos invocados: 
org.springframework.security.vote.UnanimousBasedTests.makeTestToken()
org.springframework.security.vote.UnanimousBasedTests.makeDecisionManager()
org.springframework.security.vote.UnanimousBased.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertTrue(Z)
2802 - Declaração do método: org.springframework.security.vote.SampleServiceImpl.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
Métodos invocados: 
org.apache.log4j.Category.isDebugEnabled()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.apache.log4j.Category.debug(java.lang.Object)
org.apache.log4j.Category.isDebugEnabled()
org.apache.log4j.Category.debug(java.lang.Object)
org.apache.log4j.Category.isDebugEnabled()
org.apache.log4j.Category.debug(java.lang.Object)
2803 - Declaração do método: org.springframework.security.vote.SampleServiceImpl.getTheSampleData()
Métodos invocados: 
org.apache.log4j.Category.isDebugEnabled()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
java.security.Principal.getName()
org.apache.log4j.Category.debug(java.lang.Object)
org.springframework.security.vote.SampleBlockOfData.setId(java.lang.String)
org.springframework.security.vote.SampleBlockOfData.setSomeData(java.lang.String)
java.util.List.add(java.lang.Object)
org.springframework.security.vote.SampleBlockOfData.setId(java.lang.String)
org.springframework.security.vote.SampleBlockOfData.setSomeData(java.lang.String)
java.util.List.add(java.lang.Object)
org.springframework.security.vote.SampleBlockOfData.setId(java.lang.String)
org.springframework.security.vote.SampleBlockOfData.setSomeData(java.lang.String)
java.util.List.add(java.lang.Object)
2804 - Declaração do método: org.springframework.security.vote.LabelBasedAclVoterTests.getConfigLocations()
2804 - Declaração do método: org.springframework.security.vote.LabelBasedAclVoterTests.getSampleService()
2804 - Declaração do método: org.springframework.security.vote.LabelBasedAclVoterTests.setSampleService(org.springframework.security.vote.SampleService)
2804 - Declaração do método: org.springframework.security.vote.LabelBasedAclVoterTests.setupContext(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
2805 - Declaração do método: org.springframework.security.vote.LabelBasedAclVoterTests.testDoingSomethingForBlueUser()
Métodos invocados: 
org.springframework.security.vote.LabelBasedAclVoterTests.setupContext(java.lang.String, java.lang.String)
org.springframework.security.vote.SampleService.getTheSampleData()
junit.framework.Assert.assertNotNull(java.lang.Object)
java.util.List.get(I)
java.util.List.get(I)
java.util.List.get(I)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
2806 - Declaração do método: org.springframework.security.vote.LabelBasedAclVoterTests.testDoingSomethingForMultiUser()
Métodos invocados: 
org.springframework.security.vote.LabelBasedAclVoterTests.setupContext(java.lang.String, java.lang.String)
org.springframework.security.vote.SampleService.getTheSampleData()
junit.framework.Assert.assertNotNull(java.lang.Object)
java.util.List.get(I)
java.util.List.get(I)
java.util.List.get(I)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
2807 - Declaração do método: org.springframework.security.vote.LabelBasedAclVoterTests.testDoingSomethingForOrangeUser()
Métodos invocados: 
org.springframework.security.vote.LabelBasedAclVoterTests.setupContext(java.lang.String, java.lang.String)
org.springframework.security.vote.SampleService.getTheSampleData()
junit.framework.Assert.assertNotNull(java.lang.Object)
java.util.List.get(I)
java.util.List.get(I)
java.util.List.get(I)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
2808 - Declaração do método: org.springframework.security.vote.LabelBasedAclVoterTests.testDoingSomethingForSuperUser()
Métodos invocados: 
org.springframework.security.vote.LabelBasedAclVoterTests.setupContext(java.lang.String, java.lang.String)
org.springframework.security.vote.SampleService.getTheSampleData()
junit.framework.Assert.assertNotNull(java.lang.Object)
java.util.List.get(I)
java.util.List.get(I)
java.util.List.get(I)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
org.springframework.security.vote.SampleService.doSomethingOnThis(org.springframework.security.vote.SampleBlockOfData, org.springframework.security.vote.SampleBlockOfData)
2809 - Declaração do método: org.springframework.security.vote.LabelBasedAclVoterTests.testSampleBlockOfDataPOJO()
Métodos invocados: 
org.springframework.security.vote.SampleBlockOfData.setId(java.lang.String)
org.springframework.security.vote.SampleBlockOfData.getId()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2810 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.BasicAclEntryVoterTests()
2810 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.BasicAclEntryVoterTests(java.lang.String)
2810 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.getMethodInvocation(org.springframework.security.vote.SomeDomainObject)
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
2811 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2812 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.setUp()
2812 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.testNormalOperation()
Métodos invocados: 
org.springframework.security.vote.BasicAclEntryVoter.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.vote.BasicAclEntryVoter.getAclManager()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.vote.BasicAclEntryVoter.setProcessConfigAttribute(java.lang.String)
org.springframework.security.vote.BasicAclEntryVoter.getProcessConfigAttribute()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.vote.BasicAclEntryVoter.setRequirePermission([I)
org.springframework.security.vote.BasicAclEntryVoter.getRequirePermission()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.vote.AbstractAclVoter.setProcessDomainObjectClass(java.lang.Class)
org.springframework.security.vote.AbstractAclVoter.getProcessDomainObjectClass()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.vote.BasicAclEntryVoter.afterPropertiesSet()
org.springframework.security.vote.BasicAclEntryVoterTests.getMethodInvocation(org.springframework.security.vote.SomeDomainObject)
org.springframework.security.vote.BasicAclEntryVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertEquals(I, I)
2813 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.testOnlySupportsMethodInvocationAndJoinPoint()
Métodos invocados: 
org.springframework.security.vote.AbstractAclVoter.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.vote.AbstractAclVoter.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.vote.AbstractAclVoter.supports(java.lang.Class)
junit.framework.Assert.assertFalse(Z)
2814 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.testStartupRejectsMissingAclManager()
Métodos invocados: 
org.springframework.security.vote.BasicAclEntryVoter.setProcessConfigAttribute(java.lang.String)
org.springframework.security.vote.BasicAclEntryVoter.setRequirePermission([I)
org.springframework.security.vote.AbstractAclVoter.setProcessDomainObjectClass(java.lang.Class)
org.springframework.security.vote.BasicAclEntryVoter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2815 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.testStartupRejectsMissingProcessConfigAttribute()
Métodos invocados: 
org.springframework.security.vote.BasicAclEntryVoter.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.vote.BasicAclEntryVoter.setRequirePermission([I)
org.springframework.security.vote.AbstractAclVoter.setProcessDomainObjectClass(java.lang.Class)
org.springframework.security.vote.BasicAclEntryVoter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2816 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.testStartupRejectsMissingProcessDomainObjectClass()
Métodos invocados: 
org.springframework.security.vote.AbstractAclVoter.setProcessDomainObjectClass(java.lang.Class)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2817 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.testStartupRejectsMissingRequirePermission()
Métodos invocados: 
org.springframework.security.vote.BasicAclEntryVoter.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.vote.BasicAclEntryVoter.setProcessConfigAttribute(java.lang.String)
org.springframework.security.vote.AbstractAclVoter.setProcessDomainObjectClass(java.lang.Class)
org.springframework.security.vote.BasicAclEntryVoter.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2818 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.testSupportsConfigAttribute()
Métodos invocados: 
org.springframework.security.vote.BasicAclEntryVoter.setProcessConfigAttribute(java.lang.String)
org.springframework.security.vote.BasicAclEntryVoter.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
2819 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.testVoterAbstainsIfDomainObjectIsNull()
Métodos invocados: 
org.springframework.security.vote.BasicAclEntryVoter.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.vote.BasicAclEntryVoter.setProcessConfigAttribute(java.lang.String)
org.springframework.security.vote.BasicAclEntryVoter.setRequirePermission([I)
org.springframework.security.vote.AbstractAclVoter.setProcessDomainObjectClass(java.lang.Class)
org.springframework.security.vote.BasicAclEntryVoter.afterPropertiesSet()
org.springframework.security.vote.BasicAclEntryVoterTests.getMethodInvocation(org.springframework.security.vote.SomeDomainObject)
org.springframework.security.vote.BasicAclEntryVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertEquals(I, I)
2820 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.testVoterAbstainsIfNotMatchingConfigAttribute()
Métodos invocados: 
org.springframework.security.vote.BasicAclEntryVoter.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.vote.BasicAclEntryVoter.setProcessConfigAttribute(java.lang.String)
org.springframework.security.vote.BasicAclEntryVoter.setRequirePermission([I)
org.springframework.security.vote.AbstractAclVoter.setProcessDomainObjectClass(java.lang.Class)
org.springframework.security.vote.BasicAclEntryVoter.afterPropertiesSet()
org.springframework.security.vote.BasicAclEntryVoterTests.getMethodInvocation(org.springframework.security.vote.SomeDomainObject)
org.springframework.security.vote.BasicAclEntryVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertEquals(I, I)
2821 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.testVoterCanDenyAccessBasedOnInternalMethodOfDomainObject()
Métodos invocados: 
org.springframework.security.vote.SomeDomainObject.getParent()
org.springframework.security.vote.BasicAclEntryVoter.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.vote.BasicAclEntryVoter.setProcessConfigAttribute(java.lang.String)
org.springframework.security.vote.BasicAclEntryVoter.setRequirePermission([I)
org.springframework.security.vote.AbstractAclVoter.setProcessDomainObjectClass(java.lang.Class)
org.springframework.security.vote.BasicAclEntryVoter.setInternalMethod(java.lang.String)
org.springframework.security.vote.BasicAclEntryVoter.afterPropertiesSet()
org.springframework.security.vote.BasicAclEntryVoterTests.getMethodInvocation(org.springframework.security.vote.SomeDomainObject)
org.springframework.security.vote.BasicAclEntryVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertEquals(I, I)
2822 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.testVoterCanDenyAccessIfPrincipalHasNoPermissionsAtAllToDomainObject()
Métodos invocados: 
org.springframework.security.vote.BasicAclEntryVoter.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.vote.BasicAclEntryVoter.setProcessConfigAttribute(java.lang.String)
org.springframework.security.vote.BasicAclEntryVoter.setRequirePermission([I)
org.springframework.security.vote.AbstractAclVoter.setProcessDomainObjectClass(java.lang.Class)
org.springframework.security.vote.BasicAclEntryVoter.setInternalMethod(java.lang.String)
org.springframework.security.vote.BasicAclEntryVoter.afterPropertiesSet()
org.springframework.security.vote.BasicAclEntryVoterTests.getMethodInvocation(org.springframework.security.vote.SomeDomainObject)
org.springframework.security.vote.BasicAclEntryVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertEquals(I, I)
2823 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.testVoterCanGrantAccessBasedOnInternalMethodOfDomainObject()
Métodos invocados: 
org.springframework.security.vote.SomeDomainObject.getParent()
org.springframework.security.vote.BasicAclEntryVoter.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.vote.BasicAclEntryVoter.setProcessConfigAttribute(java.lang.String)
org.springframework.security.vote.BasicAclEntryVoter.setRequirePermission([I)
org.springframework.security.vote.AbstractAclVoter.setProcessDomainObjectClass(java.lang.Class)
org.springframework.security.vote.BasicAclEntryVoter.setInternalMethod(java.lang.String)
org.springframework.security.vote.BasicAclEntryVoter.getInternalMethod()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.vote.BasicAclEntryVoter.afterPropertiesSet()
org.springframework.security.vote.BasicAclEntryVoterTests.getMethodInvocation(org.springframework.security.vote.SomeDomainObject)
org.springframework.security.vote.BasicAclEntryVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.assertEquals(I, I)
2824 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.testVoterThrowsExceptionIfInvalidInternalMethodOfDomainObject()
Métodos invocados: 
org.springframework.security.vote.SomeDomainObject.getParent()
org.springframework.security.vote.BasicAclEntryVoter.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.vote.BasicAclEntryVoter.setProcessConfigAttribute(java.lang.String)
org.springframework.security.vote.BasicAclEntryVoter.setRequirePermission([I)
org.springframework.security.vote.AbstractAclVoter.setProcessDomainObjectClass(java.lang.Class)
org.springframework.security.vote.BasicAclEntryVoter.setInternalMethod(java.lang.String)
org.springframework.security.vote.BasicAclEntryVoter.afterPropertiesSet()
org.springframework.security.vote.BasicAclEntryVoterTests.getMethodInvocation(org.springframework.security.vote.SomeDomainObject)
org.springframework.security.vote.BasicAclEntryVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2825 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.testVoterThrowsExceptionIfProcessDomainObjectNotFound()
Métodos invocados: 
org.springframework.security.vote.SomeDomainObject.getParent()
org.springframework.security.vote.BasicAclEntryVoter.setAclManager(org.springframework.security.acl.AclManager)
org.springframework.security.vote.BasicAclEntryVoter.setProcessConfigAttribute(java.lang.String)
org.springframework.security.vote.BasicAclEntryVoter.setRequirePermission([I)
org.springframework.security.vote.AbstractAclVoter.setProcessDomainObjectClass(java.lang.Class)
org.springframework.security.vote.BasicAclEntryVoter.afterPropertiesSet()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.vote.BasicAclEntryVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2826 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.testSetRequirePermissionFromString()
Métodos invocados: 
org.springframework.security.vote.BasicAclEntryVoterTests.assertPermission(java.lang.String, I)
org.springframework.security.vote.BasicAclEntryVoterTests.assertPermission(java.lang.String, I)
org.springframework.security.vote.BasicAclEntryVoterTests.assertPermission(java.lang.String, I)
org.springframework.security.vote.BasicAclEntryVoterTests.assertPermission(java.lang.String, I)
org.springframework.security.vote.BasicAclEntryVoterTests.assertPermission(java.lang.String, I)
org.springframework.security.vote.BasicAclEntryVoterTests.assertPermission(java.lang.String, I)
org.springframework.security.vote.BasicAclEntryVoterTests.assertPermission([Ljava.lang.String;, [I)
2827 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.testSetRequirePermissionFromStringWrongValues()
Métodos invocados: 
org.springframework.security.vote.BasicAclEntryVoter.setRequirePermissionFromString([Ljava.lang.String;)
java.lang.Class.getName()
junit.framework.Assert.fail(java.lang.String)
2828 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.assertPermission(java.lang.String, I)
Métodos invocados: 
org.springframework.security.vote.BasicAclEntryVoterTests.assertPermission([Ljava.lang.String;, [I)
2829 - Declaração do método: org.springframework.security.vote.BasicAclEntryVoterTests.assertPermission([Ljava.lang.String;, [I)
Métodos invocados: 
org.springframework.security.vote.BasicAclEntryVoter.setRequirePermissionFromString([Ljava.lang.String;)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.springframework.security.vote.BasicAclEntryVoter.getRequirePermission()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.vote.BasicAclEntryVoter.getRequirePermission()
junit.framework.Assert.assertEquals(I, I)
2830 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManagerTests.AbstractAccessDecisionManagerTests()
2830 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManagerTests.AbstractAccessDecisionManagerTests(java.lang.String)
2830 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManagerTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
2831 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManagerTests.setUp()
2831 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManagerTests.testAllowIfAccessDecisionManagerDefaults()
Métodos invocados: 
org.springframework.security.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.vote.AbstractAccessDecisionManager.setAllowIfAllAbstainDecisions(Z)
org.springframework.security.vote.AbstractAccessDecisionManager.isAllowIfAllAbstainDecisions()
junit.framework.Assert.assertTrue(Z)
2832 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManagerTests.testDelegatesSupportsClassRequests()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
java.lang.Object.getClass()
org.springframework.security.vote.AbstractAccessDecisionManager.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
java.lang.Object.getClass()
org.springframework.security.vote.AbstractAccessDecisionManager.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
2833 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManagerTests.testDelegatesSupportsRequests()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
org.springframework.security.vote.AbstractAccessDecisionManager.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.vote.AbstractAccessDecisionManager.supports(org.springframework.security.ConfigAttribute)
junit.framework.Assert.assertTrue(Z)
2834 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManagerTests.testProperlyStoresListOfVoters()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
java.util.List.size()
org.springframework.security.vote.AbstractAccessDecisionManager.getDecisionVoters()
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
2835 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManagerTests.testRejectsEmptyList()
Métodos invocados: 
org.springframework.security.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2836 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManagerTests.testRejectsListContainingInvalidObjectTypes()
Métodos invocados: 
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
java.util.List.add(java.lang.Object)
org.springframework.security.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2837 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManagerTests.testRejectsNullVotersList()
Métodos invocados: 
org.springframework.security.vote.AbstractAccessDecisionManager.setDecisionVoters(java.util.List)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2838 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManagerTests.testRoleVoterAlwaysReturnsTrueToSupports()
Métodos invocados: 
org.springframework.security.vote.RoleVoter.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
2839 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManagerTests.testWillNotStartIfDecisionVotersNotSet()
Métodos invocados: 
org.springframework.security.vote.AbstractAccessDecisionManager.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2840 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManagerTests$MockDecisionManagerImpl.decide(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
2840 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManagerTests$MockStringOnlyVoter.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
2841 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManagerTests$MockStringOnlyVoter.supports(org.springframework.security.ConfigAttribute)
2841 - Declaração do método: org.springframework.security.vote.AbstractAccessDecisionManagerTests$MockStringOnlyVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
2841 - Declaração do método: org.springframework.security.vote.DenyAgainVoter.supports(org.springframework.security.ConfigAttribute)
Métodos invocados: 
org.springframework.security.ConfigAttribute.getAttribute()
java.lang.String.equals(java.lang.Object)
2842 - Declaração do método: org.springframework.security.vote.DenyAgainVoter.supports(java.lang.Class)
2842 - Declaração do método: org.springframework.security.vote.DenyAgainVoter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.vote.DenyAgainVoter.supports(org.springframework.security.ConfigAttribute)
2843 - Declaração do método: org.springframework.security.vote.SampleBlockOfData.getId()
2843 - Declaração do método: org.springframework.security.vote.SampleBlockOfData.getLabel()
2843 - Declaração do método: org.springframework.security.vote.SampleBlockOfData.getSomeData()
2843 - Declaração do método: org.springframework.security.vote.SampleBlockOfData.setId(java.lang.String)
2843 - Declaração do método: org.springframework.security.vote.SampleBlockOfData.setSomeData(java.lang.String)
2843 - Declaração do método: org.springframework.security.vote.SampleBlockOfData.toString()
2843 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapperTests.SecurityContextHolderAwareRequestWrapperTests()
2843 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapperTests.SecurityContextHolderAwareRequestWrapperTests(java.lang.String)
2843 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapperTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
2844 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapperTests.testCorrectOperationWithStringBasedPrincipal()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.getRemoteUser()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.getUserPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2845 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapperTests.testUseOfRolePrefixMeansItIsntNeededWhenCallngIsUserInRole()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertTrue(Z)
2846 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapperTests.testCorrectOperationWithUserDetailsBasedPrincipal()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.getRemoteUser()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.getUserPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2847 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapperTests.testRoleIsntHeldIfAuthenticationIsNull()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.getRemoteUser()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.getUserPrincipal()
junit.framework.Assert.assertNull(java.lang.Object)
2848 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapperTests.testRolesArentHeldIfAuthenticationPrincipalIsNull()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.mock.web.MockHttpServletRequest.setRequestURI(java.lang.String)
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.getRemoteUser()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.isUserInRole(java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.wrapper.SecurityContextHolderAwareRequestWrapper.getUserPrincipal()
junit.framework.Assert.assertNull(java.lang.Object)
2849 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilterTests.SecurityContextHolderAwareRequestFilterTests()
2849 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilterTests.SecurityContextHolderAwareRequestFilterTests(java.lang.String)
2849 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilterTests.setUp()
2849 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilterTests.testCorrectOperation()
Métodos invocados: 
org.springframework.security.ui.SpringSecurityFilter.init(javax.servlet.FilterConfig)
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.ui.SpringSecurityFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)
org.springframework.security.ui.SpringSecurityFilter.destroy()
2850 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilterTests$MockFilterChain.MockFilterChain(java.lang.Class)
2850 - Declaração do método: org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilterTests$MockFilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
java.lang.Object.getClass()
junit.framework.Assert.fail(java.lang.String)
2851 - Declaração do método: org.springframework.security.annotation.Jsr250Voter.supports(org.springframework.security.ConfigAttribute)
2851 - Declaração do método: org.springframework.security.annotation.Jsr250Voter.supports(java.lang.Class)
2851 - Declaração do método: org.springframework.security.annotation.Jsr250Voter.vote(org.springframework.security.Authentication, java.lang.Object, org.springframework.security.ConfigAttributeDefinition)
Métodos invocados: 
org.springframework.security.ConfigAttributeDefinition.getConfigAttributes()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.SecurityConfig.equals(java.lang.Object)
org.springframework.security.SecurityConfig.equals(java.lang.Object)
org.springframework.security.annotation.Jsr250Voter.supports(org.springframework.security.ConfigAttribute)
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.ConfigAttribute.getAttribute()
org.springframework.security.GrantedAuthority.getAuthority()
java.lang.String.equals(java.lang.Object)
2852 - Declaração do método: org.springframework.security.annotation.SecurityAnnotationAttributes.getAttributes(java.lang.Class)
Métodos invocados: 
java.lang.Class.getAnnotations()
org.springframework.security.annotation.Secured.value()
java.util.Set.add(org.springframework.security.SecurityConfig)
2853 - Declaração do método: org.springframework.security.annotation.SecurityAnnotationAttributes.getAttributes(java.lang.reflect.Method)
Métodos invocados: 
org.springframework.core.annotation.AnnotationUtils.getAnnotations(java.lang.reflect.Method)
org.springframework.security.annotation.Secured.value()
java.util.Set.add(org.springframework.security.SecurityConfig)
2854 - Declaração do método: org.springframework.security.annotation.SecurityAnnotationAttributes.getAttributes(java.lang.Class, java.lang.Class)
2854 - Declaração do método: org.springframework.security.annotation.SecurityAnnotationAttributes.getAttributes(java.lang.reflect.Method, java.lang.Class)
2854 - Declaração do método: org.springframework.security.annotation.SecurityAnnotationAttributes.getAttributes(java.lang.reflect.Field)
2854 - Declaração do método: org.springframework.security.annotation.SecurityAnnotationAttributes.getAttributes(java.lang.reflect.Field, java.lang.Class)
2854 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributes.getAttributes(java.lang.Class)
2854 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributes.getAttributes(java.lang.reflect.Method)
Métodos invocados: 
org.springframework.core.annotation.AnnotationUtils.getAnnotation(java.lang.reflect.Method, java.lang.Class)
java.util.ArrayList.add(org.springframework.security.SecurityConfig)
org.springframework.core.annotation.AnnotationUtils.getAnnotation(java.lang.reflect.Method, java.lang.Class)
java.util.ArrayList.add(org.springframework.security.SecurityConfig)
org.springframework.core.annotation.AnnotationUtils.getAnnotation(java.lang.reflect.Method, java.lang.Class)
javax.annotation.security.RolesAllowed.value()
java.util.ArrayList.add(org.springframework.security.SecurityConfig)
java.lang.reflect.Method.getDeclaringClass()
java.lang.Class.getAnnotation(java.lang.Class)
java.util.ArrayList.add(org.springframework.security.SecurityConfig)
java.lang.reflect.Method.getDeclaringClass()
java.lang.Class.getAnnotation(java.lang.Class)
java.util.ArrayList.add(org.springframework.security.SecurityConfig)
java.lang.reflect.Method.getDeclaringClass()
java.lang.Class.getAnnotation(java.lang.Class)
javax.annotation.security.RolesAllowed.value()
java.util.ArrayList.add(org.springframework.security.SecurityConfig)
2855 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributes.populateSecurityConfigWithRolesAllowed([Ljava.lang.annotation.Annotation;)
Métodos invocados: 
javax.annotation.security.RolesAllowed.value()
java.util.Set.add(org.springframework.security.SecurityConfig)
2856 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributes.getAttributes(java.lang.Class, java.lang.Class)
2856 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributes.getAttributes(java.lang.reflect.Method, java.lang.Class)
2856 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributes.getAttributes(java.lang.reflect.Field)
2856 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributes.getAttributes(java.lang.reflect.Field, java.lang.Class)
2856 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityConfig.Jsr250SecurityConfig(java.lang.String)
2856 - Declaração do método: org.springframework.security.annotation.BusinessServiceImpl.someUserMethod1()
2856 - Declaração do método: org.springframework.security.annotation.BusinessServiceImpl.someUserMethod2()
2856 - Declaração do método: org.springframework.security.annotation.BusinessServiceImpl.someUserAndAdminMethod()
2856 - Declaração do método: org.springframework.security.annotation.BusinessServiceImpl.someAdminMethod()
2856 - Declaração do método: org.springframework.security.annotation.BusinessServiceImpl.someUserMethod3(org.springframework.security.annotation.BusinessServiceImpl$E)
2856 - Declaração do método: org.springframework.security.annotation.BusinessServiceImpl.someOther(I)
2856 - Declaração do método: org.springframework.security.annotation.DepartmentServiceImpl.someUserMethod3(org.springframework.security.annotation.Department)
2856 - Declaração do método: org.springframework.security.annotation.BusinessService.someAdminMethod()
2856 - Declaração do método: org.springframework.security.annotation.BusinessService.someUserAndAdminMethod()
2856 - Declaração do método: org.springframework.security.annotation.BusinessService.someUserMethod1()
2856 - Declaração do método: org.springframework.security.annotation.BusinessService.someUserMethod2()
2856 - Declaração do método: org.springframework.security.annotation.BusinessService.someOther(I)
2856 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributesTests.methodWithRolesAllowedHasCorrectAttribute()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.annotation.Jsr250SecurityAnnotationAttributes.getAttributes(java.lang.reflect.Method)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.springframework.security.SecurityConfig.getAttribute()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2857 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributesTests.permitAllMethodHasPermitAllAttribute()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.annotation.Jsr250SecurityAnnotationAttributes.getAttributes(java.lang.reflect.Method)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.springframework.security.SecurityConfig.getAttribute()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2858 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributesTests.noRoleMethodHasDenyAllAttributeWithDenyAllClass()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.annotation.Jsr250SecurityAnnotationAttributes.getAttributes(java.lang.reflect.Method)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.springframework.security.SecurityConfig.getAttribute()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2859 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributesTests.adminMethodHasAdminAttributeWithDenyAllClass()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.annotation.Jsr250SecurityAnnotationAttributes.getAttributes(java.lang.reflect.Method)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.springframework.security.SecurityConfig.getAttribute()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2860 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributesTests.noRoleMethodHasNoAttributes()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.annotation.Jsr250SecurityAnnotationAttributes.getAttributes(java.lang.reflect.Method)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
2861 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributesTests.classRoleIsAppliedToNoRoleMethod()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.annotation.Jsr250SecurityAnnotationAttributes.getAttributes(java.lang.reflect.Method)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.springframework.security.SecurityConfig.getAttribute()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2862 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributesTests.methodRoleOverridesClassRole()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.annotation.Jsr250SecurityAnnotationAttributes.getAttributes(java.lang.reflect.Method)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
java.util.List.get(I)
org.springframework.security.SecurityConfig.getAttribute()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
2863 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributesTests$A.noRoleMethod()
2863 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributesTests$A.adminMethod()
2863 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributesTests$A.permitAllMethod()
2863 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributesTests$UserAllowedClass.noRoleMethod()
2863 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributesTests$UserAllowedClass.adminMethod()
2863 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributesTests$DenyAllClass.noRoleMethod()
2863 - Declaração do método: org.springframework.security.annotation.Jsr250SecurityAnnotationAttributesTests$DenyAllClass.adminMethod()
2863 - Declaração do método: org.springframework.security.annotation.DepartmentService.someUserMethod3(org.springframework.security.annotation.Department)
2863 - Declaração do método: org.springframework.security.annotation.Department.Department(java.lang.String)
2863 - Declaração do método: org.springframework.security.annotation.Department.isActive()
2863 - Declaração do método: org.springframework.security.annotation.Department.deactive()
2863 - Declaração do método: org.springframework.security.annotation.Jsr250BusinessServiceImpl.someUserMethod1()
2863 - Declaração do método: org.springframework.security.annotation.Jsr250BusinessServiceImpl.someUserMethod2()
2863 - Declaração do método: org.springframework.security.annotation.Jsr250BusinessServiceImpl.someUserAndAdminMethod()
2863 - Declaração do método: org.springframework.security.annotation.Jsr250BusinessServiceImpl.someAdminMethod()
2863 - Declaração do método: org.springframework.security.annotation.Jsr250BusinessServiceImpl.someOther(I)
2863 - Declaração do método: org.springframework.security.annotation.Entity.Entity(java.lang.String)
2863 - Declaração do método: org.springframework.security.annotation.SecurityAnnotationAttributesTests.setUp()
2863 - Declaração do método: org.springframework.security.annotation.SecurityAnnotationAttributesTests.testGenericsSuperclassDeclarationsAreIncludedWhenSubclassesOverride()
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
org.springframework.metadata.Attributes.getAttributes(java.lang.reflect.Method)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.util.Collection.size()
junit.framework.Assert.assertTrue(java.lang.String, Z)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.SecurityConfig.getAttribute()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
java.io.PrintStream.println(java.lang.Object)
org.springframework.metadata.Attributes.getAttributes(java.lang.reflect.Method)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
junit.framework.Assert.assertNotNull(java.lang.Object)
2864 - Declaração do método: org.springframework.security.annotation.SecurityAnnotationAttributesTests.testGetAttributesClass()
Métodos invocados: 
org.springframework.metadata.Attributes.getAttributes(java.lang.Class)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.util.Collection.size()
junit.framework.Assert.assertTrue(Z)
java.util.Collection.iterator()
java.util.Iterator.next()
org.springframework.security.SecurityConfig.getAttribute()
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
2865 - Declaração do método: org.springframework.security.annotation.SecurityAnnotationAttributesTests.testGetAttributesClassClass()
Métodos invocados: 
org.springframework.metadata.Attributes.getAttributes(java.lang.Class, java.lang.Class)
junit.framework.Assert.fail(java.lang.String)
2866 - Declaração do método: org.springframework.security.annotation.SecurityAnnotationAttributesTests.testGetAttributesField()
Métodos invocados: 
org.springframework.metadata.Attributes.getAttributes(java.lang.reflect.Field)
junit.framework.Assert.fail(java.lang.String)
2867 - Declaração do método: org.springframework.security.annotation.SecurityAnnotationAttributesTests.testGetAttributesFieldClass()
Métodos invocados: 
org.springframework.metadata.Attributes.getAttributes(java.lang.reflect.Field, java.lang.Class)
junit.framework.Assert.fail(java.lang.String)
2868 - Declaração do método: org.springframework.security.annotation.SecurityAnnotationAttributesTests.testGetAttributesMethod()
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
org.springframework.metadata.Attributes.getAttributes(java.lang.reflect.Method)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.util.Collection.size()
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.SecurityConfig.getAttribute()
java.lang.String.equals(java.lang.Object)
org.springframework.security.SecurityConfig.getAttribute()
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
2869 - Declaração do método: org.springframework.security.annotation.SecurityAnnotationAttributesTests.testGetAttributesMethodClass()
Métodos invocados: 
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
junit.framework.Assert.fail(java.lang.String)
org.springframework.metadata.Attributes.getAttributes(java.lang.reflect.Method, java.lang.Class)
junit.framework.Assert.fail(java.lang.String)
2870 - Declaração do método: org.springframework.security.annotation.MethodDefinitionSourceEditorTigerTests.testConcreteClassInvocationsAlsoReturnDefinitionsAgainstInterface()
Métodos invocados: 
org.springframework.security.intercept.method.MethodDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.method.MethodDefinitionMap.getMethodMapSize()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2871 - Declaração do método: org.springframework.security.annotation.MethodDefinitionSourceEditorTigerTests.testGenericsSuperclassDeclarationsAreIncludedWhenSubclassesOverride()
Métodos invocados: 
org.springframework.security.intercept.method.MethodDefinitionSourceEditor.setAsText(java.lang.String)
java.beans.PropertyEditorSupport.getValue()
org.springframework.security.intercept.method.MethodDefinitionMap.getMethodMapSize()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.intercept.method.AbstractMethodDefinitionSource.getAttributes(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2872 - Declaração do método: org.springframework.security.annotation.MethodDefinitionSourceEditorTigerTests$MockMethodInvocation.MockMethodInvocation(java.lang.Class, java.lang.String, [Ljava.lang.Class;)
Métodos invocados: 
java.io.PrintStream.println(java.lang.String)
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
2873 - Declaração do método: org.springframework.security.annotation.MethodDefinitionSourceEditorTigerTests$MockMethodInvocation.getArguments()
2873 - Declaração do método: org.springframework.security.annotation.MethodDefinitionSourceEditorTigerTests$MockMethodInvocation.getMethod()
2873 - Declaração do método: org.springframework.security.annotation.MethodDefinitionSourceEditorTigerTests$MockMethodInvocation.getStaticPart()
2873 - Declaração do método: org.springframework.security.annotation.MethodDefinitionSourceEditorTigerTests$MockMethodInvocation.getThis()
2873 - Declaração do método: org.springframework.security.annotation.MethodDefinitionSourceEditorTigerTests$MockMethodInvocation.proceed()
2873 - Declaração do método: org.springframework.security.annotation.test.OrganisationService.deactive(org.springframework.security.annotation.test.Organisation)
2873 - Declaração do método: org.springframework.security.annotation.test.Entity.Entity(java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
2874 - Declaração do método: org.springframework.security.annotation.test.Entity.getInfo()
2874 - Declaração do método: org.springframework.security.annotation.test.Entity.makeLowercase()
Métodos invocados: 
java.lang.String.toLowerCase()
2875 - Declaração do método: org.springframework.security.annotation.test.Entity.makeUppercase()
Métodos invocados: 
java.lang.String.toUpperCase()
2876 - Declaração do método: org.springframework.security.annotation.test.Organisation.Organisation(java.lang.String)
2876 - Declaração do método: org.springframework.security.annotation.test.Organisation.deactive()
2876 - Declaração do método: org.springframework.security.annotation.test.Organisation.isActive()
2876 - Declaração do método: org.springframework.security.annotation.test.PersonService.deactive(org.springframework.security.annotation.test.Person)
2876 - Declaração do método: org.springframework.security.annotation.test.Service.countElements(java.util.Collection)
2876 - Declaração do método: org.springframework.security.annotation.test.Service.makeLowerCase(org.springframework.security.annotation.test.Service$E)
2876 - Declaração do método: org.springframework.security.annotation.test.Service.makeUpperCase(org.springframework.security.annotation.test.Service$E)
2876 - Declaração do método: org.springframework.security.annotation.test.Service.publicMakeLowerCase(org.springframework.security.annotation.test.Service$E)
2876 - Declaração do método: org.springframework.security.annotation.test.OrganisationServiceImpl.deactive(org.springframework.security.annotation.test.Organisation)
Métodos invocados: 
org.springframework.security.annotation.test.Organisation.deactive()
2877 - Declaração do método: org.springframework.security.annotation.test.PersonServiceImpl.deactive(org.springframework.security.annotation.test.Person)
Métodos invocados: 
org.springframework.security.annotation.test.Person.deactive()
2878 - Declaração do método: org.springframework.security.annotation.test.Person.Person(java.lang.String)
2878 - Declaração do método: org.springframework.security.annotation.test.Person.deactive()
2878 - Declaração do método: org.springframework.security.annotation.test.Person.isActive()
2878 - Declaração do método: org.springframework.security.annotation.test.ServiceImpl.countElements(java.util.Collection)
2878 - Declaração do método: org.springframework.security.annotation.test.ServiceImpl.makeLowerCase(org.springframework.security.annotation.test.ServiceImpl$E)
Métodos invocados: 
org.springframework.security.annotation.test.Entity.makeLowercase()
2879 - Declaração do método: org.springframework.security.annotation.test.ServiceImpl.makeUpperCase(org.springframework.security.annotation.test.ServiceImpl$E)
Métodos invocados: 
org.springframework.security.annotation.test.Entity.makeUppercase()
2880 - Declaração do método: org.springframework.security.annotation.test.ServiceImpl.publicMakeLowerCase(org.springframework.security.annotation.test.ServiceImpl$E)
Métodos invocados: 
org.springframework.security.annotation.test.Entity.makeUppercase()
2881 - Declaração do método: org.springframework.security.config.Jsr250AnnotationDrivenBeanDefinitionParserTests.loadContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
2882 - Declaração do método: org.springframework.security.config.Jsr250AnnotationDrivenBeanDefinitionParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
org.springframework.security.context.SecurityContextHolder.clearContext()
2883 - Declaração do método: org.springframework.security.config.Jsr250AnnotationDrivenBeanDefinitionParserTests.targetShouldPreventProtectedMethodInvocationWithNoContext()
Métodos invocados: 
org.springframework.security.annotation.BusinessService.someUserMethod1()
2884 - Declaração do método: org.springframework.security.config.Jsr250AnnotationDrivenBeanDefinitionParserTests.permitAllShouldBeDefaultAttribute()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.annotation.BusinessService.someOther(I)
2885 - Declaração do método: org.springframework.security.config.Jsr250AnnotationDrivenBeanDefinitionParserTests.targetShouldAllowProtectedMethodInvocationWithCorrectRole()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.annotation.BusinessService.someUserMethod1()
2886 - Declaração do método: org.springframework.security.config.Jsr250AnnotationDrivenBeanDefinitionParserTests.targetShouldPreventProtectedMethodInvocationWithIncorrectRole()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.annotation.BusinessService.someAdminMethod()
2887 - Declaração do método: org.springframework.security.config.AnnotationDrivenBeanDefinitionParserTests.loadContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
2888 - Declaração do método: org.springframework.security.config.AnnotationDrivenBeanDefinitionParserTests.closeAppContext()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.close()
org.springframework.security.context.SecurityContextHolder.clearContext()
2889 - Declaração do método: org.springframework.security.config.AnnotationDrivenBeanDefinitionParserTests.targetShouldPreventProtectedMethodInvocationWithNoContext()
Métodos invocados: 
org.springframework.security.annotation.BusinessService.someUserMethod1()
2890 - Declaração do método: org.springframework.security.config.AnnotationDrivenBeanDefinitionParserTests.targetShouldAllowProtectedMethodInvocationWithCorrectRole()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.annotation.BusinessService.someUserMethod1()
2891 - Declaração do método: org.springframework.security.config.AnnotationDrivenBeanDefinitionParserTests.targetShouldPreventProtectedMethodInvocationWithIncorrectRole()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.annotation.BusinessService.someAdminMethod()
2892 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilterEntryPoint.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.hasLength(java.lang.String, java.lang.String)
2893 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilterEntryPoint.setAuthenticationFailureUrl(java.lang.String)
2893 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilterEntryPoint.commence(javax.servlet.ServletRequest, javax.servlet.ServletResponse, org.springframework.security.AuthenticationException)
Métodos invocados: 
org.springframework.security.ui.ntlm.NtlmType2MessageException.preserveAuthentication()
org.springframework.core.NestedRuntimeException.getMessage()
javax.servlet.http.HttpServletResponse.setHeader(java.lang.String, java.lang.String)
javax.servlet.http.HttpServletResponse.setHeader(java.lang.String, java.lang.String)
javax.servlet.http.HttpServletResponse.setStatus(I)
javax.servlet.ServletResponse.setContentLength(I)
javax.servlet.ServletResponse.flushBuffer()
java.lang.String.startsWith(java.lang.String)
java.lang.String.startsWith(java.lang.String)
javax.servlet.http.HttpServletRequest.getContextPath()
javax.servlet.http.HttpServletResponse.encodeRedirectURL(java.lang.String)
javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)
2894 - Declaração do método: org.springframework.security.ui.ntlm.NtlmBeginHandshakeException.NtlmBeginHandshakeException()
2894 - Declaração do método: org.springframework.security.ui.ntlm.NtlmBaseException.NtlmBaseException(java.lang.String)
2894 - Declaração do método: org.springframework.security.ui.ntlm.NtlmUsernamePasswordAuthenticationToken.NtlmUsernamePasswordAuthenticationToken(jcifs.smb.NtlmPasswordAuthentication, Z)
Métodos invocados: 
jcifs.smb.NtlmPasswordAuthentication.getUsername()
jcifs.smb.NtlmPasswordAuthentication.getName()
2895 - Declaração do método: org.springframework.security.ui.ntlm.NtlmType2MessageException.NtlmType2MessageException(java.lang.String)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
2896 - Declaração do método: org.springframework.security.ui.ntlm.NtlmType2MessageException.preserveAuthentication()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
2897 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
jcifs.Config.setProperty(java.lang.String, java.lang.String)
jcifs.Config.setProperty(java.lang.String, java.lang.String)
2898 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.setAuthenticationManager(org.springframework.security.AuthenticationManager)
2898 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.setDefaultDomain(java.lang.String)
Métodos invocados: 
jcifs.Config.setProperty(java.lang.String, java.lang.String)
2899 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.setSmbClientUsername(java.lang.String)
Métodos invocados: 
jcifs.Config.setProperty(java.lang.String, java.lang.String)
2900 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.setSmbClientPassword(java.lang.String)
Métodos invocados: 
jcifs.Config.setProperty(java.lang.String, java.lang.String)
2901 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.setSmbClientSSNLimit(java.lang.String)
Métodos invocados: 
jcifs.Config.setProperty(java.lang.String, java.lang.String)
2902 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.setNetbiosWINS(java.lang.String)
Métodos invocados: 
jcifs.Config.setProperty(java.lang.String, java.lang.String)
2903 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.setDomainController(java.lang.String)
2903 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.setLoadBalance(Z)
2903 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.setStripDomain(Z)
2903 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.setSoTimeout(java.lang.String)
2903 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.setCachePolicy(java.lang.String)
2903 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.setJcifsProperties(java.util.Properties)
Métodos invocados: 
java.util.Hashtable.keys()
java.util.Enumeration.hasMoreElements()
java.util.Enumeration.nextElement()
java.lang.String.startsWith(java.lang.String)
java.util.Properties.getProperty(java.lang.String)
jcifs.Config.setProperty(java.lang.String, java.lang.String)
2904 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.isForceIdentification()
2904 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.setForceIdentification(Z)
2904 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.setRetryOnAuthFailure(Z)
2904 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.setAuthenticationDetailsSource(org.springframework.security.ui.AuthenticationDetailsSource)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2905 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.doFilterHttp(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.ui.ntlm.NtlmProcessingFilter.reAuthOnIEPost(javax.servlet.http.HttpServletRequest)
javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)
java.lang.String.startsWith(java.lang.String)
org.springframework.security.ui.ntlm.NtlmProcessingFilter.getDCAddress(javax.servlet.http.HttpSession)
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.ui.ntlm.NtlmProcessingFilter.processType1Message(java.lang.String, javax.servlet.http.HttpSession, jcifs.UniAddress)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.ntlm.NtlmProcessingFilter.processType3Message(java.lang.String, javax.servlet.http.HttpSession, jcifs.UniAddress)
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.ntlm.NtlmProcessingFilter.logon(javax.servlet.http.HttpSession, jcifs.UniAddress, jcifs.smb.NtlmPasswordAuthentication)
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.ntlm.NtlmProcessingFilter.authenticate(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.http.HttpSession, jcifs.smb.NtlmPasswordAuthentication)
javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse)
2906 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.reAuthOnIEPost(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)
javax.servlet.http.HttpServletRequest.getMethod()
java.lang.String.equalsIgnoreCase(java.lang.String)
java.lang.String.indexOf(java.lang.String)
2907 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.processType1Message(java.lang.String, javax.servlet.http.HttpSession, jcifs.UniAddress)
Métodos invocados: 
java.lang.String.substring(I)
jcifs.util.Base64.decode(java.lang.String)
org.springframework.security.ui.ntlm.NtlmProcessingFilter.getChallenge(javax.servlet.http.HttpSession, jcifs.UniAddress)
jcifs.ntlmssp.Type2Message.toByteArray()
jcifs.util.Base64.encode([B)
2908 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.processType3Message(java.lang.String, javax.servlet.http.HttpSession, jcifs.UniAddress)
Métodos invocados: 
java.lang.String.substring(I)
jcifs.util.Base64.decode(java.lang.String)
jcifs.ntlmssp.Type3Message.getLMResponse()
jcifs.ntlmssp.Type3Message.getLMResponse()
jcifs.ntlmssp.Type3Message.getNTResponse()
jcifs.ntlmssp.Type3Message.getNTResponse()
jcifs.ntlmssp.Type3Message.getDomain()
jcifs.ntlmssp.Type3Message.getUser()
org.springframework.security.ui.ntlm.NtlmProcessingFilter.getChallenge(javax.servlet.http.HttpSession, jcifs.UniAddress)
2909 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.logon(javax.servlet.http.HttpSession, jcifs.UniAddress, jcifs.smb.NtlmPasswordAuthentication)
Métodos invocados: 
jcifs.smb.SmbSession.logon(jcifs.UniAddress, jcifs.smb.NtlmPasswordAuthentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.error(java.lang.Object)
javax.servlet.http.HttpSession.removeAttribute(java.lang.String)
2910 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.authenticate(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.http.HttpSession, jcifs.smb.NtlmPasswordAuthentication)
Métodos invocados: 
org.springframework.security.ui.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.getName()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
org.apache.commons.logging.Log.isInfoEnabled()
org.springframework.security.providers.AbstractAuthenticationToken.getName()
java.lang.Throwable.toString()
org.apache.commons.logging.Log.info(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
2911 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.getDCAddress(javax.servlet.http.HttpSession)
Métodos invocados: 
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
jcifs.smb.SmbSession.getChallengeForDomain()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
jcifs.UniAddress.getByName(java.lang.String, Z)
2912 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.getChallenge(javax.servlet.http.HttpSession, jcifs.UniAddress)
Métodos invocados: 
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
jcifs.smb.SmbSession.getChallenge(jcifs.UniAddress)
2913 - Declaração do método: org.springframework.security.ui.ntlm.NtlmProcessingFilter.getOrder()
2913 - Declaração do método: org.springframework.security.ui.ntlm.ldap.authenticator.NtlmAwareLdapAuthenticator.NtlmAwareLdapAuthenticator(org.springframework.security.ldap.SpringSecurityContextSource)
2913 - Declaração do método: org.springframework.security.ui.ntlm.ldap.authenticator.NtlmAwareLdapAuthenticator.loadUser(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getContextSource()
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getUserAttributes()
org.springframework.security.ldap.SpringSecurityLdapTemplate.retrieveEntry(java.lang.String, [Ljava.lang.String;)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.core.NestedRuntimeException.getMessage()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
2914 - Declaração do método: org.springframework.security.ui.ntlm.ldap.authenticator.NtlmAwareLdapAuthenticator.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
org.springframework.security.Authentication.isAuthenticated()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.security.Principal.getName()
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getUserDns(java.lang.String)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.ui.ntlm.ldap.authenticator.NtlmAwareLdapAuthenticator.loadUser(java.lang.String, java.lang.String)
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getUserSearch()
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.getUserSearch()
org.springframework.security.ldap.LdapUserSearch.searchForUser(java.lang.String)
org.springframework.ldap.core.DirContextOperations.getDn()
java.lang.Object.toString()
org.springframework.security.ui.ntlm.ldap.authenticator.NtlmAwareLdapAuthenticator.loadUser(java.lang.String, java.lang.String)
org.springframework.context.support.MessageSourceAccessor.getMessage(java.lang.String, java.lang.String)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
2915 - Declaração do método: org.springframework.security.ui.ntlm.ldap.authenticator.NtlmAwareLdapAuthenticatorTests.unauthenticatedTokenIsRejected()
Métodos invocados: 
org.springframework.security.providers.UsernamePasswordAuthenticationToken.setAuthenticated(Z)
org.springframework.security.ui.ntlm.ldap.authenticator.NtlmAwareLdapAuthenticator.authenticate(org.springframework.security.Authentication)
2916 - Declaração do método: org.springframework.security.ui.ntlm.ldap.authenticator.NtlmAwareLdapAuthenticatorTests.authenticatedTokenIsAccepted()
Métodos invocados: 
org.springframework.security.providers.ldap.authenticator.AbstractLdapAuthenticator.setUserDnPatterns([Ljava.lang.String;)
org.springframework.security.ui.ntlm.ldap.authenticator.NtlmAwareLdapAuthenticator.authenticate(org.springframework.security.Authentication)
2917 - Declaração do método: org.springframework.security.ui.ntlm.ldap.authenticator.NtlmAwareLdapAuthenticatorTests$1.loadUser(java.lang.String, java.lang.String)
2917 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationProvider.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2918 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationProvider.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
java.lang.Object.getClass()
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.supports(java.lang.Class)
org.springframework.security.providers.openid.OpenIDAuthenticationToken.getStatus()
org.springframework.security.providers.openid.OpenIDAuthenticationToken.getIdentityUrl()
org.springframework.security.userdetails.UserDetailsService.loadUserByUsername(java.lang.String)
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.providers.openid.OpenIDAuthenticationToken.getStatus()
org.springframework.security.providers.openid.OpenIDAuthenticationToken.getIdentityUrl()
org.springframework.security.providers.openid.OpenIDAuthenticationToken.getMessage()
org.springframework.security.providers.openid.OpenIDAuthenticationStatus.toString()
2919 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
2919 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationProvider.supports(java.lang.Class)
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
2920 - Declaração do método: org.springframework.security.providers.openid.AuthenticationCancelledException.AuthenticationCancelledException(java.lang.String)
2920 - Declaração do método: org.springframework.security.providers.openid.AuthenticationCancelledException.AuthenticationCancelledException(java.lang.String, java.lang.Throwable)
2920 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationToken.OpenIDAuthenticationToken(org.springframework.security.providers.openid.OpenIDAuthenticationStatus, java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.setAuthenticated(Z)
2921 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationToken.OpenIDAuthenticationToken([Lorg.springframework.security.GrantedAuthority;, org.springframework.security.providers.openid.OpenIDAuthenticationStatus, java.lang.String)
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.setAuthenticated(Z)
2922 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationToken.getCredentials()
2922 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationToken.getIdentityUrl()
2922 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationToken.getMessage()
2922 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationToken.getPrincipal()
2922 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationToken.getStatus()
2922 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationStatus.OpenIDAuthenticationStatus(java.lang.String)
2922 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationStatus.readResolve()
2922 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationStatus.toString()
2922 - Declaração do método: org.springframework.security.ui.openid.OpenIDAuthenticationRequiredException.OpenIDAuthenticationRequiredException(java.lang.String, java.lang.String)
2922 - Declaração do método: org.springframework.security.ui.openid.OpenIDAuthenticationRequiredException.getClaimedIdentity()
2922 - Declaração do método: org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.afterPropertiesSet()
2922 - Declaração do método: org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.attemptAuthentication(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getParameter(java.lang.String)
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.obtainUsername(javax.servlet.http.HttpServletRequest)
org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.setLastUsername(java.lang.String, javax.servlet.http.HttpServletRequest)
org.springframework.security.ui.openid.OpenIDConsumer.endConsumption(javax.servlet.http.HttpServletRequest)
org.springframework.security.ui.AbstractProcessingFilter.getAuthenticationManager()
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
org.springframework.security.Authentication.isAuthenticated()
org.springframework.security.providers.openid.OpenIDAuthenticationToken.getIdentityUrl()
org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.setLastUsername(java.lang.String, javax.servlet.http.HttpServletRequest)
2923 - Declaração do método: org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.setLastUsername(java.lang.String, javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getSession(Z)
org.springframework.security.ui.AbstractProcessingFilter.getAllowSessionCreation()
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
2924 - Declaração do método: org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.determineFailureUrl(javax.servlet.http.HttpServletRequest, org.springframework.security.AuthenticationException)
Métodos invocados: 
org.springframework.security.ui.openid.OpenIDAuthenticationRequiredException.getClaimedIdentity()
org.springframework.util.StringUtils.hasText(java.lang.String)
org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.buildReturnToUrl(javax.servlet.http.HttpServletRequest)
org.springframework.security.ui.openid.OpenIDConsumer.beginConsumption(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String)
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
2925 - Declaração do método: org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.buildReturnToUrl(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.http.HttpServletRequest.getRequestURL()
java.lang.StringBuffer.toString()
2926 - Declaração do método: org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.getClaimedIdentityFieldName()
2926 - Declaração do método: org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.getConsumer()
2926 - Declaração do método: org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.getDefaultFilterProcessesUrl()
2926 - Declaração do método: org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.isAuthenticated(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.Authentication.isAuthenticated()
2927 - Declaração do método: org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.isOpenIdRequest(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.obtainUsername(javax.servlet.http.HttpServletRequest)
org.springframework.util.StringUtils.hasText(java.lang.String)
java.lang.String.toLowerCase()
java.lang.String.startsWith(java.lang.String)
2928 - Declaração do método: org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.obtainUsername(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getParameter(java.lang.String)
2929 - Declaração do método: org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.onUnsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
Métodos invocados: 
java.lang.Class.getName()
org.springframework.security.ui.openid.OpenIDAuthenticationRequiredException.getClaimedIdentity()
javax.servlet.ServletRequest.setAttribute(java.lang.String, java.lang.Object)
2930 - Declaração do método: org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.setClaimedIdentityFieldName(java.lang.String)
2930 - Declaração do método: org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.setConsumer(org.springframework.security.ui.openid.OpenIDConsumer)
2930 - Declaração do método: org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.unsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.security.AuthenticationException)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.determineFailureUrl(javax.servlet.http.HttpServletRequest, org.springframework.security.AuthenticationException)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Throwable.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.AbstractProcessingFilter.getAllowSessionCreation()
javax.servlet.http.HttpServletRequest.getSession()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.ui.rememberme.RememberMeServices.loginFail(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
org.springframework.security.ui.AbstractProcessingFilter.sendRedirect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)
2931 - Declaração do método: org.springframework.security.ui.openid.OpenIDAuthenticationProcessingFilter.getOrder()
2931 - Declaração do método: org.springframework.security.ui.openid.OpenIDConsumer.beginConsumption(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String)
2931 - Declaração do método: org.springframework.security.ui.openid.OpenIDConsumer.endConsumption(javax.servlet.http.HttpServletRequest)
2931 - Declaração do método: org.springframework.security.ui.openid.OpenIDConsumerException.OpenIDConsumerException(java.lang.String)
2931 - Declaração do método: org.springframework.security.ui.openid.OpenIDConsumerException.OpenIDConsumerException(java.lang.String, java.lang.Throwable)
2931 - Declaração do método: org.springframework.security.ui.openid.consumers.OpenID4JavaConsumer.OpenID4JavaConsumer(org.openid4java.consumer.ConsumerManager)
2931 - Declaração do método: org.springframework.security.ui.openid.consumers.OpenID4JavaConsumer.OpenID4JavaConsumer()
2931 - Declaração do método: org.springframework.security.ui.openid.consumers.OpenID4JavaConsumer.beginConsumption(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String)
Métodos invocados: 
org.openid4java.consumer.ConsumerManager.discover(java.lang.String)
org.openid4java.consumer.ConsumerManager.associate(java.util.List)
javax.servlet.http.HttpServletRequest.getSession(Z)
java.lang.Class.getName()
javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
org.openid4java.consumer.ConsumerManager.authenticate(org.openid4java.discovery.DiscoveryInformation, java.lang.String)
org.openid4java.message.Message.getDestinationUrl(Z)
2932 - Declaração do método: org.springframework.security.ui.openid.consumers.OpenID4JavaConsumer.endConsumption(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
javax.servlet.ServletRequest.getParameterMap()
javax.servlet.http.HttpServletRequest.getSession()
java.lang.Class.getName()
javax.servlet.http.HttpSession.getAttribute(java.lang.String)
javax.servlet.http.HttpServletRequest.getRequestURL()
javax.servlet.http.HttpServletRequest.getQueryString()
java.lang.String.length()
java.lang.StringBuffer.append(java.lang.String)
javax.servlet.http.HttpServletRequest.getQueryString()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
org.openid4java.consumer.ConsumerManager.verify(java.lang.String, org.openid4java.message.ParameterList, org.openid4java.discovery.DiscoveryInformation)
org.openid4java.consumer.VerificationResult.getVerifiedId()
org.openid4java.discovery.Identifier.getIdentifier()
org.openid4java.discovery.DiscoveryInformation.getClaimedIdentifier()
org.openid4java.discovery.Identifier.getIdentifier()
org.openid4java.consumer.VerificationResult.getStatusMsg()
2933 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationTokenTests.test()
Métodos invocados: 
org.springframework.security.providers.openid.OpenIDAuthenticationTokenTests.newToken()
org.springframework.security.providers.openid.OpenIDAuthenticationTokenTests.newToken()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2934 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationTokenTests.newToken()
2934 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationProviderTests.testAuthenticateCancel()
Métodos invocados: 
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.Authentication.isAuthenticated()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.core.NestedRuntimeException.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2935 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationProviderTests.testAuthenticateError()
Métodos invocados: 
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.Authentication.isAuthenticated()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.core.NestedRuntimeException.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2936 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationProviderTests.testAuthenticateFailure()
Métodos invocados: 
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.Authentication.isAuthenticated()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.core.NestedRuntimeException.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2937 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationProviderTests.testAuthenticateSetupNeeded()
Métodos invocados: 
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.Authentication.isAuthenticated()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.fail(java.lang.String)
org.springframework.core.NestedRuntimeException.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2938 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationProviderTests.testAuthenticateSuccess()
Métodos invocados: 
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.Authentication.isAuthenticated()
junit.framework.Assert.assertFalse(Z)
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.assertNotNull(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.Authentication.isAuthenticated()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.Authentication.getPrincipal()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.Authentication.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.Authentication.getAuthorities()
junit.framework.Assert.assertNotNull(java.lang.Object)
org.springframework.security.Authentication.getAuthorities()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.openid.OpenIDAuthenticationToken.getStatus()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.providers.openid.OpenIDAuthenticationToken.getMessage()
junit.framework.Assert.assertTrue(Z)
2939 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationProviderTests.testDetectsMissingAuthoritiesPopulator()
Métodos invocados: 
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
2940 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationProviderTests.testDoesntSupport()
Métodos invocados: 
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertFalse(Z)
2941 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationProviderTests.testIgnoresUserPassAuthToken()
Métodos invocados: 
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.authenticate(org.springframework.security.Authentication)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2942 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationProviderTests.testSupports()
Métodos invocados: 
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.supports(java.lang.Class)
junit.framework.Assert.assertTrue(Z)
2943 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationProviderTests.testValidation()
Métodos invocados: 
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.afterPropertiesSet()
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.setUserDetailsService(org.springframework.security.userdetails.UserDetailsService)
org.springframework.security.providers.openid.OpenIDAuthenticationProvider.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
2944 - Declaração do método: org.springframework.security.providers.openid.OpenIDAuthenticationProviderTests$MockUserDetailsService.loadUserByUsername(java.lang.String)
2944 - Declaração do método: org.springframework.security.ui.openid.consumers.MockOpenIDConsumer.beginConsumption(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String)
2944 - Declaração do método: org.springframework.security.ui.openid.consumers.MockOpenIDConsumer.endConsumption(javax.servlet.http.HttpServletRequest)
2944 - Declaração do método: org.springframework.security.ui.openid.consumers.MockOpenIDConsumer.setRedirectUrl(java.lang.String)
2944 - Declaração do método: org.springframework.security.ui.openid.consumers.MockOpenIDConsumer.setReturnToUrl(java.lang.String)
2944 - Declaração do método: org.springframework.security.ui.openid.consumers.MockOpenIDConsumer.setToken(org.springframework.security.providers.openid.OpenIDAuthenticationToken)
2944 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.PortletSessionContextIntegrationInterceptor()
Métodos invocados: 
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.generateNewContext()
2945 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterPropertiesSet()
Métodos invocados: 
java.lang.Class.isAssignableFrom(java.lang.Class)
2946 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)
Métodos invocados: 
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.preHandle(javax.portlet.PortletRequest, javax.portlet.PortletResponse, java.lang.Object)
2947 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.preHandleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object)
Métodos invocados: 
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.preHandle(javax.portlet.PortletRequest, javax.portlet.PortletResponse, java.lang.Object)
2948 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.postHandleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.web.portlet.ModelAndView)
2948 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterActionCompletion(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, java.lang.Exception)
Métodos invocados: 
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterCompletion(javax.portlet.PortletRequest, javax.portlet.PortletResponse, java.lang.Object, java.lang.Exception)
2949 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterRenderCompletion(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, java.lang.Exception)
Métodos invocados: 
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterCompletion(javax.portlet.PortletRequest, javax.portlet.PortletResponse, java.lang.Object, java.lang.Exception)
2950 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.preHandle(javax.portlet.PortletRequest, javax.portlet.PortletResponse, java.lang.Object)
Métodos invocados: 
javax.portlet.PortletRequest.getPortletSession(Z)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.portletSessionScope()
javax.portlet.PortletSession.getAttribute(java.lang.String, I)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
java.lang.reflect.AccessibleObject.isAccessible()
java.lang.reflect.AccessibleObject.setAccessible(Z)
java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
org.springframework.util.ReflectionUtils.handleReflectionException(java.lang.Exception)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.setContext(org.springframework.security.context.SecurityContext)
org.apache.commons.logging.Log.isWarnEnabled()
org.apache.commons.logging.Log.warn(java.lang.Object)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.generateNewContext()
org.springframework.security.context.SecurityContextHolder.setContext(org.springframework.security.context.SecurityContext)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.generateNewContext()
org.springframework.security.context.SecurityContextHolder.setContext(org.springframework.security.context.SecurityContext)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.generateNewContext()
org.springframework.security.context.SecurityContextHolder.setContext(org.springframework.security.context.SecurityContext)
javax.portlet.PortletRequest.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
java.lang.Object.hashCode()
javax.portlet.PortletRequest.setAttribute(java.lang.String, java.lang.Object)
2951 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterCompletion(javax.portlet.PortletRequest, javax.portlet.PortletResponse, java.lang.Object, java.lang.Exception)
Métodos invocados: 
javax.portlet.PortletRequest.getAttribute(java.lang.String)
java.lang.Boolean.booleanValue()
javax.portlet.PortletRequest.getAttribute(java.lang.String)
java.lang.Integer.intValue()
javax.portlet.PortletRequest.getPortletSession(Z)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
java.lang.Object.equals(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
javax.portlet.PortletRequest.getPortletSession(Z)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.context.SecurityContextHolder.getContext()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
java.lang.Object.hashCode()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.portletSessionScope()
javax.portlet.PortletSession.setAttribute(java.lang.String, java.lang.Object, I)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.context.SecurityContextHolder.getContext()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.clearContext()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
2952 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.generateNewContext()
Métodos invocados: 
java.lang.Class.newInstance()
2953 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.portletSessionScope()
2953 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.getContext()
2953 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.setContext(java.lang.Class)
2953 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.isAllowSessionCreation()
2953 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.setAllowSessionCreation(Z)
2953 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.isForceEagerSessionCreation()
2953 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.setForceEagerSessionCreation(Z)
2953 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.isCloneFromPortletSession()
2953 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.setCloneFromPortletSession(Z)
2953 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.isUseApplicationScopePortletSession()
2953 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptor.setUseApplicationScopePortletSession(Z)
2953 - Declaração do método: org.springframework.security.ui.portlet.PortletAuthenticationDetails.PortletAuthenticationDetails(javax.portlet.PortletRequest)
Métodos invocados: 
javax.portlet.PortletRequest.getAttribute(java.lang.String)
org.apache.commons.logging.Log.warn(java.lang.Object, java.lang.Throwable)
2954 - Declaração do método: org.springframework.security.ui.portlet.PortletAuthenticationDetails.getUserInfo()
2954 - Declaração do método: org.springframework.security.ui.portlet.PortletAuthenticationDetails.toString()
2954 - Declaração do método: org.springframework.security.ui.portlet.PortletPreAuthenticatedAuthenticationDetails.PortletPreAuthenticatedAuthenticationDetails(javax.portlet.PortletRequest)
2954 - Declaração do método: org.springframework.security.ui.portlet.PortletPreAuthenticatedAuthenticationDetails.getGrantedAuthorities()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
2955 - Declaração do método: org.springframework.security.ui.portlet.PortletPreAuthenticatedAuthenticationDetails.setGrantedAuthorities([Lorg.springframework.security.GrantedAuthority;)
Métodos invocados: 
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
2956 - Declaração do método: org.springframework.security.ui.portlet.PortletPreAuthenticatedAuthenticationDetails.toString()
Métodos invocados: 
java.lang.StringBuffer.append(java.lang.String)
java.util.Arrays.asList([Lorg.springframework.security.GrantedAuthority;)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
2957 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptor.PortletProcessingInterceptor()
Métodos invocados: 
org.springframework.security.ui.AuthenticationDetailsSourceImpl.setClazz(java.lang.Class)
2958 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptor.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
2959 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptor.preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)
Métodos invocados: 
org.springframework.security.ui.portlet.PortletProcessingInterceptor.preHandle(javax.portlet.PortletRequest, javax.portlet.PortletResponse, java.lang.Object)
2960 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptor.preHandleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object)
Métodos invocados: 
org.springframework.security.ui.portlet.PortletProcessingInterceptor.preHandle(javax.portlet.PortletRequest, javax.portlet.PortletResponse, java.lang.Object)
2961 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptor.postHandleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.web.portlet.ModelAndView)
2961 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptor.afterActionCompletion(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, java.lang.Exception)
2961 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptor.afterRenderCompletion(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, java.lang.Exception)
2961 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptor.preHandle(javax.portlet.PortletRequest, javax.portlet.PortletResponse, java.lang.Object)
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.ui.portlet.PortletProcessingInterceptor.getPrincipalFromRequest(javax.portlet.PortletRequest)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.getCredentialsFromRequest(javax.portlet.PortletRequest)
org.springframework.security.ui.AuthenticationDetailsSource.buildDetails(java.lang.Object)
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.springframework.security.providers.AbstractAuthenticationToken.getName()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.onPreAuthentication(javax.portlet.PortletRequest, javax.portlet.PortletResponse)
org.springframework.security.AuthenticationManager.authenticate(org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.onSuccessfulAuthentication(javax.portlet.PortletRequest, javax.portlet.PortletResponse, org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object, java.lang.Throwable)
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
javax.portlet.PortletRequest.getPortletSession()
javax.portlet.PortletSession.setAttribute(java.lang.String, java.lang.Object, I)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.onUnsuccessfulAuthentication(javax.portlet.PortletRequest, javax.portlet.PortletResponse, org.springframework.security.AuthenticationException)
2962 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptor.getPrincipalFromRequest(javax.portlet.PortletRequest)
Métodos invocados: 
javax.portlet.PortletRequest.getRemoteUser()
javax.portlet.PortletRequest.getUserPrincipal()
java.security.Principal.getName()
javax.portlet.PortletRequest.getAttribute(java.lang.String)
org.apache.commons.logging.Log.warn(java.lang.Object, java.lang.Throwable)
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map.get(java.lang.Object)
2963 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptor.getCredentialsFromRequest(javax.portlet.PortletRequest)
Métodos invocados: 
javax.portlet.PortletRequest.getAuthType()
2964 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptor.onPreAuthentication(javax.portlet.PortletRequest, javax.portlet.PortletResponse)
2964 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptor.onSuccessfulAuthentication(javax.portlet.PortletRequest, javax.portlet.PortletResponse, org.springframework.security.Authentication)
2964 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptor.onUnsuccessfulAuthentication(javax.portlet.PortletRequest, javax.portlet.PortletResponse, org.springframework.security.AuthenticationException)
2964 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
2964 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptor.setUserNameAttributes(java.util.List)
2964 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptor.setAuthenticationDetailsSource(org.springframework.security.ui.AuthenticationDetailsSource)
2964 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptor.setUseAuthTypeAsCredentials(Z)
2964 - Declaração do método: org.springframework.security.ui.portlet.PortletPreAuthenticatedAuthenticationDetailsSource.PortletPreAuthenticatedAuthenticationDetailsSource()
Métodos invocados: 
org.springframework.security.ui.AuthenticationDetailsSourceImpl.setClazz(java.lang.Class)
2965 - Declaração do método: org.springframework.security.ui.portlet.PortletPreAuthenticatedAuthenticationDetailsSource.getUserRoles(java.lang.Object, [Ljava.lang.String;)
Métodos invocados: 
javax.portlet.PortletRequest.isUserInRole(java.lang.String)
java.util.ArrayList.add(java.lang.Object)
java.util.ArrayList.size()
java.util.ArrayList.toArray([Ljava.lang.Object;)
2966 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptorTests.PortletSessionContextIntegrationInterceptorTests()
2966 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptorTests.PortletSessionContextIntegrationInterceptorTests(java.lang.String)
2966 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptorTests.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
2967 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptorTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
2968 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptorTests.testDetectsIncompatibleSessionProperties()
Métodos invocados: 
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.setAllowSessionCreation(Z)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.setForceEagerSessionCreation(Z)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.setAllowSessionCreation(Z)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterPropertiesSet()
2969 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptorTests.testDetectsMissingOrInvalidContext()
Métodos invocados: 
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.setContext(java.lang.Class)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.setContext(java.lang.Class)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.getContext()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
2970 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptorTests.testNormalRenderRequestProcessing()
Métodos invocados: 
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken()
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.providers.portlet.PortletTestUtils.createRenderRequest()
org.springframework.security.providers.portlet.PortletTestUtils.createRenderResponse()
org.springframework.mock.web.portlet.MockPortletRequest.getPortletSession()
javax.portlet.PortletSession.setAttribute(java.lang.String, java.lang.Object, I)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterPropertiesSet()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.preHandleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.postHandleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.web.portlet.ModelAndView)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterRenderCompletion(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, java.lang.Exception)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
2971 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptorTests.testNormalActionRequestProcessing()
Métodos invocados: 
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken()
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.providers.portlet.PortletTestUtils.createActionRequest()
org.springframework.security.providers.portlet.PortletTestUtils.createActionResponse()
org.springframework.mock.web.portlet.MockPortletRequest.getPortletSession()
javax.portlet.PortletSession.setAttribute(java.lang.String, java.lang.Object, I)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterPropertiesSet()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterActionCompletion(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, java.lang.Exception)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
2972 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptorTests.testUpdatesCopiedBackIntoSession()
Métodos invocados: 
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken()
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.providers.portlet.PortletTestUtils.createActionRequest()
org.springframework.security.providers.portlet.PortletTestUtils.createActionResponse()
org.springframework.mock.web.portlet.MockPortletRequest.getPortletSession()
javax.portlet.PortletSession.setAttribute(java.lang.String, java.lang.Object, I)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterPropertiesSet()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken(org.springframework.security.userdetails.UserDetails)
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken(org.springframework.security.userdetails.UserDetails)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterActionCompletion(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, java.lang.Exception)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.portlet.MockPortletRequest.getPortletSession()
javax.portlet.PortletSession.getAttribute(java.lang.String, I)
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2973 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptorTests.testPortletSessionCreatedWhenContextHolderChanges()
Métodos invocados: 
org.springframework.security.providers.portlet.PortletTestUtils.createActionRequest()
org.springframework.security.providers.portlet.PortletTestUtils.createActionResponse()
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterPropertiesSet()
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterActionCompletion(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, java.lang.Exception)
org.springframework.mock.web.portlet.MockPortletRequest.getPortletSession(Z)
javax.portlet.PortletSession.getAttribute(java.lang.String, I)
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2974 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptorTests.testPortletSessionEagerlyCreatedWhenDirected()
Métodos invocados: 
org.springframework.security.providers.portlet.PortletTestUtils.createActionRequest()
org.springframework.security.providers.portlet.PortletTestUtils.createActionResponse()
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.setForceEagerSessionCreation(Z)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterPropertiesSet()
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterActionCompletion(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, java.lang.Exception)
org.springframework.mock.web.portlet.MockPortletRequest.getPortletSession(Z)
junit.framework.Assert.assertNotNull(java.lang.Object)
2975 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptorTests.testPortletSessionNotCreatedUnlessContextHolderChanges()
Métodos invocados: 
org.springframework.security.providers.portlet.PortletTestUtils.createActionRequest()
org.springframework.security.providers.portlet.PortletTestUtils.createActionResponse()
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterPropertiesSet()
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterActionCompletion(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, java.lang.Exception)
org.springframework.mock.web.portlet.MockPortletRequest.getPortletSession(Z)
junit.framework.Assert.assertNull(java.lang.Object)
2976 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptorTests.testPortletSessionWithNonContextInWellKnownLocationIsOverwritten()
Métodos invocados: 
org.springframework.security.providers.portlet.PortletTestUtils.createActionRequest()
org.springframework.security.providers.portlet.PortletTestUtils.createActionResponse()
org.springframework.mock.web.portlet.MockPortletRequest.getPortletSession()
javax.portlet.PortletSession.setAttribute(java.lang.String, java.lang.Object, I)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterPropertiesSet()
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterActionCompletion(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, java.lang.Exception)
org.springframework.mock.web.portlet.MockPortletRequest.getPortletSession(Z)
javax.portlet.PortletSession.getAttribute(java.lang.String, I)
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2977 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptorTests.testPortletSessionCreationNotAllowed()
Métodos invocados: 
org.springframework.security.providers.portlet.PortletTestUtils.createActionRequest()
org.springframework.security.providers.portlet.PortletTestUtils.createActionResponse()
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.setAllowSessionCreation(Z)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterPropertiesSet()
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterActionCompletion(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, java.lang.Exception)
org.springframework.mock.web.portlet.MockPortletRequest.getPortletSession(Z)
junit.framework.Assert.assertNull(java.lang.Object)
2978 - Declaração do método: org.springframework.security.context.PortletSessionContextIntegrationInterceptorTests.testUsePortletScopeSession()
Métodos invocados: 
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken()
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.providers.portlet.PortletTestUtils.createActionRequest()
org.springframework.security.providers.portlet.PortletTestUtils.createActionResponse()
org.springframework.mock.web.portlet.MockPortletRequest.getPortletSession()
javax.portlet.PortletSession.setAttribute(java.lang.String, java.lang.Object, I)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.setUseApplicationScopePortletSession(Z)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterPropertiesSet()
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken(org.springframework.security.userdetails.UserDetails)
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken(org.springframework.security.userdetails.UserDetails)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.context.PortletSessionContextIntegrationInterceptor.afterActionCompletion(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, java.lang.Exception)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.portlet.MockPortletRequest.getPortletSession()
javax.portlet.PortletSession.getAttribute(java.lang.String, I)
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2979 - Declaração do método: org.springframework.security.providers.portlet.PortletTestUtils.createUser()
2979 - Declaração do método: org.springframework.security.providers.portlet.PortletTestUtils.applyPortletRequestSecurity(org.springframework.mock.web.portlet.MockPortletRequest)
Métodos invocados: 
org.springframework.mock.web.portlet.MockPortletRequest.setRemoteUser(java.lang.String)
org.springframework.mock.web.portlet.MockPortletRequest.setUserPrincipal(java.security.Principal)
org.springframework.mock.web.portlet.MockPortletRequest.addUserRole(java.lang.String)
org.springframework.mock.web.portlet.MockPortletRequest.addUserRole(java.lang.String)
org.springframework.mock.web.portlet.MockPortletRequest.setAuthType(java.lang.String)
2980 - Declaração do método: org.springframework.security.providers.portlet.PortletTestUtils.createRenderRequest()
Métodos invocados: 
org.springframework.security.providers.portlet.PortletTestUtils.applyPortletRequestSecurity(org.springframework.mock.web.portlet.MockPortletRequest)
2981 - Declaração do método: org.springframework.security.providers.portlet.PortletTestUtils.createRenderResponse()
2981 - Declaração do método: org.springframework.security.providers.portlet.PortletTestUtils.createActionRequest()
Métodos invocados: 
org.springframework.security.providers.portlet.PortletTestUtils.applyPortletRequestSecurity(org.springframework.mock.web.portlet.MockPortletRequest)
2982 - Declaração do método: org.springframework.security.providers.portlet.PortletTestUtils.createActionResponse()
2982 - Declaração do método: org.springframework.security.providers.portlet.PortletTestUtils.createToken(javax.portlet.PortletRequest)
Métodos invocados: 
org.springframework.security.providers.AbstractAuthenticationToken.setDetails(java.lang.Object)
2983 - Declaração do método: org.springframework.security.providers.portlet.PortletTestUtils.createToken()
Métodos invocados: 
org.springframework.security.providers.portlet.PortletTestUtils.createRenderRequest()
org.springframework.security.providers.portlet.PortletTestUtils.createToken(javax.portlet.PortletRequest)
2984 - Declaração do método: org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken(org.springframework.security.userdetails.UserDetails)
Métodos invocados: 
org.springframework.security.userdetails.UserDetails.getPassword()
org.springframework.security.userdetails.UserDetails.getAuthorities()
org.springframework.security.providers.AbstractAuthenticationToken.setAuthenticated(Z)
2985 - Declaração do método: org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken()
Métodos invocados: 
org.springframework.security.providers.portlet.PortletTestUtils.createUser()
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken(org.springframework.security.userdetails.UserDetails)
2986 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptorTests.PortletProcessingInterceptorTests()
2986 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptorTests.PortletProcessingInterceptorTests(java.lang.String)
2986 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptorTests.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
2987 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptorTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
2988 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptorTests.testRequiresAuthenticationManager()
Métodos invocados: 
org.springframework.security.ui.portlet.PortletProcessingInterceptor.afterPropertiesSet()
junit.framework.Assert.fail(java.lang.String)
2989 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptorTests.testNormalRenderRequestProcessing()
Métodos invocados: 
org.springframework.security.providers.portlet.PortletTestUtils.createRenderRequest()
org.springframework.security.providers.portlet.PortletTestUtils.createRenderResponse()
org.springframework.security.ui.portlet.PortletProcessingInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.afterPropertiesSet()
org.springframework.security.ui.portlet.PortletProcessingInterceptor.preHandleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object)
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.postHandleRender(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, org.springframework.web.portlet.ModelAndView)
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.afterRenderCompletion(javax.portlet.RenderRequest, javax.portlet.RenderResponse, java.lang.Object, java.lang.Exception)
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2990 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptorTests.testNormalActionRequestProcessing()
Métodos invocados: 
org.springframework.security.providers.portlet.PortletTestUtils.createActionRequest()
org.springframework.security.providers.portlet.PortletTestUtils.createActionResponse()
org.springframework.security.ui.portlet.PortletProcessingInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.afterPropertiesSet()
org.springframework.security.ui.portlet.PortletProcessingInterceptor.preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.afterActionCompletion(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, java.lang.Exception)
org.springframework.security.providers.portlet.PortletTestUtils.createAuthenticatedToken()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2991 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptorTests.testAuthenticationFailsWithNoCredentials()
Métodos invocados: 
org.springframework.security.ui.portlet.PortletProcessingInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.afterPropertiesSet()
org.springframework.security.ui.portlet.PortletProcessingInterceptor.preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertNull(java.lang.Object)
org.springframework.mock.web.portlet.MockPortletRequest.getPortletSession()
javax.portlet.PortletSession.getAttribute(java.lang.String, I)
junit.framework.Assert.assertTrue(Z)
2992 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptorTests.testExistingAuthenticationIsLeftAlone()
Métodos invocados: 
org.springframework.security.providers.portlet.PortletTestUtils.createActionRequest()
org.springframework.security.providers.portlet.PortletTestUtils.createActionResponse()
org.springframework.security.ui.portlet.PortletProcessingInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.afterPropertiesSet()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.afterActionCompletion(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object, java.lang.Exception)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
2993 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptorTests.testUsernameFromRemoteUser()
Métodos invocados: 
org.springframework.mock.web.portlet.MockPortletRequest.setRemoteUser(java.lang.String)
org.springframework.mock.web.portlet.MockPortletRequest.setAuthType(java.lang.String)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.afterPropertiesSet()
org.springframework.security.ui.portlet.PortletProcessingInterceptor.preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
java.security.Principal.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2994 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptorTests.testUsernameFromPrincipal()
Métodos invocados: 
org.springframework.mock.web.portlet.MockPortletRequest.setUserPrincipal(java.security.Principal)
org.springframework.mock.web.portlet.MockPortletRequest.setAuthType(java.lang.String)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.afterPropertiesSet()
org.springframework.security.ui.portlet.PortletProcessingInterceptor.preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
java.security.Principal.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2995 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptorTests.testUsernameFromUserInfo()
Métodos invocados: 
java.util.HashMap.put(java.lang.Object, java.lang.Object)
java.util.HashMap.put(java.lang.Object, java.lang.Object)
java.util.HashMap.put(java.lang.Object, java.lang.Object)
org.springframework.mock.web.portlet.MockPortletRequest.setAttribute(java.lang.String, java.lang.Object)
org.springframework.mock.web.portlet.MockPortletRequest.setAuthType(java.lang.String)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.setAuthenticationManager(org.springframework.security.AuthenticationManager)
java.util.ArrayList.add(java.lang.Object)
java.util.ArrayList.add(java.lang.Object)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.setUserNameAttributes(java.util.List)
org.springframework.security.ui.portlet.PortletProcessingInterceptor.afterPropertiesSet()
org.springframework.security.ui.portlet.PortletProcessingInterceptor.preHandleAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse, java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
java.security.Principal.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
2996 - Declaração do método: org.springframework.security.ui.portlet.PortletProcessingInterceptorTests$MockPortletAuthenticationManager.authenticate(org.springframework.security.Authentication)
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.Authentication.getCredentials()
java.security.Principal.getName()
org.springframework.security.Authentication.getCredentials()
java.lang.Object.toString()
org.springframework.security.userdetails.User.getPassword()
org.springframework.security.userdetails.User.getAuthorities()
org.springframework.security.providers.AbstractAuthenticationToken.setAuthenticated(Z)
2997 - Declaração do método: sample.annotations.BankService.balance(java.lang.String)
2997 - Declaração do método: sample.annotations.BankService.listAccounts()
2997 - Declaração do método: sample.annotations.BankServiceImpl.balance(java.lang.String)
2997 - Declaração do método: sample.annotations.BankServiceImpl.listAccounts()
2997 - Declaração do método: sample.annotations.Main.createSecureContext()
Métodos invocados: 
org.acegisecurity.context.SecurityContextHolder.getContext()
org.acegisecurity.context.SecurityContext.setAuthentication(org.acegisecurity.Authentication)
2998 - Declaração do método: sample.annotations.Main.destroySecureContext()
Métodos invocados: 
org.acegisecurity.context.SecurityContextHolder.setContext(org.acegisecurity.context.SecurityContext)
2999 - Declaração do método: sample.annotations.Main.main([Ljava.lang.String;)
Métodos invocados: 
sample.annotations.Main.createSecureContext()
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
sample.annotations.BankService.listAccounts()
java.io.PrintStream.println(java.lang.String)
sample.annotations.BankService.balance(java.lang.String)
java.lang.Throwable.printStackTrace()
sample.annotations.Main.destroySecureContext()
3000 - Declaração do método: samples.annotations.BankTests.BankTests()
3000 - Declaração do método: samples.annotations.BankTests.BankTests(java.lang.String)
3000 - Declaração do método: samples.annotations.BankTests.createSecureContext()
Métodos invocados: 
org.acegisecurity.context.SecurityContextHolder.getContext()
org.acegisecurity.context.SecurityContext.setAuthentication(org.acegisecurity.Authentication)
3001 - Declaração do método: samples.annotations.BankTests.destroySecureContext()
Métodos invocados: 
org.acegisecurity.context.SecurityContextHolder.setContext(org.acegisecurity.context.SecurityContext)
3002 - Declaração do método: samples.annotations.BankTests.main([Ljava.lang.String;)
Métodos invocados: 
junit.textui.TestRunner.run(java.lang.Class)
3003 - Declaração do método: samples.annotations.BankTests.setUp()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
3004 - Declaração do método: samples.annotations.BankTests.testDeniedAccess()
Métodos invocados: 
samples.annotations.BankTests.createSecureContext()
sample.annotations.BankService.balance(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
samples.annotations.BankTests.destroySecureContext()
3005 - Declaração do método: samples.annotations.BankTests.testListAccounts()
Métodos invocados: 
samples.annotations.BankTests.createSecureContext()
sample.annotations.BankService.listAccounts()
samples.annotations.BankTests.destroySecureContext()
3006 - Declaração do método: sample.attributes.BankService.balance(java.lang.String)
3006 - Declaração do método: sample.attributes.BankService.listAccounts()
3006 - Declaração do método: sample.attributes.Main.createSecureContext()
Métodos invocados: 
org.acegisecurity.context.SecurityContextHolder.getContext()
org.acegisecurity.context.SecurityContext.setAuthentication(org.acegisecurity.Authentication)
3007 - Declaração do método: sample.attributes.Main.destroySecureContext()
Métodos invocados: 
org.acegisecurity.context.SecurityContextHolder.setContext(org.acegisecurity.context.SecurityContext)
3008 - Declaração do método: sample.attributes.Main.main([Ljava.lang.String;)
Métodos invocados: 
sample.attributes.Main.createSecureContext()
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
sample.attributes.BankService.listAccounts()
java.io.PrintStream.println(java.lang.String)
sample.attributes.BankService.balance(java.lang.String)
java.lang.Throwable.printStackTrace()
sample.attributes.Main.destroySecureContext()
3009 - Declaração do método: sample.attributes.BankServiceImpl.balance(java.lang.String)
3009 - Declaração do método: sample.attributes.BankServiceImpl.listAccounts()
3009 - Declaração do método: sample.attributes.BankTests.BankTests()
3009 - Declaração do método: sample.attributes.BankTests.BankTests(java.lang.String)
3009 - Declaração do método: sample.attributes.BankTests.setUp()
Métodos invocados: 
org.springframework.context.support.AbstractApplicationContext.getBean(java.lang.String)
3010 - Declaração do método: sample.attributes.BankTests.tearDown()
Métodos invocados: 
org.acegisecurity.context.SecurityContextHolder.clearContext()
3011 - Declaração do método: sample.attributes.BankTests.createSecureContext()
Métodos invocados: 
org.acegisecurity.context.SecurityContextHolder.getContext()
org.acegisecurity.context.SecurityContext.setAuthentication(org.acegisecurity.Authentication)
3012 - Declaração do método: sample.attributes.BankTests.destroySecureContext()
Métodos invocados: 
org.acegisecurity.context.SecurityContextHolder.setContext(org.acegisecurity.context.SecurityContext)
3013 - Declaração do método: sample.attributes.BankTests.testDeniedAccess()
Métodos invocados: 
sample.attributes.BankTests.createSecureContext()
sample.attributes.BankService.balance(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
sample.attributes.BankTests.destroySecureContext()
3014 - Declaração do método: sample.attributes.BankTests.testListAccounts()
Métodos invocados: 
sample.attributes.BankTests.createSecureContext()
sample.attributes.BankService.listAccounts()
sample.attributes.BankTests.destroySecureContext()
3015 - Declaração do método: sample.contact.AddPermissionController.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
3016 - Declaração do método: sample.contact.AddPermissionController.disallowDuplicateFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
sample.contact.AddPermissionController.formBackingObject(javax.servlet.http.HttpServletRequest)
org.springframework.web.servlet.mvc.BaseCommandController.getCommandName()
org.springframework.validation.BindException.reject(java.lang.String, java.lang.String)
org.springframework.web.servlet.mvc.SimpleFormController.showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException)
3017 - Declaração do método: sample.contact.AddPermissionController.formBackingObject(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.web.bind.RequestUtils.getRequiredIntParameter(javax.servlet.http.HttpServletRequest, java.lang.String)
sample.contact.ContactManager.getById(java.lang.Long)
sample.contact.AddPermission.setContact(sample.contact.Contact)
3018 - Declaração do método: sample.contact.AddPermissionController.handleInvalidSubmit(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
sample.contact.AddPermissionController.disallowDuplicateFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
3019 - Declaração do método: sample.contact.AddPermissionController.listPermissions(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.security.acls.Permission.getMask()
org.springframework.context.support.ApplicationObjectSupport.getApplicationContext()
javax.servlet.ServletRequest.getLocale()
org.springframework.context.MessageSource.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String, java.util.Locale)
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.security.acls.Permission.getMask()
org.springframework.context.support.ApplicationObjectSupport.getApplicationContext()
javax.servlet.ServletRequest.getLocale()
org.springframework.context.MessageSource.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String, java.util.Locale)
java.util.Map.put(java.lang.Object, java.lang.Object)
org.springframework.security.acls.Permission.getMask()
org.springframework.context.support.ApplicationObjectSupport.getApplicationContext()
javax.servlet.ServletRequest.getLocale()
org.springframework.context.MessageSource.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String, java.util.Locale)
java.util.Map.put(java.lang.Object, java.lang.Object)
3020 - Declaração do método: sample.contact.AddPermissionController.listRecipients(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
org.springframework.context.support.ApplicationObjectSupport.getApplicationContext()
javax.servlet.ServletRequest.getLocale()
org.springframework.context.MessageSource.getMessage(java.lang.String, [Ljava.lang.Object;, java.lang.String, java.util.Locale)
java.util.Map.put(java.lang.Object, java.lang.Object)
sample.contact.ContactManager.getAllRecipients()
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map.put(java.lang.Object, java.lang.Object)
3021 - Declaração do método: sample.contact.AddPermissionController.onSubmit(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException)
Métodos invocados: 
sample.contact.AddPermission.getRecipient()
sample.contact.AddPermission.getPermission()
java.lang.Integer.intValue()
org.springframework.security.acls.domain.BasePermission.buildFromMask(I)
sample.contact.AddPermission.getContact()
sample.contact.ContactManager.addPermission(sample.contact.Contact, org.springframework.security.acls.sid.Sid, org.springframework.security.acls.Permission)
java.lang.Throwable.printStackTrace()
org.springframework.validation.BindException.rejectValue(java.lang.String, java.lang.String, java.lang.String)
org.springframework.web.servlet.mvc.SimpleFormController.showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException)
org.springframework.web.servlet.mvc.SimpleFormController.getSuccessView()
3022 - Declaração do método: sample.contact.AddPermissionController.referenceData(javax.servlet.http.HttpServletRequest)
Métodos invocados: 
sample.contact.AddPermissionController.listRecipients(javax.servlet.http.HttpServletRequest)
java.util.Map.put(java.lang.Object, java.lang.Object)
sample.contact.AddPermissionController.listPermissions(javax.servlet.http.HttpServletRequest)
java.util.Map.put(java.lang.Object, java.lang.Object)
3023 - Declaração do método: sample.contact.AddPermissionController.setContactManager(sample.contact.ContactManager)
3023 - Declaração do método: sample.contact.DataSourcePopulator.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
sample.contact.DataSourcePopulator.selectPerson()
java.lang.String.toLowerCase()
java.lang.String.toLowerCase()
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.transaction.support.TransactionTemplate.execute(org.springframework.transaction.support.TransactionCallback)
org.springframework.security.acls.MutableAclService.createAcl(org.springframework.security.acls.objectidentity.ObjectIdentity)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
sample.contact.DataSourcePopulator.changeOwner(I, java.lang.String)
sample.contact.DataSourcePopulator.changeOwner(I, java.lang.String)
sample.contact.DataSourcePopulator.changeOwner(I, java.lang.String)
sample.contact.DataSourcePopulator.changeOwner(I, java.lang.String)
sample.contact.DataSourcePopulator.changeOwner(I, java.lang.String)
java.util.Random.nextInt(I)
java.util.Random.nextInt(I)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
java.util.Random.nextInt(I)
java.util.Random.nextInt(I)
sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
org.springframework.security.context.SecurityContextHolder.clearContext()
3024 - Declaração do método: sample.contact.DataSourcePopulator$1.doInTransaction(org.springframework.transaction.TransactionStatus)
Métodos invocados: 
org.springframework.security.acls.MutableAclService.createAcl(org.springframework.security.acls.objectidentity.ObjectIdentity)
3025 - Declaração do método: sample.contact.DataSourcePopulator.changeOwner(I, java.lang.String)
Métodos invocados: 
org.springframework.security.acls.AclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.domain.AclImpl.setOwner(org.springframework.security.acls.sid.Sid)
sample.contact.DataSourcePopulator.updateAclInTransaction(org.springframework.security.acls.MutableAcl)
3026 - Declaração do método: sample.contact.DataSourcePopulator.getCreateEntities()
3026 - Declaração do método: sample.contact.DataSourcePopulator.grantPermissions(I, java.lang.String, org.springframework.security.acls.Permission)
Métodos invocados: 
org.springframework.security.acls.AclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.domain.AclImpl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
sample.contact.DataSourcePopulator.updateAclInTransaction(org.springframework.security.acls.MutableAcl)
3027 - Declaração do método: sample.contact.DataSourcePopulator.selectPerson()
Métodos invocados: 
java.util.Random.nextInt(I)
java.util.Random.nextInt(I)
3028 - Declaração do método: sample.contact.DataSourcePopulator.setCreateEntities(I)
3028 - Declaração do método: sample.contact.DataSourcePopulator.setDataSource(javax.sql.DataSource)
3028 - Declaração do método: sample.contact.DataSourcePopulator.setMutableAclService(org.springframework.security.acls.MutableAclService)
3028 - Declaração do método: sample.contact.DataSourcePopulator.setPlatformTransactionManager(org.springframework.transaction.PlatformTransactionManager)
3028 - Declaração do método: sample.contact.DataSourcePopulator.updateAclInTransaction(org.springframework.security.acls.MutableAcl)
Métodos invocados: 
org.springframework.transaction.support.TransactionTemplate.execute(org.springframework.transaction.support.TransactionCallback)
org.springframework.security.acls.MutableAclService.updateAcl(org.springframework.security.acls.MutableAcl)
3029 - Declaração do método: sample.contact.DataSourcePopulator$2.doInTransaction(org.springframework.transaction.TransactionStatus)
Métodos invocados: 
org.springframework.security.acls.MutableAclService.updateAcl(org.springframework.security.acls.MutableAcl)
3030 - Declaração do método: sample.contact.ContactManager.addPermission(sample.contact.Contact, org.springframework.security.acls.sid.Sid, org.springframework.security.acls.Permission)
3030 - Declaração do método: sample.contact.ContactManager.create(sample.contact.Contact)
3030 - Declaração do método: sample.contact.ContactManager.delete(sample.contact.Contact)
3030 - Declaração do método: sample.contact.ContactManager.deletePermission(sample.contact.Contact, org.springframework.security.acls.sid.Sid, org.springframework.security.acls.Permission)
3030 - Declaração do método: sample.contact.ContactManager.getAll()
3030 - Declaração do método: sample.contact.ContactManager.getAllRecipients()
3030 - Declaração do método: sample.contact.ContactManager.getById(java.lang.Long)
3030 - Declaração do método: sample.contact.ContactManager.getRandomContact()
3030 - Declaração do método: sample.contact.WebContactValidator.supports(java.lang.Class)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
3031 - Declaração do método: sample.contact.WebContactValidator.validate(java.lang.Object, org.springframework.validation.Errors)
Métodos invocados: 
sample.contact.WebContact.getName()
sample.contact.WebContact.getName()
java.lang.String.length()
sample.contact.WebContact.getName()
java.lang.String.length()
org.springframework.validation.Errors.rejectValue(java.lang.String, java.lang.String, java.lang.String)
sample.contact.WebContact.getEmail()
sample.contact.WebContact.getEmail()
java.lang.String.length()
sample.contact.WebContact.getEmail()
java.lang.String.length()
org.springframework.validation.Errors.rejectValue(java.lang.String, java.lang.String, java.lang.String)
3032 - Declaração do método: sample.contact.Contact.Contact(java.lang.String, java.lang.String)
3032 - Declaração do método: sample.contact.Contact.Contact()
3032 - Declaração do método: sample.contact.Contact.getEmail()
3032 - Declaração do método: sample.contact.Contact.getId()
3032 - Declaração do método: sample.contact.Contact.getName()
3032 - Declaração do método: sample.contact.Contact.setEmail(java.lang.String)
3032 - Declaração do método: sample.contact.Contact.setId(java.lang.Long)
3032 - Declaração do método: sample.contact.Contact.setName(java.lang.String)
3032 - Declaração do método: sample.contact.Contact.toString()
Métodos invocados: 
java.lang.StringBuffer.append(java.lang.String)
sample.contact.Contact.getId()
java.lang.StringBuffer.append(java.lang.String)
sample.contact.Contact.getName()
java.lang.StringBuffer.append(java.lang.String)
sample.contact.Contact.getEmail()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
3033 - Declaração do método: sample.contact.DeleteController.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
3034 - Declaração do método: sample.contact.DeleteController.handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.web.bind.RequestUtils.getRequiredIntParameter(javax.servlet.http.HttpServletRequest, java.lang.String)
sample.contact.ContactManager.getById(java.lang.Long)
sample.contact.ContactManager.delete(sample.contact.Contact)
3035 - Declaração do método: sample.contact.DeleteController.setContactManager(sample.contact.ContactManager)
3035 - Declaração do método: sample.contact.DeletePermissionController.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
3036 - Declaração do método: sample.contact.DeletePermissionController.handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.web.bind.RequestUtils.getRequiredIntParameter(javax.servlet.http.HttpServletRequest, java.lang.String)
org.springframework.web.bind.RequestUtils.getRequiredStringParameter(javax.servlet.http.HttpServletRequest, java.lang.String)
org.springframework.web.bind.RequestUtils.getRequiredIntParameter(javax.servlet.http.HttpServletRequest, java.lang.String)
sample.contact.ContactManager.getById(java.lang.Long)
org.springframework.security.acls.domain.BasePermission.buildFromMask(I)
sample.contact.ContactManager.deletePermission(sample.contact.Contact, org.springframework.security.acls.sid.Sid, org.springframework.security.acls.Permission)
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
3037 - Declaração do método: sample.contact.DeletePermissionController.setAclService(org.springframework.security.acls.AclService)
3037 - Declaração do método: sample.contact.DeletePermissionController.setContactManager(sample.contact.ContactManager)
3037 - Declaração do método: sample.contact.WebContact.getEmail()
3037 - Declaração do método: sample.contact.WebContact.getName()
3037 - Declaração do método: sample.contact.WebContact.setEmail(java.lang.String)
3037 - Declaração do método: sample.contact.WebContact.setName(java.lang.String)
3037 - Declaração do método: sample.contact.PublicIndexController.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
3038 - Declaração do método: sample.contact.PublicIndexController.getContactManager()
3038 - Declaração do método: sample.contact.PublicIndexController.handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
sample.contact.ContactManager.getRandomContact()
3039 - Declaração do método: sample.contact.PublicIndexController.setContactManager(sample.contact.ContactManager)
3039 - Declaração do método: sample.contact.AdminPermissionController.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
3040 - Declaração do método: sample.contact.AdminPermissionController.handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.web.bind.RequestUtils.getRequiredIntParameter(javax.servlet.http.HttpServletRequest, java.lang.String)
sample.contact.ContactManager.getById(java.lang.Long)
org.springframework.security.acls.AclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity)
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
3041 - Declaração do método: sample.contact.AdminPermissionController.setAclService(org.springframework.security.acls.AclService)
3041 - Declaração do método: sample.contact.AdminPermissionController.setContactManager(sample.contact.ContactManager)
3041 - Declaração do método: sample.contact.SecureIndexController.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
3042 - Declaração do método: sample.contact.SecureIndexController.getContactManager()
3042 - Declaração do método: sample.contact.SecureIndexController.handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
sample.contact.ContactManager.getAll()
java.util.List.size()
java.util.List.toArray([Ljava.lang.Object;)
java.util.Map.put(java.lang.Object, java.lang.Object)
3043 - Declaração do método: sample.contact.SecureIndexController.setContactManager(sample.contact.ContactManager)
3043 - Declaração do método: sample.contact.ContactDao.create(sample.contact.Contact)
3043 - Declaração do método: sample.contact.ContactDao.delete(java.lang.Long)
3043 - Declaração do método: sample.contact.ContactDao.findAll()
3043 - Declaração do método: sample.contact.ContactDao.findAllPrincipals()
3043 - Declaração do método: sample.contact.ContactDao.findAllRoles()
3043 - Declaração do método: sample.contact.ContactDao.getById(java.lang.Long)
3043 - Declaração do método: sample.contact.ContactDao.update(sample.contact.Contact)
3043 - Declaração do método: sample.contact.AddPermission.getContact()
3043 - Declaração do método: sample.contact.AddPermission.getPermission()
3043 - Declaração do método: sample.contact.AddPermission.getRecipient()
3043 - Declaração do método: sample.contact.AddPermission.setContact(sample.contact.Contact)
3043 - Declaração do método: sample.contact.AddPermission.setPermission(java.lang.Integer)
3043 - Declaração do método: sample.contact.AddPermission.setRecipient(java.lang.String)
3043 - Declaração do método: sample.contact.AddPermissionValidator.supports(java.lang.Class)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
3044 - Declaração do método: sample.contact.AddPermissionValidator.validate(java.lang.Object, org.springframework.validation.Errors)
Métodos invocados: 
org.springframework.validation.ValidationUtils.rejectIfEmptyOrWhitespace(org.springframework.validation.Errors, java.lang.String, java.lang.String, java.lang.String)
org.springframework.validation.ValidationUtils.rejectIfEmptyOrWhitespace(org.springframework.validation.Errors, java.lang.String, java.lang.String, java.lang.String)
sample.contact.AddPermission.getPermission()
sample.contact.AddPermission.getPermission()
java.lang.Integer.intValue()
org.springframework.security.acls.Permission.getMask()
org.springframework.security.acls.Permission.getMask()
org.springframework.security.acls.Permission.getMask()
org.springframework.validation.Errors.rejectValue(java.lang.String, java.lang.String, java.lang.String)
sample.contact.AddPermission.getRecipient()
sample.contact.AddPermission.getRecipient()
java.lang.String.length()
org.springframework.validation.Errors.rejectValue(java.lang.String, java.lang.String, java.lang.String)
3045 - Declaração do método: sample.contact.WebContactAddController.formBackingObject(javax.servlet.http.HttpServletRequest)
3045 - Declaração do método: sample.contact.WebContactAddController.getContactManager()
3045 - Declaração do método: sample.contact.WebContactAddController.onSubmit(java.lang.Object)
Métodos invocados: 
sample.contact.WebContact.getName()
sample.contact.WebContact.getEmail()
sample.contact.ContactManager.create(sample.contact.Contact)
org.springframework.web.servlet.mvc.SimpleFormController.getSuccessView()
3046 - Declaração do método: sample.contact.WebContactAddController.setContactManager(sample.contact.ContactManager)
3046 - Declaração do método: sample.contact.ContactDaoSpring.create(sample.contact.Contact)
Métodos invocados: 
sample.contact.Contact.getId()
sample.contact.Contact.getEmail()
java.io.PrintStream.println(java.lang.String)
sample.contact.ContactDaoSpring$ContactInsert.insert(sample.contact.Contact)
3047 - Declaração do método: sample.contact.ContactDaoSpring.delete(java.lang.Long)
Métodos invocados: 
sample.contact.ContactDaoSpring$ContactDelete.delete(java.lang.Long)
3048 - Declaração do método: sample.contact.ContactDaoSpring.findAll()
Métodos invocados: 
org.springframework.jdbc.object.SqlQuery.execute()
3049 - Declaração do método: sample.contact.ContactDaoSpring.findAllPrincipals()
Métodos invocados: 
org.springframework.jdbc.object.SqlQuery.execute()
3050 - Declaração do método: sample.contact.ContactDaoSpring.findAllRoles()
Métodos invocados: 
org.springframework.jdbc.object.SqlQuery.execute()
3051 - Declaração do método: sample.contact.ContactDaoSpring.getById(java.lang.Long)
Métodos invocados: 
java.lang.Long.longValue()
org.springframework.jdbc.object.SqlQuery.execute(J)
java.util.List.size()
java.util.List.get(I)
3052 - Declaração do método: sample.contact.ContactDaoSpring.initDao()
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
org.springframework.jdbc.core.support.JdbcDaoSupport.getDataSource()
3053 - Declaração do método: sample.contact.ContactDaoSpring.makeObjectIdentity(sample.contact.Contact)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
sample.contact.Contact.getId()
3054 - Declaração do método: sample.contact.ContactDaoSpring.update(sample.contact.Contact)
Métodos invocados: 
sample.contact.ContactDaoSpring$ContactUpdate.update(sample.contact.Contact)
3055 - Declaração do método: sample.contact.ContactDaoSpring$AclObjectIdentityByObjectIdentityQuery.AclObjectIdentityByObjectIdentityQuery(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
3056 - Declaração do método: sample.contact.ContactDaoSpring$AclObjectIdentityByObjectIdentityQuery.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getLong(java.lang.String)
3057 - Declaração do método: sample.contact.ContactDaoSpring$AclObjectIdentityInsert.AclObjectIdentityInsert(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
3058 - Declaração do método: sample.contact.ContactDaoSpring$AclObjectIdentityInsert.insert(java.lang.String, java.lang.Long, java.lang.String)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.queryForInt(java.lang.String)
3059 - Declaração do método: sample.contact.ContactDaoSpring$ContactDelete.ContactDelete(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
3060 - Declaração do método: sample.contact.ContactDaoSpring$ContactDelete.delete(java.lang.Long)
Métodos invocados: 
java.lang.Long.longValue()
3061 - Declaração do método: sample.contact.ContactDaoSpring$ContactInsert.ContactInsert(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
3062 - Declaração do método: sample.contact.ContactDaoSpring$ContactInsert.insert(sample.contact.Contact)
Métodos invocados: 
sample.contact.Contact.getId()
sample.contact.Contact.getName()
sample.contact.Contact.getEmail()
3063 - Declaração do método: sample.contact.ContactDaoSpring$ContactUpdate.ContactUpdate(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
3064 - Declaração do método: sample.contact.ContactDaoSpring$ContactUpdate.update(sample.contact.Contact)
Métodos invocados: 
sample.contact.Contact.getName()
sample.contact.Contact.getEmail()
sample.contact.Contact.getId()
3065 - Declaração do método: sample.contact.ContactDaoSpring$ContactsAllQuery.ContactsAllQuery(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.compile()
3066 - Declaração do método: sample.contact.ContactDaoSpring$ContactsAllQuery.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getLong(java.lang.String)
sample.contact.Contact.setId(java.lang.Long)
java.sql.ResultSet.getString(java.lang.String)
sample.contact.Contact.setName(java.lang.String)
java.sql.ResultSet.getString(java.lang.String)
sample.contact.Contact.setEmail(java.lang.String)
3067 - Declaração do método: sample.contact.ContactDaoSpring$ContactsByIdQuery.ContactsByIdQuery(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
3068 - Declaração do método: sample.contact.ContactDaoSpring$ContactsByIdQuery.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getLong(java.lang.String)
sample.contact.Contact.setId(java.lang.Long)
java.sql.ResultSet.getString(java.lang.String)
sample.contact.Contact.setName(java.lang.String)
java.sql.ResultSet.getString(java.lang.String)
sample.contact.Contact.setEmail(java.lang.String)
3069 - Declaração do método: sample.contact.ContactDaoSpring$PermissionDelete.PermissionDelete(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
3070 - Declaração do método: sample.contact.ContactDaoSpring$PermissionDelete.delete(java.lang.Long, java.lang.String)
3070 - Declaração do método: sample.contact.ContactDaoSpring$PermissionInsert.PermissionInsert(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.declareParameter(org.springframework.jdbc.core.SqlParameter)
org.springframework.jdbc.object.RdbmsOperation.compile()
3071 - Declaração do método: sample.contact.ContactDaoSpring$PermissionInsert.insert(java.lang.Long, java.lang.String, java.lang.Integer)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.queryForInt(java.lang.String)
3072 - Declaração do método: sample.contact.ContactDaoSpring$PrincipalsAllQuery.PrincipalsAllQuery(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.compile()
3073 - Declaração do método: sample.contact.ContactDaoSpring$PrincipalsAllQuery.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getString(java.lang.String)
3074 - Declaração do método: sample.contact.ContactDaoSpring$RolesAllQuery.RolesAllQuery(javax.sql.DataSource)
Métodos invocados: 
org.springframework.jdbc.object.RdbmsOperation.compile()
3075 - Declaração do método: sample.contact.ContactDaoSpring$RolesAllQuery.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getString(java.lang.String)
3076 - Declaração do método: sample.contact.ContactManagerBackend.addPermission(sample.contact.Contact, org.springframework.security.acls.sid.Sid, org.springframework.security.acls.Permission)
Métodos invocados: 
sample.contact.Contact.getId()
org.springframework.security.acls.AclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.MutableAclService.createAcl(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAclService.updateAcl(org.springframework.security.acls.MutableAcl)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
3077 - Declaração do método: sample.contact.ContactManagerBackend.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
3078 - Declaração do método: sample.contact.ContactManagerBackend.create(sample.contact.Contact)
Métodos invocados: 
sample.contact.Contact.setId(java.lang.Long)
sample.contact.ContactDao.create(sample.contact.Contact)
sample.contact.ContactManagerBackend.getUsername()
sample.contact.ContactManagerBackend.addPermission(sample.contact.Contact, org.springframework.security.acls.sid.Sid, org.springframework.security.acls.Permission)
org.apache.commons.logging.Log.isDebugEnabled()
sample.contact.ContactManagerBackend.getUsername()
org.apache.commons.logging.Log.debug(java.lang.Object)
3079 - Declaração do método: sample.contact.ContactManagerBackend.delete(sample.contact.Contact)
Métodos invocados: 
sample.contact.Contact.getId()
sample.contact.ContactDao.delete(java.lang.Long)
sample.contact.Contact.getId()
org.springframework.security.acls.MutableAclService.deleteAcl(org.springframework.security.acls.objectidentity.ObjectIdentity, Z)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
3080 - Declaração do método: sample.contact.ContactManagerBackend.deletePermission(sample.contact.Contact, org.springframework.security.acls.sid.Sid, org.springframework.security.acls.Permission)
Métodos invocados: 
sample.contact.Contact.getId()
org.springframework.security.acls.AclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.MutableAcl.getEntries()
org.springframework.security.acls.AccessControlEntry.getSid()
org.springframework.security.acls.sid.Sid.equals(java.lang.Object)
org.springframework.security.acls.AccessControlEntry.getPermission()
java.lang.Object.equals(java.lang.Object)
org.springframework.security.acls.AccessControlEntry.getId()
org.springframework.security.acls.MutableAcl.deleteAce(java.io.Serializable)
org.springframework.security.acls.MutableAclService.updateAcl(org.springframework.security.acls.MutableAcl)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
3081 - Declaração do método: sample.contact.ContactManagerBackend.getAll()
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
sample.contact.ContactDao.findAll()
3082 - Declaração do método: sample.contact.ContactManagerBackend.getAllRecipients()
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
sample.contact.ContactDao.findAllPrincipals()
3083 - Declaração do método: sample.contact.ContactManagerBackend.getById(java.lang.Long)
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
sample.contact.ContactDao.getById(java.lang.Long)
3084 - Declaração do método: sample.contact.ContactManagerBackend.getRandomContact()
Métodos invocados: 
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
sample.contact.ContactDao.findAll()
java.util.List.size()
java.util.Random.nextInt(I)
java.util.List.get(I)
3085 - Declaração do método: sample.contact.ContactManagerBackend.getUsername()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.Authentication.getPrincipal()
org.springframework.security.userdetails.UserDetails.getUsername()
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.toString()
3086 - Declaração do método: sample.contact.ContactManagerBackend.setContactDao(sample.contact.ContactDao)
3086 - Declaração do método: sample.contact.ContactManagerBackend.setMutableAclService(org.springframework.security.acls.MutableAclService)
3086 - Declaração do método: sample.contact.ContactManagerBackend.update(sample.contact.Contact)
Métodos invocados: 
sample.contact.ContactDao.update(sample.contact.Contact)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
3087 - Declaração do método: sample.contact.ClientApplication.ClientApplication(org.springframework.beans.factory.ListableBeanFactory)
3087 - Declaração do método: sample.contact.ClientApplication.invokeContactManager(org.springframework.security.Authentication, I)
Métodos invocados: 
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class, Z, Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
java.util.Map.keySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
java.lang.Object.getClass()
java.lang.Class.getName()
java.io.PrintStream.println(java.lang.String)
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.Authentication.getPrincipal()
java.io.PrintStream.println(java.lang.String)
org.springframework.security.Authentication.getPrincipal()
java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
java.io.PrintStream.println(java.lang.String)
java.lang.Throwable.printStackTrace()
java.lang.Throwable.printStackTrace()
java.lang.Object.getClass()
java.lang.Class.getName()
java.io.PrintStream.println(java.lang.String)
java.lang.Object.getClass()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
org.springframework.security.Authentication.getCredentials()
java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
org.springframework.security.Authentication.getCredentials()
java.io.PrintStream.println(java.lang.String)
java.io.PrintStream.println(java.lang.String)
java.util.Map.get(java.lang.Object)
java.io.PrintStream.println(java.lang.String)
org.springframework.util.StopWatch.start(java.lang.String)
sample.contact.ContactManager.getAll()
org.springframework.util.StopWatch.stop()
java.util.List.size()
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
sample.contact.Contact.toString()
java.io.PrintStream.println(java.lang.String)
java.io.PrintStream.println(java.lang.String)
java.io.PrintStream.println()
org.springframework.util.StopWatch.prettyPrint()
java.io.PrintStream.println(java.lang.String)
org.springframework.security.context.SecurityContextHolder.clearContext()
3088 - Declaração do método: sample.contact.ClientApplication.main([Ljava.lang.String;)
Métodos invocados: 
java.lang.System.getProperty(java.lang.String, java.lang.String)
java.lang.System.getProperty(java.lang.String, java.lang.String)
java.lang.System.getProperty(java.lang.String, java.lang.String)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.io.PrintStream.println(java.lang.String)
java.lang.System.exit(I)
java.lang.String.equals(java.lang.Object)
java.lang.Integer.parseInt(java.lang.String)
sample.contact.ClientApplication.invokeContactManager(org.springframework.security.Authentication, I)
java.lang.System.exit(I)
3089 - Declaração do método: sample.contact.GetAllContactsTests.assertContainsContact(java.lang.String, java.util.List)
Métodos invocados: 
java.util.List.iterator()
java.io.PrintStream.println(java.lang.Object)
java.util.Iterator.hasNext()
java.util.Iterator.next()
sample.contact.Contact.getId()
java.lang.Long.toString()
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
3090 - Declaração do método: sample.contact.GetAllContactsTests.assertNotContainsContact(java.lang.String, java.util.List)
Métodos invocados: 
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
sample.contact.Contact.getId()
java.lang.Long.toString()
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
3091 - Declaração do método: sample.contact.GetAllContactsTests.getConfigLocations()
Métodos invocados: 
org.springframework.test.AbstractDependencyInjectionSpringContextTests.setAutowireMode(I)
3092 - Declaração do método: sample.contact.GetAllContactsTests.getContact(java.lang.String)
Métodos invocados: 
sample.contact.ContactManager.getAll()
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
sample.contact.Contact.getId()
java.lang.Long.equals(java.lang.Object)
3093 - Declaração do método: sample.contact.GetAllContactsTests.makeActiveUser(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
3094 - Declaração do método: sample.contact.GetAllContactsTests.onTearDownInTransaction()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
3095 - Declaração do método: sample.contact.GetAllContactsTests.setContactManager(sample.contact.ContactManager)
3095 - Declaração do método: sample.contact.GetAllContactsTests.testDianne()
Métodos invocados: 
sample.contact.GetAllContactsTests.makeActiveUser(java.lang.String)
sample.contact.ContactManager.getAll()
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
java.lang.Long.toString(J)
sample.contact.GetAllContactsTests.assertContainsContact(java.lang.String, java.util.List)
java.lang.Long.toString(J)
sample.contact.GetAllContactsTests.assertContainsContact(java.lang.String, java.util.List)
java.lang.Long.toString(J)
sample.contact.GetAllContactsTests.assertContainsContact(java.lang.String, java.util.List)
java.lang.Long.toString(J)
sample.contact.GetAllContactsTests.assertContainsContact(java.lang.String, java.util.List)
java.lang.Long.toString(J)
sample.contact.GetAllContactsTests.assertNotContainsContact(java.lang.String, java.util.List)
java.lang.Long.toString(J)
sample.contact.GetAllContactsTests.assertNotContainsContact(java.lang.String, java.util.List)
java.lang.Long.toString(J)
sample.contact.GetAllContactsTests.assertNotContainsContact(java.lang.String, java.util.List)
3096 - Declaração do método: sample.contact.GetAllContactsTests.testrod()
Métodos invocados: 
sample.contact.GetAllContactsTests.makeActiveUser(java.lang.String)
sample.contact.ContactManager.getAll()
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
java.lang.Long.toString(J)
sample.contact.GetAllContactsTests.assertContainsContact(java.lang.String, java.util.List)
java.lang.Long.toString(J)
sample.contact.GetAllContactsTests.assertContainsContact(java.lang.String, java.util.List)
java.lang.Long.toString(J)
sample.contact.GetAllContactsTests.assertContainsContact(java.lang.String, java.util.List)
java.lang.Long.toString(J)
sample.contact.GetAllContactsTests.assertContainsContact(java.lang.String, java.util.List)
java.lang.Long.toString(J)
sample.contact.GetAllContactsTests.assertNotContainsContact(java.lang.String, java.util.List)
sample.contact.ContactManager.getById(java.lang.Long)
sample.contact.ContactManager.deletePermission(sample.contact.Contact, org.springframework.security.acls.sid.Sid, org.springframework.security.acls.Permission)
3097 - Declaração do método: sample.contact.GetAllContactsTests.testScott()
Métodos invocados: 
sample.contact.GetAllContactsTests.makeActiveUser(java.lang.String)
sample.contact.ContactManager.getAll()
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
java.lang.Long.toString(J)
sample.contact.GetAllContactsTests.assertContainsContact(java.lang.String, java.util.List)
java.lang.Long.toString(J)
sample.contact.GetAllContactsTests.assertContainsContact(java.lang.String, java.util.List)
java.lang.Long.toString(J)
sample.contact.GetAllContactsTests.assertContainsContact(java.lang.String, java.util.List)
java.lang.Long.toString(J)
sample.contact.GetAllContactsTests.assertContainsContact(java.lang.String, java.util.List)
java.lang.Long.toString(J)
sample.contact.GetAllContactsTests.assertContainsContact(java.lang.String, java.util.List)
java.lang.Long.toString(J)
sample.contact.GetAllContactsTests.assertNotContainsContact(java.lang.String, java.util.List)
3098 - Declaração do método: sample.dms.DocumentDaoImpl.obtainPrimaryKey()
Métodos invocados: 
org.springframework.transaction.support.TransactionSynchronizationManager.isSynchronizationActive()
org.springframework.util.Assert.isTrue(Z, java.lang.String)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.queryForLong(java.lang.String)
3099 - Declaração do método: sample.dms.DocumentDaoImpl.create(sample.dms.AbstractElement)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
sample.dms.AbstractElement.getId()
org.springframework.util.Assert.isNull(java.lang.Object, java.lang.String)
sample.dms.AbstractElement.getParent()
sample.dms.AbstractElement.getParent()
sample.dms.AbstractElement.getId()
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
sample.dms.AbstractElement.getName()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
sample.dms.DocumentDaoImpl.obtainPrimaryKey()
org.springframework.security.util.FieldUtils.setProtectedFieldValue(java.lang.String, java.lang.Object, java.lang.Object)
sample.dms.AbstractElement.getParent()
sample.dms.AbstractElement.getParent()
sample.dms.AbstractElement.getId()
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
sample.dms.AbstractElement.getName()
sample.dms.File.getContent()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
sample.dms.DocumentDaoImpl.obtainPrimaryKey()
org.springframework.security.util.FieldUtils.setProtectedFieldValue(java.lang.String, java.lang.Object, java.lang.Object)
3100 - Declaração do método: sample.dms.DocumentDaoImpl.delete(sample.dms.File)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
sample.dms.AbstractElement.getId()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
sample.dms.AbstractElement.getId()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
3101 - Declaração do método: sample.dms.DocumentDaoImpl.getDirectoryWithImmediateParentPopulated(java.lang.Long)
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.queryForObject(java.lang.String, [Ljava.lang.Object;, org.springframework.jdbc.core.RowMapper)
java.sql.ResultSet.getLong(java.lang.String)
java.lang.Long.equals(java.lang.Object)
sample.dms.DocumentDaoImpl.getDirectoryWithImmediateParentPopulated(java.lang.Long)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getLong(java.lang.String)
org.springframework.security.util.FieldUtils.setProtectedFieldValue(java.lang.String, java.lang.Object, java.lang.Object)
3102 - Declaração do método: sample.dms.DocumentDaoImpl$1.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getLong(java.lang.String)
java.lang.Long.equals(java.lang.Object)
sample.dms.DocumentDaoImpl.getDirectoryWithImmediateParentPopulated(java.lang.Long)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getLong(java.lang.String)
org.springframework.security.util.FieldUtils.setProtectedFieldValue(java.lang.String, java.lang.Object, java.lang.Object)
3103 - Declaração do método: sample.dms.DocumentDaoImpl.findElements(sample.dms.Directory)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
sample.dms.AbstractElement.getId()
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, org.springframework.jdbc.core.RowMapper)
java.sql.ResultSet.getLong(java.lang.String)
sample.dms.DocumentDaoImpl.getDirectoryWithImmediateParentPopulated(java.lang.Long)
java.util.List.toArray([Ljava.lang.Object;)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
sample.dms.AbstractElement.getId()
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, [Ljava.lang.Object;, org.springframework.jdbc.core.RowMapper)
java.sql.ResultSet.getLong(java.lang.String)
sample.dms.DocumentDaoImpl.getDirectoryWithImmediateParentPopulated(java.lang.Long)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
sample.dms.AbstractElement.getId()
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, [Ljava.lang.Object;, org.springframework.jdbc.core.RowMapper)
java.sql.ResultSet.getLong(java.lang.String)
sample.dms.DocumentDaoImpl.getDirectoryWithImmediateParentPopulated(java.lang.Long)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getLong(java.lang.String)
org.springframework.security.util.FieldUtils.setProtectedFieldValue(java.lang.String, java.lang.Object, java.lang.Object)
java.util.List.addAll(java.util.Collection)
java.util.List.toArray([Ljava.lang.Object;)
3104 - Declaração do método: sample.dms.DocumentDaoImpl$2.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getLong(java.lang.String)
sample.dms.DocumentDaoImpl.getDirectoryWithImmediateParentPopulated(java.lang.Long)
3105 - Declaração do método: sample.dms.DocumentDaoImpl$3.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getLong(java.lang.String)
sample.dms.DocumentDaoImpl.getDirectoryWithImmediateParentPopulated(java.lang.Long)
3106 - Declaração do método: sample.dms.DocumentDaoImpl$4.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getLong(java.lang.String)
sample.dms.DocumentDaoImpl.getDirectoryWithImmediateParentPopulated(java.lang.Long)
java.sql.ResultSet.getString(java.lang.String)
java.sql.ResultSet.getLong(java.lang.String)
org.springframework.security.util.FieldUtils.setProtectedFieldValue(java.lang.String, java.lang.Object, java.lang.Object)
3107 - Declaração do método: sample.dms.DocumentDaoImpl.update(sample.dms.File)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
sample.dms.AbstractElement.getId()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
sample.dms.File.getContent()
sample.dms.AbstractElement.getId()
org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String, [Ljava.lang.Object;)
3108 - Declaração do método: sample.dms.Directory.Directory()
3108 - Declaração do método: sample.dms.Directory.Directory(java.lang.String, sample.dms.Directory)
3108 - Declaração do método: sample.dms.Directory.toString()
Métodos invocados: 
sample.dms.AbstractElement.getFullName()
sample.dms.AbstractElement.getName()
sample.dms.AbstractElement.getId()
sample.dms.AbstractElement.getParent()
3109 - Declaração do método: sample.dms.DocumentDao.create(sample.dms.AbstractElement)
3109 - Declaração do método: sample.dms.DocumentDao.delete(sample.dms.File)
3109 - Declaração do método: sample.dms.DocumentDao.update(sample.dms.File)
3109 - Declaração do método: sample.dms.DocumentDao.findElements(sample.dms.Directory)
3109 - Declaração do método: sample.dms.DataSourcePopulator.DataSourcePopulator(javax.sql.DataSource, sample.dms.DocumentDao, org.springframework.transaction.PlatformTransactionManager)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
3110 - Declaração do método: sample.dms.DataSourcePopulator.afterPropertiesSet()
Métodos invocados: 
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.transaction.support.TransactionTemplate.execute(org.springframework.transaction.support.TransactionCallback)
sample.dms.DataSourcePopulator.addPermission(sample.dms.DocumentDao, sample.dms.AbstractElement, java.lang.String, I)
sample.dms.DataSourcePopulator.createSampleData(java.lang.String, java.lang.String)
sample.dms.DataSourcePopulator.createSampleData(java.lang.String, java.lang.String)
sample.dms.DataSourcePopulator.createSampleData(java.lang.String, java.lang.String)
3111 - Declaração do método: sample.dms.DataSourcePopulator$1.doInTransaction(org.springframework.transaction.TransactionStatus)
Métodos invocados: 
sample.dms.DataSourcePopulator.addPermission(sample.dms.DocumentDao, sample.dms.AbstractElement, java.lang.String, I)
3112 - Declaração do método: sample.dms.DataSourcePopulator.createSampleData(java.lang.String, java.lang.String)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
sample.dms.DocumentDao.create(sample.dms.AbstractElement)
sample.dms.DataSourcePopulator.addPermission(sample.dms.DocumentDao, sample.dms.AbstractElement, java.lang.String, I)
sample.dms.DataSourcePopulator.addPermission(sample.dms.DocumentDao, sample.dms.AbstractElement, java.lang.String, I)
sample.dms.DataSourcePopulator.createFiles(sample.dms.DocumentDao, sample.dms.Directory)
sample.dms.DocumentDao.create(sample.dms.AbstractElement)
sample.dms.DataSourcePopulator.addPermission(sample.dms.DocumentDao, sample.dms.AbstractElement, java.lang.String, I)
sample.dms.DataSourcePopulator.createFiles(sample.dms.DocumentDao, sample.dms.Directory)
sample.dms.DocumentDao.create(sample.dms.AbstractElement)
sample.dms.DataSourcePopulator.addPermission(sample.dms.DocumentDao, sample.dms.AbstractElement, java.lang.String, I)
sample.dms.DataSourcePopulator.addPermission(sample.dms.DocumentDao, sample.dms.AbstractElement, java.lang.String, I)
sample.dms.DataSourcePopulator.createFiles(sample.dms.DocumentDao, sample.dms.Directory)
org.springframework.security.context.SecurityContextHolder.clearContext()
3113 - Declaração do método: sample.dms.DataSourcePopulator.createFiles(sample.dms.DocumentDao, sample.dms.Directory)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
sample.dms.DocumentDao.findElements(sample.dms.Directory)
sample.dms.DocumentDao.create(sample.dms.AbstractElement)
sample.dms.DocumentDao.findElements(sample.dms.Directory)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
3114 - Declaração do método: sample.dms.DataSourcePopulator.addPermission(sample.dms.DocumentDao, sample.dms.AbstractElement, java.lang.String, I)
3114 - Declaração do método: sample.dms.AbstractElement.AbstractElement()
3114 - Declaração do método: sample.dms.AbstractElement.AbstractElement(java.lang.String, sample.dms.AbstractElement)
Métodos invocados: 
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
sample.dms.AbstractElement.getId()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
3115 - Declaração do método: sample.dms.AbstractElement.getId()
3115 - Declaração do método: sample.dms.AbstractElement.getName()
3115 - Declaração do método: sample.dms.AbstractElement.getParent()
3115 - Declaração do método: sample.dms.AbstractElement.getFullName()
Métodos invocados: 
sample.dms.AbstractElement.getName()
java.util.List.add(I, java.lang.Object)
sample.dms.AbstractElement.getParent()
java.util.List.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.String.equals(java.lang.Object)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I)
java.lang.StringBuffer.toString()
3116 - Declaração do método: sample.dms.File.File(java.lang.String, sample.dms.Directory)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
org.springframework.util.Assert.isTrue(Z, java.lang.String)
3117 - Declaração do método: sample.dms.File.getContent()
3117 - Declaração do método: sample.dms.File.setContent(java.lang.String)
3117 - Declaração do método: sample.dms.File.toString()
Métodos invocados: 
sample.dms.AbstractElement.getFullName()
sample.dms.AbstractElement.getName()
sample.dms.AbstractElement.getId()
sample.dms.File.getContent()
sample.dms.AbstractElement.getParent()
3118 - Declaração do método: sample.dms.secured.SecureDocumentDao.getUsers()
3118 - Declaração do método: sample.dms.secured.SecureDocumentDaoImpl.SecureDocumentDaoImpl(org.springframework.security.acls.MutableAclService)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
3119 - Declaração do método: sample.dms.secured.SecureDocumentDaoImpl.getUsers()
Métodos invocados: 
org.springframework.jdbc.core.support.JdbcDaoSupport.getJdbcTemplate()
org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String, org.springframework.jdbc.core.RowMapper)
java.util.List.toArray([Ljava.lang.Object;)
java.sql.ResultSet.getString(java.lang.String)
3120 - Declaração do método: sample.dms.secured.SecureDocumentDaoImpl$1.mapRow(java.sql.ResultSet, I)
Métodos invocados: 
java.sql.ResultSet.getString(java.lang.String)
3121 - Declaração do método: sample.dms.secured.SecureDocumentDaoImpl.create(sample.dms.AbstractElement)
Métodos invocados: 
org.springframework.security.acls.MutableAclService.createAcl(org.springframework.security.acls.objectidentity.ObjectIdentity)
sample.dms.AbstractElement.getParent()
sample.dms.AbstractElement.getParent()
org.springframework.security.acls.AclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.MutableAcl.setParent(org.springframework.security.acls.Acl)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAclService.updateAcl(org.springframework.security.acls.MutableAcl)
3122 - Declaração do método: sample.dms.secured.SecureDataSourcePopulator.SecureDataSourcePopulator(javax.sql.DataSource, sample.dms.secured.SecureDocumentDao, org.springframework.transaction.PlatformTransactionManager, org.springframework.security.acls.MutableAclService)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
3123 - Declaração do método: sample.dms.secured.SecureDataSourcePopulator.addPermission(sample.dms.DocumentDao, sample.dms.AbstractElement, java.lang.String, I)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.isInstanceOf(java.lang.Class, java.lang.Object, java.lang.String)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.util.Assert.hasText(java.lang.String, java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
java.lang.String.startsWith(java.lang.String)
org.springframework.security.acls.AclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.security.acls.MutableAclService.createAcl(org.springframework.security.acls.objectidentity.ObjectIdentity)
org.springframework.util.Assert.notNull(java.lang.Object, java.lang.String)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAcl.insertAce(java.io.Serializable, org.springframework.security.acls.Permission, org.springframework.security.acls.sid.Sid, Z)
org.springframework.security.acls.MutableAclService.updateAcl(org.springframework.security.acls.MutableAcl)
3124 - Declaração do método: org.springframework.web.portlet.sample.SecurityContextPortlet.doView(javax.portlet.RenderRequest, javax.portlet.RenderResponse)
Métodos invocados: 
javax.portlet.RenderResponse.setContentType(java.lang.String)
javax.portlet.MimeResponse.getWriter()
java.io.PrintWriter.println(java.lang.String)
java.io.PrintWriter.println(java.lang.String)
java.io.PrintWriter.println(java.lang.Object)
javax.portlet.PortletRequest.getPortletSession()
javax.portlet.PortletSession.getId()
java.io.PrintWriter.println(java.lang.String)
java.io.PrintWriter.println(java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
java.io.PrintWriter.println(java.lang.String)
javax.portlet.PortletRequest.getPortletSession()
javax.portlet.PortletSession.getAttribute(java.lang.String, I)
java.io.PrintWriter.println(java.lang.String)
3125 - Declaração do método: bigbank.BankServiceImpl.BankServiceImpl(bigbank.BankDao)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
3126 - Declaração do método: bigbank.BankServiceImpl.findAccounts()
Métodos invocados: 
bigbank.BankDao.findAccounts()
3127 - Declaração do método: bigbank.BankServiceImpl.post(bigbank.Account, D)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
bigbank.Account.getId()
org.springframework.util.Assert.notNull(java.lang.Object)
bigbank.Account.getId()
bigbank.BankDao.readAccount(java.lang.Long)
bigbank.Account.getBalance()
bigbank.Account.setBalance(D)
bigbank.BankDao.createOrUpdateAccount(bigbank.Account)
3128 - Declaração do método: bigbank.BankServiceImpl.readAccount(java.lang.Long)
Métodos invocados: 
bigbank.BankDao.readAccount(java.lang.Long)
3129 - Declaração do método: bigbank.SeedData.afterPropertiesSet()
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
bigbank.BankDao.createOrUpdateAccount(bigbank.Account)
bigbank.BankDao.createOrUpdateAccount(bigbank.Account)
bigbank.BankDao.createOrUpdateAccount(bigbank.Account)
bigbank.BankDao.createOrUpdateAccount(bigbank.Account)
3130 - Declaração do método: bigbank.SeedData.setBankDao(bigbank.BankDao)
3130 - Declaração do método: bigbank.BankDaoStub.createOrUpdateAccount(bigbank.Account)
Métodos invocados: 
bigbank.Account.getId()
bigbank.Account.setId(J)
bigbank.Account.getId()
java.util.Map.put(java.lang.Object, java.lang.Object)
java.io.PrintStream.println(java.lang.String)
3131 - Declaração do método: bigbank.BankDaoStub.findAccounts()
Métodos invocados: 
java.util.Map.values()
java.util.Collection.toArray([Ljava.lang.Object;)
java.io.PrintStream.println(java.lang.String)
java.io.PrintStream.println(java.lang.String)
3132 - Declaração do método: bigbank.BankDaoStub.readAccount(java.lang.Long)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
3133 - Declaração do método: bigbank.BankDao.readAccount(java.lang.Long)
3133 - Declaração do método: bigbank.BankDao.createOrUpdateAccount(bigbank.Account)
3133 - Declaração do método: bigbank.BankDao.findAccounts()
3133 - Declaração do método: bigbank.BankService.readAccount(java.lang.Long)
3133 - Declaração do método: bigbank.BankService.findAccounts()
3133 - Declaração do método: bigbank.BankService.post(bigbank.Account, D)
3133 - Declaração do método: bigbank.Account.Account(java.lang.String)
3133 - Declaração do método: bigbank.Account.getId()
3133 - Declaração do método: bigbank.Account.setId(J)
3133 - Declaração do método: bigbank.Account.getHolder()
3133 - Declaração do método: bigbank.Account.setHolder(java.lang.String)
3133 - Declaração do método: bigbank.Account.getBalance()
3133 - Declaração do método: bigbank.Account.setBalance(D)
3133 - Declaração do método: bigbank.Account.toString()
3133 - Declaração do método: bigbank.web.PostAccounts.PostAccounts(bigbank.BankService)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
3134 - Declaração do método: bigbank.web.PostAccounts.handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
org.springframework.web.bind.ServletRequestUtils.getRequiredLongParameter(javax.servlet.ServletRequest, java.lang.String)
org.springframework.web.bind.ServletRequestUtils.getRequiredDoubleParameter(javax.servlet.ServletRequest, java.lang.String)
bigbank.BankService.readAccount(java.lang.Long)
bigbank.BankService.post(bigbank.Account, D)
3135 - Declaração do método: bigbank.web.ListAccounts.ListAccounts(bigbank.BankService)
Métodos invocados: 
org.springframework.util.Assert.notNull(java.lang.Object)
3136 - Declaração do método: bigbank.web.ListAccounts.handleRequest(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
Métodos invocados: 
bigbank.BankService.findAccounts()
org.springframework.web.servlet.ModelAndView.addObject(java.lang.String, java.lang.Object)
3137 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyControlFactory.getControlInstance(javax.naming.ldap.Control)
Métodos invocados: 
javax.naming.ldap.Control.getID()
java.lang.String.equals(java.lang.Object)
javax.naming.ldap.Control.getEncodedValue()
3138 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyException.PasswordPolicyException(java.lang.String)
3138 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyException.PasswordPolicyException(java.lang.String, java.lang.Throwable)
3138 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyControl.PasswordPolicyControl()
3138 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyControl.PasswordPolicyControl(Z)
3138 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyControl.getEncodedValue()
3138 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyControl.getID()
3138 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyControl.isCritical()
3138 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordInHistoryException.PasswordInHistoryException(java.lang.String)
3138 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordInHistoryException.PasswordInHistoryException(java.lang.String, java.lang.Throwable)
3138 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordExpiredException.PasswordExpiredException(java.lang.String)
3138 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordExpiredException.PasswordExpiredException(java.lang.String, java.lang.Throwable)
3138 - Declaração do método: org.springframework.security.ldap.ppolicy.OracleIDPasswordPolicyControl.getID()
3138 - Declaração do método: org.springframework.security.ldap.ppolicy.AccountLockedException.AccountLockedException(java.lang.String)
3138 - Declaração do método: org.springframework.security.ldap.ppolicy.AccountLockedException.AccountLockedException(java.lang.String, java.lang.Throwable)
3138 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.PasswordPolicyResponseControl([B)
Métodos invocados: 
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl$PPolicyDecoder.decode()
3139 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.getEncodedValue()
3139 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.getErrorCode()
3139 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.getGraceLoginsRemaining()
3139 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.getTimeBeforeExpiration()
3139 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasError()
Métodos invocados: 
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.getErrorCode()
3140 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasWarning()
3140 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.isExpired()
3140 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.isLocked()
3140 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.toString()
Métodos invocados: 
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasError()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(I)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.append(I)
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasError()
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasWarning()
java.lang.StringBuffer.append(java.lang.String)
java.lang.StringBuffer.toString()
3141 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl$PPolicyDecoder.decode()
3141 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl$NetscapeDecoder.decode()
Métodos invocados: 
netscape.ldap.ber.stream.BERElement.getElement(netscape.ldap.ber.stream.BERTagDecoder, java.io.InputStream, [I)
netscape.ldap.ber.stream.BERConstruct.size()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
netscape.ldap.ber.stream.BERConstruct.size()
netscape.ldap.ber.stream.BERConstruct.elementAt(I)
netscape.ldap.ber.stream.BERTag.getTag()
netscape.ldap.ber.stream.BERTag.getValue()
netscape.ldap.ber.stream.BERChoice.getValue()
netscape.ldap.ber.stream.BERTag.getValue()
netscape.ldap.ber.stream.BERIntegral.getValue()
netscape.ldap.ber.stream.BERTag.getTag()
netscape.ldap.ber.stream.BERTag.getValue()
netscape.ldap.ber.stream.BERIntegral.getValue()
3142 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl$NetscapeDecoder$SpecificTagDecoder.getElement(netscape.ldap.ber.stream.BERTagDecoder, I, java.io.InputStream, [I, [Z)
Métodos invocados: 
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl$NetscapeDecoder$SpecificTagDecoder.setInChoice(Z)
netscape.ldap.ber.stream.BERElement.readLengthOctets(java.io.InputStream, [I)
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl$NetscapeDecoder$SpecificTagDecoder.setInChoice(Z)
java.lang.Boolean.booleanValue()
3143 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl$NetscapeDecoder$SpecificTagDecoder.setInChoice(Z)
3143 - Declaração do método: org.springframework.security.providers.ldap.authenticator.OracleIDBindAuthenticator.OracleIDBindAuthenticator(org.springframework.security.ldap.SpringSecurityContextSource)
3143 - Declaração do método: org.springframework.security.providers.ldap.authenticator.OracleIDBindAuthenticator.handleBindException(java.lang.String, java.lang.String, java.lang.Throwable)
Métodos invocados: 
java.lang.Throwable.getMessage()
org.springframework.security.providers.ldap.authenticator.OracleIDBindAuthenticator.parseOracleErrorCode(java.lang.String)
java.lang.Throwable.getMessage()
3144 - Declaração do método: org.springframework.security.providers.ldap.authenticator.OracleIDBindAuthenticator.parseOracleErrorCode(java.lang.String)
Métodos invocados: 
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.util.regex.Matcher.matches()
java.util.regex.Matcher.group(I)
java.lang.Integer.parseInt(java.lang.String)
3145 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControlTests.getPPolicyResponseCtl(javax.naming.ldap.InitialLdapContext)
Métodos invocados: 
javax.naming.ldap.InitialLdapContext.getResponseControls()
3146 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControlTests.testOpenLDAP33SecondsTillPasswordExpiryCtrlIsParsedCorrectly()
Métodos invocados: 
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasWarning()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.getTimeBeforeExpiration()
junit.framework.Assert.assertEquals(I, I)
3147 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControlTests.testOpenLDAP496GraceLoginsRemainingCtrlIsParsedCorrectly()
Métodos invocados: 
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasWarning()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.getGraceLoginsRemaining()
junit.framework.Assert.assertEquals(I, I)
3148 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControlTests.testOpenLDAP5GraceLoginsRemainingCtrlIsParsedCorrectly()
Métodos invocados: 
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasWarning()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.getGraceLoginsRemaining()
junit.framework.Assert.assertEquals(I, I)
3149 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControlTests.testOpenLDAPAccountLockedCtrlIsParsedCorrectly()
Métodos invocados: 
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasError()
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.isLocked()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasWarning()
junit.framework.Assert.assertFalse(Z)
3150 - Declaração do método: org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControlTests.testOpenLDAPPasswordExpiredCtrlIsParsedCorrectly()
Métodos invocados: 
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasError()
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.isExpired()
junit.framework.Assert.assertTrue(Z)
org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl.hasWarning()
junit.framework.Assert.assertFalse(Z)
3151 - Declaração do método: org.springframework.security.webwork.FilterDispatcher.init(javax.servlet.FilterConfig)
Métodos invocados: 
javax.servlet.FilterConfig.getServletContext()
com.opensymphony.webwork.dispatcher.DispatcherUtils.setInstance(com.opensymphony.webwork.dispatcher.DispatcherUtils)
3152 - Declaração do método: org.springframework.security.webwork.AcegiDispatcherUtils.AcegiDispatcherUtils(javax.servlet.ServletContext)
3152 - Declaração do método: org.springframework.security.webwork.AcegiDispatcherUtils.serviceAction(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.ServletContext, com.opensymphony.webwork.dispatcher.mapper.ActionMapping)
Métodos invocados: 
com.opensymphony.webwork.dispatcher.DispatcherUtils.createContextMap(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, com.opensymphony.webwork.dispatcher.mapper.ActionMapping, javax.servlet.ServletContext)
javax.servlet.ServletRequest.getAttribute(java.lang.String)
java.util.Map.put(java.lang.Object, java.lang.Object)
com.opensymphony.webwork.dispatcher.mapper.ActionMapping.getNamespace()
com.opensymphony.webwork.dispatcher.mapper.ActionMapping.getName()
com.opensymphony.webwork.dispatcher.mapper.ActionMapping.getMethod()
javax.servlet.ServletRequest.getParameter(java.lang.String)
java.util.Map.get(java.lang.Object)
java.util.Map.remove(java.lang.Object)
java.util.Map.put(java.lang.Object, java.lang.Object)
com.opensymphony.xwork.ActionProxyFactory.getFactory()
com.opensymphony.xwork.ActionProxyFactory.createActionProxy(java.lang.String, java.lang.String, java.util.Map, Z, Z)
com.opensymphony.xwork.ActionProxy.setMethod(java.lang.String)
com.opensymphony.xwork.ActionProxy.getInvocation()
com.opensymphony.xwork.ActionInvocation.getStack()
javax.servlet.ServletRequest.setAttribute(java.lang.String, java.lang.Object)
com.opensymphony.webwork.dispatcher.mapper.ActionMapping.getResult()
com.opensymphony.webwork.dispatcher.mapper.ActionMapping.getResult()
com.opensymphony.xwork.ActionProxy.getInvocation()
com.opensymphony.xwork.Result.execute(com.opensymphony.xwork.ActionInvocation)
com.opensymphony.xwork.ActionProxy.execute()
javax.servlet.ServletRequest.setAttribute(java.lang.String, java.lang.Object)
org.apache.commons.logging.Log.error(java.lang.Object, java.lang.Throwable)
com.opensymphony.webwork.dispatcher.DispatcherUtils.sendError(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.ServletContext, I, java.lang.Exception)
3153 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTag.AuthenticationTag()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthenticationTag.init()
3154 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTag.init()
3154 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTag.setVar(java.lang.String)
3154 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
3154 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTag.setScope(java.lang.String)
Métodos invocados: 
org.springframework.web.util.TagUtils.getScope(java.lang.String)
3155 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTag.doStartTag()
3155 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTag.doEndTag()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.Authentication.getPrincipal()
org.springframework.beans.BeanWrapperImpl.getPropertyValue(java.lang.String)
javax.servlet.jsp.JspContext.setAttribute(java.lang.String, java.lang.Object, I)
javax.servlet.jsp.JspContext.removeAttribute(java.lang.String, I)
javax.servlet.jsp.JspContext.removeAttribute(java.lang.String)
java.lang.Object.toString()
org.springframework.security.taglibs.authz.AuthenticationTag.writeMessage(java.lang.String)
3156 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTag.writeMessage(java.lang.String)
Métodos invocados: 
javax.servlet.jsp.JspContext.getOut()
java.lang.String.valueOf(java.lang.Object)
java.io.Writer.write(java.lang.String)
3157 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.authoritiesToRoles(java.util.Collection)
Métodos invocados: 
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.GrantedAuthority.getAuthority()
java.lang.Object.toString()
org.springframework.security.GrantedAuthority.getAuthority()
java.util.Set.add(java.lang.Object)
3158 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
org.springframework.security.taglibs.authz.AuthorizeTag.getPrincipalAuthorities()
org.springframework.web.util.ExpressionEvaluationUtils.evaluateString(java.lang.String, java.lang.String, javax.servlet.jsp.PageContext)
java.lang.String.equals(java.lang.Object)
org.springframework.security.taglibs.authz.AuthorizeTag.parseAuthoritiesString(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.retainAll(java.util.Collection, java.util.Set)
java.util.Set.isEmpty()
org.springframework.web.util.ExpressionEvaluationUtils.evaluateString(java.lang.String, java.lang.String, javax.servlet.jsp.PageContext)
java.lang.String.equals(java.lang.Object)
org.springframework.security.taglibs.authz.AuthorizeTag.parseAuthoritiesString(java.lang.String)
java.util.Collection.containsAll(java.util.Collection)
org.springframework.web.util.ExpressionEvaluationUtils.evaluateString(java.lang.String, java.lang.String, javax.servlet.jsp.PageContext)
java.lang.String.equals(java.lang.Object)
org.springframework.security.taglibs.authz.AuthorizeTag.parseAuthoritiesString(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.retainAll(java.util.Collection, java.util.Set)
java.util.Set.isEmpty()
3159 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.getIfAllGranted()
3159 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.getIfAnyGranted()
3159 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.getIfNotGranted()
3159 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.getPrincipalAuthorities()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.Authentication.getAuthorities()
org.springframework.security.Authentication.getAuthorities()
java.util.Arrays.asList([Lorg.springframework.security.GrantedAuthority;)
3160 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.parseAuthoritiesString(java.lang.String)
Métodos invocados: 
org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)
java.lang.String.trim()
org.springframework.util.StringUtils.deleteAny(java.lang.String, java.lang.String)
java.util.Set.add(java.lang.Object)
3161 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.retainAll(java.util.Collection, java.util.Set)
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.authoritiesToRoles(java.util.Collection)
org.springframework.security.taglibs.authz.AuthorizeTag.authoritiesToRoles(java.util.Collection)
java.util.Set.retainAll(java.util.Collection)
org.springframework.security.taglibs.authz.AuthorizeTag.rolesToAuthorities(java.util.Set, java.util.Collection)
3162 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.rolesToAuthorities(java.util.Set, java.util.Collection)
Métodos invocados: 
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
org.springframework.security.GrantedAuthority.getAuthority()
java.lang.String.equals(java.lang.Object)
java.util.Set.add(java.lang.Object)
3163 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.setIfAllGranted(java.lang.String)
3163 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.setIfAnyGranted(java.lang.String)
3163 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTag.setIfNotGranted(java.lang.String)
3163 - Declaração do método: org.springframework.security.taglibs.authz.AclTag.doStartTag()
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
org.springframework.web.util.ExpressionEvaluationUtils.evaluateString(java.lang.String, java.lang.String, javax.servlet.jsp.PageContext)
org.springframework.security.taglibs.authz.AclTag.parseIntegersString(java.lang.String)
org.springframework.web.util.ExpressionEvaluationUtils.evaluate(java.lang.String, java.lang.String, java.lang.Class, javax.servlet.jsp.PageContext)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.taglibs.authz.AclTag.getContext(javax.servlet.jsp.PageContext)
org.springframework.beans.factory.BeanFactoryUtils.beanNamesForTypeIncludingAncestors(org.springframework.beans.factory.ListableBeanFactory, java.lang.Class, Z, Z)
java.lang.Object.toString()
org.springframework.beans.factory.BeanFactory.getBean(java.lang.String)
org.springframework.security.acl.AclManager.getAcls(java.lang.Object, org.springframework.security.Authentication)
org.apache.commons.logging.Log.isDebugEnabled()
java.lang.Object.toString()
org.apache.commons.logging.Log.debug(java.lang.Object)
java.lang.Integer.intValue()
org.springframework.security.acl.basic.BasicAclEntry.isPermitted(I)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
3164 - Declaração do método: org.springframework.security.taglibs.authz.AclTag.getContext(javax.servlet.jsp.PageContext)
Métodos invocados: 
javax.servlet.jsp.PageContext.getServletContext()
org.springframework.web.context.support.WebApplicationContextUtils.getRequiredWebApplicationContext(javax.servlet.ServletContext)
3165 - Declaração do método: org.springframework.security.taglibs.authz.AclTag.getDomainObject()
3165 - Declaração do método: org.springframework.security.taglibs.authz.AclTag.getHasPermission()
3165 - Declaração do método: org.springframework.security.taglibs.authz.AclTag.parseIntegersString(java.lang.String)
Métodos invocados: 
java.util.StringTokenizer.hasMoreTokens()
java.util.StringTokenizer.nextToken()
java.util.Set.add(java.lang.Object)
java.util.Set.toArray([Ljava.lang.Object;)
3166 - Declaração do método: org.springframework.security.taglibs.authz.AclTag.setDomainObject(java.lang.Object)
3166 - Declaração do método: org.springframework.security.taglibs.authz.AclTag.setHasPermission(java.lang.String)
3166 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.doStartTag()
Métodos invocados: 
org.springframework.security.taglibs.authz.AccessControlListTag.initializeIfRequired()
java.lang.String.equals(java.lang.Object)
org.springframework.web.util.ExpressionEvaluationUtils.evaluateString(java.lang.String, java.lang.String, javax.servlet.jsp.PageContext)
org.springframework.security.taglibs.authz.AccessControlListTag.parsePermissionsString(java.lang.String)
org.springframework.web.util.ExpressionEvaluationUtils.evaluate(java.lang.String, java.lang.String, java.lang.Class, javax.servlet.jsp.PageContext)
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.apache.commons.logging.Log.isDebugEnabled()
org.apache.commons.logging.Log.debug(java.lang.Object)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.getAuthentication()
org.springframework.security.acls.sid.SidRetrievalStrategy.getSids(org.springframework.security.Authentication)
org.springframework.security.acls.objectidentity.ObjectIdentityRetrievalStrategy.getObjectIdentity(java.lang.Object)
org.springframework.security.acls.AclService.readAclById(org.springframework.security.acls.objectidentity.ObjectIdentity, [Lorg.springframework.security.acls.sid.Sid;)
org.springframework.security.acls.Acl.isGranted([Lorg.springframework.security.acls.Permission;, [Lorg.springframework.security.acls.sid.Sid;, Z)
3167 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.getContext(javax.servlet.jsp.PageContext)
Métodos invocados: 
javax.servlet.jsp.PageContext.getServletContext()
org.springframework.web.context.support.WebApplicationContextUtils.getRequiredWebApplicationContext(javax.servlet.ServletContext)
3168 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.getDomainObject()
3168 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.getHasPermission()
3168 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.initializeIfRequired()
Métodos invocados: 
org.springframework.security.taglibs.authz.AccessControlListTag.getContext(javax.servlet.jsp.PageContext)
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
java.util.Map.putAll(java.util.Map)
org.springframework.context.ApplicationContext.getParent()
java.util.Map.size()
java.util.Map.values()
java.util.Collection.iterator()
java.util.Iterator.next()
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
java.util.Map.size()
java.util.Map.size()
java.util.Map.values()
java.util.Collection.iterator()
java.util.Iterator.next()
org.springframework.beans.factory.ListableBeanFactory.getBeansOfType(java.lang.Class)
java.util.Map.size()
java.util.Map.size()
java.util.Map.values()
java.util.Collection.iterator()
java.util.Iterator.next()
3169 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.parsePermissionsString(java.lang.String)
Métodos invocados: 
java.util.StringTokenizer.hasMoreTokens()
java.util.StringTokenizer.nextToken()
java.lang.Integer.intValue()
org.springframework.security.acls.domain.BasePermission.buildFromMask(I)
java.util.Set.add(java.lang.Object)
java.util.Set.size()
java.util.Set.toArray([Ljava.lang.Object;)
3170 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.setDomainObject(java.lang.Object)
3170 - Declaração do método: org.springframework.security.taglibs.authz.AccessControlListTag.setHasPermission(java.lang.String)
3170 - Declaração do método: org.springframework.security.taglibs.velocity.Authz.allGranted(java.lang.String)
3170 - Declaração do método: org.springframework.security.taglibs.velocity.Authz.anyGranted(java.lang.String)
3170 - Declaração do método: org.springframework.security.taglibs.velocity.Authz.getAppCtx()
3170 - Declaração do método: org.springframework.security.taglibs.velocity.Authz.getPrincipal()
3170 - Declaração do método: org.springframework.security.taglibs.velocity.Authz.hasPermission(java.lang.Object, java.lang.String)
3170 - Declaração do método: org.springframework.security.taglibs.velocity.Authz.noneGranted(java.lang.String)
3170 - Declaração do método: org.springframework.security.taglibs.velocity.Authz.setAppCtx(org.springframework.context.ApplicationContext)
3170 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl.allGranted(java.lang.String)
Métodos invocados: 
org.springframework.security.taglibs.velocity.AuthzImpl.ifGranted(java.lang.String, I)
3171 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl.anyGranted(java.lang.String)
Métodos invocados: 
org.springframework.security.taglibs.velocity.AuthzImpl.ifGranted(java.lang.String, I)
3172 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl.getAppCtx()
3172 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl.getPrincipal()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.doStartTag()
java.lang.Throwable.printStackTrace()
java.lang.Throwable.getMessage()
org.springframework.security.taglibs.velocity.AuthzImpl$MyAuthenticationTag.getLastMessage()
3173 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl.hasPermission(java.lang.Object, java.lang.String)
Métodos invocados: 
javax.servlet.jsp.tagext.TagSupport.setPageContext(javax.servlet.jsp.PageContext)
org.springframework.security.taglibs.velocity.AuthzImpl.getAppCtx()
org.springframework.security.taglibs.velocity.AuthzImpl$MyAclTag.setContext(org.springframework.context.ApplicationContext)
org.springframework.security.taglibs.authz.AclTag.setDomainObject(java.lang.Object)
org.springframework.security.taglibs.authz.AclTag.setHasPermission(java.lang.String)
org.springframework.security.taglibs.authz.AclTag.doStartTag()
java.lang.Throwable.getMessage()
3174 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl.ifGranted(java.lang.String, I)
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setIfAllGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.setIfNotGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
java.lang.Throwable.getMessage()
3175 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl.noneGranted(java.lang.String)
Métodos invocados: 
org.springframework.security.taglibs.velocity.AuthzImpl.ifGranted(java.lang.String, I)
3176 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl.setAppCtx(org.springframework.context.ApplicationContext)
3176 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl$MyAclTag.getContext(javax.servlet.jsp.PageContext)
3176 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl$MyAclTag.setContext(org.springframework.context.ApplicationContext)
3176 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl$MyAuthenticationTag.getLastMessage()
3176 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImpl$MyAuthenticationTag.writeMessage(java.lang.String)
3176 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagCustomGrantedAuthorityTests.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
3177 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagCustomGrantedAuthorityTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
3178 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagCustomGrantedAuthorityTests.testAllowsRequestWhenCustomAuthorityPresentsCorrectRole()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
3179 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagCustomGrantedAuthorityTests.testRejectsRequestWhenCustomAuthorityReturnsNull()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
3180 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagCustomGrantedAuthorityTests$CustomGrantedAuthority.compareTo(java.lang.Object)
3180 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagCustomGrantedAuthorityTests$CustomGrantedAuthority.CustomGrantedAuthority(java.lang.String)
3180 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagCustomGrantedAuthorityTests$CustomGrantedAuthority.getAuthority()
3180 - Declaração do método: org.springframework.security.taglibs.authz.AclTagTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
3181 - Declaração do método: org.springframework.security.taglibs.authz.AclTagTests.testInclusionDeniedWhenAclManagerUnawareOfObject()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
java.lang.Long.toString()
org.springframework.security.taglibs.authz.AclTag.setHasPermission(java.lang.String)
org.springframework.security.taglibs.authz.AclTag.setDomainObject(java.lang.Object)
org.springframework.security.taglibs.authz.AclTag.doStartTag()
junit.framework.Assert.assertEquals(I, I)
3182 - Declaração do método: org.springframework.security.taglibs.authz.AclTagTests.testInclusionDeniedWhenNoListOfPermissionsGiven()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.authz.AclTag.setHasPermission(java.lang.String)
org.springframework.security.taglibs.authz.AclTag.setDomainObject(java.lang.Object)
org.springframework.security.taglibs.authz.AclTag.doStartTag()
junit.framework.Assert.assertEquals(I, I)
3183 - Declaração do método: org.springframework.security.taglibs.authz.AclTagTests.testInclusionDeniedWhenPrincipalDoesNotHoldAnyPermissions()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.authz.AclTag.setHasPermission(java.lang.String)
org.springframework.security.taglibs.authz.AclTag.getHasPermission()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.taglibs.authz.AclTag.setDomainObject(java.lang.Object)
org.springframework.security.taglibs.authz.AclTag.getDomainObject()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.springframework.security.taglibs.authz.AclTag.doStartTag()
junit.framework.Assert.assertEquals(I, I)
3184 - Declaração do método: org.springframework.security.taglibs.authz.AclTagTests.testInclusionDeniedWhenPrincipalDoesNotHoldRequiredPermissions()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
java.lang.Integer.toString()
org.springframework.security.taglibs.authz.AclTag.setHasPermission(java.lang.String)
org.springframework.security.taglibs.authz.AclTag.setDomainObject(java.lang.Object)
org.springframework.security.taglibs.authz.AclTag.doStartTag()
junit.framework.Assert.assertEquals(I, I)
3185 - Declaração do método: org.springframework.security.taglibs.authz.AclTagTests.testInclusionDeniedWhenSecurityContextEmpty()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
java.lang.Long.toString()
org.springframework.security.taglibs.authz.AclTag.setHasPermission(java.lang.String)
org.springframework.security.taglibs.authz.AclTag.setDomainObject(java.lang.Object)
org.springframework.security.taglibs.authz.AclTag.doStartTag()
junit.framework.Assert.assertEquals(I, I)
3186 - Declaração do método: org.springframework.security.taglibs.authz.AclTagTests.testInclusionPermittedWhenDomainObjectIsNull()
Métodos invocados: 
java.lang.Integer.toString()
org.springframework.security.taglibs.authz.AclTag.setHasPermission(java.lang.String)
org.springframework.security.taglibs.authz.AclTag.setDomainObject(java.lang.Object)
org.springframework.security.taglibs.authz.AclTag.doStartTag()
junit.framework.Assert.assertEquals(I, I)
3187 - Declaração do método: org.springframework.security.taglibs.authz.AclTagTests.testJspExceptionThrownIfHasPermissionNotValidFormat()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.authz.AclTag.setHasPermission(java.lang.String)
org.springframework.security.taglibs.authz.AclTag.doStartTag()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertTrue(Z)
3188 - Declaração do método: org.springframework.security.taglibs.authz.AclTagTests.testOperationWhenPrincipalHoldsPermissionOfMultipleList()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.authz.AclTag.setHasPermission(java.lang.String)
org.springframework.security.taglibs.authz.AclTag.setDomainObject(java.lang.Object)
org.springframework.security.taglibs.authz.AclTag.doStartTag()
junit.framework.Assert.assertEquals(I, I)
3189 - Declaração do método: org.springframework.security.taglibs.authz.AclTagTests.testOperationWhenPrincipalHoldsPermissionOfSingleList()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
java.lang.Integer.toString()
org.springframework.security.taglibs.authz.AclTag.setHasPermission(java.lang.String)
org.springframework.security.taglibs.authz.AclTag.setDomainObject(java.lang.Object)
org.springframework.security.taglibs.authz.AclTag.doStartTag()
junit.framework.Assert.assertEquals(I, I)
3190 - Declaração do método: org.springframework.security.taglibs.authz.AclTagTests$MyAclTag.getContext(javax.servlet.jsp.PageContext)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.equals(java.lang.Object)
org.springframework.context.support.GenericApplicationContext.getBeanFactory()
org.springframework.beans.factory.config.SingletonBeanRegistry.registerSingleton(java.lang.String, java.lang.Object)
3191 - Declaração do método: org.springframework.security.taglibs.authz.AclTagTests$MyAclTag$1.getAcls(java.lang.Object)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
3192 - Declaração do método: org.springframework.security.taglibs.authz.AclTagTests$MyAclTag$1.getAcls(java.lang.Object, org.springframework.security.Authentication)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.equals(java.lang.Object)
3193 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagAttributeTests.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
3194 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagAttributeTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
3195 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagAttributeTests.testAssertsIfAllGrantedSecond()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setIfAllGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
3196 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagAttributeTests.testAssertsIfAnyGrantedLast()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
3197 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagAttributeTests.testAssertsIfNotGrantedFirst()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setIfNotGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.setIfAllGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
3198 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagAttributeTests.testAssertsIfNotGrantedIgnoresWhitespaceInAttribute()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
3199 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagAttributeTests.testIfAllGrantedIgnoresWhitespaceInAttribute()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setIfAllGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
3200 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagAttributeTests.testIfNotGrantedIgnoresWhitespaceInAttribute()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setIfNotGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
3201 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagExpressionLanguageTests.setUp()
Métodos invocados: 
javax.servlet.jsp.tagext.TagSupport.setPageContext(javax.servlet.jsp.PageContext)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
3202 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagExpressionLanguageTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
3203 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagExpressionLanguageTests.testAllGrantedUsesExpressionLanguageWhenExpressionIsEL()
Métodos invocados: 
org.springframework.mock.web.MockPageContext.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.taglibs.authz.AuthorizeTag.setIfAllGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
3204 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagExpressionLanguageTests.testAnyGrantedUsesExpressionLanguageWhenExpressionIsEL()
Métodos invocados: 
org.springframework.mock.web.MockPageContext.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.taglibs.authz.AuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
3205 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagExpressionLanguageTests.testNotGrantedUsesExpressionLanguageWhenExpressionIsEL()
Métodos invocados: 
org.springframework.mock.web.MockPageContext.setAttribute(java.lang.String, java.lang.Object)
org.springframework.security.taglibs.authz.AuthorizeTag.setIfNotGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
3206 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
3207 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests.testOperationWhenPrincipalIsAUserDetailsInstance()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.doStartTag()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.taglibs.authz.AuthenticationTag.doEndTag()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.taglibs.authz.AuthenticationTagTests$MyAuthenticationTag.getLastMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
3208 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests.testOperationWhenPrincipalIsAString()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.doStartTag()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.taglibs.authz.AuthenticationTag.doEndTag()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.taglibs.authz.AuthenticationTagTests$MyAuthenticationTag.getLastMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
3209 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests.testNestedPropertyIsReadCorrectly()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.doStartTag()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.taglibs.authz.AuthenticationTag.doEndTag()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.taglibs.authz.AuthenticationTagTests$MyAuthenticationTag.getLastMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
3210 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests.testOperationWhenPrincipalIsNull()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.doStartTag()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.taglibs.authz.AuthenticationTag.doEndTag()
junit.framework.Assert.assertEquals(I, I)
3211 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests.testOperationWhenSecurityContextIsNull()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.doStartTag()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.taglibs.authz.AuthenticationTag.doEndTag()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.taglibs.authz.AuthenticationTagTests$MyAuthenticationTag.getLastMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
3212 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests.testSkipsBodyIfNullOrEmptyOperation()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.doStartTag()
junit.framework.Assert.assertEquals(I, I)
org.springframework.security.taglibs.authz.AuthenticationTag.doEndTag()
junit.framework.Assert.assertEquals(I, I)
3213 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests.testThrowsExceptionForUnrecognisedProperty()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.authz.AuthenticationTag.setProperty(java.lang.String)
org.springframework.security.taglibs.authz.AuthenticationTag.doStartTag()
org.springframework.security.taglibs.authz.AuthenticationTag.doEndTag()
junit.framework.Assert.fail(java.lang.String)
3214 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests$MyAuthenticationTag.getLastMessage()
3214 - Declaração do método: org.springframework.security.taglibs.authz.AuthenticationTagTests$MyAuthenticationTag.writeMessage(java.lang.String)
3214 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
3215 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
3216 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.testAlwaysReturnsUnauthorizedIfNoUserFound()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.authz.AuthorizeTag.setIfAllGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
3217 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.testDefaultsToNotOutputtingBodyWhenNoRequiredAuthorities()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.getIfAllGranted()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.getIfAnyGranted()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.getIfNotGranted()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
3218 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.testOutputsBodyIfOneRolePresent()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
3219 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.testOutputsBodyWhenAllGranted()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setIfAllGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
3220 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.testOutputsBodyWhenNotGrantedSatisfied()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setIfNotGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
3221 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.testPreventsBodyOutputIfNoSecurityContext()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.authz.AuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
3222 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.testSkipsBodyIfNoAnyRolePresent()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setIfAnyGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
3223 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.testSkipsBodyWhenMissingAnAllGranted()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setIfAllGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
3224 - Declaração do método: org.springframework.security.taglibs.authz.AuthorizeTagTests.testSkipsBodyWhenNotGrantedUnsatisfied()
Métodos invocados: 
org.springframework.security.taglibs.authz.AuthorizeTag.setIfNotGranted(java.lang.String)
org.springframework.security.taglibs.authz.AuthorizeTag.doStartTag()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
3225 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTest.setUp()
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.equals(java.lang.Object)
org.springframework.context.ConfigurableApplicationContext.getBeanFactory()
org.springframework.beans.factory.config.SingletonBeanRegistry.registerSingleton(java.lang.String, java.lang.Object)
3226 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTest$1.getAcls(java.lang.Object)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
3227 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTest$1.getAcls(java.lang.Object, org.springframework.security.Authentication)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
org.springframework.security.Authentication.getPrincipal()
java.lang.Object.equals(java.lang.Object)
3228 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTest.tearDown()
Métodos invocados: 
org.springframework.context.ConfigurableApplicationContext.close()
3229 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTest.testIllegalArgumentExceptionThrownIfHasPermissionNotValidFormat()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.velocity.Authz.setAppCtx(org.springframework.context.ApplicationContext)
org.springframework.security.taglibs.velocity.Authz.hasPermission(java.lang.Object, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
3230 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTest.testInclusionDeniedWhenAclManagerUnawareOfObject()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.velocity.Authz.setAppCtx(org.springframework.context.ApplicationContext)
java.lang.Long.toString()
org.springframework.security.taglibs.velocity.Authz.hasPermission(java.lang.Object, java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
3231 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTest.testInclusionDeniedWhenNoListOfPermissionsGiven()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.velocity.Authz.setAppCtx(org.springframework.context.ApplicationContext)
org.springframework.security.taglibs.velocity.Authz.hasPermission(java.lang.Object, java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
3232 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTest.testInclusionDeniedWhenPrincipalDoesNotHoldAnyPermissions()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.velocity.Authz.setAppCtx(org.springframework.context.ApplicationContext)
org.springframework.security.taglibs.velocity.Authz.hasPermission(java.lang.Object, java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
3233 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTest.testInclusionDeniedWhenPrincipalDoesNotHoldRequiredPermissions()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.velocity.Authz.setAppCtx(org.springframework.context.ApplicationContext)
java.lang.Integer.toString()
org.springframework.security.taglibs.velocity.Authz.hasPermission(java.lang.Object, java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
3234 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTest.testInclusionDeniedWhenSecurityContextEmpty()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.velocity.Authz.setAppCtx(org.springframework.context.ApplicationContext)
java.lang.Long.toString()
org.springframework.security.taglibs.velocity.Authz.hasPermission(java.lang.Object, java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
3235 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTest.testInclusionPermittedWhenDomainObjectIsNull()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.setAppCtx(org.springframework.context.ApplicationContext)
java.lang.Integer.toString()
org.springframework.security.taglibs.velocity.Authz.hasPermission(java.lang.Object, java.lang.String)
junit.framework.Assert.assertTrue(Z)
3236 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTest.testOperationWhenPrincipalHoldsPermissionOfMultipleList()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.velocity.Authz.setAppCtx(org.springframework.context.ApplicationContext)
org.springframework.security.taglibs.velocity.Authz.hasPermission(java.lang.Object, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
3237 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTest.testOperationWhenPrincipalHoldsPermissionOfSingleList()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.velocity.Authz.setAppCtx(org.springframework.context.ApplicationContext)
java.lang.Integer.toString()
org.springframework.security.taglibs.velocity.Authz.hasPermission(java.lang.Object, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
3238 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTest.testOperationWhenPrincipalIsAString()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.velocity.Authz.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
3239 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTest.testOperationWhenPrincipalIsAUserDetailsInstance()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.velocity.Authz.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
3240 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTest.testOperationWhenPrincipalIsNull()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.velocity.Authz.getPrincipal()
junit.framework.Assert.assertNull(java.lang.Object)
3241 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplTest.testOperationWhenSecurityContextIsNull()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.velocity.Authz.getPrincipal()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
3242 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
3243 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
3244 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.testAlwaysReturnsUnauthorizedIfNoUserFound()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.velocity.Authz.allGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
3245 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.testDefaultsToNotOutputtingBodyWhenNoRequiredAuthorities()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.allGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.taglibs.velocity.Authz.anyGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.springframework.security.taglibs.velocity.Authz.noneGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
3246 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.testOutputsBodyIfOneRolePresent()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.anyGranted(java.lang.String)
junit.framework.Assert.assertTrue(Z)
3247 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.testOutputsBodyWhenAllGranted()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.allGranted(java.lang.String)
junit.framework.Assert.assertTrue(Z)
3248 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.testOutputsBodyWhenNotGrantedSatisfied()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.noneGranted(java.lang.String)
junit.framework.Assert.assertTrue(Z)
3249 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.testPreventsBodyOutputIfNoSecureContext()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
org.springframework.security.taglibs.velocity.Authz.anyGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
3250 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.testSkipsBodyIfNoAnyRolePresent()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.anyGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
3251 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.testSkipsBodyWhenMissingAnAllGranted()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.allGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
3252 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAuthorizeTagTest.testSkipsBodyWhenNotGrantedUnsatisfied()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.noneGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
3253 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAttributeTest.setUp()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.getContext()
org.springframework.security.context.SecurityContext.setAuthentication(org.springframework.security.Authentication)
3254 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAttributeTest.tearDown()
Métodos invocados: 
org.springframework.security.context.SecurityContextHolder.clearContext()
3255 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAttributeTest.testAssertsIfAllGrantedSecond()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.allGranted(java.lang.String)
org.springframework.security.taglibs.velocity.Authz.anyGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
3256 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAttributeTest.testAssertsIfAnyGrantedLast()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.anyGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
3257 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAttributeTest.testAssertsIfNotGrantedFirst()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.allGranted(java.lang.String)
org.springframework.security.taglibs.velocity.Authz.noneGranted(java.lang.String)
org.springframework.security.taglibs.velocity.Authz.anyGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
3258 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAttributeTest.testAssertsIfNotGrantedIgnoresWhitespaceInAttribute()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.anyGranted(java.lang.String)
junit.framework.Assert.assertTrue(Z)
3259 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAttributeTest.testIfAllGrantedIgnoresWhitespaceInAttribute()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.allGranted(java.lang.String)
junit.framework.Assert.assertTrue(Z)
3260 - Declaração do método: org.springframework.security.taglibs.velocity.AuthzImplAttributeTest.testIfNotGrantedIgnoresWhitespaceInAttribute()
Métodos invocados: 
org.springframework.security.taglibs.velocity.Authz.allGranted(java.lang.String)
junit.framework.Assert.assertFalse(Z)
