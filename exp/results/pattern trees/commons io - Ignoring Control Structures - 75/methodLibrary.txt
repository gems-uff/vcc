1 - Declaração do método: org.apache.commons.io.FileDeleteStrategy.FileDeleteStrategy(java.lang.String)
1 - Declaração do método: org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)
Métodos invocados: 
java.io.File.exists()
org.apache.commons.io.FileDeleteStrategy.doDelete(java.io.File)
2 - Declaração do método: org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)
Métodos invocados: 
java.io.File.exists()
org.apache.commons.io.FileDeleteStrategy.doDelete(java.io.File)
3 - Declaração do método: org.apache.commons.io.FileDeleteStrategy.doDelete(java.io.File)
Métodos invocados: 
java.io.File.delete()
4 - Declaração do método: org.apache.commons.io.FileDeleteStrategy.toString()
4 - Declaração do método: org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy.ForceFileDeleteStrategy()
4 - Declaração do método: org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy.doDelete(java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.forceDelete(java.io.File)
5 - Declaração do método: org.apache.commons.io.FilenameUtils.FilenameUtils()
5 - Declaração do método: org.apache.commons.io.FilenameUtils.isSystemWindows()
5 - Declaração do método: org.apache.commons.io.FilenameUtils.isSeparator(C)
5 - Declaração do método: org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String, C, Z)
6 - Declaração do método: org.apache.commons.io.FilenameUtils.normalize(java.lang.String, Z)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String, C, Z)
7 - Declaração do método: org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String, C, Z)
8 - Declaração do método: org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String, Z)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String, C, Z)
9 - Declaração do método: org.apache.commons.io.FilenameUtils.doNormalize(java.lang.String, C, Z)
Métodos invocados: 
java.lang.String.length()
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
java.lang.String.length()
java.lang.String.getChars(I, I, [C, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
10 - Declaração do método: org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
java.lang.String.length()
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
java.lang.String.charAt(I)
org.apache.commons.io.FilenameUtils.isSeparator(C)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
11 - Declaração do método: org.apache.commons.io.FilenameUtils.directoryContains(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
12 - Declaração do método: org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)
Métodos invocados: 
java.lang.String.indexOf(I)
java.lang.String.replace(C, C)
13 - Declaração do método: org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)
Métodos invocados: 
java.lang.String.indexOf(I)
java.lang.String.replace(C, C)
14 - Declaração do método: org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.isSystemWindows()
org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)
15 - Declaração do método: org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.charAt(I)
org.apache.commons.io.FilenameUtils.isSeparator(C)
java.lang.String.indexOf(I, I)
java.lang.String.indexOf(I, I)
java.lang.Math.min(I, I)
java.lang.String.charAt(I)
java.lang.Character.toUpperCase(C)
java.lang.String.charAt(I)
org.apache.commons.io.FilenameUtils.isSeparator(C)
org.apache.commons.io.FilenameUtils.isSeparator(C)
org.apache.commons.io.FilenameUtils.isSeparator(C)
java.lang.String.indexOf(I, I)
java.lang.String.indexOf(I, I)
java.lang.Math.min(I, I)
org.apache.commons.io.FilenameUtils.isSeparator(C)
16 - Declaração do método: org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)
Métodos invocados: 
java.lang.String.lastIndexOf(I)
java.lang.String.lastIndexOf(I)
java.lang.Math.max(I, I)
17 - Declaração do método: org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
Métodos invocados: 
java.lang.String.lastIndexOf(I)
org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)
18 - Declaração do método: org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I, I)
19 - Declaração do método: org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String, I)
20 - Declaração do método: org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String, I)
21 - Declaração do método: org.apache.commons.io.FilenameUtils.doGetPath(java.lang.String, I)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I, I)
22 - Declaração do método: org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.doGetFullPath(java.lang.String, Z)
23 - Declaração do método: org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.doGetFullPath(java.lang.String, Z)
24 - Declaração do método: org.apache.commons.io.FilenameUtils.doGetFullPath(java.lang.String, Z)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
java.lang.String.length()
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)
java.lang.String.substring(I, I)
java.lang.String.substring(I, I)
25 - Declaração do método: org.apache.commons.io.FilenameUtils.getName(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)
java.lang.String.substring(I)
26 - Declaração do método: org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getName(java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
27 - Declaração do método: org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
java.lang.String.substring(I)
28 - Declaração do método: org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
java.lang.String.substring(I, I)
29 - Declaração do método: org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String, Z, org.apache.commons.io.IOCase)
30 - Declaração do método: org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String, Z, org.apache.commons.io.IOCase)
31 - Declaração do método: org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String, Z, org.apache.commons.io.IOCase)
32 - Declaração do método: org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String, Z, org.apache.commons.io.IOCase)
33 - Declaração do método: org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String, Z, org.apache.commons.io.IOCase)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
34 - Declaração do método: org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.length()
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
java.lang.String.equals(java.lang.Object)
35 - Declaração do método: org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
java.lang.String.equals(java.lang.Object)
36 - Declaração do método: org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
Métodos invocados: 
java.util.Collection.isEmpty()
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
java.lang.String.equals(java.lang.Object)
37 - Declaração do método: org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
38 - Declaração do método: org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
39 - Declaração do método: org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
java.util.Vector.size()
java.util.Stack.pop()
java.lang.String.equals(java.lang.Object)
java.lang.String.length()
java.lang.String.equals(java.lang.Object)
java.lang.String.length()
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
java.util.Stack.push([I)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
java.lang.String.length()
java.lang.String.length()
java.util.Vector.size()
40 - Declaração do método: org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
Métodos invocados: 
java.lang.String.indexOf(I)
java.lang.String.indexOf(I)
java.lang.String.toCharArray()
java.lang.AbstractStringBuilder.length()
java.lang.StringBuilder.toString()
java.util.ArrayList.add(java.lang.String)
java.lang.AbstractStringBuilder.setLength(I)
java.util.ArrayList.add(java.lang.String)
java.util.ArrayList.isEmpty()
java.util.ArrayList.size()
java.util.ArrayList.get(I)
java.lang.String.equals(java.lang.Object)
java.util.ArrayList.add(java.lang.String)
java.lang.StringBuilder.append(C)
java.lang.AbstractStringBuilder.length()
java.lang.StringBuilder.toString()
java.util.ArrayList.add(java.lang.String)
java.util.ArrayList.size()
java.util.ArrayList.toArray([Ljava.lang.String;)
41 - Declaração do método: org.apache.commons.io.ByteOrderMark.ByteOrderMark(java.lang.String, [I)
Métodos invocados: 
java.lang.String.length()
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
42 - Declaração do método: org.apache.commons.io.ByteOrderMark.getCharsetName()
42 - Declaração do método: org.apache.commons.io.ByteOrderMark.length()
42 - Declaração do método: org.apache.commons.io.ByteOrderMark.get(I)
42 - Declaração do método: org.apache.commons.io.ByteOrderMark.getBytes()
42 - Declaração do método: org.apache.commons.io.ByteOrderMark.equals(java.lang.Object)
Métodos invocados: 
org.apache.commons.io.ByteOrderMark.length()
org.apache.commons.io.ByteOrderMark.get(I)
43 - Declaração do método: org.apache.commons.io.ByteOrderMark.hashCode()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Object.hashCode()
44 - Declaração do método: org.apache.commons.io.ByteOrderMark.toString()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getSimpleName()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.Integer.toHexString(I)
java.lang.String.toUpperCase()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
45 - Declaração do método: org.apache.commons.io.FileCleaner.track(java.io.File, java.lang.Object)
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object)
46 - Declaração do método: org.apache.commons.io.FileCleaner.track(java.io.File, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
47 - Declaração do método: org.apache.commons.io.FileCleaner.track(java.lang.String, java.lang.Object)
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object)
48 - Declaração do método: org.apache.commons.io.FileCleaner.track(java.lang.String, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
49 - Declaração do método: org.apache.commons.io.FileCleaner.getTrackCount()
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.getTrackCount()
50 - Declaração do método: org.apache.commons.io.FileCleaner.exitWhenFinished()
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.exitWhenFinished()
51 - Declaração do método: org.apache.commons.io.FileCleaner.getInstance()
51 - Declaração do método: org.apache.commons.io.HexDump.HexDump()
51 - Declaração do método: org.apache.commons.io.HexDump.dump([B, J, java.io.OutputStream, I)
Métodos invocados: 
org.apache.commons.io.HexDump.dump(java.lang.StringBuilder, J)
java.lang.StringBuilder.append(C)
org.apache.commons.io.HexDump.dump(java.lang.StringBuilder, B)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
java.lang.String.getBytes()
java.io.OutputStream.write([B)
java.io.OutputStream.flush()
java.lang.AbstractStringBuilder.setLength(I)
52 - Declaração do método: org.apache.commons.io.HexDump.dump(java.lang.StringBuilder, J)
Métodos invocados: 
java.lang.StringBuilder.append(C)
53 - Declaração do método: org.apache.commons.io.HexDump.dump(java.lang.StringBuilder, B)
Métodos invocados: 
java.lang.StringBuilder.append(C)
54 - Declaração do método: org.apache.commons.io.EndianUtils.EndianUtils()
54 - Declaração do método: org.apache.commons.io.EndianUtils.swapShort(S)
54 - Declaração do método: org.apache.commons.io.EndianUtils.swapInteger(I)
54 - Declaração do método: org.apache.commons.io.EndianUtils.swapLong(J)
54 - Declaração do método: org.apache.commons.io.EndianUtils.swapFloat(F)
Métodos invocados: 
java.lang.Float.floatToIntBits(F)
org.apache.commons.io.EndianUtils.swapInteger(I)
java.lang.Float.intBitsToFloat(I)
55 - Declaração do método: org.apache.commons.io.EndianUtils.swapDouble(D)
Métodos invocados: 
java.lang.Double.doubleToLongBits(D)
org.apache.commons.io.EndianUtils.swapLong(J)
java.lang.Double.longBitsToDouble(J)
56 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedShort([B, I, S)
56 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedShort([B, I)
56 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedUnsignedShort([B, I)
56 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedInteger([B, I, I)
56 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedInteger([B, I)
56 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger([B, I)
56 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedLong([B, I, J)
56 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedLong([B, I)
56 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedFloat([B, I, F)
Métodos invocados: 
java.lang.Float.floatToIntBits(F)
org.apache.commons.io.EndianUtils.writeSwappedInteger([B, I, I)
57 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedFloat([B, I)
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedInteger([B, I)
java.lang.Float.intBitsToFloat(I)
58 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedDouble([B, I, D)
Métodos invocados: 
java.lang.Double.doubleToLongBits(D)
org.apache.commons.io.EndianUtils.writeSwappedLong([B, I, J)
59 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedDouble([B, I)
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedLong([B, I)
java.lang.Double.longBitsToDouble(J)
60 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedShort(java.io.OutputStream, S)
Métodos invocados: 
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
61 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedShort(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
62 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
63 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedInteger(java.io.OutputStream, I)
Métodos invocados: 
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
64 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedInteger(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
65 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
66 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedLong(java.io.OutputStream, J)
Métodos invocados: 
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
java.io.OutputStream.write(I)
67 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedLong(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.EndianUtils.read(java.io.InputStream)
org.apache.commons.io.EndianUtils.readSwappedLong([B, I)
68 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedFloat(java.io.OutputStream, F)
Métodos invocados: 
java.lang.Float.floatToIntBits(F)
org.apache.commons.io.EndianUtils.writeSwappedInteger(java.io.OutputStream, I)
69 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedFloat(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedInteger(java.io.InputStream)
java.lang.Float.intBitsToFloat(I)
70 - Declaração do método: org.apache.commons.io.EndianUtils.writeSwappedDouble(java.io.OutputStream, D)
Métodos invocados: 
java.lang.Double.doubleToLongBits(D)
org.apache.commons.io.EndianUtils.writeSwappedLong(java.io.OutputStream, J)
71 - Declaração do método: org.apache.commons.io.EndianUtils.readSwappedDouble(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedLong(java.io.InputStream)
java.lang.Double.longBitsToDouble(J)
72 - Declaração do método: org.apache.commons.io.EndianUtils.read(java.io.InputStream)
Métodos invocados: 
java.io.InputStream.read()
73 - Declaração do método: org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object)
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
74 - Declaração do método: org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
Métodos invocados: 
java.io.File.getPath()
org.apache.commons.io.FileCleaningTracker.addTracker(java.lang.String, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
75 - Declaração do método: org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object)
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
76 - Declaração do método: org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.addTracker(java.lang.String, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
77 - Declaração do método: org.apache.commons.io.FileCleaningTracker.addTracker(java.lang.String, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
Métodos invocados: 
java.lang.Thread.start()
java.util.Collection.add(org.apache.commons.io.FileCleaningTracker$Tracker)
78 - Declaração do método: org.apache.commons.io.FileCleaningTracker.getTrackCount()
Métodos invocados: 
java.util.Collection.size()
79 - Declaração do método: org.apache.commons.io.FileCleaningTracker.getDeleteFailures()
79 - Declaração do método: org.apache.commons.io.FileCleaningTracker.exitWhenFinished()
Métodos invocados: 
java.lang.Thread.interrupt()
80 - Declaração do método: org.apache.commons.io.FileCleaningTracker$Reaper.Reaper()
Métodos invocados: 
java.lang.Thread.setPriority(I)
java.lang.Thread.setDaemon(Z)
81 - Declaração do método: org.apache.commons.io.FileCleaningTracker$Reaper.run()
Métodos invocados: 
java.util.Collection.size()
java.lang.ref.ReferenceQueue.remove()
java.util.Collection.remove(java.lang.Object)
org.apache.commons.io.FileCleaningTracker$Tracker.delete()
org.apache.commons.io.FileCleaningTracker$Tracker.getPath()
java.util.List.add(java.lang.String)
java.lang.ref.Reference.clear()
82 - Declaração do método: org.apache.commons.io.FileCleaningTracker$Tracker.Tracker(java.lang.String, org.apache.commons.io.FileDeleteStrategy, java.lang.Object, java.lang.ref.ReferenceQueue)
82 - Declaração do método: org.apache.commons.io.FileCleaningTracker$Tracker.getPath()
82 - Declaração do método: org.apache.commons.io.FileCleaningTracker$Tracker.delete()
Métodos invocados: 
org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)
83 - Declaração do método: org.apache.commons.io.IOCase.forName(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
84 - Declaração do método: org.apache.commons.io.IOCase.IOCase(java.lang.String, Z)
84 - Declaração do método: org.apache.commons.io.IOCase.readResolve()
Métodos invocados: 
org.apache.commons.io.IOCase.forName(java.lang.String)
85 - Declaração do método: org.apache.commons.io.IOCase.getName()
85 - Declaração do método: org.apache.commons.io.IOCase.isCaseSensitive()
85 - Declaração do método: org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.compareTo(java.lang.String)
java.lang.String.compareToIgnoreCase(java.lang.String)
86 - Declaração do método: org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equalsIgnoreCase(java.lang.String)
87 - Declaração do método: org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.regionMatches(Z, I, java.lang.String, I, I)
88 - Declaração do método: org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.length()
java.lang.String.regionMatches(Z, I, java.lang.String, I, I)
89 - Declaração do método: org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.length()
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
90 - Declaração do método: org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.regionMatches(Z, I, java.lang.String, I, I)
91 - Declaração do método: org.apache.commons.io.IOCase.toString()
91 - Declaração do método: org.apache.commons.io.LineIterator.LineIterator(java.io.Reader)
91 - Declaração do método: org.apache.commons.io.LineIterator.hasNext()
Métodos invocados: 
java.io.BufferedReader.readLine()
org.apache.commons.io.LineIterator.isValidLine(java.lang.String)
org.apache.commons.io.LineIterator.close()
92 - Declaração do método: org.apache.commons.io.LineIterator.isValidLine(java.lang.String)
92 - Declaração do método: org.apache.commons.io.LineIterator.next()
Métodos invocados: 
org.apache.commons.io.LineIterator.nextLine()
93 - Declaração do método: org.apache.commons.io.LineIterator.nextLine()
Métodos invocados: 
org.apache.commons.io.LineIterator.hasNext()
94 - Declaração do método: org.apache.commons.io.LineIterator.close()
Métodos invocados: 
org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)
95 - Declaração do método: org.apache.commons.io.LineIterator.remove()
95 - Declaração do método: org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)
Métodos invocados: 
org.apache.commons.io.LineIterator.close()
96 - Declaração do método: org.apache.commons.io.FileSystemUtils.FileSystemUtils()
96 - Declaração do método: org.apache.commons.io.FileSystemUtils.freeSpace(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z, J)
97 - Declaração do método: org.apache.commons.io.FileSystemUtils.freeSpaceKb(java.lang.String)
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceKb(java.lang.String, J)
98 - Declaração do método: org.apache.commons.io.FileSystemUtils.freeSpaceKb(java.lang.String, J)
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z, J)
99 - Declaração do método: org.apache.commons.io.FileSystemUtils.freeSpaceKb()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceKb(J)
100 - Declaração do método: org.apache.commons.io.FileSystemUtils.freeSpaceKb(J)
Métodos invocados: 
java.io.File.getAbsolutePath()
org.apache.commons.io.FileSystemUtils.freeSpaceKb(java.lang.String, J)
101 - Declaração do método: org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z, J)
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String, J)
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String, J)
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
102 - Declaração do método: org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String, J)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.normalize(java.lang.String, Z)
java.lang.String.length()
java.lang.String.charAt(I)
org.apache.commons.io.FileSystemUtils.performCommand([Ljava.lang.String;, I, J)
java.util.List.size()
java.util.List.get(I)
java.lang.String.length()
org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String, java.lang.String)
103 - Declaração do método: org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.Character.isDigit(C)
java.lang.String.charAt(I)
java.lang.Character.isDigit(C)
java.lang.String.substring(I, I)
java.lang.AbstractStringBuilder.length()
java.lang.AbstractStringBuilder.charAt(I)
java.lang.AbstractStringBuilder.charAt(I)
java.lang.StringBuilder.deleteCharAt(I)
java.lang.StringBuilder.toString()
org.apache.commons.io.FileSystemUtils.parseBytes(java.lang.String, java.lang.String)
104 - Declaração do método: org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
Métodos invocados: 
java.lang.String.length()
java.lang.String.length()
org.apache.commons.io.FileSystemUtils.performCommand([Ljava.lang.String;, I, J)
java.util.List.size()
java.util.List.get(I)
java.util.StringTokenizer.countTokens()
java.util.StringTokenizer.countTokens()
java.util.List.size()
java.util.List.get(I)
java.util.StringTokenizer.nextToken()
java.util.StringTokenizer.nextToken()
java.util.StringTokenizer.nextToken()
java.util.StringTokenizer.nextToken()
org.apache.commons.io.FileSystemUtils.parseBytes(java.lang.String, java.lang.String)
105 - Declaração do método: org.apache.commons.io.FileSystemUtils.parseBytes(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.Long.parseLong(java.lang.String)
106 - Declaração do método: org.apache.commons.io.FileSystemUtils.performCommand([Ljava.lang.String;, I, J)
Métodos invocados: 
org.apache.commons.io.ThreadMonitor.start(J)
org.apache.commons.io.FileSystemUtils.openProcess([Ljava.lang.String;)
java.lang.Process.getInputStream()
java.lang.Process.getOutputStream()
java.lang.Process.getErrorStream()
java.io.BufferedReader.readLine()
java.util.List.size()
java.lang.String.toLowerCase(java.util.Locale)
java.lang.String.trim()
java.util.List.add(java.lang.String)
java.io.BufferedReader.readLine()
java.lang.Process.waitFor()
org.apache.commons.io.ThreadMonitor.stop(java.lang.Thread)
java.lang.Process.exitValue()
java.lang.Process.exitValue()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.isEmpty()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)
java.lang.Process.destroy()
107 - Declaração do método: org.apache.commons.io.FileSystemUtils.openProcess([Ljava.lang.String;)
Métodos invocados: 
java.lang.Runtime.getRuntime()
java.lang.Runtime.exec([Ljava.lang.String;)
108 - Declaração do método: org.apache.commons.io.FileExistsException.FileExistsException()
108 - Declaração do método: org.apache.commons.io.FileExistsException.FileExistsException(java.lang.String)
108 - Declaração do método: org.apache.commons.io.FileExistsException.FileExistsException(java.io.File)
108 - Declaração do método: org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause(java.lang.String, java.lang.Throwable)
Métodos invocados: 
java.lang.Throwable.initCause(java.lang.Throwable)
109 - Declaração do método: org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause(java.lang.Throwable)
Métodos invocados: 
java.lang.Throwable.toString()
java.lang.Throwable.initCause(java.lang.Throwable)
110 - Declaração do método: org.apache.commons.io.CopyUtils.CopyUtils()
110 - Declaração do método: org.apache.commons.io.CopyUtils.copy([B, java.io.OutputStream)
Métodos invocados: 
java.io.OutputStream.write([B)
111 - Declaração do método: org.apache.commons.io.CopyUtils.copy([B, java.io.Writer)
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.InputStream, java.io.Writer)
112 - Declaração do método: org.apache.commons.io.CopyUtils.copy([B, java.io.Writer, java.lang.String)
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)
113 - Declaração do método: org.apache.commons.io.CopyUtils.copy(java.io.InputStream, java.io.OutputStream)
Métodos invocados: 
java.io.InputStream.read([B)
java.io.OutputStream.write([B, I, I)
114 - Declaração do método: org.apache.commons.io.CopyUtils.copy(java.io.Reader, java.io.Writer)
Métodos invocados: 
java.io.Reader.read([C)
java.io.Writer.write([C, I, I)
115 - Declaração do método: org.apache.commons.io.CopyUtils.copy(java.io.InputStream, java.io.Writer)
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.Reader, java.io.Writer)
116 - Declaração do método: org.apache.commons.io.CopyUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.Reader, java.io.Writer)
117 - Declaração do método: org.apache.commons.io.CopyUtils.copy(java.io.Reader, java.io.OutputStream)
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.Reader, java.io.Writer)
java.io.OutputStreamWriter.flush()
118 - Declaração do método: org.apache.commons.io.CopyUtils.copy(java.lang.String, java.io.OutputStream)
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.Reader, java.io.Writer)
java.io.OutputStreamWriter.flush()
119 - Declaração do método: org.apache.commons.io.CopyUtils.copy(java.lang.String, java.io.Writer)
Métodos invocados: 
java.io.Writer.write(java.lang.String)
120 - Declaração do método: org.apache.commons.io.FileUtils.FileUtils()
120 - Declaração do método: org.apache.commons.io.FileUtils.getFile(java.io.File, [Ljava.lang.String;)
120 - Declaração do método: org.apache.commons.io.FileUtils.getFile([Ljava.lang.String;)
120 - Declaração do método: org.apache.commons.io.FileUtils.getTempDirectoryPath()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
121 - Declaração do método: org.apache.commons.io.FileUtils.getTempDirectory()
Métodos invocados: 
org.apache.commons.io.FileUtils.getTempDirectoryPath()
122 - Declaração do método: org.apache.commons.io.FileUtils.getUserDirectoryPath()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
123 - Declaração do método: org.apache.commons.io.FileUtils.getUserDirectory()
Métodos invocados: 
org.apache.commons.io.FileUtils.getUserDirectoryPath()
124 - Declaração do método: org.apache.commons.io.FileUtils.openInputStream(java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.canRead()
125 - Declaração do método: org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.openOutputStream(java.io.File, Z)
126 - Declaração do método: org.apache.commons.io.FileUtils.openOutputStream(java.io.File, Z)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.canWrite()
java.io.File.getParentFile()
java.io.File.mkdirs()
java.io.File.isDirectory()
127 - Declaração do método: org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
Métodos invocados: 
java.lang.String.valueOf(J)
java.lang.String.valueOf(J)
java.lang.String.valueOf(J)
java.lang.String.valueOf(J)
java.lang.String.valueOf(J)
java.lang.String.valueOf(J)
java.lang.String.valueOf(J)
128 - Declaração do método: org.apache.commons.io.FileUtils.touch(java.io.File)
Métodos invocados: 
java.io.File.exists()
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
java.lang.System.currentTimeMillis()
java.io.File.setLastModified(J)
129 - Declaração do método: org.apache.commons.io.FileUtils.convertFileCollectionToFileArray(java.util.Collection)
Métodos invocados: 
java.util.Collection.size()
java.util.Collection.toArray([Ljava.io.File;)
130 - Declaração do método: org.apache.commons.io.FileUtils.innerListFiles(java.util.Collection, java.io.File, org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
java.io.File.listFiles(java.io.FileFilter)
java.io.File.isDirectory()
org.apache.commons.io.FileUtils.innerListFiles(java.util.Collection, java.io.File, org.apache.commons.io.filefilter.IOFileFilter)
java.util.Collection.add(java.io.File)
131 - Declaração do método: org.apache.commons.io.FileUtils.listFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
java.io.File.isDirectory()
org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.and([Lorg.apache.commons.io.filefilter.IOFileFilter;)
org.apache.commons.io.filefilter.FileFilterUtils.and([Lorg.apache.commons.io.filefilter.IOFileFilter;)
org.apache.commons.io.filefilter.FileFilterUtils.or([Lorg.apache.commons.io.filefilter.IOFileFilter;)
org.apache.commons.io.FileUtils.innerListFiles(java.util.Collection, java.io.File, org.apache.commons.io.filefilter.IOFileFilter)
132 - Declaração do método: org.apache.commons.io.FileUtils.iterateFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
org.apache.commons.io.FileUtils.listFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
java.util.Collection.iterator()
133 - Declaração do método: org.apache.commons.io.FileUtils.toSuffixes([Ljava.lang.String;)
133 - Declaração do método: org.apache.commons.io.FileUtils.listFiles(java.io.File, [Ljava.lang.String;, Z)
Métodos invocados: 
org.apache.commons.io.FileUtils.toSuffixes([Ljava.lang.String;)
org.apache.commons.io.FileUtils.listFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
134 - Declaração do método: org.apache.commons.io.FileUtils.iterateFiles(java.io.File, [Ljava.lang.String;, Z)
Métodos invocados: 
org.apache.commons.io.FileUtils.listFiles(java.io.File, [Ljava.lang.String;, Z)
java.util.Collection.iterator()
135 - Declaração do método: org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.isDirectory()
java.io.File.length()
java.io.File.length()
java.io.File.getCanonicalFile()
java.io.File.getCanonicalFile()
java.io.File.equals(java.lang.Object)
org.apache.commons.io.IOUtils.contentEquals(java.io.InputStream, java.io.InputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
136 - Declaração do método: org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
Métodos invocados: 
java.io.File.exists()
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.isDirectory()
java.io.File.getCanonicalFile()
java.io.File.getCanonicalFile()
java.io.File.equals(java.lang.Object)
org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader, java.io.Reader)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)
137 - Declaração do método: org.apache.commons.io.FileUtils.toFile(java.net.URL)
Métodos invocados: 
java.net.URL.getProtocol()
java.lang.String.equalsIgnoreCase(java.lang.String)
java.net.URL.getFile()
java.lang.String.replace(C, C)
org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)
138 - Declaração do método: org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)
Métodos invocados: 
java.lang.String.indexOf(I)
java.lang.String.length()
java.nio.ByteBuffer.allocate(I)
java.lang.String.charAt(I)
java.lang.String.substring(I, I)
java.lang.Integer.parseInt(java.lang.String, I)
java.nio.ByteBuffer.put(B)
java.lang.String.charAt(I)
java.nio.Buffer.position()
java.nio.Buffer.flip()
java.nio.charset.Charset.decode(java.nio.ByteBuffer)
java.nio.CharBuffer.toString()
java.lang.StringBuffer.append(java.lang.String)
java.nio.Buffer.clear()
java.lang.String.charAt(I)
java.lang.StringBuffer.append(C)
java.lang.StringBuffer.toString()
139 - Declaração do método: org.apache.commons.io.FileUtils.toFiles([Ljava.net.URL;)
Métodos invocados: 
java.net.URL.getProtocol()
java.lang.String.equals(java.lang.Object)
org.apache.commons.io.FileUtils.toFile(java.net.URL)
140 - Declaração do método: org.apache.commons.io.FileUtils.toURLs([Ljava.io.File;)
Métodos invocados: 
java.io.File.toURI()
java.net.URI.toURL()
141 - Declaração do método: org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File, java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File, java.io.File, Z)
142 - Declaração do método: org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File, java.io.File, Z)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.getName()
org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File, Z)
143 - Declaração do método: org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File, Z)
144 - Declaração do método: org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File, Z)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.getCanonicalPath()
java.io.File.getCanonicalPath()
java.lang.String.equals(java.lang.Object)
java.io.File.getParentFile()
java.io.File.mkdirs()
java.io.File.isDirectory()
java.io.File.exists()
java.io.File.canWrite()
org.apache.commons.io.FileUtils.doCopyFile(java.io.File, java.io.File, Z)
145 - Declaração do método: org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.OutputStream)
Métodos invocados: 
org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream)
java.io.FileInputStream.close()
146 - Declaração do método: org.apache.commons.io.FileUtils.doCopyFile(java.io.File, java.io.File, Z)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.FileInputStream.getChannel()
java.io.FileOutputStream.getChannel()
java.nio.channels.FileChannel.size()
java.nio.channels.FileChannel.transferFrom(java.nio.channels.ReadableByteChannel, J, J)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
java.io.File.length()
java.io.File.length()
java.io.File.lastModified()
java.io.File.setLastModified(J)
147 - Declaração do método: org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.getName()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, Z)
148 - Declaração do método: org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, Z)
149 - Declaração do método: org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, Z)
Métodos invocados: 
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, java.io.FileFilter, Z)
150 - Declaração do método: org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, java.io.FileFilter)
Métodos invocados: 
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, java.io.FileFilter, Z)
151 - Declaração do método: org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, java.io.FileFilter, Z)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.getCanonicalPath()
java.io.File.getCanonicalPath()
java.lang.String.equals(java.lang.Object)
java.io.File.getCanonicalPath()
java.io.File.getCanonicalPath()
java.lang.String.startsWith(java.lang.String)
java.io.File.listFiles()
java.io.File.listFiles(java.io.FileFilter)
java.io.File.getName()
java.io.File.getCanonicalPath()
java.util.List.add(java.lang.String)
org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File, java.io.File, java.io.FileFilter, Z, java.util.List)
152 - Declaração do método: org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File, java.io.File, java.io.FileFilter, Z, java.util.List)
Métodos invocados: 
java.io.File.listFiles()
java.io.File.listFiles(java.io.FileFilter)
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.mkdirs()
java.io.File.isDirectory()
java.io.File.canWrite()
java.io.File.getName()
java.io.File.getCanonicalPath()
java.util.List.contains(java.lang.Object)
java.io.File.isDirectory()
org.apache.commons.io.FileUtils.doCopyDirectory(java.io.File, java.io.File, java.io.FileFilter, Z, java.util.List)
org.apache.commons.io.FileUtils.doCopyFile(java.io.File, java.io.File, Z)
java.io.File.lastModified()
java.io.File.setLastModified(J)
153 - Declaração do método: org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL, java.io.File)
Métodos invocados: 
java.net.URL.openStream()
org.apache.commons.io.FileUtils.copyInputStreamToFile(java.io.InputStream, java.io.File)
154 - Declaração do método: org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL, java.io.File, I, I)
Métodos invocados: 
java.net.URL.openConnection()
java.net.URLConnection.setConnectTimeout(I)
java.net.URLConnection.setReadTimeout(I)
java.net.URLConnection.getInputStream()
org.apache.commons.io.FileUtils.copyInputStreamToFile(java.io.InputStream, java.io.File)
155 - Declaração do método: org.apache.commons.io.FileUtils.copyInputStreamToFile(java.io.InputStream, java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream)
java.io.FileOutputStream.close()
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
156 - Declaração do método: org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
Métodos invocados: 
java.io.File.exists()
org.apache.commons.io.FileUtils.isSymlink(java.io.File)
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
java.io.File.delete()
157 - Declaração do método: org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
java.io.File.delete()
158 - Declaração do método: org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
java.io.File.exists()
java.io.File.exists()
java.io.File.getCanonicalPath()
java.io.File.getCanonicalPath()
org.apache.commons.io.FilenameUtils.directoryContains(java.lang.String, java.lang.String)
159 - Declaração do método: org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.listFiles()
org.apache.commons.io.FileUtils.forceDelete(java.io.File)
160 - Declaração do método: org.apache.commons.io.FileUtils.waitFor(java.io.File, I)
Métodos invocados: 
java.io.File.exists()
java.lang.Thread.sleep(J)
161 - Declaração do método: org.apache.commons.io.FileUtils.readFileToString(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FileUtils.openInputStream(java.io.File)
org.apache.commons.io.IOUtils.toString(java.io.InputStream, java.lang.String)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
162 - Declaração do método: org.apache.commons.io.FileUtils.readFileToString(java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.readFileToString(java.io.File, java.lang.String)
163 - Declaração do método: org.apache.commons.io.FileUtils.readFileToByteArray(java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.openInputStream(java.io.File)
java.io.File.length()
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream, J)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
164 - Declaração do método: org.apache.commons.io.FileUtils.readLines(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FileUtils.openInputStream(java.io.File)
org.apache.commons.io.IOUtils.readLines(java.io.InputStream, java.lang.String)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
165 - Declaração do método: org.apache.commons.io.FileUtils.readLines(java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.readLines(java.io.File, java.lang.String)
166 - Declaração do método: org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FileUtils.openInputStream(java.io.File)
org.apache.commons.io.IOUtils.lineIterator(java.io.InputStream, java.lang.String)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
167 - Declaração do método: org.apache.commons.io.FileUtils.lineIterator(java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)
168 - Declaração do método: org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String, Z)
169 - Declaração do método: org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String, Z)
Métodos invocados: 
org.apache.commons.io.FileUtils.openOutputStream(java.io.File, Z)
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream, java.lang.String)
java.io.OutputStream.close()
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
170 - Declaração do método: org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String, Z)
171 - Declaração do método: org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, Z)
Métodos invocados: 
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String, Z)
172 - Declaração do método: org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence)
Métodos invocados: 
org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, java.lang.String, Z)
173 - Declaração do método: org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, Z)
Métodos invocados: 
org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, java.lang.String, Z)
174 - Declaração do método: org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, java.lang.String, Z)
175 - Declaração do método: org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, java.lang.String, Z)
Métodos invocados: 
java.lang.CharSequence.toString()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String, Z)
176 - Declaração do método: org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File, [B)
Métodos invocados: 
org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File, [B, Z)
177 - Declaração do método: org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File, [B, Z)
Métodos invocados: 
org.apache.commons.io.FileUtils.openOutputStream(java.io.File, Z)
java.io.OutputStream.write([B)
java.io.OutputStream.close()
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
178 - Declaração do método: org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection)
Métodos invocados: 
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String, Z)
179 - Declaração do método: org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, Z)
Métodos invocados: 
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String, Z)
180 - Declaração do método: org.apache.commons.io.FileUtils.writeLines(java.io.File, java.util.Collection)
Métodos invocados: 
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String, Z)
181 - Declaração do método: org.apache.commons.io.FileUtils.writeLines(java.io.File, java.util.Collection, Z)
Métodos invocados: 
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String, Z)
182 - Declaração do método: org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String, Z)
183 - Declaração do método: org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String, Z)
Métodos invocados: 
org.apache.commons.io.FileUtils.openOutputStream(java.io.File, Z)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String)
java.io.OutputStream.close()
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
184 - Declaração do método: org.apache.commons.io.FileUtils.writeLines(java.io.File, java.util.Collection, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String, Z)
185 - Declaração do método: org.apache.commons.io.FileUtils.writeLines(java.io.File, java.util.Collection, java.lang.String, Z)
Métodos invocados: 
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String, Z)
186 - Declaração do método: org.apache.commons.io.FileUtils.forceDelete(java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.io.File.exists()
java.io.File.delete()
187 - Declaração do método: org.apache.commons.io.FileUtils.forceDeleteOnExit(java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
org.apache.commons.io.FileUtils.deleteDirectoryOnExit(java.io.File)
java.io.File.deleteOnExit()
188 - Declaração do método: org.apache.commons.io.FileUtils.deleteDirectoryOnExit(java.io.File)
Métodos invocados: 
java.io.File.exists()
org.apache.commons.io.FileUtils.isSymlink(java.io.File)
org.apache.commons.io.FileUtils.cleanDirectoryOnExit(java.io.File)
java.io.File.deleteOnExit()
189 - Declaração do método: org.apache.commons.io.FileUtils.cleanDirectoryOnExit(java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.listFiles()
org.apache.commons.io.FileUtils.forceDeleteOnExit(java.io.File)
190 - Declaração do método: org.apache.commons.io.FileUtils.forceMkdir(java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.mkdirs()
java.io.File.isDirectory()
191 - Declaração do método: org.apache.commons.io.FileUtils.sizeOf(java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
java.io.File.length()
192 - Declaração do método: org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.listFiles()
org.apache.commons.io.FileUtils.sizeOf(java.io.File)
193 - Declaração do método: org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.lastModified()
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, J)
194 - Declaração do método: org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.util.Date)
Métodos invocados: 
java.util.Date.getTime()
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, J)
195 - Declaração do método: org.apache.commons.io.FileUtils.isFileNewer(java.io.File, J)
Métodos invocados: 
java.io.File.exists()
java.io.File.lastModified()
196 - Declaração do método: org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.lastModified()
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, J)
197 - Declaração do método: org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.util.Date)
Métodos invocados: 
java.util.Date.getTime()
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, J)
198 - Declaração do método: org.apache.commons.io.FileUtils.isFileOlder(java.io.File, J)
Métodos invocados: 
java.io.File.exists()
java.io.File.lastModified()
199 - Declaração do método: org.apache.commons.io.FileUtils.checksumCRC32(java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.checksum(java.io.File, java.util.zip.Checksum)
java.util.zip.CRC32.getValue()
200 - Declaração do método: org.apache.commons.io.FileUtils.checksum(java.io.File, java.util.zip.Checksum)
Métodos invocados: 
java.io.File.isDirectory()
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
201 - Declaração do método: org.apache.commons.io.FileUtils.moveDirectory(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.exists()
java.io.File.renameTo(java.io.File)
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.io.File.exists()
202 - Declaração do método: org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File, java.io.File, Z)
Métodos invocados: 
java.io.File.exists()
java.io.File.mkdirs()
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.getName()
org.apache.commons.io.FileUtils.moveDirectory(java.io.File, java.io.File)
203 - Declaração do método: org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.renameTo(java.io.File)
org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File)
java.io.File.delete()
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
204 - Declaração do método: org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File, java.io.File, Z)
Métodos invocados: 
java.io.File.exists()
java.io.File.mkdirs()
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.getName()
org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
205 - Declaração do método: org.apache.commons.io.FileUtils.moveToDirectory(java.io.File, java.io.File, Z)
Métodos invocados: 
java.io.File.exists()
java.io.File.isDirectory()
org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File, java.io.File, Z)
org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File, java.io.File, Z)
206 - Declaração do método: org.apache.commons.io.FileUtils.isSymlink(java.io.File)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.isSystemWindows()
java.io.File.getParent()
java.io.File.getParentFile()
java.io.File.getCanonicalFile()
java.io.File.getName()
java.io.File.getCanonicalFile()
java.io.File.getAbsoluteFile()
java.io.File.equals(java.lang.Object)
207 - Declaração do método: org.apache.commons.io.DirectoryWalker.DirectoryWalker()
207 - Declaração do método: org.apache.commons.io.DirectoryWalker.DirectoryWalker(java.io.FileFilter, I)
207 - Declaração do método: org.apache.commons.io.DirectoryWalker.DirectoryWalker(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter, I)
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.or([Lorg.apache.commons.io.filefilter.IOFileFilter;)
208 - Declaração do método: org.apache.commons.io.DirectoryWalker.walk(java.io.File, java.util.Collection)
Métodos invocados: 
org.apache.commons.io.DirectoryWalker.handleStart(java.io.File, java.util.Collection)
org.apache.commons.io.DirectoryWalker.walk(java.io.File, I, java.util.Collection)
org.apache.commons.io.DirectoryWalker.handleEnd(java.util.Collection)
org.apache.commons.io.DirectoryWalker.handleCancelled(java.io.File, java.util.Collection, org.apache.commons.io.DirectoryWalker$CancelException)
209 - Declaração do método: org.apache.commons.io.DirectoryWalker.walk(java.io.File, I, java.util.Collection)
Métodos invocados: 
org.apache.commons.io.DirectoryWalker.checkIfCancelled(java.io.File, I, java.util.Collection)
org.apache.commons.io.DirectoryWalker.handleDirectory(java.io.File, I, java.util.Collection)
org.apache.commons.io.DirectoryWalker.handleDirectoryStart(java.io.File, I, java.util.Collection)
org.apache.commons.io.DirectoryWalker.checkIfCancelled(java.io.File, I, java.util.Collection)
java.io.File.listFiles()
java.io.File.listFiles(java.io.FileFilter)
org.apache.commons.io.DirectoryWalker.filterDirectoryContents(java.io.File, I, [Ljava.io.File;)
org.apache.commons.io.DirectoryWalker.handleRestricted(java.io.File, I, java.util.Collection)
java.io.File.isDirectory()
org.apache.commons.io.DirectoryWalker.walk(java.io.File, I, java.util.Collection)
org.apache.commons.io.DirectoryWalker.checkIfCancelled(java.io.File, I, java.util.Collection)
org.apache.commons.io.DirectoryWalker.handleFile(java.io.File, I, java.util.Collection)
org.apache.commons.io.DirectoryWalker.checkIfCancelled(java.io.File, I, java.util.Collection)
org.apache.commons.io.DirectoryWalker.handleDirectoryEnd(java.io.File, I, java.util.Collection)
org.apache.commons.io.DirectoryWalker.checkIfCancelled(java.io.File, I, java.util.Collection)
210 - Declaração do método: org.apache.commons.io.DirectoryWalker.checkIfCancelled(java.io.File, I, java.util.Collection)
Métodos invocados: 
org.apache.commons.io.DirectoryWalker.handleIsCancelled(java.io.File, I, java.util.Collection)
211 - Declaração do método: org.apache.commons.io.DirectoryWalker.handleIsCancelled(java.io.File, I, java.util.Collection)
211 - Declaração do método: org.apache.commons.io.DirectoryWalker.handleCancelled(java.io.File, java.util.Collection, org.apache.commons.io.DirectoryWalker$CancelException)
211 - Declaração do método: org.apache.commons.io.DirectoryWalker.handleStart(java.io.File, java.util.Collection)
211 - Declaração do método: org.apache.commons.io.DirectoryWalker.handleDirectory(java.io.File, I, java.util.Collection)
211 - Declaração do método: org.apache.commons.io.DirectoryWalker.handleDirectoryStart(java.io.File, I, java.util.Collection)
211 - Declaração do método: org.apache.commons.io.DirectoryWalker.filterDirectoryContents(java.io.File, I, [Ljava.io.File;)
211 - Declaração do método: org.apache.commons.io.DirectoryWalker.handleFile(java.io.File, I, java.util.Collection)
211 - Declaração do método: org.apache.commons.io.DirectoryWalker.handleRestricted(java.io.File, I, java.util.Collection)
211 - Declaração do método: org.apache.commons.io.DirectoryWalker.handleDirectoryEnd(java.io.File, I, java.util.Collection)
211 - Declaração do método: org.apache.commons.io.DirectoryWalker.handleEnd(java.util.Collection)
211 - Declaração do método: org.apache.commons.io.DirectoryWalker$CancelException.CancelException(java.io.File, I)
211 - Declaração do método: org.apache.commons.io.DirectoryWalker$CancelException.CancelException(java.lang.String, java.io.File, I)
211 - Declaração do método: org.apache.commons.io.DirectoryWalker$CancelException.getFile()
211 - Declaração do método: org.apache.commons.io.DirectoryWalker$CancelException.getDepth()
211 - Declaração do método: org.apache.commons.io.IOUtils.IOUtils()
211 - Declaração do método: org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)
Métodos invocados: 
org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)
212 - Declaração do método: org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
Métodos invocados: 
org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)
213 - Declaração do método: org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)
214 - Declaração do método: org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
Métodos invocados: 
org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)
215 - Declaração do método: org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)
Métodos invocados: 
java.io.Closeable.close()
216 - Declaração do método: org.apache.commons.io.IOUtils.closeQuietly(java.net.Socket)
Métodos invocados: 
java.net.Socket.close()
217 - Declaração do método: org.apache.commons.io.IOUtils.closeQuietly(java.nio.channels.Selector)
Métodos invocados: 
java.nio.channels.Selector.close()
218 - Declaração do método: org.apache.commons.io.IOUtils.closeQuietly(java.net.ServerSocket)
Métodos invocados: 
java.net.ServerSocket.close()
219 - Declaração do método: org.apache.commons.io.IOUtils.toBufferedInputStream(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(java.io.InputStream)
220 - Declaração do método: org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
221 - Declaração do método: org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream, J)
Métodos invocados: 
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream, I)
222 - Declaração do método: org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream, I)
Métodos invocados: 
java.io.InputStream.read([B, I, I)
223 - Declaração do método: org.apache.commons.io.IOUtils.toByteArray(java.io.Reader)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
224 - Declaração do método: org.apache.commons.io.IOUtils.toByteArray(java.io.Reader, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream, java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
225 - Declaração do método: org.apache.commons.io.IOUtils.toByteArray(java.lang.String)
Métodos invocados: 
java.lang.String.getBytes()
226 - Declaração do método: org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer)
java.io.CharArrayWriter.toCharArray()
227 - Declaração do método: org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)
java.io.CharArrayWriter.toCharArray()
228 - Declaração do método: org.apache.commons.io.IOUtils.toCharArray(java.io.Reader)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
java.io.CharArrayWriter.toCharArray()
229 - Declaração do método: org.apache.commons.io.IOUtils.toString(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.IOUtils.toString(java.io.InputStream, java.lang.String)
230 - Declaração do método: org.apache.commons.io.IOUtils.toString(java.io.InputStream, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)
org.apache.commons.io.output.StringBuilderWriter.toString()
231 - Declaração do método: org.apache.commons.io.IOUtils.toString(java.io.Reader)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
org.apache.commons.io.output.StringBuilderWriter.toString()
232 - Declaração do método: org.apache.commons.io.IOUtils.toString(java.net.URI)
Métodos invocados: 
org.apache.commons.io.IOUtils.toString(java.net.URI, java.lang.String)
233 - Declaração do método: org.apache.commons.io.IOUtils.toString(java.net.URI, java.lang.String)
Métodos invocados: 
java.net.URI.toURL()
org.apache.commons.io.IOUtils.toString(java.net.URL, java.lang.String)
234 - Declaração do método: org.apache.commons.io.IOUtils.toString(java.net.URL)
Métodos invocados: 
org.apache.commons.io.IOUtils.toString(java.net.URL, java.lang.String)
235 - Declaração do método: org.apache.commons.io.IOUtils.toString(java.net.URL, java.lang.String)
Métodos invocados: 
java.net.URL.openStream()
org.apache.commons.io.IOUtils.toString(java.io.InputStream, java.lang.String)
java.io.InputStream.close()
236 - Declaração do método: org.apache.commons.io.IOUtils.toString([B)
236 - Declaração do método: org.apache.commons.io.IOUtils.toString([B, java.lang.String)
236 - Declaração do método: org.apache.commons.io.IOUtils.readLines(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.IOUtils.readLines(java.io.Reader)
237 - Declaração do método: org.apache.commons.io.IOUtils.readLines(java.io.InputStream, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.readLines(java.io.InputStream)
org.apache.commons.io.IOUtils.readLines(java.io.Reader)
238 - Declaração do método: org.apache.commons.io.IOUtils.readLines(java.io.Reader)
Métodos invocados: 
java.io.BufferedReader.readLine()
java.util.List.add(java.lang.String)
java.io.BufferedReader.readLine()
239 - Declaração do método: org.apache.commons.io.IOUtils.lineIterator(java.io.Reader)
239 - Declaração do método: org.apache.commons.io.IOUtils.lineIterator(java.io.InputStream, java.lang.String)
239 - Declaração do método: org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence)
Métodos invocados: 
java.lang.CharSequence.toString()
org.apache.commons.io.IOUtils.toInputStream(java.lang.String)
240 - Declaração do método: org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence, java.lang.String)
Métodos invocados: 
java.lang.CharSequence.toString()
org.apache.commons.io.IOUtils.toInputStream(java.lang.String, java.lang.String)
241 - Declaração do método: org.apache.commons.io.IOUtils.toInputStream(java.lang.String)
Métodos invocados: 
java.lang.String.getBytes()
242 - Declaração do método: org.apache.commons.io.IOUtils.toInputStream(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.getBytes(java.lang.String)
java.lang.String.getBytes()
243 - Declaração do método: org.apache.commons.io.IOUtils.write([B, java.io.OutputStream)
Métodos invocados: 
java.io.OutputStream.write([B)
244 - Declaração do método: org.apache.commons.io.IOUtils.write([B, java.io.Writer)
Métodos invocados: 
java.io.Writer.write(java.lang.String)
245 - Declaração do método: org.apache.commons.io.IOUtils.write([B, java.io.Writer, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.Writer)
java.io.Writer.write(java.lang.String)
246 - Declaração do método: org.apache.commons.io.IOUtils.write([C, java.io.Writer)
Métodos invocados: 
java.io.Writer.write([C)
247 - Declaração do método: org.apache.commons.io.IOUtils.write([C, java.io.OutputStream)
Métodos invocados: 
java.lang.String.getBytes()
java.io.OutputStream.write([B)
248 - Declaração do método: org.apache.commons.io.IOUtils.write([C, java.io.OutputStream, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.write([C, java.io.OutputStream)
java.lang.String.getBytes(java.lang.String)
java.io.OutputStream.write([B)
249 - Declaração do método: org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.Writer)
Métodos invocados: 
java.lang.CharSequence.toString()
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.Writer)
250 - Declaração do método: org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream)
Métodos invocados: 
java.lang.CharSequence.toString()
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream)
251 - Declaração do método: org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream, java.lang.String)
Métodos invocados: 
java.lang.CharSequence.toString()
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream, java.lang.String)
252 - Declaração do método: org.apache.commons.io.IOUtils.write(java.lang.String, java.io.Writer)
Métodos invocados: 
java.io.Writer.write(java.lang.String)
253 - Declaração do método: org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream)
Métodos invocados: 
java.lang.String.getBytes()
java.io.OutputStream.write([B)
254 - Declaração do método: org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream)
java.lang.String.getBytes(java.lang.String)
java.io.OutputStream.write([B)
255 - Declaração do método: org.apache.commons.io.IOUtils.write(java.lang.StringBuffer, java.io.Writer)
Métodos invocados: 
java.lang.StringBuffer.toString()
java.io.Writer.write(java.lang.String)
256 - Declaração do método: org.apache.commons.io.IOUtils.write(java.lang.StringBuffer, java.io.OutputStream)
Métodos invocados: 
java.lang.StringBuffer.toString()
java.lang.String.getBytes()
java.io.OutputStream.write([B)
257 - Declaração do método: org.apache.commons.io.IOUtils.write(java.lang.StringBuffer, java.io.OutputStream, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.StringBuffer, java.io.OutputStream)
java.lang.StringBuffer.toString()
java.lang.String.getBytes(java.lang.String)
java.io.OutputStream.write([B)
258 - Declaração do método: org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream)
Métodos invocados: 
java.lang.Object.toString()
java.lang.String.getBytes()
java.io.OutputStream.write([B)
java.lang.String.getBytes()
java.io.OutputStream.write([B)
259 - Declaração do método: org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream)
java.lang.Object.toString()
java.lang.String.getBytes(java.lang.String)
java.io.OutputStream.write([B)
java.lang.String.getBytes(java.lang.String)
java.io.OutputStream.write([B)
260 - Declaração do método: org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.Writer)
Métodos invocados: 
java.lang.Object.toString()
java.io.Writer.write(java.lang.String)
java.io.Writer.write(java.lang.String)
261 - Declaração do método: org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream)
Métodos invocados: 
org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream)
262 - Declaração do método: org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream)
Métodos invocados: 
java.io.InputStream.read([B)
java.io.OutputStream.write([B, I, I)
263 - Declaração do método: org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
264 - Declaração do método: org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer)
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
265 - Declaração do método: org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
Métodos invocados: 
org.apache.commons.io.IOUtils.copyLarge(java.io.Reader, java.io.Writer)
266 - Declaração do método: org.apache.commons.io.IOUtils.copyLarge(java.io.Reader, java.io.Writer)
Métodos invocados: 
java.io.Reader.read([C)
java.io.Writer.write([C, I, I)
267 - Declaração do método: org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
java.io.OutputStreamWriter.flush()
268 - Declaração do método: org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream)
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
java.io.OutputStreamWriter.flush()
269 - Declaração do método: org.apache.commons.io.IOUtils.contentEquals(java.io.InputStream, java.io.InputStream)
Métodos invocados: 
java.io.InputStream.read()
java.io.InputStream.read()
java.io.InputStream.read()
java.io.InputStream.read()
270 - Declaração do método: org.apache.commons.io.IOUtils.contentEquals(java.io.Reader, java.io.Reader)
Métodos invocados: 
java.io.Reader.read()
java.io.Reader.read()
java.io.Reader.read()
java.io.Reader.read()
271 - Declaração do método: org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader, java.io.Reader)
Métodos invocados: 
java.io.BufferedReader.readLine()
java.io.BufferedReader.readLine()
java.lang.String.equals(java.lang.Object)
java.io.BufferedReader.readLine()
java.io.BufferedReader.readLine()
java.lang.String.equals(java.lang.Object)
272 - Declaração do método: org.apache.commons.io.IOUtils.skip(java.io.InputStream, J)
Métodos invocados: 
java.lang.Math.min(J, J)
java.io.InputStream.read([B, I, I)
273 - Declaração do método: org.apache.commons.io.IOUtils.skip(java.io.Reader, J)
Métodos invocados: 
java.lang.Math.min(J, J)
java.io.Reader.read([C, I, I)
274 - Declaração do método: org.apache.commons.io.IOUtils.skipFully(java.io.InputStream, J)
Métodos invocados: 
org.apache.commons.io.IOUtils.skip(java.io.InputStream, J)
275 - Declaração do método: org.apache.commons.io.IOUtils.skipFully(java.io.Reader, J)
Métodos invocados: 
org.apache.commons.io.IOUtils.skip(java.io.Reader, J)
276 - Declaração do método: org.apache.commons.io.IOUtils.read(java.io.Reader, [C, I, I)
Métodos invocados: 
java.io.Reader.read([C, I, I)
277 - Declaração do método: org.apache.commons.io.IOUtils.read(java.io.Reader, [C)
Métodos invocados: 
org.apache.commons.io.IOUtils.read(java.io.Reader, [C, I, I)
278 - Declaração do método: org.apache.commons.io.IOUtils.read(java.io.InputStream, [B, I, I)
Métodos invocados: 
java.io.InputStream.read([B, I, I)
279 - Declaração do método: org.apache.commons.io.IOUtils.read(java.io.InputStream, [B)
Métodos invocados: 
org.apache.commons.io.IOUtils.read(java.io.InputStream, [B, I, I)
280 - Declaração do método: org.apache.commons.io.IOUtils.readFully(java.io.Reader, [C, I, I)
Métodos invocados: 
org.apache.commons.io.IOUtils.read(java.io.Reader, [C, I, I)
281 - Declaração do método: org.apache.commons.io.IOUtils.readFully(java.io.Reader, [C)
Métodos invocados: 
org.apache.commons.io.IOUtils.readFully(java.io.Reader, [C, I, I)
282 - Declaração do método: org.apache.commons.io.IOUtils.readFully(java.io.InputStream, [B, I, I)
Métodos invocados: 
org.apache.commons.io.IOUtils.read(java.io.InputStream, [B, I, I)
283 - Declaração do método: org.apache.commons.io.IOUtils.readFully(java.io.InputStream, [B)
Métodos invocados: 
org.apache.commons.io.IOUtils.readFully(java.io.InputStream, [B, I, I)
284 - Declaração do método: org.apache.commons.io.ThreadMonitor.start(J)
Métodos invocados: 
java.lang.Thread.currentThread()
org.apache.commons.io.ThreadMonitor.start(java.lang.Thread, J)
285 - Declaração do método: org.apache.commons.io.ThreadMonitor.start(java.lang.Thread, J)
Métodos invocados: 
java.lang.Class.getSimpleName()
java.lang.Thread.setDaemon(Z)
java.lang.Thread.start()
286 - Declaração do método: org.apache.commons.io.ThreadMonitor.stop(java.lang.Thread)
Métodos invocados: 
java.lang.Thread.interrupt()
287 - Declaração do método: org.apache.commons.io.ThreadMonitor.ThreadMonitor(java.lang.Thread, J)
287 - Declaração do método: org.apache.commons.io.ThreadMonitor.run()
Métodos invocados: 
java.lang.Thread.sleep(J)
java.lang.Thread.interrupt()
288 - Declaração do método: org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable, java.lang.Object)
Métodos invocados: 
java.lang.Object.equals(java.lang.Object)
289 - Declaração do método: org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(java.lang.Throwable, java.lang.Object)
Métodos invocados: 
org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable, java.lang.Object)
org.apache.commons.io.TaggedIOException.getCause()
290 - Declaração do método: org.apache.commons.io.TaggedIOException.TaggedIOException(java.io.IOException, java.io.Serializable)
Métodos invocados: 
java.lang.Throwable.getMessage()
291 - Declaração do método: org.apache.commons.io.TaggedIOException.getTag()
291 - Declaração do método: org.apache.commons.io.TaggedIOException.getCause()
291 - Declaração do método: org.apache.commons.io.comparator.PathFileComparator.PathFileComparator()
291 - Declaração do método: org.apache.commons.io.comparator.PathFileComparator.PathFileComparator(org.apache.commons.io.IOCase)
291 - Declaração do método: org.apache.commons.io.comparator.PathFileComparator.compare(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.getPath()
java.io.File.getPath()
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
292 - Declaração do método: org.apache.commons.io.comparator.PathFileComparator.toString()
292 - Declaração do método: org.apache.commons.io.comparator.LastModifiedFileComparator.compare(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.lastModified()
java.io.File.lastModified()
293 - Declaração do método: org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator([Ljava.util.Comparator;)
Métodos invocados: 
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
294 - Declaração do método: org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator(java.lang.Iterable)
Métodos invocados: 
java.util.List.add(java.util.Comparator)
java.util.List.size()
java.util.List.toArray([Ljava.util.Comparator;)
295 - Declaração do método: org.apache.commons.io.comparator.CompositeFileComparator.compare(java.io.File, java.io.File)
Métodos invocados: 
java.util.Comparator.compare(java.io.File, java.io.File)
296 - Declaração do método: org.apache.commons.io.comparator.CompositeFileComparator.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
297 - Declaração do método: org.apache.commons.io.comparator.DefaultFileComparator.compare(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.compareTo(java.io.File)
298 - Declaração do método: org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator()
298 - Declaração do método: org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator(org.apache.commons.io.IOCase)
298 - Declaração do método: org.apache.commons.io.comparator.ExtensionFileComparator.compare(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.getName()
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
java.io.File.getName()
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
299 - Declaração do método: org.apache.commons.io.comparator.ExtensionFileComparator.toString()
299 - Declaração do método: org.apache.commons.io.comparator.DirectoryFileComparator.compare(java.io.File, java.io.File)
Métodos invocados: 
org.apache.commons.io.comparator.DirectoryFileComparator.getType(java.io.File)
org.apache.commons.io.comparator.DirectoryFileComparator.getType(java.io.File)
300 - Declaração do método: org.apache.commons.io.comparator.DirectoryFileComparator.getType(java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
301 - Declaração do método: org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator()
301 - Declaração do método: org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator(Z)
301 - Declaração do método: org.apache.commons.io.comparator.SizeFileComparator.compare(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
java.io.File.exists()
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
java.io.File.length()
java.io.File.isDirectory()
java.io.File.exists()
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
java.io.File.length()
302 - Declaração do método: org.apache.commons.io.comparator.SizeFileComparator.toString()
302 - Declaração do método: org.apache.commons.io.comparator.AbstractFileComparator.sort([Ljava.io.File;)
Métodos invocados: 
java.util.Arrays.sort([Ljava.io.File;, java.util.Comparator)
303 - Declaração do método: org.apache.commons.io.comparator.AbstractFileComparator.sort(java.util.List)
Métodos invocados: 
java.util.Collections.sort(java.util.List, java.util.Comparator)
304 - Declaração do método: org.apache.commons.io.comparator.AbstractFileComparator.toString()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getSimpleName()
305 - Declaração do método: org.apache.commons.io.comparator.ReverseComparator.ReverseComparator(java.util.Comparator)
305 - Declaração do método: org.apache.commons.io.comparator.ReverseComparator.compare(java.io.File, java.io.File)
Métodos invocados: 
java.util.Comparator.compare(java.io.File, java.io.File)
306 - Declaração do método: org.apache.commons.io.comparator.ReverseComparator.toString()
Métodos invocados: 
java.lang.Object.toString()
307 - Declaração do método: org.apache.commons.io.comparator.NameFileComparator.NameFileComparator()
307 - Declaração do método: org.apache.commons.io.comparator.NameFileComparator.NameFileComparator(org.apache.commons.io.IOCase)
307 - Declaração do método: org.apache.commons.io.comparator.NameFileComparator.compare(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.getName()
java.io.File.getName()
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
308 - Declaração do método: org.apache.commons.io.comparator.NameFileComparator.toString()
308 - Declaração do método: org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(java.lang.String)
308 - Declaração do método: org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter([Ljava.lang.String;)
Métodos invocados: 
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
309 - Declaração do método: org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(java.util.List)
Métodos invocados: 
java.util.List.size()
java.util.List.toArray([Ljava.lang.String;)
310 - Declaração do método: org.apache.commons.io.filefilter.WildcardFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
java.io.File.isDirectory()
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
311 - Declaração do método: org.apache.commons.io.filefilter.WildcardFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
java.io.File.getName()
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
312 - Declaração do método: org.apache.commons.io.filefilter.CanReadFileFilter.CanReadFileFilter()
312 - Declaração do método: org.apache.commons.io.filefilter.CanReadFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.canRead()
313 - Declaração do método: org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(java.lang.String)
313 - Declaração do método: org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(java.lang.String, org.apache.commons.io.IOCase)
313 - Declaração do método: org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter([Ljava.lang.String;)
313 - Declaração do método: org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter([Ljava.lang.String;, org.apache.commons.io.IOCase)
Métodos invocados: 
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
314 - Declaração do método: org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(java.util.List)
314 - Declaração do método: org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(java.util.List, org.apache.commons.io.IOCase)
Métodos invocados: 
java.util.List.size()
java.util.List.toArray([Ljava.lang.String;)
315 - Declaração do método: org.apache.commons.io.filefilter.WildcardFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
316 - Declaração do método: org.apache.commons.io.filefilter.WildcardFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.getName()
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
317 - Declaração do método: org.apache.commons.io.filefilter.WildcardFileFilter.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
318 - Declaração do método: org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(java.lang.String)
318 - Declaração do método: org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(java.lang.String, org.apache.commons.io.IOCase)
318 - Declaração do método: org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter([Ljava.lang.String;)
318 - Declaração do método: org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter([Ljava.lang.String;, org.apache.commons.io.IOCase)
Métodos invocados: 
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
319 - Declaração do método: org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(java.util.List)
319 - Declaração do método: org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(java.util.List, org.apache.commons.io.IOCase)
Métodos invocados: 
java.util.List.size()
java.util.List.toArray([Ljava.lang.String;)
320 - Declaração do método: org.apache.commons.io.filefilter.SuffixFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.getName()
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
321 - Declaração do método: org.apache.commons.io.filefilter.SuffixFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
322 - Declaração do método: org.apache.commons.io.filefilter.SuffixFileFilter.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
323 - Declaração do método: org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(java.lang.String)
323 - Declaração do método: org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(java.lang.String, org.apache.commons.io.IOCase)
323 - Declaração do método: org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter([Ljava.lang.String;)
323 - Declaração do método: org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter([Ljava.lang.String;, org.apache.commons.io.IOCase)
Métodos invocados: 
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
324 - Declaração do método: org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(java.util.List)
324 - Declaração do método: org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(java.util.List, org.apache.commons.io.IOCase)
Métodos invocados: 
java.util.List.size()
java.util.List.toArray([Ljava.lang.String;)
325 - Declaração do método: org.apache.commons.io.filefilter.PrefixFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.getName()
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
326 - Declaração do método: org.apache.commons.io.filefilter.PrefixFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
327 - Declaração do método: org.apache.commons.io.filefilter.PrefixFileFilter.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
328 - Declaração do método: org.apache.commons.io.filefilter.HiddenFileFilter.HiddenFileFilter()
328 - Declaração do método: org.apache.commons.io.filefilter.HiddenFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.isHidden()
329 - Declaração do método: org.apache.commons.io.filefilter.EmptyFileFilter.EmptyFileFilter()
329 - Declaração do método: org.apache.commons.io.filefilter.EmptyFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
java.io.File.listFiles()
java.io.File.length()
330 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter()
330 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(java.util.List)
330 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
org.apache.commons.io.filefilter.AndFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.AndFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
331 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
332 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.getFileFilters()
Métodos invocados: 
java.util.Collections.unmodifiableList(java.util.List)
333 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
java.util.List.remove(java.lang.Object)
334 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.setFileFilters(java.util.List)
Métodos invocados: 
java.util.List.clear()
java.util.List.addAll(java.util.Collection)
335 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.accept(java.io.File)
Métodos invocados: 
java.util.List.isEmpty()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
336 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
java.util.List.isEmpty()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
337 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilter.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.util.List.size()
java.lang.StringBuilder.append(java.lang.String)
java.util.List.get(I)
java.lang.Object.toString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
338 - Declaração do método: org.apache.commons.io.filefilter.CanWriteFileFilter.CanWriteFileFilter()
338 - Declaração do método: org.apache.commons.io.filefilter.CanWriteFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.canWrite()
339 - Declaração do método: org.apache.commons.io.filefilter.AbstractFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.AbstractFileFilter.accept(java.io.File, java.lang.String)
340 - Declaração do método: org.apache.commons.io.filefilter.AbstractFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.filefilter.AbstractFileFilter.accept(java.io.File)
341 - Declaração do método: org.apache.commons.io.filefilter.AbstractFileFilter.toString()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getSimpleName()
342 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
342 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
342 - Declaração do método: org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter([B)
342 - Declaração do método: org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(java.lang.String)
342 - Declaração do método: org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(java.lang.String, J)
Métodos invocados: 
java.lang.String.length()
java.lang.String.getBytes()
343 - Declaração do método: org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter([B, J)
Métodos invocados: 
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
344 - Declaração do método: org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.isFile()
java.io.File.canRead()
java.io.RandomAccessFile.seek(J)
java.io.RandomAccessFile.read([B)
java.util.Arrays.equals([B, [B)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)
345 - Declaração do método: org.apache.commons.io.filefilter.MagicNumberFileFilter.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(J)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
346 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
346 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters()
346 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilter.removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
346 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilter.setFileFilters(java.util.List)
346 - Declaração do método: org.apache.commons.io.filefilter.FalseFileFilter.FalseFileFilter()
346 - Declaração do método: org.apache.commons.io.filefilter.FalseFileFilter.accept(java.io.File)
346 - Declaração do método: org.apache.commons.io.filefilter.FalseFileFilter.accept(java.io.File, java.lang.String)
346 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(java.lang.String)
Métodos invocados: 
java.util.regex.Pattern.compile(java.lang.String)
347 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(java.lang.String, org.apache.commons.io.IOCase)
Métodos invocados: 
org.apache.commons.io.IOCase.isCaseSensitive()
java.util.regex.Pattern.compile(java.lang.String, I)
348 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(java.lang.String, I)
Métodos invocados: 
java.util.regex.Pattern.compile(java.lang.String, I)
349 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(java.util.regex.Pattern)
349 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.util.regex.Matcher.matches()
350 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter()
350 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(java.util.List)
350 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
org.apache.commons.io.filefilter.OrFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.OrFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
351 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
352 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.getFileFilters()
Métodos invocados: 
java.util.Collections.unmodifiableList(java.util.List)
353 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
java.util.List.remove(java.lang.Object)
354 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.setFileFilters(java.util.List)
Métodos invocados: 
java.util.List.clear()
java.util.List.addAll(java.util.Collection)
355 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.accept(java.io.File)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
356 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
357 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilter.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.util.List.size()
java.lang.StringBuilder.append(java.lang.String)
java.util.List.get(I)
java.lang.Object.toString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
358 - Declaração do método: org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(java.lang.String)
358 - Declaração do método: org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(java.lang.String, org.apache.commons.io.IOCase)
358 - Declaração do método: org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter([Ljava.lang.String;)
358 - Declaração do método: org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter([Ljava.lang.String;, org.apache.commons.io.IOCase)
Métodos invocados: 
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
359 - Declaração do método: org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(java.util.List)
359 - Declaração do método: org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(java.util.List, org.apache.commons.io.IOCase)
Métodos invocados: 
java.util.List.size()
java.util.List.toArray([Ljava.lang.String;)
360 - Declaração do método: org.apache.commons.io.filefilter.NameFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.getName()
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
361 - Declaração do método: org.apache.commons.io.filefilter.NameFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
362 - Declaração do método: org.apache.commons.io.filefilter.NameFileFilter.toString()
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
363 - Declaração do método: org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(java.io.FilenameFilter)
363 - Declaração do método: org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(java.io.FileFilter)
363 - Declaração do método: org.apache.commons.io.filefilter.DelegateFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.FileFilter.accept(java.io.File)
364 - Declaração do método: org.apache.commons.io.filefilter.DelegateFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
java.io.FilenameFilter.accept(java.io.File, java.lang.String)
365 - Declaração do método: org.apache.commons.io.filefilter.DelegateFileFilter.toString()
Métodos invocados: 
java.lang.Object.toString()
java.lang.Object.toString()
366 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.FileFilterUtils()
366 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter, [Ljava.io.File;)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
java.util.List.add(java.io.File)
java.util.List.size()
java.util.List.toArray([Ljava.io.File;)
367 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable)
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.filterList(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable)
java.util.List.size()
java.util.List.toArray([Ljava.io.File;)
368 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.filterList(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable)
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable, java.util.ArrayList)
369 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.filterList(org.apache.commons.io.filefilter.IOFileFilter, [Ljava.io.File;)
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter, [Ljava.io.File;)
java.util.Arrays.asList([Ljava.io.File;)
370 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.filterSet(org.apache.commons.io.filefilter.IOFileFilter, [Ljava.io.File;)
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter, [Ljava.io.File;)
java.util.Arrays.asList([Ljava.io.File;)
371 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.filterSet(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable)
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable, java.util.HashSet)
372 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable, org.apache.commons.io.filefilter.FileFilterUtils$(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;$T)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
java.util.Collection.add(java.io.File)
373 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(java.lang.String)
373 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(java.lang.String, org.apache.commons.io.IOCase)
373 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(java.lang.String)
373 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(java.lang.String, org.apache.commons.io.IOCase)
373 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
373 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String, org.apache.commons.io.IOCase)
373 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter()
373 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.fileFileFilter()
373 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
373 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.orFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
373 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.and([Lorg.apache.commons.io.filefilter.IOFileFilter;)
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.toList([Lorg.apache.commons.io.filefilter.IOFileFilter;)
374 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.or([Lorg.apache.commons.io.filefilter.IOFileFilter;)
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.toList([Lorg.apache.commons.io.filefilter.IOFileFilter;)
375 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.toList([Lorg.apache.commons.io.filefilter.IOFileFilter;)
Métodos invocados: 
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
376 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
376 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()
376 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.falseFileFilter()
376 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(java.io.FileFilter)
376 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(java.io.FilenameFilter)
376 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(J)
376 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(J, Z)
376 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.util.Date)
376 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.util.Date, Z)
376 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.io.File)
376 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.io.File, Z)
376 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(J)
376 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(J, Z)
376 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(J, J)
376 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(java.lang.String)
376 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(java.lang.String, J)
376 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter([B)
376 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter([B, J)
376 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.and([Lorg.apache.commons.io.filefilter.IOFileFilter;)
377 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter)
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.and([Lorg.apache.commons.io.filefilter.IOFileFilter;)
378 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter)
378 - Declaração do método: org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter)
378 - Declaração do método: org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(J)
378 - Declaração do método: org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(J, Z)
378 - Declaração do método: org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(java.util.Date)
378 - Declaração do método: org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(java.util.Date, Z)
Métodos invocados: 
java.util.Date.getTime()
379 - Declaração do método: org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(java.io.File)
379 - Declaração do método: org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(java.io.File, Z)
Métodos invocados: 
java.io.File.lastModified()
380 - Declaração do método: org.apache.commons.io.filefilter.AgeFileFilter.accept(java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, J)
381 - Declaração do método: org.apache.commons.io.filefilter.AgeFileFilter.toString()
381 - Declaração do método: org.apache.commons.io.filefilter.FileFileFilter.FileFileFilter()
381 - Declaração do método: org.apache.commons.io.filefilter.FileFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.isFile()
382 - Declaração do método: org.apache.commons.io.filefilter.TrueFileFilter.TrueFileFilter()
382 - Declaração do método: org.apache.commons.io.filefilter.TrueFileFilter.accept(java.io.File)
382 - Declaração do método: org.apache.commons.io.filefilter.TrueFileFilter.accept(java.io.File, java.lang.String)
382 - Declaração do método: org.apache.commons.io.filefilter.DirectoryFileFilter.DirectoryFileFilter()
382 - Declaração do método: org.apache.commons.io.filefilter.DirectoryFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
383 - Declaração do método: org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(J)
383 - Declaração do método: org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(J, Z)
383 - Declaração do método: org.apache.commons.io.filefilter.SizeFileFilter.accept(java.io.File)
Métodos invocados: 
java.io.File.length()
384 - Declaração do método: org.apache.commons.io.filefilter.SizeFileFilter.toString()
384 - Declaração do método: org.apache.commons.io.filefilter.NotFileFilter.NotFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
384 - Declaração do método: org.apache.commons.io.filefilter.NotFileFilter.accept(java.io.File)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
385 - Declaração do método: org.apache.commons.io.filefilter.NotFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
386 - Declaração do método: org.apache.commons.io.filefilter.NotFileFilter.toString()
Métodos invocados: 
java.lang.Object.toString()
387 - Declaração do método: org.apache.commons.io.input.ClosedInputStream.read()
387 - Declaração do método: org.apache.commons.io.input.CloseShieldInputStream.CloseShieldInputStream(java.io.InputStream)
387 - Declaração do método: org.apache.commons.io.input.CloseShieldInputStream.close()
387 - Declaração do método: org.apache.commons.io.input.Tailer.Tailer(java.io.File, org.apache.commons.io.input.TailerListener)
387 - Declaração do método: org.apache.commons.io.input.Tailer.Tailer(java.io.File, org.apache.commons.io.input.TailerListener, J)
387 - Declaração do método: org.apache.commons.io.input.Tailer.Tailer(java.io.File, org.apache.commons.io.input.TailerListener, J, Z)
Métodos invocados: 
org.apache.commons.io.input.TailerListener.init(org.apache.commons.io.input.Tailer)
388 - Declaração do método: org.apache.commons.io.input.Tailer.create(java.io.File, org.apache.commons.io.input.TailerListener, J, Z)
Métodos invocados: 
java.lang.Thread.setDaemon(Z)
java.lang.Thread.start()
389 - Declaração do método: org.apache.commons.io.input.Tailer.create(java.io.File, org.apache.commons.io.input.TailerListener, J)
Métodos invocados: 
org.apache.commons.io.input.Tailer.create(java.io.File, org.apache.commons.io.input.TailerListener, J, Z)
390 - Declaração do método: org.apache.commons.io.input.Tailer.create(java.io.File, org.apache.commons.io.input.TailerListener)
Métodos invocados: 
org.apache.commons.io.input.Tailer.create(java.io.File, org.apache.commons.io.input.TailerListener, J, Z)
391 - Declaração do método: org.apache.commons.io.input.Tailer.getFile()
391 - Declaração do método: org.apache.commons.io.input.Tailer.getDelay()
391 - Declaração do método: org.apache.commons.io.input.Tailer.run()
Métodos invocados: 
org.apache.commons.io.input.TailerListener.fileNotFound()
java.lang.Thread.sleep(J)
java.io.File.length()
java.lang.System.currentTimeMillis()
java.io.RandomAccessFile.seek(J)
java.io.File.length()
org.apache.commons.io.input.TailerListener.fileRotated()
org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)
org.apache.commons.io.input.TailerListener.fileNotFound()
java.lang.System.currentTimeMillis()
org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, J)
java.io.RandomAccessFile.seek(J)
java.lang.System.currentTimeMillis()
org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile)
java.lang.Thread.sleep(J)
org.apache.commons.io.input.TailerListener.handle(java.lang.Exception)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)
392 - Declaração do método: org.apache.commons.io.input.Tailer.stop()
392 - Declaração do método: org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile)
Métodos invocados: 
java.io.RandomAccessFile.getFilePointer()
org.apache.commons.io.input.Tailer.readLine(java.io.RandomAccessFile)
java.io.RandomAccessFile.getFilePointer()
org.apache.commons.io.input.TailerListener.handle(java.lang.String)
org.apache.commons.io.input.Tailer.readLine(java.io.RandomAccessFile)
java.io.RandomAccessFile.seek(J)
393 - Declaração do método: org.apache.commons.io.input.Tailer.readLine(java.io.RandomAccessFile)
Métodos invocados: 
java.io.RandomAccessFile.read()
java.lang.StringBuffer.toString()
java.lang.StringBuffer.append(C)
java.lang.StringBuffer.append(C)
394 - Declaração do método: org.apache.commons.io.input.BOMInputStream.BOMInputStream(java.io.InputStream)
394 - Declaração do método: org.apache.commons.io.input.BOMInputStream.BOMInputStream(java.io.InputStream, Z)
394 - Declaração do método: org.apache.commons.io.input.BOMInputStream.BOMInputStream(java.io.InputStream, [Lorg.apache.commons.io.ByteOrderMark;)
394 - Declaração do método: org.apache.commons.io.input.BOMInputStream.BOMInputStream(java.io.InputStream, Z, [Lorg.apache.commons.io.ByteOrderMark;)
Métodos invocados: 
java.util.Arrays.asList([Lorg.apache.commons.io.ByteOrderMark;)
395 - Declaração do método: org.apache.commons.io.input.BOMInputStream.hasBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStream.getBOM()
396 - Declaração do método: org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)
Métodos invocados: 
java.util.List.contains(java.lang.Object)
org.apache.commons.io.input.BOMInputStream.getBOM()
org.apache.commons.io.ByteOrderMark.equals(java.lang.Object)
397 - Declaração do método: org.apache.commons.io.input.BOMInputStream.getBOM()
Métodos invocados: 
org.apache.commons.io.ByteOrderMark.length()
java.lang.Math.max(I, I)
java.io.InputStream.read()
org.apache.commons.io.input.BOMInputStream.find()
398 - Declaração do método: org.apache.commons.io.input.BOMInputStream.getBOMCharsetName()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStream.getBOM()
org.apache.commons.io.ByteOrderMark.getCharsetName()
399 - Declaração do método: org.apache.commons.io.input.BOMInputStream.readFirstBytes()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStream.getBOM()
400 - Declaração do método: org.apache.commons.io.input.BOMInputStream.find()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStream.matches(org.apache.commons.io.ByteOrderMark)
401 - Declaração do método: org.apache.commons.io.input.BOMInputStream.matches(org.apache.commons.io.ByteOrderMark)
Métodos invocados: 
org.apache.commons.io.ByteOrderMark.length()
org.apache.commons.io.ByteOrderMark.length()
org.apache.commons.io.ByteOrderMark.get(I)
402 - Declaração do método: org.apache.commons.io.input.BOMInputStream.read()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStream.readFirstBytes()
java.io.InputStream.read()
403 - Declaração do método: org.apache.commons.io.input.BOMInputStream.read([B, I, I)
Métodos invocados: 
org.apache.commons.io.input.BOMInputStream.readFirstBytes()
java.io.InputStream.read([B, I, I)
404 - Declaração do método: org.apache.commons.io.input.BOMInputStream.read([B)
Métodos invocados: 
org.apache.commons.io.input.BOMInputStream.read([B, I, I)
405 - Declaração do método: org.apache.commons.io.input.BOMInputStream.mark(I)
Métodos invocados: 
java.io.InputStream.mark(I)
406 - Declaração do método: org.apache.commons.io.input.BOMInputStream.reset()
Métodos invocados: 
java.io.InputStream.reset()
407 - Declaração do método: org.apache.commons.io.input.BOMInputStream.skip(J)
Métodos invocados: 
org.apache.commons.io.input.BOMInputStream.readFirstBytes()
java.io.InputStream.skip(J)
408 - Declaração do método: org.apache.commons.io.input.NullReader.NullReader(J)
408 - Declaração do método: org.apache.commons.io.input.NullReader.NullReader(J, Z, Z)
408 - Declaração do método: org.apache.commons.io.input.NullReader.getPosition()
408 - Declaração do método: org.apache.commons.io.input.NullReader.getSize()
408 - Declaração do método: org.apache.commons.io.input.NullReader.close()
408 - Declaração do método: org.apache.commons.io.input.NullReader.mark(I)
408 - Declaração do método: org.apache.commons.io.input.NullReader.markSupported()
408 - Declaração do método: org.apache.commons.io.input.NullReader.read()
Métodos invocados: 
org.apache.commons.io.input.NullReader.doEndOfFile()
org.apache.commons.io.input.NullReader.processChar()
409 - Declaração do método: org.apache.commons.io.input.NullReader.read([C)
Métodos invocados: 
org.apache.commons.io.input.NullReader.read([C, I, I)
410 - Declaração do método: org.apache.commons.io.input.NullReader.read([C, I, I)
Métodos invocados: 
org.apache.commons.io.input.NullReader.doEndOfFile()
org.apache.commons.io.input.NullReader.processChars([C, I, I)
411 - Declaração do método: org.apache.commons.io.input.NullReader.reset()
411 - Declaração do método: org.apache.commons.io.input.NullReader.skip(J)
Métodos invocados: 
org.apache.commons.io.input.NullReader.doEndOfFile()
412 - Declaração do método: org.apache.commons.io.input.NullReader.processChar()
412 - Declaração do método: org.apache.commons.io.input.NullReader.processChars([C, I, I)
412 - Declaração do método: org.apache.commons.io.input.NullReader.doEndOfFile()
412 - Declaração do método: org.apache.commons.io.input.CountingInputStream.CountingInputStream(java.io.InputStream)
412 - Declaração do método: org.apache.commons.io.input.CountingInputStream.skip(J)
412 - Declaração do método: org.apache.commons.io.input.CountingInputStream.afterRead(I)
412 - Declaração do método: org.apache.commons.io.input.CountingInputStream.getCount()
Métodos invocados: 
org.apache.commons.io.input.CountingInputStream.getByteCount()
413 - Declaração do método: org.apache.commons.io.input.CountingInputStream.resetCount()
Métodos invocados: 
org.apache.commons.io.input.CountingInputStream.resetByteCount()
414 - Declaração do método: org.apache.commons.io.input.CountingInputStream.getByteCount()
414 - Declaração do método: org.apache.commons.io.input.CountingInputStream.resetByteCount()
414 - Declaração do método: org.apache.commons.io.input.DemuxInputStream.bindStream(java.io.InputStream)
Métodos invocados: 
java.lang.ThreadLocal.get()
java.lang.ThreadLocal.set(java.io.InputStream)
415 - Declaração do método: org.apache.commons.io.input.DemuxInputStream.close()
Métodos invocados: 
java.lang.ThreadLocal.get()
java.io.InputStream.close()
416 - Declaração do método: org.apache.commons.io.input.DemuxInputStream.read()
Métodos invocados: 
java.lang.ThreadLocal.get()
java.io.InputStream.read()
417 - Declaração do método: org.apache.commons.io.input.NullInputStream.NullInputStream(J)
417 - Declaração do método: org.apache.commons.io.input.NullInputStream.NullInputStream(J, Z, Z)
417 - Declaração do método: org.apache.commons.io.input.NullInputStream.getPosition()
417 - Declaração do método: org.apache.commons.io.input.NullInputStream.getSize()
417 - Declaração do método: org.apache.commons.io.input.NullInputStream.available()
417 - Declaração do método: org.apache.commons.io.input.NullInputStream.close()
417 - Declaração do método: org.apache.commons.io.input.NullInputStream.mark(I)
417 - Declaração do método: org.apache.commons.io.input.NullInputStream.markSupported()
417 - Declaração do método: org.apache.commons.io.input.NullInputStream.read()
Métodos invocados: 
org.apache.commons.io.input.NullInputStream.doEndOfFile()
org.apache.commons.io.input.NullInputStream.processByte()
418 - Declaração do método: org.apache.commons.io.input.NullInputStream.read([B)
Métodos invocados: 
org.apache.commons.io.input.NullInputStream.read([B, I, I)
419 - Declaração do método: org.apache.commons.io.input.NullInputStream.read([B, I, I)
Métodos invocados: 
org.apache.commons.io.input.NullInputStream.doEndOfFile()
org.apache.commons.io.input.NullInputStream.processBytes([B, I, I)
420 - Declaração do método: org.apache.commons.io.input.NullInputStream.reset()
420 - Declaração do método: org.apache.commons.io.input.NullInputStream.skip(J)
Métodos invocados: 
org.apache.commons.io.input.NullInputStream.doEndOfFile()
421 - Declaração do método: org.apache.commons.io.input.NullInputStream.processByte()
421 - Declaração do método: org.apache.commons.io.input.NullInputStream.processBytes([B, I, I)
421 - Declaração do método: org.apache.commons.io.input.NullInputStream.doEndOfFile()
421 - Declaração do método: org.apache.commons.io.input.ClassLoaderObjectInputStream.ClassLoaderObjectInputStream(java.lang.ClassLoader, java.io.InputStream)
421 - Declaração do método: org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveClass(java.io.ObjectStreamClass)
Métodos invocados: 
java.io.ObjectStreamClass.getName()
java.lang.Class.forName(java.lang.String, Z, java.lang.ClassLoader)
422 - Declaração do método: org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveProxyClass([Ljava.lang.String;)
Métodos invocados: 
java.lang.Class.forName(java.lang.String, Z, java.lang.ClassLoader)
java.lang.reflect.Proxy.getProxyClass(java.lang.ClassLoader, [Ljava.lang.Class;)
423 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(java.io.File)
Métodos invocados: 
java.nio.charset.Charset.defaultCharset()
java.nio.charset.Charset.toString()
424 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(java.io.File, I, java.lang.String)
Métodos invocados: 
java.io.RandomAccessFile.length()
java.nio.charset.Charset.forName(java.lang.String)
java.nio.charset.Charset.newEncoder()
java.nio.charset.CharsetEncoder.maxBytesPerChar()
java.nio.charset.Charset.forName(java.lang.String)
java.nio.charset.Charset.forName(java.lang.String)
java.nio.charset.Charset.forName(java.lang.String)
java.nio.charset.Charset.forName(java.lang.String)
java.nio.charset.Charset.forName(java.lang.String)
java.lang.String.getBytes(java.lang.String)
java.lang.String.getBytes(java.lang.String)
java.lang.String.getBytes(java.lang.String)
425 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReader.readLine()
Métodos invocados: 
org.apache.commons.io.input.ReversedLinesFileReader$FilePart.readLine()
org.apache.commons.io.input.ReversedLinesFileReader$FilePart.rollOver()
org.apache.commons.io.input.ReversedLinesFileReader$FilePart.readLine()
java.lang.String.equals(java.lang.Object)
org.apache.commons.io.input.ReversedLinesFileReader.readLine()
426 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReader.close()
Métodos invocados: 
java.io.RandomAccessFile.close()
427 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.FilePart(J, I, [B)
Métodos invocados: 
java.io.RandomAccessFile.seek(J)
java.io.RandomAccessFile.read([B, I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
428 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.rollOver()
428 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.readLine()
Métodos invocados: 
org.apache.commons.io.input.ReversedLinesFileReader$FilePart.createLeftOver()
org.apache.commons.io.input.ReversedLinesFileReader$FilePart.getNewLineMatchByteCount([B, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
org.apache.commons.io.input.ReversedLinesFileReader$FilePart.createLeftOver()
429 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.createLeftOver()
Métodos invocados: 
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
430 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.getNewLineMatchByteCount([B, I)
430 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
430 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
430 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderException.getBomEncoding()
430 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderException.getXmlGuessEncoding()
430 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding()
430 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderException.getContentTypeMime()
430 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding()
430 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStream.AutoCloseInputStream(java.io.InputStream)
430 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStream.close()
Métodos invocados: 
java.io.InputStream.close()
431 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStream.afterRead(I)
Métodos invocados: 
org.apache.commons.io.input.AutoCloseInputStream.close()
432 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStream.finalize()
Métodos invocados: 
org.apache.commons.io.input.AutoCloseInputStream.close()
433 - Declaração do método: org.apache.commons.io.input.TeeInputStream.TeeInputStream(java.io.InputStream, java.io.OutputStream)
433 - Declaração do método: org.apache.commons.io.input.TeeInputStream.TeeInputStream(java.io.InputStream, java.io.OutputStream, Z)
433 - Declaração do método: org.apache.commons.io.input.TeeInputStream.close()
Métodos invocados: 
java.io.OutputStream.close()
434 - Declaração do método: org.apache.commons.io.input.TeeInputStream.read()
Métodos invocados: 
java.io.OutputStream.write(I)
435 - Declaração do método: org.apache.commons.io.input.TeeInputStream.read([B, I, I)
Métodos invocados: 
java.io.OutputStream.write([B, I, I)
436 - Declaração do método: org.apache.commons.io.input.TeeInputStream.read([B)
Métodos invocados: 
java.io.OutputStream.write([B, I, I)
437 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.getDefaultEncoding()
437 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(java.io.File)
437 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(java.io.InputStream)
437 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(java.io.InputStream, Z)
437 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(java.io.InputStream, Z, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReader.doRawStream(org.apache.commons.io.input.BOMInputStream, org.apache.commons.io.input.BOMInputStream, Z)
438 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(java.net.URL)
Métodos invocados: 
java.net.URL.openConnection()
439 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(java.net.URLConnection, java.lang.String)
Métodos invocados: 
java.net.URLConnection.getContentType()
java.net.URLConnection.getInputStream()
org.apache.commons.io.input.XmlStreamReader.doHttpStream(org.apache.commons.io.input.BOMInputStream, org.apache.commons.io.input.BOMInputStream, java.lang.String, Z)
org.apache.commons.io.input.XmlStreamReader.doRawStream(org.apache.commons.io.input.BOMInputStream, org.apache.commons.io.input.BOMInputStream, Z)
440 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(java.io.InputStream, java.lang.String)
440 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(java.io.InputStream, java.lang.String, Z, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReader.doHttpStream(org.apache.commons.io.input.BOMInputStream, org.apache.commons.io.input.BOMInputStream, java.lang.String, Z)
441 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(java.io.InputStream, java.lang.String, Z)
441 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.getEncoding()
441 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.read([C, I, I)
Métodos invocados: 
java.io.Reader.read([C, I, I)
442 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.close()
Métodos invocados: 
java.io.Reader.close()
443 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.doRawStream(org.apache.commons.io.input.BOMInputStream, org.apache.commons.io.input.BOMInputStream, Z)
Métodos invocados: 
org.apache.commons.io.input.BOMInputStream.getBOMCharsetName()
org.apache.commons.io.input.BOMInputStream.getBOMCharsetName()
org.apache.commons.io.input.XmlStreamReader.getXmlProlog(java.io.InputStream, java.lang.String)
org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReader.doLenientDetection(java.lang.String, org.apache.commons.io.input.XmlStreamReaderException)
444 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.doHttpStream(org.apache.commons.io.input.BOMInputStream, org.apache.commons.io.input.BOMInputStream, java.lang.String, Z)
Métodos invocados: 
org.apache.commons.io.input.BOMInputStream.getBOMCharsetName()
org.apache.commons.io.input.BOMInputStream.getBOMCharsetName()
org.apache.commons.io.input.XmlStreamReader.getXmlProlog(java.io.InputStream, java.lang.String)
org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, Z)
org.apache.commons.io.input.XmlStreamReader.doLenientDetection(java.lang.String, org.apache.commons.io.input.XmlStreamReaderException)
445 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.doLenientDetection(java.lang.String, org.apache.commons.io.input.XmlStreamReaderException)
Métodos invocados: 
java.lang.String.startsWith(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I)
org.apache.commons.io.input.XmlStreamReaderException.getBomEncoding()
org.apache.commons.io.input.XmlStreamReaderException.getXmlGuessEncoding()
org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding()
org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, Z)
org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding()
org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding()
446 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.text.MessageFormat.format(java.lang.String, [Ljava.lang.Object;)
java.lang.String.equals(java.lang.Object)
java.text.MessageFormat.format(java.lang.String, [Ljava.lang.Object;)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.text.MessageFormat.format(java.lang.String, [Ljava.lang.Object;)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.text.MessageFormat.format(java.lang.String, [Ljava.lang.Object;)
java.text.MessageFormat.format(java.lang.String, [Ljava.lang.Object;)
447 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, Z)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReader.getContentTypeMime(java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding(java.lang.String)
org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)
org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)
java.text.MessageFormat.format(java.lang.String, [Ljava.lang.Object;)
org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String, java.lang.String, java.lang.String)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.text.MessageFormat.format(java.lang.String, [Ljava.lang.Object;)
java.lang.String.equals(java.lang.Object)
java.lang.String.startsWith(java.lang.String)
java.text.MessageFormat.format(java.lang.String, [Ljava.lang.Object;)
448 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.getContentTypeMime(java.lang.String)
Métodos invocados: 
java.lang.String.indexOf(java.lang.String)
java.lang.String.substring(I, I)
java.lang.String.trim()
449 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding(java.lang.String)
Métodos invocados: 
java.lang.String.indexOf(java.lang.String)
java.lang.String.substring(I)
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.util.regex.Matcher.find()
java.util.regex.Matcher.group(I)
java.lang.String.toUpperCase()
450 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.getXmlProlog(java.io.InputStream, java.lang.String)
Métodos invocados: 
java.io.InputStream.mark(I)
java.io.InputStream.read([B, I, I)
java.io.InputStream.read([B, I, I)
java.lang.String.indexOf(I)
java.io.InputStream.reset()
java.lang.String.substring(I, I)
java.io.BufferedReader.readLine()
java.lang.StringBuffer.append(java.lang.String)
java.io.BufferedReader.readLine()
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.util.regex.Matcher.find()
java.util.regex.Matcher.group(I)
java.lang.String.toUpperCase()
java.lang.String.length()
java.lang.String.substring(I, I)
451 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.startsWith(java.lang.String)
java.lang.String.endsWith(java.lang.String)
452 - Declaração do método: org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.startsWith(java.lang.String)
java.lang.String.endsWith(java.lang.String)
453 - Declaração do método: org.apache.commons.io.input.ProxyReader.ProxyReader(java.io.Reader)
453 - Declaração do método: org.apache.commons.io.input.ProxyReader.read()
Métodos invocados: 
org.apache.commons.io.input.ProxyReader.beforeRead(I)
java.io.Reader.read()
org.apache.commons.io.input.ProxyReader.afterRead(I)
org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)
454 - Declaração do método: org.apache.commons.io.input.ProxyReader.read([C)
Métodos invocados: 
org.apache.commons.io.input.ProxyReader.beforeRead(I)
java.io.Reader.read([C)
org.apache.commons.io.input.ProxyReader.afterRead(I)
org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)
455 - Declaração do método: org.apache.commons.io.input.ProxyReader.read([C, I, I)
Métodos invocados: 
org.apache.commons.io.input.ProxyReader.beforeRead(I)
java.io.Reader.read([C, I, I)
org.apache.commons.io.input.ProxyReader.afterRead(I)
org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)
456 - Declaração do método: org.apache.commons.io.input.ProxyReader.read(java.nio.CharBuffer)
Métodos invocados: 
java.nio.CharBuffer.length()
org.apache.commons.io.input.ProxyReader.beforeRead(I)
java.io.Reader.read(java.nio.CharBuffer)
org.apache.commons.io.input.ProxyReader.afterRead(I)
org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)
457 - Declaração do método: org.apache.commons.io.input.ProxyReader.skip(J)
Métodos invocados: 
java.io.Reader.skip(J)
org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)
458 - Declaração do método: org.apache.commons.io.input.ProxyReader.ready()
Métodos invocados: 
java.io.Reader.ready()
org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)
459 - Declaração do método: org.apache.commons.io.input.ProxyReader.close()
Métodos invocados: 
java.io.Reader.close()
org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)
460 - Declaração do método: org.apache.commons.io.input.ProxyReader.mark(I)
Métodos invocados: 
java.io.Reader.mark(I)
org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)
461 - Declaração do método: org.apache.commons.io.input.ProxyReader.reset()
Métodos invocados: 
java.io.Reader.reset()
org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)
462 - Declaração do método: org.apache.commons.io.input.ProxyReader.markSupported()
Métodos invocados: 
java.io.Reader.markSupported()
463 - Declaração do método: org.apache.commons.io.input.ProxyReader.beforeRead(I)
463 - Declaração do método: org.apache.commons.io.input.ProxyReader.afterRead(I)
463 - Declaração do método: org.apache.commons.io.input.ProxyReader.handleIOException(java.io.IOException)
463 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.ProxyInputStream(java.io.InputStream)
463 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.read()
Métodos invocados: 
org.apache.commons.io.input.ProxyInputStream.beforeRead(I)
java.io.InputStream.read()
org.apache.commons.io.input.ProxyInputStream.afterRead(I)
org.apache.commons.io.input.ProxyInputStream.handleIOException(java.io.IOException)
464 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.read([B)
Métodos invocados: 
org.apache.commons.io.input.ProxyInputStream.beforeRead(I)
java.io.InputStream.read([B)
org.apache.commons.io.input.ProxyInputStream.afterRead(I)
org.apache.commons.io.input.ProxyInputStream.handleIOException(java.io.IOException)
465 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.read([B, I, I)
Métodos invocados: 
org.apache.commons.io.input.ProxyInputStream.beforeRead(I)
java.io.InputStream.read([B, I, I)
org.apache.commons.io.input.ProxyInputStream.afterRead(I)
org.apache.commons.io.input.ProxyInputStream.handleIOException(java.io.IOException)
466 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.skip(J)
Métodos invocados: 
java.io.InputStream.skip(J)
org.apache.commons.io.input.ProxyInputStream.handleIOException(java.io.IOException)
467 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.available()
Métodos invocados: 
org.apache.commons.io.input.ProxyInputStream.handleIOException(java.io.IOException)
468 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.close()
Métodos invocados: 
java.io.InputStream.close()
org.apache.commons.io.input.ProxyInputStream.handleIOException(java.io.IOException)
469 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.mark(I)
Métodos invocados: 
java.io.InputStream.mark(I)
470 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.reset()
Métodos invocados: 
java.io.InputStream.reset()
org.apache.commons.io.input.ProxyInputStream.handleIOException(java.io.IOException)
471 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.markSupported()
Métodos invocados: 
java.io.InputStream.markSupported()
472 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.beforeRead(I)
472 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.afterRead(I)
472 - Declaração do método: org.apache.commons.io.input.ProxyInputStream.handleIOException(java.io.IOException)
472 - Declaração do método: org.apache.commons.io.input.TailerListener.init(org.apache.commons.io.input.Tailer)
472 - Declaração do método: org.apache.commons.io.input.TailerListener.fileNotFound()
472 - Declaração do método: org.apache.commons.io.input.TailerListener.fileRotated()
472 - Declaração do método: org.apache.commons.io.input.TailerListener.handle(java.lang.String)
472 - Declaração do método: org.apache.commons.io.input.TailerListener.handle(java.lang.Exception)
472 - Declaração do método: org.apache.commons.io.input.CharSequenceReader.CharSequenceReader(java.lang.CharSequence)
472 - Declaração do método: org.apache.commons.io.input.CharSequenceReader.close()
472 - Declaração do método: org.apache.commons.io.input.CharSequenceReader.mark(I)
472 - Declaração do método: org.apache.commons.io.input.CharSequenceReader.markSupported()
472 - Declaração do método: org.apache.commons.io.input.CharSequenceReader.read()
Métodos invocados: 
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
473 - Declaração do método: org.apache.commons.io.input.CharSequenceReader.read([C, I, I)
Métodos invocados: 
java.lang.CharSequence.length()
org.apache.commons.io.input.CharSequenceReader.read()
474 - Declaração do método: org.apache.commons.io.input.CharSequenceReader.reset()
474 - Declaração do método: org.apache.commons.io.input.CharSequenceReader.skip(J)
Métodos invocados: 
java.lang.CharSequence.length()
java.lang.CharSequence.length()
java.lang.Math.min(J, J)
475 - Declaração do método: org.apache.commons.io.input.CharSequenceReader.toString()
Métodos invocados: 
java.lang.CharSequence.toString()
476 - Declaração do método: org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(java.io.Reader, java.nio.charset.CharsetEncoder)
476 - Declaração do método: org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(java.io.Reader, java.nio.charset.CharsetEncoder, I)
Métodos invocados: 
java.nio.CharBuffer.allocate(I)
java.nio.Buffer.flip()
java.nio.ByteBuffer.allocate(I)
java.nio.Buffer.flip()
477 - Declaração do método: org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(java.io.Reader, java.nio.charset.Charset, I)
Métodos invocados: 
java.nio.charset.Charset.newEncoder()
java.nio.charset.CharsetEncoder.onMalformedInput(java.nio.charset.CodingErrorAction)
java.nio.charset.CharsetEncoder.onUnmappableCharacter(java.nio.charset.CodingErrorAction)
478 - Declaração do método: org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(java.io.Reader, java.nio.charset.Charset)
478 - Declaração do método: org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(java.io.Reader, java.lang.String, I)
Métodos invocados: 
java.nio.charset.Charset.forName(java.lang.String)
479 - Declaração do método: org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(java.io.Reader, java.lang.String)
479 - Declaração do método: org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(java.io.Reader)
Métodos invocados: 
java.nio.charset.Charset.defaultCharset()
480 - Declaração do método: org.apache.commons.io.input.ReaderInputStream.fillBuffer()
Métodos invocados: 
java.nio.charset.CoderResult.isUnderflow()
java.nio.CharBuffer.compact()
java.nio.Buffer.position()
java.nio.CharBuffer.array()
java.nio.Buffer.remaining()
java.io.Reader.read([C, I, I)
java.nio.Buffer.position(I)
java.nio.Buffer.flip()
java.nio.ByteBuffer.compact()
java.nio.charset.CharsetEncoder.encode(java.nio.CharBuffer, java.nio.ByteBuffer, Z)
java.nio.Buffer.flip()
481 - Declaração do método: org.apache.commons.io.input.ReaderInputStream.read([B, I, I)
Métodos invocados: 
java.nio.Buffer.hasRemaining()
java.nio.Buffer.remaining()
java.lang.Math.min(I, I)
java.nio.ByteBuffer.get([B, I, I)
org.apache.commons.io.input.ReaderInputStream.fillBuffer()
java.nio.Buffer.hasRemaining()
482 - Declaração do método: org.apache.commons.io.input.ReaderInputStream.read([B)
Métodos invocados: 
org.apache.commons.io.input.ReaderInputStream.read([B, I, I)
483 - Declaração do método: org.apache.commons.io.input.ReaderInputStream.read()
Métodos invocados: 
java.nio.Buffer.hasRemaining()
java.nio.ByteBuffer.get()
org.apache.commons.io.input.ReaderInputStream.fillBuffer()
java.nio.Buffer.hasRemaining()
484 - Declaração do método: org.apache.commons.io.input.ReaderInputStream.close()
Métodos invocados: 
java.io.Reader.close()
485 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(java.lang.CharSequence, java.nio.charset.Charset, I)
Métodos invocados: 
java.nio.charset.Charset.newEncoder()
java.nio.charset.CharsetEncoder.onMalformedInput(java.nio.charset.CodingErrorAction)
java.nio.charset.CharsetEncoder.onUnmappableCharacter(java.nio.charset.CodingErrorAction)
java.nio.ByteBuffer.allocate(I)
java.nio.Buffer.flip()
java.nio.CharBuffer.wrap(java.lang.CharSequence)
486 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(java.lang.CharSequence, java.lang.String, I)
Métodos invocados: 
java.nio.charset.Charset.forName(java.lang.String)
487 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(java.lang.CharSequence, java.nio.charset.Charset)
487 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(java.lang.CharSequence, java.lang.String)
487 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStream.fillBuffer()
Métodos invocados: 
java.nio.ByteBuffer.compact()
java.nio.charset.CharsetEncoder.encode(java.nio.CharBuffer, java.nio.ByteBuffer, Z)
java.nio.charset.CoderResult.isError()
java.nio.charset.CoderResult.throwException()
java.nio.Buffer.flip()
488 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStream.read([B, I, I)
Métodos invocados: 
java.nio.Buffer.hasRemaining()
java.nio.Buffer.hasRemaining()
java.nio.Buffer.hasRemaining()
java.nio.Buffer.remaining()
java.lang.Math.min(I, I)
java.nio.ByteBuffer.get([B, I, I)
org.apache.commons.io.input.CharSequenceInputStream.fillBuffer()
java.nio.Buffer.hasRemaining()
java.nio.Buffer.hasRemaining()
java.nio.Buffer.hasRemaining()
489 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStream.read()
Métodos invocados: 
java.nio.Buffer.hasRemaining()
java.nio.ByteBuffer.get()
org.apache.commons.io.input.CharSequenceInputStream.fillBuffer()
java.nio.Buffer.hasRemaining()
java.nio.Buffer.hasRemaining()
490 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStream.read([B)
Métodos invocados: 
org.apache.commons.io.input.CharSequenceInputStream.read([B, I, I)
491 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStream.skip(J)
Métodos invocados: 
java.nio.Buffer.hasRemaining()
java.nio.CharBuffer.get()
492 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStream.available()
Métodos invocados: 
java.nio.Buffer.remaining()
493 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStream.close()
493 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStream.mark(I)
Métodos invocados: 
java.nio.Buffer.position()
494 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStream.reset()
Métodos invocados: 
java.nio.Buffer.position(I)
495 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStream.markSupported()
495 - Declaração do método: org.apache.commons.io.input.TailerListenerAdapter.init(org.apache.commons.io.input.Tailer)
495 - Declaração do método: org.apache.commons.io.input.TailerListenerAdapter.fileNotFound()
495 - Declaração do método: org.apache.commons.io.input.TailerListenerAdapter.fileRotated()
495 - Declaração do método: org.apache.commons.io.input.TailerListenerAdapter.handle(java.lang.String)
495 - Declaração do método: org.apache.commons.io.input.TailerListenerAdapter.handle(java.lang.Exception)
495 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.SwappedDataInputStream(java.io.InputStream)
495 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readBoolean()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readByte()
496 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readByte()
Métodos invocados: 
java.io.InputStream.read()
497 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readChar()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readShort()
498 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readDouble()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedDouble(java.io.InputStream)
499 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readFloat()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedFloat(java.io.InputStream)
500 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readFully([B)
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readFully([B, I, I)
501 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readFully([B, I, I)
Métodos invocados: 
org.apache.commons.io.input.ProxyInputStream.read([B, I, I)
502 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readInt()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedInteger(java.io.InputStream)
503 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readLine()
503 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readLong()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedLong(java.io.InputStream)
504 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readShort()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedShort(java.io.InputStream)
505 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readUnsignedByte()
Métodos invocados: 
java.io.InputStream.read()
506 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readUnsignedShort()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(java.io.InputStream)
507 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.readUTF()
507 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStream.skipBytes(I)
Métodos invocados: 
java.io.InputStream.skip(J)
508 - Declaração do método: org.apache.commons.io.input.BrokenInputStream.BrokenInputStream(java.io.IOException)
508 - Declaração do método: org.apache.commons.io.input.BrokenInputStream.BrokenInputStream()
508 - Declaração do método: org.apache.commons.io.input.BrokenInputStream.read()
508 - Declaração do método: org.apache.commons.io.input.BrokenInputStream.available()
508 - Declaração do método: org.apache.commons.io.input.BrokenInputStream.skip(J)
508 - Declaração do método: org.apache.commons.io.input.BrokenInputStream.reset()
508 - Declaração do método: org.apache.commons.io.input.BrokenInputStream.close()
508 - Declaração do método: org.apache.commons.io.input.TaggedInputStream.TaggedInputStream(java.io.InputStream)
508 - Declaração do método: org.apache.commons.io.input.TaggedInputStream.isCauseOf(java.lang.Throwable)
Métodos invocados: 
org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable, java.lang.Object)
509 - Declaração do método: org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf(java.lang.Throwable)
Métodos invocados: 
org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(java.lang.Throwable, java.lang.Object)
510 - Declaração do método: org.apache.commons.io.input.TaggedInputStream.handleIOException(java.io.IOException)
510 - Declaração do método: org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(java.io.InputStream, J)
510 - Declaração do método: org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(java.io.InputStream)
510 - Declaração do método: org.apache.commons.io.input.BoundedInputStream.read()
Métodos invocados: 
java.io.InputStream.read()
511 - Declaração do método: org.apache.commons.io.input.BoundedInputStream.read([B)
Métodos invocados: 
org.apache.commons.io.input.BoundedInputStream.read([B, I, I)
512 - Declaração do método: org.apache.commons.io.input.BoundedInputStream.read([B, I, I)
Métodos invocados: 
java.lang.Math.min(J, J)
java.io.InputStream.read([B, I, I)
513 - Declaração do método: org.apache.commons.io.input.BoundedInputStream.skip(J)
Métodos invocados: 
java.lang.Math.min(J, J)
java.io.InputStream.skip(J)
514 - Declaração do método: org.apache.commons.io.input.BoundedInputStream.available()
Métodos invocados: 
java.io.InputStream.available()
515 - Declaração do método: org.apache.commons.io.input.BoundedInputStream.toString()
Métodos invocados: 
java.lang.Object.toString()
516 - Declaração do método: org.apache.commons.io.input.BoundedInputStream.close()
Métodos invocados: 
java.io.InputStream.close()
517 - Declaração do método: org.apache.commons.io.input.BoundedInputStream.reset()
Métodos invocados: 
java.io.InputStream.reset()
518 - Declaração do método: org.apache.commons.io.input.BoundedInputStream.mark(I)
Métodos invocados: 
java.io.InputStream.mark(I)
519 - Declaração do método: org.apache.commons.io.input.BoundedInputStream.markSupported()
Métodos invocados: 
java.io.InputStream.markSupported()
520 - Declaração do método: org.apache.commons.io.input.BoundedInputStream.isPropagateClose()
520 - Declaração do método: org.apache.commons.io.input.BoundedInputStream.setPropagateClose(Z)
520 - Declaração do método: org.apache.commons.io.monitor.FileEntry.FileEntry(java.io.File)
520 - Declaração do método: org.apache.commons.io.monitor.FileEntry.FileEntry(org.apache.commons.io.monitor.FileEntry, java.io.File)
Métodos invocados: 
java.io.File.getName()
521 - Declaração do método: org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)
Métodos invocados: 
java.io.File.getName()
java.io.File.exists()
java.io.File.isDirectory()
java.io.File.lastModified()
java.io.File.length()
522 - Declaração do método: org.apache.commons.io.monitor.FileEntry.newChildInstance(java.io.File)
522 - Declaração do método: org.apache.commons.io.monitor.FileEntry.getParent()
522 - Declaração do método: org.apache.commons.io.monitor.FileEntry.getLevel()
Métodos invocados: 
org.apache.commons.io.monitor.FileEntry.getLevel()
523 - Declaração do método: org.apache.commons.io.monitor.FileEntry.getChildren()
523 - Declaração do método: org.apache.commons.io.monitor.FileEntry.setChildren([Lorg.apache.commons.io.monitor.FileEntry;)
523 - Declaração do método: org.apache.commons.io.monitor.FileEntry.getFile()
523 - Declaração do método: org.apache.commons.io.monitor.FileEntry.getName()
523 - Declaração do método: org.apache.commons.io.monitor.FileEntry.setName(java.lang.String)
523 - Declaração do método: org.apache.commons.io.monitor.FileEntry.getLastModified()
523 - Declaração do método: org.apache.commons.io.monitor.FileEntry.setLastModified(J)
523 - Declaração do método: org.apache.commons.io.monitor.FileEntry.getLength()
523 - Declaração do método: org.apache.commons.io.monitor.FileEntry.setLength(J)
523 - Declaração do método: org.apache.commons.io.monitor.FileEntry.isExists()
523 - Declaração do método: org.apache.commons.io.monitor.FileEntry.setExists(Z)
523 - Declaração do método: org.apache.commons.io.monitor.FileEntry.isDirectory()
523 - Declaração do método: org.apache.commons.io.monitor.FileEntry.setDirectory(Z)
523 - Declaração do método: org.apache.commons.io.monitor.FileAlterationListener.onStart(org.apache.commons.io.monitor.FileAlterationObserver)
523 - Declaração do método: org.apache.commons.io.monitor.FileAlterationListener.onDirectoryCreate(java.io.File)
523 - Declaração do método: org.apache.commons.io.monitor.FileAlterationListener.onDirectoryChange(java.io.File)
523 - Declaração do método: org.apache.commons.io.monitor.FileAlterationListener.onDirectoryDelete(java.io.File)
523 - Declaração do método: org.apache.commons.io.monitor.FileAlterationListener.onFileCreate(java.io.File)
523 - Declaração do método: org.apache.commons.io.monitor.FileAlterationListener.onFileChange(java.io.File)
523 - Declaração do método: org.apache.commons.io.monitor.FileAlterationListener.onFileDelete(java.io.File)
523 - Declaração do método: org.apache.commons.io.monitor.FileAlterationListener.onStop(org.apache.commons.io.monitor.FileAlterationObserver)
523 - Declaração do método: org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor()
523 - Declaração do método: org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(J)
523 - Declaração do método: org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(J, [Lorg.apache.commons.io.monitor.FileAlterationObserver;)
Métodos invocados: 
org.apache.commons.io.monitor.FileAlterationMonitor.addObserver(org.apache.commons.io.monitor.FileAlterationObserver)
524 - Declaração do método: org.apache.commons.io.monitor.FileAlterationMonitor.getInterval()
524 - Declaração do método: org.apache.commons.io.monitor.FileAlterationMonitor.setThreadFactory(java.util.concurrent.ThreadFactory)
524 - Declaração do método: org.apache.commons.io.monitor.FileAlterationMonitor.addObserver(org.apache.commons.io.monitor.FileAlterationObserver)
Métodos invocados: 
java.util.List.add(org.apache.commons.io.monitor.FileAlterationObserver)
525 - Declaração do método: org.apache.commons.io.monitor.FileAlterationMonitor.removeObserver(org.apache.commons.io.monitor.FileAlterationObserver)
Métodos invocados: 
java.util.List.remove(java.lang.Object)
526 - Declaração do método: org.apache.commons.io.monitor.FileAlterationMonitor.getObservers()
526 - Declaração do método: org.apache.commons.io.monitor.FileAlterationMonitor.start()
Métodos invocados: 
org.apache.commons.io.monitor.FileAlterationObserver.initialize()
java.util.concurrent.ThreadFactory.newThread(java.lang.Runnable)
java.lang.Thread.start()
527 - Declaração do método: org.apache.commons.io.monitor.FileAlterationMonitor.stop()
Métodos invocados: 
org.apache.commons.io.monitor.FileAlterationMonitor.stop(J)
528 - Declaração do método: org.apache.commons.io.monitor.FileAlterationMonitor.stop(J)
Métodos invocados: 
java.lang.Thread.join(J)
java.lang.Thread.currentThread()
java.lang.Thread.interrupt()
org.apache.commons.io.monitor.FileAlterationObserver.destroy()
529 - Declaração do método: org.apache.commons.io.monitor.FileAlterationMonitor.run()
Métodos invocados: 
org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify()
java.lang.Thread.sleep(J)
530 - Declaração do método: org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onStart(org.apache.commons.io.monitor.FileAlterationObserver)
530 - Declaração do método: org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onDirectoryCreate(java.io.File)
530 - Declaração do método: org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onDirectoryChange(java.io.File)
530 - Declaração do método: org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onDirectoryDelete(java.io.File)
530 - Declaração do método: org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onFileCreate(java.io.File)
530 - Declaração do método: org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onFileChange(java.io.File)
530 - Declaração do método: org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onFileDelete(java.io.File)
530 - Declaração do método: org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onStop(org.apache.commons.io.monitor.FileAlterationObserver)
530 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(java.lang.String)
530 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(java.lang.String, java.io.FileFilter)
530 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(java.lang.String, java.io.FileFilter, org.apache.commons.io.IOCase)
530 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(java.io.File)
530 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(java.io.File, java.io.FileFilter)
530 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(java.io.File, java.io.FileFilter, org.apache.commons.io.IOCase)
530 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(org.apache.commons.io.monitor.FileEntry, java.io.FileFilter, org.apache.commons.io.IOCase)
Métodos invocados: 
org.apache.commons.io.monitor.FileEntry.getFile()
java.lang.Object.equals(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
531 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.getDirectory()
Métodos invocados: 
org.apache.commons.io.monitor.FileEntry.getFile()
532 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.getFileFilter()
532 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.addListener(org.apache.commons.io.monitor.FileAlterationListener)
Métodos invocados: 
java.util.List.add(org.apache.commons.io.monitor.FileAlterationListener)
533 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.removeListener(org.apache.commons.io.monitor.FileAlterationListener)
Métodos invocados: 
java.util.List.remove(java.lang.Object)
534 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.getListeners()
534 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.initialize()
Métodos invocados: 
org.apache.commons.io.monitor.FileEntry.getFile()
org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)
org.apache.commons.io.monitor.FileEntry.getFile()
org.apache.commons.io.monitor.FileAlterationObserver.listFiles(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(org.apache.commons.io.monitor.FileEntry, java.io.File)
org.apache.commons.io.monitor.FileEntry.setChildren([Lorg.apache.commons.io.monitor.FileEntry;)
535 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.destroy()
535 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify()
Métodos invocados: 
org.apache.commons.io.monitor.FileAlterationListener.onStart(org.apache.commons.io.monitor.FileAlterationObserver)
org.apache.commons.io.monitor.FileEntry.getFile()
java.io.File.exists()
org.apache.commons.io.monitor.FileEntry.getChildren()
org.apache.commons.io.monitor.FileAlterationObserver.listFiles(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry, [Lorg.apache.commons.io.monitor.FileEntry;, [Ljava.io.File;)
org.apache.commons.io.monitor.FileEntry.isExists()
org.apache.commons.io.monitor.FileEntry.getChildren()
org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry, [Lorg.apache.commons.io.monitor.FileEntry;, [Ljava.io.File;)
org.apache.commons.io.monitor.FileAlterationListener.onStop(org.apache.commons.io.monitor.FileAlterationObserver)
536 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry, [Lorg.apache.commons.io.monitor.FileEntry;, [Ljava.io.File;)
Métodos invocados: 
org.apache.commons.io.monitor.FileEntry.getFile()
java.util.Comparator.compare(java.io.File, java.io.File)
org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(org.apache.commons.io.monitor.FileEntry, java.io.File)
org.apache.commons.io.monitor.FileAlterationObserver.doCreate(org.apache.commons.io.monitor.FileEntry)
org.apache.commons.io.monitor.FileEntry.getFile()
java.util.Comparator.compare(java.io.File, java.io.File)
org.apache.commons.io.monitor.FileAlterationObserver.doMatch(org.apache.commons.io.monitor.FileEntry, java.io.File)
org.apache.commons.io.monitor.FileEntry.getChildren()
org.apache.commons.io.monitor.FileAlterationObserver.listFiles(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry, [Lorg.apache.commons.io.monitor.FileEntry;, [Ljava.io.File;)
org.apache.commons.io.monitor.FileEntry.getChildren()
org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(org.apache.commons.io.monitor.FileEntry, [Lorg.apache.commons.io.monitor.FileEntry;, [Ljava.io.File;)
org.apache.commons.io.monitor.FileAlterationObserver.doDelete(org.apache.commons.io.monitor.FileEntry)
org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(org.apache.commons.io.monitor.FileEntry, java.io.File)
org.apache.commons.io.monitor.FileAlterationObserver.doCreate(org.apache.commons.io.monitor.FileEntry)
org.apache.commons.io.monitor.FileEntry.setChildren([Lorg.apache.commons.io.monitor.FileEntry;)
537 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(org.apache.commons.io.monitor.FileEntry, java.io.File)
Métodos invocados: 
org.apache.commons.io.monitor.FileEntry.newChildInstance(java.io.File)
org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserver.listFiles(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(org.apache.commons.io.monitor.FileEntry, java.io.File)
org.apache.commons.io.monitor.FileEntry.setChildren([Lorg.apache.commons.io.monitor.FileEntry;)
538 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.doCreate(org.apache.commons.io.monitor.FileEntry)
Métodos invocados: 
org.apache.commons.io.monitor.FileEntry.isDirectory()
org.apache.commons.io.monitor.FileEntry.getFile()
org.apache.commons.io.monitor.FileAlterationListener.onDirectoryCreate(java.io.File)
org.apache.commons.io.monitor.FileEntry.getFile()
org.apache.commons.io.monitor.FileAlterationListener.onFileCreate(java.io.File)
org.apache.commons.io.monitor.FileEntry.getChildren()
org.apache.commons.io.monitor.FileAlterationObserver.doCreate(org.apache.commons.io.monitor.FileEntry)
539 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.doMatch(org.apache.commons.io.monitor.FileEntry, java.io.File)
Métodos invocados: 
org.apache.commons.io.monitor.FileEntry.refresh(java.io.File)
org.apache.commons.io.monitor.FileEntry.isDirectory()
org.apache.commons.io.monitor.FileAlterationListener.onDirectoryChange(java.io.File)
org.apache.commons.io.monitor.FileAlterationListener.onFileChange(java.io.File)
540 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.doDelete(org.apache.commons.io.monitor.FileEntry)
Métodos invocados: 
org.apache.commons.io.monitor.FileEntry.isDirectory()
org.apache.commons.io.monitor.FileEntry.getFile()
org.apache.commons.io.monitor.FileAlterationListener.onDirectoryDelete(java.io.File)
org.apache.commons.io.monitor.FileEntry.getFile()
org.apache.commons.io.monitor.FileAlterationListener.onFileDelete(java.io.File)
541 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.listFiles(java.io.File)
Métodos invocados: 
java.io.File.isDirectory()
java.io.File.listFiles()
java.io.File.listFiles(java.io.FileFilter)
java.util.Arrays.sort([Ljava.io.File;, java.util.Comparator)
542 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserver.toString()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getSimpleName()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.io.monitor.FileAlterationObserver.getDirectory()
java.io.File.getPath()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(java.lang.String)
java.lang.Object.toString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.util.List.size()
java.lang.StringBuilder.append(I)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
543 - Declaração do método: org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(java.io.OutputStream)
543 - Declaração do método: org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(java.io.OutputStream, java.lang.String)
543 - Declaração do método: org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(java.io.File)
543 - Declaração do método: org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(java.io.File, java.lang.String)
543 - Declaração do método: org.apache.commons.io.output.XmlStreamWriter.getEncoding()
543 - Declaração do método: org.apache.commons.io.output.XmlStreamWriter.getDefaultEncoding()
543 - Declaração do método: org.apache.commons.io.output.XmlStreamWriter.close()
Métodos invocados: 
java.io.StringWriter.toString()
java.io.Writer.write(java.lang.String)
java.io.Writer.close()
544 - Declaração do método: org.apache.commons.io.output.XmlStreamWriter.flush()
Métodos invocados: 
java.io.Writer.flush()
545 - Declaração do método: org.apache.commons.io.output.XmlStreamWriter.detectEncoding([C, I, I)
Métodos invocados: 
java.io.StringWriter.getBuffer()
java.lang.StringBuffer.length()
java.lang.StringBuffer.length()
java.io.StringWriter.write([C, I, I)
java.lang.StringBuffer.length()
java.lang.StringBuffer.substring(I, I)
java.lang.String.equals(java.lang.Object)
java.lang.StringBuffer.indexOf(java.lang.String)
java.lang.StringBuffer.substring(I, I)
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.util.regex.Matcher.find()
java.util.regex.Matcher.group(I)
java.lang.String.toUpperCase()
java.lang.String.length()
java.lang.String.substring(I, I)
java.lang.StringBuffer.length()
java.lang.StringBuffer.toString()
java.io.Writer.write(java.lang.String)
java.io.Writer.write([C, I, I)
546 - Declaração do método: org.apache.commons.io.output.XmlStreamWriter.write([C, I, I)
Métodos invocados: 
org.apache.commons.io.output.XmlStreamWriter.detectEncoding([C, I, I)
java.io.Writer.write([C, I, I)
547 - Declaração do método: org.apache.commons.io.output.ProxyOutputStream.ProxyOutputStream(java.io.OutputStream)
547 - Declaração do método: org.apache.commons.io.output.ProxyOutputStream.write(I)
Métodos invocados: 
org.apache.commons.io.output.ProxyOutputStream.beforeWrite(I)
java.io.OutputStream.write(I)
org.apache.commons.io.output.ProxyOutputStream.afterWrite(I)
org.apache.commons.io.output.ProxyOutputStream.handleIOException(java.io.IOException)
548 - Declaração do método: org.apache.commons.io.output.ProxyOutputStream.write([B)
Métodos invocados: 
org.apache.commons.io.output.ProxyOutputStream.beforeWrite(I)
java.io.OutputStream.write([B)
org.apache.commons.io.output.ProxyOutputStream.afterWrite(I)
org.apache.commons.io.output.ProxyOutputStream.handleIOException(java.io.IOException)
549 - Declaração do método: org.apache.commons.io.output.ProxyOutputStream.write([B, I, I)
Métodos invocados: 
org.apache.commons.io.output.ProxyOutputStream.beforeWrite(I)
java.io.OutputStream.write([B, I, I)
org.apache.commons.io.output.ProxyOutputStream.afterWrite(I)
org.apache.commons.io.output.ProxyOutputStream.handleIOException(java.io.IOException)
550 - Declaração do método: org.apache.commons.io.output.ProxyOutputStream.flush()
Métodos invocados: 
java.io.OutputStream.flush()
org.apache.commons.io.output.ProxyOutputStream.handleIOException(java.io.IOException)
551 - Declaração do método: org.apache.commons.io.output.ProxyOutputStream.close()
Métodos invocados: 
java.io.OutputStream.close()
org.apache.commons.io.output.ProxyOutputStream.handleIOException(java.io.IOException)
552 - Declaração do método: org.apache.commons.io.output.ProxyOutputStream.beforeWrite(I)
552 - Declaração do método: org.apache.commons.io.output.ProxyOutputStream.afterWrite(I)
552 - Declaração do método: org.apache.commons.io.output.ProxyOutputStream.handleIOException(java.io.IOException)
552 - Declaração do método: org.apache.commons.io.output.CloseShieldOutputStream.CloseShieldOutputStream(java.io.OutputStream)
552 - Declaração do método: org.apache.commons.io.output.CloseShieldOutputStream.close()
552 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter()
552 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(I)
552 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(java.lang.StringBuilder)
552 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.append(C)
Métodos invocados: 
java.lang.StringBuilder.append(C)
553 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.append(java.lang.CharSequence)
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.CharSequence)
554 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.append(java.lang.CharSequence, I, I)
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.CharSequence, I, I)
555 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.close()
555 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.flush()
555 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.write(java.lang.String)
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
556 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.write([C, I, I)
Métodos invocados: 
java.lang.StringBuilder.append([C, I, I)
557 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.getBuilder()
557 - Declaração do método: org.apache.commons.io.output.StringBuilderWriter.toString()
Métodos invocados: 
java.lang.StringBuilder.toString()
558 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(I, java.io.File)
558 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(I, java.lang.String, java.lang.String, java.io.File)
558 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(I, java.io.File, java.lang.String, java.lang.String, java.io.File)
558 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStream.getStream()
558 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached()
Métodos invocados: 
java.io.File.createTempFile(java.lang.String, java.lang.String, java.io.File)
org.apache.commons.io.output.ByteArrayOutputStream.writeTo(java.io.OutputStream)
559 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
Métodos invocados: 
org.apache.commons.io.output.ThresholdingOutputStream.isThresholdExceeded()
560 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStream.getData()
Métodos invocados: 
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
561 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStream.getFile()
561 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStream.close()
561 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStream.writeTo(java.io.OutputStream)
Métodos invocados: 
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
org.apache.commons.io.output.ByteArrayOutputStream.writeTo(java.io.OutputStream)
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
562 - Declaração do método: org.apache.commons.io.output.TaggedOutputStream.TaggedOutputStream(java.io.OutputStream)
562 - Declaração do método: org.apache.commons.io.output.TaggedOutputStream.isCauseOf(java.lang.Exception)
Métodos invocados: 
org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable, java.lang.Object)
563 - Declaração do método: org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf(java.lang.Exception)
Métodos invocados: 
org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(java.lang.Throwable, java.lang.Object)
564 - Declaração do método: org.apache.commons.io.output.TaggedOutputStream.handleIOException(java.io.IOException)
564 - Declaração do método: org.apache.commons.io.output.BrokenOutputStream.BrokenOutputStream(java.io.IOException)
564 - Declaração do método: org.apache.commons.io.output.BrokenOutputStream.BrokenOutputStream()
564 - Declaração do método: org.apache.commons.io.output.BrokenOutputStream.write(I)
564 - Declaração do método: org.apache.commons.io.output.BrokenOutputStream.flush()
564 - Declaração do método: org.apache.commons.io.output.BrokenOutputStream.close()
564 - Declaração do método: org.apache.commons.io.output.DemuxOutputStream.bindStream(java.io.OutputStream)
Métodos invocados: 
java.lang.ThreadLocal.get()
java.lang.ThreadLocal.set(java.io.OutputStream)
565 - Declaração do método: org.apache.commons.io.output.DemuxOutputStream.close()
Métodos invocados: 
java.lang.ThreadLocal.get()
java.io.OutputStream.close()
566 - Declaração do método: org.apache.commons.io.output.DemuxOutputStream.flush()
Métodos invocados: 
java.lang.ThreadLocal.get()
java.io.OutputStream.flush()
567 - Declaração do método: org.apache.commons.io.output.DemuxOutputStream.write(I)
Métodos invocados: 
java.lang.ThreadLocal.get()
java.io.OutputStream.write(I)
568 - Declaração do método: org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(java.io.Writer, java.nio.charset.CharsetDecoder)
568 - Declaração do método: org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(java.io.Writer, java.nio.charset.CharsetDecoder, I, Z)
Métodos invocados: 
java.nio.CharBuffer.allocate(I)
569 - Declaração do método: org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(java.io.Writer, java.nio.charset.Charset, I, Z)
Métodos invocados: 
java.nio.charset.Charset.newDecoder()
java.nio.charset.CharsetDecoder.onMalformedInput(java.nio.charset.CodingErrorAction)
java.nio.charset.CharsetDecoder.onUnmappableCharacter(java.nio.charset.CodingErrorAction)
java.nio.charset.CharsetDecoder.replaceWith(java.lang.String)
570 - Declaração do método: org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(java.io.Writer, java.nio.charset.Charset)
570 - Declaração do método: org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(java.io.Writer, java.lang.String, I, Z)
Métodos invocados: 
java.nio.charset.Charset.forName(java.lang.String)
571 - Declaração do método: org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(java.io.Writer, java.lang.String)
571 - Declaração do método: org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(java.io.Writer)
Métodos invocados: 
java.nio.charset.Charset.defaultCharset()
572 - Declaração do método: org.apache.commons.io.output.WriterOutputStream.write([B, I, I)
Métodos invocados: 
java.nio.Buffer.remaining()
java.lang.Math.min(I, I)
java.nio.ByteBuffer.put([B, I, I)
org.apache.commons.io.output.WriterOutputStream.processInput(Z)
org.apache.commons.io.output.WriterOutputStream.flushOutput()
573 - Declaração do método: org.apache.commons.io.output.WriterOutputStream.write([B)
Métodos invocados: 
org.apache.commons.io.output.WriterOutputStream.write([B, I, I)
574 - Declaração do método: org.apache.commons.io.output.WriterOutputStream.write(I)
Métodos invocados: 
org.apache.commons.io.output.WriterOutputStream.write([B, I, I)
575 - Declaração do método: org.apache.commons.io.output.WriterOutputStream.flush()
Métodos invocados: 
org.apache.commons.io.output.WriterOutputStream.flushOutput()
java.io.Writer.flush()
576 - Declaração do método: org.apache.commons.io.output.WriterOutputStream.close()
Métodos invocados: 
org.apache.commons.io.output.WriterOutputStream.processInput(Z)
org.apache.commons.io.output.WriterOutputStream.flushOutput()
java.io.Writer.close()
577 - Declaração do método: org.apache.commons.io.output.WriterOutputStream.processInput(Z)
Métodos invocados: 
java.nio.Buffer.flip()
java.nio.charset.CharsetDecoder.decode(java.nio.ByteBuffer, java.nio.CharBuffer, Z)
java.nio.charset.CoderResult.isOverflow()
org.apache.commons.io.output.WriterOutputStream.flushOutput()
java.nio.charset.CoderResult.isUnderflow()
java.nio.ByteBuffer.compact()
578 - Declaração do método: org.apache.commons.io.output.WriterOutputStream.flushOutput()
Métodos invocados: 
java.nio.Buffer.position()
java.nio.CharBuffer.array()
java.nio.Buffer.position()
java.io.Writer.write([C, I, I)
java.nio.Buffer.rewind()
579 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.ThresholdingOutputStream(I)
579 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.write(I)
Métodos invocados: 
org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(I)
org.apache.commons.io.output.ThresholdingOutputStream.getStream()
java.io.OutputStream.write(I)
580 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.write([B)
Métodos invocados: 
org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(I)
org.apache.commons.io.output.ThresholdingOutputStream.getStream()
java.io.OutputStream.write([B)
581 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
Métodos invocados: 
org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(I)
org.apache.commons.io.output.ThresholdingOutputStream.getStream()
java.io.OutputStream.write([B, I, I)
582 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.flush()
Métodos invocados: 
org.apache.commons.io.output.ThresholdingOutputStream.getStream()
java.io.OutputStream.flush()
583 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.close()
Métodos invocados: 
org.apache.commons.io.output.ThresholdingOutputStream.flush()
org.apache.commons.io.output.ThresholdingOutputStream.getStream()
java.io.OutputStream.close()
584 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.getThreshold()
584 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.getByteCount()
584 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.isThresholdExceeded()
584 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(I)
Métodos invocados: 
org.apache.commons.io.output.ThresholdingOutputStream.thresholdReached()
585 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.resetByteCount()
585 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.getStream()
585 - Declaração do método: org.apache.commons.io.output.ThresholdingOutputStream.thresholdReached()
585 - Declaração do método: org.apache.commons.io.output.TeeOutputStream.TeeOutputStream(java.io.OutputStream, java.io.OutputStream)
585 - Declaração do método: org.apache.commons.io.output.TeeOutputStream.write([B)
Métodos invocados: 
java.io.OutputStream.write([B)
586 - Declaração do método: org.apache.commons.io.output.TeeOutputStream.write([B, I, I)
Métodos invocados: 
java.io.OutputStream.write([B, I, I)
587 - Declaração do método: org.apache.commons.io.output.TeeOutputStream.write(I)
Métodos invocados: 
java.io.OutputStream.write(I)
588 - Declaração do método: org.apache.commons.io.output.TeeOutputStream.flush()
Métodos invocados: 
java.io.OutputStream.flush()
589 - Declaração do método: org.apache.commons.io.output.TeeOutputStream.close()
Métodos invocados: 
java.io.OutputStream.close()
590 - Declaração do método: org.apache.commons.io.output.ClosedOutputStream.write(I)
590 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.lang.String, java.lang.String)
590 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.lang.String, java.lang.String, Z)
590 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.lang.String, java.nio.charset.Charset)
590 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.lang.String, java.nio.charset.Charset, Z)
590 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.lang.String, java.nio.charset.CharsetEncoder)
590 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.lang.String, java.nio.charset.CharsetEncoder, Z)
590 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.io.File, java.lang.String)
590 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.io.File, java.lang.String, Z)
Métodos invocados: 
org.apache.commons.io.output.FileWriterWithEncoding.initWriter(java.io.File, java.lang.Object, Z)
591 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.io.File, java.nio.charset.Charset)
591 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.io.File, java.nio.charset.Charset, Z)
Métodos invocados: 
org.apache.commons.io.output.FileWriterWithEncoding.initWriter(java.io.File, java.lang.Object, Z)
592 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.io.File, java.nio.charset.CharsetEncoder)
592 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(java.io.File, java.nio.charset.CharsetEncoder, Z)
Métodos invocados: 
org.apache.commons.io.output.FileWriterWithEncoding.initWriter(java.io.File, java.lang.Object, Z)
593 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.initWriter(java.io.File, java.lang.Object, Z)
Métodos invocados: 
java.io.File.exists()
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
594 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.write(I)
Métodos invocados: 
java.io.Writer.write(I)
595 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.write([C)
Métodos invocados: 
java.io.Writer.write([C)
596 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.write([C, I, I)
Métodos invocados: 
java.io.Writer.write([C, I, I)
597 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.write(java.lang.String)
Métodos invocados: 
java.io.Writer.write(java.lang.String)
598 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.write(java.lang.String, I, I)
Métodos invocados: 
java.io.Writer.write(java.lang.String, I, I)
599 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.flush()
Métodos invocados: 
java.io.Writer.flush()
600 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncoding.close()
Métodos invocados: 
java.io.Writer.close()
601 - Declaração do método: org.apache.commons.io.output.NullWriter.NullWriter()
601 - Declaração do método: org.apache.commons.io.output.NullWriter.append(C)
601 - Declaração do método: org.apache.commons.io.output.NullWriter.append(java.lang.CharSequence, I, I)
601 - Declaração do método: org.apache.commons.io.output.NullWriter.append(java.lang.CharSequence)
601 - Declaração do método: org.apache.commons.io.output.NullWriter.write(I)
601 - Declaração do método: org.apache.commons.io.output.NullWriter.write([C)
601 - Declaração do método: org.apache.commons.io.output.NullWriter.write([C, I, I)
601 - Declaração do método: org.apache.commons.io.output.NullWriter.write(java.lang.String)
601 - Declaração do método: org.apache.commons.io.output.NullWriter.write(java.lang.String, I, I)
601 - Declaração do método: org.apache.commons.io.output.NullWriter.flush()
601 - Declaração do método: org.apache.commons.io.output.NullWriter.close()
601 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(java.lang.String)
601 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(java.lang.String, Z)
601 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(java.lang.String, Z, java.lang.String)
601 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(java.io.File)
601 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(java.io.File, Z)
601 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(java.io.File, Z, java.lang.String)
601 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(java.io.File, java.lang.String)
601 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(java.io.File, java.lang.String, Z, java.lang.String)
Métodos invocados: 
java.io.File.getAbsoluteFile()
java.io.File.getParentFile()
java.io.File.getParentFile()
org.apache.commons.io.FileUtils.forceMkdir(java.io.File)
java.io.File.isDirectory()
java.lang.System.getProperty(java.lang.String)
org.apache.commons.io.FileUtils.forceMkdir(java.io.File)
org.apache.commons.io.output.LockableFileWriter.testLockDir(java.io.File)
java.io.File.getName()
org.apache.commons.io.output.LockableFileWriter.createLock()
org.apache.commons.io.output.LockableFileWriter.initWriter(java.io.File, java.lang.String, Z)
602 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.testLockDir(java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.getAbsolutePath()
java.io.File.canWrite()
java.io.File.getAbsolutePath()
603 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.createLock()
Métodos invocados: 
java.io.File.createNewFile()
java.io.File.getAbsolutePath()
java.io.File.deleteOnExit()
604 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.initWriter(java.io.File, java.lang.String, Z)
Métodos invocados: 
java.io.File.exists()
java.io.File.getAbsolutePath()
java.io.File.getAbsolutePath()
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
605 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.close()
Métodos invocados: 
java.io.Writer.close()
java.io.File.delete()
606 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.write(I)
Métodos invocados: 
java.io.Writer.write(I)
607 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.write([C)
Métodos invocados: 
java.io.Writer.write([C)
608 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.write([C, I, I)
Métodos invocados: 
java.io.Writer.write([C, I, I)
609 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.write(java.lang.String)
Métodos invocados: 
java.io.Writer.write(java.lang.String)
610 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.write(java.lang.String, I, I)
Métodos invocados: 
java.io.Writer.write(java.lang.String, I, I)
611 - Declaração do método: org.apache.commons.io.output.LockableFileWriter.flush()
Métodos invocados: 
java.io.Writer.flush()
612 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream()
612 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(I)
Métodos invocados: 
org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(I)
613 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(I)
Métodos invocados: 
java.util.List.size()
java.util.List.get(I)
java.lang.Math.max(I, I)
java.util.List.add([B)
614 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.write([B, I, I)
Métodos invocados: 
java.lang.Math.min(I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(I)
615 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.write(I)
Métodos invocados: 
org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(I)
616 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.write(java.io.InputStream)
Métodos invocados: 
java.io.InputStream.read([B, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(I)
java.io.InputStream.read([B, I, I)
617 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.size()
617 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.close()
617 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.reset()
Métodos invocados: 
java.util.List.get(I)
618 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.writeTo(java.io.OutputStream)
Métodos invocados: 
java.lang.Math.min(I, I)
java.io.OutputStream.write([B, I, I)
619 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(java.io.InputStream)
Métodos invocados: 
org.apache.commons.io.output.ByteArrayOutputStream.write(java.io.InputStream)
org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream()
620 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream()
Métodos invocados: 
java.util.List.size()
java.lang.Math.min(I, I)
java.util.List.add(java.io.ByteArrayInputStream)
java.util.Collections.enumeration(java.util.Collection)
621 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
Métodos invocados: 
java.lang.Math.min(I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
622 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.toString()
Métodos invocados: 
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
623 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStream.toString(java.lang.String)
Métodos invocados: 
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
624 - Declaração do método: org.apache.commons.io.output.NullOutputStream.write([B, I, I)
624 - Declaração do método: org.apache.commons.io.output.NullOutputStream.write(I)
624 - Declaração do método: org.apache.commons.io.output.NullOutputStream.write([B)
624 - Declaração do método: org.apache.commons.io.output.CountingOutputStream.CountingOutputStream(java.io.OutputStream)
624 - Declaração do método: org.apache.commons.io.output.CountingOutputStream.beforeWrite(I)
624 - Declaração do método: org.apache.commons.io.output.CountingOutputStream.getCount()
Métodos invocados: 
org.apache.commons.io.output.CountingOutputStream.getByteCount()
625 - Declaração do método: org.apache.commons.io.output.CountingOutputStream.resetCount()
Métodos invocados: 
org.apache.commons.io.output.CountingOutputStream.resetByteCount()
626 - Declaração do método: org.apache.commons.io.output.CountingOutputStream.getByteCount()
626 - Declaração do método: org.apache.commons.io.output.CountingOutputStream.resetByteCount()
626 - Declaração do método: org.apache.commons.io.output.ProxyWriter.ProxyWriter(java.io.Writer)
626 - Declaração do método: org.apache.commons.io.output.ProxyWriter.append(C)
Métodos invocados: 
org.apache.commons.io.output.ProxyWriter.beforeWrite(I)
java.io.Writer.append(C)
org.apache.commons.io.output.ProxyWriter.afterWrite(I)
org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)
627 - Declaração do método: org.apache.commons.io.output.ProxyWriter.append(java.lang.CharSequence, I, I)
Métodos invocados: 
org.apache.commons.io.output.ProxyWriter.beforeWrite(I)
java.io.Writer.append(java.lang.CharSequence, I, I)
org.apache.commons.io.output.ProxyWriter.afterWrite(I)
org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)
628 - Declaração do método: org.apache.commons.io.output.ProxyWriter.append(java.lang.CharSequence)
Métodos invocados: 
java.lang.CharSequence.length()
org.apache.commons.io.output.ProxyWriter.beforeWrite(I)
java.io.Writer.append(java.lang.CharSequence)
org.apache.commons.io.output.ProxyWriter.afterWrite(I)
org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)
629 - Declaração do método: org.apache.commons.io.output.ProxyWriter.write(I)
Métodos invocados: 
org.apache.commons.io.output.ProxyWriter.beforeWrite(I)
java.io.Writer.write(I)
org.apache.commons.io.output.ProxyWriter.afterWrite(I)
org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)
630 - Declaração do método: org.apache.commons.io.output.ProxyWriter.write([C)
Métodos invocados: 
org.apache.commons.io.output.ProxyWriter.beforeWrite(I)
java.io.Writer.write([C)
org.apache.commons.io.output.ProxyWriter.afterWrite(I)
org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)
631 - Declaração do método: org.apache.commons.io.output.ProxyWriter.write([C, I, I)
Métodos invocados: 
org.apache.commons.io.output.ProxyWriter.beforeWrite(I)
java.io.Writer.write([C, I, I)
org.apache.commons.io.output.ProxyWriter.afterWrite(I)
org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)
632 - Declaração do método: org.apache.commons.io.output.ProxyWriter.write(java.lang.String)
Métodos invocados: 
java.lang.String.length()
org.apache.commons.io.output.ProxyWriter.beforeWrite(I)
java.io.Writer.write(java.lang.String)
org.apache.commons.io.output.ProxyWriter.afterWrite(I)
org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)
633 - Declaração do método: org.apache.commons.io.output.ProxyWriter.write(java.lang.String, I, I)
Métodos invocados: 
org.apache.commons.io.output.ProxyWriter.beforeWrite(I)
java.io.Writer.write(java.lang.String, I, I)
org.apache.commons.io.output.ProxyWriter.afterWrite(I)
org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)
634 - Declaração do método: org.apache.commons.io.output.ProxyWriter.flush()
Métodos invocados: 
java.io.Writer.flush()
org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)
635 - Declaração do método: org.apache.commons.io.output.ProxyWriter.close()
Métodos invocados: 
java.io.Writer.close()
org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)
636 - Declaração do método: org.apache.commons.io.output.ProxyWriter.beforeWrite(I)
636 - Declaração do método: org.apache.commons.io.output.ProxyWriter.afterWrite(I)
636 - Declaração do método: org.apache.commons.io.output.ProxyWriter.handleIOException(java.io.IOException)
636 - Declaração do método: org.apache.commons.io.FileUtilsCleanSymlinksTestCase.FileUtilsCleanSymlinksTestCase(java.lang.String)
636 - Declaração do método: org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setUp()
Métodos invocados: 
java.io.File.mkdirs()
637 - Declaração do método: org.apache.commons.io.FileUtilsCleanSymlinksTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
638 - Declaração do método: org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithSymlinkFile()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
java.lang.String.startsWith(java.lang.String)
java.io.File.mkdirs()
junit.framework.Assert.assertTrue(Z)
java.io.File.mkdirs()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileUtils.touch(java.io.File)
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(java.io.File, java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
java.io.File.exists()
junit.framework.Assert.assertTrue(Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(Z)
639 - Declaração do método: org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
java.lang.String.startsWith(java.lang.String)
java.io.File.mkdirs()
junit.framework.Assert.assertTrue(Z)
java.io.File.mkdirs()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
java.io.File.mkdirs()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(java.io.File, java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
java.io.File.list()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
640 - Declaração do método: org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithParentSymlinks()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
java.lang.String.startsWith(java.lang.String)
java.io.File.mkdirs()
junit.framework.Assert.assertTrue(Z)
java.io.File.mkdirs()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
java.io.File.mkdirs()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(java.io.File, java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(java.io.File, java.io.File)
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
java.io.File.list()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
641 - Declaração do método: org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testStillClearsIfGivenDirectoryIsASymlink()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
java.lang.String.startsWith(java.lang.String)
java.io.File.mkdirs()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(java.io.File, java.io.File)
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
642 - Declaração do método: org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkDir()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
java.lang.String.startsWith(java.lang.String)
java.io.File.mkdirs()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(java.io.File, java.io.File)
org.apache.commons.io.FileUtils.isSymlink(java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.isSymlink(java.io.File)
junit.framework.Assert.assertFalse(Z)
643 - Declaração do método: org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkFile()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
java.lang.String.startsWith(java.lang.String)
org.apache.commons.io.FileUtils.touch(java.io.File)
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(java.io.File, java.io.File)
org.apache.commons.io.FileUtils.isSymlink(java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.isSymlink(java.io.File)
junit.framework.Assert.assertFalse(Z)
644 - Declaração do método: org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCorrectlyIdentifySymlinkWithParentSymLink()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
java.lang.String.startsWith(java.lang.String)
java.io.File.mkdirs()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(java.io.File, java.io.File)
java.io.File.mkdirs()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(java.io.File, java.io.File)
org.apache.commons.io.FileUtils.isSymlink(java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.isSymlink(java.io.File)
junit.framework.Assert.assertFalse(Z)
645 - Declaração do método: org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(java.io.File, java.io.File)
Métodos invocados: 
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.io.File.getAbsolutePath()
java.util.List.add(java.lang.String)
java.io.File.getAbsolutePath()
java.util.List.add(java.lang.String)
java.lang.Runtime.getRuntime()
java.util.List.size()
java.util.List.toArray([Ljava.lang.String;)
java.lang.Runtime.exec([Ljava.lang.String;)
java.lang.Process.waitFor()
646 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.lang.Throwable.getMessage()
647 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
648 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.IOUtilsTestCase(java.lang.String)
648 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testCloseNullSelector()
Métodos invocados: 
org.apache.commons.io.IOUtils.closeQuietly(java.nio.channels.Selector)
649 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testCloseSelector()
Métodos invocados: 
java.nio.channels.Selector.open()
org.apache.commons.io.IOUtils.closeQuietly(java.nio.channels.Selector)
650 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testCloseSelectorIOException()
Métodos invocados: 
org.apache.commons.io.IOUtils.closeQuietly(java.nio.channels.Selector)
651 - Declaração do método: org.apache.commons.io.IOUtilsTestCase$1.close()
651 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testCloseSelectorTwice()
Métodos invocados: 
java.nio.channels.Selector.open()
org.apache.commons.io.IOUtils.closeQuietly(java.nio.channels.Selector)
org.apache.commons.io.IOUtils.closeQuietly(java.nio.channels.Selector)
652 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testConstants()
Métodos invocados: 
junit.framework.Assert.assertEquals(C, C)
junit.framework.Assert.assertEquals(C, C)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(C, C)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(C, C)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
653 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.assertEqualContent([B, [B)
Métodos invocados: 
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
654 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testInputStreamToString()
Métodos invocados: 
org.apache.commons.io.IOUtils.toString(java.io.InputStream)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.io.FileInputStream.available()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.lang.String.length()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.FileInputStream.close()
655 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testReaderToString()
Métodos invocados: 
org.apache.commons.io.IOUtils.toString(java.io.Reader)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.lang.String.length()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStreamReader.close()
656 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.IOUtils.toString(java.io.Reader)
java.io.InputStreamReader.close()
org.apache.commons.io.CopyUtils.copy(java.lang.String, java.io.OutputStream)
org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File, java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(java.io.OutputStream)
java.io.FileOutputStream.close()
org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)
657 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testStringToWriter()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.IOUtils.toString(java.io.Reader)
java.io.InputStreamReader.close()
org.apache.commons.io.CopyUtils.copy(java.lang.String, java.io.Writer)
java.io.OutputStreamWriter.flush()
org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File, java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(java.io.Writer)
java.io.OutputStreamWriter.close()
org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)
658 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray()
Métodos invocados: 
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.io.FileInputStream.available()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([B, java.io.File)
java.io.FileInputStream.close()
659 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_Size()
Métodos invocados: 
java.io.File.length()
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream, J)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.io.FileInputStream.available()
junit.framework.Assert.assertTrue(java.lang.String, Z)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([B, java.io.File)
java.io.FileInputStream.close()
660 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_NegativeSize()
Métodos invocados: 
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream, I)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.FileInputStream.close()
661 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_ZeroSize()
Métodos invocados: 
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream, I)
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.FileInputStream.close()
662 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_IllegalSize()
Métodos invocados: 
java.io.File.length()
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream, J)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.FileInputStream.close()
663 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_LongSize()
Métodos invocados: 
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream, J)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.FileInputStream.close()
664 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.toBufferedInputStream(java.io.InputStream)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.io.FileInputStream.available()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([B, java.io.File)
java.io.FileInputStream.close()
665 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testStringToByteArray()
Métodos invocados: 
org.apache.commons.io.IOUtils.toString(java.io.Reader)
org.apache.commons.io.IOUtils.toByteArray(java.lang.String)
java.lang.String.getBytes()
org.apache.commons.io.IOUtilsTestCase.assertEqualContent([B, [B)
java.io.InputStreamReader.close()
666 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testByteArrayToWriter()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
java.io.FileInputStream.close()
org.apache.commons.io.CopyUtils.copy([B, java.io.Writer)
java.io.OutputStreamWriter.flush()
org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File, java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(java.io.Writer)
java.io.OutputStreamWriter.close()
org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)
667 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testByteArrayToString()
Métodos invocados: 
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
org.apache.commons.io.IOUtils.toString([B)
java.lang.String.getBytes()
org.apache.commons.io.IOUtilsTestCase.assertEqualContent([B, [B)
java.io.FileInputStream.close()
668 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testCharSequenceToInputStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
java.lang.CharSequence.toString()
java.lang.String.getBytes()
org.apache.commons.io.IOUtilsTestCase.assertEqualContent([B, [B)
org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence, java.lang.String)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
java.lang.CharSequence.toString()
java.lang.String.getBytes()
org.apache.commons.io.IOUtilsTestCase.assertEqualContent([B, [B)
org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence, java.lang.String)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
java.lang.CharSequence.toString()
java.lang.String.getBytes(java.lang.String)
org.apache.commons.io.IOUtilsTestCase.assertEqualContent([B, [B)
669 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testStringToInputStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.toInputStream(java.lang.String)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
java.lang.String.getBytes()
org.apache.commons.io.IOUtilsTestCase.assertEqualContent([B, [B)
org.apache.commons.io.IOUtils.toInputStream(java.lang.String, java.lang.String)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
java.lang.String.getBytes()
org.apache.commons.io.IOUtilsTestCase.assertEqualContent([B, [B)
org.apache.commons.io.IOUtils.toInputStream(java.lang.String, java.lang.String)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
java.lang.String.getBytes(java.lang.String)
org.apache.commons.io.IOUtilsTestCase.assertEqualContent([B, [B)
670 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testByteArrayToOutputStream()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
java.io.FileInputStream.close()
org.apache.commons.io.CopyUtils.copy([B, java.io.OutputStream)
java.io.OutputStream.flush()
org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File, java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(java.io.OutputStream)
java.io.FileOutputStream.close()
org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)
671 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArray()
Métodos invocados: 
org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.io.FileInputStream.available()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([C, java.io.File)
java.io.FileInputStream.close()
672 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArrayWithEncoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.toCharArray(java.io.InputStream, java.lang.String)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.io.FileInputStream.available()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([C, java.io.File)
java.io.FileInputStream.close()
673 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testReaderToCharArray()
Métodos invocados: 
org.apache.commons.io.IOUtils.toCharArray(java.io.Reader)
junit.framework.Assert.assertNotNull(java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([C, java.io.File)
java.io.InputStreamReader.close()
674 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File, [Ljava.lang.String;)
org.apache.commons.io.IOUtils.readLines(java.io.InputStream)
java.util.Arrays.asList([Ljava.lang.String;)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)
675 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File, [Ljava.lang.String;)
org.apache.commons.io.IOUtils.readLines(java.io.InputStream, java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)
676 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File, [Ljava.lang.String;)
org.apache.commons.io.IOUtils.readLines(java.io.Reader)
java.util.Arrays.asList([Ljava.lang.String;)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.io.Reader.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)
org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)
677 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testSkipStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.skipFully(java.io.InputStream, J)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.IOUtils.skipFully(java.io.InputStream, J)
org.apache.commons.io.IOUtils.skipFully(java.io.InputStream, J)
org.apache.commons.io.IOUtils.skipFully(java.io.InputStream, J)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
678 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testSkipReader()
Métodos invocados: 
org.apache.commons.io.IOUtils.skipFully(java.io.Reader, J)
org.apache.commons.io.IOUtils.skipFully(java.io.Reader, J)
org.apache.commons.io.IOUtils.skipFully(java.io.Reader, J)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.IOUtils.skipFully(java.io.Reader, J)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)
679 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testSkipFileReader()
Métodos invocados: 
org.apache.commons.io.IOUtils.skip(java.io.Reader, J)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.IOUtils.skip(java.io.Reader, J)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.IOUtils.skip(java.io.Reader, J)
junit.framework.Assert.assertEquals(J, J)
java.io.InputStreamReader.close()
680 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testSkipFileInput()
Métodos invocados: 
org.apache.commons.io.IOUtils.skip(java.io.InputStream, J)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.IOUtils.skip(java.io.InputStream, J)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.IOUtils.skip(java.io.InputStream, J)
junit.framework.Assert.assertEquals(J, J)
java.io.InputStream.close()
681 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testURIToString(java.lang.String)
Métodos invocados: 
java.io.File.toURI()
org.apache.commons.io.IOUtils.toString(java.net.URI, java.lang.String)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.lang.String.length()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
682 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testURIToStringNoEncoding()
Métodos invocados: 
java.io.File.toURI()
org.apache.commons.io.IOUtils.toString(java.net.URI)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.lang.String.length()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
683 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testURIToStringNullEncoding()
Métodos invocados: 
org.apache.commons.io.IOUtilsTestCase.testURIToString(java.lang.String)
684 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testURIToStringUsAciiEncoding()
Métodos invocados: 
org.apache.commons.io.IOUtilsTestCase.testURIToString(java.lang.String)
685 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testURLToString(java.lang.String)
Métodos invocados: 
java.io.File.toURI()
java.net.URI.toURL()
org.apache.commons.io.IOUtils.toString(java.net.URL, java.lang.String)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.lang.String.length()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
686 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testURLToStringNoEncoding()
Métodos invocados: 
java.io.File.toURI()
java.net.URI.toURL()
org.apache.commons.io.IOUtils.toString(java.net.URL)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.lang.String.length()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
687 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testURLToStringNullEncoding()
Métodos invocados: 
org.apache.commons.io.IOUtilsTestCase.testURLToString(java.lang.String)
688 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testURLToStringUsAciiEncoding()
Métodos invocados: 
org.apache.commons.io.IOUtilsTestCase.testURLToString(java.lang.String)
689 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testcontentEqualsIgnoreEOL()
Métodos invocados: 
java.lang.String.toCharArray()
java.lang.String.toCharArray()
org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader, java.io.Reader)
junit.framework.Assert.assertTrue(Z)
java.lang.String.toCharArray()
java.lang.String.toCharArray()
org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader, java.io.Reader)
junit.framework.Assert.assertTrue(Z)
java.lang.String.toCharArray()
java.lang.String.toCharArray()
org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader, java.io.Reader)
junit.framework.Assert.assertFalse(Z)
java.lang.String.toCharArray()
java.lang.String.toCharArray()
org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader, java.io.Reader)
junit.framework.Assert.assertTrue(Z)
java.lang.String.toCharArray()
java.lang.String.toCharArray()
org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(java.io.Reader, java.io.Reader)
junit.framework.Assert.assertTrue(Z)
690 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testReadStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.readFully(java.io.InputStream, [B, I, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.IOUtils.readFully(java.io.InputStream, [B, I, I)
org.apache.commons.io.IOUtils.readFully(java.io.InputStream, [B, I, I)
org.apache.commons.io.IOUtils.readFully(java.io.InputStream, [B, I, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
691 - Declaração do método: org.apache.commons.io.IOUtilsTestCase.testReadReader()
Métodos invocados: 
org.apache.commons.io.IOUtils.readFully(java.io.Reader, [C, I, I)
org.apache.commons.io.IOUtils.readFully(java.io.Reader, [C, I, I)
org.apache.commons.io.IOUtils.readFully(java.io.Reader, [C, I, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.IOUtils.readFully(java.io.Reader, [C, I, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)
692 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.DirectoryWalkerTestCaseJava4(java.lang.String)
692 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.setUp()
692 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.tearDown()
692 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilter()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
693 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitA()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
694 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitB()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
695 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitC()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
696 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitD()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
697 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
698 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile2()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
699 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile3()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)
org.apache.commons.io.DirectoryWalkerTestCaseJava4.directoriesOnly(java.util.Collection)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
700 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile4()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)
org.apache.commons.io.DirectoryWalkerTestCaseJava4.filesOnly(java.util.Collection)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
701 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.testLimitToCurrent()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
702 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMissingStartDirectory()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)
junit.framework.Assert.fail(java.lang.String)
703 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.testHandleStartDirectoryFalse()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
704 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
Métodos invocados: 
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
705 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.directoriesOnly(java.util.Collection)
Métodos invocados: 
java.util.Collection.size()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.io.File.isDirectory()
java.util.List.add(java.lang.Object)
706 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.filesOnly(java.util.Collection)
Métodos invocados: 
java.util.Collection.size()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.io.File.isFile()
java.util.List.add(java.lang.Object)
707 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.createNameFilter([Ljava.io.File;)
Métodos invocados: 
java.io.File.getName()
708 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.testCancel()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker.find(java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getFile()
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getDepth()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker.find(java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getFile()
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getDepth()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker.find(java.io.File)
java.util.List.size()
java.util.List.get(I)
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
709 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker.find(java.io.File)
junit.framework.Assert.fail(java.lang.String)
java.util.List.size()
java.util.List.get(I)
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getDepth()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker.find(java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getFile()
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getDepth()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker.find(java.io.File)
java.util.List.size()
java.util.List.get(I)
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
710 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.TestFileFinder(java.io.FileFilter, I)
710 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.TestFileFinder(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter, I)
710 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.find(java.io.File)
Métodos invocados: 
org.apache.commons.io.DirectoryWalker.walk(java.io.File, java.util.Collection)
java.lang.Throwable.toString()
junit.framework.Assert.fail(java.lang.String)
711 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.handleDirectoryEnd(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.lang.Object)
712 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFileFinder.handleFile(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.lang.Object)
713 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFalseFileFinder.TestFalseFileFinder(java.io.FileFilter, I)
713 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestFalseFileFinder.handleDirectory(java.io.File, I, java.util.Collection)
713 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker.TestCancelWalker(java.lang.String, Z)
713 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker.find(java.io.File)
Métodos invocados: 
org.apache.commons.io.DirectoryWalker.walk(java.io.File, java.util.Collection)
714 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker.handleDirectoryEnd(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.lang.Object)
java.io.File.getName()
java.lang.String.equals(java.lang.Object)
715 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker.handleFile(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.lang.Object)
java.io.File.getName()
java.lang.String.equals(java.lang.Object)
716 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestCancelWalker.handleCancelled(java.io.File, java.util.Collection, org.apache.commons.io.DirectoryWalker$CancelException)
716 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker.TestMultiThreadCancelWalker(java.lang.String, Z)
716 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker.find(java.io.File)
Métodos invocados: 
org.apache.commons.io.DirectoryWalker.walk(java.io.File, java.util.Collection)
717 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker.handleDirectoryEnd(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.lang.Object)
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.getName()
java.lang.String.equals(java.lang.Object)
718 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker.handleFile(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.lang.Object)
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.getName()
java.lang.String.equals(java.lang.Object)
719 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker.handleIsCancelled(java.io.File, I, java.util.Collection)
719 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCaseJava4$TestMultiThreadCancelWalker.handleCancelled(java.io.File, java.util.Collection, org.apache.commons.io.DirectoryWalker$CancelException)
719 - Declaração do método: org.apache.commons.io.ThreadMonitorTestCase.ThreadMonitorTestCase(java.lang.String)
719 - Declaração do método: org.apache.commons.io.ThreadMonitorTestCase.testTimeout()
Métodos invocados: 
org.apache.commons.io.ThreadMonitor.start(J)
java.lang.Thread.sleep(J)
org.apache.commons.io.ThreadMonitor.stop(java.lang.Thread)
junit.framework.Assert.fail(java.lang.String)
720 - Declaração do método: org.apache.commons.io.ThreadMonitorTestCase.testCompletedWithoutTimeout()
Métodos invocados: 
org.apache.commons.io.ThreadMonitor.start(J)
java.lang.Thread.sleep(J)
org.apache.commons.io.ThreadMonitor.stop(java.lang.Thread)
junit.framework.Assert.fail(java.lang.String)
721 - Declaração do método: org.apache.commons.io.ThreadMonitorTestCase.testNoTimeout()
Métodos invocados: 
org.apache.commons.io.ThreadMonitor.start(J)
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
java.lang.Thread.sleep(J)
org.apache.commons.io.ThreadMonitor.stop(java.lang.Thread)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.ThreadMonitor.start(J)
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
java.lang.Thread.sleep(J)
org.apache.commons.io.ThreadMonitor.stop(java.lang.Thread)
junit.framework.Assert.fail(java.lang.String)
722 - Declaração do método: org.apache.commons.io.DemuxTestCase.DemuxTestCase(java.lang.String)
722 - Declaração do método: org.apache.commons.io.DemuxTestCase.getOutput(java.lang.String)
Métodos invocados: 
java.util.HashMap.get(java.lang.Object)
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
org.apache.commons.io.output.ByteArrayOutputStream.toString()
723 - Declaração do método: org.apache.commons.io.DemuxTestCase.getInput(java.lang.String)
Métodos invocados: 
java.util.HashMap.get(java.lang.Object)
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
org.apache.commons.io.DemuxTestCase$ReaderThread.getData()
724 - Declaração do método: org.apache.commons.io.DemuxTestCase.doStart()
Métodos invocados: 
java.util.HashMap.keySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.HashMap.get(java.lang.Object)
java.lang.Thread.start()
725 - Declaração do método: org.apache.commons.io.DemuxTestCase.doJoin()
Métodos invocados: 
java.util.HashMap.keySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.HashMap.get(java.lang.Object)
java.lang.Thread.join()
726 - Declaração do método: org.apache.commons.io.DemuxTestCase.startWriter(java.lang.String, java.lang.String, org.apache.commons.io.output.DemuxOutputStream)
Métodos invocados: 
java.util.HashMap.put(java.lang.String, org.apache.commons.io.output.ByteArrayOutputStream)
java.util.HashMap.put(java.lang.String, java.lang.Thread)
727 - Declaração do método: org.apache.commons.io.DemuxTestCase.startReader(java.lang.String, java.lang.String, org.apache.commons.io.input.DemuxInputStream)
Métodos invocados: 
java.lang.String.getBytes()
java.util.HashMap.put(java.lang.String, java.lang.Thread)
728 - Declaração do método: org.apache.commons.io.DemuxTestCase.testOutputStream()
Métodos invocados: 
org.apache.commons.io.DemuxTestCase.startWriter(java.lang.String, java.lang.String, org.apache.commons.io.output.DemuxOutputStream)
org.apache.commons.io.DemuxTestCase.startWriter(java.lang.String, java.lang.String, org.apache.commons.io.output.DemuxOutputStream)
org.apache.commons.io.DemuxTestCase.startWriter(java.lang.String, java.lang.String, org.apache.commons.io.output.DemuxOutputStream)
org.apache.commons.io.DemuxTestCase.startWriter(java.lang.String, java.lang.String, org.apache.commons.io.output.DemuxOutputStream)
org.apache.commons.io.DemuxTestCase.doStart()
org.apache.commons.io.DemuxTestCase.doJoin()
org.apache.commons.io.DemuxTestCase.getOutput(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DemuxTestCase.getOutput(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DemuxTestCase.getOutput(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DemuxTestCase.getOutput(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
729 - Declaração do método: org.apache.commons.io.DemuxTestCase.testInputStream()
Métodos invocados: 
org.apache.commons.io.DemuxTestCase.startReader(java.lang.String, java.lang.String, org.apache.commons.io.input.DemuxInputStream)
org.apache.commons.io.DemuxTestCase.startReader(java.lang.String, java.lang.String, org.apache.commons.io.input.DemuxInputStream)
org.apache.commons.io.DemuxTestCase.startReader(java.lang.String, java.lang.String, org.apache.commons.io.input.DemuxInputStream)
org.apache.commons.io.DemuxTestCase.startReader(java.lang.String, java.lang.String, org.apache.commons.io.input.DemuxInputStream)
org.apache.commons.io.DemuxTestCase.doStart()
org.apache.commons.io.DemuxTestCase.doJoin()
org.apache.commons.io.DemuxTestCase.getInput(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DemuxTestCase.getInput(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DemuxTestCase.getInput(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DemuxTestCase.getInput(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
730 - Declaração do método: org.apache.commons.io.DemuxTestCase$ReaderThread.ReaderThread(java.lang.String, java.io.InputStream, org.apache.commons.io.input.DemuxInputStream)
730 - Declaração do método: org.apache.commons.io.DemuxTestCase$ReaderThread.getData()
Métodos invocados: 
java.lang.StringBuffer.toString()
731 - Declaração do método: org.apache.commons.io.DemuxTestCase$ReaderThread.run()
Métodos invocados: 
org.apache.commons.io.input.DemuxInputStream.bindStream(java.io.InputStream)
org.apache.commons.io.input.DemuxInputStream.read()
java.lang.StringBuffer.append(C)
java.util.Random.nextInt()
java.lang.Math.abs(I)
java.lang.Thread.sleep(J)
org.apache.commons.io.input.DemuxInputStream.read()
java.lang.Throwable.printStackTrace()
732 - Declaração do método: org.apache.commons.io.DemuxTestCase$WriterThread.WriterThread(java.lang.String, java.lang.String, java.io.OutputStream, org.apache.commons.io.output.DemuxOutputStream)
Métodos invocados: 
java.lang.String.getBytes()
733 - Declaração do método: org.apache.commons.io.DemuxTestCase$WriterThread.run()
Métodos invocados: 
org.apache.commons.io.output.DemuxOutputStream.bindStream(java.io.OutputStream)
org.apache.commons.io.output.DemuxOutputStream.write(I)
java.util.Random.nextInt()
java.lang.Math.abs(I)
java.lang.Thread.sleep(J)
java.lang.Throwable.printStackTrace()
734 - Declaração do método: org.apache.commons.io.SelectorAdapter.isOpen()
734 - Declaração do método: org.apache.commons.io.SelectorAdapter.provider()
734 - Declaração do método: org.apache.commons.io.SelectorAdapter.keys()
734 - Declaração do método: org.apache.commons.io.SelectorAdapter.selectedKeys()
734 - Declaração do método: org.apache.commons.io.SelectorAdapter.selectNow()
734 - Declaração do método: org.apache.commons.io.SelectorAdapter.select(J)
734 - Declaração do método: org.apache.commons.io.SelectorAdapter.select()
734 - Declaração do método: org.apache.commons.io.SelectorAdapter.wakeup()
734 - Declaração do método: org.apache.commons.io.SelectorAdapter.close()
734 - Declaração do método: org.apache.commons.io.FileUtilsListFilesTestCase.FileUtilsListFilesTestCase(java.lang.String)
734 - Declaração do método: org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
735 - Declaração do método: org.apache.commons.io.FileUtilsListFilesTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
java.io.File.exists()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.touch(java.io.File)
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.touch(java.io.File)
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.touch(java.io.File)
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.getParentFile()
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.touch(java.io.File)
org.apache.commons.io.FileUtils.touch(java.io.File)
736 - Declaração do método: org.apache.commons.io.FileUtilsListFilesTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
737 - Declaração do método: org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Collection)
Métodos invocados: 
java.util.Collection.size()
java.io.File.getName()
java.util.Collection.add(java.lang.String)
738 - Declaração do método: org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Iterator)
Métodos invocados: 
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.io.File.getName()
java.util.Collection.add(java.lang.String)
739 - Declaração do método: org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension()
Métodos invocados: 
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.iterateFiles(java.io.File, [Ljava.lang.String;, Z)
org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Iterator)
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.iterateFiles(java.io.File, [Ljava.lang.String;, Z)
org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Iterator)
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.iterateFiles(java.io.File, [Ljava.lang.String;, Z)
org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Iterator)
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
740 - Declaração do método: org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension()
Métodos invocados: 
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.listFiles(java.io.File, [Ljava.lang.String;, Z)
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Collection)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.listFiles(java.io.File, [Ljava.lang.String;, Z)
org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Collection)
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.listFiles(java.io.File, [Ljava.lang.String;, Z)
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Collection)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
741 - Declaração do método: org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.listFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Collection)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.listFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Collection)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()
org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.listFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Collection)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()
org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.listFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(java.util.Collection)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory()
org.apache.commons.io.FileUtils.listFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
junit.framework.Assert.fail(java.lang.String)
742 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.newInstance()
742 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.FileCleaningTrackerTestCase(java.lang.String)
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
743 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.FileCleaningTrackerTestCase.newInstance()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
744 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.util.Collection.clear()
java.util.List.clear()
745 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile()
Métodos invocados: 
java.io.File.getPath()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
java.io.RandomAccessFile.close()
org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()
org.apache.commons.io.FileCleaningTrackerTestCase.pauseForDeleteToComplete(java.io.File)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileCleaningTrackerTestCase.showFailures()
java.io.File.exists()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
746 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.getParentFile()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
747 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.getParentFile()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
748 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()
java.io.File.getParentFile()
org.apache.commons.io.FileCleaningTrackerTestCase.pauseForDeleteToComplete(java.io.File)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileCleaningTrackerTestCase.showFailures()
java.io.File.getPath()
java.io.File.exists()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
org.apache.commons.io.FileCleaningTrackerTestCase.showFailures()
java.io.File.getParentFile()
java.io.File.exists()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
749 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull()
Métodos invocados: 
org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object)
junit.framework.Assert.fail()
org.apache.commons.io.FileCleaningTracker.track(java.io.File, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
junit.framework.Assert.fail()
org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object)
junit.framework.Assert.fail()
org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object, org.apache.commons.io.FileDeleteStrategy)
junit.framework.Assert.fail()
750 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst()
Métodos invocados: 
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileCleaningTracker.exitWhenFinished()
junit.framework.Assert.assertEquals(Z, Z)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(Z, Z)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
751 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter()
Métodos invocados: 
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileCleaningTracker.exitWhenFinished()
junit.framework.Assert.assertEquals(Z, Z)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.io.File.getPath()
org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object)
junit.framework.Assert.fail()
junit.framework.Assert.assertEquals(Z, Z)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
752 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1()
Métodos invocados: 
java.io.File.getPath()
java.io.File.exists()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.lang.Thread.isAlive()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
org.apache.commons.io.FileCleaningTracker.exitWhenFinished()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.lang.Thread.isAlive()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.io.RandomAccessFile.close()
org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()
org.apache.commons.io.FileCleaningTrackerTestCase.pauseForDeleteToComplete(java.io.File)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.FileCleaningTrackerTestCase.showFailures()
java.io.File.exists()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.lang.Thread.isAlive()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
753 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2()
Métodos invocados: 
java.io.File.getPath()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileCleaningTracker.track(java.lang.String, java.lang.Object)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(Z, Z)
java.lang.Thread.isAlive()
junit.framework.Assert.assertEquals(Z, Z)
java.io.RandomAccessFile.close()
org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()
org.apache.commons.io.FileCleaningTrackerTestCase.pauseForDeleteToComplete(java.io.File)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileCleaningTrackerTestCase.showFailures()
java.io.File.exists()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
junit.framework.Assert.assertEquals(Z, Z)
java.lang.Thread.isAlive()
junit.framework.Assert.assertEquals(Z, Z)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileCleaningTracker.exitWhenFinished()
java.lang.Thread.isAlive()
java.lang.Thread.sleep(J)
junit.framework.Assert.assertEquals(Z, Z)
java.lang.Thread.isAlive()
junit.framework.Assert.assertEquals(Z, Z)
754 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.pauseForDeleteToComplete(java.io.File)
Métodos invocados: 
java.io.File.exists()
java.lang.Thread.sleep(J)
java.io.File.getPath()
755 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.showFailures()
Métodos invocados: 
java.util.List.size()
java.util.List.get(I)
java.util.List.size()
756 - Declaração do método: org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount()
Métodos invocados: 
java.lang.System.gc()
java.lang.Thread.sleep(J)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
org.apache.commons.io.FileCleaningTracker.getTrackCount()
java.util.List.add(java.lang.String)
java.lang.System.gc()
java.lang.Thread.sleep(J)
org.apache.commons.io.FileCleaningTracker.getTrackCount()
757 - Declaração do método: org.apache.commons.io.FileCleanerTestCase.newInstance()
Métodos invocados: 
org.apache.commons.io.FileCleaner.getInstance()
758 - Declaração do método: org.apache.commons.io.FileCleanerTestCase.FileCleanerTestCase(java.lang.String)
758 - Declaração do método: org.apache.commons.io.FileUtilsFileNewerTestCase.FileUtilsFileNewerTestCase(java.lang.String)
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
759 - Declaração do método: org.apache.commons.io.FileUtilsFileNewerTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
760 - Declaração do método: org.apache.commons.io.FileUtilsFileNewerTestCase.tearDown()
Métodos invocados: 
java.io.File.delete()
java.io.File.delete()
761 - Declaração do método: org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer()
Métodos invocados: 
java.io.File.exists()
java.io.File.lastModified()
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(java.lang.String, java.io.File, J, Z)
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(java.lang.String, java.io.File, J, Z)
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(java.lang.String, java.io.File, J, Z)
762 - Declaração do método: org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
java.io.File.lastModified()
org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(java.lang.String, java.io.File, J, Z)
763 - Declaração do método: org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(java.lang.String, java.io.File, J, Z)
Métodos invocados: 
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, J)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.util.Date)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.io.File.setLastModified(J)
java.io.File.lastModified()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
764 - Declaração do método: org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFile()
Métodos invocados: 
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, J)
junit.framework.Assert.fail(java.lang.String)
765 - Declaração do método: org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoDate()
Métodos invocados: 
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.util.Date)
junit.framework.Assert.fail(java.lang.String)
766 - Declaração do método: org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFileReference()
Métodos invocados: 
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
767 - Declaração do método: org.apache.commons.io.EndianUtilsTest.EndianUtilsTest(java.lang.String)
767 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testCtor()
767 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testEOFException()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedDouble(java.io.InputStream)
junit.framework.Assert.fail(java.lang.String)
768 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testSwapShort()
Métodos invocados: 
org.apache.commons.io.EndianUtils.swapShort(S)
junit.framework.Assert.assertEquals(S, S)
org.apache.commons.io.EndianUtils.swapShort(S)
junit.framework.Assert.assertEquals(S, S)
org.apache.commons.io.EndianUtils.swapShort(S)
junit.framework.Assert.assertEquals(S, S)
org.apache.commons.io.EndianUtils.swapShort(S)
junit.framework.Assert.assertEquals(S, S)
769 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testSwapInteger()
Métodos invocados: 
org.apache.commons.io.EndianUtils.swapInteger(I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.swapInteger(I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.swapInteger(I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.swapInteger(I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.swapInteger(I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.swapInteger(I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.swapInteger(I)
junit.framework.Assert.assertEquals(I, I)
770 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testSwapLong()
Métodos invocados: 
org.apache.commons.io.EndianUtils.swapLong(J)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.EndianUtils.swapLong(J)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.EndianUtils.swapLong(J)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.EndianUtils.swapLong(J)
junit.framework.Assert.assertEquals(J, J)
771 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testSwapFloat()
Métodos invocados: 
org.apache.commons.io.EndianUtils.swapFloat(F)
junit.framework.Assert.assertEquals(D, D, D)
java.lang.Float.intBitsToFloat(I)
java.lang.Float.intBitsToFloat(I)
org.apache.commons.io.EndianUtils.swapFloat(F)
junit.framework.Assert.assertEquals(D, D, D)
772 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testSwapDouble()
Métodos invocados: 
org.apache.commons.io.EndianUtils.swapDouble(D)
junit.framework.Assert.assertEquals(D, D, D)
java.lang.Double.longBitsToDouble(J)
java.lang.Double.longBitsToDouble(J)
org.apache.commons.io.EndianUtils.swapDouble(D)
junit.framework.Assert.assertEquals(D, D, D)
773 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testSymmetry()
Métodos invocados: 
org.apache.commons.io.EndianUtils.swapShort(S)
org.apache.commons.io.EndianUtils.swapShort(S)
junit.framework.Assert.assertEquals(S, S)
org.apache.commons.io.EndianUtils.swapInteger(I)
org.apache.commons.io.EndianUtils.swapInteger(I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.swapLong(J)
org.apache.commons.io.EndianUtils.swapLong(J)
junit.framework.Assert.assertEquals(J, J)
java.lang.Float.intBitsToFloat(I)
org.apache.commons.io.EndianUtils.swapFloat(F)
org.apache.commons.io.EndianUtils.swapFloat(F)
junit.framework.Assert.assertEquals(D, D, D)
java.lang.Double.longBitsToDouble(J)
org.apache.commons.io.EndianUtils.swapDouble(D)
org.apache.commons.io.EndianUtils.swapDouble(D)
junit.framework.Assert.assertEquals(D, D, D)
774 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testReadSwappedShort()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedShort([B, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.readSwappedShort(java.io.InputStream)
junit.framework.Assert.assertEquals(I, I)
775 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort()
Métodos invocados: 
org.apache.commons.io.EndianUtils.writeSwappedShort([B, I, S)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.writeSwappedShort(java.io.OutputStream, S)
java.io.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
776 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedUnsignedShort([B, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(java.io.InputStream)
junit.framework.Assert.assertEquals(I, I)
777 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testReadSwappedInteger()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedInteger([B, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.readSwappedInteger(java.io.InputStream)
junit.framework.Assert.assertEquals(I, I)
778 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger()
Métodos invocados: 
org.apache.commons.io.EndianUtils.writeSwappedInteger([B, I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.writeSwappedInteger(java.io.OutputStream, I)
java.io.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
779 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger([B, I)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(java.io.InputStream)
junit.framework.Assert.assertEquals(J, J)
780 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testReadSwappedLong()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedLong([B, I)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.EndianUtils.readSwappedLong(java.io.InputStream)
junit.framework.Assert.assertEquals(J, J)
781 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong()
Métodos invocados: 
org.apache.commons.io.EndianUtils.writeSwappedLong([B, I, J)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.writeSwappedLong(java.io.OutputStream, J)
java.io.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
782 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat()
Métodos invocados: 
java.lang.Float.intBitsToFloat(I)
org.apache.commons.io.EndianUtils.readSwappedFloat([B, I)
junit.framework.Assert.assertEquals(D, D, D)
org.apache.commons.io.EndianUtils.readSwappedFloat(java.io.InputStream)
junit.framework.Assert.assertEquals(D, D, D)
783 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat()
Métodos invocados: 
java.lang.Float.intBitsToFloat(I)
org.apache.commons.io.EndianUtils.writeSwappedFloat([B, I, F)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.writeSwappedFloat(java.io.OutputStream, F)
java.io.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
784 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testReadSwappedDouble()
Métodos invocados: 
java.lang.Double.longBitsToDouble(J)
org.apache.commons.io.EndianUtils.readSwappedDouble([B, I)
junit.framework.Assert.assertEquals(D, D, D)
org.apache.commons.io.EndianUtils.readSwappedDouble(java.io.InputStream)
junit.framework.Assert.assertEquals(D, D, D)
785 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble()
Métodos invocados: 
java.lang.Double.longBitsToDouble(J)
org.apache.commons.io.EndianUtils.writeSwappedDouble([B, I, D)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.EndianUtils.writeSwappedDouble(java.io.OutputStream, D)
java.io.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
786 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong()
Métodos invocados: 
java.lang.Double.doubleToLongBits(D)
org.apache.commons.io.EndianUtils.writeSwappedLong([B, I, J)
org.apache.commons.io.EndianUtils.readSwappedLong([B, I)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.EndianUtils.writeSwappedDouble([B, I, D)
org.apache.commons.io.EndianUtils.readSwappedDouble([B, I)
junit.framework.Assert.assertEquals(D, D, D)
787 - Declaração do método: org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun()
Métodos invocados: 
org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger([B, I)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(java.io.InputStream)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
788 - Declaração do método: org.apache.commons.io.TaggedIOExceptionTest.testTaggedIOException()
Métodos invocados: 
java.util.UUID.randomUUID()
org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable, java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.UUID.randomUUID()
org.apache.commons.io.TaggedIOException.isTaggedWith(java.lang.Throwable, java.lang.Object)
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.TaggedIOException.getCause()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Throwable.getMessage()
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
789 - Declaração do método: org.apache.commons.io.FileUtilsWaitForTestCase.FileUtilsWaitForTestCase(java.lang.String)
789 - Declaração do método: org.apache.commons.io.FileUtilsWaitForTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
790 - Declaração do método: org.apache.commons.io.FileUtilsWaitForTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
791 - Declaração do método: org.apache.commons.io.FileUtilsWaitForTestCase.testWaitFor()
Métodos invocados: 
org.apache.commons.io.FileUtils.waitFor(java.io.File, I)
org.apache.commons.io.FileUtils.waitFor(java.io.File, I)
792 - Declaração do método: org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionStringThrowable()
Métodos invocados: 
org.apache.commons.io.IOExceptionWithCauseTestCase.validate(java.lang.Throwable, java.lang.Throwable, java.lang.String)
793 - Declaração do método: org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionThrowable()
Métodos invocados: 
org.apache.commons.io.IOExceptionWithCauseTestCase.validate(java.lang.Throwable, java.lang.Throwable, java.lang.String)
794 - Declaração do método: org.apache.commons.io.IOExceptionWithCauseTestCase.validate(java.lang.Throwable, java.lang.Throwable, java.lang.String)
Métodos invocados: 
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.lang.Throwable.getCause()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Throwable.getCause()
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
795 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.DirectoryWalkerTestCase(java.lang.String)
795 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.setUp()
795 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.tearDown()
795 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testFilter()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
796 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
797 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
798 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
799 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
800 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
801 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile2()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
802 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
org.apache.commons.io.DirectoryWalkerTestCase.directoriesOnly(java.util.Collection)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
803 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
org.apache.commons.io.DirectoryWalkerTestCase.filesOnly(java.util.Collection)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
804 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testLimitToCurrent()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
805 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testMissingStartDirectory()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
junit.framework.Assert.fail(java.lang.String)
806 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testHandleStartDirectoryFalse()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
807 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(java.lang.String, [Ljava.io.File;, java.util.Collection)
Métodos invocados: 
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
808 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.checkContainsString(java.lang.String, [Ljava.io.File;, java.util.Collection)
Métodos invocados: 
java.io.File.toString()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
809 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.directoriesOnly(java.util.Collection)
Métodos invocados: 
java.util.Collection.size()
java.io.File.isDirectory()
java.util.List.add(java.io.File)
810 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.filesOnly(java.util.Collection)
Métodos invocados: 
java.util.Collection.size()
java.io.File.isFile()
java.util.List.add(java.io.File)
811 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.createNameFilter([Ljava.io.File;)
Métodos invocados: 
java.io.File.getName()
812 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testCancel()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.find(java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getFile()
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getDepth()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.find(java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getFile()
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getDepth()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.find(java.io.File)
java.util.List.size()
java.util.List.get(I)
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
813 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.find(java.io.File)
junit.framework.Assert.fail(java.lang.String)
java.util.List.size()
java.util.List.get(I)
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getDepth()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.find(java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getFile()
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.DirectoryWalker$CancelException.getDepth()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.find(java.io.File)
java.util.List.size()
java.util.List.get(I)
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
814 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase.testFilterString()
Métodos invocados: 
org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString.find(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsString(java.lang.String, [Ljava.io.File;, java.util.Collection)
org.apache.commons.io.DirectoryWalkerTestCase.checkContainsString(java.lang.String, [Ljava.io.File;, java.util.Collection)
815 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.TestFileFinder(java.io.FileFilter, I)
815 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.TestFileFinder(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter, I)
815 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.find(java.io.File)
Métodos invocados: 
org.apache.commons.io.DirectoryWalker.walk(java.io.File, java.util.Collection)
java.lang.Throwable.toString()
junit.framework.Assert.fail(java.lang.String)
816 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.handleDirectoryEnd(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.io.File)
817 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinder.handleFile(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.io.File)
818 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestFalseFileFinder.TestFalseFileFinder(java.io.FileFilter, I)
818 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestFalseFileFinder.handleDirectory(java.io.File, I, java.util.Collection)
818 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.TestCancelWalker(java.lang.String, Z)
818 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.find(java.io.File)
Métodos invocados: 
org.apache.commons.io.DirectoryWalker.walk(java.io.File, java.util.Collection)
819 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.handleDirectoryEnd(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.io.File)
java.io.File.getName()
java.lang.String.equals(java.lang.Object)
820 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.handleFile(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.io.File)
java.io.File.getName()
java.lang.String.equals(java.lang.Object)
821 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestCancelWalker.handleCancelled(java.io.File, java.util.Collection, org.apache.commons.io.DirectoryWalker$CancelException)
821 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.TestMultiThreadCancelWalker(java.lang.String, Z)
821 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.find(java.io.File)
Métodos invocados: 
org.apache.commons.io.DirectoryWalker.walk(java.io.File, java.util.Collection)
822 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.handleDirectoryEnd(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.getName()
java.lang.String.equals(java.lang.Object)
823 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.handleFile(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.getName()
java.lang.String.equals(java.lang.Object)
824 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.handleIsCancelled(java.io.File, I, java.util.Collection)
824 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestMultiThreadCancelWalker.handleCancelled(java.io.File, java.util.Collection, org.apache.commons.io.DirectoryWalker$CancelException)
824 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString.TestFileFinderString(java.io.FileFilter, I)
824 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString.find(java.io.File)
Métodos invocados: 
org.apache.commons.io.DirectoryWalker.walk(java.io.File, java.util.Collection)
java.lang.Throwable.toString()
junit.framework.Assert.fail(java.lang.String)
825 - Declaração do método: org.apache.commons.io.DirectoryWalkerTestCase$TestFileFinderString.handleFile(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.io.File.toString()
java.util.Collection.add(java.lang.String)
826 - Declaração do método: org.apache.commons.io.FileDeleteStrategyTestCase.FileDeleteStrategyTestCase(java.lang.String)
826 - Declaração do método: org.apache.commons.io.FileDeleteStrategyTestCase.setUp()
826 - Declaração do método: org.apache.commons.io.FileDeleteStrategyTestCase.tearDown()
826 - Declaração do método: org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)
junit.framework.Assert.fail()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
827 - Declaração do método: org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
828 - Declaração do método: org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
829 - Declaração do método: org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNull()
Métodos invocados: 
org.apache.commons.io.FileDeleteStrategy.delete(java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.FileDeleteStrategy.deleteQuietly(java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
830 - Declaração do método: org.apache.commons.io.FileDeleteStrategyTestCase.testToString()
Métodos invocados: 
org.apache.commons.io.FileDeleteStrategy.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileDeleteStrategy.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
831 - Declaração do método: org.apache.commons.io.IOCaseTestCase.IOCaseTestCase(java.lang.String)
831 - Declaração do método: org.apache.commons.io.IOCaseTestCase.setUp()
831 - Declaração do método: org.apache.commons.io.IOCaseTestCase.tearDown()
831 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_forName()
Métodos invocados: 
org.apache.commons.io.IOCase.forName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.apache.commons.io.IOCase.forName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.apache.commons.io.IOCase.forName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.apache.commons.io.IOCase.forName(java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.forName(java.lang.String)
junit.framework.Assert.fail()
832 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_serialization()
Métodos invocados: 
org.apache.commons.io.IOCaseTestCase.serialize(org.apache.commons.io.IOCase)
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
org.apache.commons.io.IOCaseTestCase.serialize(org.apache.commons.io.IOCase)
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
org.apache.commons.io.IOCaseTestCase.serialize(org.apache.commons.io.IOCase)
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
833 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_getName()
Métodos invocados: 
org.apache.commons.io.IOCase.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.IOCase.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.IOCase.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
834 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_toString()
Métodos invocados: 
org.apache.commons.io.IOCase.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.IOCase.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.IOCase.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
835 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_isCaseSensitive()
Métodos invocados: 
org.apache.commons.io.IOCase.isCaseSensitive()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.isCaseSensitive()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.isCaseSensitive()
junit.framework.Assert.assertEquals(Z, Z)
836 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkCompare_functionality()
Métodos invocados: 
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
837 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkCompare_case()
Métodos invocados: 
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkCompareTo(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
838 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkEquals_functionality()
Métodos invocados: 
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
839 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkEquals_case()
Métodos invocados: 
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
840 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_functionality()
Métodos invocados: 
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
841 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_case()
Métodos invocados: 
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkStartsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
842 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_functionality()
Métodos invocados: 
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.fail()
843 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_case()
Métodos invocados: 
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkEndsWith(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
844 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_functionality()
Métodos invocados: 
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.fail()
845 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case()
Métodos invocados: 
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOCase.checkIndexOf(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(I, I)
846 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_functionality()
Métodos invocados: 
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.fail()
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.fail()
847 - Declaração do método: org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_case()
Métodos invocados: 
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOCase.checkRegionMatches(java.lang.String, I, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
848 - Declaração do método: org.apache.commons.io.IOCaseTestCase.serialize(org.apache.commons.io.IOCase)
Métodos invocados: 
java.io.ObjectOutputStream.writeObject(java.lang.Object)
java.io.ObjectOutputStream.flush()
java.io.ObjectOutputStream.close()
java.io.ByteArrayOutputStream.toByteArray()
java.io.ObjectInputStream.readObject()
849 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.FilenameUtilsTestCase(java.lang.String)
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.length()
java.io.File.length()
850 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
851 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
852 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testNormalize()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
853 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.normalize(java.lang.String, Z)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String, Z)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String, Z)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalize(java.lang.String, Z)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
854 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
855 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparatorUnixWin()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String, Z)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String, Z)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String, Z)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(java.lang.String, Z)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
856 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testConcat()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.concat(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
857 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToUnix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
858 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToWindows(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
859 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.separatorsToSystem(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
860 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.getPrefixLength(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
861 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testIndexOfLastSeparator()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
862 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testIndexOfExtension()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FilenameUtils.indexOfExtension(java.lang.String)
junit.framework.Assert.assertEquals(I, I)
863 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPrefix(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
864 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testGetPath()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
865 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
866 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPath(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
867 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
868 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
869 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testGetName()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
870 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
871 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testGetExtension()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
872 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FilenameUtils.removeExtension(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
873 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testEquals()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
874 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
875 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalized(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
876 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
877 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedError_IO_128()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
878 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String, Z, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String, Z, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String, Z, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.equals(java.lang.String, java.lang.String, Z, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
879 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testIsExtension()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
880 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(Z, Z)
881 - Declaração do método: org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FilenameUtils.isExtension(java.lang.String, java.util.Collection)
junit.framework.Assert.assertEquals(Z, Z)
882 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.FileUtilsTestCase(java.lang.String)
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.length()
java.io.File.length()
883 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
884 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
885 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testGetFile()
Métodos invocados: 
org.apache.commons.io.FileUtils.getFile([Ljava.lang.String;)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
org.apache.commons.io.FileUtils.getFile([Ljava.lang.String;)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
org.apache.commons.io.FileUtils.getFile([Ljava.lang.String;)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
org.apache.commons.io.FileUtils.getFile([Ljava.lang.String;)
junit.framework.Assert.fail(java.lang.String)
886 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testGetFile_Parent()
Métodos invocados: 
org.apache.commons.io.FileUtils.getFile(java.io.File, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
org.apache.commons.io.FileUtils.getFile(java.io.File, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
org.apache.commons.io.FileUtils.getFile(java.io.File, [Ljava.lang.String;)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
org.apache.commons.io.FileUtils.getFile(java.io.File, [Ljava.lang.String;)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.getFile(java.io.File, [Ljava.lang.String;)
junit.framework.Assert.fail(java.lang.String)
887 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testGetTempDirectoryPath()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
org.apache.commons.io.FileUtils.getTempDirectoryPath()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
888 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testGetTempDirectory()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
org.apache.commons.io.FileUtils.getTempDirectory()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
889 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testGetUserDirectoryPath()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
org.apache.commons.io.FileUtils.getUserDirectoryPath()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
890 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testGetUserDirectory()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
org.apache.commons.io.FileUtils.getUserDirectory()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
891 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.test_openInputStream_exists()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File, [Ljava.lang.String;)
org.apache.commons.io.FileUtils.openInputStream(java.io.File)
java.io.FileInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
892 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.test_openInputStream_existsButIsDirectory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.openInputStream(java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
893 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.test_openInputStream_notExists()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.openInputStream(java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream)
894 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(Z)
Métodos invocados: 
java.io.File.getParentFile()
junit.framework.Assert.assertNull(java.lang.Object)
org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File, [Ljava.lang.String;)
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
java.io.FileOutputStream.write(I)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.delete()
java.io.File.deleteOnExit()
895 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentCreateFile()
Métodos invocados: 
org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(Z)
896 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentNoFile()
Métodos invocados: 
org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(Z)
897 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File, [Ljava.lang.String;)
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
java.io.FileOutputStream.write(I)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
898 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_existsButIsDirectory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
899 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExists()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
java.io.FileOutputStream.write(I)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
900 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExistsCannotCreate()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
901 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize()
Métodos invocados: 
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.byteCountToDisplaySize(J)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
902 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToFile1()
Métodos invocados: 
org.apache.commons.io.FileUtils.toFile(java.net.URL)
java.io.File.toString()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
903 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToFile2()
Métodos invocados: 
org.apache.commons.io.FileUtils.toFile(java.net.URL)
java.io.File.toString()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
904 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToFile3()
Métodos invocados: 
org.apache.commons.io.FileUtils.toFile(java.net.URL)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.apache.commons.io.FileUtils.toFile(java.net.URL)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
905 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToFile4()
Métodos invocados: 
org.apache.commons.io.FileUtils.toFile(java.net.URL)
java.io.File.toString()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
906 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToFile5()
Métodos invocados: 
org.apache.commons.io.FileUtils.toFile(java.net.URL)
java.io.File.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
907 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToFileUtf8()
Métodos invocados: 
org.apache.commons.io.FileUtils.toFile(java.net.URL)
java.io.File.toString()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
908 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testDecodeUrl()
Métodos invocados: 
org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
909 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testDecodeUrlLenient()
Métodos invocados: 
org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
910 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testDecodeUrlNullSafe()
Métodos invocados: 
org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)
junit.framework.Assert.assertNull(java.lang.Object)
911 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testDecodeUrlEncodingUtf8()
Métodos invocados: 
org.apache.commons.io.FileUtils.decodeUrl(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
912 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToFiles1()
Métodos invocados: 
org.apache.commons.io.FileUtils.toFiles([Ljava.net.URL;)
junit.framework.Assert.assertEquals(I, I)
java.io.File.toString()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.io.File.toString()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
913 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToFiles2()
Métodos invocados: 
org.apache.commons.io.FileUtils.toFiles([Ljava.net.URL;)
junit.framework.Assert.assertEquals(I, I)
java.io.File.toString()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
914 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToFiles3()
Métodos invocados: 
org.apache.commons.io.FileUtils.toFiles([Ljava.net.URL;)
junit.framework.Assert.assertEquals(I, I)
915 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToFiles4()
Métodos invocados: 
org.apache.commons.io.FileUtils.toFiles([Ljava.net.URL;)
junit.framework.Assert.fail()
916 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testToURLs1()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.toURLs([Ljava.io.File;)
junit.framework.Assert.assertEquals(I, I)
java.net.URL.toExternalForm()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
java.net.URL.toExternalForm()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
java.net.URL.toExternalForm()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
java.net.URL.toExternalForm()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
java.net.URL.toExternalForm()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
java.net.URL.toExternalForm()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
917 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testContentEquals()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
java.io.File.deleteOnExit()
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL, java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
java.io.File.deleteOnExit()
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL, java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
java.io.File.deleteOnExit()
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL, java.io.File)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.createNewFile()
java.io.File.createNewFile()
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(Z, Z)
918 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
java.io.File.deleteOnExit()
org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
java.io.File.deleteOnExit()
org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
java.io.File.deleteOnExit()
org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
junit.framework.Assert.assertFalse(Z)
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.net.URL.getPath()
java.io.File.exists()
junit.framework.Assert.assertTrue(Z)
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.net.URL.getPath()
java.io.File.exists()
junit.framework.Assert.assertTrue(Z)
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
junit.framework.Assert.assertNotNull(java.lang.Object)
java.net.URL.getPath()
java.io.File.exists()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtils.contentEquals(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(Z)
java.io.File.createNewFile()
java.io.File.createNewFile()
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
919 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
java.io.File.deleteOnExit()
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL, java.io.File)
java.lang.Object.getClass()
java.lang.Class.getResourceAsStream(java.lang.String)
org.apache.commons.io.IOUtils.contentEquals(java.io.InputStream, java.io.InputStream)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.FileInputStream.close()
920 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.deleteOnExit()
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL, java.io.File, I, I)
java.lang.Object.getClass()
java.lang.Class.getResourceAsStream(java.lang.String)
org.apache.commons.io.IOUtils.contentEquals(java.io.InputStream, java.io.InputStream)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.FileInputStream.close()
921 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testForceMkdir()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.forceMkdir(java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
java.io.File.deleteOnExit()
java.io.File.createNewFile()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.forceMkdir(java.io.File)
junit.framework.Assert.fail(java.lang.String)
java.io.File.delete()
org.apache.commons.io.FileUtils.forceMkdir(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
922 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
junit.framework.Assert.fail(java.lang.String)
java.io.File.createNewFile()
java.io.File.deleteOnExit()
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
junit.framework.Assert.fail(java.lang.String)
java.io.File.delete()
java.io.File.mkdir()
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
923 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testSizeOf()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.TestCase.getName()
org.apache.commons.io.FileUtils.sizeOf(java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.sizeOf(java.io.File)
junit.framework.Assert.fail(java.lang.String)
java.io.File.createNewFile()
java.io.File.deleteOnExit()
org.apache.commons.io.FileUtils.sizeOf(java.io.File)
junit.framework.Assert.assertEquals(J, J)
java.io.File.delete()
org.apache.commons.io.FileUtils.sizeOf(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.sizeOf(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
924 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.lang.Thread.sleep(J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.lastModified()
java.io.File.lastModified()
java.util.Date.getTime()
java.lang.Thread.sleep(J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.lastModified()
java.io.File.lastModified()
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.util.Date)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, J)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.util.Date)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, J)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.File.getName()
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.contains(java.lang.CharSequence)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.util.Date)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, J)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.util.Date)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, J)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.contains(java.lang.CharSequence)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, J)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.isFileNewer(java.io.File, java.util.Date)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, J)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.isFileOlder(java.io.File, java.util.Date)
junit.framework.Assert.fail(java.lang.String)
925 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyFile1()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.length()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
926 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyFileToOutputStream()
Métodos invocados: 
org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.OutputStream)
java.io.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.FileUtils.readFileToByteArray(java.io.File)
java.io.ByteArrayOutputStream.toByteArray()
org.junit.Assert.assertArrayEquals(java.lang.String, [B, [B)
927 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.IGNOREtestCopyFileLarge()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.PrintStream.println(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.PrintStream.println(java.lang.String)
org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File)
java.io.PrintStream.println(java.lang.String)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.length()
java.io.File.length()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
928 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyFile2()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.length()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
929 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyToSelf()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File)
org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
930 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.copyFile(java.io.File, java.io.File, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.length()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
931 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
java.lang.System.getProperty(java.lang.String)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.io.File.getName()
org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File, java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
932 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
java.lang.System.getProperty(java.lang.String)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
933 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
java.lang.System.getProperty(java.lang.String)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
junit.framework.Assert.assertEquals(J, J)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
934 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(java.io.File, java.io.File, java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, java.io.FileFilter)
org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
java.util.List.get(I)
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.List.get(I)
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.util.List.get(I)
java.io.File.getName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
935 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
java.io.File.mkdir()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
java.io.File.setLastModified(J)
java.io.File.setLastModified(J)
java.io.File.setLastModified(J)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, Z)
java.io.File.lastModified()
junit.framework.Assert.assertTrue(Z)
java.io.File.lastModified()
junit.framework.Assert.assertTrue(Z)
java.io.File.lastModified()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, Z)
java.io.File.lastModified()
junit.framework.Assert.assertEquals(J, J)
java.io.File.lastModified()
junit.framework.Assert.assertEquals(J, J)
java.io.File.lastModified()
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, Z)
java.io.File.lastModified()
junit.framework.Assert.assertEquals(J, J)
java.io.File.lastModified()
junit.framework.Assert.assertEquals(J, J)
java.io.File.lastModified()
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File, Z)
java.io.File.lastModified()
junit.framework.Assert.assertEquals(J, J)
java.io.File.lastModified()
junit.framework.Assert.assertEquals(J, J)
java.io.File.lastModified()
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
936 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(java.io.File, java.io.File, java.io.File)
org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)
java.util.List.size()
org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)
java.util.List.size()
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
junit.framework.Assert.assertEquals(J, J)
937 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(java.io.File, java.io.File, java.io.File)
org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)
java.util.List.size()
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)
junit.framework.Assert.assertEquals(J, J)
938 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.copyDirectoryToDirectory(java.io.File, java.io.File)
org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
939 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(java.io.File, java.io.File, java.io.File)
Métodos invocados: 
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.io.File.mkdirs()
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
940 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors()
Métodos invocados: 
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.copyDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail()
941 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile1()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.createNewFile()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.forceDelete(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
942 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile2()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.createNewFile()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.forceDelete(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
943 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.forceDelete(java.io.File)
junit.framework.Assert.fail(java.lang.String)
944 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
java.io.File.mkdirs()
java.io.File.getName()
org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File, java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.length()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
945 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
java.io.File.mkdirs()
java.io.File.getName()
org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File, java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.length()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
946 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testForceDeleteDir()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.getParentFile()
org.apache.commons.io.FileUtils.forceDelete(java.io.File)
java.io.File.getParentFile()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
947 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testFileUtils()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.getAbsolutePath()
java.lang.String.getBytes(java.lang.String)
java.io.OutputStream.write([B)
java.io.OutputStream.close()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
java.io.File.exists()
junit.framework.Assert.assertTrue(Z)
java.io.File.length()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File, java.lang.String)
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.delete()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File, java.lang.String)
java.lang.String.equals(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
948 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testTouch()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
java.io.File.delete()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.length()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.FileOutputStream.write(I)
java.io.FileOutputStream.close()
java.io.File.length()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.util.Calendar.getTime()
java.util.Date.getTime()
java.io.File.setLastModified(J)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.io.File.lastModified()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.lang.System.currentTimeMillis()
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.length()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.File.lastModified()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.io.File.lastModified()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.io.File.lastModified()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
949 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testListFiles()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.FileUtils.listFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
java.util.Collection.size()
java.util.Collection.toArray()
java.util.Collection.size()
junit.framework.Assert.assertEquals(I, I)
java.io.File.getName()
java.lang.String.equals(java.lang.Object)
java.util.Map.put(java.lang.String, java.lang.String)
java.util.Map.size()
junit.framework.Assert.assertEquals(I, I)
java.io.File.delete()
950 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testIterateFiles()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.FileUtils.iterateFiles(java.io.File, org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter)
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.io.File.getName()
java.lang.String.equals(java.lang.Object)
java.util.Map.put(java.lang.String, java.lang.String)
java.util.Map.size()
junit.framework.Assert.assertEquals(I, I)
java.io.File.delete()
951 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithDefaultEncoding()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.lang.String.getBytes()
java.io.FileOutputStream.write([B)
java.io.FileOutputStream.close()
org.apache.commons.io.FileUtils.readFileToString(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
952 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithEncoding()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.lang.String.getBytes(java.lang.String)
java.io.FileOutputStream.write([B)
java.io.FileOutputStream.close()
org.apache.commons.io.FileUtils.readFileToString(java.io.File, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
953 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.FileOutputStream.write(I)
java.io.FileOutputStream.write(I)
java.io.FileOutputStream.write(I)
java.io.FileOutputStream.close()
org.apache.commons.io.FileUtils.readFileToByteArray(java.io.File)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
954 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testReadLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File, [Ljava.lang.String;)
org.apache.commons.io.FileUtils.readLines(java.io.File, java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)
955 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
java.lang.String.getBytes(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([B, java.io.File)
956 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
java.lang.String.getBytes()
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([B, java.io.File)
957 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, java.lang.String)
java.lang.String.getBytes(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([B, java.io.File)
958 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, java.lang.String)
java.lang.String.getBytes()
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([B, java.io.File)
959 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File, [B)
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([B, java.io.File)
960 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String)
org.apache.commons.io.FileUtils.readFileToString(java.io.File, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
961 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String)
java.io.File.length()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
962 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String)
org.apache.commons.io.FileUtils.readFileToString(java.io.File, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
963 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection)
org.apache.commons.io.FileUtils.readFileToString(java.io.File, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
964 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String, Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
965 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String, Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
966 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.util.Collection, java.lang.String, Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
967 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.util.Collection, java.lang.String, Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
968 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
969 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection, Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
970 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.util.Collection, Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
971 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.util.Collection, Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
972 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String, Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
973 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String, Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
974 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
975 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
976 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, java.lang.String, Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
977 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, java.lang.String, Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
978 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
979 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence, Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
980 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
java.lang.String.getBytes()
org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File, [B, Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
981 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String)
java.lang.String.getBytes()
org.apache.commons.io.FileUtils.writeByteArrayToFile(java.io.File, [B, Z)
org.apache.commons.io.FileUtils.readFileToString(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
982 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
java.lang.String.getBytes(java.lang.String)
java.lang.String.length()
java.util.zip.Checksum.update([B, I, I)
java.util.zip.Checksum.getValue()
org.apache.commons.io.FileUtils.checksumCRC32(java.io.File)
junit.framework.Assert.assertEquals(J, J)
983 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testChecksum()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
java.lang.String.getBytes(java.lang.String)
java.lang.String.length()
java.util.zip.Checksum.update([B, I, I)
java.util.zip.Checksum.getValue()
org.apache.commons.io.FileUtils.checksum(java.io.File, java.util.zip.Checksum)
java.util.zip.Checksum.getValue()
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
junit.framework.Assert.assertEquals(J, J)
984 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullFile()
Métodos invocados: 
org.apache.commons.io.FileUtils.checksum(java.io.File, java.util.zip.Checksum)
junit.framework.Assert.fail()
985 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
org.apache.commons.io.FileUtils.checksum(java.io.File, java.util.zip.Checksum)
junit.framework.Assert.fail()
986 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testChecksumOnDirectory()
Métodos invocados: 
org.apache.commons.io.FileUtils.checksum(java.io.File, java.util.zip.Checksum)
junit.framework.Assert.fail()
987 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testChecksumDouble()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.writeStringToFile(java.io.File, java.lang.String, java.lang.String)
java.lang.String.getBytes(java.lang.String)
java.lang.String.length()
java.util.zip.Checksum.update([B, I, I)
java.lang.String.getBytes(java.lang.String)
java.lang.String.length()
java.util.zip.Checksum.update([B, I, I)
java.util.zip.Checksum.getValue()
org.apache.commons.io.FileUtils.checksum(java.io.File, java.util.zip.Checksum)
org.apache.commons.io.FileUtils.checksum(java.io.File, java.util.zip.Checksum)
java.util.zip.Checksum.getValue()
junit.framework.Assert.assertEquals(J, J)
988 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyForNull()
Métodos invocados: 
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
java.lang.Throwable.getMessage()
junit.framework.Assert.fail(java.lang.String)
989 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.exists()
junit.framework.Assert.assertTrue(Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
990 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.exists()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
991 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyNonExistent()
Métodos invocados: 
java.io.File.exists()
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
java.lang.Throwable.getMessage()
junit.framework.Assert.fail(java.lang.String)
992 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveFile_Rename()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
993 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.getAbsolutePath()
org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
994 - Declaração do método: org.apache.commons.io.FileUtilsTestCase$1.renameTo(java.io.File)
994 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.getAbsolutePath()
org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
995 - Declaração do método: org.apache.commons.io.FileUtilsTestCase$2.renameTo(java.io.File)
995 - Declaração do método: org.apache.commons.io.FileUtilsTestCase$2.delete()
995 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors()
Métodos invocados: 
org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.FileUtils.moveFile(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
996 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.getName()
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File, java.io.File, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
997 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors()
Métodos invocados: 
org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.moveFileToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
998 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.FileUtils.moveDirectory(java.io.File, java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.getName()
java.io.File.getName()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
999 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.FileUtils.moveDirectory(java.io.File, java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.getName()
java.io.File.getName()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
1000 - Declaração do método: org.apache.commons.io.FileUtilsTestCase$3.renameTo(java.io.File)
1000 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors()
Métodos invocados: 
org.apache.commons.io.FileUtils.moveDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.moveDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.moveDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.FileUtils.moveDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
java.io.File.mkdir()
org.apache.commons.io.FileUtils.moveDirectory(java.io.File, java.io.File)
junit.framework.Assert.fail(java.lang.String)
1001 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File, java.io.File, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.getName()
java.io.File.getName()
java.io.File.getName()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
1002 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors()
Métodos invocados: 
org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
1003 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.getName()
java.io.File.getName()
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.moveToDirectory(java.io.File, java.io.File, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.moveToDirectory(java.io.File, java.io.File, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
1004 - Declaração do método: org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors()
Métodos invocados: 
org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.FileUtils.moveDirectoryToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.moveToDirectory(java.io.File, java.io.File, Z)
junit.framework.Assert.fail(java.lang.String)
1005 - Declaração do método: org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.ListDirectoryWalker()
1005 - Declaração do método: org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.list(java.io.File)
Métodos invocados: 
org.apache.commons.io.DirectoryWalker.walk(java.io.File, java.util.Collection)
1006 - Declaração do método: org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.handleDirectoryStart(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.io.File)
1007 - Declaração do método: org.apache.commons.io.FileUtilsTestCase$ListDirectoryWalker.handleFile(java.io.File, I, java.util.Collection)
Métodos invocados: 
java.util.Collection.add(java.io.File)
1008 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.IOUtilsCopyTestCase(java.lang.String)
1008 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.setUp()
1008 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.tearDown()
1008 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream)
java.io.InputStream.available()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
junit.framework.Assert.assertEquals(I, I)
1009 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullIn()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream)
junit.framework.Assert.fail()
1010 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullOut()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream)
junit.framework.Assert.fail()
1011 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.OutputStream)
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.close()
org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
1012 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
java.io.InputStream.available()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1013 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer)
junit.framework.Assert.fail()
1014 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullOut()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer)
junit.framework.Assert.fail()
1015 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
java.io.InputStream.available()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.lang.String.getBytes(java.lang.String)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1016 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)
junit.framework.Assert.fail()
1017 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullOut()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)
junit.framework.Assert.fail()
1018 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
java.io.InputStream.available()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1019 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1020 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullIn()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream)
junit.framework.Assert.fail()
1021 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullOut()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream)
junit.framework.Assert.fail()
1022 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream, java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.lang.String.getBytes(java.lang.String)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1023 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullIn()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream, java.lang.String)
junit.framework.Assert.fail()
1024 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullOut()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream, java.lang.String)
junit.framework.Assert.fail()
1025 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.OutputStream, java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1026 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1027 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
junit.framework.Assert.fail()
1028 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullOut()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
junit.framework.Assert.fail()
1029 - Declaração do método: org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84()
Métodos invocados: 
org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer)
junit.framework.Assert.assertEquals(I, I)
java.io.Reader.close()
org.apache.commons.io.IOUtils.copyLarge(java.io.Reader, java.io.Writer)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
1030 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.FileUtilsCleanDirectoryTestCase(java.lang.String)
1030 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.getLocalTestDirectory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
1031 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.setUp()
Métodos invocados: 
java.io.File.mkdirs()
1032 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod(java.io.File, I, Z)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
1033 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testCleanEmpty()
Métodos invocados: 
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
1034 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesRegular()
Métodos invocados: 
org.apache.commons.io.FileUtils.touch(java.io.File)
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
1035 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested()
Métodos invocados: 
java.io.File.mkdirs()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
java.io.File.list()
junit.framework.Assert.assertEquals(I, I)
1036 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnNullList()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
java.lang.String.startsWith(java.lang.String)
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod(java.io.File, I, Z)
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
junit.framework.Assert.fail(java.lang.String)
java.io.File.getAbsolutePath()
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1037 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile()
Métodos invocados: 
org.apache.commons.io.FileUtils.touch(java.io.File)
java.lang.System.getProperty(java.lang.String)
java.lang.String.startsWith(java.lang.String)
org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod(java.io.File, I, Z)
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
junit.framework.Assert.fail(java.lang.String)
java.io.File.getAbsolutePath()
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1038 - Declaração do método: org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod(java.io.File, I, Z)
Métodos invocados: 
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.lang.Integer.toString(I)
java.util.List.add(java.lang.String)
java.io.File.getAbsolutePath()
java.util.List.add(java.lang.String)
java.lang.Runtime.getRuntime()
java.util.List.size()
java.util.List.toArray([Ljava.lang.String;)
java.lang.Runtime.exec([Ljava.lang.String;)
java.lang.Process.waitFor()
1039 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.FileSystemUtilsTestCase(java.lang.String)
1039 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.setUp()
1039 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.tearDown()
1039 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String()
Métodos invocados: 
java.lang.System.getProperty(java.lang.String)
java.lang.String.toLowerCase(java.util.Locale)
java.lang.String.indexOf(java.lang.String)
java.lang.String.indexOf(java.lang.String)
java.lang.String.indexOf(java.lang.String)
java.lang.String.indexOf(java.lang.String)
java.lang.String.indexOf(java.lang.String)
java.lang.Runtime.getRuntime()
java.lang.Runtime.exec([Ljava.lang.String;)
java.lang.Process.getInputStream()
java.io.BufferedReader.readLine()
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
java.lang.String.indexOf(java.lang.String)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Reader)
org.apache.commons.io.FileSystemUtils.freeSpace(java.lang.String)
org.apache.commons.io.FileSystemUtils.freeSpaceKb(java.lang.String)
junit.framework.Assert.assertEquals(D, D, D)
junit.framework.Assert.assertEquals(D, D, D)
org.apache.commons.io.FileSystemUtils.freeSpace(java.lang.String)
org.apache.commons.io.FileSystemUtils.freeSpaceKb(java.lang.String)
junit.framework.Assert.assertEquals(D, D, D)
1040 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_NullPath()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z, J)
junit.framework.Assert.fail()
1041 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_InitError()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z, J)
junit.framework.Assert.fail()
1042 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Other()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z, J)
junit.framework.Assert.fail()
1043 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z, J)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z, J)
junit.framework.Assert.assertEquals(J, J)
1044 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$1.freeSpaceWindows(java.lang.String, J)
1044 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z, J)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.FileSystemUtils.freeSpaceOS(java.lang.String, I, Z, J)
junit.framework.Assert.assertEquals(J, J)
1045 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$2.freeSpaceUnix(java.lang.String, Z, Z, J)
1045 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_ParseCommaFormatBytes()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String, J)
junit.framework.Assert.assertEquals(J, J)
1046 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String, J)
junit.framework.Assert.assertEquals(J, J)
1047 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String, J)
junit.framework.Assert.assertEquals(J, J)
1048 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String, J)
junit.framework.Assert.assertEquals(J, J)
1049 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String, J)
junit.framework.Assert.assertEquals(J, J)
1050 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String, J)
junit.framework.Assert.fail()
1051 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyMultiLineResponse()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String, J)
junit.framework.Assert.fail()
1052 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_InvalidTextResponse()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String, J)
junit.framework.Assert.fail()
1053 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NoSuchDirectoryResponse()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceWindows(java.lang.String, J)
junit.framework.Assert.fail()
1054 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyPath()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
1055 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseLinux()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.assertEquals(J, J)
1056 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.assertEquals(J, J)
1057 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbLinux()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.assertEquals(J, J)
1058 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.assertEquals(J, J)
1059 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbSolaris()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.assertEquals(J, J)
1060 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponse()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.assertEquals(J, J)
1061 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.assertEquals(J, J)
1062 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
1063 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
1064 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
1065 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
1066 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4()
Métodos invocados: 
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
org.apache.commons.io.FileSystemUtils.freeSpaceUnix(java.lang.String, Z, Z, J)
junit.framework.Assert.fail()
1067 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils.MockFileSystemUtils(I, java.lang.String)
1067 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils.MockFileSystemUtils(I, java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.getBytes()
1068 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils.openProcess([Ljava.lang.String;)
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1069 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1.getErrorStream()
1069 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1.getInputStream()
1069 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1.getOutputStream()
1069 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1.waitFor()
1069 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1.exitValue()
1069 - Declaração do método: org.apache.commons.io.FileSystemUtilsTestCase$MockFileSystemUtils$1.destroy()
1069 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.LineIteratorTestCase(java.lang.String)
1069 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.assertLines(java.util.List, org.apache.commons.io.LineIterator)
Métodos invocados: 
java.util.List.size()
org.apache.commons.io.LineIterator.nextLine()
java.util.List.get(I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.LineIterator.hasNext()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)
1070 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File, I)
Métodos invocados: 
org.apache.commons.io.LineIteratorTestCase.createStringLines(I)
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.util.Collection)
1071 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File, java.lang.String, I)
Métodos invocados: 
org.apache.commons.io.LineIteratorTestCase.createStringLines(I)
org.apache.commons.io.FileUtils.writeLines(java.io.File, java.lang.String, java.util.Collection)
1072 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.createStringLines(I)
Métodos invocados: 
java.util.List.add(java.lang.String)
1073 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
java.io.File.mkdirs()
1074 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
1075 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testConstructor()
Métodos invocados: 
junit.framework.Assert.fail()
1076 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testZeroLines()
Métodos invocados: 
org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(I)
1077 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testOneLines()
Métodos invocados: 
org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(I)
1078 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testTwoLines()
Métodos invocados: 
org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(I)
1079 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testThreeLines()
Métodos invocados: 
org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(I)
1080 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testMissingFile()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)
1081 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testValidEncoding()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File, java.lang.String, I)
org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)
org.apache.commons.io.LineIterator.hasNext()
org.apache.commons.io.LineIterator.next()
junit.framework.Assert.assertNotNull(java.lang.Object)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)
1082 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File, java.lang.String, I)
org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)
1083 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File, I)
org.apache.commons.io.FileUtils.lineIterator(java.io.File)
org.apache.commons.io.LineIteratorTestCase.assertLines(java.util.List, org.apache.commons.io.LineIterator)
1084 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyNullEncoding()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File, java.lang.String, I)
org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)
org.apache.commons.io.LineIteratorTestCase.assertLines(java.util.List, org.apache.commons.io.LineIterator)
1085 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyUtf8Encoding()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File, java.lang.String, I)
org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)
org.apache.commons.io.LineIteratorTestCase.assertLines(java.util.List, org.apache.commons.io.LineIterator)
1086 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testNextOnly()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File, java.lang.String, I)
org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)
java.util.List.size()
org.apache.commons.io.LineIterator.next()
java.util.List.get(I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.LineIterator.hasNext()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)
1087 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testNextWithException()
Métodos invocados: 
org.apache.commons.io.LineIterator.hasNext()
junit.framework.Assert.fail(java.lang.String)
1088 - Declaração do método: org.apache.commons.io.LineIteratorTestCase$1.readLine()
1088 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testCloseEarly()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File, java.lang.String, I)
org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)
org.apache.commons.io.LineIterator.next()
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
org.apache.commons.io.LineIterator.hasNext()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.LineIterator.close()
org.apache.commons.io.LineIterator.hasNext()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.LineIterator.next()
junit.framework.Assert.fail()
org.apache.commons.io.LineIterator.nextLine()
junit.framework.Assert.fail()
org.apache.commons.io.LineIterator.close()
org.apache.commons.io.LineIterator.next()
junit.framework.Assert.fail()
org.apache.commons.io.LineIterator.nextLine()
junit.framework.Assert.fail()
org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)
1089 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(I)
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File, java.lang.String, I)
org.apache.commons.io.FileUtils.lineIterator(java.io.File, java.lang.String)
org.apache.commons.io.LineIterator.remove()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.LineIterator.hasNext()
org.apache.commons.io.LineIterator.next()
java.util.List.get(I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
java.util.List.size()
java.util.List.size()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.LineIterator.next()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.LineIterator.nextLine()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)
1090 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testFilteringFileReader()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File, java.lang.String, I)
org.apache.commons.io.LineIteratorTestCase.testFiltering(java.util.List, java.io.Reader)
1091 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testFilteringBufferedReader()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.LineIteratorTestCase.createLinesFile(java.io.File, java.lang.String, I)
org.apache.commons.io.LineIteratorTestCase.testFiltering(java.util.List, java.io.Reader)
1092 - Declaração do método: org.apache.commons.io.LineIteratorTestCase.testFiltering(java.util.List, java.io.Reader)
Métodos invocados: 
java.lang.String.length()
java.lang.String.charAt(I)
org.apache.commons.io.LineIterator.remove()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.LineIterator.hasNext()
org.apache.commons.io.LineIterator.next()
java.util.List.get(I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
java.util.List.size()
java.util.List.size()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.LineIterator.next()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.LineIterator.nextLine()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.LineIterator.closeQuietly(org.apache.commons.io.LineIterator)
1093 - Declaração do método: org.apache.commons.io.LineIteratorTestCase$2.isValidLine(java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.charAt(I)
1094 - Declaração do método: org.apache.commons.io.FileUtilsDirectoryContainsTestCase.FileUtilsDirectoryContainsTestCase(java.lang.String)
1094 - Declaração do método: org.apache.commons.io.FileUtilsDirectoryContainsTestCase.setUp()
Métodos invocados: 
java.io.File.mkdirs()
java.io.File.mkdir()
java.io.File.mkdir()
java.io.File.mkdir()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.touch(java.io.File)
org.apache.commons.io.FileUtils.touch(java.io.File)
org.apache.commons.io.FileUtils.touch(java.io.File)
1095 - Declaração do método: org.apache.commons.io.FileUtilsDirectoryContainsTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
1096 - Declaração do método: org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testCanonicalPath()
Métodos invocados: 
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(Z)
1097 - Declaração do método: org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsDirectory()
Métodos invocados: 
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
1098 - Declaração do método: org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsFile()
Métodos invocados: 
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
1099 - Declaração do método: org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainFile()
Métodos invocados: 
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(Z)
1100 - Declaração do método: org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainsDirectory()
Métodos invocados: 
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(Z)
1101 - Declaração do método: org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotExist()
Métodos invocados: 
java.io.File.exists()
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(Z)
java.lang.Class.getName()
junit.framework.Assert.fail(java.lang.String)
1102 - Declaração do método: org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testSameFile()
Métodos invocados: 
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
java.lang.Class.getName()
junit.framework.Assert.fail(java.lang.String)
1103 - Declaração do método: org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExist()
Métodos invocados: 
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(Z)
1104 - Declaração do método: org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExistBug()
Métodos invocados: 
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertFalse(java.lang.String, Z)
1105 - Declaração do método: org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testUnrealizedContainment()
Métodos invocados: 
java.io.File.exists()
junit.framework.Assert.assertFalse(Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.FileUtils.directoryContains(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(Z)
1106 - Declaração do método: org.apache.commons.io.HexDumpTest.HexDumpTest(java.lang.String)
1106 - Declaração do método: org.apache.commons.io.HexDumpTest.toHex(I)
1106 - Declaração do método: org.apache.commons.io.HexDumpTest.testDump()
Métodos invocados: 
org.apache.commons.io.HexDump.dump([B, J, java.io.OutputStream, I)
java.lang.String.length()
java.lang.String.length()
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toAscii(I)
java.lang.String.getBytes()
java.lang.String.getBytes()
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, B, B)
org.apache.commons.io.HexDump.dump([B, J, java.io.OutputStream, I)
java.lang.String.length()
java.lang.String.length()
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toAscii(I)
java.lang.String.getBytes()
java.lang.String.getBytes()
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, B, B)
org.apache.commons.io.HexDump.dump([B, J, java.io.OutputStream, I)
java.lang.String.length()
java.lang.String.length()
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toAscii(I)
java.lang.String.getBytes()
java.lang.String.getBytes()
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, B, B)
org.apache.commons.io.HexDump.dump([B, J, java.io.OutputStream, I)
java.lang.String.length()
java.lang.String.length()
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toHex(I)
org.apache.commons.io.HexDumpTest.toAscii(I)
java.lang.String.getBytes()
java.lang.String.getBytes()
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, B, B)
org.apache.commons.io.HexDump.dump([B, J, java.io.OutputStream, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.HexDump.dump([B, J, java.io.OutputStream, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.HexDump.dump([B, J, java.io.OutputStream, I)
junit.framework.Assert.fail(java.lang.String)
1107 - Declaração do método: org.apache.commons.io.HexDumpTest.toAscii(I)
1107 - Declaração do método: org.apache.commons.io.ByteOrderMarkTestCase.ByteOrderMarkTestCase(java.lang.String)
1107 - Declaração do método: org.apache.commons.io.ByteOrderMarkTestCase.testCharsetName()
Métodos invocados: 
org.apache.commons.io.ByteOrderMark.getCharsetName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.ByteOrderMark.getCharsetName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.ByteOrderMark.getCharsetName()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
1108 - Declaração do método: org.apache.commons.io.ByteOrderMarkTestCase.testLength()
Métodos invocados: 
org.apache.commons.io.ByteOrderMark.length()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.ByteOrderMark.length()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.ByteOrderMark.length()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1109 - Declaração do método: org.apache.commons.io.ByteOrderMarkTestCase.testGet()
Métodos invocados: 
org.apache.commons.io.ByteOrderMark.get(I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.ByteOrderMark.get(I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.ByteOrderMark.get(I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.ByteOrderMark.get(I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.ByteOrderMark.get(I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.ByteOrderMark.get(I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1110 - Declaração do método: org.apache.commons.io.ByteOrderMarkTestCase.testGetBytes()
Métodos invocados: 
org.apache.commons.io.ByteOrderMark.getBytes()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.ByteOrderMark.getBytes()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.ByteOrderMark.getBytes()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1111 - Declaração do método: org.apache.commons.io.ByteOrderMarkTestCase.testEquals()
Métodos invocados: 
org.apache.commons.io.ByteOrderMark.equals(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.ByteOrderMark.equals(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.ByteOrderMark.equals(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.ByteOrderMark.equals(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.ByteOrderMark.equals(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.ByteOrderMark.equals(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.ByteOrderMark.equals(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.ByteOrderMark.equals(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
1112 - Declaração do método: org.apache.commons.io.ByteOrderMarkTestCase.testHashCode()
Métodos invocados: 
java.lang.Object.hashCode()
org.apache.commons.io.ByteOrderMark.hashCode()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.ByteOrderMark.hashCode()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.ByteOrderMark.hashCode()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1113 - Declaração do método: org.apache.commons.io.ByteOrderMarkTestCase.testErrors()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
1114 - Declaração do método: org.apache.commons.io.ByteOrderMarkTestCase.testToString()
Métodos invocados: 
org.apache.commons.io.ByteOrderMark.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.ByteOrderMark.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.ByteOrderMark.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
1115 - Declaração do método: org.apache.commons.io.FilenameUtilsWildcardTestCase.FilenameUtilsWildcardTestCase(java.lang.String)
1115 - Declaração do método: org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
1116 - Declaração do método: org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(Z, Z)
1117 - Declaração do método: org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchCaseSpecified()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.assertEquals(Z, Z)
1118 - Declaração do método: org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens()
Métodos invocados: 
org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
org.apache.commons.io.FilenameUtils.splitOnTokens(java.lang.String)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
1119 - Declaração do método: org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals([Ljava.lang.Object;, [Ljava.lang.Object;)
Métodos invocados: 
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1120 - Declaração do método: org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
Métodos invocados: 
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
1121 - Declaração do método: org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch2()
Métodos invocados: 
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
1122 - Declaração do método: org.apache.commons.io.FilenameUtilsWildcardTestCase.test_IO_246()
Métodos invocados: 
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(java.lang.String, java.lang.String, Z)
1123 - Declaração do método: org.apache.commons.io.FilenameUtilsWildcardTestCase.testLocaleIndependence()
Métodos invocados: 
java.util.Locale.getDefault()
java.util.Locale.getAvailableLocales()
java.util.Locale.setDefault(java.util.Locale)
java.lang.String.equalsIgnoreCase(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
java.util.Locale.getDefault()
java.util.Locale.toString()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Locale.setDefault(java.util.Locale)
1124 - Declaração do método: org.apache.commons.io.CopyUtilsTest.CopyUtilsTest(java.lang.String)
1124 - Declaração do método: org.apache.commons.io.CopyUtilsTest.setUp()
1124 - Declaração do método: org.apache.commons.io.CopyUtilsTest.tearDown()
1124 - Declaração do método: org.apache.commons.io.CopyUtilsTest.testCtor()
1124 - Declaração do método: org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream()
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy([B, java.io.OutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1125 - Declaração do método: org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter()
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy([B, java.io.Writer)
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1126 - Declaração do método: org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriterWithEncoding()
Métodos invocados: 
java.lang.String.getBytes(java.lang.String)
org.apache.commons.io.CopyUtils.copy([B, java.io.Writer, java.lang.String)
java.io.StringWriter.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1127 - Declaração do método: org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream()
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.InputStream, java.io.OutputStream)
java.io.InputStream.available()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
junit.framework.Assert.assertEquals(I, I)
1128 - Declaração do método: org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter()
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.InputStream, java.io.Writer)
java.io.Writer.flush()
java.io.InputStream.available()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1129 - Declaração do método: org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriterWithEncoding()
Métodos invocados: 
java.lang.String.getBytes(java.lang.String)
org.apache.commons.io.CopyUtils.copy(java.io.InputStream, java.io.Writer, java.lang.String)
java.io.StringWriter.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1130 - Declaração do método: org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream()
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.Reader, java.io.OutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1131 - Declaração do método: org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter()
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.io.Reader, java.io.Writer)
java.io.Writer.flush()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1132 - Declaração do método: org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream()
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.lang.String, java.io.OutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1133 - Declaração do método: org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter()
Métodos invocados: 
org.apache.commons.io.CopyUtils.copy(java.lang.String, java.io.Writer)
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1134 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.IOUtilsWriteTestCase(java.lang.String)
1134 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.setUp()
1134 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.tearDown()
1134 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1135 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1136 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.OutputStream)
junit.framework.Assert.fail()
1137 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1138 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1139 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullWriter()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.Writer)
junit.framework.Assert.fail()
1140 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.Writer, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.lang.String.getBytes(java.lang.String)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1141 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.Writer, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1142 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullWriter()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.Writer, java.lang.String)
junit.framework.Assert.fail()
1143 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([B, java.io.Writer, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1144 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1145 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1146 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream)
junit.framework.Assert.fail()
1147 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.lang.String.getBytes(java.lang.String)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1148 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1149 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream)
junit.framework.Assert.fail()
1150 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1151 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1152 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1153 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.CharSequence, java.io.Writer)
junit.framework.Assert.fail()
1154 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1155 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1156 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream)
junit.framework.Assert.fail()
1157 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.lang.String.getBytes(java.lang.String)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1158 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1159 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream)
junit.framework.Assert.fail()
1160 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1161 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1162 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1163 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullStream()
Métodos invocados: 
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.Writer)
junit.framework.Assert.fail()
1164 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream()
Métodos invocados: 
java.lang.String.toCharArray()
org.apache.commons.io.IOUtils.write([C, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1165 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([C, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1166 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullStream()
Métodos invocados: 
java.lang.String.toCharArray()
org.apache.commons.io.IOUtils.write([C, java.io.OutputStream)
junit.framework.Assert.fail()
1167 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding()
Métodos invocados: 
java.lang.String.toCharArray()
org.apache.commons.io.IOUtils.write([C, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.lang.String.getBytes(java.lang.String)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1168 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([C, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1169 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullStream()
Métodos invocados: 
java.lang.String.toCharArray()
org.apache.commons.io.IOUtils.write([C, java.io.OutputStream)
junit.framework.Assert.fail()
1170 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding()
Métodos invocados: 
java.lang.String.toCharArray()
org.apache.commons.io.IOUtils.write([C, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1171 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter()
Métodos invocados: 
java.lang.String.toCharArray()
org.apache.commons.io.IOUtils.write([C, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1172 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.write([C, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1173 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullStream()
Métodos invocados: 
java.lang.String.toCharArray()
org.apache.commons.io.IOUtils.write([C, java.io.Writer)
junit.framework.Assert.fail()
1174 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1175 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1176 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1177 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullStream()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream)
junit.framework.Assert.fail()
1178 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toString(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1179 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1180 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1181 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullStream()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String)
junit.framework.Assert.fail()
1182 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1183 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1184 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData()
Métodos invocados: 
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1185 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.Writer)
org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
java.io.Writer.flush()
org.apache.commons.io.output.ByteArrayOutputStream.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1186 - Declaração do método: org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullStream()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.Object;)
org.apache.commons.io.IOUtils.writeLines(java.util.Collection, java.lang.String, java.io.Writer)
junit.framework.Assert.fail()
1187 - Declaração do método: org.apache.commons.io.comparator.LastModifiedFileComparatorTest.LastModifiedFileComparatorTest(java.lang.String)
1187 - Declaração do método: org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.lang.Thread.sleep(J)
java.lang.System.currentTimeMillis()
java.io.File.setLastModified(J)
java.io.File.lastModified()
java.io.File.lastModified()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.lang.Thread.sleep(J)
java.lang.System.currentTimeMillis()
java.io.File.setLastModified(J)
java.io.File.lastModified()
java.io.File.lastModified()
1188 - Declaração do método: org.apache.commons.io.comparator.DefaultFileComparatorTest.DefaultFileComparatorTest(java.lang.String)
1188 - Declaração do método: org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp()
1188 - Declaração do método: org.apache.commons.io.comparator.NameFileComparatorTest.NameFileComparatorTest(java.lang.String)
1188 - Declaração do método: org.apache.commons.io.comparator.NameFileComparatorTest.setUp()
1188 - Declaração do método: org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity()
Métodos invocados: 
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1189 - Declaração do método: org.apache.commons.io.comparator.PathFileComparatorTest.PathFileComparatorTest(java.lang.String)
1189 - Declaração do método: org.apache.commons.io.comparator.PathFileComparatorTest.setUp()
1189 - Declaração do método: org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity()
Métodos invocados: 
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1190 - Declaração do método: org.apache.commons.io.comparator.SizeFileComparatorTest.SizeFileComparatorTest(java.lang.String)
1190 - Declaração do método: org.apache.commons.io.comparator.SizeFileComparatorTest.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdir()
java.io.File.mkdir()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
1191 - Declaração do método: org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile()
Métodos invocados: 
java.io.File.exists()
junit.framework.Assert.assertFalse(Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1192 - Declaração do método: org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes()
Métodos invocados: 
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1193 - Declaração do método: org.apache.commons.io.comparator.ComparatorAbstractTestCase.ComparatorAbstractTestCase(java.lang.String)
1193 - Declaração do método: org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp()
1193 - Declaração do método: org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
1194 - Declaração do método: org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator()
Métodos invocados: 
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1195 - Declaração do método: org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator()
Métodos invocados: 
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1196 - Declaração do método: org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArrayNull()
Métodos invocados: 
org.apache.commons.io.comparator.AbstractFileComparator.sort([Ljava.io.File;)
junit.framework.Assert.assertNull(java.lang.Object)
1197 - Declaração do método: org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray()
Métodos invocados: 
org.apache.commons.io.comparator.AbstractFileComparator.sort([Ljava.io.File;)
junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)
junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)
junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)
1198 - Declaração do método: org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList()
Métodos invocados: 
java.util.List.add(java.io.File)
java.util.List.add(java.io.File)
java.util.List.add(java.io.File)
org.apache.commons.io.comparator.AbstractFileComparator.sort(java.util.List)
java.util.List.get(I)
junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)
java.util.List.get(I)
junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)
java.util.List.get(I)
junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object)
1199 - Declaração do método: org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortListNull()
Métodos invocados: 
org.apache.commons.io.comparator.AbstractFileComparator.sort(java.util.List)
junit.framework.Assert.assertNull(java.lang.Object)
1200 - Declaração do método: org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString()
Métodos invocados: 
org.apache.commons.io.comparator.AbstractFileComparator.toString()
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
java.lang.Object.toString()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1201 - Declaração do método: org.apache.commons.io.comparator.ExtensionFileComparatorTest.ExtensionFileComparatorTest(java.lang.String)
1201 - Declaração do método: org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp()
1201 - Declaração do método: org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity()
Métodos invocados: 
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1202 - Declaração do método: org.apache.commons.io.comparator.CompositeFileComparatorTest.CompositeFileComparatorTest(java.lang.String)
1202 - Declaração do método: org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
1203 - Declaração do método: org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable()
Métodos invocados: 
java.util.List.add(java.util.Comparator)
java.util.List.add(java.util.Comparator)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1204 - Declaração do método: org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterableNull()
Métodos invocados: 
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
1205 - Declaração do método: org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorArrayNull()
Métodos invocados: 
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.Comparator.compare(java.io.File, java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
1206 - Declaração do método: org.apache.commons.io.comparator.DirectoryFileComparatorTest.DirectoryFileComparatorTest(java.lang.String)
1206 - Declaração do método: org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp()
1206 - Declaração do método: org.apache.commons.io.comparator.DirectoryFileComparatorTest.testSortArray()
1206 - Declaração do método: org.apache.commons.io.comparator.DirectoryFileComparatorTest.testSortList()
1206 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.OrFileFilterTestCase(java.lang.String)
1206 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.filefilter.OrFileFilterTestCase.setUpTestFilters()
1207 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingAdd(java.util.List)
Métodos invocados: 
java.util.List.size()
java.util.List.get(I)
org.apache.commons.io.filefilter.OrFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
1208 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingConstructor(java.util.List)
1208 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.getConditionalFileFilter()
1208 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.getDefaultWorkingPath()
1208 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.getFalseResults()
1208 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.getFileResults()
1208 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.getFilenameResults()
1208 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.getTestFilters()
1208 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.getTrueResults()
1208 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.getWorkingPathNamePropertyKey()
1208 - Declaração do método: org.apache.commons.io.filefilter.OrFileFilterTestCase.setUpTestFilters()
Métodos invocados: 
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
1209 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilterTestCase.RegexFileFilterTestCase(java.lang.String)
1209 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilterTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
1210 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilterTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
1211 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.io.File.getParentFile()
java.lang.Object.getClass()
java.lang.Class.getName()
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
1212 - Declaração do método: org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex()
Métodos invocados: 
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.util.regex.Pattern.compile(java.lang.String, I)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
junit.framework.Assert.fail()
junit.framework.Assert.fail()
junit.framework.Assert.fail()
junit.framework.Assert.fail()
1213 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.ConditionalFileFilterAbstractTestCase(java.lang.String)
1213 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getWorkingPathNamePropertyKey()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getDefaultWorkingPath()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.determineWorkingDirectoryPath(java.lang.String, java.lang.String)
1214 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testAdd()
Métodos invocados: 
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getConditionalFileFilter()
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter)
java.util.List.size()
org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters()
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.get(I)
org.apache.commons.io.filefilter.ConditionalFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters()
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters()
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.List.size()
org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters()
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1215 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testRemove()
Métodos invocados: 
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getConditionalFileFilter()
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter)
java.util.List.size()
java.util.List.get(I)
org.apache.commons.io.filefilter.ConditionalFileFilter.removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters()
java.util.List.get(I)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters()
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1216 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testNoFilters()
Métodos invocados: 
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getConditionalFileFilter()
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering(I, org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering(I, org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
1217 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor()
Métodos invocados: 
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTestFilters()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTrueResults()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFalseResults()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFileResults()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFilenameResults()
java.util.List.size()
java.util.List.get(I)
java.util.List.get(I)
java.util.List.get(I)
java.util.List.get(I)
java.lang.Boolean.booleanValue()
java.util.List.get(I)
java.lang.Boolean.booleanValue()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.buildFilterUsingConstructor(java.util.List)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering(I, org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;, [Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;, [Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering(I, org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;, [Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;, [Z)
1218 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd()
Métodos invocados: 
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTestFilters()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTrueResults()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFalseResults()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFileResults()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFilenameResults()
java.util.List.size()
java.util.List.get(I)
java.util.List.get(I)
java.util.List.get(I)
java.util.List.get(I)
java.lang.Boolean.booleanValue()
java.util.List.get(I)
java.lang.Boolean.booleanValue()
org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.buildFilterUsingAdd(java.util.List)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering(I, org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;, [Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;, [Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering(I, org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;, [Z)
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;, [Z)
1219 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getConditionalFileFilter()
1219 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.buildFilterUsingAdd(java.util.List)
1219 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.buildFilterUsingConstructor(java.util.List)
1219 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTestFilters()
1219 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTrueResults()
1219 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFalseResults()
1219 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFileResults()
1219 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFilenameResults()
1219 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getWorkingPathNamePropertyKey()
1219 - Declaração do método: org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getDefaultWorkingPath()
1219 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.FileFilterTestCase(java.lang.String)
1219 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
1220 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
1221 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.io.File.getParentFile()
java.lang.Object.getClass()
java.lang.Class.getName()
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
1222 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.or([Lorg.apache.commons.io.filefilter.IOFileFilter;)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.util.Arrays.asList([Ljava.lang.String;)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail()
junit.framework.Assert.fail()
junit.framework.Assert.fail()
1223 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
junit.framework.Assert.fail()
junit.framework.Assert.fail()
junit.framework.Assert.fail()
org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(java.lang.String, org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.fail()
1224 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
1225 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testFiles()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
1226 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.util.Arrays.asList([Ljava.lang.String;)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail()
junit.framework.Assert.fail()
junit.framework.Assert.fail()
1227 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
junit.framework.Assert.fail()
junit.framework.Assert.fail()
junit.framework.Assert.fail()
org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(java.lang.String, org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.fail()
1228 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.util.ArrayList.add(java.lang.String)
java.util.ArrayList.add(java.lang.String)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String, org.apache.commons.io.IOCase)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
1229 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArgument()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String, org.apache.commons.io.IOCase)
junit.framework.Assert.fail(java.lang.String)
1230 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArrayArgument()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
1231 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullListArgument()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
1232 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testTrue()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
1233 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testFalse()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.falseFileFilter()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
1234 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testNot()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()
org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
junit.framework.Assert.fail()
1235 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testAnd()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
junit.framework.Assert.fail()
org.apache.commons.io.filefilter.AndFileFilter.getFileFilters()
java.util.List.isEmpty()
junit.framework.Assert.assertEquals(Z, Z)
1236 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testOr()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.OrFileFilter.getFileFilters()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.apache.commons.io.filefilter.OrFileFilter.removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.OrFileFilter.setFileFilters(java.util.List)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.OrFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.filefilter.OrFileFilter.removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.OrFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail()
org.apache.commons.io.filefilter.OrFileFilter.getFileFilters()
java.util.List.isEmpty()
junit.framework.Assert.assertEquals(Z, Z)
1237 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.and([Lorg.apache.commons.io.filefilter.IOFileFilter;)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.and([Lorg.apache.commons.io.filefilter.IOFileFilter;)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.and([Lorg.apache.commons.io.filefilter.IOFileFilter;)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.and([Lorg.apache.commons.io.filefilter.IOFileFilter;)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
1238 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_or()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.or([Lorg.apache.commons.io.filefilter.IOFileFilter;)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.or([Lorg.apache.commons.io.filefilter.IOFileFilter;)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.or([Lorg.apache.commons.io.filefilter.IOFileFilter;)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.or([Lorg.apache.commons.io.filefilter.IOFileFilter;)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
1239 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard()
Métodos invocados: 
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail()
junit.framework.Assert.fail()
junit.framework.Assert.fail()
1240 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.util.Arrays.asList([Ljava.lang.String;)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertTrue(Z)
junit.framework.Assert.fail()
junit.framework.Assert.fail()
junit.framework.Assert.fail()
1241 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
junit.framework.Assert.fail()
junit.framework.Assert.fail()
1242 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
1243 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
1244 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.lang.Thread.sleep(J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.lastModified()
java.io.File.lastModified()
java.util.Date.getTime()
java.lang.Thread.sleep(J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.lastModified()
java.io.File.lastModified()
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(J)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(J, Z)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(J, Z)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.util.Date)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.util.Date, Z)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.util.Date, Z)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.io.File)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
1245 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(J)
org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(J, Z)
org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(J, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(J, J)
org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(J, J)
org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(J, J)
org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(J, J)
org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(J, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(J)
junit.framework.Assert.fail()
1246 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testHidden()
Métodos invocados: 
java.io.File.exists()
java.io.File.isHidden()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.io.File.isHidden()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
1247 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.setReadOnly()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.io.File.delete()
1248 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testCanWrite()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
java.io.File.setReadOnly()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.io.File.delete()
1249 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.FileUtils.forceDelete(java.io.File)
1250 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter)
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
java.io.File.mkdirs()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.io.File.delete()
java.io.File.delete()
1251 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly()
Métodos invocados: 
org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter)
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
java.io.File.mkdirs()
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
java.io.File.delete()
java.io.File.delete()
1252 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
org.apache.commons.io.IOUtils.write([B, java.io.OutputStream)
org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(java.io.OutputStream, J)
java.io.OutputStream.close()
org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence)
org.apache.commons.io.FileUtils.touch(java.io.File)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter([B)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
1253 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(java.io.OutputStream, J)
org.apache.commons.io.IOUtils.write([B, java.io.OutputStream)
java.io.OutputStream.close()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter([B, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
1254 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
org.apache.commons.io.IOUtils.write([B, java.io.OutputStream)
org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(java.io.OutputStream, J)
java.io.OutputStream.close()
org.apache.commons.io.FileUtils.write(java.io.File, java.lang.CharSequence)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
1255 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.mkdirs()
org.apache.commons.io.FileUtils.openOutputStream(java.io.File)
org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(java.io.OutputStream, J)
org.apache.commons.io.IOUtils.write(java.lang.String, java.io.OutputStream)
java.io.OutputStream.close()
org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(java.lang.String, J)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
1256 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter, [Ljava.io.File;)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1257 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
java.util.Arrays.asList([Ljava.io.File;)
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1258 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter, [Ljava.io.File;)
junit.framework.Assert.fail()
org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()
org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter, [Ljava.io.File;)
junit.framework.Assert.fail()
org.apache.commons.io.filefilter.FileFilterUtils.filter(org.apache.commons.io.filefilter.IOFileFilter, [Ljava.io.File;)
junit.framework.Assert.assertEquals(I, I)
1259 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
java.util.Arrays.asList([Ljava.io.File;)
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.filterList(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1260 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.filterList(org.apache.commons.io.filefilter.IOFileFilter, [Ljava.io.File;)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.List.contains(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1261 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters()
Métodos invocados: 
java.util.Collections.emptyList()
org.apache.commons.io.filefilter.FileFilterUtils.filterList(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable)
junit.framework.Assert.fail()
org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()
java.util.Arrays.asList([Ljava.io.File;)
org.apache.commons.io.filefilter.FileFilterUtils.filterList(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable)
junit.framework.Assert.fail()
org.apache.commons.io.filefilter.FileFilterUtils.filterList(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable)
java.util.List.size()
junit.framework.Assert.assertEquals(I, I)
1262 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
java.util.Arrays.asList([Ljava.io.File;)
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.filterSet(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1263 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.filterSet(org.apache.commons.io.filefilter.IOFileFilter, [Ljava.io.File;)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertTrue(Z)
java.util.Set.contains(java.lang.Object)
junit.framework.Assert.assertFalse(Z)
1264 - Declaração do método: org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters()
Métodos invocados: 
java.util.Collections.emptySet()
org.apache.commons.io.filefilter.FileFilterUtils.filterSet(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable)
junit.framework.Assert.fail()
org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter()
java.util.Arrays.asList([Ljava.io.File;)
org.apache.commons.io.filefilter.FileFilterUtils.filterSet(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable)
junit.framework.Assert.fail()
org.apache.commons.io.filefilter.FileFilterUtils.filterSet(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable)
java.util.Set.size()
junit.framework.Assert.assertEquals(I, I)
1265 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.AndFileFilterTestCase(java.lang.String)
1265 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.setUp()
Métodos invocados: 
org.apache.commons.io.filefilter.AndFileFilterTestCase.setUpTestFilters()
1266 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingAdd(java.util.List)
Métodos invocados: 
java.util.List.size()
java.util.List.get(I)
org.apache.commons.io.filefilter.AndFileFilter.addFileFilter(org.apache.commons.io.filefilter.IOFileFilter)
1267 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingConstructor(java.util.List)
1267 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.getConditionalFileFilter()
1267 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.getDefaultWorkingPath()
1267 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.getFalseResults()
1267 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.getFileResults()
1267 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.getFilenameResults()
1267 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.getTestFilters()
1267 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.getTrueResults()
1267 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.getWorkingPathNamePropertyKey()
1267 - Declaração do método: org.apache.commons.io.filefilter.AndFileFilterTestCase.setUpTestFilters()
Métodos invocados: 
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(org.apache.commons.io.filefilter.IOFileFilter)
java.util.List.add(I, java.util.List)
java.util.List.add(I, [Z)
java.util.List.add(I, [Z)
java.util.List.add(I, java.lang.Boolean)
java.util.List.add(I, java.lang.Boolean)
1268 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.IOFileFilterAbstractTestCase(java.lang.String)
1268 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering(I, org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
1269 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering(I, org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
1270 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFiltering(I, org.apache.commons.io.filefilter.IOFileFilter, java.io.File, Z)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.io.File.getParentFile()
java.lang.Object.getClass()
java.lang.Class.getName()
java.io.File.getParentFile()
java.io.File.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File, java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
java.lang.Object.getClass()
java.lang.Class.getName()
org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
1271 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;, [Z)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.isInvoked()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
1272 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked(I, [Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;, [Z)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.isInvoked()
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
1273 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.determineWorkingDirectoryPath(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.System.getProperty(java.lang.String, java.lang.String)
1274 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter;)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.reset()
1275 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters([Lorg.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter;)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.reset()
1276 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.accept(java.io.File)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.setInvoked(Z)
1277 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.setInvoked(Z)
1278 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.isInvoked()
1278 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.setInvoked(Z)
1278 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.reset()
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterTrueFileFilter.setInvoked(Z)
1279 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.accept(java.io.File)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.setInvoked(Z)
1280 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.accept(java.io.File, java.lang.String)
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.setInvoked(Z)
1281 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.isInvoked()
1281 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.setInvoked(Z)
1281 - Declaração do método: org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.reset()
Métodos invocados: 
org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase$TesterFalseFileFilter.setInvoked(Z)
1282 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest.NullInputStreamTest(java.lang.String)
1282 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest.setUp()
1282 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest.tearDown()
1282 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest.testRead()
Métodos invocados: 
java.io.InputStream.available()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.available()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.available()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.io.InputStream.close()
java.io.InputStream.available()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1283 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest.testReadByteArray()
Métodos invocados: 
java.io.InputStream.read([B)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read([B)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read([B)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read([B)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.io.InputStream.close()
java.io.InputStream.read([B, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1284 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest.testEOFException()
Métodos invocados: 
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read()
junit.framework.Assert.fail(java.lang.String)
1285 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset()
Métodos invocados: 
java.io.InputStream.markSupported()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.InputStream.reset()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.mark(I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.reset()
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.reset()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
1286 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported()
Métodos invocados: 
java.io.InputStream.markSupported()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.InputStream.mark(I)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
java.io.InputStream.reset()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
1287 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest.testSkip()
Métodos invocados: 
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.skip(J)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.skip(J)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.InputStream.skip(J)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.InputStream.skip(J)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
1288 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream.TestNullInputStream(I)
1288 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream.TestNullInputStream(I, Z, Z)
1288 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream.processByte()
Métodos invocados: 
org.apache.commons.io.input.NullInputStream.getPosition()
1289 - Declaração do método: org.apache.commons.io.input.NullInputStreamTest$TestNullInputStream.processBytes([B, I, I)
Métodos invocados: 
org.apache.commons.io.input.NullInputStream.getPosition()
1290 - Declaração do método: org.apache.commons.io.input.TeeInputStreamTest.setUp()
Métodos invocados: 
java.lang.String.getBytes(java.lang.String)
1291 - Declaração do método: org.apache.commons.io.input.TeeInputStreamTest.testReadNothing()
Métodos invocados: 
java.io.ByteArrayOutputStream.toString(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1292 - Declaração do método: org.apache.commons.io.input.TeeInputStreamTest.testReadOneByte()
Métodos invocados: 
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.ByteArrayOutputStream.toString(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1293 - Declaração do método: org.apache.commons.io.input.TeeInputStreamTest.testReadEverything()
Métodos invocados: 
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.ByteArrayOutputStream.toString(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1294 - Declaração do método: org.apache.commons.io.input.TeeInputStreamTest.testReadToArray()
Métodos invocados: 
java.io.InputStream.read([B)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read([B)
junit.framework.Assert.assertEquals(I, I)
java.io.ByteArrayOutputStream.toString(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1295 - Declaração do método: org.apache.commons.io.input.TeeInputStreamTest.testReadToArrayWithOffset()
Métodos invocados: 
java.io.InputStream.read([B, I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read([B, I, I)
junit.framework.Assert.assertEquals(I, I)
java.io.ByteArrayOutputStream.toString(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1296 - Declaração do método: org.apache.commons.io.input.TeeInputStreamTest.testSkip()
Métodos invocados: 
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.skip(J)
junit.framework.Assert.assertEquals(J, J)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.ByteArrayOutputStream.toString(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1297 - Declaração do método: org.apache.commons.io.input.TeeInputStreamTest.testMarkReset()
Métodos invocados: 
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.mark(I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.reset()
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.ByteArrayOutputStream.toString(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1298 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.CountingInputStreamTest(java.lang.String)
1298 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testCounting()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.io.input.ProxyInputStream.read([B)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.ProxyInputStream.read()
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.ProxyInputStream.read([B, I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.ProxyInputStream.read([B, I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
java.lang.String.trim()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1299 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84()
Métodos invocados: 
org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.input.CountingInputStream.resetCount()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.input.NullInputStream.close()
org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream)
org.apache.commons.io.input.CountingInputStream.getByteCount()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
org.apache.commons.io.input.CountingInputStream.resetByteCount()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
1300 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testResetting()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.io.input.ProxyInputStream.read([B, I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.resetCount()
org.apache.commons.io.input.ProxyInputStream.read([B, I, I)
junit.framework.Assert.assertEquals(I, I)
1301 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testZeroLength1()
Métodos invocados: 
org.apache.commons.io.input.ProxyInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
1302 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testZeroLength2()
Métodos invocados: 
org.apache.commons.io.input.ProxyInputStream.read([B)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
1303 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3()
Métodos invocados: 
org.apache.commons.io.input.ProxyInputStream.read([B, I, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
1304 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testEOF1()
Métodos invocados: 
org.apache.commons.io.input.ProxyInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.ProxyInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.ProxyInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
1305 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testEOF2()
Métodos invocados: 
org.apache.commons.io.input.ProxyInputStream.read([B)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
1306 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testEOF3()
Métodos invocados: 
org.apache.commons.io.input.ProxyInputStream.read([B, I, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
1307 - Declaração do método: org.apache.commons.io.input.CountingInputStreamTest.testSkipping()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.io.input.CountingInputStream.skip(J)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.ProxyInputStream.read([B)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.input.CountingInputStream.getCount()
junit.framework.Assert.assertEquals(I, I)
1308 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1309 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomInvalid(java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1310 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBom()
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(java.lang.String)
1311 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
java.lang.String.equals(java.lang.Object)
org.apache.commons.io.input.XmlStreamReader.getEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getEncoding()
java.lang.String.length()
java.lang.String.substring(I, I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1312 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getEncoding()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1313 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderTest.testRawBom()
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(java.lang.String, java.lang.String, java.lang.String)
1314 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderTest.testHttp()
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
1315 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderTest.testRawContent()
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderTest.getXML(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
java.lang.String.getBytes(java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.IOUtils.toString(java.io.Reader)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
1316 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent()
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderTest.getXML(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
java.lang.String.getBytes(java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.IOUtils.toString(java.io.Reader)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
1317 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
java.lang.String.equals(java.lang.Object)
org.apache.commons.io.input.XmlStreamReader.getEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getEncoding()
java.lang.String.length()
java.lang.String.substring(I, I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1318 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
java.lang.String.equals(java.lang.Object)
org.apache.commons.io.input.XmlStreamReader.getEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getEncoding()
java.lang.String.length()
java.lang.String.substring(I, I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1319 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.indexOf(java.lang.String)
junit.framework.Assert.assertTrue(Z)
1320 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1321 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML()
Métodos invocados: 
java.lang.String.getBytes(java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1322 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
java.io.ByteArrayOutputStream.write(I)
org.apache.commons.io.input.XmlStreamReaderTest.getXML(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
java.io.Writer.write(java.lang.String)
java.io.Writer.write(java.lang.String)
java.io.Writer.write(java.lang.String)
java.io.Writer.write(java.lang.String)
java.io.Writer.close()
java.io.ByteArrayOutputStream.toByteArray()
1323 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderTest.getXML(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
java.util.Map.get(java.lang.Object)
java.text.Format.format(java.lang.Object)
java.text.Format.format(java.lang.Object)
1324 - Declaração do método: org.apache.commons.io.input.TailerTest.TailerTest(java.lang.String)
1324 - Declaração do método: org.apache.commons.io.input.TailerTest.tearDown()
Métodos invocados: 
org.apache.commons.io.input.Tailer.stop()
java.lang.Thread.sleep(J)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
1325 - Declaração do método: org.apache.commons.io.input.TailerTest.testTailerEof()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.input.TailerTest.createFile(java.io.File, J)
java.lang.Thread.start()
org.apache.commons.io.input.TailerTest.writeString(java.io.File, java.lang.String)
java.lang.Thread.sleep(J)
org.apache.commons.io.input.TailerTest$TestTailerListener.getLines()
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.input.TailerTest.writeString(java.io.File, java.lang.String)
java.lang.Thread.sleep(J)
org.apache.commons.io.input.TailerTest$TestTailerListener.getLines()
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.get(I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.TailerTest$TestTailerListener.clear()
org.apache.commons.io.input.Tailer.stop()
java.lang.Thread.sleep(J)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
1326 - Declaração do método: org.apache.commons.io.input.TailerTest.testTailer()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.input.TailerTest.createFile(java.io.File, J)
java.lang.Thread.start()
org.apache.commons.io.input.TailerTest.write(java.io.File, [Ljava.lang.String;)
java.lang.Thread.sleep(J)
org.apache.commons.io.input.TailerTest$TestTailerListener.getLines()
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.get(I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
java.util.List.get(I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.TailerTest$TestTailerListener.clear()
org.apache.commons.io.input.TailerTest.write(java.io.File, [Ljava.lang.String;)
java.lang.Thread.sleep(J)
org.apache.commons.io.input.TailerTest$TestTailerListener.getLines()
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.get(I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.TailerTest$TestTailerListener.clear()
org.apache.commons.io.FileUtils.readLines(java.io.File)
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.get(I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
java.util.List.get(I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
java.util.List.get(I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
java.io.File.delete()
java.io.File.exists()
java.lang.System.getProperty(java.lang.String)
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.input.TailerTest.createFile(java.io.File, J)
java.lang.Thread.sleep(J)
org.apache.commons.io.input.TailerTest.write(java.io.File, [Ljava.lang.String;)
java.lang.Thread.sleep(J)
org.apache.commons.io.input.TailerTest$TestTailerListener.getLines()
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.util.List.get(I)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.TailerTest$TestTailerListener.clear()
org.apache.commons.io.input.Tailer.stop()
java.lang.Thread.interrupt()
java.lang.Thread.sleep(J)
org.apache.commons.io.input.TailerTest.write(java.io.File, [Ljava.lang.String;)
org.apache.commons.io.input.TailerTest$TestTailerListener.getLines()
java.util.List.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1327 - Declaração do método: org.apache.commons.io.input.TailerTest.createFile(java.io.File, J)
Métodos invocados: 
java.io.File.getPath()
java.lang.Thread.sleep(J)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Closeable)
1328 - Declaração do método: org.apache.commons.io.input.TailerTest.write(java.io.File, [Ljava.lang.String;)
Métodos invocados: 
java.io.Writer.write(java.lang.String)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
1329 - Declaração do método: org.apache.commons.io.input.TailerTest.writeString(java.io.File, java.lang.String)
Métodos invocados: 
java.io.Writer.write(java.lang.String)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
1330 - Declaração do método: org.apache.commons.io.input.TailerTest.testStopWithNoFile()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.input.Tailer.create(java.io.File, org.apache.commons.io.input.TailerListener, J, Z)
java.lang.Thread.sleep(J)
org.apache.commons.io.input.Tailer.stop()
java.lang.Thread.sleep(J)
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertTrue(java.lang.String, Z)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1331 - Declaração do método: org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.util.concurrent.Executor.execute(java.lang.Runnable)
java.lang.Thread.sleep(J)
org.apache.commons.io.input.Tailer.stop()
java.lang.Thread.sleep(J)
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertTrue(java.lang.String, Z)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1332 - Declaração do método: org.apache.commons.io.input.TailerTest$TestTailerListener.handle(java.lang.String)
Métodos invocados: 
java.util.List.add(java.lang.String)
1333 - Declaração do método: org.apache.commons.io.input.TailerTest$TestTailerListener.getLines()
1333 - Declaração do método: org.apache.commons.io.input.TailerTest$TestTailerListener.clear()
Métodos invocados: 
java.util.List.clear()
1334 - Declaração do método: org.apache.commons.io.input.TailerTest$TestTailerListener.handle(java.lang.Exception)
1334 - Declaração do método: org.apache.commons.io.input.TailerTest$TestTailerListener.init(org.apache.commons.io.input.Tailer)
1334 - Declaração do método: org.apache.commons.io.input.TailerTest$TestTailerListener.fileNotFound()
1334 - Declaração do método: org.apache.commons.io.input.TailerTest$TestTailerListener.fileRotated()
1334 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStreamTest.testWithSingleByteRead(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.getBytes(java.lang.String)
java.io.InputStream.read()
org.junit.Assert.assertTrue(Z)
org.junit.Assert.assertTrue(Z)
org.junit.Assert.assertEquals(J, J)
java.io.InputStream.read()
org.junit.Assert.assertEquals(J, J)
1335 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStreamTest.testWithBufferedRead(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.getBytes(java.lang.String)
java.util.Random.nextInt(I)
java.util.Random.nextInt(I)
java.io.InputStream.read([B, I, I)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertTrue(Z)
org.junit.Assert.assertTrue(Z)
org.junit.Assert.assertEquals(J, J)
1336 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStreamTest.testUTF8WithSingleByteRead()
Métodos invocados: 
org.apache.commons.io.input.CharSequenceInputStreamTest.testWithSingleByteRead(java.lang.String, java.lang.String)
1337 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeUTF8WithSingleByteRead()
Métodos invocados: 
org.apache.commons.io.input.CharSequenceInputStreamTest.testWithSingleByteRead(java.lang.String, java.lang.String)
1338 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStreamTest.testUTF8WithBufferedRead()
Métodos invocados: 
org.apache.commons.io.input.CharSequenceInputStreamTest.testWithBufferedRead(java.lang.String, java.lang.String)
1339 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeUTF8WithBufferedRead()
Métodos invocados: 
org.apache.commons.io.input.CharSequenceInputStreamTest.testWithBufferedRead(java.lang.String, java.lang.String)
1340 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStreamTest.testUTF16WithSingleByteRead()
Métodos invocados: 
org.apache.commons.io.input.CharSequenceInputStreamTest.testWithSingleByteRead(java.lang.String, java.lang.String)
1341 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero()
Métodos invocados: 
java.io.InputStream.read([B, I, I)
org.junit.Assert.assertEquals(J, J)
1342 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop()
Métodos invocados: 
java.nio.charset.Charset.forName(java.lang.String)
java.io.InputStream.read()
java.io.InputStream.close()
1343 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip()
Métodos invocados: 
java.io.InputStream.skip(J)
java.io.InputStream.skip(J)
java.io.InputStream.read()
org.junit.Assert.assertEquals(J, J)
java.io.InputStream.skip(J)
java.io.InputStream.read()
org.junit.Assert.assertEquals(J, J)
1344 - Declaração do método: org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset()
Métodos invocados: 
java.io.InputStream.skip(J)
java.io.InputStream.mark(I)
java.io.InputStream.read()
org.junit.Assert.assertEquals(J, J)
java.io.InputStream.read()
org.junit.Assert.assertEquals(J, J)
java.io.InputStream.read()
org.junit.Assert.assertEquals(J, J)
java.io.InputStream.reset()
java.io.InputStream.read()
org.junit.Assert.assertEquals(J, J)
java.io.InputStream.read()
org.junit.Assert.assertEquals(J, J)
java.io.InputStream.read()
org.junit.Assert.assertEquals(J, J)
java.io.InputStream.reset()
java.io.InputStream.reset()
1345 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
Métodos invocados: 
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
1346 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.assertData([B, [B, I, I)
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, B, B)
1347 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream.close()
1347 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream.read()
1347 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream.assertCloseCalled()
Métodos invocados: 
junit.framework.Assert.assertTrue(Z)
1348 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testSupportCode()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
java.io.InputStream.read([B)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStreamTest.assertData([B, [B, I, I)
1349 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.hasBOM()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.input.BOMInputStream.getBOM()
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
1350 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.hasBOM()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.input.BOMInputStream.getBOM()
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
1351 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testReadSmall()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.hasBOM()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.input.BOMInputStream.getBOM()
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
1352 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.hasBOM()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.input.BOMInputStream.getBOM()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)
1353 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
org.apache.commons.io.input.BOMInputStream.getBOM()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
org.apache.commons.io.input.BOMInputStream.hasBOM()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
1354 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.hasBOM()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.input.BOMInputStream.getBOM()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
1355 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
org.apache.commons.io.input.BOMInputStream.hasBOM()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.input.BOMInputStream.getBOM()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
1356 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.read()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.BOMInputStream.hasBOM()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.input.BOMInputStream.hasBOM(org.apache.commons.io.ByteOrderMark)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.input.BOMInputStream.getBOM()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
1357 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
java.io.InputStream.read([B)
junit.framework.Assert.assertEquals(I, I)
1358 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
java.io.InputStream.read([B)
junit.framework.Assert.assertEquals(I, I)
1359 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithoutBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
java.io.InputStream.read([B)
org.apache.commons.io.input.BOMInputStreamTest.assertData([B, [B, I, I)
1360 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
java.io.InputStream.read([B)
org.apache.commons.io.input.BOMInputStreamTest.assertData([B, [B, I, I)
1361 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
java.io.InputStream.read([B, I, I)
org.apache.commons.io.input.BOMInputStreamTest.assertData([B, [B, I, I)
java.io.InputStream.read([B, I, I)
org.apache.commons.io.input.BOMInputStreamTest.assertData([B, [B, I, I)
1362 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
java.io.InputStream.read([B, I, I)
org.apache.commons.io.input.BOMInputStreamTest.assertData([B, [B, I, I)
java.io.InputStream.read([B, I, I)
org.apache.commons.io.input.BOMInputStreamTest.assertData([B, [B, I, I)
1363 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
1364 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMBufferedRead()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
java.io.InputStream.read([B)
org.apache.commons.io.input.BOMInputStreamTest.assertData([B, [B, I, I)
1365 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
java.io.InputStream.skip(J)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
1366 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testSkipWithBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
java.io.InputStream.skip(J)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
1367 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithoutBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
java.io.InputStream.markSupported()
junit.framework.Assert.assertTrue(Z)
java.io.InputStream.read()
java.io.InputStream.mark(I)
java.io.InputStream.read()
java.io.InputStream.read()
java.io.InputStream.reset()
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
1368 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
java.io.InputStream.markSupported()
junit.framework.Assert.assertTrue(Z)
java.io.InputStream.read()
java.io.InputStream.mark(I)
java.io.InputStream.read()
java.io.InputStream.read()
java.io.InputStream.reset()
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
1369 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithoutBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
java.io.InputStream.markSupported()
junit.framework.Assert.assertTrue(Z)
java.io.InputStream.mark(I)
java.io.InputStream.read()
java.io.InputStream.read()
java.io.InputStream.reset()
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
1370 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
java.io.InputStream.markSupported()
junit.framework.Assert.assertTrue(Z)
java.io.InputStream.mark(I)
java.io.InputStream.read()
java.io.InputStream.read()
java.io.InputStream.reset()
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
1371 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithoutBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
java.io.InputStream.available()
junit.framework.Assert.assertEquals(I, I)
1372 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
java.io.InputStream.available()
junit.framework.Assert.assertEquals(I, I)
1373 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testNoBoms()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.input.BOMInputStreamTest.createDataStream([B, Z)
junit.framework.Assert.fail(java.lang.String)
1374 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithoutBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(java.lang.String)
1375 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithBOM()
Métodos invocados: 
org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(java.lang.String)
1376 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(java.lang.String)
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getResourceAsStream(java.lang.String)
org.junit.Assert.assertNotNull(java.lang.Object)
org.apache.commons.io.input.BOMInputStream.mark(I)
org.apache.commons.io.input.BOMInputStreamTest.readFile(org.apache.commons.io.input.BOMInputStream)
org.apache.commons.io.input.BOMInputStream.reset()
org.apache.commons.io.input.BOMInputStreamTest.readFile(org.apache.commons.io.input.BOMInputStream)
1377 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.readFile(org.apache.commons.io.input.BOMInputStream)
Métodos invocados: 
org.apache.commons.io.input.BOMInputStream.read([B)
1378 - Declaração do método: org.apache.commons.io.input.BOMInputStreamTest.testClose()
Métodos invocados: 
java.io.InputStream.close()
org.apache.commons.io.input.BOMInputStreamTest$ExpectCloseInputStream.assertCloseCalled()
1379 - Declaração do método: org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.ClassLoaderObjectInputStreamTest(java.lang.String)
1379 - Declaração do método: org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testExpected()
Métodos invocados: 
java.io.ObjectOutputStream.writeObject(java.lang.Object)
java.io.ByteArrayOutputStream.toByteArray()
java.lang.Object.getClass()
java.lang.Class.getClassLoader()
java.io.ObjectInputStream.readObject()
java.lang.Boolean.booleanValue()
junit.framework.Assert.assertTrue(Z)
1380 - Declaração do método: org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testResolveProxyClass()
Métodos invocados: 
java.io.ObjectOutputStream.writeObject(java.lang.Object)
java.io.ByteArrayOutputStream.toByteArray()
java.lang.Object.getClass()
java.lang.Class.getClassLoader()
java.lang.Class.getName()
org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveProxyClass([Ljava.lang.String;)
java.lang.Class.isAssignableFrom(java.lang.Class)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1381 - Declaração do método: org.apache.commons.io.input.BrokenInputStreamTest.setUp()
1381 - Declaração do método: org.apache.commons.io.input.BrokenInputStreamTest.testRead()
Métodos invocados: 
java.io.InputStream.read()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.io.InputStream.read([B)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.io.InputStream.read([B, I, I)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1382 - Declaração do método: org.apache.commons.io.input.BrokenInputStreamTest.testAvailable()
Métodos invocados: 
java.io.InputStream.available()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1383 - Declaração do método: org.apache.commons.io.input.BrokenInputStreamTest.testSkip()
Métodos invocados: 
java.io.InputStream.skip(J)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1384 - Declaração do método: org.apache.commons.io.input.BrokenInputStreamTest.testReset()
Métodos invocados: 
java.io.InputStream.reset()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1385 - Declaração do método: org.apache.commons.io.input.BrokenInputStreamTest.testClose()
Métodos invocados: 
java.io.InputStream.close()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1386 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.SwappedDataInputStreamTest(java.lang.String)
1386 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.setUp()
1386 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.tearDown()
1386 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readBoolean()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.input.SwappedDataInputStream.readBoolean()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.input.SwappedDataInputStream.readBoolean()
junit.framework.Assert.assertEquals(Z, Z)
1387 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadByte()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readByte()
junit.framework.Assert.assertEquals(I, I)
1388 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadChar()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readChar()
junit.framework.Assert.assertEquals(C, C)
1389 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadDouble()
Métodos invocados: 
java.lang.Double.longBitsToDouble(J)
org.apache.commons.io.input.SwappedDataInputStream.readDouble()
junit.framework.Assert.assertEquals(D, D, D)
1390 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFloat()
Métodos invocados: 
java.lang.Float.intBitsToFloat(I)
org.apache.commons.io.input.SwappedDataInputStream.readFloat()
junit.framework.Assert.assertEquals(F, F, F)
1391 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readFully([B)
junit.framework.Assert.assertEquals(B, B)
1392 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadInt()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readInt()
junit.framework.Assert.assertEquals(I, I)
1393 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLine()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readLine()
junit.framework.Assert.fail(java.lang.String)
1394 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readLong()
junit.framework.Assert.assertEquals(J, J)
1395 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadShort()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readShort()
junit.framework.Assert.assertEquals(S, S)
1396 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedByte()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readUnsignedByte()
junit.framework.Assert.assertEquals(I, I)
1397 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readUnsignedShort()
junit.framework.Assert.assertEquals(I, I)
1398 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUTF()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.readUTF()
junit.framework.Assert.fail(java.lang.String)
1399 - Declaração do método: org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes()
Métodos invocados: 
org.apache.commons.io.input.SwappedDataInputStream.skipBytes(I)
org.apache.commons.io.input.SwappedDataInputStream.readInt()
junit.framework.Assert.assertEquals(I, I)
1400 - Declaração do método: org.apache.commons.io.input.BoundedInputStreamTest.BoundedInputStreamTest(java.lang.String)
1400 - Declaração do método: org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle()
Métodos invocados: 
java.lang.String.getBytes()
java.lang.String.getBytes()
org.apache.commons.io.input.BoundedInputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.input.BoundedInputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.input.BoundedInputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.input.BoundedInputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.input.BoundedInputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.input.BoundedInputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1401 - Declaração do método: org.apache.commons.io.input.BoundedInputStreamTest.testReadArray()
Métodos invocados: 
java.lang.String.getBytes()
java.lang.String.getBytes()
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
org.apache.commons.io.input.BoundedInputStreamTest.compare(java.lang.String, [B, [B)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
org.apache.commons.io.input.BoundedInputStreamTest.compare(java.lang.String, [B, [B)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
org.apache.commons.io.input.BoundedInputStreamTest.compare(java.lang.String, [B, [B)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
org.apache.commons.io.input.BoundedInputStreamTest.compare(java.lang.String, [B, [B)
org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)
org.apache.commons.io.input.BoundedInputStreamTest.compare(java.lang.String, [B, [B)
1402 - Declaração do método: org.apache.commons.io.input.BoundedInputStreamTest.compare(java.lang.String, [B, [B)
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, B, B)
1403 - Declaração do método: org.apache.commons.io.input.ClosedInputStreamTest.testRead()
Métodos invocados: 
org.apache.commons.io.input.ClosedInputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1404 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.blockSizes()
Métodos invocados: 
java.util.Arrays.asList([[Ljava.lang.Integer;)
1405 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.ReversedLinesFileReaderTestParamBlockSize(java.lang.Integer)
Métodos invocados: 
java.lang.Integer.intValue()
1406 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.closeReader()
Métodos invocados: 
org.apache.commons.io.input.ReversedLinesFileReader.close()
1407 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileDefaults()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
java.net.URL.toURI()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(org.apache.commons.io.input.ReversedLinesFileReader)
1408 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaks()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
java.net.URL.toURI()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(org.apache.commons.io.input.ReversedLinesFileReader)
1409 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileCRBreaks()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
java.net.URL.toURI()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(org.apache.commons.io.input.ReversedLinesFileReader)
1410 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8File()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
java.net.URL.toURI()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(org.apache.commons.io.input.ReversedLinesFileReader)
1411 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testEmptyFile()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
java.net.URL.toURI()
org.apache.commons.io.input.ReversedLinesFileReader.readLine()
org.junit.Assert.assertNull(java.lang.Object)
1412 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16BEFile()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
java.net.URL.toURI()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(org.apache.commons.io.input.ReversedLinesFileReader)
1413 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16LEFile()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
java.net.URL.toURI()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(org.apache.commons.io.input.ReversedLinesFileReader)
1414 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testShiftJISFile()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
java.net.URL.toURI()
org.apache.commons.io.input.ReversedLinesFileReader.readLine()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String, java.lang.String)
org.apache.commons.io.input.ReversedLinesFileReader.readLine()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String, java.lang.String)
1415 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testFileSizeIsExactMultipleOfBlockSize()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
java.net.URL.toURI()
org.apache.commons.io.input.ReversedLinesFileReader.readLine()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String, java.lang.String)
org.apache.commons.io.input.ReversedLinesFileReader.readLine()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String, java.lang.String)
1416 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
java.net.URL.toURI()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(org.apache.commons.io.input.ReversedLinesFileReader)
1417 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
java.net.URL.toURI()
org.apache.commons.io.input.ReversedLinesFileReader.readLine()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String, java.lang.String)
org.apache.commons.io.input.ReversedLinesFileReader.readLine()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String, java.lang.String)
1418 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingUTF16()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
java.net.URL.toURI()
1419 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingBig5()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
java.net.URL.toURI()
1420 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(org.apache.commons.io.input.ReversedLinesFileReader)
Métodos invocados: 
org.apache.commons.io.input.ReversedLinesFileReader.readLine()
java.lang.String.substring(I, I)
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String, java.lang.String, java.lang.String)
1421 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.contains(java.lang.CharSequence)
org.junit.Assert.assertFalse(java.lang.String, Z)
java.lang.String.contains(java.lang.CharSequence)
org.junit.Assert.assertFalse(java.lang.String, Z)
org.junit.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
1422 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String, java.lang.String, java.lang.String)
1423 - Declaração do método: org.apache.commons.io.input.ProxyReaderTest.ProxyReaderTest(java.lang.String)
1423 - Declaração do método: org.apache.commons.io.input.ProxyReaderTest.testNullCharArray()
Métodos invocados: 
org.apache.commons.io.input.ProxyReader.read([C)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.input.ProxyReader.read([C, I, I)
junit.framework.Assert.fail(java.lang.String)
1424 - Declaração do método: org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer()
Métodos invocados: 
org.apache.commons.io.input.ProxyReader.read(java.nio.CharBuffer)
junit.framework.Assert.fail(java.lang.String)
1425 - Declaração do método: org.apache.commons.io.input.ProxyReaderTest$ProxyReaderImpl.ProxyReaderImpl(java.io.Reader)
1425 - Declaração do método: org.apache.commons.io.input.ProxyReaderTest$CustomNullReader.CustomNullReader(I)
1425 - Declaração do método: org.apache.commons.io.input.ProxyReaderTest$CustomNullReader.read([C)
1425 - Declaração do método: org.apache.commons.io.input.ProxyReaderTest$CustomNullReader.read(java.nio.CharBuffer)
1425 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.closeReader()
Métodos invocados: 
org.apache.commons.io.input.ReversedLinesFileReader.close()
1426 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testFileSizeIsExactMultipleOfBlockSize()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
java.net.URL.toURI()
org.apache.commons.io.input.ReversedLinesFileReader.readLine()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String, java.lang.String)
org.apache.commons.io.input.ReversedLinesFileReader.readLine()
org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(java.lang.String, java.lang.String)
1427 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingUTF16()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
java.net.URL.toURI()
1428 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingBig5()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
java.net.URL.toURI()
1429 - Declaração do método: org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.getBytes(java.lang.String)
org.apache.commons.io.input.ReaderInputStream.read()
org.junit.Assert.assertTrue(Z)
org.junit.Assert.assertTrue(Z)
org.junit.Assert.assertEquals(J, J)
org.apache.commons.io.input.ReaderInputStream.read()
org.junit.Assert.assertEquals(J, J)
1430 - Declaração do método: org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.getBytes(java.lang.String)
java.util.Random.nextInt(I)
java.util.Random.nextInt(I)
org.apache.commons.io.input.ReaderInputStream.read([B, I, I)
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertTrue(Z)
org.junit.Assert.assertTrue(Z)
org.junit.Assert.assertEquals(J, J)
1431 - Declaração do método: org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithSingleByteRead()
Métodos invocados: 
org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead(java.lang.String, java.lang.String)
1432 - Declaração do método: org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithSingleByteRead()
Métodos invocados: 
org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead(java.lang.String, java.lang.String)
1433 - Declaração do método: org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithBufferedRead()
Métodos invocados: 
org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead(java.lang.String, java.lang.String)
1434 - Declaração do método: org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithBufferedRead()
Métodos invocados: 
org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead(java.lang.String, java.lang.String)
1435 - Declaração do método: org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead()
Métodos invocados: 
org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead(java.lang.String, java.lang.String)
1436 - Declaração do método: org.apache.commons.io.input.ReaderInputStreamTest.testReadZero()
Métodos invocados: 
org.apache.commons.io.input.ReaderInputStream.read([B, I, I)
org.junit.Assert.assertEquals(J, J)
1437 - Declaração do método: org.apache.commons.io.input.ReaderInputStreamTest.testCharsetMismatchInfiniteLoop()
Métodos invocados: 
java.nio.charset.Charset.forName(java.lang.String)
org.apache.commons.io.input.ReaderInputStream.read()
org.apache.commons.io.input.ReaderInputStream.close()
1438 - Declaração do método: org.apache.commons.io.input.TaggedInputStreamTest.testEmptyStream()
Métodos invocados: 
java.io.InputStream.available()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read([B)
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read([B, I, I)
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.close()
junit.framework.Assert.fail(java.lang.String)
1439 - Declaração do método: org.apache.commons.io.input.TaggedInputStreamTest.testNormalStream()
Métodos invocados: 
java.io.InputStream.available()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read([B)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read([B, I, I)
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(I, I)
java.io.InputStream.close()
junit.framework.Assert.fail(java.lang.String)
1440 - Declaração do método: org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream()
Métodos invocados: 
org.apache.commons.io.input.ProxyInputStream.available()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.input.TaggedInputStream.isCauseOf(java.lang.Throwable)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf(java.lang.Throwable)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.apache.commons.io.input.ProxyInputStream.read()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.input.TaggedInputStream.isCauseOf(java.lang.Throwable)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf(java.lang.Throwable)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.apache.commons.io.input.ProxyInputStream.close()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.input.TaggedInputStream.isCauseOf(java.lang.Throwable)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf(java.lang.Throwable)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1441 - Declaração do método: org.apache.commons.io.input.TaggedInputStreamTest.testOtherException()
Métodos invocados: 
org.apache.commons.io.input.TaggedInputStream.isCauseOf(java.lang.Throwable)
junit.framework.Assert.assertFalse(Z)
java.util.UUID.randomUUID()
org.apache.commons.io.input.TaggedInputStream.isCauseOf(java.lang.Throwable)
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf(java.lang.Throwable)
junit.framework.Assert.fail(java.lang.String)
java.util.UUID.randomUUID()
org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf(java.lang.Throwable)
junit.framework.Assert.fail(java.lang.String)
1442 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStreamTest.setUp()
1442 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStreamTest$1.close()
1442 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStreamTest.testClose()
Métodos invocados: 
java.io.InputStream.close()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1443 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStreamTest.testRead()
Métodos invocados: 
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertTrue(java.lang.String, Z)
1444 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBuffer()
Métodos invocados: 
java.io.InputStream.read([B)
junit.framework.Assert.assertFalse(java.lang.String, Z)
junit.framework.Assert.assertEquals(java.lang.String, B, B)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.InputStream.read([B)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1445 - Declaração do método: org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBufferOffsetLength()
Métodos invocados: 
java.io.InputStream.read([B, I, I)
junit.framework.Assert.assertFalse(java.lang.String, Z)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, B, B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.InputStream.read([B, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1446 - Declaração do método: org.apache.commons.io.input.CloseShieldInputStreamTest.setUp()
1446 - Declaração do método: org.apache.commons.io.input.CloseShieldInputStreamTest$1.close()
1446 - Declaração do método: org.apache.commons.io.input.CloseShieldInputStreamTest.testClose()
Métodos invocados: 
java.io.InputStream.close()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.InputStream.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1447 - Declaração do método: org.apache.commons.io.input.NullReaderTest.NullReaderTest(java.lang.String)
1447 - Declaração do método: org.apache.commons.io.input.NullReaderTest.setUp()
1447 - Declaração do método: org.apache.commons.io.input.NullReaderTest.tearDown()
1447 - Declaração do método: org.apache.commons.io.input.NullReaderTest.testRead()
Métodos invocados: 
org.apache.commons.io.input.NullReader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.input.NullReader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.input.NullReader.read()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.input.NullReader.close()
org.apache.commons.io.input.NullReader.getPosition()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
1448 - Declaração do método: org.apache.commons.io.input.NullReaderTest.testReadCharArray()
Métodos invocados: 
java.io.Reader.read([C)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.read([C)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.read([C)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.read([C)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.io.Reader.close()
java.io.Reader.read([C, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1449 - Declaração do método: org.apache.commons.io.input.NullReaderTest.testEOFException()
Métodos invocados: 
java.io.Reader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.read()
junit.framework.Assert.fail(java.lang.String)
1450 - Declaração do método: org.apache.commons.io.input.NullReaderTest.testMarkAndReset()
Métodos invocados: 
java.io.Reader.markSupported()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.Reader.reset()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
java.io.Reader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.mark(I)
java.io.Reader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.reset()
java.io.Reader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.reset()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
1451 - Declaração do método: org.apache.commons.io.input.NullReaderTest.testMarkNotSupported()
Métodos invocados: 
java.io.Reader.markSupported()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.Reader.mark(I)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
java.io.Reader.reset()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
1452 - Declaração do método: org.apache.commons.io.input.NullReaderTest.testSkip()
Métodos invocados: 
java.io.Reader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.skip(J)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.Reader.read()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
java.io.Reader.skip(J)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.Reader.skip(J)
junit.framework.Assert.assertEquals(java.lang.String, J, J)
java.io.Reader.skip(J)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
1453 - Declaração do método: org.apache.commons.io.input.NullReaderTest$TestNullReader.TestNullReader(I)
1453 - Declaração do método: org.apache.commons.io.input.NullReaderTest$TestNullReader.TestNullReader(I, Z, Z)
1453 - Declaração do método: org.apache.commons.io.input.NullReaderTest$TestNullReader.processChar()
Métodos invocados: 
org.apache.commons.io.input.NullReader.getPosition()
1454 - Declaração do método: org.apache.commons.io.input.NullReaderTest$TestNullReader.processChars([C, I, I)
Métodos invocados: 
org.apache.commons.io.input.NullReader.getPosition()
1455 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.setUp()
1455 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testContentTypeEncoding()
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(java.lang.String, java.lang.String)
1456 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
1457 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testContentTypeMime()
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeMime(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeMime(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeMime(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeMime(java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeMime(java.lang.String, java.lang.String)
1458 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeMime(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReader.getContentTypeMime(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
1459 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testAppXml()
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(Z, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(Z, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(Z, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(Z, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(Z, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(Z, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(Z, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(Z, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(Z, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(Z, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(Z, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(Z, java.lang.String)
1460 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(Z, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReader.isAppXml(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
1461 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testTextXml()
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml(Z, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml(Z, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml(Z, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml(Z, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml(Z, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml(Z, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml(Z, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml(Z, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml(Z, java.lang.String)
1462 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml(Z, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReader.isTextXml(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, Z, Z)
1463 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM()
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
1464 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard()
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(java.lang.String, java.lang.String, java.lang.String)
1465 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
1466 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalkUTF16()
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
1467 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
java.lang.StringBuilder.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
1468 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String, java.lang.String, java.lang.String)
1469 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.lang.Throwable.getMessage()
java.lang.Throwable.getMessage()
java.lang.String.endsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.input.XmlStreamReaderException.getBomEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderException.getXmlGuessEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding()
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
org.apache.commons.io.input.XmlStreamReaderException.getContentTypeMime()
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
junit.framework.Assert.fail(java.lang.String)
1470 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding()
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
1471 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(Z)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateHttpEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, Z, java.lang.String)
java.lang.StringBuilder.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
1472 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateHttpEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, Z, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, Z)
1473 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(java.lang.String, Z, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.lang.Throwable.getMessage()
java.lang.Throwable.getMessage()
java.lang.String.endsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.input.XmlStreamReaderException.getBomEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderException.getXmlGuessEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding(java.lang.String)
org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.input.XmlStreamReader.getContentTypeMime(java.lang.String)
org.apache.commons.io.input.XmlStreamReaderException.getContentTypeMime()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
junit.framework.Assert.fail(java.lang.String)
1474 - Declaração do método: org.apache.commons.io.input.XmlStreamReaderUtilitiesTest$MockXmlStreamReader.MockXmlStreamReader(java.lang.String)
Métodos invocados: 
java.lang.String.getBytes()
1475 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.blockSizes()
Métodos invocados: 
java.lang.Integer.valueOf(I)
java.lang.Integer.valueOf(I)
java.lang.Integer.valueOf(I)
java.lang.Integer.valueOf(I)
java.util.Arrays.asList([[Ljava.lang.Object;)
1476 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.ReversedLinesFileReaderTestParamFile(java.lang.String, java.lang.String, java.lang.Integer)
Métodos invocados: 
java.lang.Integer.intValue()
1477 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.testDataIntegrityWithBufferedReader()
Métodos invocados: 
java.lang.Object.getClass()
java.lang.Class.getResource(java.lang.String)
java.net.URL.toURI()
java.io.BufferedReader.readLine()
java.util.Stack.push(java.lang.String)
org.apache.commons.io.input.ReversedLinesFileReader.readLine()
java.util.Stack.pop()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
1478 - Declaração do método: org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.closeReader()
Métodos invocados: 
java.io.BufferedReader.close()
org.apache.commons.io.input.ReversedLinesFileReader.close()
1479 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.CharSequenceReaderTest(java.lang.String)
1479 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.testClose()
Métodos invocados: 
org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader, java.lang.String)
java.io.Reader.close()
org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader, java.lang.String)
1480 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.testMarkSupported()
Métodos invocados: 
java.io.Reader.markSupported()
junit.framework.Assert.assertTrue(Z)
1481 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.testMark()
Métodos invocados: 
org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader, java.lang.String)
java.io.Reader.mark(I)
org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader, java.lang.String)
java.io.Reader.reset()
org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader, java.lang.String)
java.io.Reader.close()
org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader, java.lang.String)
java.io.Reader.reset()
org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader, java.lang.String)
1482 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.testSkip()
Métodos invocados: 
java.io.Reader.skip(J)
junit.framework.Assert.assertEquals(J, J)
org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader, java.lang.String)
java.io.Reader.skip(J)
junit.framework.Assert.assertEquals(J, J)
java.io.Reader.reset()
java.io.Reader.skip(J)
junit.framework.Assert.assertEquals(J, J)
java.io.Reader.skip(J)
junit.framework.Assert.assertEquals(J, J)
java.io.Reader.skip(J)
junit.framework.Assert.assertEquals(J, J)
java.io.Reader.close()
java.io.Reader.skip(J)
junit.framework.Assert.assertEquals(J, J)
java.io.Reader.read()
junit.framework.Assert.assertEquals(I, I)
1483 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.testRead()
Métodos invocados: 
java.io.Reader.read()
junit.framework.Assert.assertEquals(I, I)
java.io.Reader.read()
junit.framework.Assert.assertEquals(I, I)
java.io.Reader.read()
junit.framework.Assert.assertEquals(I, I)
java.io.Reader.read()
junit.framework.Assert.assertEquals(I, I)
java.io.Reader.read()
junit.framework.Assert.assertEquals(I, I)
1484 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray()
Métodos invocados: 
java.io.Reader.read([C)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CharSequenceReaderTest.checkArray([C, [C)
java.io.Reader.read([C)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CharSequenceReaderTest.checkArray([C, [C)
java.io.Reader.read([C)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CharSequenceReaderTest.checkArray([C, [C)
java.io.Reader.read([C)
junit.framework.Assert.assertEquals(I, I)
1485 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion()
Métodos invocados: 
java.io.Reader.read([C, I, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CharSequenceReaderTest.checkArray([C, [C)
java.io.Reader.read([C, I, I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.input.CharSequenceReaderTest.checkArray([C, [C)
java.io.Reader.read([C)
junit.framework.Assert.assertEquals(I, I)
1486 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.checkRead(java.io.Reader, java.lang.String)
Métodos invocados: 
java.lang.String.length()
java.lang.String.charAt(I)
java.io.Reader.read()
junit.framework.Assert.assertEquals(java.lang.String, C, C)
1487 - Declaração do método: org.apache.commons.io.input.CharSequenceReaderTest.checkArray([C, [C)
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.String, C, C)
1488 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReaderException.XmlStreamReaderException(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.io.InputStream)
1488 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReaderException.XmlStreamReaderException(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.io.InputStream)
1488 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReaderException.getInputStream()
1488 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.io.InputStream)
1489 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateHttpEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, Z, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeMime(java.lang.String)
org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeEncoding(java.lang.String)
org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.io.InputStream, Z)
1490 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest$MockXmlStreamReader.MockXmlStreamReader(java.lang.String)
Métodos invocados: 
java.lang.String.getBytes()
1491 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.setDefaultEncoding(java.lang.String)
1491 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.getDefaultEncoding()
1491 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(java.io.File)
1491 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(java.io.InputStream)
1491 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(java.io.InputStream, Z)
Métodos invocados: 
org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(java.io.InputStream, Z)
org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(java.lang.String, org.apache.commons.io.input.compatibility.XmlStreamReaderException)
1492 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(java.net.URL)
Métodos invocados: 
java.net.URL.openConnection()
1493 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(java.net.URLConnection)
Métodos invocados: 
java.net.URLConnection.getInputStream()
java.net.URLConnection.getContentType()
org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(java.io.InputStream, java.lang.String, Z)
java.net.URLConnection.getContentType()
org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(java.lang.String, org.apache.commons.io.input.compatibility.XmlStreamReaderException)
java.net.URLConnection.getContentType()
java.net.URLConnection.getInputStream()
java.net.URLConnection.getContentType()
org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(java.io.InputStream, java.lang.String, Z)
java.net.URLConnection.getContentType()
org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(java.lang.String, org.apache.commons.io.input.compatibility.XmlStreamReaderException)
java.net.URLConnection.getInputStream()
org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(java.io.InputStream, Z)
org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(java.lang.String, org.apache.commons.io.input.compatibility.XmlStreamReaderException)
1494 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(java.io.InputStream, java.lang.String)
1494 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(java.io.InputStream, java.lang.String, Z, java.lang.String)
Métodos invocados: 
org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(java.io.InputStream, java.lang.String, Z)
org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(java.lang.String, org.apache.commons.io.input.compatibility.XmlStreamReaderException)
1495 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(java.io.InputStream, java.lang.String, Z)
1495 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(java.lang.String, org.apache.commons.io.input.compatibility.XmlStreamReaderException)
Métodos invocados: 
java.lang.String.startsWith(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I)
org.apache.commons.io.input.compatibility.XmlStreamReaderException.getInputStream()
org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(java.io.InputStream, java.lang.String, Z)
org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding()
org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding()
org.apache.commons.io.input.compatibility.XmlStreamReaderException.getInputStream()
org.apache.commons.io.input.compatibility.XmlStreamReader.prepareReader(java.io.InputStream, java.lang.String)
1496 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.getEncoding()
1496 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.read([C, I, I)
Métodos invocados: 
java.io.Reader.read([C, I, I)
1497 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.close()
Métodos invocados: 
java.io.Reader.close()
1498 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(java.io.InputStream, Z)
Métodos invocados: 
org.apache.commons.io.input.compatibility.XmlStreamReader.getBOMEncoding(java.io.BufferedInputStream)
org.apache.commons.io.input.compatibility.XmlStreamReader.getXMLGuessEncoding(java.io.BufferedInputStream)
org.apache.commons.io.input.compatibility.XmlStreamReader.getXmlProlog(java.io.BufferedInputStream, java.lang.String)
org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.io.InputStream)
org.apache.commons.io.input.compatibility.XmlStreamReader.prepareReader(java.io.InputStream, java.lang.String)
1499 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(java.io.InputStream, java.lang.String, Z)
Métodos invocados: 
org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeMime(java.lang.String)
org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeEncoding(java.lang.String)
org.apache.commons.io.input.compatibility.XmlStreamReader.getBOMEncoding(java.io.BufferedInputStream)
org.apache.commons.io.input.compatibility.XmlStreamReader.getXMLGuessEncoding(java.io.BufferedInputStream)
org.apache.commons.io.input.compatibility.XmlStreamReader.getXmlProlog(java.io.BufferedInputStream, java.lang.String)
org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.io.InputStream, Z)
org.apache.commons.io.input.compatibility.XmlStreamReader.prepareReader(java.io.InputStream, java.lang.String)
1500 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.prepareReader(java.io.InputStream, java.lang.String)
1500 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.io.InputStream)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.text.Format.format(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.text.Format.format(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.text.Format.format(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.text.Format.format(java.lang.Object)
java.text.Format.format(java.lang.Object)
1501 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.io.InputStream, Z)
Métodos invocados: 
org.apache.commons.io.input.compatibility.XmlStreamReader.isAppXml(java.lang.String)
org.apache.commons.io.input.compatibility.XmlStreamReader.isTextXml(java.lang.String)
org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.io.InputStream)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.text.Format.format(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.startsWith(java.lang.String)
java.text.Format.format(java.lang.Object)
java.text.Format.format(java.lang.Object)
1502 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeMime(java.lang.String)
Métodos invocados: 
java.lang.String.indexOf(java.lang.String)
java.lang.String.substring(I, I)
java.lang.String.trim()
1503 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeEncoding(java.lang.String)
Métodos invocados: 
java.lang.String.indexOf(java.lang.String)
java.lang.String.substring(I)
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.util.regex.Matcher.find()
java.util.regex.Matcher.group(I)
java.lang.String.toUpperCase()
1504 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.getBOMEncoding(java.io.BufferedInputStream)
Métodos invocados: 
java.io.BufferedInputStream.mark(I)
java.io.BufferedInputStream.read()
java.io.BufferedInputStream.read()
java.io.BufferedInputStream.read()
java.io.BufferedInputStream.reset()
java.io.BufferedInputStream.read()
java.io.BufferedInputStream.read()
java.io.BufferedInputStream.reset()
java.io.BufferedInputStream.read()
java.io.BufferedInputStream.read()
java.io.BufferedInputStream.reset()
1505 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.getXMLGuessEncoding(java.io.BufferedInputStream)
Métodos invocados: 
java.io.BufferedInputStream.mark(I)
java.io.BufferedInputStream.read()
java.io.BufferedInputStream.read()
java.io.BufferedInputStream.read()
java.io.BufferedInputStream.read()
java.io.BufferedInputStream.reset()
1506 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.getXmlProlog(java.io.BufferedInputStream, java.lang.String)
Métodos invocados: 
java.io.BufferedInputStream.mark(I)
java.io.BufferedInputStream.read([B, I, I)
java.io.BufferedInputStream.read([B, I, I)
java.lang.String.indexOf(I)
java.io.BufferedInputStream.reset()
java.lang.String.substring(I, I)
java.io.BufferedReader.readLine()
java.lang.StringBuffer.append(java.lang.String)
java.io.BufferedReader.readLine()
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.util.regex.Matcher.find()
java.util.regex.Matcher.group(I)
java.lang.String.toUpperCase()
java.lang.String.length()
java.lang.String.substring(I, I)
1507 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.isAppXml(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.startsWith(java.lang.String)
java.lang.String.endsWith(java.lang.String)
1508 - Declaração do método: org.apache.commons.io.input.compatibility.XmlStreamReader.isTextXml(java.lang.String)
Métodos invocados: 
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.startsWith(java.lang.String)
java.lang.String.endsWith(java.lang.String)
1509 - Declaração do método: org.apache.commons.io.monitor.CollectionFileListener.CollectionFileListener(Z)
1509 - Declaração do método: org.apache.commons.io.monitor.CollectionFileListener.onStart(org.apache.commons.io.monitor.FileAlterationObserver)
Métodos invocados: 
org.apache.commons.io.monitor.CollectionFileListener.clear()
1510 - Declaração do método: org.apache.commons.io.monitor.CollectionFileListener.clear()
Métodos invocados: 
java.util.Collection.clear()
java.util.Collection.clear()
java.util.Collection.clear()
java.util.Collection.clear()
java.util.Collection.clear()
java.util.Collection.clear()
1511 - Declaração do método: org.apache.commons.io.monitor.CollectionFileListener.getChangedDirectories()
1511 - Declaração do método: org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles()
1511 - Declaração do método: org.apache.commons.io.monitor.CollectionFileListener.getCreatedDirectories()
1511 - Declaração do método: org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
1511 - Declaração do método: org.apache.commons.io.monitor.CollectionFileListener.getDeletedDirectories()
1511 - Declaração do método: org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()
1511 - Declaração do método: org.apache.commons.io.monitor.CollectionFileListener.onDirectoryCreate(java.io.File)
Métodos invocados: 
java.util.Collection.add(java.io.File)
1512 - Declaração do método: org.apache.commons.io.monitor.CollectionFileListener.onDirectoryChange(java.io.File)
Métodos invocados: 
java.util.Collection.add(java.io.File)
1513 - Declaração do método: org.apache.commons.io.monitor.CollectionFileListener.onDirectoryDelete(java.io.File)
Métodos invocados: 
java.util.Collection.add(java.io.File)
1514 - Declaração do método: org.apache.commons.io.monitor.CollectionFileListener.onFileCreate(java.io.File)
Métodos invocados: 
java.util.Collection.add(java.io.File)
1515 - Declaração do método: org.apache.commons.io.monitor.CollectionFileListener.onFileChange(java.io.File)
Métodos invocados: 
java.util.Collection.add(java.io.File)
1516 - Declaração do método: org.apache.commons.io.monitor.CollectionFileListener.onFileDelete(java.io.File)
Métodos invocados: 
java.util.Collection.add(java.io.File)
1517 - Declaração do método: org.apache.commons.io.monitor.CollectionFileListener.onStop(org.apache.commons.io.monitor.FileAlterationObserver)
1517 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserverTestCase.FileAlterationObserverTestCase(java.lang.String)
1517 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserverTestCase.setUp()
1517 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners()
Métodos invocados: 
org.apache.commons.io.monitor.FileAlterationObserver.addListener(org.apache.commons.io.monitor.FileAlterationListener)
org.apache.commons.io.monitor.FileAlterationObserver.getListeners()
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.FileAlterationObserver.removeListener(org.apache.commons.io.monitor.FileAlterationListener)
org.apache.commons.io.monitor.FileAlterationObserver.getListeners()
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.FileAlterationObserver.addListener(org.apache.commons.io.monitor.FileAlterationListener)
org.apache.commons.io.monitor.FileAlterationObserver.getListeners()
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Iterator.next()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
java.util.Iterator.hasNext()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.FileAlterationObserver.removeListener(org.apache.commons.io.monitor.FileAlterationListener)
org.apache.commons.io.monitor.FileAlterationObserver.getListeners()
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
junit.framework.Assert.assertFalse(java.lang.String, Z)
1518 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString()
Métodos invocados: 
java.io.File.getPath()
org.apache.commons.io.monitor.FileAlterationObserver.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.io.File.getPath()
org.apache.commons.io.monitor.FileAlterationObserver.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.monitor.FileAlterationObserver.getDirectory()
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1519 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory()
Métodos invocados: 
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)
java.io.File.mkdir()
java.io.File.mkdir()
java.io.File.mkdir()
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedDirectories()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedDirectories()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedDirectories()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFileListener.getDeletedDirectories()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFileListener.getDeletedDirectories()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.mkdir()
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)
java.lang.Throwable.printStackTrace()
junit.framework.Assert.fail(java.lang.String)
1520 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate()
Métodos invocados: 
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)
java.io.File.mkdir()
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
junit.framework.Assert.fail(java.lang.String)
1521 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate()
Métodos invocados: 
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)
java.io.File.mkdir()
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
junit.framework.Assert.fail(java.lang.String)
1522 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete()
Métodos invocados: 
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)
java.io.File.mkdir()
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
junit.framework.Assert.fail(java.lang.String)
1523 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile()
Métodos invocados: 
java.io.File.mkdir()
java.io.File.getName()
org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(java.lang.String)
org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(java.io.File, java.io.FileFilter)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()
java.util.Collection.contains(java.lang.Object)
junit.framework.Assert.assertFalse(java.lang.String, Z)
junit.framework.Assert.fail(java.lang.String)
1524 - Declaração do método: org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify()
Métodos invocados: 
org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify()
1525 - Declaração do método: org.apache.commons.io.monitor.FileAlterationMonitorTestCase.FileAlterationMonitorTestCase(java.lang.String)
1525 - Declaração do método: org.apache.commons.io.monitor.FileAlterationMonitorTestCase.setUp()
1525 - Declaração do método: org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor()
Métodos invocados: 
org.apache.commons.io.monitor.FileAlterationMonitor.getInterval()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
1526 - Declaração do método: org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers()
Métodos invocados: 
org.apache.commons.io.monitor.FileAlterationMonitor.getInterval()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
org.apache.commons.io.monitor.FileAlterationMonitor.getObservers()
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.FileAlterationMonitor.getObservers()
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.FileAlterationMonitor.addObserver(org.apache.commons.io.monitor.FileAlterationObserver)
org.apache.commons.io.monitor.FileAlterationMonitor.getObservers()
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.FileAlterationMonitor.removeObserver(org.apache.commons.io.monitor.FileAlterationObserver)
org.apache.commons.io.monitor.FileAlterationMonitor.addObserver(org.apache.commons.io.monitor.FileAlterationObserver)
org.apache.commons.io.monitor.FileAlterationMonitor.getObservers()
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Iterator.next()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object)
java.util.Iterator.hasNext()
junit.framework.Assert.assertFalse(java.lang.String, Z)
org.apache.commons.io.monitor.FileAlterationMonitor.removeObserver(org.apache.commons.io.monitor.FileAlterationObserver)
org.apache.commons.io.monitor.FileAlterationMonitor.getObservers()
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
junit.framework.Assert.assertFalse(java.lang.String, Z)
1527 - Declaração do método: org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor()
Métodos invocados: 
org.apache.commons.io.monitor.CollectionFileListener.clear()
org.apache.commons.io.monitor.FileAlterationMonitor.getInterval()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
org.apache.commons.io.monitor.FileAlterationMonitor.start()
org.apache.commons.io.monitor.FileAlterationMonitor.start()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkFile(java.lang.String, java.io.File, java.util.Collection)
org.apache.commons.io.monitor.CollectionFileListener.clear()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles()
org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkFile(java.lang.String, java.io.File, java.util.Collection)
org.apache.commons.io.monitor.CollectionFileListener.clear()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)
java.io.File.delete()
org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()
org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkFile(java.lang.String, java.io.File, java.util.Collection)
org.apache.commons.io.monitor.CollectionFileListener.clear()
org.apache.commons.io.monitor.FileAlterationMonitor.stop()
org.apache.commons.io.monitor.FileAlterationMonitor.stop()
java.lang.Throwable.printStackTrace()
junit.framework.Assert.fail(java.lang.String)
1528 - Declaração do método: org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory()
Métodos invocados: 
org.apache.commons.io.monitor.CollectionFileListener.clear()
java.util.concurrent.Executors.defaultThreadFactory()
org.apache.commons.io.monitor.FileAlterationMonitor.setThreadFactory(java.util.concurrent.ThreadFactory)
org.apache.commons.io.monitor.FileAlterationMonitor.getInterval()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
org.apache.commons.io.monitor.FileAlterationMonitor.start()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)
org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkFile(java.lang.String, java.io.File, java.util.Collection)
org.apache.commons.io.monitor.CollectionFileListener.clear()
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)
java.io.File.delete()
org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()
org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkFile(java.lang.String, java.io.File, java.util.Collection)
org.apache.commons.io.monitor.CollectionFileListener.clear()
org.apache.commons.io.monitor.FileAlterationMonitor.stop()
java.lang.Throwable.printStackTrace()
junit.framework.Assert.fail(java.lang.String)
1529 - Declaração do método: org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkFile(java.lang.String, java.io.File, java.util.Collection)
Métodos invocados: 
java.util.Collection.contains(java.lang.Object)
org.apache.commons.io.monitor.AbstractMonitorTestCase.sleepHandleInterruped(J)
junit.framework.Assert.fail(java.lang.String)
1530 - Declaração do método: org.apache.commons.io.monitor.AbstractMonitorTestCase.AbstractMonitorTestCase(java.lang.String)
1530 - Declaração do método: org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp()
Métodos invocados: 
java.io.File.exists()
org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)
java.io.File.mkdir()
org.apache.commons.io.filefilter.FileFilterUtils.fileFileFilter()
org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(java.lang.String)
org.apache.commons.io.filefilter.FileFilterUtils.and([Lorg.apache.commons.io.filefilter.IOFileFilter;)
org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter()
org.apache.commons.io.filefilter.FileFilterUtils.and([Lorg.apache.commons.io.filefilter.IOFileFilter;)
org.apache.commons.io.filefilter.FileFilterUtils.or([Lorg.apache.commons.io.filefilter.IOFileFilter;)
org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(java.io.File, java.io.FileFilter)
1531 - Declaração do método: org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(java.io.File, java.io.FileFilter)
Métodos invocados: 
org.apache.commons.io.monitor.FileAlterationObserver.addListener(org.apache.commons.io.monitor.FileAlterationListener)
org.apache.commons.io.monitor.FileAlterationObserver.addListener(org.apache.commons.io.monitor.FileAlterationListener)
org.apache.commons.io.monitor.FileAlterationObserver.initialize()
junit.framework.Assert.fail(java.lang.String)
1532 - Declaração do método: org.apache.commons.io.monitor.AbstractMonitorTestCase.tearDown()
Métodos invocados: 
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
1533 - Declaração do método: org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(java.lang.String)
Métodos invocados: 
org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
1534 - Declaração do método: org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(java.lang.String, I, I, I, I, I, I)
Métodos invocados: 
org.apache.commons.io.monitor.CollectionFileListener.getCreatedDirectories()
java.util.Collection.size()
org.apache.commons.io.monitor.CollectionFileListener.getChangedDirectories()
java.util.Collection.size()
org.apache.commons.io.monitor.CollectionFileListener.getDeletedDirectories()
java.util.Collection.size()
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.size()
org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles()
java.util.Collection.size()
org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()
java.util.Collection.size()
org.apache.commons.io.monitor.CollectionFileListener.getCreatedDirectories()
java.util.Collection.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.monitor.CollectionFileListener.getChangedDirectories()
java.util.Collection.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.monitor.CollectionFileListener.getDeletedDirectories()
java.util.Collection.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles()
java.util.Collection.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles()
java.util.Collection.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles()
java.util.Collection.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1535 - Declaração do método: org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.lastModified()
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.getParent()
java.io.File.getName()
java.io.File.lastModified()
org.apache.commons.io.monitor.AbstractMonitorTestCase.sleepHandleInterruped(J)
org.apache.commons.io.FileUtils.touch(java.io.File)
java.io.File.getParent()
java.io.File.getName()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.monitor.AbstractMonitorTestCase.sleepHandleInterruped(J)
1536 - Declaração do método: org.apache.commons.io.monitor.AbstractMonitorTestCase.sleepHandleInterruped(J)
Métodos invocados: 
java.lang.Thread.sleep(J)
1537 - Declaração do método: org.apache.commons.io.output.NullWriterTest.NullWriterTest(java.lang.String)
1537 - Declaração do método: org.apache.commons.io.output.NullWriterTest.testNull()
Métodos invocados: 
org.apache.commons.io.output.NullWriter.write(I)
org.apache.commons.io.output.NullWriter.write([C)
org.apache.commons.io.output.NullWriter.write([C, I, I)
org.apache.commons.io.output.NullWriter.write(java.lang.String)
org.apache.commons.io.output.NullWriter.write(java.lang.String, I, I)
org.apache.commons.io.output.NullWriter.flush()
org.apache.commons.io.output.NullWriter.close()
1538 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.LockableFileWriterTest(java.lang.String)
1538 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.lang.System.getProperty(java.lang.String)
java.io.File.getName()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.getName()
1539 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.tearDown()
Métodos invocados: 
java.io.File.delete()
java.io.File.delete()
java.io.File.delete()
1540 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.testFileLocked()
Métodos invocados: 
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1541 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir()
Métodos invocados: 
java.io.File.getAbsolutePath()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.getAbsolutePath()
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.getMessage()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1542 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked()
Métodos invocados: 
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1543 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding()
Métodos invocados: 
junit.framework.Assert.fail()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1544 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.Assert.fail()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1545 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile()
Métodos invocados: 
junit.framework.Assert.fail()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1546 - Declaração do método: org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile()
Métodos invocados: 
junit.framework.Assert.fail()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1547 - Declaração do método: org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.getBytes(java.lang.String)
org.apache.commons.io.output.WriterOutputStream.write(I)
org.apache.commons.io.output.WriterOutputStream.close()
java.io.StringWriter.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1548 - Declaração do método: org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(java.lang.String, java.lang.String)
Métodos invocados: 
java.lang.String.getBytes(java.lang.String)
java.util.Random.nextInt(I)
java.lang.Math.min(I, I)
org.apache.commons.io.output.WriterOutputStream.write([B, I, I)
org.apache.commons.io.output.WriterOutputStream.close()
java.io.StringWriter.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1549 - Declaração do método: org.apache.commons.io.output.WriterOutputStreamTest.testUTF8WithSingleByteWrite()
Métodos invocados: 
org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(java.lang.String, java.lang.String)
1550 - Declaração do método: org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithSingleByteWrite()
Métodos invocados: 
org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(java.lang.String, java.lang.String)
1551 - Declaração do método: org.apache.commons.io.output.WriterOutputStreamTest.testUTF8WithBufferedWrite()
Métodos invocados: 
org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(java.lang.String, java.lang.String)
1552 - Declaração do método: org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithBufferedWrite()
Métodos invocados: 
org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(java.lang.String, java.lang.String)
1553 - Declaração do método: org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithSingleByteWrite()
Métodos invocados: 
org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(java.lang.String, java.lang.String)
1554 - Declaração do método: org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithBufferedWrite()
Métodos invocados: 
org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(java.lang.String, java.lang.String)
1555 - Declaração do método: org.apache.commons.io.output.WriterOutputStreamTest.testUTF16BEWithSingleByteWrite()
Métodos invocados: 
org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(java.lang.String, java.lang.String)
1556 - Declaração do método: org.apache.commons.io.output.WriterOutputStreamTest.testUTF16BEWithBufferedWrite()
Métodos invocados: 
org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(java.lang.String, java.lang.String)
1557 - Declaração do método: org.apache.commons.io.output.WriterOutputStreamTest.testUTF16LEWithSingleByteWrite()
Métodos invocados: 
org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(java.lang.String, java.lang.String)
1558 - Declaração do método: org.apache.commons.io.output.WriterOutputStreamTest.testUTF16LEWithBufferedWrite()
Métodos invocados: 
org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(java.lang.String, java.lang.String)
1559 - Declaração do método: org.apache.commons.io.output.WriterOutputStreamTest.testFlush()
Métodos invocados: 
java.lang.String.getBytes(java.lang.String)
org.apache.commons.io.output.WriterOutputStream.write([B)
java.io.StringWriter.getBuffer()
java.lang.StringBuffer.length()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.output.WriterOutputStream.flush()
java.io.StringWriter.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1560 - Declaração do método: org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately()
Métodos invocados: 
java.lang.String.getBytes(java.lang.String)
org.apache.commons.io.output.WriterOutputStream.write([B)
java.io.StringWriter.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1561 - Declaração do método: org.apache.commons.io.output.BrokenOutputStreamTest.setUp()
1561 - Declaração do método: org.apache.commons.io.output.BrokenOutputStreamTest.testWrite()
Métodos invocados: 
java.io.OutputStream.write(I)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.io.OutputStream.write([B)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.io.OutputStream.write([B, I, I)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1562 - Declaração do método: org.apache.commons.io.output.BrokenOutputStreamTest.testFlush()
Métodos invocados: 
java.io.OutputStream.flush()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1563 - Declaração do método: org.apache.commons.io.output.BrokenOutputStreamTest.testClose()
Métodos invocados: 
java.io.OutputStream.close()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1564 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.DeferredFileOutputStreamTest(java.lang.String)
1564 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold()
Métodos invocados: 
org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
org.apache.commons.io.output.DeferredFileOutputStream.close()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.output.DeferredFileOutputStream.getData()
junit.framework.Assert.assertEquals(I, I)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(Z)
1565 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold()
Métodos invocados: 
org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
org.apache.commons.io.output.DeferredFileOutputStream.close()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.output.DeferredFileOutputStream.getData()
junit.framework.Assert.assertEquals(I, I)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(Z)
1566 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold()
Métodos invocados: 
java.io.File.delete()
org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
org.apache.commons.io.output.DeferredFileOutputStream.close()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.output.DeferredFileOutputStream.getData()
junit.framework.Assert.assertNull(java.lang.Object)
org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(java.io.File)
java.io.File.delete()
1567 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached()
Métodos invocados: 
java.io.File.delete()
org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
org.apache.commons.io.output.DeferredFileOutputStream.close()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.output.DeferredFileOutputStream.getData()
junit.framework.Assert.assertNull(java.lang.Object)
org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(java.io.File)
java.io.File.delete()
1568 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall()
Métodos invocados: 
java.io.File.delete()
org.apache.commons.io.output.ThresholdingOutputStream.write([B)
java.io.File.exists()
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.output.DeferredFileOutputStream.writeTo(java.io.OutputStream)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.close()
org.apache.commons.io.output.DeferredFileOutputStream.writeTo(java.io.OutputStream)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(Z)
java.io.File.delete()
1569 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge()
Métodos invocados: 
java.io.File.delete()
org.apache.commons.io.output.ThresholdingOutputStream.write([B)
java.io.File.exists()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.output.DeferredFileOutputStream.writeTo(java.io.OutputStream)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.close()
org.apache.commons.io.output.DeferredFileOutputStream.writeTo(java.io.OutputStream)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(java.io.File)
java.io.File.delete()
1570 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold()
Métodos invocados: 
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
org.apache.commons.io.output.DeferredFileOutputStream.close()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
1571 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold()
Métodos invocados: 
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
org.apache.commons.io.output.DeferredFileOutputStream.close()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.output.DeferredFileOutputStream.getData()
junit.framework.Assert.assertNull(java.lang.Object)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
java.io.File.getName()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
java.io.File.getName()
java.lang.String.endsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.File.getPath()
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
java.io.File.getParent()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(java.io.File)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
java.io.File.delete()
1572 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly()
Métodos invocados: 
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
junit.framework.Assert.assertNull(java.lang.String, java.lang.Object)
org.apache.commons.io.output.ThresholdingOutputStream.write([B, I, I)
org.apache.commons.io.output.DeferredFileOutputStream.close()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.DeferredFileOutputStream.isInMemory()
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.output.DeferredFileOutputStream.getData()
junit.framework.Assert.assertNull(java.lang.Object)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
java.io.File.getName()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
java.io.File.getName()
java.lang.String.endsWith(java.lang.String)
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(java.io.File)
org.apache.commons.io.output.DeferredFileOutputStream.getFile()
java.io.File.delete()
1573 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError()
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
1574 - Declaração do método: org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(java.io.File)
Métodos invocados: 
java.io.FileInputStream.available()
junit.framework.Assert.assertEquals(I, I)
java.io.FileInputStream.read([B)
junit.framework.Assert.assertEquals(I, I)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(Z)
java.io.FileInputStream.read([B)
junit.framework.Assert.assertEquals(I, I)
java.io.FileInputStream.close()
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
1575 - Declaração do método: org.apache.commons.io.output.CloseShieldOutputStreamTest.setUp()
1575 - Declaração do método: org.apache.commons.io.output.CloseShieldOutputStreamTest$1.close()
1575 - Declaração do método: org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose()
Métodos invocados: 
java.io.OutputStream.close()
junit.framework.Assert.assertFalse(java.lang.String, Z)
java.io.OutputStream.write(I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStream.write(I)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(I, I)
1576 - Declaração do método: org.apache.commons.io.output.ClosedOutputStreamTest.testRead()
Métodos invocados: 
org.apache.commons.io.output.ClosedOutputStream.write(I)
junit.framework.Assert.fail(java.lang.String)
1577 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncodingTest.FileWriterWithEncodingTest(java.lang.String)
1577 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncodingTest.setUp()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.OutputStreamWriter.getEncoding()
java.lang.Throwable.getMessage()
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
1578 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncodingTest.tearDown()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)
1579 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding()
Métodos invocados: 
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.Writer.write(java.lang.String)
org.apache.commons.io.output.FileWriterWithEncoding.write(java.lang.String)
java.io.OutputStreamWriter.flush()
org.apache.commons.io.output.FileWriterWithEncoding.flush()
org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File, java.io.File)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1580 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding()
Métodos invocados: 
java.nio.charset.Charset.isSupported(java.lang.String)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.Writer.write(java.lang.String)
org.apache.commons.io.output.FileWriterWithEncoding.write(java.lang.String)
java.io.OutputStreamWriter.flush()
org.apache.commons.io.output.FileWriterWithEncoding.flush()
org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File, java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.nio.charset.Charset.isSupported(java.lang.String)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.Writer.write(java.lang.String)
org.apache.commons.io.output.FileWriterWithEncoding.write(java.lang.String)
java.io.OutputStreamWriter.flush()
org.apache.commons.io.output.FileWriterWithEncoding.flush()
org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File, java.io.File)
junit.framework.Assert.fail()
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1581 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_encoding_badEncoding()
Métodos invocados: 
junit.framework.Assert.fail()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1582 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory()
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
junit.framework.Assert.fail()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1583 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile()
Métodos invocados: 
junit.framework.Assert.fail()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1584 - Declaração do método: org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_fileName_nullFile()
Métodos invocados: 
junit.framework.Assert.fail()
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
java.io.File.exists()
junit.framework.Assert.assertEquals(Z, Z)
1585 - Declaração do método: org.apache.commons.io.output.NullOutputStreamTest.NullOutputStreamTest(java.lang.String)
1585 - Declaração do método: org.apache.commons.io.output.NullOutputStreamTest.testNull()
Métodos invocados: 
java.lang.String.getBytes()
org.apache.commons.io.output.NullOutputStream.write([B)
java.lang.String.getBytes()
org.apache.commons.io.output.NullOutputStream.write([B, I, I)
org.apache.commons.io.output.NullOutputStream.write(I)
org.apache.commons.io.output.NullOutputStream.write(I)
java.io.OutputStream.flush()
java.io.OutputStream.close()
java.lang.String.getBytes()
org.apache.commons.io.output.NullOutputStream.write([B)
org.apache.commons.io.output.NullOutputStream.write(I)
1586 - Declaração do método: org.apache.commons.io.output.CountingOutputStreamTest.CountingOutputStreamTest(java.lang.String)
1586 - Declaração do método: org.apache.commons.io.output.CountingOutputStreamTest.testCounting()
Métodos invocados: 
org.apache.commons.io.output.ProxyOutputStream.write(I)
java.io.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals(java.lang.String, [B, I, I)
org.apache.commons.io.output.CountingOutputStream.getCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ProxyOutputStream.write([B)
java.io.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals(java.lang.String, [B, I, I)
org.apache.commons.io.output.CountingOutputStream.getCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ProxyOutputStream.write([B, I, I)
java.io.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals(java.lang.String, [B, I, I)
org.apache.commons.io.output.CountingOutputStream.getCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.CountingOutputStream.resetCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ProxyOutputStream.write(I)
java.io.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals(java.lang.String, [B, I, I)
org.apache.commons.io.output.CountingOutputStream.getCount()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1587 - Declaração do método: org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84()
Métodos invocados: 
org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream)
org.apache.commons.io.output.CountingOutputStream.getCount()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.CountingOutputStream.resetCount()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.input.NullInputStream.close()
org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream, java.io.OutputStream)
org.apache.commons.io.output.CountingOutputStream.getByteCount()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
org.apache.commons.io.output.CountingOutputStream.resetByteCount()
junit.framework.Assert.assertEquals(java.lang.String, J, J)
1588 - Declaração do método: org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals(java.lang.String, [B, I, I)
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.String, I, I)
1589 - Declaração do método: org.apache.commons.io.output.TeeOutputStreamTest$ExceptionOnCloseByteArrayOutputStream.close()
1589 - Declaração do método: org.apache.commons.io.output.TeeOutputStreamTest$RecordCloseByteArrayOutputStream.close()
1589 - Declaração do método: org.apache.commons.io.output.TeeOutputStreamTest.TeeOutputStreamTest(java.lang.String)
1589 - Declaração do método: org.apache.commons.io.output.TeeOutputStreamTest.testCloseBranchIOException()
Métodos invocados: 
org.apache.commons.io.output.TeeOutputStream.close()
java.lang.Class.getName()
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
1590 - Declaração do método: org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException()
Métodos invocados: 
org.apache.commons.io.output.TeeOutputStream.close()
java.lang.Class.getName()
org.junit.Assert.fail(java.lang.String)
org.junit.Assert.assertTrue(Z)
1591 - Declaração do método: org.apache.commons.io.output.TeeOutputStreamTest.testTee()
Métodos invocados: 
org.apache.commons.io.output.TeeOutputStream.write(I)
java.io.ByteArrayOutputStream.toByteArray()
java.io.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.TeeOutputStreamTest.assertByteArrayEquals(java.lang.String, [B, [B)
org.apache.commons.io.output.TeeOutputStream.write([B)
java.io.ByteArrayOutputStream.toByteArray()
java.io.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.TeeOutputStreamTest.assertByteArrayEquals(java.lang.String, [B, [B)
org.apache.commons.io.output.TeeOutputStream.write([B, I, I)
java.io.ByteArrayOutputStream.toByteArray()
java.io.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.TeeOutputStreamTest.assertByteArrayEquals(java.lang.String, [B, [B)
org.apache.commons.io.output.TeeOutputStream.flush()
org.apache.commons.io.output.TeeOutputStream.close()
1592 - Declaração do método: org.apache.commons.io.output.TeeOutputStreamTest.assertByteArrayEquals(java.lang.String, [B, [B)
Métodos invocados: 
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, B, B)
1593 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStreamTestCase.ByteArrayOutputStreamTestCase(java.lang.String)
1593 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream, I)
Métodos invocados: 
org.apache.commons.io.output.ByteArrayOutputStream.write(I)
java.io.ByteArrayOutputStream.write(I)
org.apache.commons.io.output.ByteArrayOutputStream.write([B, I, I)
java.io.ByteArrayOutputStream.write([B, I, I)
1594 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream, [I)
Métodos invocados: 
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream, I)
1595 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStreamTestCase.byteCmp([B, [B)
1595 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkByteArrays([B, [B)
Métodos invocados: 
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.byteCmp([B, [B)
junit.framework.Assert.fail(java.lang.String)
1596 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream)
Métodos invocados: 
java.io.ByteArrayOutputStream.size()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(java.lang.String, I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.io.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkByteArrays([B, [B)
1597 - Declaração do método: org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream()
Métodos invocados: 
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream, [I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream)
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream, [I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.reset()
java.io.ByteArrayOutputStream.reset()
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream, [I)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.reset()
java.io.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.ByteArrayOutputStream.write(java.io.InputStream)
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream)
java.io.ByteArrayOutputStream.writeTo(java.io.OutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.writeTo(java.io.OutputStream)
org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(org.apache.commons.io.output.ByteArrayOutputStream, java.io.ByteArrayOutputStream)
org.apache.commons.io.output.ByteArrayOutputStream.toString(java.lang.String)
java.io.ByteArrayOutputStream.toString(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
1598 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.StringBuilderWriterTest(java.lang.String)
1598 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructCapacity()
Métodos invocados: 
java.io.Writer.append(java.lang.CharSequence)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1599 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder()
Métodos invocados: 
org.apache.commons.io.output.StringBuilderWriter.append(java.lang.CharSequence)
org.apache.commons.io.output.StringBuilderWriter.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
org.apache.commons.io.output.StringBuilderWriter.getBuilder()
junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object)
1600 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructNull()
Métodos invocados: 
java.io.Writer.append(java.lang.CharSequence)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1601 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testAppendChar()
Métodos invocados: 
java.io.Writer.append(C)
java.io.Writer.append(C)
java.io.Writer.append(C)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1602 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequence()
Métodos invocados: 
java.io.Writer.append(java.lang.CharSequence)
java.io.Writer.append(java.lang.CharSequence)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1603 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequencePortion()
Métodos invocados: 
java.io.Writer.append(java.lang.CharSequence, I, I)
java.io.Writer.append(java.lang.CharSequence, I, I)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1604 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testClose()
Métodos invocados: 
java.io.Writer.append(java.lang.CharSequence)
java.io.Writer.close()
java.io.Writer.append(java.lang.CharSequence)
junit.framework.Assert.fail(java.lang.String)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1605 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testWriteChar()
Métodos invocados: 
java.io.Writer.write(I)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.io.Writer.write(I)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.io.Writer.write(I)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1606 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArray()
Métodos invocados: 
java.io.Writer.write([C)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.io.Writer.write([C)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1607 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArrayPortion()
Métodos invocados: 
java.io.Writer.write([C, I, I)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.io.Writer.write([C, I, I)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1608 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testWriteString()
Métodos invocados: 
java.io.Writer.write(java.lang.String)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.io.Writer.write(java.lang.String)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1609 - Declaração do método: org.apache.commons.io.output.StringBuilderWriterTest.testWriteStringPortion()
Métodos invocados: 
java.io.Writer.write(java.lang.String, I, I)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.io.Writer.write(java.lang.String, I, I)
java.lang.Object.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1610 - Declaração do método: org.apache.commons.io.output.ProxyOutputStreamTest.setUp()
1610 - Declaração do método: org.apache.commons.io.output.ProxyOutputStreamTest$1.write([B)
1610 - Declaração do método: org.apache.commons.io.output.ProxyOutputStreamTest.testWrite()
Métodos invocados: 
java.io.OutputStream.write(I)
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(I, I)
1611 - Declaração do método: org.apache.commons.io.output.ProxyOutputStreamTest.testWriteNullBaSucceeds()
Métodos invocados: 
java.io.OutputStream.write([B)
java.io.OutputStream.write([B)
1612 - Declaração do método: org.apache.commons.io.output.XmlStreamWriterTest.createXmlContent(java.lang.String, java.lang.String)
1612 - Declaração do método: org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
java.io.Writer.write(java.lang.String)
org.apache.commons.io.output.XmlStreamWriter.close()
java.io.ByteArrayOutputStream.toByteArray()
org.apache.commons.io.output.XmlStreamWriter.getEncoding()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.lang.String.getBytes(java.lang.String)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(Z)
1613 - Declaração do método: org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String, java.lang.String, java.lang.String)
1614 - Declaração do método: org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String, java.lang.String, java.lang.String)
Métodos invocados: 
org.apache.commons.io.output.XmlStreamWriterTest.createXmlContent(java.lang.String, java.lang.String)
org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(java.lang.String, java.lang.String, java.lang.String)
1615 - Declaração do método: org.apache.commons.io.output.XmlStreamWriterTest.testNoXmlHeader()
Métodos invocados: 
org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(java.lang.String, java.lang.String, java.lang.String)
1616 - Declaração do método: org.apache.commons.io.output.XmlStreamWriterTest.testEmpty()
Métodos invocados: 
org.apache.commons.io.output.XmlStreamWriter.flush()
java.io.Writer.write(java.lang.String)
org.apache.commons.io.output.XmlStreamWriter.flush()
java.io.Writer.write(java.lang.String)
org.apache.commons.io.output.XmlStreamWriter.flush()
org.apache.commons.io.output.XmlStreamWriter.close()
1617 - Declaração do método: org.apache.commons.io.output.XmlStreamWriterTest.testDefaultEncoding()
Métodos invocados: 
org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String, java.lang.String, java.lang.String)
org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String, java.lang.String, java.lang.String)
1618 - Declaração do método: org.apache.commons.io.output.XmlStreamWriterTest.testUTF8Encoding()
Métodos invocados: 
org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String, java.lang.String)
1619 - Declaração do método: org.apache.commons.io.output.XmlStreamWriterTest.testUTF16Encoding()
Métodos invocados: 
org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String, java.lang.String)
1620 - Declaração do método: org.apache.commons.io.output.XmlStreamWriterTest.testUTF16BEEncoding()
Métodos invocados: 
org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String, java.lang.String)
1621 - Declaração do método: org.apache.commons.io.output.XmlStreamWriterTest.testUTF16LEEncoding()
Métodos invocados: 
org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String, java.lang.String)
1622 - Declaração do método: org.apache.commons.io.output.XmlStreamWriterTest.testLatin1Encoding()
Métodos invocados: 
org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String, java.lang.String)
1623 - Declaração do método: org.apache.commons.io.output.XmlStreamWriterTest.testLatin7Encoding()
Métodos invocados: 
org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String, java.lang.String)
1624 - Declaração do método: org.apache.commons.io.output.XmlStreamWriterTest.testLatin15Encoding()
Métodos invocados: 
org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String, java.lang.String)
1625 - Declaração do método: org.apache.commons.io.output.XmlStreamWriterTest.testEUC_JPEncoding()
Métodos invocados: 
org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String, java.lang.String)
1626 - Declaração do método: org.apache.commons.io.output.XmlStreamWriterTest.testEBCDICEncoding()
Métodos invocados: 
org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(java.lang.String, java.lang.String)
1627 - Declaração do método: org.apache.commons.io.output.ProxyWriterTest.ProxyWriterTest(java.lang.String)
1627 - Declaração do método: org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence()
Métodos invocados: 
org.apache.commons.io.output.ProxyWriter.append(java.lang.CharSequence)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.StringBuilderWriter.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1628 - Declaração do método: org.apache.commons.io.output.ProxyWriterTest.testWriteString()
Métodos invocados: 
org.apache.commons.io.output.ProxyWriter.write(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.StringBuilderWriter.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1629 - Declaração do método: org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial()
Métodos invocados: 
org.apache.commons.io.output.ProxyWriter.write(java.lang.String, I, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.StringBuilderWriter.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1630 - Declaração do método: org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray()
Métodos invocados: 
org.apache.commons.io.output.ProxyWriter.write([C)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.StringBuilderWriter.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1631 - Declaração do método: org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial()
Métodos invocados: 
org.apache.commons.io.output.ProxyWriter.write([C, I, I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.StringBuilderWriter.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
1632 - Declaração do método: org.apache.commons.io.output.ProxyWriterTest.testNullString()
Métodos invocados: 
org.apache.commons.io.output.ProxyWriter.write(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.ProxyWriter.write(java.lang.String, I, I)
junit.framework.Assert.fail(java.lang.String)
1633 - Declaração do método: org.apache.commons.io.output.ProxyWriterTest.testNullCharArray()
Métodos invocados: 
org.apache.commons.io.output.ProxyWriter.write([C)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.ProxyWriter.write([C, I, I)
junit.framework.Assert.fail(java.lang.String)
1634 - Declaração do método: org.apache.commons.io.output.ProxyWriterTest.testNullCharSequencec()
Métodos invocados: 
org.apache.commons.io.output.ProxyWriter.append(java.lang.CharSequence)
junit.framework.Assert.fail(java.lang.String)
1635 - Declaração do método: org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream()
Métodos invocados: 
java.io.OutputStream.write(I)
java.io.OutputStream.write([B)
java.io.OutputStream.write([B, I, I)
java.io.OutputStream.flush()
java.io.OutputStream.close()
org.apache.commons.io.output.ByteArrayOutputStream.size()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(I, I)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
junit.framework.Assert.assertEquals(I, I)
junit.framework.Assert.fail(java.lang.String)
1636 - Declaração do método: org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream()
Métodos invocados: 
org.apache.commons.io.output.ProxyOutputStream.write(I)
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.TaggedOutputStream.isCauseOf(java.lang.Exception)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf(java.lang.Exception)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.apache.commons.io.output.ProxyOutputStream.flush()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.TaggedOutputStream.isCauseOf(java.lang.Exception)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf(java.lang.Exception)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.apache.commons.io.output.ProxyOutputStream.close()
junit.framework.Assert.fail(java.lang.String)
org.apache.commons.io.output.TaggedOutputStream.isCauseOf(java.lang.Exception)
junit.framework.Assert.assertTrue(Z)
org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf(java.lang.Exception)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
1637 - Declaração do método: org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException()
Métodos invocados: 
org.apache.commons.io.output.TaggedOutputStream.isCauseOf(java.lang.Exception)
junit.framework.Assert.assertFalse(Z)
java.util.UUID.randomUUID()
org.apache.commons.io.output.TaggedOutputStream.isCauseOf(java.lang.Exception)
junit.framework.Assert.assertFalse(Z)
org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf(java.lang.Exception)
junit.framework.Assert.fail(java.lang.String)
java.util.UUID.randomUUID()
org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf(java.lang.Exception)
junit.framework.Assert.fail(java.lang.String)
1638 - Declaração do método: org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(java.io.InputStream)
1638 - Declaração do método: org.apache.commons.io.testtools.YellOnCloseInputStream.close()
1638 - Declaração do método: org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(java.io.OutputStream, Z, Z)
1638 - Declaração do método: org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush()
1638 - Declaração do método: org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.close()
1638 - Declaração do método: org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off()
1638 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(java.lang.String)
1638 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
Métodos invocados: 
java.io.File.getAbsoluteFile()
java.io.File.mkdirs()
1639 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.createFile(java.io.File, J)
Métodos invocados: 
java.io.File.getParentFile()
java.io.File.exists()
org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(java.io.OutputStream, J)
org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream)
1640 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(J)
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(java.io.OutputStream, J)
org.apache.commons.io.output.ByteArrayOutputStream.toByteArray()
java.lang.Throwable.getMessage()
1641 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(java.io.OutputStream, J)
Métodos invocados: 
java.io.OutputStream.write(I)
1642 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(java.io.File, [Ljava.lang.String;)
Métodos invocados: 
java.io.File.getParentFile()
java.io.File.getParentFile()
java.io.File.exists()
java.io.PrintWriter.println(java.lang.String)
org.apache.commons.io.IOUtils.closeQuietly(java.io.Writer)
1643 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.newFile(java.lang.String)
Métodos invocados: 
org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory()
java.io.File.exists()
org.apache.commons.io.FileUtils.forceDelete(java.io.File)
1644 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.checkFile(java.io.File, java.io.File)
Métodos invocados: 
java.io.File.exists()
junit.framework.Assert.assertTrue(java.lang.String, Z)
org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(java.io.File, java.io.File)
1645 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(java.io.File, java.io.File)
Métodos invocados: 
java.io.InputStream.read([B)
java.io.InputStream.read([B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.util.Arrays.equals([B, [B)
junit.framework.Assert.assertTrue(java.lang.String, Z)
java.io.InputStream.close()
java.io.InputStream.close()
1646 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([B, java.io.File)
Métodos invocados: 
java.io.InputStream.read([B, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, B, B)
java.io.InputStream.close()
1647 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent([C, java.io.File)
Métodos invocados: 
java.io.Reader.read([C, I, I)
junit.framework.Assert.assertEquals(java.lang.String, I, I)
junit.framework.Assert.assertEquals(java.lang.String, C, C)
java.io.Reader.close()
1648 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(java.io.OutputStream)
Métodos invocados: 
java.io.PrintStream.write(I)
java.lang.Throwable.getMessage()
1649 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(java.io.Writer)
Métodos invocados: 
java.io.PrintWriter.write(I)
java.lang.Throwable.getMessage()
1650 - Declaração do método: org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(java.io.File)
Métodos invocados: 
java.io.File.exists()
java.io.File.delete()
junit.framework.Assert.assertTrue(java.lang.String, Z)
