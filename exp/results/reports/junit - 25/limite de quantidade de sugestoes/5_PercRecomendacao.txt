************************ Método Avaliado: org.junit.experimental.max.MaxHistory.forFolder(java.io.File) ************************
*Commit: commit 9a2e993c544a2cd1a0b93c9f59340910f51366b4 1236654654 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.io.File.exists()
org.junit.experimental.max.MaxHistory.readHistory(java.io.File)
java.lang.Throwable.printStackTrace()
java.io.File.delete()
Chamada: java.io.File.exists()
Situação: Primeira Chamada
Chamada: org.junit.experimental.max.MaxHistory.readHistory(java.io.File)
Situação: Manual
Chamada: java.lang.Throwable.printStackTrace()
Situação: Manual
Chamada: java.io.File.delete()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.io.File.delete()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.runner.manipulation.Filter.matchMethodDescription(org.junit.runner.Description) ************************
*Commit: commit f3c211455b9e09be36e4bf7ccc499fbdd35a527a 1236696262 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.isTest()
org.junit.runner.Description.equals(java.lang.Object)
org.junit.runner.Description.getChildren()
null.shouldRun(org.junit.runner.Description)
org.junit.runner.Description.getDisplayName()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Chamada: org.junit.runner.Description.isTest()
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getChildren()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8333325894451189
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: null.shouldRun(org.junit.runner.Description)
Situação: Manual
Chamada: org.junit.runner.Description.getDisplayName()
Situação: Manual
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.util.ArrayList.size()
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: java.lang.String.compareTo(java.lang.String)
Inútil
Método: org.junit.runner.Description.getChildren()
Útil
Percentual de Automatização: 0.2
Corretude: 0.2
F-Measure: 0.20000000000000004
************************ Método Avaliado: org.junit.runner.manipulation.Filter.matchMethodDescription(org.junit.runner.Description) ************************
*Commit: commit 8e20f520565dc52f5599eafd54b603043bfecbaf 1236865651 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.isTest()
org.junit.runner.Description.equals(java.lang.Object)
org.junit.runner.Description.getChildren()
null.shouldRun(org.junit.runner.Description)
org.junit.runner.Description.getDisplayName()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Chamada: org.junit.runner.Description.isTest()
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.getChildren()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8333325894451189
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: null.shouldRun(org.junit.runner.Description)
Situação: Manual
Chamada: org.junit.runner.Description.getDisplayName()
Situação: Manual
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.util.ArrayList.size()
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: java.lang.String.compareTo(java.lang.String)
Inútil
Método: org.junit.runner.Description.getChildren()
Útil
Percentual de Automatização: 0.2
Corretude: 0.2
F-Measure: 0.20000000000000004
************************ Método Avaliado: org.junit.runners.Parameterized$TestClassRunnerForParameters.withBeforeParameterize(org.junit.runners.model.Statement) ************************
*Commit: commit 6abd4e65122ac6e3b56cf53a9a7540b61e4e687e 1239038531 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.31250041843805443
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Útil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: org.junit.runners.Parameterized$TestClassRunnerForParameters.withAfterParameterize(org.junit.runners.model.Statement) ************************
*Commit: commit 6abd4e65122ac6e3b56cf53a9a7540b61e4e687e 1239038531 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.31250041843805443
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Útil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.beforeAndAfterParameterizeAreRun() ************************
*Commit: commit 6abd4e65122ac6e3b56cf53a9a7540b61e4e687e 1239038531 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.19565203469756068
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.013
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.running.classes.ParameterizedTestTest.beforeAfterParameterizeAndBeforeAfterClassAreRun() ************************
*Commit: commit 6abd4e65122ac6e3b56cf53a9a7540b61e4e687e 1239038531 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.19565203469756068
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.013
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: junit.tests.runner.BaseTestRunnerTest.testInvokeSuiteOnNonSubclassOfTestCase() ************************
*Commit: commit 17087303ee4f7f5c801e0d652a7e51a9f5d68297 1240250245 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
junit.runner.BaseTestRunner.getTest(java.lang.String)
junit.framework.Assert.assertFalse(Z)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: junit.runner.BaseTestRunner.getTest(java.lang.String)
Situação: Manual
Chamada: junit.framework.Assert.assertFalse(Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.classes.SuiteTest.ensureInheritedTestIsRun() ************************
*Commit: commit fd1111ed097e0db6602c2f388d41c7ad817c7f9f 1240949552 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.7142832549064616
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.381817340792786
Suporte: 0.0156833
F-Measure Suporte e Confiança: 0.031
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8000002677999962
Suporte: 0.00597461
F-Measure Suporte e Confiança: 0.012
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Percentual de Automatização: 0.75
Corretude: 0.3333333333333333
F-Measure: 0.46153846153846156
************************ Método Avaliado: org.junit.experimental.interceptor.Interceptors.intercept(org.junit.runners.model.Statement, java.lang.Object, org.junit.runners.model.FrameworkMethod) ************************
*Commit: commit 28d40d93420cacdb4d420b04475bafdc7d89d922 1240975790 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getJavaClass()
java.lang.Class.getFields()
getAnnotation
java.lang.reflect.Field.get(java.lang.Object)
intercept
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.TestClass.getJavaClass()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.31250041843805443
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: java.lang.Class.getFields()
Situação: Manual
Chamada: getAnnotation
Situação: Manual
Chamada: java.lang.reflect.Field.get(java.lang.Object)
Situação: Manual
Chamada: intercept
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Útil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.2
Corretude: 0.25
F-Measure: 0.22222222222222224
************************ Método Avaliado: org.junit.experimental.interceptor.TestWatchman.intercept(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod) ************************
*Commit: commit 28d40d93420cacdb4d420b04475bafdc7d89d922 1240975790 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.Statement.evaluate()
org.junit.experimental.interceptor.TestWatchman.succeeded(org.junit.runners.model.FrameworkMethod)
org.junit.experimental.interceptor.TestWatchman.failed(java.lang.Throwable, org.junit.runners.model.FrameworkMethod)
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Primeira Chamada
Chamada: org.junit.experimental.interceptor.TestWatchman.succeeded(org.junit.runners.model.FrameworkMethod)
Situação: Manual
Chamada: org.junit.experimental.interceptor.TestWatchman.failed(java.lang.Throwable, org.junit.runners.model.FrameworkMethod)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.InterceptorTest.ignoreNonInterceptors() ************************
*Commit: commit 28d40d93420cacdb4d420b04475bafdc7d89d922 1240975790 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.InterceptorTest.onFailure() ************************
*Commit: commit 28d40d93420cacdb4d420b04475bafdc7d89d922 1240975790 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.19565203469756068
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.013
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Útil
Percentual de Automatização: 1.0
Corretude: 0.75
F-Measure: 0.8571428571428571
************************ Método Avaliado: org.junit.tests.experimental.InterceptorTest.multipleInterceptorsAreRun() ************************
*Commit: commit 28d40d93420cacdb4d420b04475bafdc7d89d922 1240975790 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: null.failed(java.lang.Throwable, org.junit.runners.model.FrameworkMethod) ************************
*Commit: commit 28d40d93420cacdb4d420b04475bafdc7d89d922 1240975790 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.FrameworkMethod.getName()
java.lang.Object.getClass()
java.lang.Class.getSimpleName()
Chamada: org.junit.runners.model.FrameworkMethod.getName()
Situação: Primeira Chamada
Chamada: java.lang.Object.getClass()
Situação: Manual
Chamada: java.lang.Class.getSimpleName()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.InterceptorTest.interceptorIsIntroducedAnEvaluated() ************************
*Commit: commit 28d40d93420cacdb4d420b04475bafdc7d89d922 1240975790 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.21739127903592012
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.InterceptorTest.succeeded() ************************
*Commit: commit 28d40d93420cacdb4d420b04475bafdc7d89d922 1240975790 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00448096
F-Measure Suporte e Confiança: 0.009
Chamada: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1034481484901653
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
Útil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.75
Corretude: 0.3333333333333333
F-Measure: 0.46153846153846156
************************ Método Avaliado: org.junit.tests.running.classes.SuiteTest.ensureInheritedTestIsRun() ************************
*Commit: commit ac7a1f1b2cb3ed60f87cc081fe61017f8bb8e93e 1240975861 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.7142832549064616
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.381817340792786
Suporte: 0.0156833
F-Measure Suporte e Confiança: 0.031
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8000002677999962
Suporte: 0.00597461
F-Measure Suporte e Confiança: 0.012
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Percentual de Automatização: 0.75
Corretude: 0.3333333333333333
F-Measure: 0.46153846153846156
************************ Método Avaliado: org.junit.experimental.interceptor.Interceptors.intercept(org.junit.runners.model.Statement, java.lang.Object, org.junit.runners.model.FrameworkMethod) ************************
*Commit: commit 6c942aec322e039d2c6fc82c4d5c1a63cf6fb244 1240975897 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getJavaClass()
java.lang.Class.getFields()
getAnnotation
java.lang.reflect.Field.get(java.lang.Object)
intercept
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.TestClass.getJavaClass()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.31250041843805443
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: java.lang.Class.getFields()
Situação: Manual
Chamada: getAnnotation
Situação: Manual
Chamada: java.lang.reflect.Field.get(java.lang.Object)
Situação: Manual
Chamada: intercept
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Útil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.2
Corretude: 0.25
F-Measure: 0.22222222222222224
************************ Método Avaliado: org.junit.experimental.interceptor.TestWatchman.intercept(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod) ************************
*Commit: commit 6c942aec322e039d2c6fc82c4d5c1a63cf6fb244 1240975897 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.Statement.evaluate()
org.junit.experimental.interceptor.TestWatchman.succeeded(org.junit.runners.model.FrameworkMethod)
org.junit.experimental.interceptor.TestWatchman.failed(java.lang.Throwable, org.junit.runners.model.FrameworkMethod)
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Primeira Chamada
Chamada: org.junit.experimental.interceptor.TestWatchman.succeeded(org.junit.runners.model.FrameworkMethod)
Situação: Manual
Chamada: org.junit.experimental.interceptor.TestWatchman.failed(java.lang.Throwable, org.junit.runners.model.FrameworkMethod)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.InterceptorTest.ignoreNonInterceptors() ************************
*Commit: commit 6c942aec322e039d2c6fc82c4d5c1a63cf6fb244 1240975897 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.InterceptorTest.onFailure() ************************
*Commit: commit 6c942aec322e039d2c6fc82c4d5c1a63cf6fb244 1240975897 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.19565203469756068
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.013
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Útil
Percentual de Automatização: 1.0
Corretude: 0.75
F-Measure: 0.8571428571428571
************************ Método Avaliado: org.junit.tests.experimental.InterceptorTest.multipleInterceptorsAreRun() ************************
*Commit: commit 6c942aec322e039d2c6fc82c4d5c1a63cf6fb244 1240975897 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: null.failed(java.lang.Throwable, org.junit.runners.model.FrameworkMethod) ************************
*Commit: commit 6c942aec322e039d2c6fc82c4d5c1a63cf6fb244 1240975897 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.FrameworkMethod.getName()
java.lang.Object.getClass()
java.lang.Class.getSimpleName()
Chamada: org.junit.runners.model.FrameworkMethod.getName()
Situação: Primeira Chamada
Chamada: java.lang.Object.getClass()
Situação: Manual
Chamada: java.lang.Class.getSimpleName()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.InterceptorTest.interceptorIsIntroducedAnEvaluated() ************************
*Commit: commit 6c942aec322e039d2c6fc82c4d5c1a63cf6fb244 1240975897 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.21739127903592012
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.InterceptorTest.succeeded() ************************
*Commit: commit 6c942aec322e039d2c6fc82c4d5c1a63cf6fb244 1240975897 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00448096
F-Measure Suporte e Confiança: 0.009
Chamada: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1034481484901653
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
Útil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.75
Corretude: 0.3333333333333333
F-Measure: 0.46153846153846156
************************ Método Avaliado: org.junit.tests.junit3compatibility.JUnit38ClassRunnerTest.invalidTestMethodReportedCorrectly() ************************
*Commit: commit c7874453182cde8e7b38cf3ce356d16d3d1dcde8 1241039976 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.getDescription()
org.junit.runner.Description.getMethodName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.notification.Failure.getDescription()
org.junit.runner.Description.getClassName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.8749993723439689
Suporte: 0.00522778
F-Measure Suporte e Confiança: 0.011
Chamada: org.junit.runner.notification.Failure.getDescription()
Situação: Manual
Chamada: org.junit.runner.Description.getMethodName()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.42857197510224226
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.19565203469756068
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.013
Chamada: org.junit.runner.notification.Failure.getDescription()
Situação: Manual
Chamada: org.junit.runner.Description.getClassName()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.06999997322000037
Suporte: 0.00522778
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Description.getMethodName()
Útil
Método: java.util.List.get(I)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.375
F-Measure: 0.42857142857142855
************************ Método Avaliado: org.junit.tests.experimental.InterceptorTest.interceptorIsIntroducedAndEvaluated() ************************
*Commit: commit e13f8cdc5c3394962fc6eddde235980181b3bb8c 1241105969 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.21739127903592012
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: org.junit.experimental.ParallelComputer$ParallelCollator.process(java.util.concurrent.Callable) ************************
*Commit: commit 015c02e04d940a4bffc6a8e687751c4610db19b8 1241458782 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)
java.util.List.add(java.util.concurrent.Future)
Chamada: java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)
Situação: Primeira Chamada
Chamada: java.util.List.add(java.util.concurrent.Future)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.util.concurrent.Future.get(J, java.util.concurrent.TimeUnit)
Inútil
Método: java.util.concurrent.ExecutorService.shutdownNow()
Inútil
Método: java.util.concurrent.ExecutorService.shutdown()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.ParallelComputer$ParallelParentRunner.ParallelParentRunner(org.junit.runners.ParentRunner) ************************
*Commit: commit 3d08ecc6a661f09520559637794c9a161db90f3d 1241469506 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getJavaClass()
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.TestClass.getJavaClass()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.31250041843805443
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Útil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: org.junit.experimental.ParallelComputer$ParallelParentRunner.runChild(org.junit.experimental.ParallelComputer$ParallelParentRunner$T, org.junit.runner.notification.RunNotifier) ************************
*Commit: commit 3d08ecc6a661f09520559637794c9a161db90f3d 1241469506 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)
java.util.List.add(java.util.concurrent.Future)
internalRunChild
Chamada: java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)
Situação: Primeira Chamada
Chamada: java.util.List.add(java.util.concurrent.Future)
Situação: Manual
Chamada: internalRunChild
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.util.concurrent.Future.get(J, java.util.concurrent.TimeUnit)
Inútil
Método: java.util.concurrent.ExecutorService.shutdownNow()
Inútil
Método: java.util.concurrent.ExecutorService.shutdown()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.ParallelComputer$ParallelCollator.process(java.util.concurrent.Callable) ************************
*Commit: commit f5a10efbbdffec756bc055710ebf6b8169e9dbca 1241490353 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)
java.util.List.add(java.util.concurrent.Future)
Chamada: java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)
Situação: Primeira Chamada
Chamada: java.util.List.add(java.util.concurrent.Future)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.util.concurrent.Future.get(J, java.util.concurrent.TimeUnit)
Inútil
Método: java.util.concurrent.ExecutorService.shutdownNow()
Inútil
Método: java.util.concurrent.ExecutorService.shutdown()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.InterceptorTest.beforesAndAfters() ************************
*Commit: commit e5a301651a359ed4ce2c1dd81a4a73868b4dddcc 1241495404 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.0029873
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.2
F-Measure: 0.28571428571428575
************************ Método Avaliado: org.junit.tests.experimental.TimeoutInterceptorTest.globalTimeoutAvoidsInfiniteLoop() ************************
*Commit: commit e5a301651a359ed4ce2c1dd81a4a73868b4dddcc 1241495404 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.19565203469756068
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.013
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Útil
Percentual de Automatização: 1.0
Corretude: 0.75
F-Measure: 0.8571428571428571
************************ Método Avaliado: org.junit.experimental.ParallelComputer$ParallelParentRunner.ParallelParentRunner(org.junit.runners.ParentRunner) ************************
*Commit: commit 796e723caa0a1f75bb7b48b2454bea633fbf8e4e 1241496943 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getJavaClass()
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.TestClass.getJavaClass()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.31250041843805443
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Útil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: org.junit.experimental.ParallelComputer$ParallelParentRunner.runChild(org.junit.experimental.ParallelComputer$ParallelParentRunner$T, org.junit.runner.notification.RunNotifier) ************************
*Commit: commit 796e723caa0a1f75bb7b48b2454bea633fbf8e4e 1241496943 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)
java.util.List.add(java.util.concurrent.Future)
internalRunChild
Chamada: java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)
Situação: Primeira Chamada
Chamada: java.util.List.add(java.util.concurrent.Future)
Situação: Manual
Chamada: internalRunChild
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.util.concurrent.Future.get(J, java.util.concurrent.TimeUnit)
Inútil
Método: java.util.concurrent.ExecutorService.shutdownNow()
Inútil
Método: java.util.concurrent.ExecutorService.shutdown()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.InterceptorTest.beforesAndAfters() ************************
*Commit: commit 6aa1fb428b0b6de82ca6288863ce7571b0563017 1241496944 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.0029873
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.2
F-Measure: 0.28571428571428575
************************ Método Avaliado: org.junit.tests.experimental.TimeoutInterceptorTest.globalTimeoutAvoidsInfiniteLoop() ************************
*Commit: commit 6aa1fb428b0b6de82ca6288863ce7571b0563017 1241496944 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.19565203469756068
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.013
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Útil
Percentual de Automatização: 1.0
Corretude: 0.75
F-Measure: 0.8571428571428571
************************ Método Avaliado: org.junit.tests.experimental.parallel.ParallelClassTest.testsDontRunInParallelIfOnlyMethods() ************************
*Commit: commit ad5971c88fb501f007cf1a75200349fb7cbb4b25 1242073611 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.System.currentTimeMillis()
org.junit.experimental.ParallelComputer.methods()
org.junit.runner.JUnitCore.runClasses(org.junit.runner.Computer, [Ljava.lang.Class;)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
java.lang.System.currentTimeMillis()
org.junit.tests.experimental.parallel.ParallelClassTest.greaterThan(J)
org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Chamada: java.lang.System.currentTimeMillis()
Situação: Primeira Chamada
Chamada: org.junit.experimental.ParallelComputer.methods()
Situação: Manual
Chamada: org.junit.runner.JUnitCore.runClasses(org.junit.runner.Computer, [Ljava.lang.Class;)
Situação: Manual
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7272726166116257
Suporte: 0.00597461
F-Measure Suporte e Confiança: 0.012
Chamada: java.lang.System.currentTimeMillis()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666651788902378
Suporte: 0.0029873
F-Measure Suporte e Confiança: 0.006
Chamada: org.junit.tests.experimental.parallel.ParallelClassTest.greaterThan(J)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.util.List.contains(java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: java.lang.System.currentTimeMillis()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.4
F-Measure: 0.3333333333333333
************************ Método Avaliado: org.junit.experimental.ParallelComputer.parallelize(org.junit.runners.ParentRunner) ************************
*Commit: commit b737131b847c53bb4f1cf6dbf86f586008550eba 1242096881 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.Executors.newCachedThreadPool()
setRunnerInterceptor
java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)
java.util.List.add(java.util.concurrent.Future)
java.lang.Runnable.run()
java.util.concurrent.Future.get()
java.lang.Throwable.printStackTrace()
Chamada: java.util.concurrent.Executors.newCachedThreadPool()
Situação: Primeira Chamada
Chamada: setRunnerInterceptor
Situação: Manual
Chamada: java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)
Situação: Manual
Chamada: java.util.List.add(java.util.concurrent.Future)
Situação: Manual
Chamada: java.lang.Runnable.run()
Situação: Manual
Chamada: java.util.concurrent.Future.get()
Situação: Manual
Chamada: java.lang.Throwable.printStackTrace()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.util.concurrent.Future.get(J, java.util.concurrent.TimeUnit)
Inútil
Método: java.util.concurrent.ExecutorService.shutdownNow()
Inútil
Método: java.util.concurrent.ExecutorService.shutdown()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.parallel.ParallelClassTest.testsDontRunInParallelIfOnlyMethods() ************************
*Commit: commit 13bda470bfa1fe989ce80d616fb096af1b937146 1242098120 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.System.currentTimeMillis()
org.junit.experimental.ParallelComputer.methods()
org.junit.runner.JUnitCore.runClasses(org.junit.runner.Computer, [Ljava.lang.Class;)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
java.lang.System.currentTimeMillis()
org.junit.tests.experimental.parallel.ParallelClassTest.greaterThan(J)
org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Chamada: java.lang.System.currentTimeMillis()
Situação: Primeira Chamada
Chamada: org.junit.experimental.ParallelComputer.methods()
Situação: Manual
Chamada: org.junit.runner.JUnitCore.runClasses(org.junit.runner.Computer, [Ljava.lang.Class;)
Situação: Manual
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7272726166116257
Suporte: 0.00597461
F-Measure Suporte e Confiança: 0.012
Chamada: java.lang.System.currentTimeMillis()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666651788902378
Suporte: 0.0029873
F-Measure Suporte e Confiança: 0.006
Chamada: org.junit.tests.experimental.parallel.ParallelClassTest.greaterThan(J)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Long, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.util.List.contains(java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: java.lang.System.currentTimeMillis()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.4
F-Measure: 0.3333333333333333
************************ Método Avaliado: org.junit.experimental.ParallelComputer.parallelize(org.junit.runner.Runner) ************************
*Commit: commit b3ee106f9f95e1f4093adb505e13a163df77f341 1242228182 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.Executors.newCachedThreadPool()
setRunnerInterceptor
java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)
java.util.List.add(java.util.concurrent.Future)
java.lang.Runnable.run()
java.util.concurrent.Future.get()
java.lang.Throwable.printStackTrace()
Chamada: java.util.concurrent.Executors.newCachedThreadPool()
Situação: Primeira Chamada
Chamada: setRunnerInterceptor
Situação: Manual
Chamada: java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)
Situação: Manual
Chamada: java.util.List.add(java.util.concurrent.Future)
Situação: Manual
Chamada: java.lang.Runnable.run()
Situação: Manual
Chamada: java.util.concurrent.Future.get()
Situação: Manual
Chamada: java.lang.Throwable.printStackTrace()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.util.concurrent.Future.get(J, java.util.concurrent.TimeUnit)
Inútil
Método: java.util.concurrent.ExecutorService.shutdownNow()
Inútil
Método: java.util.concurrent.ExecutorService.shutdown()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.interceptor.Interceptors.collectInitializationErrors(java.util.List) ************************
*Commit: commit bbcb8f416628bc168a2ed8353a30b4e9647abf6f 1243302707 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getJavaClass()
java.lang.Class.getDeclaredFields()
org.junit.experimental.interceptor.Interceptors.validateField(java.lang.reflect.Field, java.util.List)
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.TestClass.getJavaClass()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.31250041843805443
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: java.lang.Class.getDeclaredFields()
Situação: Manual
Chamada: org.junit.experimental.interceptor.Interceptors.validateField(java.lang.reflect.Field, java.util.List)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Útil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: org.junit.experimental.interceptor.Interceptors.validateField(java.lang.reflect.Field, java.util.List) ************************
*Commit: commit bbcb8f416628bc168a2ed8353a30b4e9647abf6f 1243302707 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getAnnotation
java.lang.reflect.Field.getType()
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.reflect.Field.getName()
java.util.List.add(java.lang.Throwable)
java.lang.reflect.Field.getModifiers()
java.lang.reflect.Modifier.isPublic(I)
java.lang.reflect.Field.getName()
java.util.List.add(java.lang.Throwable)
Chamada: getAnnotation
Situação: Primeira Chamada
Chamada: java.lang.reflect.Field.getType()
Situação: Manual
Chamada: java.lang.Class.isAssignableFrom(java.lang.Class)
Situação: Manual
Chamada: java.lang.reflect.Field.getName()
Situação: Manual
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Manual
Chamada: java.lang.reflect.Field.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isPublic(I)
Situação: Manual
Chamada: java.lang.reflect.Field.getName()
Situação: Manual
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3000002677999962
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getName()
Inútil
Método: java.util.List.add(java.lang.Throwable)
Útil
Percentual de Automatização: 0.125
Corretude: 0.5
F-Measure: 0.2
************************ Método Avaliado: org.junit.tests.experimental.interceptor.InterceptorTest.validatePrivateInterceptor() ************************
*Commit: commit bbcb8f416628bc168a2ed8353a30b4e9647abf6f 1243302707 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.InterceptorTest.validateWrongTypedField() ************************
*Commit: commit bbcb8f416628bc168a2ed8353a30b4e9647abf6f 1243302707 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: interceptorFields ************************
*Commit: commit 1e54b68d2fe7c4238993b360c7be6fbb05d30528 1243391244 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
getAnnotatedFields
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: getAnnotatedFields
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.interceptor.InterceptorTest.validateWrongTypedFieldInSuperclass() ************************
*Commit: commit 1e54b68d2fe7c4238993b360c7be6fbb05d30528 1243391244 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: interceptorFields ************************
*Commit: commit e6769d4009db8030661815965e2e22829a4619ff 1243392958 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
getAnnotatedFields
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: getAnnotatedFields
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.BlockJUnit4ClassRunner.validateInterceptorField(java.lang.reflect.Field, java.util.List) ************************
*Commit: commit e6769d4009db8030661815965e2e22829a4619ff 1243392958 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.Field.getType()
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.reflect.Field.getName()
java.util.List.add(java.lang.Throwable)
java.lang.reflect.Field.getModifiers()
java.lang.reflect.Modifier.isPublic(I)
java.lang.reflect.Field.getName()
java.util.List.add(java.lang.Throwable)
Chamada: java.lang.reflect.Field.getType()
Situação: Primeira Chamada
Chamada: java.lang.Class.isAssignableFrom(java.lang.Class)
Situação: Manual
Chamada: java.lang.reflect.Field.getName()
Situação: Manual
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Manual
Chamada: java.lang.reflect.Field.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isPublic(I)
Situação: Manual
Chamada: java.lang.reflect.Field.getName()
Situação: Manual
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3000002677999962
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getName()
Inútil
Método: java.util.List.add(java.lang.Throwable)
Útil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.5
F-Measure: 0.22222222222222224
************************ Método Avaliado: org.junit.experimental.interceptor.ExpectedException$ExpectedExceptionStatement.evaluate() ************************
*Commit: commit 26fa0a4207e21f058d220c84f8195ee25943400c 1243397989 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.Statement.evaluate()
org.junit.experimental.interceptor.ExpectedException.noExpectedException()
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.getName()
java.lang.Object.getClass()
java.lang.Class.getName()
org.junit.experimental.interceptor.ExpectedException$ExpectedExceptionStatement.getMessage(java.lang.Throwable)
java.lang.String.contains(java.lang.CharSequence)
org.junit.experimental.interceptor.ExpectedException$ExpectedExceptionStatement.getMessage(java.lang.Throwable)
org.junit.experimental.interceptor.ExpectedException.noExpectedException()
java.lang.Class.getName()
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Primeira Chamada
Chamada: org.junit.experimental.interceptor.ExpectedException.noExpectedException()
Situação: Manual
Chamada: java.lang.Object.getClass()
Situação: Manual
Chamada: java.lang.Class.isAssignableFrom(java.lang.Class)
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2916669456253696
Suporte: 0.00522778
F-Measure Suporte e Confiança: 0.011
Chamada: java.lang.Object.getClass()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.20833361229203629
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2916669456253696
Suporte: 0.00522778
F-Measure Suporte e Confiança: 0.011
Chamada: org.junit.experimental.interceptor.ExpectedException$ExpectedExceptionStatement.getMessage(java.lang.Throwable)
Situação: Manual
Chamada: java.lang.String.contains(java.lang.CharSequence)
Situação: Manual
Chamada: org.junit.experimental.interceptor.ExpectedException$ExpectedExceptionStatement.getMessage(java.lang.Throwable)
Situação: Manual
Chamada: org.junit.experimental.interceptor.ExpectedException.noExpectedException()
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
Inútil
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.lang.Object.getClass()
Útil
Método: java.lang.Class.getName()
Útil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Percentual de Automatização: 0.36363636363636365
Corretude: 0.11764705882352941
F-Measure: 0.17777777777777776
************************ Método Avaliado: org.junit.experimental.interceptor.ExpectedException$ExpectedExceptionStatement.getMessage(java.lang.Throwable) ************************
*Commit: commit 26fa0a4207e21f058d220c84f8195ee25943400c 1243397989 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Throwable.getMessage()
java.lang.Throwable.getMessage()
Chamada: java.lang.Throwable.getMessage()
Situação: Primeira Chamada
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.expectedExceptionPasses() ************************
*Commit: commit 26fa0a4207e21f058d220c84f8195ee25943400c 1243397989 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.failsIfExceptionMessageNeverComes() ************************
*Commit: commit 26fa0a4207e21f058d220c84f8195ee25943400c 1243397989 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.passesWithSubstringMethod() ************************
*Commit: commit 26fa0a4207e21f058d220c84f8195ee25943400c 1243397989 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.failsWithNullExceptionMessage() ************************
*Commit: commit 26fa0a4207e21f058d220c84f8195ee25943400c 1243397989 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.failsIfExceptionNeverComes() ************************
*Commit: commit 26fa0a4207e21f058d220c84f8195ee25943400c 1243397989 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.unExpectedExceptionFails() ************************
*Commit: commit 26fa0a4207e21f058d220c84f8195ee25943400c 1243397989 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.wrongMessageFails() ************************
*Commit: commit 26fa0a4207e21f058d220c84f8195ee25943400c 1243397989 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.experimental.ParallelComputer.parallelize(org.junit.runner.Runner) ************************
*Commit: commit b5573b70809bed76a0397bb5bb196b6b2144d3d4 1243398195 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.Executors.newCachedThreadPool()
setRunnerInterceptor
java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)
java.util.List.add(java.util.concurrent.Future)
java.lang.Runnable.run()
java.util.concurrent.Future.get()
java.lang.Throwable.printStackTrace()
Chamada: java.util.concurrent.Executors.newCachedThreadPool()
Situação: Primeira Chamada
Chamada: setRunnerInterceptor
Situação: Manual
Chamada: java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)
Situação: Manual
Chamada: java.util.List.add(java.util.concurrent.Future)
Situação: Manual
Chamada: java.lang.Runnable.run()
Situação: Manual
Chamada: java.util.concurrent.Future.get()
Situação: Manual
Chamada: java.lang.Throwable.printStackTrace()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.util.concurrent.Future.get(J, java.util.concurrent.TimeUnit)
Inútil
Método: java.util.concurrent.ExecutorService.shutdownNow()
Inútil
Método: java.util.concurrent.ExecutorService.shutdown()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.interceptor.Interceptors.collectInitializationErrors(java.util.List) ************************
*Commit: commit 356a069f8cbbad2a368fdbc6ceee4e94200e7140 1243398196 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getJavaClass()
java.lang.Class.getDeclaredFields()
org.junit.experimental.interceptor.Interceptors.validateField(java.lang.reflect.Field, java.util.List)
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.TestClass.getJavaClass()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.31250041843805443
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: java.lang.Class.getDeclaredFields()
Situação: Manual
Chamada: org.junit.experimental.interceptor.Interceptors.validateField(java.lang.reflect.Field, java.util.List)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Útil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: org.junit.experimental.interceptor.Interceptors.validateField(java.lang.reflect.Field, java.util.List) ************************
*Commit: commit 356a069f8cbbad2a368fdbc6ceee4e94200e7140 1243398196 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getAnnotation
java.lang.reflect.Field.getType()
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.reflect.Field.getName()
java.util.List.add(java.lang.Throwable)
java.lang.reflect.Field.getModifiers()
java.lang.reflect.Modifier.isPublic(I)
java.lang.reflect.Field.getName()
java.util.List.add(java.lang.Throwable)
Chamada: getAnnotation
Situação: Primeira Chamada
Chamada: java.lang.reflect.Field.getType()
Situação: Manual
Chamada: java.lang.Class.isAssignableFrom(java.lang.Class)
Situação: Manual
Chamada: java.lang.reflect.Field.getName()
Situação: Manual
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Manual
Chamada: java.lang.reflect.Field.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isPublic(I)
Situação: Manual
Chamada: java.lang.reflect.Field.getName()
Situação: Manual
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3000002677999962
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getName()
Inútil
Método: java.util.List.add(java.lang.Throwable)
Útil
Percentual de Automatização: 0.125
Corretude: 0.5
F-Measure: 0.2
************************ Método Avaliado: org.junit.tests.experimental.interceptor.InterceptorTest.validatePrivateInterceptor() ************************
*Commit: commit 356a069f8cbbad2a368fdbc6ceee4e94200e7140 1243398196 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.InterceptorTest.validateWrongTypedField() ************************
*Commit: commit 356a069f8cbbad2a368fdbc6ceee4e94200e7140 1243398196 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: interceptorFields ************************
*Commit: commit 5261a76c3014edc93f568ac76e8012d59dc2c831 1243398226 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
getAnnotatedFields
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: getAnnotatedFields
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.interceptor.InterceptorTest.validateWrongTypedFieldInSuperclass() ************************
*Commit: commit 5261a76c3014edc93f568ac76e8012d59dc2c831 1243398226 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: interceptorFields ************************
*Commit: commit fb7e47081b37842a814e9f35013b9b12a33b3fc3 1243398250 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
getAnnotatedFields
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: getAnnotatedFields
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.BlockJUnit4ClassRunner.validateInterceptorField(java.lang.reflect.Field, java.util.List) ************************
*Commit: commit fb7e47081b37842a814e9f35013b9b12a33b3fc3 1243398250 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.Field.getType()
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.reflect.Field.getName()
java.util.List.add(java.lang.Throwable)
java.lang.reflect.Field.getModifiers()
java.lang.reflect.Modifier.isPublic(I)
java.lang.reflect.Field.getName()
java.util.List.add(java.lang.Throwable)
Chamada: java.lang.reflect.Field.getType()
Situação: Primeira Chamada
Chamada: java.lang.Class.isAssignableFrom(java.lang.Class)
Situação: Manual
Chamada: java.lang.reflect.Field.getName()
Situação: Manual
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Manual
Chamada: java.lang.reflect.Field.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isPublic(I)
Situação: Manual
Chamada: java.lang.reflect.Field.getName()
Situação: Manual
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3000002677999962
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getName()
Inútil
Método: java.util.List.add(java.lang.Throwable)
Útil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.5
F-Measure: 0.22222222222222224
************************ Método Avaliado: org.junit.experimental.interceptor.ExpectedException$ExpectedExceptionStatement.evaluate() ************************
*Commit: commit 26a9910d4df6899107d78f77795f4aba2eadde12 1243398275 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.Statement.evaluate()
org.junit.experimental.interceptor.ExpectedException.noExpectedException()
java.lang.Object.getClass()
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.getName()
java.lang.Object.getClass()
java.lang.Class.getName()
org.junit.experimental.interceptor.ExpectedException$ExpectedExceptionStatement.getMessage(java.lang.Throwable)
java.lang.String.contains(java.lang.CharSequence)
org.junit.experimental.interceptor.ExpectedException$ExpectedExceptionStatement.getMessage(java.lang.Throwable)
org.junit.experimental.interceptor.ExpectedException.noExpectedException()
java.lang.Class.getName()
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Primeira Chamada
Chamada: org.junit.experimental.interceptor.ExpectedException.noExpectedException()
Situação: Manual
Chamada: java.lang.Object.getClass()
Situação: Manual
Chamada: java.lang.Class.isAssignableFrom(java.lang.Class)
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2916669456253696
Suporte: 0.00522778
F-Measure Suporte e Confiança: 0.011
Chamada: java.lang.Object.getClass()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.20833361229203629
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2916669456253696
Suporte: 0.00522778
F-Measure Suporte e Confiança: 0.011
Chamada: org.junit.experimental.interceptor.ExpectedException$ExpectedExceptionStatement.getMessage(java.lang.Throwable)
Situação: Manual
Chamada: java.lang.String.contains(java.lang.CharSequence)
Situação: Manual
Chamada: org.junit.experimental.interceptor.ExpectedException$ExpectedExceptionStatement.getMessage(java.lang.Throwable)
Situação: Manual
Chamada: org.junit.experimental.interceptor.ExpectedException.noExpectedException()
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
Inútil
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.lang.Object.getClass()
Útil
Método: java.lang.Class.getName()
Útil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Percentual de Automatização: 0.36363636363636365
Corretude: 0.11764705882352941
F-Measure: 0.17777777777777776
************************ Método Avaliado: org.junit.experimental.interceptor.ExpectedException$ExpectedExceptionStatement.getMessage(java.lang.Throwable) ************************
*Commit: commit 26a9910d4df6899107d78f77795f4aba2eadde12 1243398275 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Throwable.getMessage()
java.lang.Throwable.getMessage()
Chamada: java.lang.Throwable.getMessage()
Situação: Primeira Chamada
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.expectedExceptionPasses() ************************
*Commit: commit 26a9910d4df6899107d78f77795f4aba2eadde12 1243398275 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.failsIfExceptionMessageNeverComes() ************************
*Commit: commit 26a9910d4df6899107d78f77795f4aba2eadde12 1243398275 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.passesWithSubstringMethod() ************************
*Commit: commit 26a9910d4df6899107d78f77795f4aba2eadde12 1243398275 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.failsWithNullExceptionMessage() ************************
*Commit: commit 26a9910d4df6899107d78f77795f4aba2eadde12 1243398275 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.failsIfExceptionNeverComes() ************************
*Commit: commit 26a9910d4df6899107d78f77795f4aba2eadde12 1243398275 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.unExpectedExceptionFails() ************************
*Commit: commit 26a9910d4df6899107d78f77795f4aba2eadde12 1243398275 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.wrongMessageFails() ************************
*Commit: commit 26a9910d4df6899107d78f77795f4aba2eadde12 1243398275 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.assertion.BothTest.superclassesAreOkInSecondPositionOnly() ************************
*Commit: commit e3f50a17c8c6fb7a33bd8a7afb36235b22422346 1243607973 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
containsString
org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
org.hamcrest.CoreMatchers.is(java.lang.Class)
matches
and
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: containsString
Situação: Primeira Chamada
Chamada: org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Class)
Situação: Manual
Chamada: matches
Situação: Manual
Chamada: and
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.assertion.BothTest.isOneOfPasses() ************************
*Commit: commit 67c31453db464a17bd907a8b4ccfb9103ef946f0 1243610430 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
isOneOf
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Arrays.asList([Ljava.lang.String;)
isOneOf
org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Chamada: isOneOf
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: isOneOf
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch() ************************
*Commit: commit 9164fdee10603ebdb2b4a7d78ab00046fa3ad37f 1243612582 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.CoreMatchers.is(java.lang.Class)
matches
org.junit.Assert.assertThat(java.lang.String, java.lang.String, org.hamcrest.Matcher)
java.lang.Throwable.getMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Class)
Situação: Primeira Chamada
Chamada: matches
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.647059518511663
Suporte: 0.0164302
F-Measure Suporte e Confiança: 0.033
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.assertion.BothTest.superclassesAreOkInSecondPositionOnly() ************************
*Commit: commit 505f7705d932002881b530829f4750e9438a963e 1243613181 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
containsString
org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
org.hamcrest.CoreMatchers.is(java.lang.Class)
matches
and
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: containsString
Situação: Primeira Chamada
Chamada: org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Class)
Situação: Manual
Chamada: matches
Situação: Manual
Chamada: and
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.assertion.BothTest.isOneOfPasses() ************************
*Commit: commit a5aa7cf7d61162947504060c9d3b6d4db6c073cf 1243613198 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
isOneOf
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Arrays.asList([Ljava.lang.String;)
isOneOf
org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Chamada: isOneOf
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: isOneOf
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.assertion.AssertionTest.assertThatIncludesAdvancedMismatch() ************************
*Commit: commit 79b7c3e8f1d725460212c659524b9bbf5d8a1461 1243613199 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.CoreMatchers.is(java.lang.Class)
matches
org.junit.Assert.assertThat(java.lang.String, java.lang.String, org.hamcrest.Matcher)
java.lang.Throwable.getMessage()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Class)
Situação: Primeira Chamada
Chamada: matches
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.647059518511663
Suporte: 0.0164302
F-Measure Suporte e Confiança: 0.033
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.failsWithMatcher() ************************
*Commit: commit d5af0e46c1cd912ef0932ce868517b1e8335531e 1243888625 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.succeedsWithMatcher() ************************
*Commit: commit d5af0e46c1cd912ef0932ce868517b1e8335531e 1243888625 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.experimental.interceptor.ExpectedException.expect(org.hamcrest.Matcher) ************************
*Commit: commit a01928138beb41a189dc1fa43f92942b39393cbb 1243889861 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
matches
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Chamada: org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
Situação: Primeira Chamada
Chamada: matches
Situação: Manual
Chamada: org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00522778
F-Measure Suporte e Confiança: 0.011
Corretude/Utilidade dos Métodos
Método: org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.succeedsWithMessageMatcher() ************************
*Commit: commit a01928138beb41a189dc1fa43f92942b39393cbb 1243889861 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.failsWithMultipleMatchers() ************************
*Commit: commit a01928138beb41a189dc1fa43f92942b39393cbb 1243889861 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.failsWithMatcher() ************************
*Commit: commit a423117429dc71bf3068eeae38c6443672beda7f 1243972537 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.succeedsWithMatcher() ************************
*Commit: commit a423117429dc71bf3068eeae38c6443672beda7f 1243972537 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.experimental.interceptor.ExpectedException.expect(org.hamcrest.Matcher) ************************
*Commit: commit 7c6809f47fde700f345ded8faaff468dc2d53c08 1243972554 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
matches
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Chamada: org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
Situação: Primeira Chamada
Chamada: matches
Situação: Manual
Chamada: org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00522778
F-Measure Suporte e Confiança: 0.011
Corretude/Utilidade dos Métodos
Método: org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.succeedsWithMessageMatcher() ************************
*Commit: commit 7c6809f47fde700f345ded8faaff468dc2d53c08 1243972554 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExpectedExceptionInterceptorTest.failsWithMultipleMatchers() ************************
*Commit: commit 7c6809f47fde700f345ded8faaff468dc2d53c08 1243972554 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.experimental.interceptor.ExternalResource.intercept(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod) ************************
*Commit: commit 20dd0741fca1009e5f641cd0fd1f319459ceeed0 1244088563 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.interceptor.ExternalResource.before()
org.junit.runners.model.Statement.evaluate()
org.junit.experimental.interceptor.ExternalResource.after()
Chamada: org.junit.experimental.interceptor.ExternalResource.before()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Manual
Chamada: org.junit.experimental.interceptor.ExternalResource.after()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.interceptor.ExternalResourceInterceptorTest.externalResourceGeneratesCorrectSequence() ************************
*Commit: commit 20dd0741fca1009e5f641cd0fd1f319459ceeed0 1244088563 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.5
F-Measure: 0.5714285714285715
************************ Método Avaliado: org.junit.tests.experimental.interceptor.TempFolderInterceptorTest.tempFolderIsDeleted() ************************
*Commit: commit 20dd0741fca1009e5f641cd0fd1f319459ceeed0 1244088563 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
java.io.File.exists()
org.junit.Assert.assertFalse(Z)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Chamada: java.io.File.exists()
Situação: Manual
Chamada: org.junit.Assert.assertFalse(Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: java.io.File.delete()
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.4
F-Measure: 0.4444444444444445
************************ Método Avaliado: org.junit.tests.experimental.interceptor.TempFolderInterceptorTest.recursiveDeleteFolderWithOneElement() ************************
*Commit: commit 20dd0741fca1009e5f641cd0fd1f319459ceeed0 1244088563 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
create
newFile
delete
java.io.File.exists()
org.junit.Assert.assertFalse(Z)
getRoot
exists
org.junit.Assert.assertFalse(Z)
Chamada: create
Situação: Primeira Chamada
Chamada: newFile
Situação: Manual
Chamada: delete
Situação: Manual
Chamada: java.io.File.exists()
Situação: Manual
Chamada: org.junit.Assert.assertFalse(Z)
Situação: Manual
Chamada: getRoot
Situação: Manual
Chamada: exists
Situação: Manual
Chamada: org.junit.Assert.assertFalse(Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.io.File.delete()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.interceptor.TempFolderInterceptorTest.subFolderIsDeleted() ************************
*Commit: commit 20dd0741fca1009e5f641cd0fd1f319459ceeed0 1244088563 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
java.io.File.exists()
org.junit.Assert.assertFalse(Z)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Chamada: java.io.File.exists()
Situação: Manual
Chamada: org.junit.Assert.assertFalse(Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: java.io.File.delete()
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.4
F-Measure: 0.4444444444444445
************************ Método Avaliado: org.junit.tests.experimental.interceptor.TempFolderInterceptorTest$CreatesSubFolder.testUsingTempFolder() ************************
*Commit: commit 20dd0741fca1009e5f641cd0fd1f319459ceeed0 1244088563 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
newFolder
java.io.File.createNewFile()
java.io.File.exists()
org.junit.Assert.assertTrue(Z)
Chamada: newFolder
Situação: Primeira Chamada
Chamada: java.io.File.createNewFile()
Situação: Manual
Chamada: java.io.File.exists()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.io.File.delete()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.interceptor.TempFolderInterceptorTest$HasTempFolder.testUsingTempFolder() ************************
*Commit: commit 20dd0741fca1009e5f641cd0fd1f319459ceeed0 1244088563 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
newFile
java.io.File.exists()
org.junit.Assert.assertTrue(Z)
Chamada: newFile
Situação: Primeira Chamada
Chamada: java.io.File.exists()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.io.File.delete()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.interceptor.Verifier.intercept(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod) ************************
*Commit: commit 11258fcfd07dd63754fbea374bbba59ea82bc685 1244091148 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.Statement.evaluate()
org.junit.experimental.interceptor.Verifier.verify()
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Primeira Chamada
Chamada: org.junit.experimental.interceptor.Verifier.verify()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.internal.runners.model.MultipleFailureException.assertEmpty(java.util.List) ************************
*Commit: commit 11258fcfd07dd63754fbea374bbba59ea82bc685 1244091148 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.isEmpty()
java.util.List.size()
java.util.List.get(I)
Chamada: java.util.List.isEmpty()
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.interceptor.VerifierInterceptorTest.usedErrorCollectorTwiceShouldFail() ************************
*Commit: commit 11258fcfd07dd63754fbea374bbba59ea82bc685 1244091148 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.4
Corretude: 0.25
F-Measure: 0.3076923076923077
************************ Método Avaliado: org.junit.tests.experimental.interceptor.VerifierInterceptorTest.usedErrorCollectorShouldFail() ************************
*Commit: commit 11258fcfd07dd63754fbea374bbba59ea82bc685 1244091148 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: org.junit.tests.experimental.interceptor.VerifierInterceptorTest.verifierRunsAfterTest() ************************
*Commit: commit 11258fcfd07dd63754fbea374bbba59ea82bc685 1244091148 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.experimental.interceptor.Verifier.intercept(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod) ************************
*Commit: commit 077d4657cce12a38d4f34266fc62c190b28235a9 1244091244 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.Statement.evaluate()
org.junit.experimental.interceptor.Verifier.verify()
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Primeira Chamada
Chamada: org.junit.experimental.interceptor.Verifier.verify()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.internal.runners.model.MultipleFailureException.assertEmpty(java.util.List) ************************
*Commit: commit 077d4657cce12a38d4f34266fc62c190b28235a9 1244091244 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.isEmpty()
java.util.List.size()
java.util.List.get(I)
Chamada: java.util.List.isEmpty()
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.interceptor.VerifierInterceptorTest.usedErrorCollectorTwiceShouldFail() ************************
*Commit: commit 077d4657cce12a38d4f34266fc62c190b28235a9 1244091244 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.4
Corretude: 0.25
F-Measure: 0.3076923076923077
************************ Método Avaliado: org.junit.tests.experimental.interceptor.VerifierInterceptorTest.usedErrorCollectorShouldFail() ************************
*Commit: commit 077d4657cce12a38d4f34266fc62c190b28235a9 1244091244 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: org.junit.tests.experimental.interceptor.VerifierInterceptorTest.verifierRunsAfterTest() ************************
*Commit: commit 077d4657cce12a38d4f34266fc62c190b28235a9 1244091244 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.VerifierInterceptorTest$UsesErrorCollectorCheckThat.example() ************************
*Commit: commit 50b77b1f3108aa77af0906162d552e513936c322 1245129130 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.CoreMatchers.is(java.lang.Integer)
checkThat
org.hamcrest.CoreMatchers.is(java.lang.Integer)
checkThat
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Primeira Chamada
Chamada: checkThat
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.18518520355281365
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: checkThat
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assume.assumeThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: org.junit.tests.experimental.interceptor.VerifierInterceptorTest.usedErrorCollectorCheckSucceedsShouldPass() ************************
*Commit: commit 50b77b1f3108aa77af0906162d552e513936c322 1245129130 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.VerifierInterceptorTest.usedErrorCollectorCheckThatShouldFail() ************************
*Commit: commit 50b77b1f3108aa77af0906162d552e513936c322 1245129130 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: org.junit.tests.experimental.interceptor.VerifierInterceptorTest.usedErrorCollectorCheckSucceedsShouldFail() ************************
*Commit: commit 50b77b1f3108aa77af0906162d552e513936c322 1245129130 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.fieldsOnSubclassesShadowSuperclasses() ************************
*Commit: commit fc7acc64dbbf5c28ef4bd3b142e35922d6294428 1246418345 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getAnnotatedFields
size
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: getAnnotatedFields
Situação: Primeira Chamada
Chamada: size
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7407398223593182
Suporte: 0.0149365
F-Measure Suporte e Confiança: 0.030
Corretude/Utilidade dos Métodos
Método: org.junit.Assume.assumeThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: org.junit.experimental.max.MaxCore.findLeaves(org.junit.runner.Description, org.junit.runner.Description, java.util.List) ************************
*Commit: commit 223b34b516467bcd9cb7ebc7f49549f2e7362dca 1246470233 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.getChildren()
java.util.ArrayList.isEmpty()
org.junit.runner.Description.toString()
java.lang.String.equals(java.lang.Object)
org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
java.util.List.add(org.junit.runner.Description)
java.util.List.add(org.junit.runner.Description)
org.junit.runner.Description.getChildren()
org.junit.experimental.max.MaxCore.findLeaves(org.junit.runner.Description, org.junit.runner.Description, java.util.List)
Chamada: org.junit.runner.Description.getChildren()
Situação: Primeira Chamada
Chamada: java.util.ArrayList.isEmpty()
Situação: Manual
Chamada: org.junit.runner.Description.toString()
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
Situação: Manual
Chamada: java.util.List.add(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.List.add(org.junit.runner.Description)
Situação: Manual
Chamada: org.junit.runner.Description.getChildren()
Situação: Manual
Chamada: org.junit.experimental.max.MaxCore.findLeaves(org.junit.runner.Description, org.junit.runner.Description, java.util.List)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.ArrayList.size()
Inútil
Método: java.lang.String.equals(java.lang.Object)
Inútil
Método: org.junit.runner.Description.addChild(org.junit.runner.Description)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.max.MaxStarterTest.correctErrorFromHalfMalformedTest() ************************
*Commit: commit 223b34b516467bcd9cb7ebc7f49549f2e7362dca 1246470233 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.experimental.max.MaxCore.sortRequest(org.junit.runner.Request)
org.junit.runner.Request.getRunner()
org.junit.runner.JUnitCore.run(org.junit.runner.Runner)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.toString()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.junit.runner.notification.Failure.toString()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.junit.runner.notification.Failure.toString()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.max.MaxCore.sortRequest(org.junit.runner.Request)
Situação: Manual
Chamada: org.junit.runner.Request.getRunner()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4242431619822036
Suporte: 0.0104556
F-Measure Suporte e Confiança: 0.021
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Runner)
Situação: Manual
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7878784190088983
Suporte: 0.0194175
F-Measure Suporte e Confiança: 0.038
Chamada: org.junit.runner.notification.Failure.toString()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.notification.Failure.toString()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1034481484901653
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.runner.notification.Failure.toString()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1034481484901653
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Runner.testCount()
Inútil
Método: org.junit.runner.Runner.getDescription()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: java.util.List.get(I)
Útil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Método: org.junit.runner.Request.getRunner()
Útil
Método: org.junit.runner.Request.sortWith(java.util.Comparator)
Inútil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.2727272727272727
F-Measure: 0.2790697674418604
************************ Método Avaliado: org.junit.experimental.max.MaxHistory.locallyStored(java.io.File) ************************
*Commit: commit 5501ad5d546427b228b208da15cec997e0b13cc8 1246569869 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.io.File.exists()
org.junit.experimental.max.MaxHistory.readHistory(java.io.File)
java.lang.Throwable.printStackTrace()
java.io.File.delete()
Chamada: java.io.File.exists()
Situação: Primeira Chamada
Chamada: org.junit.experimental.max.MaxHistory.readHistory(java.io.File)
Situação: Manual
Chamada: java.lang.Throwable.printStackTrace()
Situação: Manual
Chamada: java.io.File.delete()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.io.File.delete()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.experimental.interceptor.ExternalResource.intercept(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object) ************************
*Commit: commit 8e313a1e58a56694c0441b2fa60974fa8e1bfe31 1246932116 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.interceptor.ExternalResource.before()
org.junit.runners.model.Statement.evaluate()
org.junit.experimental.interceptor.ExternalResource.after()
Chamada: org.junit.experimental.interceptor.ExternalResource.before()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Manual
Chamada: org.junit.experimental.interceptor.ExternalResource.after()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.interceptor.TestWatchman.intercept(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object) ************************
*Commit: commit 8e313a1e58a56694c0441b2fa60974fa8e1bfe31 1246932116 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.interceptor.TestWatchman.starting(org.junit.runners.model.FrameworkMethod)
org.junit.runners.model.Statement.evaluate()
org.junit.experimental.interceptor.TestWatchman.succeeded(org.junit.runners.model.FrameworkMethod)
org.junit.experimental.interceptor.TestWatchman.failed(java.lang.Throwable, org.junit.runners.model.FrameworkMethod)
org.junit.experimental.interceptor.TestWatchman.finished(org.junit.runners.model.FrameworkMethod)
Chamada: org.junit.experimental.interceptor.TestWatchman.starting(org.junit.runners.model.FrameworkMethod)
Situação: Primeira Chamada
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Manual
Chamada: org.junit.experimental.interceptor.TestWatchman.succeeded(org.junit.runners.model.FrameworkMethod)
Situação: Manual
Chamada: org.junit.experimental.interceptor.TestWatchman.failed(java.lang.Throwable, org.junit.runners.model.FrameworkMethod)
Situação: Manual
Chamada: org.junit.experimental.interceptor.TestWatchman.finished(org.junit.runners.model.FrameworkMethod)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.interceptor.Verifier.intercept(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object) ************************
*Commit: commit 8e313a1e58a56694c0441b2fa60974fa8e1bfe31 1246932116 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.Statement.evaluate()
org.junit.experimental.interceptor.Verifier.verify()
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Primeira Chamada
Chamada: org.junit.experimental.interceptor.Verifier.verify()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.interceptor.ExternalResource.apply(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object) ************************
*Commit: commit 409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d 1246938614 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.interceptor.ExternalResource.before()
org.junit.runners.model.Statement.evaluate()
org.junit.experimental.interceptor.ExternalResource.after()
Chamada: org.junit.experimental.interceptor.ExternalResource.before()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Manual
Chamada: org.junit.experimental.interceptor.ExternalResource.after()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.interceptor.TestWatchman.apply(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object) ************************
*Commit: commit 409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d 1246938614 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.interceptor.TestWatchman.starting(org.junit.runners.model.FrameworkMethod)
org.junit.runners.model.Statement.evaluate()
org.junit.experimental.interceptor.TestWatchman.succeeded(org.junit.runners.model.FrameworkMethod)
org.junit.experimental.interceptor.TestWatchman.failed(java.lang.Throwable, org.junit.runners.model.FrameworkMethod)
org.junit.experimental.interceptor.TestWatchman.finished(org.junit.runners.model.FrameworkMethod)
Chamada: org.junit.experimental.interceptor.TestWatchman.starting(org.junit.runners.model.FrameworkMethod)
Situação: Primeira Chamada
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Manual
Chamada: org.junit.experimental.interceptor.TestWatchman.succeeded(org.junit.runners.model.FrameworkMethod)
Situação: Manual
Chamada: org.junit.experimental.interceptor.TestWatchman.failed(java.lang.Throwable, org.junit.runners.model.FrameworkMethod)
Situação: Manual
Chamada: org.junit.experimental.interceptor.TestWatchman.finished(org.junit.runners.model.FrameworkMethod)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.interceptor.Verifier.apply(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object) ************************
*Commit: commit 409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d 1246938614 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.Statement.evaluate()
org.junit.experimental.interceptor.Verifier.verify()
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Primeira Chamada
Chamada: org.junit.experimental.interceptor.Verifier.verify()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.max.MaxHistory.forFolder(java.io.File) ************************
*Commit: commit 409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d 1246938614 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.io.File.getPath()
java.io.File.exists()
org.junit.experimental.max.MaxHistory.readHistory(java.io.File)
java.lang.Throwable.printStackTrace()
java.io.File.delete()
Chamada: java.io.File.getPath()
Situação: Primeira Chamada
Chamada: java.io.File.exists()
Situação: Manual
Chamada: org.junit.experimental.max.MaxHistory.readHistory(java.io.File)
Situação: Manual
Chamada: java.lang.Throwable.printStackTrace()
Situação: Manual
Chamada: java.io.File.delete()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.io.File.delete()
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: ruleFields ************************
*Commit: commit 409a8e06c9f2ec5aa0d9db8a3d413f394c290f6d 1246938614 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
getAnnotatedFields
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: getAnnotatedFields
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.interceptor.VerifierInterceptorTest$UsesErrorCollectorCheckThat.example() ************************
*Commit: commit 23cee0d142da2296c7a1dad7129da784ad9eb3f7 1246938742 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.CoreMatchers.is(java.lang.Integer)
checkThat
org.hamcrest.CoreMatchers.is(java.lang.Integer)
checkThat
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Primeira Chamada
Chamada: checkThat
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.18518520355281365
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: checkThat
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assume.assumeThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: org.junit.tests.experimental.interceptor.VerifierInterceptorTest.usedErrorCollectorCheckSucceedsShouldPass() ************************
*Commit: commit 23cee0d142da2296c7a1dad7129da784ad9eb3f7 1246938742 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.interceptor.VerifierInterceptorTest.usedErrorCollectorCheckThatShouldFail() ************************
*Commit: commit 23cee0d142da2296c7a1dad7129da784ad9eb3f7 1246938742 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: org.junit.tests.experimental.interceptor.VerifierInterceptorTest.usedErrorCollectorCheckSucceedsShouldFail() ************************
*Commit: commit 23cee0d142da2296c7a1dad7129da784ad9eb3f7 1246938742 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: org.junit.tests.running.classes.TestClassTest.fieldsOnSubclassesShadowSuperclasses() ************************
*Commit: commit 003f66a2e928691100fbe719d7253b5213e99698 1246938815 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getAnnotatedFields
size
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Chamada: getAnnotatedFields
Situação: Primeira Chamada
Chamada: size
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7407398223593182
Suporte: 0.0149365
F-Measure Suporte e Confiança: 0.030
Corretude/Utilidade dos Métodos
Método: org.junit.Assume.assumeThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: org.junit.experimental.max.MaxCore.findLeaves(org.junit.runner.Description, org.junit.runner.Description, java.util.List) ************************
*Commit: commit d8da2f699a89857292e5e5b92945b2fe3c0a039a 1246938818 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.getChildren()
java.util.ArrayList.isEmpty()
org.junit.runner.Description.toString()
java.lang.String.equals(java.lang.Object)
org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
java.util.List.add(org.junit.runner.Description)
java.util.List.add(org.junit.runner.Description)
org.junit.runner.Description.getChildren()
org.junit.experimental.max.MaxCore.findLeaves(org.junit.runner.Description, org.junit.runner.Description, java.util.List)
Chamada: org.junit.runner.Description.getChildren()
Situação: Primeira Chamada
Chamada: java.util.ArrayList.isEmpty()
Situação: Manual
Chamada: org.junit.runner.Description.toString()
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
Situação: Manual
Chamada: java.util.List.add(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.List.add(org.junit.runner.Description)
Situação: Manual
Chamada: org.junit.runner.Description.getChildren()
Situação: Manual
Chamada: org.junit.experimental.max.MaxCore.findLeaves(org.junit.runner.Description, org.junit.runner.Description, java.util.List)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.ArrayList.size()
Inútil
Método: java.lang.String.equals(java.lang.Object)
Inútil
Método: org.junit.runner.Description.addChild(org.junit.runner.Description)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.max.MaxStarterTest.correctErrorFromHalfMalformedTest() ************************
*Commit: commit d8da2f699a89857292e5e5b92945b2fe3c0a039a 1246938818 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.experimental.max.MaxCore.sortRequest(org.junit.runner.Request)
org.junit.runner.Request.getRunner()
org.junit.runner.JUnitCore.run(org.junit.runner.Runner)
org.junit.runner.Result.getFailures()
java.util.List.get(I)
org.junit.runner.notification.Failure.toString()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.junit.runner.notification.Failure.toString()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
org.junit.runner.notification.Failure.toString()
containsString
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.max.MaxCore.sortRequest(org.junit.runner.Request)
Situação: Manual
Chamada: org.junit.runner.Request.getRunner()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4242431619822036
Suporte: 0.0104556
F-Measure Suporte e Confiança: 0.021
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Runner)
Situação: Manual
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7878784190088983
Suporte: 0.0194175
F-Measure Suporte e Confiança: 0.038
Chamada: org.junit.runner.notification.Failure.toString()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.notification.Failure.toString()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1034481484901653
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.runner.notification.Failure.toString()
Situação: Manual
Chamada: containsString
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1034481484901653
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Runner.testCount()
Inútil
Método: org.junit.runner.Runner.getDescription()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: java.util.List.get(I)
Útil
Método: org.junit.runner.notification.Failure.getMessage()
Inútil
Método: org.junit.runner.Request.getRunner()
Útil
Método: org.junit.runner.Request.sortWith(java.util.Comparator)
Inútil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.2727272727272727
F-Measure: 0.2790697674418604
************************ Método Avaliado: org.junit.experimental.max.MaxHistory.locallyStored(java.io.File) ************************
*Commit: commit 303f74183714223503216efa037373bfb04bfe1a 1246938819 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.io.File.exists()
org.junit.experimental.max.MaxHistory.readHistory(java.io.File)
java.lang.Throwable.printStackTrace()
java.io.File.delete()
Chamada: java.io.File.exists()
Situação: Primeira Chamada
Chamada: org.junit.experimental.max.MaxHistory.readHistory(java.io.File)
Situação: Manual
Chamada: java.lang.Throwable.printStackTrace()
Situação: Manual
Chamada: java.io.File.delete()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.io.File.delete()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.experimental.interceptor.ExternalResource.intercept(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object) ************************
*Commit: commit 734ab5187c068599352e5fdc7374c1334d484fef 1246938822 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.interceptor.ExternalResource.before()
org.junit.runners.model.Statement.evaluate()
org.junit.experimental.interceptor.ExternalResource.after()
Chamada: org.junit.experimental.interceptor.ExternalResource.before()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Manual
Chamada: org.junit.experimental.interceptor.ExternalResource.after()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.interceptor.TestWatchman.intercept(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object) ************************
*Commit: commit 734ab5187c068599352e5fdc7374c1334d484fef 1246938822 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.interceptor.TestWatchman.starting(org.junit.runners.model.FrameworkMethod)
org.junit.runners.model.Statement.evaluate()
org.junit.experimental.interceptor.TestWatchman.succeeded(org.junit.runners.model.FrameworkMethod)
org.junit.experimental.interceptor.TestWatchman.failed(java.lang.Throwable, org.junit.runners.model.FrameworkMethod)
org.junit.experimental.interceptor.TestWatchman.finished(org.junit.runners.model.FrameworkMethod)
Chamada: org.junit.experimental.interceptor.TestWatchman.starting(org.junit.runners.model.FrameworkMethod)
Situação: Primeira Chamada
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Manual
Chamada: org.junit.experimental.interceptor.TestWatchman.succeeded(org.junit.runners.model.FrameworkMethod)
Situação: Manual
Chamada: org.junit.experimental.interceptor.TestWatchman.failed(java.lang.Throwable, org.junit.runners.model.FrameworkMethod)
Situação: Manual
Chamada: org.junit.experimental.interceptor.TestWatchman.finished(org.junit.runners.model.FrameworkMethod)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.interceptor.Verifier.intercept(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object) ************************
*Commit: commit 734ab5187c068599352e5fdc7374c1334d484fef 1246938822 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.Statement.evaluate()
org.junit.experimental.interceptor.Verifier.verify()
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Primeira Chamada
Chamada: org.junit.experimental.interceptor.Verifier.verify()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.interceptor.ExternalResource.apply(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object) ************************
*Commit: commit 54917b88aab026dabb4541276ed875117c1e1faa 1246938824 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.interceptor.ExternalResource.before()
org.junit.runners.model.Statement.evaluate()
org.junit.experimental.interceptor.ExternalResource.after()
Chamada: org.junit.experimental.interceptor.ExternalResource.before()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Manual
Chamada: org.junit.experimental.interceptor.ExternalResource.after()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.interceptor.TestWatchman.apply(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object) ************************
*Commit: commit 54917b88aab026dabb4541276ed875117c1e1faa 1246938824 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.interceptor.TestWatchman.starting(org.junit.runners.model.FrameworkMethod)
org.junit.runners.model.Statement.evaluate()
org.junit.experimental.interceptor.TestWatchman.succeeded(org.junit.runners.model.FrameworkMethod)
org.junit.experimental.interceptor.TestWatchman.failed(java.lang.Throwable, org.junit.runners.model.FrameworkMethod)
org.junit.experimental.interceptor.TestWatchman.finished(org.junit.runners.model.FrameworkMethod)
Chamada: org.junit.experimental.interceptor.TestWatchman.starting(org.junit.runners.model.FrameworkMethod)
Situação: Primeira Chamada
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Manual
Chamada: org.junit.experimental.interceptor.TestWatchman.succeeded(org.junit.runners.model.FrameworkMethod)
Situação: Manual
Chamada: org.junit.experimental.interceptor.TestWatchman.failed(java.lang.Throwable, org.junit.runners.model.FrameworkMethod)
Situação: Manual
Chamada: org.junit.experimental.interceptor.TestWatchman.finished(org.junit.runners.model.FrameworkMethod)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.interceptor.Verifier.apply(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object) ************************
*Commit: commit 54917b88aab026dabb4541276ed875117c1e1faa 1246938824 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.Statement.evaluate()
org.junit.experimental.interceptor.Verifier.verify()
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Primeira Chamada
Chamada: org.junit.experimental.interceptor.Verifier.verify()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.max.MaxHistory.forFolder(java.io.File) ************************
*Commit: commit 54917b88aab026dabb4541276ed875117c1e1faa 1246938824 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.io.File.getPath()
java.io.File.exists()
org.junit.experimental.max.MaxHistory.readHistory(java.io.File)
java.lang.Throwable.printStackTrace()
java.io.File.delete()
Chamada: java.io.File.getPath()
Situação: Primeira Chamada
Chamada: java.io.File.exists()
Situação: Manual
Chamada: org.junit.experimental.max.MaxHistory.readHistory(java.io.File)
Situação: Manual
Chamada: java.lang.Throwable.printStackTrace()
Situação: Manual
Chamada: java.io.File.delete()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.io.File.delete()
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: ruleFields ************************
*Commit: commit 54917b88aab026dabb4541276ed875117c1e1faa 1246938824 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
getAnnotatedFields
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: getAnnotatedFields
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.BlockJUnit4ClassRunner.validateRuleField(java.lang.reflect.Field, java.util.List) ************************
*Commit: commit 97afc5e205e1c6ac0f5a9aefabed92d58d88ab81 1247710352 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.Field.getType()
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.reflect.Field.getName()
java.util.List.add(java.lang.Throwable)
java.lang.reflect.Field.getModifiers()
java.lang.reflect.Modifier.isPublic(I)
java.lang.reflect.Field.getName()
java.util.List.add(java.lang.Throwable)
Chamada: java.lang.reflect.Field.getType()
Situação: Primeira Chamada
Chamada: java.lang.Class.isAssignableFrom(java.lang.Class)
Situação: Manual
Chamada: java.lang.reflect.Field.getName()
Situação: Manual
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Manual
Chamada: java.lang.reflect.Field.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isPublic(I)
Situação: Manual
Chamada: java.lang.reflect.Field.getName()
Situação: Manual
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3000002677999962
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.lang.Class.getName()
Inútil
Método: java.util.List.add(java.lang.Throwable)
Útil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.5
F-Measure: 0.22222222222222224
************************ Método Avaliado: org.junit.internal.matchers.IsCollectionContaining.describeTo(org.hamcrest.Description) ************************
*Commit: commit 4e2455b1f142bdf8f07383082638718695e51224 1248100510 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.Description.appendText(java.lang.String)
org.hamcrest.Description.appendDescriptionOf(org.hamcrest.SelfDescribing)
Chamada: org.hamcrest.Description.appendText(java.lang.String)
Situação: Primeira Chamada
Chamada: org.hamcrest.Description.appendDescriptionOf(org.hamcrest.SelfDescribing)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.hamcrest.Description.appendValue(java.lang.Object)
Inútil
Método: org.hamcrest.SelfDescribing.describeTo(org.hamcrest.Description)
Inútil
Método: org.hamcrest.Description.appendText(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.assertion.BothTest.subclassesAreOkInSecondPositionOnly() ************************
*Commit: commit 4e2455b1f142bdf8f07383082638718695e51224 1248100510 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.CoreMatchers.is(java.lang.Class)
org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
org.hamcrest.CoreMatchers.is(java.lang.Integer)
org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.matchers.JUnitMatchers.both(org.hamcrest.Matcher)
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Situação: Manual
Chamada: org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00522778
F-Measure Suporte e Confiança: 0.011
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assume.assumeThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.internal.matchers.CombinableMatcher.and(org.hamcrest.Matcher)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: org.junit.tests.assertion.EachTest.eachDescription() ************************
*Commit: commit 4e2455b1f142bdf8f07383082638718695e51224 1248100510 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.internal.matchers.Each.each(org.hamcrest.Matcher)
java.lang.Object.toString()
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Primeira Chamada
Chamada: org.junit.internal.matchers.Each.each(org.hamcrest.Matcher)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8461540838461015
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Inútil
Método: java.lang.Object.toString()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: org.junit.internal.matchers.StringContains.containsString(java.lang.String)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: org.junit.tests.experimental.rules.ExpectedExceptionRuleTest.startsWith(java.lang.String) ************************
*Commit: commit 15815f55d2e9ae567ef8fe0a172f498b87a3a880 1248141685 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.Description.appendText(java.lang.String)
org.hamcrest.Description.appendText(java.lang.String)
java.lang.String.startsWith(java.lang.String)
Chamada: org.hamcrest.Description.appendText(java.lang.String)
Situação: Primeira Chamada
Chamada: org.hamcrest.Description.appendText(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18750041843805443
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.startsWith(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.hamcrest.Description.appendValue(java.lang.Object)
Inútil
Método: org.hamcrest.SelfDescribing.describeTo(org.hamcrest.Description)
Inútil
Método: org.hamcrest.Description.appendText(java.lang.String)
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: org.junit.experimental.results.PrintableResult.failureCount() ************************
*Commit: commit b0b1c80075abf53597839e6bb430804b17d5c24a 1248142163 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Result.getFailures()
java.util.List.size()
Chamada: org.junit.runner.Result.getFailures()
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.internal.ComparisonCriteria.isArray(java.lang.Object) ************************
*Commit: commit cc24890c002286ca583518c471b16d143a69a62a 1248143013 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.getClass()
java.lang.Class.isArray()
Chamada: java.lang.Object.getClass()
Situação: Primeira Chamada
Chamada: java.lang.Class.isArray()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: ruleFields ************************
*Commit: commit a268686d96bfbb328e02b363c3f0f72da54f9fc6 1250778612 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
getAnnotatedFields
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: getAnnotatedFields
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.Suite.Suite(java.lang.Class, java.util.List) ************************
*Commit: commit a268686d96bfbb328e02b363c3f0f72da54f9fc6 1250778612 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
org.junit.runners.model.TestClass.getOnlyConstructor()
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
rules
java.lang.Throwable.printStackTrace()
java.lang.Throwable.printStackTrace()
java.lang.Throwable.printStackTrace()
java.lang.Throwable.printStackTrace()
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.TestClass.getOnlyConstructor()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.31250041843805443
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.25
Suporte: 0.0029873
F-Measure Suporte e Confiança: 0.006
Chamada: rules
Situação: Manual
Chamada: java.lang.Throwable.printStackTrace()
Situação: Manual
Chamada: java.lang.Throwable.printStackTrace()
Situação: Manual
Chamada: java.lang.Throwable.printStackTrace()
Situação: Manual
Chamada: java.lang.Throwable.printStackTrace()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Útil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Útil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.5
F-Measure: 0.36363636363636365
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.testCount() ************************
*Commit: commit a268686d96bfbb328e02b363c3f0f72da54f9fc6 1250778612 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.rules.RulesTest.ruleIsIntroducedAndEvaluatedOnSubclass() ************************
*Commit: commit a268686d96bfbb328e02b363c3f0f72da54f9fc6 1250778612 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.21739127903592012
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.categoryFilterLeavesOnlyMatchingMethods() ************************
*Commit: commit 334bf585b5de1534d7c0ec519fa0df250d00f022 1255406354 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.categories.CategoryTest$CategoryFilter.include(java.lang.Class)
org.junit.runner.manipulation.Filter.apply(java.lang.Object)
org.junit.runner.Runner.testCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.tests.experimental.categories.CategoryTest$CategoryFilter.include(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.manipulation.Filter.apply(java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Runner.testCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8000002677999962
Suporte: 0.00597461
F-Measure Suporte e Confiança: 0.012
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.categoryFilterRejectsIncompatibleCategory() ************************
*Commit: commit 334bf585b5de1534d7c0ec519fa0df250d00f022 1255406354 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.categories.CategoryTest$CategoryFilter.include(java.lang.Class)
org.junit.runner.manipulation.Filter.apply(java.lang.Object)
org.junit.runner.Runner.testCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.tests.experimental.categories.CategoryTest$CategoryFilter.include(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.manipulation.Filter.apply(java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Runner.testCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8000002677999962
Suporte: 0.00597461
F-Measure Suporte e Confiança: 0.012
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(J, J)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.testCountOnJustA() ************************
*Commit: commit 334bf585b5de1534d7c0ec519fa0df250d00f022 1255406354 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.testCountWithExplicitFilter() ************************
*Commit: commit 334bf585b5de1534d7c0ec519fa0df250d00f022 1255406354 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.categories.CategoryTest$CategoryFilter.include(java.lang.Class)
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.tests.experimental.categories.CategoryTest$CategoryFilter.include(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.24242391044134176
Suporte: 0.00597461
F-Measure Suporte e Confiança: 0.012
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7272726166116257
Suporte: 0.00597461
F-Measure Suporte e Confiança: 0.012
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Request.getRunner()
Inútil
Método: org.junit.runner.Request.sortWith(java.util.Comparator)
Inútil
Percentual de Automatização: 0.4
Corretude: 0.3333333333333333
F-Measure: 0.3636363636363636
************************ Método Avaliado: org.junit.tests.experimental.rules.ClassRulesTest.ruleIsAppliedOnce() ************************
*Commit: commit ee598b3836fa23c5d8a936d2b621cb3f32f3794e 1255945122 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.Assert.assertFalse(java.lang.String, Z)
org.junit.Assert.assertFalse(java.lang.String, Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertFalse(java.lang.String, Z)
Situação: Manual
Chamada: org.junit.Assert.assertFalse(java.lang.String, Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.ClassRulesTest.ruleIsIntroducedAndEvaluatedOnSubclass() ************************
*Commit: commit ee598b3836fa23c5d8a936d2b621cb3f32f3794e 1255945122 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.Assert.assertFalse(java.lang.String, Z)
org.junit.Assert.assertFalse(java.lang.String, Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertFalse(java.lang.String, Z)
Situação: Manual
Chamada: org.junit.Assert.assertFalse(java.lang.String, Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.categories.CategoryRunner$CategoryFilter.shouldRun(org.junit.runner.Description) ************************
*Commit: commit ce810b763e5021629248702993f226e3bf969db8 1256007072 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.categories.CategoryRunner$CategoryFilter.hasCorrectCategoryAnnotation(org.junit.runner.Description)
org.junit.runner.Description.getChildren()
org.junit.experimental.categories.CategoryRunner$CategoryFilter.shouldRun(org.junit.runner.Description)
Chamada: org.junit.experimental.categories.CategoryRunner$CategoryFilter.hasCorrectCategoryAnnotation(org.junit.runner.Description)
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.getChildren()
Situação: Manual
Chamada: org.junit.experimental.categories.CategoryRunner$CategoryFilter.shouldRun(org.junit.runner.Description)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.ArrayList.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.runMethodWithTwoCategories() ************************
*Commit: commit ce810b763e5021629248702993f226e3bf969db8 1256007072 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.subclassesOfIncludedCategoriesAreRun() ************************
*Commit: commit ce810b763e5021629248702993f226e3bf969db8 1256007072 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.ifNoTestsToRunUseErrorRunner() ************************
*Commit: commit ce810b763e5021629248702993f226e3bf969db8 1256007072 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.600000669500887
Suporte: 0.00896191
F-Measure Suporte e Confiança: 0.018
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.75
Corretude: 0.25
F-Measure: 0.375
************************ Método Avaliado: org.junit.experimental.categories.Categories$CategoryFilter.shouldRun(org.junit.runner.Description) ************************
*Commit: commit 46036e7146f9dd0ca44baaec490692b967edd0ce 1256008279 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.categories.Categories$CategoryFilter.hasCorrectCategoryAnnotation(org.junit.runner.Description)
org.junit.runner.Description.getChildren()
org.junit.experimental.categories.Categories$CategoryFilter.shouldRun(org.junit.runner.Description)
Chamada: org.junit.experimental.categories.Categories$CategoryFilter.hasCorrectCategoryAnnotation(org.junit.runner.Description)
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.getChildren()
Situação: Manual
Chamada: org.junit.experimental.categories.Categories$CategoryFilter.shouldRun(org.junit.runner.Description)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.ArrayList.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.ClassRulesTest.ruleIsAppliedOnce() ************************
*Commit: commit a8a05d5b490aff69efc6be29fa28a7b14674ab48 1256009986 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.Assert.assertFalse(java.lang.String, Z)
org.junit.Assert.assertFalse(java.lang.String, Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertFalse(java.lang.String, Z)
Situação: Manual
Chamada: org.junit.Assert.assertFalse(java.lang.String, Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.ClassRulesTest.ruleIsIntroducedAndEvaluatedOnSubclass() ************************
*Commit: commit a8a05d5b490aff69efc6be29fa28a7b14674ab48 1256009986 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.Assert.assertFalse(java.lang.String, Z)
org.junit.Assert.assertFalse(java.lang.String, Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertFalse(java.lang.String, Z)
Situação: Manual
Chamada: org.junit.Assert.assertFalse(java.lang.String, Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.categories.CategoryRunner$CategoryFilter.shouldRun(org.junit.runner.Description) ************************
*Commit: commit 9eab1418bf073556414f8654a8b66d65d784ed71 1256009987 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.categories.CategoryRunner$CategoryFilter.hasCorrectCategoryAnnotation(org.junit.runner.Description)
org.junit.runner.Description.getChildren()
org.junit.experimental.categories.CategoryRunner$CategoryFilter.shouldRun(org.junit.runner.Description)
Chamada: org.junit.experimental.categories.CategoryRunner$CategoryFilter.hasCorrectCategoryAnnotation(org.junit.runner.Description)
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.getChildren()
Situação: Manual
Chamada: org.junit.experimental.categories.CategoryRunner$CategoryFilter.shouldRun(org.junit.runner.Description)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.ArrayList.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.runMethodWithTwoCategories() ************************
*Commit: commit 9eab1418bf073556414f8654a8b66d65d784ed71 1256009987 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.subclassesOfIncludedCategoriesAreRun() ************************
*Commit: commit 9eab1418bf073556414f8654a8b66d65d784ed71 1256009987 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.ifNoTestsToRunUseErrorRunner() ************************
*Commit: commit 9eab1418bf073556414f8654a8b66d65d784ed71 1256009987 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.600000669500887
Suporte: 0.00896191
F-Measure Suporte e Confiança: 0.018
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.75
Corretude: 0.25
F-Measure: 0.375
************************ Método Avaliado: org.junit.experimental.categories.Categories$CategoryFilter.shouldRun(org.junit.runner.Description) ************************
*Commit: commit 4a678cd73cdc5f0330da0b57d42f7fb0c564d73c 1256009987 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.categories.Categories$CategoryFilter.hasCorrectCategoryAnnotation(org.junit.runner.Description)
org.junit.runner.Description.getChildren()
org.junit.experimental.categories.Categories$CategoryFilter.shouldRun(org.junit.runner.Description)
Chamada: org.junit.experimental.categories.Categories$CategoryFilter.hasCorrectCategoryAnnotation(org.junit.runner.Description)
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.getChildren()
Situação: Manual
Chamada: org.junit.experimental.categories.Categories$CategoryFilter.shouldRun(org.junit.runner.Description)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.ArrayList.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.classesCanBeCategories() ************************
*Commit: commit cec8e3ed1246c289ae156c4418d2e224bd793f4b 1259035600 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.testsThatAreBothIncludedAndExcludedAreIncluded() ************************
*Commit: commit cec8e3ed1246c289ae156c4418d2e224bd793f4b 1259035600 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.21739127903592012
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.5714285714285714
Corretude: 0.3333333333333333
F-Measure: 0.4210526315789474
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.testCountOnAWithoutSlowTests() ************************
*Commit: commit cec8e3ed1246c289ae156c4418d2e224bd793f4b 1259035600 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.21739127903592012
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.5714285714285714
Corretude: 0.3333333333333333
F-Measure: 0.4210526315789474
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.testsThatAreBothIncludedAndExcludedAreExcluded() ************************
*Commit: commit 7d8f2b7f6e190e8e59efacc10bc617b6646d131b 1260244843 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.21739127903592012
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.5714285714285714
Corretude: 0.3333333333333333
F-Measure: 0.4210526315789474
************************ Método Avaliado: createTest ************************
*Commit: commit 7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f 1261145143 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getDescription
isTest
junit.framework.JUnit4TestAdapterCache.createSingleTest(org.junit.runner.Description)
org.junit.runner.Description.getDisplayName()
getChildren
asTest
junit.framework.TestSuite.addTest(junit.framework.Test)
Chamada: getDescription
Situação: Primeira Chamada
Chamada: isTest
Situação: Manual
Chamada: junit.framework.JUnit4TestAdapterCache.createSingleTest(org.junit.runner.Description)
Situação: Manual
Chamada: org.junit.runner.Description.getDisplayName()
Situação: Manual
Chamada: getChildren
Situação: Manual
Chamada: asTest
Situação: Manual
Chamada: junit.framework.TestSuite.addTest(junit.framework.Test)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: java.lang.String.compareTo(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: getPlan ************************
*Commit: commit 7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f 1261145143 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Runner.getDescription()
fromDescription
Chamada: org.junit.runner.Runner.getDescription()
Situação: Primeira Chamada
Chamada: fromDescription
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: org.junit.runner.Description.getChildren()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(org.junit.runners.model.FrameworkMethod, org.junit.internal.runners.model.EachTestNotifier) ************************
*Commit: commit 7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f 1261145143 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.internal.runners.model.EachTestNotifier.fireTestStarted()
org.junit.runners.BlockJUnit4ClassRunner.methodBlock(org.junit.runners.model.FrameworkMethod)
org.junit.runners.model.Statement.evaluate()
org.junit.internal.runners.model.EachTestNotifier.addFailedAssumption(org.junit.internal.AssumptionViolatedException)
org.junit.internal.runners.model.EachTestNotifier.addFailure(java.lang.Throwable)
org.junit.internal.runners.model.EachTestNotifier.fireTestFinished()
Chamada: org.junit.internal.runners.model.EachTestNotifier.fireTestStarted()
Situação: Primeira Chamada
Chamada: org.junit.runners.BlockJUnit4ClassRunner.methodBlock(org.junit.runners.model.FrameworkMethod)
Situação: Manual
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Manual
Chamada: org.junit.internal.runners.model.EachTestNotifier.addFailedAssumption(org.junit.internal.AssumptionViolatedException)
Situação: Manual
Chamada: org.junit.internal.runners.model.EachTestNotifier.addFailure(java.lang.Throwable)
Situação: Manual
Chamada: org.junit.internal.runners.model.EachTestNotifier.fireTestFinished()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.ParentRunnerTest.saneBehaviorWhenNoTestsShouldRun() ************************
*Commit: commit 7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f 1261145143 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.Request.getRunner()
org.junit.Assert.assertNotNull(java.lang.Object)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.junit.runner.Request.getRunner()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4242431619822036
Suporte: 0.0104556
F-Measure Suporte e Confiança: 0.021
Chamada: org.junit.Assert.assertNotNull(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Runner.testCount()
Inútil
Método: org.junit.runner.Runner.getDescription()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Request.getRunner()
Útil
Método: org.junit.runner.Request.sortWith(java.util.Comparator)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.14285714285714285
F-Measure: 0.2
************************ Método Avaliado: org.junit.tests.junit3compatibility.SuiteMethodTest.failIfEverythingIsIgnoredOut() ************************
*Commit: commit 7a2b0460c7abd7573faa9d7845a5b1169dcdcb7f 1261145143 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getIgnoreCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getIgnoreCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.31250041843805443
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.Result.getIgnoreCount()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Útil
Percentual de Automatização: 0.75
Corretude: 0.4
F-Measure: 0.5217391304347827
************************ Método Avaliado: asTestList ************************
*Commit: commit 6589127231db19458b696785bab3b839f9bde90f 1261497173 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getDescription
org.junit.runner.Description.isTest()
junit.framework.JUnit4TestAdapterCache.asTestCase(org.junit.runner.Description)
java.util.Arrays.asList([Ljunit.framework.Test;)
getChildren
asTest
java.util.List.add(junit.framework.Test)
Chamada: getDescription
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.isTest()
Situação: Manual
Chamada: junit.framework.JUnit4TestAdapterCache.asTestCase(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljunit.framework.Test;)
Situação: Manual
Chamada: getChildren
Situação: Manual
Chamada: asTest
Situação: Manual
Chamada: java.util.List.add(junit.framework.Test)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Description.getChildren()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: createTestSuite ************************
*Commit: commit 6589127231db19458b696785bab3b839f9bde90f 1261497173 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getDescription
org.junit.runner.Description.isTest()
org.junit.runner.Description.getDisplayName()
getChildren
asTest
junit.framework.TestSuite.addTest(junit.framework.Test)
Chamada: getDescription
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.isTest()
Situação: Manual
Chamada: org.junit.runner.Description.getDisplayName()
Situação: Manual
Chamada: getChildren
Situação: Manual
Chamada: asTest
Situação: Manual
Chamada: junit.framework.TestSuite.addTest(junit.framework.Test)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: java.lang.String.compareTo(java.lang.String)
Inútil
Método: org.junit.runner.Description.getChildren()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runner.Plan.getChildren() ************************
*Commit: commit 6589127231db19458b696785bab3b839f9bde90f 1261497173 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.getChildren()
org.junit.runner.Plan.fromDescription(org.junit.runner.Description)
java.util.ArrayList.add(org.junit.runner.Plan)
Chamada: org.junit.runner.Description.getChildren()
Situação: Primeira Chamada
Chamada: org.junit.runner.Plan.fromDescription(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.ArrayList.add(org.junit.runner.Plan)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.ArrayList.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: findLeaves ************************
*Commit: commit c3873cf7b17abba564374522af2bdc02abcc509d 1261593613 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getDescription
getChildren
isEmpty
org.junit.runner.Description.toString()
java.lang.String.equals(java.lang.Object)
org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
java.util.List.add(org.junit.runner.Description)
java.util.List.add(org.junit.runner.Description)
getChildren
findLeaves
Chamada: getDescription
Situação: Primeira Chamada
Chamada: getChildren
Situação: Manual
Chamada: isEmpty
Situação: Manual
Chamada: org.junit.runner.Description.toString()
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
Situação: Manual
Chamada: java.util.List.add(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.List.add(org.junit.runner.Description)
Situação: Manual
Chamada: getChildren
Situação: Manual
Chamada: findLeaves
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Inútil
Método: org.junit.runner.Description.addChild(org.junit.runner.Description)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: getPlan ************************
*Commit: commit c3873cf7b17abba564374522af2bdc02abcc509d 1261593613 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Runner.getDescription()
fromDescription
Chamada: org.junit.runner.Runner.getDescription()
Situação: Primeira Chamada
Chamada: fromDescription
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: org.junit.runner.Description.getChildren()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.max.MaxStarterTest.filterSingleMethodFromOldTestClass() ************************
*Commit: commit c503e40d9ec79ba76b69dd31d7dd32648fa13cf2 1262662854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
matchMethodDescription
org.junit.internal.runners.JUnit38ClassRunner.filter(org.junit.runner.manipulation.Filter)
org.junit.runner.Runner.testCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
Situação: Primeira Chamada
Chamada: matchMethodDescription
Situação: Manual
Chamada: org.junit.internal.runners.JUnit38ClassRunner.filter(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.junit.runner.Runner.testCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857153787787009
Suporte: 0.00448096
F-Measure Suporte e Confiança: 0.009
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: org.junit.tests.listening.TestListenerTest.callPlanVersionOfTestRunStarted() ************************
*Commit: commit b33b4b090c224c14415d0ffb68a078a097aeaf71 1262664805 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.addListener(org.junit.runner.notification.RunListener)
Situação: Primeira Chamada
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6923071376924297
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.14285714285714285
F-Measure: 0.22222222222222224
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoryTest.categoriesOnSuiteTrickleDown() ************************
*Commit: commit 86abf33f863fee1db3ba7dd8ee3e9910f105f57d 1264109436 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.7142832549064616
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.381817340792786
Suporte: 0.0156833
F-Measure Suporte e Confiança: 0.031
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8000002677999962
Suporte: 0.00597461
F-Measure Suporte e Confiança: 0.012
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Percentual de Automatização: 0.75
Corretude: 0.3333333333333333
F-Measure: 0.46153846153846156
************************ Método Avaliado: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.Object) ************************
*Commit: commit 12b9b787a161d4b460d4d6a14da6ac53cac3713b 1264481185 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.toString()
org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Chamada: java.lang.Object.toString()
Situação: Primeira Chamada
Chamada: org.junit.experimental.theories.PotentialAssignment.forValue(java.lang.String, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Inútil
Método: java.lang.Object.toString()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: org.junit.internal.matchers.StringContains.containsString(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoriesMark2Test.runAllThree() ************************
*Commit: commit 4de916220b9e70d08eccf7e7e292fe9e54157e92 1265171720 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.7142832549064616
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.6
Corretude: 0.3
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoriesMark2Test.gatherClasses() ************************
*Commit: commit 4de916220b9e70d08eccf7e7e292fe9e54157e92 1265171720 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.categories.CategoriesMark2Test$Suite2.gatherClasses()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.tests.experimental.categories.CategoriesMark2Test$Suite2.gatherClasses()
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.25000033475044353
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoriesMark2Test.matchingRunnersOnCategories() ************************
*Commit: commit 4de916220b9e70d08eccf7e7e292fe9e54157e92 1265171720 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.categories.CategoriesMark2Test$CategoryFilter2.include(java.lang.Class)
java.util.Arrays.asList([Lorg.junit.runners.BlockJUnit4ClassRunner;)
org.junit.tests.experimental.categories.CategoriesMark2Test$CategoryFilter2.matchingRunners(java.util.List)
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.tests.experimental.categories.CategoriesMark2Test$CategoryFilter2.include(java.lang.Class)
Situação: Primeira Chamada
Chamada: java.util.Arrays.asList([Lorg.junit.runners.BlockJUnit4ClassRunner;)
Situação: Manual
Chamada: org.junit.tests.experimental.categories.CategoriesMark2Test$CategoryFilter2.matchingRunners(java.util.List)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.25000033475044353
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoriesMark2Test$Suite2.createInstance(org.junit.runners.model.TestClass) ************************
*Commit: commit 4de916220b9e70d08eccf7e7e292fe9e54157e92 1265171720 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getOnlyConstructor()
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
java.lang.Throwable.printStackTrace()
java.lang.Throwable.printStackTrace()
java.lang.Throwable.printStackTrace()
java.lang.Throwable.printStackTrace()
Chamada: org.junit.runners.model.TestClass.getOnlyConstructor()
Situação: Primeira Chamada
Chamada: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5714280248977578
Suporte: 0.0029873
F-Measure Suporte e Confiança: 0.006
Chamada: java.lang.Throwable.printStackTrace()
Situação: Manual
Chamada: java.lang.Throwable.printStackTrace()
Situação: Manual
Chamada: java.lang.Throwable.printStackTrace()
Situação: Manual
Chamada: java.lang.Throwable.printStackTrace()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Útil
Percentual de Automatização: 0.2
Corretude: 1.0
F-Measure: 0.33333333333333337
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoriesMark2Test.runOneNo() ************************
*Commit: commit 4de916220b9e70d08eccf7e7e292fe9e54157e92 1265171720 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.7142832549064616
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.6
Corretude: 0.3
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoriesMark2Test.onlyRunOne() ************************
*Commit: commit 4de916220b9e70d08eccf7e7e292fe9e54157e92 1265171720 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.7142832549064616
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.6
Corretude: 0.3
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoriesMark2Test.runTwo() ************************
*Commit: commit 4de916220b9e70d08eccf7e7e292fe9e54157e92 1265171720 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.7142832549064616
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.6
Corretude: 0.3
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoriesMark2Test$CategoryFilter2.matchingRunners(java.util.List) ************************
*Commit: commit 4de916220b9e70d08eccf7e7e292fe9e54157e92 1265171720 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Runner.getDescription()
org.junit.runner.Description.getAnnotations()
java.lang.annotation.Annotation.annotationType()
java.lang.Object.equals(java.lang.Object)
value
java.util.Arrays.asList([Ljava.lang.Class;)
java.util.List.contains(java.lang.Object)
java.util.ArrayList.add(org.junit.runner.Runner)
Chamada: org.junit.runner.Runner.getDescription()
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.getAnnotations()
Situação: Manual
Chamada: java.lang.annotation.Annotation.annotationType()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: value
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Class;)
Situação: Manual
Chamada: java.util.List.contains(java.lang.Object)
Situação: Manual
Chamada: java.util.ArrayList.add(org.junit.runner.Runner)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.contains(java.lang.Object)
Inútil
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: org.junit.runner.Description.getChildren()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoriesMark2Test$Suite2.Suite2(java.lang.Class) ************************
*Commit: commit 1bbab715de4c64943948ecc3739c8d5569378672 1265688647 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getOnlyConstructor()
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Chamada: org.junit.runners.model.TestClass.getOnlyConstructor()
Situação: Primeira Chamada
Chamada: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5714280248977578
Suporte: 0.0029873
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoriesMark2Test$CategoryFilter.matchingRunners(java.util.List) ************************
*Commit: commit 1bbab715de4c64943948ecc3739c8d5569378672 1265688647 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Runner.getDescription()
org.junit.runner.Description.getAnnotations()
java.lang.annotation.Annotation.annotationType()
java.lang.Object.equals(java.lang.Object)
value
java.util.Arrays.asList([Ljava.lang.Class;)
java.util.List.contains(java.lang.Object)
java.util.ArrayList.add(org.junit.runner.Runner)
Chamada: org.junit.runner.Runner.getDescription()
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.getAnnotations()
Situação: Manual
Chamada: java.lang.annotation.Annotation.annotationType()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: value
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Class;)
Situação: Manual
Chamada: java.util.List.contains(java.lang.Object)
Situação: Manual
Chamada: java.util.ArrayList.add(org.junit.runner.Runner)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.contains(java.lang.Object)
Inútil
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: org.junit.runner.Description.getChildren()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.categories.CategoryFilter.shouldInclude(org.junit.runner.Runner) ************************
*Commit: commit b8c76067e505713f90195087ec53a078654ec3fa 1268156167 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Runner.getDescription()
org.junit.runner.Description.getAnnotations()
org.junit.experimental.categories.CategoryFilter.isCategory(java.lang.annotation.Annotation)
categoryIsIncluded
Chamada: org.junit.runner.Runner.getDescription()
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.getAnnotations()
Situação: Manual
Chamada: org.junit.experimental.categories.CategoryFilter.isCategory(java.lang.annotation.Annotation)
Situação: Manual
Chamada: categoryIsIncluded
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: org.junit.runner.Description.getChildren()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: junit.framework.JUnit4TestAdapter.removeIgnored(org.junit.runner.Description) ************************
*Commit: commit 97402a3401c6cc2d45d395c0d9d636f483b5571c 1270491226 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
junit.framework.JUnit4TestAdapter.isIgnored(org.junit.runner.Description)
org.junit.runner.Description.childlessCopy()
org.junit.runner.Description.getChildren()
junit.framework.JUnit4TestAdapter.removeIgnored(org.junit.runner.Description)
org.junit.runner.Description.isEmpty()
org.junit.runner.Description.addChild(org.junit.runner.Description)
Chamada: junit.framework.JUnit4TestAdapter.isIgnored(org.junit.runner.Description)
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.childlessCopy()
Situação: Manual
Chamada: org.junit.runner.Description.getChildren()
Situação: Manual
Chamada: junit.framework.JUnit4TestAdapter.removeIgnored(org.junit.runner.Description)
Situação: Manual
Chamada: org.junit.runner.Description.isEmpty()
Situação: Manual
Chamada: org.junit.runner.Description.addChild(org.junit.runner.Description)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.ArrayList.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description) ************************
*Commit: commit 97402a3401c6cc2d45d395c0d9d636f483b5571c 1270491226 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.isTest()
junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)
java.util.Arrays.asList([Ljunit.framework.Test;)
org.junit.runner.Description.getChildren()
junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)
java.util.List.add(junit.framework.Test)
Chamada: org.junit.runner.Description.isTest()
Situação: Primeira Chamada
Chamada: junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljunit.framework.Test;)
Situação: Manual
Chamada: org.junit.runner.Description.getChildren()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8333325894451189
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.List.add(junit.framework.Test)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.ArrayList.size()
Inútil
Método: org.junit.runner.Description.getChildren()
Útil
Percentual de Automatização: 0.2
Corretude: 0.5
F-Measure: 0.28571428571428575
************************ Método Avaliado: junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description) ************************
*Commit: commit 97402a3401c6cc2d45d395c0d9d636f483b5571c 1270491226 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.isTest()
org.junit.runner.Description.getDisplayName()
org.junit.runner.Description.getChildren()
junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)
junit.framework.TestSuite.addTest(junit.framework.Test)
Chamada: org.junit.runner.Description.isTest()
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.getDisplayName()
Situação: Manual
Chamada: org.junit.runner.Description.getChildren()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8333325894451189
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)
Situação: Manual
Chamada: junit.framework.TestSuite.addTest(junit.framework.Test)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.util.ArrayList.size()
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: java.lang.String.compareTo(java.lang.String)
Inútil
Método: org.junit.runner.Description.getChildren()
Útil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: org.junit.experimental.max.MaxCore.findLeaves(org.junit.runner.Description, org.junit.runner.Description, java.util.List) ************************
*Commit: commit 97402a3401c6cc2d45d395c0d9d636f483b5571c 1270491226 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.getChildren()
java.util.ArrayList.isEmpty()
org.junit.runner.Description.toString()
java.lang.String.equals(java.lang.Object)
org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
java.util.List.add(org.junit.runner.Description)
java.util.List.add(org.junit.runner.Description)
org.junit.runner.Description.getChildren()
org.junit.experimental.max.MaxCore.findLeaves(org.junit.runner.Description, org.junit.runner.Description, java.util.List)
Chamada: org.junit.runner.Description.getChildren()
Situação: Primeira Chamada
Chamada: java.util.ArrayList.isEmpty()
Situação: Manual
Chamada: org.junit.runner.Description.toString()
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
Situação: Manual
Chamada: java.util.List.add(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.List.add(org.junit.runner.Description)
Situação: Manual
Chamada: org.junit.runner.Description.getChildren()
Situação: Manual
Chamada: org.junit.experimental.max.MaxCore.findLeaves(org.junit.runner.Description, org.junit.runner.Description, java.util.List)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.ArrayList.size()
Inútil
Método: java.lang.String.equals(java.lang.Object)
Inútil
Método: org.junit.runner.Description.addChild(org.junit.runner.Description)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.max.MaxStarterTest.testCountsMatchUp() ************************
*Commit: commit 97402a3401c6cc2d45d395c0d9d636f483b5571c 1270491226 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.Description.toString()
java.lang.String.contains(java.lang.CharSequence)
org.junit.experimental.max.MaxCore.run(org.junit.runner.Request, org.junit.runner.JUnitCore)
org.junit.runner.Result.getRunCount()
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.junit.runner.Description.toString()
Situação: Manual
Chamada: java.lang.String.contains(java.lang.CharSequence)
Situação: Manual
Chamada: org.junit.experimental.max.MaxCore.run(org.junit.runner.Request, org.junit.runner.JUnitCore)
Situação: Manual
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.24242391044134176
Suporte: 0.00597461
F-Measure Suporte e Confiança: 0.012
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.36363566278357334
Suporte: 0.00896191
F-Measure Suporte e Confiança: 0.018
Corretude/Utilidade dos Métodos
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.Request.getRunner()
Inútil
Método: org.junit.runner.Request.sortWith(java.util.Comparator)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: junit.framework.TestSuite.addTestsFromTestCase(java.lang.Class) ************************
*Commit: commit 70adacdc1a7f963c081a9752ba62200f8b798d56 1270518222 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
junit.framework.TestSuite.getTestConstructor(java.lang.Class)
java.lang.Class.getName()
junit.framework.TestSuite.warning(java.lang.String)
junit.framework.TestSuite.addTest(junit.framework.Test)
java.lang.Class.getModifiers()
java.lang.reflect.Modifier.isPublic(I)
java.lang.Class.getName()
junit.framework.TestSuite.warning(java.lang.String)
junit.framework.TestSuite.addTest(junit.framework.Test)
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.getDeclaredMethods()
junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)
java.lang.Class.getSuperclass()
java.util.Vector.size()
java.lang.Class.getName()
junit.framework.TestSuite.warning(java.lang.String)
junit.framework.TestSuite.addTest(junit.framework.Test)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: junit.framework.TestSuite.getTestConstructor(java.lang.Class)
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: junit.framework.TestSuite.warning(java.lang.String)
Situação: Manual
Chamada: junit.framework.TestSuite.addTest(junit.framework.Test)
Situação: Manual
Chamada: java.lang.Class.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isPublic(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: junit.framework.TestSuite.warning(java.lang.String)
Situação: Manual
Chamada: junit.framework.TestSuite.addTest(junit.framework.Test)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4000006695008871
Suporte: 0.00597461
F-Measure Suporte e Confiança: 0.012
Chamada: java.lang.Class.isAssignableFrom(java.lang.Class)
Situação: Manual
Chamada: java.lang.Class.getDeclaredMethods()
Situação: Manual
Chamada: junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)
Situação: Manual
Chamada: java.lang.Class.getSuperclass()
Situação: Manual
Chamada: java.util.Vector.size()
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: junit.framework.TestSuite.warning(java.lang.String)
Situação: Manual
Chamada: junit.framework.TestSuite.addTest(junit.framework.Test)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.49999916312529186
Suporte: 0.0029873
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.lang.Object.toString()
Inútil
Método: junit.textui.TestRunner.doRun(junit.framework.Test)
Inútil
Método: java.lang.reflect.Modifier.isPublic(I)
Útil
Método: junit.framework.TestSuite.addTest(junit.framework.Test)
Útil
Método: java.lang.Class.getName()
Útil
Percentual de Automatização: 0.29411764705882354
Corretude: 0.3
F-Measure: 0.29702970297029707
************************ Método Avaliado: junit.tests.framework.SuiteTest.testNoTestCaseClass() ************************
*Commit: commit 70adacdc1a7f963c081a9752ba62200f8b798d56 1270518222 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
junit.framework.Test.run(junit.framework.TestResult)
junit.framework.TestResult.runCount()
junit.framework.Assert.assertEquals(I, I)
junit.framework.TestResult.wasSuccessful()
junit.framework.Assert.assertTrue(Z)
Chamada: junit.framework.Test.run(junit.framework.TestResult)
Situação: Primeira Chamada
Chamada: junit.framework.TestResult.runCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4444443893415591
Suporte: 0.00896191
F-Measure Suporte e Confiança: 0.018
Chamada: junit.framework.Assert.assertEquals(I, I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3333331680246773
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: junit.framework.TestResult.wasSuccessful()
Situação: Manual
Chamada: junit.framework.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500016737522177
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: junit.framework.TestResult.failureCount()
Inútil
Método: junit.framework.TestResult.errorCount()
Inútil
Método: junit.framework.Assert.assertEquals(I, I)
Útil
Método: junit.framework.Assert.assertTrue(Z)
Útil
Método: junit.framework.TestResult.runCount()
Útil
Percentual de Automatização: 0.75
Corretude: 0.6
F-Measure: 0.6666666666666665
************************ Método Avaliado: junit.framework.TestSuite.addTestsFromTestCase(java.lang.Class) ************************
*Commit: commit 2de4d6f2bcf699b94614f9208f620f4c56bc9876 1270519450 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
junit.framework.TestSuite.getTestConstructor(java.lang.Class)
java.lang.Class.getName()
junit.framework.TestSuite.warning(java.lang.String)
junit.framework.TestSuite.addTest(junit.framework.Test)
java.lang.Class.getModifiers()
java.lang.reflect.Modifier.isPublic(I)
java.lang.Class.getName()
junit.framework.TestSuite.warning(java.lang.String)
junit.framework.TestSuite.addTest(junit.framework.Test)
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.getDeclaredMethods()
junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)
java.lang.Class.getSuperclass()
java.util.Vector.size()
java.lang.Class.getName()
junit.framework.TestSuite.warning(java.lang.String)
junit.framework.TestSuite.addTest(junit.framework.Test)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: junit.framework.TestSuite.getTestConstructor(java.lang.Class)
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: junit.framework.TestSuite.warning(java.lang.String)
Situação: Manual
Chamada: junit.framework.TestSuite.addTest(junit.framework.Test)
Situação: Manual
Chamada: java.lang.Class.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isPublic(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: junit.framework.TestSuite.warning(java.lang.String)
Situação: Manual
Chamada: junit.framework.TestSuite.addTest(junit.framework.Test)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4000006695008871
Suporte: 0.00597461
F-Measure Suporte e Confiança: 0.012
Chamada: java.lang.Class.isAssignableFrom(java.lang.Class)
Situação: Manual
Chamada: java.lang.Class.getDeclaredMethods()
Situação: Manual
Chamada: junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)
Situação: Manual
Chamada: java.lang.Class.getSuperclass()
Situação: Manual
Chamada: java.util.Vector.size()
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: junit.framework.TestSuite.warning(java.lang.String)
Situação: Manual
Chamada: junit.framework.TestSuite.addTest(junit.framework.Test)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.49999916312529186
Suporte: 0.0029873
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.lang.Object.toString()
Inútil
Método: junit.textui.TestRunner.doRun(junit.framework.Test)
Inútil
Método: java.lang.reflect.Modifier.isPublic(I)
Útil
Método: junit.framework.TestSuite.addTest(junit.framework.Test)
Útil
Método: java.lang.Class.getName()
Útil
Percentual de Automatização: 0.29411764705882354
Corretude: 0.3
F-Measure: 0.29702970297029707
************************ Método Avaliado: junit.tests.framework.SuiteTest.testNoTestCaseClass() ************************
*Commit: commit 2de4d6f2bcf699b94614f9208f620f4c56bc9876 1270519450 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
junit.framework.Test.run(junit.framework.TestResult)
junit.framework.TestResult.runCount()
junit.framework.Assert.assertEquals(I, I)
junit.framework.TestResult.wasSuccessful()
junit.framework.Assert.assertTrue(Z)
Chamada: junit.framework.Test.run(junit.framework.TestResult)
Situação: Primeira Chamada
Chamada: junit.framework.TestResult.runCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4444443893415591
Suporte: 0.00896191
F-Measure Suporte e Confiança: 0.018
Chamada: junit.framework.Assert.assertEquals(I, I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3333331680246773
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: junit.framework.TestResult.wasSuccessful()
Situação: Manual
Chamada: junit.framework.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500016737522177
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: junit.framework.TestResult.failureCount()
Inútil
Método: junit.framework.TestResult.errorCount()
Inútil
Método: junit.framework.Assert.assertEquals(I, I)
Útil
Método: junit.framework.Assert.assertTrue(Z)
Útil
Método: junit.framework.TestResult.runCount()
Útil
Percentual de Automatização: 0.75
Corretude: 0.6
F-Measure: 0.6666666666666665
************************ Método Avaliado: org.junit.experimental.categories.CategoryFilter.shouldInclude(org.junit.runner.Runner) ************************
*Commit: commit 496ee866a46f783d145b649a688df57cbf79490e 1270740625 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Runner.getDescription()
org.junit.runner.Description.getAnnotations()
org.junit.experimental.categories.CategoryFilter.isCategory(java.lang.annotation.Annotation)
categoryIsIncluded
Chamada: org.junit.runner.Runner.getDescription()
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.getAnnotations()
Situação: Manual
Chamada: org.junit.experimental.categories.CategoryFilter.isCategory(java.lang.annotation.Annotation)
Situação: Manual
Chamada: categoryIsIncluded
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: org.junit.runner.Description.getChildren()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: junit.framework.JUnit4TestAdapter.removeIgnored(org.junit.runner.Description) ************************
*Commit: commit 5f7fddf537e551109ffd6241a00c87a2b3521523 1270740639 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
junit.framework.JUnit4TestAdapter.isIgnored(org.junit.runner.Description)
org.junit.runner.Description.childlessCopy()
org.junit.runner.Description.getChildren()
junit.framework.JUnit4TestAdapter.removeIgnored(org.junit.runner.Description)
org.junit.runner.Description.isEmpty()
org.junit.runner.Description.addChild(org.junit.runner.Description)
Chamada: junit.framework.JUnit4TestAdapter.isIgnored(org.junit.runner.Description)
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.childlessCopy()
Situação: Manual
Chamada: org.junit.runner.Description.getChildren()
Situação: Manual
Chamada: junit.framework.JUnit4TestAdapter.removeIgnored(org.junit.runner.Description)
Situação: Manual
Chamada: org.junit.runner.Description.isEmpty()
Situação: Manual
Chamada: org.junit.runner.Description.addChild(org.junit.runner.Description)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.ArrayList.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: junit.framework.JUnit4TestAdapterCache.asTestList(org.junit.runner.Description) ************************
*Commit: commit 5f7fddf537e551109ffd6241a00c87a2b3521523 1270740639 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.isTest()
junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)
java.util.Arrays.asList([Ljunit.framework.Test;)
org.junit.runner.Description.getChildren()
junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)
java.util.List.add(junit.framework.Test)
Chamada: org.junit.runner.Description.isTest()
Situação: Primeira Chamada
Chamada: junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljunit.framework.Test;)
Situação: Manual
Chamada: org.junit.runner.Description.getChildren()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8333325894451189
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.List.add(junit.framework.Test)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.ArrayList.size()
Inútil
Método: org.junit.runner.Description.getChildren()
Útil
Percentual de Automatização: 0.2
Corretude: 0.5
F-Measure: 0.28571428571428575
************************ Método Avaliado: junit.framework.JUnit4TestAdapterCache.createTest(org.junit.runner.Description) ************************
*Commit: commit 5f7fddf537e551109ffd6241a00c87a2b3521523 1270740639 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.isTest()
org.junit.runner.Description.getDisplayName()
org.junit.runner.Description.getChildren()
junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)
junit.framework.TestSuite.addTest(junit.framework.Test)
Chamada: org.junit.runner.Description.isTest()
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.getDisplayName()
Situação: Manual
Chamada: org.junit.runner.Description.getChildren()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8333325894451189
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: junit.framework.JUnit4TestAdapterCache.asTest(org.junit.runner.Description)
Situação: Manual
Chamada: junit.framework.TestSuite.addTest(junit.framework.Test)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.util.ArrayList.size()
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: java.lang.String.compareTo(java.lang.String)
Inútil
Método: org.junit.runner.Description.getChildren()
Útil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: org.junit.experimental.max.MaxCore.findLeaves(org.junit.runner.Description, org.junit.runner.Description, java.util.List) ************************
*Commit: commit 5f7fddf537e551109ffd6241a00c87a2b3521523 1270740639 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.getChildren()
java.util.ArrayList.isEmpty()
org.junit.runner.Description.toString()
java.lang.String.equals(java.lang.Object)
org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
java.util.List.add(org.junit.runner.Description)
java.util.List.add(org.junit.runner.Description)
org.junit.runner.Description.getChildren()
org.junit.experimental.max.MaxCore.findLeaves(org.junit.runner.Description, org.junit.runner.Description, java.util.List)
Chamada: org.junit.runner.Description.getChildren()
Situação: Primeira Chamada
Chamada: java.util.ArrayList.isEmpty()
Situação: Manual
Chamada: org.junit.runner.Description.toString()
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: org.junit.runner.Description.createSuiteDescription(java.lang.String, [Ljava.lang.annotation.Annotation;)
Situação: Manual
Chamada: java.util.List.add(org.junit.runner.Description)
Situação: Manual
Chamada: java.util.List.add(org.junit.runner.Description)
Situação: Manual
Chamada: org.junit.runner.Description.getChildren()
Situação: Manual
Chamada: org.junit.experimental.max.MaxCore.findLeaves(org.junit.runner.Description, org.junit.runner.Description, java.util.List)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.ArrayList.size()
Inútil
Método: java.lang.String.equals(java.lang.Object)
Inútil
Método: org.junit.runner.Description.addChild(org.junit.runner.Description)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.max.MaxStarterTest.testCountsMatchUp() ************************
*Commit: commit 5f7fddf537e551109ffd6241a00c87a2b3521523 1270740639 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.Description.toString()
java.lang.String.contains(java.lang.CharSequence)
org.junit.experimental.max.MaxCore.run(org.junit.runner.Request, org.junit.runner.JUnitCore)
org.junit.runner.Result.getRunCount()
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.junit.runner.Description.toString()
Situação: Manual
Chamada: java.lang.String.contains(java.lang.CharSequence)
Situação: Manual
Chamada: org.junit.experimental.max.MaxCore.run(org.junit.runner.Request, org.junit.runner.JUnitCore)
Situação: Manual
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.24242391044134176
Suporte: 0.00597461
F-Measure Suporte e Confiança: 0.012
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.36363566278357334
Suporte: 0.00896191
F-Measure Suporte e Confiança: 0.018
Corretude/Utilidade dos Métodos
Método: java.lang.String.contains(java.lang.CharSequence)
Inútil
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.Request.getRunner()
Inútil
Método: org.junit.runner.Request.sortWith(java.util.Comparator)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: junit.framework.TestSuite.addTestsFromTestCase(java.lang.Class) ************************
*Commit: commit d0534dae86dd511eb0575dbdf7e706a40f51e590 1270740664 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
junit.framework.TestSuite.getTestConstructor(java.lang.Class)
java.lang.Class.getName()
junit.framework.TestSuite.warning(java.lang.String)
junit.framework.TestSuite.addTest(junit.framework.Test)
java.lang.Class.getModifiers()
java.lang.reflect.Modifier.isPublic(I)
java.lang.Class.getName()
junit.framework.TestSuite.warning(java.lang.String)
junit.framework.TestSuite.addTest(junit.framework.Test)
java.lang.Class.isAssignableFrom(java.lang.Class)
java.lang.Class.getDeclaredMethods()
junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)
java.lang.Class.getSuperclass()
java.util.Vector.size()
java.lang.Class.getName()
junit.framework.TestSuite.warning(java.lang.String)
junit.framework.TestSuite.addTest(junit.framework.Test)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: junit.framework.TestSuite.getTestConstructor(java.lang.Class)
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: junit.framework.TestSuite.warning(java.lang.String)
Situação: Manual
Chamada: junit.framework.TestSuite.addTest(junit.framework.Test)
Situação: Manual
Chamada: java.lang.Class.getModifiers()
Situação: Manual
Chamada: java.lang.reflect.Modifier.isPublic(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: junit.framework.TestSuite.warning(java.lang.String)
Situação: Manual
Chamada: junit.framework.TestSuite.addTest(junit.framework.Test)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4000006695008871
Suporte: 0.00597461
F-Measure Suporte e Confiança: 0.012
Chamada: java.lang.Class.isAssignableFrom(java.lang.Class)
Situação: Manual
Chamada: java.lang.Class.getDeclaredMethods()
Situação: Manual
Chamada: junit.framework.TestSuite.addTestMethod(java.lang.reflect.Method, java.util.List, java.lang.Class)
Situação: Manual
Chamada: java.lang.Class.getSuperclass()
Situação: Manual
Chamada: java.util.Vector.size()
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: junit.framework.TestSuite.warning(java.lang.String)
Situação: Manual
Chamada: junit.framework.TestSuite.addTest(junit.framework.Test)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.49999916312529186
Suporte: 0.0029873
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.lang.Object.toString()
Inútil
Método: junit.textui.TestRunner.doRun(junit.framework.Test)
Inútil
Método: java.lang.reflect.Modifier.isPublic(I)
Útil
Método: junit.framework.TestSuite.addTest(junit.framework.Test)
Útil
Método: java.lang.Class.getName()
Útil
Percentual de Automatização: 0.29411764705882354
Corretude: 0.3
F-Measure: 0.29702970297029707
************************ Método Avaliado: junit.tests.framework.SuiteTest.testNoTestCaseClass() ************************
*Commit: commit d0534dae86dd511eb0575dbdf7e706a40f51e590 1270740664 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
junit.framework.Test.run(junit.framework.TestResult)
junit.framework.TestResult.runCount()
junit.framework.Assert.assertEquals(I, I)
junit.framework.TestResult.wasSuccessful()
junit.framework.Assert.assertTrue(Z)
Chamada: junit.framework.Test.run(junit.framework.TestResult)
Situação: Primeira Chamada
Chamada: junit.framework.TestResult.runCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4444443893415591
Suporte: 0.00896191
F-Measure Suporte e Confiança: 0.018
Chamada: junit.framework.Assert.assertEquals(I, I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3333331680246773
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: junit.framework.TestResult.wasSuccessful()
Situação: Manual
Chamada: junit.framework.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7500016737522177
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: junit.framework.TestResult.failureCount()
Inútil
Método: junit.framework.TestResult.errorCount()
Inútil
Método: junit.framework.Assert.assertEquals(I, I)
Útil
Método: junit.framework.Assert.assertTrue(Z)
Útil
Método: junit.framework.TestResult.runCount()
Útil
Percentual de Automatização: 0.75
Corretude: 0.6
F-Measure: 0.6666666666666665
************************ Método Avaliado: org.junit.experimental.categories.CategoryFilter.shouldInclude(org.junit.runner.Runner) ************************
*Commit: commit 3b7ab4a322c966602f202e455a8bc4612af56a18 1273638038 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Runner.getDescription()
org.junit.runner.Description.getAnnotations()
org.junit.experimental.categories.CategoryFilter.isCategory(java.lang.annotation.Annotation)
categoryIsIncluded
Chamada: org.junit.runner.Runner.getDescription()
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.getAnnotations()
Situação: Manual
Chamada: org.junit.experimental.categories.CategoryFilter.isCategory(java.lang.annotation.Annotation)
Situação: Manual
Chamada: categoryIsIncluded
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: org.junit.runner.Description.getChildren()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.categories.SuiteBuilderTest.runAllThree() ************************
*Commit: commit 3b7ab4a322c966602f202e455a8bc4612af56a18 1273638038 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.7142832549064616
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.6
Corretude: 0.3
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.categories.SuiteBuilderTest.gatherClasses() ************************
*Commit: commit 3b7ab4a322c966602f202e455a8bc4612af56a18 1273638038 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.categories.SuiteBuilderTest$SuiteBuilder.gatherClasses()
java.util.List.size()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.tests.experimental.categories.SuiteBuilderTest$SuiteBuilder.gatherClasses()
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.25000033475044353
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: org.junit.tests.experimental.categories.SuiteBuilderTest.suiteBuilderDescription() ************************
*Commit: commit 3b7ab4a322c966602f202e455a8bc4612af56a18 1273638038 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.tests.experimental.categories.SuiteBuilderTest$SuiteBuilder.getDescription()
org.junit.runner.Description.getChildren()
java.util.ArrayList.size()
org.junit.Assert.assertEquals(J, J)
java.lang.Class.getName()
org.junit.runner.Description.getDisplayName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
java.lang.Class.getName()
org.junit.runner.Description.getChildren()
java.util.ArrayList.get(I)
org.junit.runner.Description.getDisplayName()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.tests.experimental.categories.SuiteBuilderTest$SuiteBuilder.getDescription()
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.getChildren()
Situação: Manual
Chamada: java.util.ArrayList.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.21428516775699144
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: org.junit.runner.Description.getDisplayName()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1034481484901653
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.17241342690922523
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: org.junit.runner.Description.getChildren()
Situação: Manual
Chamada: java.util.ArrayList.get(I)
Situação: Manual
Chamada: org.junit.runner.Description.getDisplayName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.29411862003780714
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.06999997322000037
Suporte: 0.00522778
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.ArrayList.size()
Útil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.lang.String.compareTo(java.lang.String)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.45454545454545453
Corretude: 0.23076923076923078
F-Measure: 0.30612244897959184
************************ Método Avaliado: org.junit.tests.experimental.categories.SuiteBuilderTest$SuiteBuilder.getDescription() ************************
*Commit: commit 3b7ab4a322c966602f202e455a8bc4612af56a18 1273638038 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getJavaClass()
org.junit.runner.Description.createSuiteDescription(java.lang.Class)
org.junit.runner.Runner.getDescription()
org.junit.runner.Description.addChild(org.junit.runner.Description)
Chamada: org.junit.runners.model.TestClass.getJavaClass()
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.createSuiteDescription(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.Runner.getDescription()
Situação: Manual
Chamada: org.junit.runner.Description.addChild(org.junit.runner.Description)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: org.junit.runner.Description.getChildren()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.categories.SuiteBuilderTest.onlyRunOne() ************************
*Commit: commit 3b7ab4a322c966602f202e455a8bc4612af56a18 1273638038 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.7142832549064616
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.6
Corretude: 0.3
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.categories.SuiteBuilderTest.runOneNo() ************************
*Commit: commit 3b7ab4a322c966602f202e455a8bc4612af56a18 1273638038 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.7142832549064616
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.6
Corretude: 0.3
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.categories.SuiteBuilderTest.runTwo() ************************
*Commit: commit 3b7ab4a322c966602f202e455a8bc4612af56a18 1273638038 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.7142832549064616
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.6
Corretude: 0.3
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.categories.SuiteBuilderTest$SuiteBuilder.SuiteBuilder(java.lang.Class) ************************
*Commit: commit 3b7ab4a322c966602f202e455a8bc4612af56a18 1273638038 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getOnlyConstructor()
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
org.junit.tests.experimental.categories.SuiteBuilderTest$SuiteBuilder.computeRunners()
Chamada: org.junit.runners.model.TestClass.getOnlyConstructor()
Situação: Primeira Chamada
Chamada: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5714280248977578
Suporte: 0.0029873
F-Measure Suporte e Confiança: 0.006
Chamada: org.junit.tests.experimental.categories.SuiteBuilderTest$SuiteBuilder.computeRunners()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.experimental.runners.SuiteBuilder.createInstance() ************************
*Commit: commit f09cff79b941a525271f3f2838a9742b4c5c8d36 1273639379 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getOnlyConstructor()
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Chamada: org.junit.runners.model.TestClass.getOnlyConstructor()
Situação: Primeira Chamada
Chamada: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5714280248977578
Suporte: 0.0029873
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: org.junit.experimental.runners.SuiteBuilder.getDescription() ************************
*Commit: commit f09cff79b941a525271f3f2838a9742b4c5c8d36 1273639379 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.TestClass.getJavaClass()
org.junit.runner.Description.createSuiteDescription(java.lang.Class)
org.junit.runner.Runner.getDescription()
org.junit.runner.Description.addChild(org.junit.runner.Description)
Chamada: org.junit.runners.model.TestClass.getJavaClass()
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.createSuiteDescription(java.lang.Class)
Situação: Manual
Chamada: org.junit.runner.Runner.getDescription()
Situação: Manual
Chamada: org.junit.runner.Description.addChild(org.junit.runner.Description)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: org.junit.runner.Description.getChildren()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.rules.ExternalResource.statement(org.junit.runners.model.Statement) ************************
*Commit: commit 568e29c871ea144e12f273dc7e12c949a5a507da 1274322256 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.ExternalResource.before()
org.junit.runners.model.Statement.evaluate()
org.junit.rules.ExternalResource.after()
Chamada: org.junit.rules.ExternalResource.before()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Manual
Chamada: org.junit.rules.ExternalResource.after()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.CategoriesAndParameterizedTest.shouldFailWith() ************************
*Commit: commit b3831d600d2d893ec6250ee930188cc373d81ee5 1283220650 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: org.junit.tests.CategoriesAndParameterizedTest.shouldSucceedWithAParameterizedClassSomewhere() ************************
*Commit: commit b3831d600d2d893ec6250ee930188cc373d81ee5 1283220650 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.16666666666666666
F-Measure: 0.25
************************ Método Avaliado: org.junit.experimental.categories.Categories.assertNoDescendantsHaveCategoryAnnotations(org.junit.runner.Description) ************************
*Commit: commit 403f761da11bdaf9a03538139e7ae51601c36b0e 1286939104 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.getChildren()
getAnnotation
org.junit.experimental.categories.Categories.assertNoDescendantsHaveCategoryAnnotations(org.junit.runner.Description)
Chamada: org.junit.runner.Description.getChildren()
Situação: Primeira Chamada
Chamada: getAnnotation
Situação: Manual
Chamada: org.junit.experimental.categories.Categories.assertNoDescendantsHaveCategoryAnnotations(org.junit.runner.Description)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.ArrayList.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.experimental.categories.Categories.assertNoCategorizedDescendentsOfUncategorizeableParents(org.junit.runner.Description) ************************
*Commit: commit 403f761da11bdaf9a03538139e7ae51601c36b0e 1286939104 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.categories.Categories.canHaveCategorizedChildren(org.junit.runner.Description)
org.junit.experimental.categories.Categories.assertNoDescendantsHaveCategoryAnnotations(org.junit.runner.Description)
org.junit.runner.Description.getChildren()
org.junit.experimental.categories.Categories.assertNoCategorizedDescendentsOfUncategorizeableParents(org.junit.runner.Description)
Chamada: org.junit.experimental.categories.Categories.canHaveCategorizedChildren(org.junit.runner.Description)
Situação: Primeira Chamada
Chamada: org.junit.experimental.categories.Categories.assertNoDescendantsHaveCategoryAnnotations(org.junit.runner.Description)
Situação: Manual
Chamada: org.junit.runner.Description.getChildren()
Situação: Manual
Chamada: org.junit.experimental.categories.Categories.assertNoCategorizedDescendentsOfUncategorizeableParents(org.junit.runner.Description)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.ArrayList.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.CategoriesAndParameterizedTest.shouldFailWithMethodLevelCategoryAnnotationSwapped() ************************
*Commit: commit 403f761da11bdaf9a03538139e7ae51601c36b0e 1286939104 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: org.junit.tests.CategoriesAndParameterizedTest.shouldFailWithMethodLevelCategoryAnnotation() ************************
*Commit: commit 403f761da11bdaf9a03538139e7ae51601c36b0e 1286939104 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoriesAndParameterizedTest.shouldFailWithMethodLevelCategoryAnnotationSwapped() ************************
*Commit: commit c7895eb8695d79b14ff2f903fbb2fab3e52e4c43 1288061387 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoriesAndParameterizedTest.shouldSucceedWithAParameterizedClassSomewhere() ************************
*Commit: commit c7895eb8695d79b14ff2f903fbb2fab3e52e4c43 1288061387 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.16666666666666666
F-Measure: 0.25
************************ Método Avaliado: org.junit.tests.experimental.categories.CategoriesAndParameterizedTest.shouldFailWithMethodLevelCategoryAnnotation() ************************
*Commit: commit c7895eb8695d79b14ff2f903fbb2fab3e52e4c43 1288061387 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: org.junit.tests.experimental.rules.ClassRulesTest.customRuleIsAppliedOnce() ************************
*Commit: commit c7895eb8695d79b14ff2f903fbb2fab3e52e4c43 1288061387 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.21739127903592012
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.5
F-Measure: 0.5714285714285715
************************ Método Avaliado: org.junit.tests.experimental.rules.RulesTest$CustomTestName.apply(org.junit.runners.model.Statement, org.junit.runner.Description) ************************
*Commit: commit 0815c4d619b177431e64a2485baa0f746f3e2886 1288062830 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.getMethodName()
org.junit.runners.model.Statement.evaluate()
Chamada: org.junit.runner.Description.getMethodName()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.RulesTest.useCustomMethodRule() ************************
*Commit: commit 0815c4d619b177431e64a2485baa0f746f3e2886 1288062830 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.rules.TestRuleTestWatchman.apply(org.junit.runners.model.Statement, org.junit.runner.Description) ************************
*Commit: commit 4041354a3a7629b74970e0624b7564736c20e1e3 1289311054 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.rules.TestRuleTestWatchman.starting(org.junit.runner.Description)
org.junit.runners.model.Statement.evaluate()
org.junit.rules.TestRuleTestWatchman.succeeded(org.junit.runner.Description)
org.junit.rules.TestRuleTestWatchman.failed(java.lang.Throwable, org.junit.runner.Description)
org.junit.rules.TestRuleTestWatchman.finished(org.junit.runner.Description)
Chamada: org.junit.rules.TestRuleTestWatchman.starting(org.junit.runner.Description)
Situação: Primeira Chamada
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Manual
Chamada: org.junit.rules.TestRuleTestWatchman.succeeded(org.junit.runner.Description)
Situação: Manual
Chamada: org.junit.rules.TestRuleTestWatchman.failed(java.lang.Throwable, org.junit.runner.Description)
Situação: Manual
Chamada: org.junit.rules.TestRuleTestWatchman.finished(org.junit.runner.Description)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.multipleRulesAreRun() ************************
*Commit: commit 4041354a3a7629b74970e0624b7564736c20e1e3 1289311054 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.validateWrongTypedField() ************************
*Commit: commit 4041354a3a7629b74970e0624b7564736c20e1e3 1289311054 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: null.failed(java.lang.Throwable, org.junit.runner.Description) ************************
*Commit: commit 4041354a3a7629b74970e0624b7564736c20e1e3 1289311054 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.getClass()
java.lang.Class.getSimpleName()
Chamada: java.lang.Object.getClass()
Situação: Primeira Chamada
Chamada: java.lang.Class.getSimpleName()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.ruleIsIntroducedAndEvaluated() ************************
*Commit: commit 4041354a3a7629b74970e0624b7564736c20e1e3 1289311054 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.21739127903592012
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.succeeded() ************************
*Commit: commit 4041354a3a7629b74970e0624b7564736c20e1e3 1289311054 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
java.lang.Class.getName()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00448096
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1034481484901653
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.matchers.JUnitMatchers.containsString(java.lang.String)
Útil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: java.lang.Class.getName()
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.625
Corretude: 0.3
F-Measure: 0.4054054054054054
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.ignoreNonRules() ************************
*Commit: commit 4041354a3a7629b74970e0624b7564736c20e1e3 1289311054 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest$CustomTestName.apply(org.junit.runners.model.Statement, org.junit.runner.Description) ************************
*Commit: commit 4041354a3a7629b74970e0624b7564736c20e1e3 1289311054 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.getMethodName()
org.junit.runners.model.Statement.evaluate()
Chamada: org.junit.runner.Description.getMethodName()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.validatePrivateRule() ************************
*Commit: commit 4041354a3a7629b74970e0624b7564736c20e1e3 1289311054 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.ruleIsIntroducedAndEvaluatedOnSubclass() ************************
*Commit: commit 4041354a3a7629b74970e0624b7564736c20e1e3 1289311054 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.21739127903592012
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.onFailure() ************************
*Commit: commit 4041354a3a7629b74970e0624b7564736c20e1e3 1289311054 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
java.lang.Class.getName()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: java.lang.Class.getName()
Situação: Manual
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 1.0
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.19565203469756068
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.013
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.34782558071840247
Suporte: 0.0119492
F-Measure Suporte e Confiança: 0.024
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Percentual de Automatização: 0.8
Corretude: 0.5714285714285714
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.validateWrongTypedFieldInSuperclass() ************************
*Commit: commit 4041354a3a7629b74970e0624b7564736c20e1e3 1289311054 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.useCustomMethodRule() ************************
*Commit: commit 4041354a3a7629b74970e0624b7564736c20e1e3 1289311054 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.beforesAndAfters() ************************
*Commit: commit 4041354a3a7629b74970e0624b7564736c20e1e3 1289311054 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.hamcrest.CoreMatchers.is(java.lang.String)
org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.hamcrest.CoreMatchers.is(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.0029873
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.2
F-Measure: 0.28571428571428575
************************ Método Avaliado: org.junit.rules.Verifier.apply(org.junit.runners.model.Statement, org.junit.runner.Description) ************************
*Commit: commit d21d4edb6a5c55a3d8930dd26762a26cad67d827 1289311919 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.model.Statement.evaluate()
org.junit.rules.Verifier.verify()
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Primeira Chamada
Chamada: org.junit.rules.Verifier.verify()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.BlockJUnit4ClassRunner.withMethodRules(org.junit.runners.model.FrameworkMethod, java.lang.Object, org.junit.runners.model.Statement) ************************
*Commit: commit d21d4edb6a5c55a3d8930dd26762a26cad67d827 1289311919 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
getAnnotatedFieldValues
apply
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: getAnnotatedFieldValues
Situação: Manual
Chamada: apply
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.BlockJUnit4ClassRunner.withTestRules(org.junit.runners.model.FrameworkMethod, java.lang.Object, org.junit.runners.model.Statement) ************************
*Commit: commit d21d4edb6a5c55a3d8930dd26762a26cad67d827 1289311919 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
getAnnotatedFieldValues
org.junit.runners.BlockJUnit4ClassRunner.describeChild(org.junit.runners.model.FrameworkMethod)
apply
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: getAnnotatedFieldValues
Situação: Manual
Chamada: org.junit.runners.BlockJUnit4ClassRunner.describeChild(org.junit.runners.model.FrameworkMethod)
Situação: Manual
Chamada: apply
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.model.MultipleFailureException.assertEmpty(java.util.List) ************************
*Commit: commit b3789b3f879d34bbe968d5aa51d15c8856b9d102 1289611803 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.isEmpty()
java.util.List.size()
java.util.List.get(I)
Chamada: java.util.List.isEmpty()
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.runners.model.MultipleFailureException.buildMessage(java.util.List) ************************
*Commit: commit b3789b3f879d34bbe968d5aa51d15c8856b9d102 1289611803 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.size()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
java.lang.Object.getClass()
java.lang.Class.getName()
java.lang.Throwable.getMessage()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Chamada: java.util.List.size()
Situação: Primeira Chamada
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: java.lang.Object.getClass()
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2916669456253696
Suporte: 0.00522778
F-Measure Suporte e Confiança: 0.011
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.31034398374734506
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Útil
Método: java.lang.Object.getClass()
Inútil
Método: java.lang.Class.getName()
Útil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.14285714285714285
F-Measure: 0.19047619047619047
************************ Método Avaliado: org.junit.tests.assertion.MultipleFailureExceptionTest.assertEmptyThrowsMutipleFailureExceptionForManyThrowables() ************************
*Commit: commit b3789b3f879d34bbe968d5aa51d15c8856b9d102 1289611803 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.add(java.lang.Throwable)
java.util.List.add(java.lang.Throwable)
assertEmpty
org.junit.Assert.fail()
getFailures
org.hamcrest.CoreMatchers.equalTo(java.util.List)
org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
getMessage
startsWith
org.junit.Assert.assertTrue(Z)
getMessage
contains
org.junit.Assert.assertTrue(Z)
getMessage
contains
org.junit.Assert.assertTrue(Z)
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Primeira Chamada
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3000002677999962
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: assertEmpty
Situação: Manual
Chamada: org.junit.Assert.fail()
Situação: Manual
Chamada: getFailures
Situação: Manual
Chamada: org.hamcrest.CoreMatchers.equalTo(java.util.List)
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Situação: Manual
Chamada: getMessage
Situação: Manual
Chamada: startsWith
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Manual
Chamada: getMessage
Situação: Manual
Chamada: contains
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19512179987524453
Suporte: 0.00597461
F-Measure Suporte e Confiança: 0.012
Chamada: getMessage
Situação: Manual
Chamada: contains
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19512179987524453
Suporte: 0.00597461
F-Measure Suporte e Confiança: 0.012
Corretude/Utilidade dos Métodos
Método: java.lang.Throwable.getMessage()
Inútil
Método: java.util.List.contains(java.lang.Object)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: java.util.List.add(java.lang.Throwable)
Útil
Percentual de Automatização: 0.2
Corretude: 0.3333333333333333
F-Measure: 0.25
************************ Método Avaliado: getMethodRules ************************
*Commit: commit 81b50e9f3bdb66543d07e7349026bd3b447f433e 1289920697 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
getAnnotatedFieldValues
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: getAnnotatedFieldValues
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: getTestRules ************************
*Commit: commit 81b50e9f3bdb66543d07e7349026bd3b447f433e 1289920697 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
getAnnotatedFieldValues
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: getAnnotatedFieldValues
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.TestRuleTest.onlyApplyOnceEvenIfImplementsBothInterfaces() ************************
*Commit: commit 81b50e9f3bdb66543d07e7349026bd3b447f433e 1289920697 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
org.junit.runner.Result.wasSuccessful()
org.junit.Assert.assertTrue(Z)
Chamada: org.junit.runner.JUnitCore.runClasses([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: org.junit.runner.Result.wasSuccessful()
Situação: Manual
Chamada: org.junit.Assert.assertTrue(Z)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.21739127903592012
Suporte: 0.00746826
F-Measure Suporte e Confiança: 0.015
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.Assert.assertTrue(Z)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: org.junit.runners.ParentRunner.runLeaf(org.junit.runners.model.Statement, org.junit.runner.Description, org.junit.runner.notification.RunNotifier) ************************
*Commit: commit bed58a573c373d57d64fa369f58b2a8f0dbee3d7 1294260826 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.internal.runners.model.EachTestNotifier.fireTestStarted()
org.junit.runners.model.Statement.evaluate()
org.junit.internal.runners.model.EachTestNotifier.addFailedAssumption(org.junit.internal.AssumptionViolatedException)
org.junit.internal.runners.model.EachTestNotifier.addFailure(java.lang.Throwable)
org.junit.internal.runners.model.EachTestNotifier.fireTestFinished()
Chamada: org.junit.internal.runners.model.EachTestNotifier.fireTestStarted()
Situação: Primeira Chamada
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Manual
Chamada: org.junit.internal.runners.model.EachTestNotifier.addFailedAssumption(org.junit.internal.AssumptionViolatedException)
Situação: Manual
Chamada: org.junit.internal.runners.model.EachTestNotifier.addFailure(java.lang.Throwable)
Situação: Manual
Chamada: org.junit.internal.runners.model.EachTestNotifier.fireTestFinished()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleDataPointSuccess()
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(java.lang.Throwable, [Ljava.lang.Object;)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.handleAssumptionViolation(org.junit.internal.AssumptionViolatedException)
Inútil
Método: org.junit.experimental.theories.internal.Assignments.getArgumentStrings(Z)
Inútil
Método: org.junit.experimental.theories.Theories$TheoryAnchor.nullsOk()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: junit.tests.framework.AssertTest.testAssertionFailedErrorToStringWithMessage() ************************
*Commit: commit 766343797294634c86186664c519d65d7d984c96 1294461371 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
junit.framework.Assert.fail(java.lang.String)
java.lang.Throwable.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Chamada: junit.framework.Assert.fail(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.Throwable.toString()
Situação: Manual
Chamada: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Throwable.toString()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: org.junit.internal.matchers.StringContains.containsString(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: junit.tests.framework.AssertTest.testAssertionFailedErrorToStringWithNoMessage() ************************
*Commit: commit 766343797294634c86186664c519d65d7d984c96 1294461371 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
junit.framework.Assert.fail()
java.lang.Throwable.toString()
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Chamada: junit.framework.Assert.fail()
Situação: Primeira Chamada
Chamada: java.lang.Throwable.toString()
Situação: Manual
Chamada: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Throwable.toString()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: junit.extensions.TestSetup.run(junit.framework.TestResult)
Inútil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Método: org.junit.internal.matchers.StringContains.containsString(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: junit.tests.framework.ComparisonFailureTest.testExceptionToStringWithoutMessage() ************************
*Commit: commit 766343797294634c86186664c519d65d7d984c96 1294461371 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
java.lang.Throwable.toString()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail()
Chamada: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.Throwable.toString()
Situação: Manual
Chamada: java.lang.String.startsWith(java.lang.String)
Situação: Manual
Chamada: junit.framework.Assert.fail(java.lang.String)
Situação: Manual
Chamada: junit.framework.Assert.fail()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.06666666666666668
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.lang.Throwable.toString()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: junit.framework.Assert.fail()
Útil
Método: org.junit.internal.matchers.StringContains.containsString(java.lang.String)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: junit.tests.framework.ComparisonFailureTest.testExceptionToStringWithMessage() ************************
*Commit: commit 766343797294634c86186664c519d65d7d984c96 1294461371 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
java.lang.Throwable.toString()
java.lang.String.startsWith(java.lang.String)
junit.framework.Assert.fail(java.lang.String)
junit.framework.Assert.fail()
Chamada: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.Throwable.toString()
Situação: Manual
Chamada: java.lang.String.startsWith(java.lang.String)
Situação: Manual
Chamada: junit.framework.Assert.fail(java.lang.String)
Situação: Manual
Chamada: junit.framework.Assert.fail()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Throwable.toString()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: org.junit.internal.matchers.StringContains.containsString(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.assertion.AssertionTest.failWithMessageToString() ************************
*Commit: commit 766343797294634c86186664c519d65d7d984c96 1294461371 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.Assert.fail(java.lang.String)
java.lang.Throwable.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.Assert.fail(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.Throwable.toString()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Throwable.toString()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: org.junit.internal.matchers.StringContains.containsString(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.assertion.AssertionTest.failWithNoMessageToString() ************************
*Commit: commit 766343797294634c86186664c519d65d7d984c96 1294461371 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.Assert.fail()
java.lang.Throwable.toString()
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: org.junit.Assert.fail()
Situação: Primeira Chamada
Chamada: java.lang.Throwable.toString()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3235293654325558
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.lang.Throwable.getMessage()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: java.lang.Throwable.toString()
Inútil
Método: org.junit.Assert.assertThat(java.lang.String, org.hamcrest.Matcher)
Inútil
Método: org.junit.internal.matchers.StringContains.containsString(java.lang.String)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.2
F-Measure: 0.28571428571428575
************************ Método Avaliado: org.junit.runners.model.MultipleFailureException.getMessage() ************************
*Commit: commit 346bad2d3fb82c9a8378758b12979f7c9fe584e3 1294808990 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.size()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
java.lang.Object.getClass()
java.lang.Class.getName()
java.lang.Throwable.getMessage()
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Chamada: java.util.List.size()
Situação: Primeira Chamada
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: java.lang.Object.getClass()
Situação: Manual
Chamada: java.lang.Class.getName()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2916669456253696
Suporte: 0.00522778
F-Measure Suporte e Confiança: 0.011
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.31034398374734506
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Integer, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.Description.getDisplayName()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.hamcrest.CoreMatchers.is(java.lang.Integer)
Inútil
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: junit.framework.Assert.assertEquals(java.lang.String, java.lang.String)
Inútil
Método: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Útil
Método: java.lang.Object.getClass()
Inútil
Método: java.lang.Class.getName()
Útil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.14285714285714285
F-Measure: 0.19047619047619047
************************ Método Avaliado: org.junit.tests.ParentRunnerTest$Exclude.shouldRun(org.junit.runner.Description) ************************
*Commit: commit 669bb577583f2edd8cd65008a7c9ac19ebc350ea 1302888945 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.getMethodName()
java.lang.String.equals(java.lang.Object)
Chamada: org.junit.runner.Description.getMethodName()
Situação: Primeira Chamada
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.ParentRunnerTest.testMultipleFilters() ************************
*Commit: commit 669bb577583f2edd8cd65008a7c9ac19ebc350ea 1302888945 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getFailures()
org.junit.tests.ParentRunnerTest.isEmpty()
org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.24242391044134176
Suporte: 0.00597461
F-Measure Suporte e Confiança: 0.012
Chamada: org.junit.runner.Result.getFailures()
Situação: Manual
Chamada: org.junit.tests.ParentRunnerTest.isEmpty()
Situação: Manual
Chamada: org.junit.Assert.assertThat(java.util.List, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.36363566278357334
Suporte: 0.00896191
F-Measure Suporte e Confiança: 0.018
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Útil
Método: org.junit.runner.notification.Failure.getException()
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Request.getRunner()
Inútil
Método: org.junit.runner.Request.sortWith(java.util.Comparator)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.2222222222222222
F-Measure: 0.23529411764705882
************************ Método Avaliado: org.junit.tests.ParentRunnerTest.isEmpty() ************************
*Commit: commit 669bb577583f2edd8cd65008a7c9ac19ebc350ea 1302888945 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.hamcrest.Description.appendText(java.lang.String)
java.util.List.size()
Chamada: org.hamcrest.Description.appendText(java.lang.String)
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.hamcrest.Description.appendValue(java.lang.Object)
Inútil
Método: org.hamcrest.SelfDescribing.describeTo(org.hamcrest.Description)
Inútil
Método: org.hamcrest.Description.appendText(java.lang.String)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.manipulation.FilterTest.intersectionText() ************************
*Commit: commit 669bb577583f2edd8cd65008a7c9ac19ebc350ea 1302888945 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
intersect
describe
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
intersect
describe
org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Chamada: intersect
Situação: Primeira Chamada
Chamada: describe
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: intersect
Situação: Manual
Chamada: describe
Situação: Manual
Chamada: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.06999997322000037
Suporte: 0.00522778
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Útil
Método: org.junit.Assert.assertTrue(Z)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Percentual de Automatização: 0.2
Corretude: 0.25
F-Measure: 0.22222222222222224
************************ Método Avaliado: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class) ************************
*Commit: commit 01b427b3b89ce04d01f0ddbd746d13a175feec5b 1304101486 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.experimental.results.PrintableResult.testResult(org.junit.runner.Request)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.PrintableResult.testResult(org.junit.runner.Request)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Request.getRunner()
Inútil
Método: org.junit.runner.Request.sortWith(java.util.Comparator)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.classes.ParentRunnerFilteringTest.testSuiteFiltering() ************************
*Commit: commit 01b427b3b89ce04d01f0ddbd746d13a175feec5b 1304101486 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.getRunner()
org.junit.tests.running.classes.ParentRunnerFilteringTest.notThisMethodName(java.lang.String)
org.junit.runner.manipulation.Filter.apply(java.lang.Object)
org.junit.Assert.fail(java.lang.String)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.getRunner()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4242431619822036
Suporte: 0.0104556
F-Measure Suporte e Confiança: 0.021
Chamada: org.junit.tests.running.classes.ParentRunnerFilteringTest.notThisMethodName(java.lang.String)
Situação: Manual
Chamada: org.junit.runner.manipulation.Filter.apply(java.lang.Object)
Situação: Manual
Chamada: org.junit.Assert.fail(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Runner.testCount()
Inútil
Método: org.junit.runner.Runner.getDescription()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Request.getRunner()
Útil
Método: org.junit.runner.Request.sortWith(java.util.Comparator)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.14285714285714285
F-Measure: 0.18181818181818182
************************ Método Avaliado: org.junit.tests.running.classes.ParentRunnerFilteringTest.testRunSuiteFiltering() ************************
*Commit: commit 01b427b3b89ce04d01f0ddbd746d13a175feec5b 1304101486 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.tests.running.classes.ParentRunnerFilteringTest.notThisMethodName(java.lang.String)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.tests.running.classes.ParentRunnerFilteringTest.notThisMethodName(java.lang.String)
Situação: Manual
Chamada: org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.runner.Request.getRunner()
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Método: org.junit.runner.Request.sortWith(java.util.Comparator)
Inútil
Percentual de Automatização: 0.4
Corretude: 0.2222222222222222
F-Measure: 0.2857142857142857
************************ Método Avaliado: org.junit.tests.running.classes.ParentRunnerFilteringTest.testCountClassFiltering() ************************
*Commit: commit 01b427b3b89ce04d01f0ddbd746d13a175feec5b 1304101486 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
org.junit.tests.running.classes.ParentRunnerFilteringTest$CountingFilter.getCount(org.junit.runner.Description)
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.24242391044134176
Suporte: 0.00597461
F-Measure Suporte e Confiança: 0.012
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.36363566278357334
Suporte: 0.00896191
F-Measure Suporte e Confiança: 0.018
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6896527841905993
Suporte: 0.0149365
F-Measure Suporte e Confiança: 0.030
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.600000669500887
Suporte: 0.00896191
F-Measure Suporte e Confiança: 0.018
Chamada: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
Situação: Manual
Chamada: org.junit.tests.running.classes.ParentRunnerFilteringTest$CountingFilter.getCount(org.junit.runner.Description)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666651788902378
Suporte: 0.0029873
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: org.junit.runner.Request.getRunner()
Inútil
Método: org.junit.runner.Request.sortWith(java.util.Comparator)
Inútil
Percentual de Automatização: 0.5555555555555556
Corretude: 0.3333333333333333
F-Measure: 0.4166666666666667
************************ Método Avaliado: org.junit.tests.running.classes.ParentRunnerFilteringTest.testCountSuiteFiltering() ************************
*Commit: commit 01b427b3b89ce04d01f0ddbd746d13a175feec5b 1304101486 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
org.junit.runner.JUnitCore.run(org.junit.runner.Request)
org.junit.runner.Result.getRunCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Result.getFailureCount()
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Description.createSuiteDescription(java.lang.Class)
org.junit.tests.running.classes.ParentRunnerFilteringTest$CountingFilter.getCount(org.junit.runner.Description)
org.junit.Assert.assertEquals(J, J)
org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
org.junit.tests.running.classes.ParentRunnerFilteringTest$CountingFilter.getCount(org.junit.runner.Description)
org.junit.Assert.assertEquals(J, J)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.filterWith(org.junit.runner.manipulation.Filter)
Situação: Manual
Chamada: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.24242391044134176
Suporte: 0.00597461
F-Measure Suporte e Confiança: 0.012
Chamada: org.junit.runner.Result.getRunCount()
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.36363566278357334
Suporte: 0.00896191
F-Measure Suporte e Confiança: 0.018
Chamada: org.junit.runner.Result.getFailureCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6896527841905993
Suporte: 0.0149365
F-Measure Suporte e Confiança: 0.030
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.600000669500887
Suporte: 0.00896191
F-Measure Suporte e Confiança: 0.018
Chamada: org.junit.runner.Description.createSuiteDescription(java.lang.Class)
Situação: Manual
Chamada: org.junit.tests.running.classes.ParentRunnerFilteringTest$CountingFilter.getCount(org.junit.runner.Description)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Manual
Chamada: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
Situação: Manual
Chamada: org.junit.tests.running.classes.ParentRunnerFilteringTest$CountingFilter.getCount(org.junit.runner.Description)
Situação: Manual
Chamada: org.junit.Assert.assertEquals(J, J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6666651788902378
Suporte: 0.0029873
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Útil
Método: org.junit.Assert.assertEquals(J, J)
Útil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Útil
Método: org.junit.runner.Request.getRunner()
Inútil
Método: org.junit.runner.Request.sortWith(java.util.Comparator)
Inútil
Percentual de Automatização: 0.4166666666666667
Corretude: 0.3333333333333333
F-Measure: 0.3703703703703704
************************ Método Avaliado: org.junit.tests.running.classes.ParentRunnerFilteringTest.notThisMethodName(java.lang.String) ************************
*Commit: commit 01b427b3b89ce04d01f0ddbd746d13a175feec5b 1304101486 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Description.getMethodName()
org.junit.runner.Description.getMethodName()
java.lang.String.equals(java.lang.Object)
Chamada: org.junit.runner.Description.getMethodName()
Situação: Primeira Chamada
Chamada: org.junit.runner.Description.getMethodName()
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.running.classes.ParentRunnerFilteringTest.testSuiteFilteringWithUnmodifyableChildList() ************************
*Commit: commit dfd0bba58bfdacfd8802ee07c8f83ee794a51aba 1306809965 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.Request.aClass(java.lang.Class)
org.junit.runner.Request.getRunner()
org.junit.tests.running.classes.ParentRunnerFilteringTest.notThisMethodName(java.lang.String)
org.junit.runner.manipulation.Filter.apply(java.lang.Object)
org.junit.Assert.fail(java.lang.String)
Chamada: org.junit.runner.Request.aClass(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.runner.Request.getRunner()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4242431619822036
Suporte: 0.0104556
F-Measure Suporte e Confiança: 0.021
Chamada: org.junit.tests.running.classes.ParentRunnerFilteringTest.notThisMethodName(java.lang.String)
Situação: Manual
Chamada: org.junit.runner.manipulation.Filter.apply(java.lang.Object)
Situação: Manual
Chamada: org.junit.Assert.fail(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Runner.testCount()
Inútil
Método: org.junit.runner.Runner.getDescription()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: org.junit.runner.JUnitCore.run(org.junit.runner.Request)
Inútil
Método: org.junit.Assert.assertEquals(J, J)
Inútil
Método: org.junit.runner.Request.getRunner()
Útil
Método: org.junit.runner.Request.sortWith(java.util.Comparator)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.14285714285714285
F-Measure: 0.18181818181818182
************************ Método Avaliado: rules ************************
*Commit: commit 8782efa08abf5d47afdc16740678661443706740 1308923359 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runners.ParentRunner.getTestClass()
getAnnotatedFieldValues
Chamada: org.junit.runners.ParentRunner.getTestClass()
Situação: Primeira Chamada
Chamada: getAnnotatedFieldValues
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
Inútil
Método: org.junit.runners.model.TestClass.getOnlyConstructor()
Inútil
Método: org.junit.runners.model.TestClass.getJavaClass()
Inútil
Método: org.junit.runners.model.TestClass.getAnnotatedMethods(java.lang.Class)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.BlockJUnit4ClassRunnerOverrideTest$FlipBitRule.apply(org.junit.runners.model.Statement, org.junit.runners.model.FrameworkMethod, java.lang.Object) ************************
*Commit: commit 8782efa08abf5d47afdc16740678661443706740 1308923359 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.getClass()
java.lang.Class.getField(java.lang.String)
java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)
org.junit.runners.model.Statement.evaluate()
Chamada: java.lang.Object.getClass()
Situação: Primeira Chamada
Chamada: java.lang.Class.getField(java.lang.String)
Situação: Manual
Chamada: java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: org.junit.runners.model.Statement.evaluate()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Description.createTestDescription(java.lang.Class, java.lang.String)
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.lang.Object.getClass()
Inútil
Método: java.lang.Class.getName()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.BlockJUnit4ClassRunnerOverrideTest.overrideRulesMethod() ************************
*Commit: commit 8782efa08abf5d47afdc16740678661443706740 1308923359 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.rules.BlockJUnit4ClassRunnerOverrideTest.overrideTestRulesMethod() ************************
*Commit: commit 8782efa08abf5d47afdc16740678661443706740 1308923359 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.runners.model.NoGenericTypeParametersValidator.validateNoTypeParameterOnType(java.lang.reflect.Type, java.util.List) ************************
*Commit: commit 9c4e365ea50ea6f983e4b4770de66553a806c806 1310176039 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.Method.getName()
java.util.List.add(java.lang.Throwable)
org.junit.runners.model.NoGenericTypeParametersValidator.validateNoTypeParameterOnParameterizedType(java.lang.reflect.ParameterizedType, java.util.List)
org.junit.runners.model.NoGenericTypeParametersValidator.validateNoTypeParameterOnWildcardType(java.lang.reflect.WildcardType, java.util.List)
org.junit.runners.model.NoGenericTypeParametersValidator.validateNoTypeParameterOnGenericArrayType(java.lang.reflect.GenericArrayType, java.util.List)
Chamada: java.lang.reflect.Method.getName()
Situação: Primeira Chamada
Chamada: java.util.List.add(java.lang.Throwable)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3000002677999962
Suporte: 0.00224048
F-Measure Suporte e Confiança: 0.005
Chamada: org.junit.runners.model.NoGenericTypeParametersValidator.validateNoTypeParameterOnParameterizedType(java.lang.reflect.ParameterizedType, java.util.List)
Situação: Manual
Chamada: org.junit.runners.model.NoGenericTypeParametersValidator.validateNoTypeParameterOnWildcardType(java.lang.reflect.WildcardType, java.util.List)
Situação: Manual
Chamada: org.junit.runners.model.NoGenericTypeParametersValidator.validateNoTypeParameterOnGenericArrayType(java.lang.reflect.GenericArrayType, java.util.List)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.Method.getName()
Inútil
Método: java.lang.reflect.Method.getParameterTypes()
Inútil
Método: java.lang.reflect.Method.getReturnType()
Inútil
Método: java.util.List.add(java.lang.Throwable)
Útil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithUnresolvedGenericTypeVariablesOnTheoryParms.whereTypeVariableIsOnTheTheory() ************************
*Commit: commit 9c4e365ea50ea6f983e4b4770de66553a806c806 1310176039 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.isSuccessful()
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.isSuccessful()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.47368372833816075
Suporte: 0.00672143
F-Measure Suporte e Confiança: 0.014
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Útil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithUnresolvedGenericTypeVariablesOnTheoryParms.whereTypeVariableIsOnTheoryClass() ************************
*Commit: commit 9c4e365ea50ea6f983e4b4770de66553a806c806 1310176039 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithUnresolvedGenericTypeVariablesOnTheoryParms.whereTypeVariableIsOnArrayTypeOnTheoryParm() ************************
*Commit: commit 9c4e365ea50ea6f983e4b4770de66553a806c806 1310176039 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithUnresolvedGenericTypeVariablesOnTheoryParms.whereTypeVariablesAbound() ************************
*Commit: commit 9c4e365ea50ea6f983e4b4770de66553a806c806 1310176039 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Manual
Chamada: org.junit.experimental.results.ResultMatchers.hasFailureContaining(java.lang.String)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.0625
Corretude: 0.25
F-Measure: 0.1
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithUnresolvedGenericTypeVariablesOnTheoryParms.whereTypeVariableIsOnComponentOfArrayTypeOnTheoryParm() ************************
*Commit: commit 9c4e365ea50ea6f983e4b4770de66553a806c806 1310176039 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithUnresolvedGenericTypeVariablesOnTheoryParms.whereTypeVariableIsOnWildcardUpperBoundOnTheoryParm() ************************
*Commit: commit 9c4e365ea50ea6f983e4b4770de66553a806c806 1310176039 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithUnresolvedGenericTypeVariablesOnTheoryParms.whereTypeVariableIsOnParameterizedTheoryParm() ************************
*Commit: commit 9c4e365ea50ea6f983e4b4770de66553a806c806 1310176039 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithUnresolvedGenericTypeVariablesOnTheoryParms.whereTypeVariableIsOnWildcardLowerBoundOnTheoryParm() ************************
*Commit: commit 9c4e365ea50ea6f983e4b4770de66553a806c806 1310176039 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: org.junit.tests.experimental.theories.runner.WithUnresolvedGenericTypeVariablesOnTheoryParms.whereTypeVariableIsOnTheoryParm() ************************
*Commit: commit 9c4e365ea50ea6f983e4b4770de66553a806c806 1310176039 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Chamada: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2631577834626525
Suporte: 0.00373413
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Útil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: junit.tests.runner.ResultTest.testRunFailureResultCanBeSerialised() ************************
*Commit: commit 085308f8fb6bd499f5108f7cbd783b1997aceb7c 1310813792 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
junit.tests.runner.ResultTest.assertResultSerializable(org.junit.runner.Result)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: junit.tests.runner.ResultTest.assertResultSerializable(org.junit.runner.Result)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: junit.tests.runner.ResultTest.testRunSuccessResultCanBeSerialised() ************************
*Commit: commit 085308f8fb6bd499f5108f7cbd783b1997aceb7c 1310813792 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
junit.tests.runner.ResultTest.assertResultSerializable(org.junit.runner.Result)
Chamada: org.junit.runner.JUnitCore.run([Ljava.lang.Class;)
Situação: Primeira Chamada
Chamada: junit.tests.runner.ResultTest.assertResultSerializable(org.junit.runner.Result)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: java.util.List.get(I)
Inútil
Método: org.junit.runner.Result.getFailureCount()
Inútil
Método: junit.framework.Assert.assertEquals(I, I)
Inútil
Método: junit.framework.Assert.assertTrue(Z)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: org.junit.tests.experimental.rules.TempFolderRuleTest.incorrectUsageWithoutApplyingTheRuleShouldNotPolluteTheCurrentWorkingDirectory() ************************
*Commit: commit 70fe94d031c7066899fc464cd4171db0884f1356 1312835701 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
org.junit.experimental.results.ResultMatchers.failureCountIs(I)
org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
java.io.File.exists()
org.junit.Assert.assertFalse(java.lang.String, Z)
java.io.File.exists()
org.junit.Assert.assertFalse(java.lang.String, Z)
java.io.File.exists()
org.junit.Assert.assertFalse(java.lang.String, Z)
Chamada: org.junit.experimental.results.PrintableResult.testResult(java.lang.Class)
Situação: Primeira Chamada
Chamada: org.junit.experimental.results.ResultMatchers.failureCountIs(I)
Situação: Manual
Chamada: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5789474055124492
Suporte: 0.00821509
F-Measure Suporte e Confiança: 0.017
Chamada: java.io.File.exists()
Situação: Manual
Chamada: org.junit.Assert.assertFalse(java.lang.String, Z)
Situação: Manual
Chamada: java.io.File.exists()
Situação: Manual
Chamada: org.junit.Assert.assertFalse(java.lang.String, Z)
Situação: Manual
Chamada: java.io.File.exists()
Situação: Manual
Chamada: org.junit.Assert.assertFalse(java.lang.String, Z)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.experimental.results.ResultMatchers.isSuccessful()
Inútil
Método: org.junit.Assert.assertThat(java.lang.Object, org.hamcrest.Matcher)
Inútil
Método: org.junit.Assert.assertThat(org.junit.experimental.results.PrintableResult, org.hamcrest.Matcher)
Útil
Método: java.io.File.delete()
Inútil
Método: org.junit.experimental.results.ResultMatchers.hasSingleFailureContaining(java.lang.String)
Inútil
Percentual de Automatização: 0.125
Corretude: 0.2
F-Measure: 0.15384615384615385
************************ Método Avaliado: org.junit.internal.runners.statements.FailOnTimeout.throwTimeoutException(org.junit.internal.runners.statements.FailOnTimeout$StatementThread) ************************
*Commit: commit 1ad3a59952f3528914d1225d51bbb04adb62c22f 1312922717 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
java.lang.Thread.getStackTrace()
java.lang.Throwable.setStackTrace([Ljava.lang.StackTraceElement;)
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: java.lang.Thread.getStackTrace()
Situação: Manual
Chamada: java.lang.Throwable.setStackTrace([Ljava.lang.StackTraceElement;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: org.junit.runner.Result.getFailures()
Inútil
Método: org.junit.Assert.assertEquals(java.lang.Object, java.lang.Object)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
