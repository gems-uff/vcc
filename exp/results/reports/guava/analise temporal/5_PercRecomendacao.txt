************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap$Builder.put(com.google.common.collect.Range, com.google.common.collect.ImmutableRangeMap$Builder$V) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.ImmutableRangeMap$Builder$V)
com.google.common.collect.RangeSet.complement()
com.google.common.collect.RangeSet.encloses(com.google.common.collect.Range)
asMapOfRanges
entrySet
java.util.Map$Entry.getKey()
com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.Range.isEmpty()
com.google.common.collect.Range.isEmpty()
com.google.common.collect.RangeSet.add(com.google.common.collect.Range)
com.google.common.collect.RangeMap.put(com.google.common.collect.Range, com.google.common.collect.ImmutableRangeMap$Builder$V)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.ImmutableRangeMap$Builder$V)
Situação: Manual
Chamada: com.google.common.collect.RangeSet.complement()
Situação: Manual
Chamada: com.google.common.collect.RangeSet.encloses(com.google.common.collect.Range)
Situação: Manual
Chamada: asMapOfRanges
Situação: Manual
Chamada: entrySet
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7777807679110853
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.RangeSet.add(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.RangeMap.put(com.google.common.collect.Range, com.google.common.collect.ImmutableRangeMap$Builder$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: com.google.common.collect.Range.isEmpty()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.08333333333333333
Corretude: 0.25
F-Measure: 0.125
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap$Builder.putAll(com.google.common.collect.RangeMap) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMapOfRanges
entrySet
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableRangeMap$Builder.put(com.google.common.collect.Range, com.google.common.collect.ImmutableRangeMap$Builder$V)
Chamada: asMapOfRanges
Situação: Primeira Chamada
Chamada: entrySet
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.ImmutableRangeMap$Builder.put(com.google.common.collect.Range, com.google.common.collect.ImmutableRangeMap$Builder$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap.get(com.google.common.collect.ImmutableRangeMap$K) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Cut.belowValue(com.google.common.collect.ImmutableRangeMap$K)
com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
java.util.List.get(I)
com.google.common.collect.Range.contains(com.google.common.collect.ImmutableRangeMap$K)
java.util.List.get(I)
Chamada: com.google.common.collect.Cut.belowValue(com.google.common.collect.ImmutableRangeMap$K)
Situação: Primeira Chamada
Chamada: com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.ImmutableRangeMap$K)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.25
Corretude: 0.3333333333333333
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap.copyOf(com.google.common.collect.RangeMap) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMapOfRanges
java.util.Map.size()
java.util.Map.size()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.Range)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableRangeMap$(Lcom/google/common/collect/RangeMap;)Lcom/google/common/collect/ImmutableRangeMap;$V)
com.google.common.collect.ImmutableList$Builder.build()
com.google.common.collect.ImmutableList$Builder.build()
Chamada: asMapOfRanges
Situação: Primeira Chamada
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.19999946177745306
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19999946177745306
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableRangeMap$(Lcom/google/common/collect/RangeMap;)Lcom/google/common/collect/ImmutableRangeMap;$V)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Map.entrySet()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.6
F-Measure: 0.42857142857142855
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap$Builder.build() ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMapOfRanges
java.util.Map.size()
java.util.Map.size()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.Range)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableRangeMap$Builder$V)
com.google.common.collect.ImmutableList$Builder.build()
com.google.common.collect.ImmutableList$Builder.build()
Chamada: asMapOfRanges
Situação: Primeira Chamada
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.19999946177745306
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19999946177745306
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableRangeMap$Builder$V)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Map.entrySet()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.6
F-Measure: 0.42857142857142855
************************ Método Avaliado: com.google.common.collect.TreeRangeMap.get(com.google.common.collect.TreeRangeMap$K) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Cut.belowValue(com.google.common.collect.TreeRangeMap$K)
java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.contains(com.google.common.collect.TreeRangeMap$K)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Chamada: com.google.common.collect.Cut.belowValue(com.google.common.collect.TreeRangeMap$K)
Situação: Primeira Chamada
Chamada: java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.contains(com.google.common.collect.TreeRangeMap$K)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2
Corretude: 0.2
F-Measure: 0.20000000000000004
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$AsMapOfRanges.get(java.lang.Object) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
com.google.common.collect.Range.equals(java.lang.Object)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Chamada: java.util.Map.get(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
Situação: Manual
Chamada: com.google.common.collect.Range.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$AsMapOfRanges.entrySet() ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator)
java.util.Map.size()
Chamada: java.util.SortedMap.values()
Situação: Primeira Chamada
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator)
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeRangeMap.remove(com.google.common.collect.Range) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.isEmpty()
java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
com.google.common.collect.TreeRangeMap.putRangeMapEntry(com.google.common.collect.Cut, com.google.common.collect.Cut, com.google.common.collect.TreeRangeMap$V)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getLowerBound()
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
com.google.common.collect.TreeRangeMap.putRangeMapEntry(com.google.common.collect.Cut, com.google.common.collect.Cut, com.google.common.collect.TreeRangeMap$V)
java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
com.google.common.collect.TreeRangeMap.putRangeMapEntry(com.google.common.collect.Cut, com.google.common.collect.Cut, com.google.common.collect.TreeRangeMap$V)
java.util.Map.remove(java.lang.Object)
java.util.NavigableMap.subMap(com.google.common.collect.Cut, com.google.common.collect.Cut)
java.util.Map.clear()
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Primeira Chamada
Chamada: java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6999993945008567
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap.putRangeMapEntry(com.google.common.collect.Cut, com.google.common.collect.Cut, com.google.common.collect.TreeRangeMap$V)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getLowerBound()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap.putRangeMapEntry(com.google.common.collect.Cut, com.google.common.collect.Cut, com.google.common.collect.TreeRangeMap$V)
Situação: Manual
Chamada: java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6999993945008567
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap.putRangeMapEntry(com.google.common.collect.Cut, com.google.common.collect.Cut, com.google.common.collect.TreeRangeMap$V)
Situação: Manual
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Manual
Chamada: java.util.NavigableMap.subMap(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Map.clear()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Útil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.24
Corretude: 0.3333333333333333
F-Measure: 0.27906976744186046
************************ Método Avaliado: com.google.common.collect.TreeRangeMap.putAll(com.google.common.collect.RangeMap) ************************
*Commit: commit 85d2e6894a747bbcc39ac5feaecec89226446499 1351282377 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMapOfRanges
entrySet
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap.put(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
Chamada: asMapOfRanges
Situação: Primeira Chamada
Chamada: entrySet
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.TreeRangeMap.put(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.io.BaseEncoding$SeparatedBaseEncoding.SeparatedBaseEncoding(com.google.common.io.BaseEncoding, java.lang.String, I) ************************
*Commit: commit be52ad577ab4a5c0ad8aec2a828d611c5bed2516 1351282682 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.BaseEncoding)
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
com.google.common.base.CharMatcher.precomputed()
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.io.BaseEncoding)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.precomputed()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.StandardBaseEncoding(java.lang.String, java.lang.Character) ************************
*Commit: commit be52ad577ab4a5c0ad8aec2a828d611c5bed2516 1351282682 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.length()
com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
java.lang.String.length()
java.lang.Integer.lowestOneBit(I)
java.lang.Math.min(I, I)
java.lang.String.length()
java.lang.Character.charValue()
java.lang.String.indexOf(I)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
java.util.Arrays.fill([B, B)
java.lang.String.length()
java.lang.String.charAt(I)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.17647002952703322
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Integer.lowestOneBit(I)
Situação: Manual
Chamada: java.lang.Math.min(I, I)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Character.charValue()
Situação: Manual
Chamada: java.lang.String.indexOf(I)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Situação: Manual
Chamada: java.util.Arrays.fill([B, B)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.38461538461538464
Corretude: 0.2857142857142857
F-Measure: 0.32786885245901637
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.withSeparator(java.lang.String, I) ************************
*Commit: commit be52ad577ab4a5c0ad8aec2a828d611c5bed2516 1351282682 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
com.google.common.base.CharMatcher.or(com.google.common.base.CharMatcher)
com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
Situação: Manual
Chamada: com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.or(com.google.common.base.CharMatcher)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.decode(java.lang.CharSequence) ************************
*Commit: commit be52ad577ab4a5c0ad8aec2a828d611c5bed2516 1351282682 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
java.lang.CharSequence.length()
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
java.nio.ByteBuffer.allocate(I)
com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
com.google.common.base.CharMatcher.matches(C)
java.nio.ByteBuffer.put(B)
java.lang.CharSequence.length()
java.lang.CharSequence.length()
java.lang.CharSequence.length()
java.lang.CharSequence.subSequence(I, I)
java.nio.Buffer.flip()
com.google.common.io.BaseEncoding$StandardBaseEncoding.extractBytes(java.nio.ByteBuffer)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Chamada: java.nio.ByteBuffer.allocate(I)
Situação: Manual
Chamada: com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: com.google.common.base.CharMatcher.matches(C)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.26190455595249423
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.base.CharMatcher.matches(C)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.26923103794390735
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.nio.ByteBuffer.put(B)
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.subSequence(I, I)
Situação: Manual
Chamada: java.nio.Buffer.flip()
Situação: Manual
Chamada: com.google.common.io.BaseEncoding$StandardBaseEncoding.extractBytes(java.nio.ByteBuffer)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Útil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.2
Corretude: 0.6666666666666666
F-Measure: 0.30769230769230765
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.encode([B, I, I) ************************
*Commit: commit be52ad577ab4a5c0ad8aec2a828d611c5bed2516 1351282682 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull([B)
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
java.lang.String.charAt(I)
java.lang.StringBuilder.append(C)
java.lang.String.charAt(I)
java.lang.StringBuilder.append(C)
java.lang.AbstractStringBuilder.length()
java.lang.Character.charValue()
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: com.google.common.base.Preconditions.checkNotNull([B)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Manual
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Chamada: java.lang.String.charAt(I)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.String.charAt(I)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5714285714285713
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: java.lang.AbstractStringBuilder.length()
Situação: Manual
Chamada: java.lang.Character.charValue()
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5714285714285713
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Útil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.util.Collections.emptyList()
Inútil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.3
Corretude: 0.5
F-Measure: 0.37499999999999994
************************ Método Avaliado: com.google.common.collect.SortedMultisets$DescendingMultiset.comparator() ************************
*Commit: commit 6fb125be7d839839562d3e9a19c8dc40d6e54265 1351282759 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.SortedMultisets$DescendingMultiset.forwardMultiset()
com.google.common.collect.SortedMultiset.comparator()
com.google.common.collect.Ordering.from(java.util.Comparator)
com.google.common.collect.Ordering.reverse()
Chamada: com.google.common.collect.SortedMultisets$DescendingMultiset.forwardMultiset()
Situação: Primeira Chamada
Chamada: com.google.common.collect.SortedMultiset.comparator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.from(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.Ordering.reverse()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6153824656845164
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.SortedMultisets$DescendingMultiset.createEntrySet() ************************
*Commit: commit 6fb125be7d839839562d3e9a19c8dc40d6e54265 1351282759 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.SortedMultisets$DescendingMultiset.entryIterator()
com.google.common.collect.SortedMultisets$DescendingMultiset.forwardMultiset()
com.google.common.collect.Multiset.entrySet()
java.util.Set.size()
Chamada: com.google.common.collect.SortedMultisets$DescendingMultiset.entryIterator()
Situação: Primeira Chamada
Chamada: com.google.common.collect.SortedMultisets$DescendingMultiset.forwardMultiset()
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap.getEntry(com.google.common.collect.ImmutableRangeMap$K) ************************
*Commit: commit ba9aa6be61a9de6096a0d571ae9fde97e57d539a 1351282990 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
lowerBoundFn
com.google.common.collect.Cut.belowValue(com.google.common.collect.ImmutableRangeMap$K)
com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
java.util.List.get(I)
com.google.common.collect.Range.contains(com.google.common.collect.ImmutableRangeMap$K)
java.util.List.get(I)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Range, com.google.common.collect.ImmutableRangeMap$V)
Chamada: lowerBoundFn
Situação: Primeira Chamada
Chamada: com.google.common.collect.Cut.belowValue(com.google.common.collect.ImmutableRangeMap$K)
Situação: Manual
Chamada: com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.ImmutableRangeMap$K)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Range, com.google.common.collect.ImmutableRangeMap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.2222222222222222
************************ Método Avaliado: com.google.common.collect.TreeRangeMap.getEntry(com.google.common.collect.TreeRangeMap$K) ************************
*Commit: commit ba9aa6be61a9de6096a0d571ae9fde97e57d539a 1351282990 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Cut.belowValue(com.google.common.collect.TreeRangeMap$K)
java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.contains(com.google.common.collect.TreeRangeMap$K)
java.util.Map$Entry.getValue()
Chamada: com.google.common.collect.Cut.belowValue(com.google.common.collect.TreeRangeMap$K)
Situação: Primeira Chamada
Chamada: java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.contains(com.google.common.collect.TreeRangeMap$K)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.io.Closer.close() ************************
*Commit: commit b76ffbeab2394774f8e0efc13205b38f63d1513e 1351283053 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.isEmpty()
java.util.Deque.pop()
java.io.Closeable.close()
com.google.common.io.Closer$Suppressor.suppress(java.io.Closeable, java.lang.Throwable, java.lang.Throwable)
com.google.common.base.Throwables.propagateIfPossible(java.lang.Throwable, java.lang.Class)
Chamada: java.util.Collection.isEmpty()
Situação: Primeira Chamada
Chamada: java.util.Deque.pop()
Situação: Manual
Chamada: java.io.Closeable.close()
Situação: Manual
Chamada: com.google.common.io.Closer$Suppressor.suppress(java.io.Closeable, java.lang.Throwable, java.lang.Throwable)
Situação: Manual
Chamada: com.google.common.base.Throwables.propagateIfPossible(java.lang.Throwable, java.lang.Class)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Iterators.pollNext(java.util.Iterator) ************************
*Commit: commit 0dbf979ceacfa3006bd48330aff35e8c4e7fe02f 1351546509 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.remove()
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.Iterators.pollNext(java.util.Iterator) ************************
*Commit: commit 0dbf979ceacfa3006bd48330aff35e8c4e7fe02f 1351546509 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.remove()
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap.span() ************************
*Commit: commit 4dfc92182081e9695d38772ba528faf7fef75ff6 1351548078 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.isEmpty()
java.util.List.get(I)
java.util.List.size()
java.util.List.get(I)
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Chamada: com.google.common.collect.ImmutableCollection.isEmpty()
Situação: Primeira Chamada
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09589008145186709
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Útil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.TreeRangeMap.span() ************************
*Commit: commit 4dfc92182081e9695d38772ba528faf7fef75ff6 1351548078 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.NavigableMap.firstEntry()
java.util.NavigableMap.lastEntry()
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Chamada: java.util.NavigableMap.firstEntry()
Situação: Primeira Chamada
Chamada: java.util.NavigableMap.lastEntry()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
Situação: Manual
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.2
F-Measure: 0.1818181818181818
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet.span() ************************
*Commit: commit c50a94587b677f2d6f50c41c2d2913b272e6505b 1351877733 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.isEmpty()
java.util.List.get(I)
java.util.List.size()
java.util.List.get(I)
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Chamada: com.google.common.collect.ImmutableCollection.isEmpty()
Situação: Primeira Chamada
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09589008145186709
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Útil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$Complement.span() ************************
*Commit: commit c50a94587b677f2d6f50c41c2d2913b272e6505b 1351877733 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.NavigableMap.firstEntry()
com.google.common.collect.Range.all()
java.util.Map$Entry.getValue()
com.google.common.collect.Range.hasLowerBound()
com.google.common.collect.Cut.belowAll()
java.util.Map$Entry.getValue()
com.google.common.collect.Cut.aboveAll()
com.google.common.collect.Cut.equals(java.lang.Object)
java.util.NavigableMap.lastEntry()
java.util.Map$Entry.getValue()
com.google.common.collect.Range.hasUpperBound()
com.google.common.collect.Cut.aboveAll()
java.util.Map$Entry.getValue()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Chamada: java.util.NavigableMap.firstEntry()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Range.all()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.Range.hasLowerBound()
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Cut.aboveAll()
Situação: Manual
Chamada: com.google.common.collect.Cut.equals(java.lang.Object)
Situação: Manual
Chamada: java.util.NavigableMap.lastEntry()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Range.hasUpperBound()
Situação: Manual
Chamada: com.google.common.collect.Cut.aboveAll()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.23076923076923078
Corretude: 0.2
F-Measure: 0.21428571428571427
************************ Método Avaliado: com.google.common.collect.TreeRangeSet.span() ************************
*Commit: commit c50a94587b677f2d6f50c41c2d2913b272e6505b 1351877733 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.NavigableMap.firstEntry()
java.util.NavigableMap.lastEntry()
java.util.Map$Entry.getValue()
java.util.Map$Entry.getValue()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Chamada: java.util.NavigableMap.firstEntry()
Situação: Primeira Chamada
Chamada: java.util.NavigableMap.lastEntry()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet$AsSet.isPartialView() ************************
*Commit: commit 043e4f75cc56f564a0d0ca3345176e637de8469e 1352488562 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.isPartialView()
java.util.List.size()
java.util.List.size()
Chamada: com.google.common.collect.ImmutableCollection.isPartialView()
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Útil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet$AsSet.size() ************************
*Commit: commit 043e4f75cc56f564a0d0ca3345176e637de8469e 1352488562 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
java.util.Set.size()
com.google.common.primitives.Ints.saturatedCast(J)
java.lang.Integer.intValue()
Chamada: com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
Situação: Primeira Chamada
Chamada: java.util.Set.size()
Situação: Manual
Chamada: com.google.common.primitives.Ints.saturatedCast(J)
Situação: Manual
Chamada: java.lang.Integer.intValue()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet$AsSet.iterator() ************************
*Commit: commit 043e4f75cc56f564a0d0ca3345176e637de8469e 1352488562 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.iterator()
com.google.common.collect.Iterators.emptyIterator()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
com.google.common.collect.ImmutableSortedSet.iterator()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet.iterator()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.2333336024446068
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Iterator.next()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.375
Corretude: 0.42857142857142855
F-Measure: 0.39999999999999997
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet$AsSet.descendingIterator() ************************
*Commit: commit 043e4f75cc56f564a0d0ca3345176e637de8469e 1352488562 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.reverse()
com.google.common.collect.ImmutableList.iterator()
com.google.common.collect.Iterators.emptyIterator()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
com.google.common.collect.ImmutableSortedSet.descendingIterator()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
Chamada: com.google.common.collect.ImmutableList.reverse()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet.descendingIterator()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.2333336024446068
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Iterator.next()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.42857142857142855
F-Measure: 0.375
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet.intersectRanges(com.google.common.collect.Range) ************************
*Commit: commit 043e4f75cc56f564a0d0ca3345176e637de8469e 1352488562 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.isEmpty()
com.google.common.collect.Range.isEmpty()
com.google.common.collect.ImmutableList.of()
com.google.common.collect.ImmutableRangeSet.span()
com.google.common.collect.Range.encloses(com.google.common.collect.Range)
com.google.common.collect.Range.hasLowerBound()
upperBoundFn
com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
com.google.common.collect.Range.hasUpperBound()
lowerBoundFn
com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
java.util.List.size()
com.google.common.collect.ImmutableList.of()
com.google.common.base.Preconditions.checkElementIndex(I, I)
java.util.List.get(I)
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
java.util.List.get(I)
Chamada: com.google.common.collect.ImmutableCollection.isEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of()
Situação: Manual
Chamada: com.google.common.collect.ImmutableRangeSet.span()
Situação: Manual
Chamada: com.google.common.collect.Range.encloses(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Range.hasLowerBound()
Situação: Manual
Chamada: upperBoundFn
Situação: Manual
Chamada: com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
Situação: Manual
Chamada: com.google.common.collect.Range.hasUpperBound()
Situação: Manual
Chamada: lowerBoundFn
Situação: Manual
Chamada: com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkElementIndex(I, I)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.125
Corretude: 0.25
F-Measure: 0.16666666666666666
************************ Método Avaliado: com.google.common.collect.ImmutableRangeSet.asSet(com.google.common.collect.DiscreteDomain, com.google.common.collect.Range) ************************
*Commit: commit 043e4f75cc56f564a0d0ca3345176e637de8469e 1352488562 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.DiscreteDomain)
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
com.google.common.collect.ImmutableRangeSet.isEmpty()
com.google.common.collect.ImmutableSortedSet.of()
com.google.common.collect.ImmutableRangeSet.span()
com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
com.google.common.collect.ImmutableSortedSet.of()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.Range.canonical(com.google.common.collect.DiscreteDomain)
com.google.common.collect.Range.hasLowerBound()
com.google.common.collect.Range.hasUpperBound()
com.google.common.collect.DiscreteDomain.maxValue()
com.google.common.collect.ImmutableRangeSet.intersectRanges(com.google.common.collect.Range)
java.util.List.size()
com.google.common.collect.ImmutableSortedSet.of()
java.util.List.get(I)
com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.DiscreteDomain)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.ImmutableRangeSet.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet.of()
Situação: Manual
Chamada: com.google.common.collect.ImmutableRangeSet.span()
Situação: Manual
Chamada: com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet.of()
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Range.canonical(com.google.common.collect.DiscreteDomain)
Situação: Manual
Chamada: com.google.common.collect.Range.hasLowerBound()
Situação: Manual
Chamada: com.google.common.collect.Range.hasUpperBound()
Situação: Manual
Chamada: com.google.common.collect.DiscreteDomain.maxValue()
Situação: Manual
Chamada: com.google.common.collect.ImmutableRangeSet.intersectRanges(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet.of()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.Range.asSet(com.google.common.collect.DiscreteDomain)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: com.google.common.collect.Range.isEmpty()
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.0625
Corretude: 0.2
F-Measure: 0.09523809523809523
************************ Método Avaliado: com.google.common.hash.AbstractStreamingHashFunction.hashObject(com.google.common.hash.AbstractStreamingHashFunction$(Ljava/lang/Object;Lcom/google/common/hash/Funnel;)Lcom/google/common/hash/HashCode;$T, com.google.common.hash.Funnel) ************************
*Commit: commit a4bd0dd6fbcc7cd349ebd7c2ded2f5509f7d2ca6 1352489028 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.hash.HashFunction.newHasher()
com.google.common.hash.Hasher.putObject(com.google.common.hash.AbstractStreamingHashFunction$(Ljava/lang/Object;Lcom/google/common/hash/Funnel;)Lcom/google/common/hash/HashCode;$T, com.google.common.hash.Funnel)
com.google.common.hash.Hasher.hash()
Chamada: com.google.common.hash.HashFunction.newHasher()
Situação: Primeira Chamada
Chamada: com.google.common.hash.Hasher.putObject(com.google.common.hash.AbstractStreamingHashFunction$(Ljava/lang/Object;Lcom/google/common/hash/Funnel;)Lcom/google/common/hash/HashCode;$T, com.google.common.hash.Funnel)
Situação: Manual
Chamada: com.google.common.hash.Hasher.hash()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8181793161151112
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.hash.Hasher.hash()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
java.util.Collection.isEmpty()
java.util.Map.remove(java.lang.Object)
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
Situação: Primeira Chamada
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.AbstractMultimap(java.util.Map) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.isEmpty()
com.google.common.base.Preconditions.checkArgument(Z)
Chamada: java.util.Map.isEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.15000007568750748
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedSet.removeAll(java.util.Collection) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.isEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.size()
com.google.common.collect.Sets.removeAllImpl(java.util.Set, java.util.Collection)
java.util.Collection.size()
com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
Chamada: java.util.Collection.isEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.size()
Situação: Manual
Chamada: com.google.common.collect.Sets.removeAllImpl(java.util.Set, java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.15555573496307118
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Útil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.contains(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
java.util.Collection.contains(java.lang.Object)
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedSortedSet.last() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
java.util.SortedSet.last()
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
Situação: Manual
Chamada: java.util.SortedSet.last()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$EntryIterator.hasNext() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedSortedSet.headSet(com.google.common.collect.AbstractMultimap$V) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.getKey()
com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
java.util.SortedSet.headSet(com.google.common.collect.AbstractMultimap$V)
com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getKey()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
Situação: Manual
Chamada: java.util.SortedSet.headSet(com.google.common.collect.AbstractMultimap$V)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.removeAll(java.util.Collection) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.isEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.size()
java.util.Collection.removeAll(java.util.Collection)
java.util.Collection.size()
com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
Chamada: java.util.Collection.isEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.size()
Situação: Manual
Chamada: java.util.Collection.removeAll(java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.15555573496307118
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Útil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedList.add(I, com.google.common.collect.AbstractMultimap$V) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.getDelegate()
java.util.Collection.isEmpty()
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
java.util.List.add(I, com.google.common.collect.AbstractMultimap$V)
com.google.common.collect.AbstractMultimap$WrappedCollection.addToMap()
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getDelegate()
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.28000009687998023
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.add(I, com.google.common.collect.AbstractMultimap$V)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.addToMap()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Útil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.2
Corretude: 0.5
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.removeValuesForKey(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.remove(java.lang.Object)
java.util.Collection.size()
java.util.Collection.clear()
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: java.util.Collection.clear()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.14084582715038632
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.equals(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
java.util.Map.equals(java.lang.Object)
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Primeira Chamada
Chamada: java.util.Map.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$KeySet.containsAll(java.util.Collection) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.keySet()
java.util.Set.containsAll(java.util.Collection)
Chamada: java.util.Map.keySet()
Situação: Primeira Chamada
Chamada: java.util.Set.containsAll(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$EntryIterator.remove() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.remove()
java.util.Collection.isEmpty()
java.util.Iterator.remove()
Chamada: java.util.Iterator.remove()
Situação: Primeira Chamada
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.equals(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
java.util.Collection.equals(java.lang.Object)
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: java.util.Collection.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.clear() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.values()
java.util.Collection.clear()
java.util.Map.clear()
Chamada: java.util.Map.values()
Situação: Primeira Chamada
Chamada: java.util.Collection.clear()
Situação: Manual
Chamada: java.util.Map.clear()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.getDelegate()
java.util.Collection.isEmpty()
java.util.Map.get(java.lang.Object)
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getDelegate()
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$KeySet.iterator() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
com.google.common.collect.Iterators.checkRemove(Z)
java.util.Map$Entry.getValue()
java.util.Iterator.remove()
java.util.Collection.size()
java.util.Collection.clear()
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.521738787050712
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.17500037843811023
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: com.google.common.collect.Iterators.checkRemove(Z)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.8333358562540683
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: java.util.Collection.clear()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.14084582715038632
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Collection.clear()
Útil
Método: java.util.Set.iterator()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Collection.size()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.7777777777777778
Corretude: 0.7777777777777778
F-Measure: 0.7777777777777778
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedList.addAll(I, java.util.Collection) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.isEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.size()
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
java.util.List.addAll(I, java.util.Collection)
com.google.common.collect.AbstractMultimap$WrappedCollection.getDelegate()
java.util.Collection.size()
com.google.common.collect.AbstractMultimap$WrappedCollection.addToMap()
Chamada: java.util.Collection.isEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.size()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Situação: Manual
Chamada: java.util.List.addAll(I, java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getDelegate()
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.15555573496307118
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.addToMap()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.25
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.toString() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
java.lang.Object.toString()
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: java.lang.Object.toString()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.addAll(java.util.Collection) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.isEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.size()
java.util.Collection.addAll(java.util.Collection)
java.util.Collection.size()
com.google.common.collect.AbstractMultimap$WrappedCollection.addToMap()
Chamada: java.util.Collection.isEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.size()
Situação: Manual
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.15555573496307118
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.addToMap()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Útil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedSortedSet.subSet(com.google.common.collect.AbstractMultimap$V, com.google.common.collect.AbstractMultimap$V) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.getKey()
com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
java.util.SortedSet.subSet(com.google.common.collect.AbstractMultimap$V, com.google.common.collect.AbstractMultimap$V)
com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getKey()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
Situação: Manual
Chamada: java.util.SortedSet.subSet(com.google.common.collect.AbstractMultimap$V, com.google.common.collect.AbstractMultimap$V)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.setMap(java.util.Map) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.values()
java.util.Collection.isEmpty()
com.google.common.base.Preconditions.checkArgument(Z)
java.util.Collection.size()
Chamada: java.util.Map.values()
Situação: Primeira Chamada
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.15555573496307118
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.3333333333333333
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.putAll(com.google.common.collect.AbstractMultimap$K, java.lang.Iterable) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractMultimap.getOrCreateCollection(com.google.common.collect.AbstractMultimap$K)
java.util.Collection.size()
com.google.common.collect.Collections2.cast(java.lang.Iterable)
java.util.Collection.addAll(java.util.Collection)
java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
java.util.Collection.size()
Chamada: java.lang.Iterable.iterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.AbstractMultimap.getOrCreateCollection(com.google.common.collect.AbstractMultimap$K)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: com.google.common.collect.Collections2.cast(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Iterables.addAll(java.util.Collection, java.lang.Iterable)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.lang.Iterable.iterator()
Inútil
Método: java.util.Collection.size()
Útil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.25
F-Measure: 0.26666666666666666
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.put(com.google.common.collect.AbstractMultimap$K, com.google.common.collect.AbstractMultimap$V) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
com.google.common.collect.AbstractMultimap.createCollection(com.google.common.collect.AbstractMultimap$K)
java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
java.util.Map.put(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
Chamada: java.util.Map.get(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap.createCollection(com.google.common.collect.AbstractMultimap$K)
Situação: Manual
Chamada: java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.containsEntry(java.lang.Object, java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
java.util.Collection.contains(java.lang.Object)
Chamada: java.util.Map.get(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$KeySet.remove(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.remove(java.lang.Object)
java.util.Collection.size()
java.util.Collection.clear()
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: java.util.Collection.clear()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.14084582715038632
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.retainAll(java.util.Collection) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
com.google.common.collect.AbstractMultimap$WrappedCollection.size()
java.util.Collection.retainAll(java.util.Collection)
java.util.Collection.size()
com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.size()
Situação: Manual
Chamada: java.util.Collection.retainAll(java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.remove(java.lang.Object, java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
java.util.Collection.remove(java.lang.Object)
java.util.Collection.isEmpty()
java.util.Map.remove(java.lang.Object)
Chamada: java.util.Map.get(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Corretude/Utilidade dos Métodos
Método: java.util.Collection.remove(java.lang.Object)
Inútil
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Útil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$AsMap$AsMapEntries.remove(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$AsMap$AsMapEntries.contains(java.lang.Object)
java.util.Map$Entry.getKey()
com.google.common.collect.AbstractMultimap.removeValuesForKey(java.lang.Object)
Chamada: com.google.common.collect.AbstractMultimap$AsMap$AsMapEntries.contains(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap.removeValuesForKey(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.putAll(com.google.common.collect.Multimap) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.AbstractMultimap.put(com.google.common.collect.AbstractMultimap$K, com.google.common.collect.AbstractMultimap$V)
Chamada: com.google.common.collect.Multimap.entries()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.AbstractMultimap.put(com.google.common.collect.AbstractMultimap$K, com.google.common.collect.AbstractMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.4
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedList.set(I, com.google.common.collect.AbstractMultimap$V) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
java.util.List.set(I, com.google.common.collect.AbstractMultimap$V)
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.28000009687998023
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.set(I, com.google.common.collect.AbstractMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.get(com.google.common.collect.AbstractMultimap$K) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
com.google.common.collect.AbstractMultimap.createCollection(com.google.common.collect.AbstractMultimap$K)
com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Chamada: java.util.Map.get(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap.createCollection(com.google.common.collect.AbstractMultimap$K)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedList.subList(I, I) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.getKey()
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
java.util.List.subList(I, I)
com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
com.google.common.collect.AbstractMultimap.wrapList(com.google.common.collect.AbstractMultimap$K, java.util.List, com.google.common.collect.AbstractMultimap$WrappedCollection)
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getKey()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.28000009687998023
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.subList(I, I)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap.wrapList(com.google.common.collect.AbstractMultimap$K, java.util.List, com.google.common.collect.AbstractMultimap$WrappedCollection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 1.0
F-Measure: 0.2857142857142857
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedList.indexOf(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
java.util.List.indexOf(java.lang.Object)
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.28000009687998023
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.indexOf(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$EntryIterator.EntryIterator() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractMultimap$EntryIterator.findValueIteratorAndKey()
com.google.common.collect.Iterators.emptyModifiableIterator()
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.521738787050712
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.AbstractMultimap$EntryIterator.findValueIteratorAndKey()
Situação: Manual
Chamada: com.google.common.collect.Iterators.emptyModifiableIterator()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedList.get(I) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
java.util.List.get(I)
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.28000009687998023
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.get(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$AsMap$AsMapEntries.contains(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.collect.Collections2.safeContains(java.util.Collection, java.lang.Object)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.safeContains(java.util.Collection, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.size() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
java.util.Collection.size()
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: java.util.Collection.size()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator.next() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Chamada: java.util.Iterator.next()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.16203711490482997
Suporte: 0.00578035
F-Measure Suporte e Confiança: 0.012
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.18518515403806798
Suporte: 0.00660611
F-Measure Suporte e Confiança: 0.013
Chamada: com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.hashCode() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
java.util.Collection.hashCode()
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: java.util.Collection.hashCode()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.getOrCreateCollection(com.google.common.collect.AbstractMultimap$K) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
com.google.common.collect.AbstractMultimap.createCollection(com.google.common.collect.AbstractMultimap$K)
java.util.Map.put(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Chamada: java.util.Map.get(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap.createCollection(com.google.common.collect.AbstractMultimap$K)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedSortedSet.first() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
java.util.SortedSet.first()
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
Situação: Manual
Chamada: java.util.SortedSet.first()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.removeAll(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.remove(java.lang.Object)
com.google.common.collect.AbstractMultimap.createUnmodifiableEmptyCollection()
com.google.common.collect.AbstractMultimap.createCollection()
java.util.Collection.addAll(java.util.Collection)
java.util.Collection.size()
java.util.Collection.clear()
com.google.common.collect.AbstractMultimap.unmodifiableCollectionSubclass(java.util.Collection)
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap.createUnmodifiableEmptyCollection()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap.createCollection()
Situação: Manual
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: java.util.Collection.clear()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.14084582715038632
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.AbstractMultimap.unmodifiableCollectionSubclass(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.25
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$KeySet.hashCode() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.keySet()
java.util.Set.hashCode()
Chamada: java.util.Map.keySet()
Situação: Primeira Chamada
Chamada: java.util.Set.hashCode()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.replaceValues(com.google.common.collect.AbstractMultimap$K, java.lang.Iterable) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractMultimap.removeAll(java.lang.Object)
com.google.common.collect.AbstractMultimap.getOrCreateCollection(com.google.common.collect.AbstractMultimap$K)
com.google.common.collect.AbstractMultimap.createCollection()
java.util.Collection.addAll(java.util.Collection)
java.util.Collection.size()
java.util.Collection.clear()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
com.google.common.collect.AbstractMultimap.unmodifiableCollectionSubclass(java.util.Collection)
Chamada: java.lang.Iterable.iterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.AbstractMultimap.removeAll(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap.getOrCreateCollection(com.google.common.collect.AbstractMultimap$K)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap.createCollection()
Situação: Manual
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: java.util.Collection.clear()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.14084582715038632
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.304348283932384
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap.unmodifiableCollectionSubclass(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Collection.clear()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.36363636363636365
Corretude: 0.5
F-Measure: 0.4210526315789474
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedList.remove(I) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
java.util.List.remove(I)
com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.28000009687998023
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.remove(I)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedList.lastIndexOf(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
java.util.List.lastIndexOf(java.lang.Object)
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.28000009687998023
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.lastIndexOf(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$AsMap.remove(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.remove(java.lang.Object)
com.google.common.collect.AbstractMultimap.createCollection()
java.util.Collection.addAll(java.util.Collection)
java.util.Collection.size()
java.util.Collection.clear()
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap.createCollection()
Situação: Manual
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: java.util.Collection.clear()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.14084582715038632
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator.remove() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.remove()
java.util.Collection.size()
java.util.Collection.clear()
Chamada: java.util.Iterator.remove()
Situação: Primeira Chamada
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: java.util.Collection.clear()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.14084582715038632
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.add(com.google.common.collect.AbstractMultimap$V) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
java.util.Collection.isEmpty()
java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
com.google.common.collect.AbstractMultimap$WrappedCollection.addToMap()
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: java.util.Collection.add(com.google.common.collect.AbstractMultimap$V)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.addToMap()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$EntryIterator.next() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
com.google.common.collect.AbstractMultimap$EntryIterator.findValueIteratorAndKey()
java.util.Iterator.next()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, com.google.common.collect.AbstractMultimap$V)
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$EntryIterator.findValueIteratorAndKey()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, com.google.common.collect.AbstractMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$KeySet.equals(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.keySet()
java.util.Set.equals(java.lang.Object)
Chamada: java.util.Map.keySet()
Situação: Primeira Chamada
Chamada: java.util.Set.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.containsValue(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.values()
java.util.Collection.contains(java.lang.Object)
Chamada: java.util.Map.values()
Situação: Primeira Chamada
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedSortedSet.tailSet(com.google.common.collect.AbstractMultimap$V) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
com.google.common.collect.AbstractMultimap$WrappedCollection.getKey()
com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
java.util.SortedSet.tailSet(com.google.common.collect.AbstractMultimap$V)
com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getKey()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedSortedSet.getSortedSetDelegate()
Situação: Manual
Chamada: java.util.SortedSet.tailSet(com.google.common.collect.AbstractMultimap$V)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.getAncestor()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$EntryIterator.findValueIteratorAndKey() ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Collection.iterator()
Chamada: java.util.Iterator.next()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.16203711490482997
Suporte: 0.00578035
F-Measure Suporte e Confiança: 0.012
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.18518515403806798
Suporte: 0.00660611
F-Measure Suporte e Confiança: 0.013
Chamada: java.util.Collection.iterator()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.4444444444444444
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.remove(java.lang.Object) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
java.util.Collection.remove(java.lang.Object)
com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.removeIfEmpty()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.remove(java.lang.Object)
Inútil
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$WrappedCollection.containsAll(java.util.Collection) ************************
*Commit: commit f5d4b63ffdf51ec455aab8bc2e96b95378e9fc0d 1352489032 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
java.util.Collection.containsAll(java.util.Collection)
Chamada: com.google.common.collect.AbstractMultimap$WrappedCollection.refreshIfEmpty()
Situação: Primeira Chamada
Chamada: java.util.Collection.containsAll(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.AbstractMultimap$WrappedList.getListDelegate()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$AsMap.wrapEntry(java.util.Map$Entry) ************************
*Commit: commit 6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Chamada: java.util.Map$Entry.getKey()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.2
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$NavigableAsMap.pollFirstEntry() ************************
*Commit: commit 6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$AsMap.entrySet()
java.util.Set.iterator()
com.google.common.collect.AbstractMultimap$NavigableAsMap.pollAsMapEntry(java.util.Iterator)
Chamada: com.google.common.collect.AbstractMultimap$AsMap.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$NavigableAsMap.pollAsMapEntry(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$AsMap.wrapEntry(java.util.Map$Entry) ************************
*Commit: commit 6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Chamada: java.util.Map$Entry.getKey()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.AbstractMultimap.wrapCollection(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.2
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$NavigableAsMap.pollAsMapEntry(java.util.Iterator) ************************
*Commit: commit 6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.AbstractMultimap.createCollection()
java.util.Map$Entry.getValue()
java.util.Collection.addAll(java.util.Collection)
java.util.Iterator.remove()
java.util.Map$Entry.getKey()
com.google.common.collect.AbstractMultimap.unmodifiableCollectionSubclass(java.util.Collection)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.collect.AbstractMultimap.createCollection()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.15075368016211577
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2666663975553932
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.AbstractMultimap.unmodifiableCollectionSubclass(java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.AbstractMultimap$K, java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.8
F-Measure: 0.6153846153846154
************************ Método Avaliado: com.google.common.collect.AbstractMultimap$NavigableAsMap.pollLastEntry() ************************
*Commit: commit 6b3d0ce887848832ccc7a1c6f8a37f80fef45ffd 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap$NavigableAsMap.descendingMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
com.google.common.collect.AbstractMultimap$NavigableAsMap.pollAsMapEntry(java.util.Iterator)
Chamada: com.google.common.collect.AbstractMultimap$NavigableAsMap.descendingMap()
Situação: Primeira Chamada
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap$NavigableAsMap.pollAsMapEntry(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableBiMap.fromEntries(java.util.Collection) ************************
*Commit: commit c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.size()
com.google.common.collect.ImmutableBiMap.of()
com.google.common.collect.Iterables.getOnlyElement(java.lang.Iterable)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Chamada: java.util.Collection.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableBiMap.of()
Situação: Manual
Chamada: com.google.common.collect.Iterables.getOnlyElement(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 0.14285714285714285
F-Measure: 0.18181818181818182
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet.createAsList() ************************
*Commit: commit c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getValue()
java.util.Map$Entry.getKey()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
Chamada: java.util.Map$Entry.getValue()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1256544784778184
Suporte: 0.00396367
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.16666666666666666
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse.get(java.lang.Object) ************************
*Commit: commit c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInVToKBucket()
com.google.common.collect.ImmutableEntry.getValue()
java.lang.Object.equals(java.lang.Object)
com.google.common.collect.ImmutableEntry.getKey()
Chamada: java.lang.Object.hashCode()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInVToKBucket()
Situação: Manual
Chamada: com.google.common.collect.ImmutableEntry.getValue()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.ImmutableEntry.getKey()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Método: java.lang.Object.hashCode()
Inútil
Método: com.google.common.collect.Hashing.smear(I)
Útil
Percentual de Automatização: 0.2
Corretude: 0.3333333333333333
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap.createEntrySet() ************************
*Commit: commit c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap.RegularImmutableBiMap(java.util.Collection) ************************
*Commit: commit c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.size()
com.google.common.collect.RegularImmutableMap.chooseTableSize(I)
com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
java.util.Map$Entry.getKey()
com.google.common.base.Preconditions.checkNotNull(null)
java.util.Map$Entry.getValue()
com.google.common.base.Preconditions.checkNotNull(null)
java.lang.Object.hashCode()
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInKToVBucket()
com.google.common.collect.ImmutableEntry.getKey()
java.lang.Object.equals(java.lang.Object)
com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInVToKBucket()
com.google.common.collect.ImmutableEntry.getValue()
java.lang.Object.equals(java.lang.Object)
Chamada: java.util.Collection.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.RegularImmutableMap.chooseTableSize(I)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull(null)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.base.Preconditions.checkNotNull(null)
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInKToVBucket()
Situação: Manual
Chamada: com.google.common.collect.ImmutableEntry.getKey()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInVToKBucket()
Situação: Manual
Chamada: com.google.common.collect.ImmutableEntry.getValue()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.13793081848988292
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.lang.Object.equals(java.lang.Object)
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.clear()
Inútil
Método: java.lang.Object.hashCode()
Útil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Método: com.google.common.collect.Hashing.smear(I)
Útil
Percentual de Automatização: 0.2222222222222222
Corretude: 0.3333333333333333
F-Measure: 0.26666666666666666
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet.iterator() ************************
*Commit: commit c0f9bd6b376d6c4c7a2128c3a38a54345d0c663b 1352489033 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.io.BaseEncoding$SeparatedBaseEncoding.SeparatedBaseEncoding(com.google.common.io.BaseEncoding, java.lang.String, I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.BaseEncoding)
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
com.google.common.base.CharMatcher.precomputed()
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.io.BaseEncoding)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.precomputed()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.StandardBaseEncoding(java.lang.String, java.lang.Character) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.length()
com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
java.lang.String.length()
java.lang.Integer.lowestOneBit(I)
java.lang.Math.min(I, I)
java.lang.String.length()
java.lang.Character.charValue()
java.lang.String.indexOf(I)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
java.util.Arrays.fill([B, B)
java.lang.String.length()
java.lang.String.charAt(I)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.17647002952703322
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Integer.lowestOneBit(I)
Situação: Manual
Chamada: java.lang.Math.min(I, I)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Character.charValue()
Situação: Manual
Chamada: java.lang.String.indexOf(I)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Situação: Manual
Chamada: java.util.Arrays.fill([B, B)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.38461538461538464
Corretude: 0.2857142857142857
F-Measure: 0.32786885245901637
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.withSeparator(java.lang.String, I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
com.google.common.base.CharMatcher.or(com.google.common.base.CharMatcher)
com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.io.BaseEncoding$StandardBaseEncoding.paddingMatcher()
Situação: Manual
Chamada: com.google.common.base.CharMatcher.anyOf(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.or(com.google.common.base.CharMatcher)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: separatingOutput ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkArgument(Z)
java.lang.String.length()
java.lang.String.charAt(I)
write
write
flush
close
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.17647002952703322
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: write
Situação: Manual
Chamada: write
Situação: Manual
Chamada: flush
Situação: Manual
Chamada: close
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.25
Corretude: 0.2857142857142857
F-Measure: 0.26666666666666666
************************ Método Avaliado: com.google.common.io.BaseEncoding.encode([B, I, I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull([B)
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.io.BaseEncoding.maxEncodedSize(I)
stringBuilderOutput
encodingStream
write
close
toString
Chamada: com.google.common.base.Preconditions.checkNotNull([B)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Manual
Chamada: com.google.common.io.BaseEncoding.maxEncodedSize(I)
Situação: Manual
Chamada: stringBuilderOutput
Situação: Manual
Chamada: encodingStream
Situação: Manual
Chamada: write
Situação: Manual
Chamada: close
Situação: Manual
Chamada: toString
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding.decode(java.lang.CharSequence) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asCharInput
decodingStream
java.lang.CharSequence.length()
com.google.common.io.BaseEncoding.maxDecodedSize(I)
read
read
com.google.common.io.BaseEncoding.extract([B, I)
Chamada: asCharInput
Situação: Primeira Chamada
Chamada: decodingStream
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.io.BaseEncoding.maxDecodedSize(I)
Situação: Manual
Chamada: read
Situação: Manual
Chamada: read
Situação: Manual
Chamada: com.google.common.io.BaseEncoding.extract([B, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: ignoringInput ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.CharMatcher)
read
com.google.common.base.CharMatcher.matches(C)
close
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.CharMatcher)
Situação: Manual
Chamada: read
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matches(C)
Situação: Manual
Chamada: close
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$SeparatedBaseEncoding.maxEncodedSize(I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding.maxEncodedSize(I)
java.lang.String.length()
java.lang.Math.max(I, I)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Chamada: com.google.common.io.BaseEncoding.maxEncodedSize(I)
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.Math.max(I, I)
Situação: Manual
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.GwtWorkarounds.asCharInput(java.lang.CharSequence) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.length()
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.CharSequence.length()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.3333333333333333
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.io.GwtWorkarounds.stringBuilderOutput(I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.StringBuilder.append(C)
Situação: Primeira Chamada
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 1.0
Corretude: 0.3333333333333333
F-Measure: 0.5
************************ Método Avaliado: separatingOutput ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkArgument(Z)
java.lang.String.length()
java.lang.String.charAt(I)
write
write
flush
close
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.17647002952703322
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: write
Situação: Manual
Chamada: write
Situação: Manual
Chamada: flush
Situação: Manual
Chamada: close
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.25
Corretude: 0.2857142857142857
F-Measure: 0.26666666666666666
************************ Método Avaliado: com.google.common.io.BaseEncoding.encode([B, I, I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull([B)
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.io.BaseEncoding.maxEncodedSize(I)
stringBuilderOutput
com.google.common.io.BaseEncoding.encodingStream(java.io.Writer)
write
close
toString
Chamada: com.google.common.base.Preconditions.checkNotNull([B)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Manual
Chamada: com.google.common.io.BaseEncoding.maxEncodedSize(I)
Situação: Manual
Chamada: stringBuilderOutput
Situação: Manual
Chamada: com.google.common.io.BaseEncoding.encodingStream(java.io.Writer)
Situação: Manual
Chamada: write
Situação: Manual
Chamada: close
Situação: Manual
Chamada: toString
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding.decode(java.lang.CharSequence) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asCharInput
com.google.common.io.BaseEncoding.decodingStream(java.io.Reader)
java.lang.CharSequence.length()
com.google.common.io.BaseEncoding.maxDecodedSize(I)
read
read
com.google.common.io.BaseEncoding.extract([B, I)
Chamada: asCharInput
Situação: Primeira Chamada
Chamada: com.google.common.io.BaseEncoding.decodingStream(java.io.Reader)
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.io.BaseEncoding.maxDecodedSize(I)
Situação: Manual
Chamada: read
Situação: Manual
Chamada: read
Situação: Manual
Chamada: com.google.common.io.BaseEncoding.extract([B, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: ignoringInput ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.CharMatcher)
read
com.google.common.base.CharMatcher.matches(C)
close
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.CharMatcher)
Situação: Manual
Chamada: read
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matches(C)
Situação: Manual
Chamada: close
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding.decodingStream(com.google.common.io.InputSupplier) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.InputSupplier)
com.google.common.io.InputSupplier.getInput()
com.google.common.io.BaseEncoding.decodingStream(java.io.Reader)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.io.InputSupplier)
Situação: Primeira Chamada
Chamada: com.google.common.io.InputSupplier.getInput()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.750001513752441
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.io.BaseEncoding.decodingStream(java.io.Reader)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.io.Closeables.close(java.io.Closeable, Z)
Inútil
Método: com.google.common.io.InputSupplier.getInput()
Útil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: com.google.common.io.BaseEncoding$SeparatedBaseEncoding.maxEncodedSize(I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding.maxEncodedSize(I)
java.lang.String.length()
java.lang.Math.max(I, I)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Chamada: com.google.common.io.BaseEncoding.maxEncodedSize(I)
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.Math.max(I, I)
Situação: Manual
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.GwtWorkarounds.asInputStream(com.google.common.io.GwtWorkarounds$ByteInput) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.GwtWorkarounds$ByteInput)
com.google.common.io.GwtWorkarounds$ByteInput.read()
com.google.common.base.Preconditions.checkNotNull([B)
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.io.GwtWorkarounds$3.read()
com.google.common.io.GwtWorkarounds$3.read()
com.google.common.io.GwtWorkarounds$ByteInput.close()
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.io.GwtWorkarounds$ByteInput)
Situação: Primeira Chamada
Chamada: com.google.common.io.GwtWorkarounds$ByteInput.read()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull([B)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Manual
Chamada: com.google.common.io.GwtWorkarounds$3.read()
Situação: Manual
Chamada: com.google.common.io.GwtWorkarounds$3.read()
Situação: Manual
Chamada: com.google.common.io.GwtWorkarounds$ByteInput.close()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.GwtWorkarounds.asCharInput(java.lang.CharSequence) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.length()
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.CharSequence.length()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.3333333333333333
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.io.GwtWorkarounds.stringBuilderOutput(I) ************************
*Commit: commit 91634b6c9c2d65eae7bdd3928c884e58b86393f7 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.StringBuilder.append(C)
Situação: Primeira Chamada
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 1.0
Corretude: 0.3333333333333333
F-Measure: 0.5
************************ Método Avaliado: com.google.common.base.CharMatcher$RangesMatcher.RangesMatcher(java.lang.String, [C, [C) ************************
*Commit: commit fd40e3a91e6ef695a5d9db92a386842354b7cfca 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z)
com.google.common.base.Preconditions.checkArgument(Z)
com.google.common.base.Preconditions.checkArgument(Z)
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.061855765989587884
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.061855765989587884
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z)
Útil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.base.CharMatcher$RangesMatcher.RangesMatcher(java.lang.String, [C, [C) ************************
*Commit: commit fd40e3a91e6ef695a5d9db92a386842354b7cfca 1352489034 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z)
com.google.common.base.Preconditions.checkArgument(Z)
com.google.common.base.Preconditions.checkArgument(Z)
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.061855765989587884
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.061855765989587884
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z)
Útil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.Maps.filterSortedIgnoreNavigable(java.util.SortedMap, com.google.common.base.Predicate) ************************
*Commit: commit 017a5145ed8eaeac92ce997c679061b129f06ef4 1352489036 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
com.google.common.collect.Maps.filterFiltered(com.google.common.collect.Maps$FilteredEntrySortedMap, com.google.common.base.Predicate)
com.google.common.base.Preconditions.checkNotNull(java.util.SortedMap)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.filterFiltered(com.google.common.collect.Maps$FilteredEntrySortedMap, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.SortedMap)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Predicate.apply(null)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps.filterEntries(java.util.NavigableMap, com.google.common.base.Predicate) ************************
*Commit: commit 017a5145ed8eaeac92ce997c679061b129f06ef4 1352489036 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
com.google.common.collect.Maps.filterFiltered(com.google.common.collect.Maps$FilteredEntryNavigableMap, com.google.common.base.Predicate)
com.google.common.base.Preconditions.checkNotNull(java.util.NavigableMap)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.filterFiltered(com.google.common.collect.Maps$FilteredEntryNavigableMap, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.NavigableMap)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Predicate.apply(null)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps.filterSortedIgnoreNavigable(java.util.SortedMap, com.google.common.base.Predicate) ************************
*Commit: commit 017a5145ed8eaeac92ce997c679061b129f06ef4 1352489036 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
com.google.common.collect.Maps.filterFiltered(com.google.common.collect.Maps$FilteredEntrySortedMap, com.google.common.base.Predicate)
com.google.common.base.Preconditions.checkNotNull(java.util.SortedMap)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.filterFiltered(com.google.common.collect.Maps$FilteredEntrySortedMap, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.SortedMap)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Predicate.apply(null)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryNavigableMap.pollFirstSatisfyingEntry(java.util.Iterator) ************************
*Commit: commit 017a5145ed8eaeac92ce997c679061b129f06ef4 1352489036 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.4
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryNavigableMap.pollFirstEntry() ************************
*Commit: commit 017a5145ed8eaeac92ce997c679061b129f06ef4 1352489036 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
com.google.common.collect.Maps$FilteredEntryNavigableMap.pollFirstSatisfyingEntry(java.util.Iterator)
Chamada: com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
Situação: Primeira Chamada
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.Maps$FilteredEntryNavigableMap.pollFirstSatisfyingEntry(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryNavigableMap.pollLastEntry() ************************
*Commit: commit 017a5145ed8eaeac92ce997c679061b129f06ef4 1352489036 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
java.util.NavigableMap.descendingMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
com.google.common.collect.Maps$FilteredEntryNavigableMap.pollFirstSatisfyingEntry(java.util.Iterator)
Chamada: com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
Situação: Primeira Chamada
Chamada: java.util.NavigableMap.descendingMap()
Situação: Manual
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.Maps$FilteredEntryNavigableMap.pollFirstSatisfyingEntry(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryNavigableMap.createKeySet() ************************
*Commit: commit 017a5145ed8eaeac92ce997c679061b129f06ef4 1352489036 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Collection.contains(java.lang.Object)
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Collection.contains(java.lang.Object)
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
Chamada: com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
Situação: Primeira Chamada
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.4516133652794417
Suporte: 0.00693642
F-Measure Suporte e Confiança: 0.014
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.526882259492682
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.24731170894317414
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.Maps$FilteredEntryNavigableMap.sortedMap()
Situação: Manual
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.4516133652794417
Suporte: 0.00693642
F-Measure Suporte e Confiança: 0.014
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.526882259492682
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.13636372393597113
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.24731170894317414
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Collection.contains(java.lang.Object)
Útil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.4117647058823529
Corretude: 0.6666666666666666
F-Measure: 0.509090909090909
************************ Método Avaliado: com.google.common.io.ByteSource$SlicedByteSource.SlicedByteSource(J, J) ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2342335806240454
Suporte: 0.00429397
F-Measure Suporte e Confiança: 0.009
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: com.google.common.io.ByteSource.countBySkipping(java.io.InputStream) ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.io.InputStream.available()
java.lang.Math.min(I, I)
java.io.InputStream.skip(J)
java.io.InputStream.read()
Chamada: java.io.InputStream.available()
Situação: Primeira Chamada
Chamada: java.lang.Math.min(I, I)
Situação: Manual
Chamada: java.io.InputStream.skip(J)
Situação: Manual
Chamada: java.io.InputStream.read()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.ByteSource$SlicedByteSource.slice(J, J) ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.Math.min(J, J)
com.google.common.io.ByteSource.slice(J, J)
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2342335806240454
Suporte: 0.00429397
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.Math.min(J, J)
Situação: Manual
Chamada: com.google.common.io.ByteSource.slice(J, J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.io.ByteSource.hash(com.google.common.hash.HashFunction) ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.hash.HashFunction.newHasher()
com.google.common.hash.Funnels.asOutputStream(com.google.common.hash.PrimitiveSink)
com.google.common.io.ByteSource.copyTo(java.io.OutputStream)
com.google.common.hash.Hasher.hash()
Chamada: com.google.common.hash.HashFunction.newHasher()
Situação: Primeira Chamada
Chamada: com.google.common.hash.Funnels.asOutputStream(com.google.common.hash.PrimitiveSink)
Situação: Manual
Chamada: com.google.common.io.ByteSource.copyTo(java.io.OutputStream)
Situação: Manual
Chamada: com.google.common.hash.Hasher.hash()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8181793161151112
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.hash.Hasher.hash()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.io.CharSink.writeLines(java.lang.Iterable, java.lang.String) ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.Iterable)
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
create
com.google.common.io.CharSink.openBufferedStream()
add
java.io.Writer.append(java.lang.CharSequence)
java.io.Writer.append(java.lang.CharSequence)
rethrow
close
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.Iterable)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Manual
Chamada: create
Situação: Manual
Chamada: com.google.common.io.CharSink.openBufferedStream()
Situação: Manual
Chamada: add
Situação: Manual
Chamada: java.io.Writer.append(java.lang.CharSequence)
Situação: Manual
Chamada: java.io.Writer.append(java.lang.CharSequence)
Situação: Manual
Chamada: rethrow
Situação: Manual
Chamada: close
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.Iterable.iterator()
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.CharStreams$StringCharSource.lines() ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.split(java.lang.CharSequence)
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.lang.String.isEmpty()
com.google.common.collect.AbstractIterator.endOfData()
Chamada: com.google.common.base.Splitter.split(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.304348283932384
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.String.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.5
Corretude: 0.6666666666666666
F-Measure: 0.5714285714285715
************************ Método Avaliado: com.google.common.io.CharStreams$StringCharSource.readFirstLine() ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.CharStreams$StringCharSource.lines()
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Chamada: com.google.common.io.CharStreams$StringCharSource.lines()
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 1.0
F-Measure: 0.8
************************ Método Avaliado: com.google.common.io.CharStreams$StringCharSource.toString() ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.substring(I, I)
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: java.lang.String.substring(I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: FileByteSink ************************
*Commit: commit c61612cdab133e819a311f488f4df5b732d22631 1352497164 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.io.File)
com.google.common.collect.ImmutableSet.copyOf([Ljava.lang.Object;)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.io.File)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.copyOf([Ljava.lang.Object;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.io.Files.newInputStreamSupplier(java.io.File)
Inútil
Método: com.google.common.base.Preconditions.checkNotNull(java.nio.charset.Charset)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.lowerCase() ************************
*Commit: commit 54ce130a2f1438cd94277d72e5deed843115def5 1353000833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
com.google.common.base.Ascii.toLowerCase(C)
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
Situação: Primeira Chamada
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Ascii.toLowerCase(C)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.Alphabet([C) ************************
*Commit: commit 54ce130a2f1438cd94277d72e5deed843115def5 1353000833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull([C)
com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
java.lang.Integer.lowestOneBit(I)
java.lang.Math.min(I, I)
java.util.Arrays.fill([B, B)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Chamada: com.google.common.base.Preconditions.checkNotNull([C)
Situação: Primeira Chamada
Chamada: com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
Situação: Manual
Chamada: java.lang.Integer.lowestOneBit(I)
Situação: Manual
Chamada: java.lang.Math.min(I, I)
Situação: Manual
Chamada: java.util.Arrays.fill([B, B)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.upperCase() ************************
*Commit: commit 54ce130a2f1438cd94277d72e5deed843115def5 1353000833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
com.google.common.base.Ascii.toUpperCase(C)
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
Situação: Primeira Chamada
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Ascii.toUpperCase(C)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.Alphabet([C) ************************
*Commit: commit 54ce130a2f1438cd94277d72e5deed843115def5 1353000833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull([C)
com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
java.lang.Integer.lowestOneBit(I)
java.lang.Math.min(I, I)
java.util.Arrays.fill([B, B)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Chamada: com.google.common.base.Preconditions.checkNotNull([C)
Situação: Primeira Chamada
Chamada: com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
Situação: Manual
Chamada: java.lang.Integer.lowestOneBit(I)
Situação: Manual
Chamada: java.lang.Math.min(I, I)
Situação: Manual
Chamada: java.util.Arrays.fill([B, B)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.lowerCase() ************************
*Commit: commit 54ce130a2f1438cd94277d72e5deed843115def5 1353000833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
com.google.common.base.Ascii.toLowerCase(C)
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
Situação: Primeira Chamada
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Ascii.toLowerCase(C)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.upperCase() ************************
*Commit: commit 54ce130a2f1438cd94277d72e5deed843115def5 1353000833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
com.google.common.base.Ascii.toUpperCase(C)
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasLowerCase()
Situação: Primeira Chamada
Chamada: com.google.common.io.BaseEncoding$Alphabet.hasUpperCase()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Ascii.toUpperCase(C)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.Alphabet(java.lang.String, [C) ************************
*Commit: commit da4ca2f9535ccf93454ad7dc75165651f1c7e2c6 1353009804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkNotNull([C)
com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
java.lang.Integer.lowestOneBit(I)
java.lang.Math.min(I, I)
java.util.Arrays.fill([B, B)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull([C)
Situação: Manual
Chamada: com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
Situação: Manual
Chamada: java.lang.Integer.lowestOneBit(I)
Situação: Manual
Chamada: java.lang.Math.min(I, I)
Situação: Manual
Chamada: java.util.Arrays.fill([B, B)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.toString() ************************
*Commit: commit da4ca2f9535ccf93454ad7dc75165651f1c7e2c6 1353009804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.toString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: com.google.common.io.BaseEncoding$Alphabet.toString()
Situação: Primeira Chamada
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.3863641367769778
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5882355036329961
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.StringBuilder.append(java.lang.Object)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5227268974172666
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090910341942444
Suporte: 0.00660611
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Útil
Método: java.lang.StringBuilder.append(java.lang.String)
Útil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 1.0
F-Measure: 0.8
************************ Método Avaliado: com.google.common.io.BaseEncoding$Alphabet.Alphabet(java.lang.String, [C) ************************
*Commit: commit da4ca2f9535ccf93454ad7dc75165651f1c7e2c6 1353009804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkNotNull([C)
com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
java.lang.Integer.lowestOneBit(I)
java.lang.Math.min(I, I)
java.util.Arrays.fill([B, B)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull([C)
Situação: Manual
Chamada: com.google.common.math.IntMath.log2(I, java.math.RoundingMode)
Situação: Manual
Chamada: java.lang.Integer.lowestOneBit(I)
Situação: Manual
Chamada: java.lang.Math.min(I, I)
Situação: Manual
Chamada: java.util.Arrays.fill([B, B)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.math.IntMath.divide(I, I, java.math.RoundingMode)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding$StandardBaseEncoding.toString() ************************
*Commit: commit da4ca2f9535ccf93454ad7dc75165651f1c7e2c6 1353009804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding$Alphabet.toString()
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: com.google.common.io.BaseEncoding$Alphabet.toString()
Situação: Primeira Chamada
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.3863641367769778
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5882355036329961
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.StringBuilder.append(java.lang.Object)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5227268974172666
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090910341942444
Suporte: 0.00660611
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Útil
Método: java.lang.StringBuilder.append(java.lang.String)
Útil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 1.0
F-Measure: 0.8
************************ Método Avaliado: com.google.common.primitives.Longs.tryParse(java.lang.String) ************************
*Commit: commit 4fa056813cc1db3c594f0d0d8560d65c63c81b7d 1353009812 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.isEmpty()
java.lang.String.charAt(I)
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.String.length()
java.lang.String.charAt(I)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.String.isEmpty()
Situação: Manual
Chamada: java.lang.String.charAt(I)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.17647002952703322
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.4
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap.entryIterator() ************************
*Commit: commit 5b96fd5a6377e0d0a01b2f2da39196882043e62c 1353009813 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableCollection.iterator()
java.util.Iterator.next()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.750001513752441
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8750018921905511
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5624990539047245
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableCollection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableSet.iterator()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6
Corretude: 0.5
F-Measure: 0.5454545454545454
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap.entryIterator() ************************
*Commit: commit 5b96fd5a6377e0d0a01b2f2da39196882043e62c 1353009813 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableCollection.iterator()
java.util.Iterator.next()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.750001513752441
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8750018921905511
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5624990539047245
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableCollection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableSet.iterator()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6
Corretude: 0.5
F-Measure: 0.5454545454545454
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.createElementSet() ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.add(com.google.common.collect.Multisets$FilteredMultiset$E, I) ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Predicate.apply(null)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.Multiset.add(com.google.common.collect.Multisets$FilteredMultiset$E, I)
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(com.google.common.collect.Multisets$FilteredMultiset$E, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.count(java.lang.Object) ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.base.Predicate.apply(null)
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.removeAll(java.util.Collection) ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.elementSet()
java.util.Set.removeAll(java.util.Collection)
Chamada: com.google.common.collect.AbstractMultiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Set.removeAll(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.FilteredMultiset(com.google.common.collect.Multiset, com.google.common.base.Predicate) ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multiset)
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multiset)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multiset.entrySet()
Inútil
Método: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multiset)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.retainAll(java.util.Collection) ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.elementSet()
java.util.Set.retainAll(java.util.Collection)
Chamada: com.google.common.collect.AbstractMultiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Set.retainAll(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.distinctElements() ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.elementSet()
java.util.Set.size()
Chamada: com.google.common.collect.AbstractMultiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.createEntrySet() ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.base.Predicate.apply(null)
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6451616683659717
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Útil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.collect.Multisets$FilteredMultiset.clear() ************************
*Commit: commit a45095a38959a46331f3bdcb18ec37fec835e4f4 1353009854 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.elementSet()
java.util.Set.clear()
Chamada: com.google.common.collect.AbstractMultiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Set.clear()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.createValues() ************************
*Commit: commit 1d10f562e30a1d314ced9d3bdf510891878baad5 1353526254 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
com.google.common.collect.Collections2.transform(java.util.Collection, com.google.common.base.Function)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Chamada: com.google.common.collect.Multimap.entries()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.transform(java.util.Collection, com.google.common.base.Function)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.05586608619762332
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.75
Corretude: 1.0
F-Measure: 0.8571428571428571
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.entryIterator() ************************
*Commit: commit 1d10f562e30a1d314ced9d3bdf510891878baad5 1353526254 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Chamada: com.google.common.collect.Multimap.entries()
Situação: Primeira Chamada
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.05586608619762332
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.5
F-Measure: 0.5714285714285715
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.createAsMap() ************************
*Commit: commit 1d10f562e30a1d314ced9d3bdf510891878baad5 1353526254 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
com.google.common.collect.Maps.transformEntries(java.util.Map, com.google.common.collect.Maps$EntryTransformer)
com.google.common.collect.Multimaps$TransformedEntriesMultimap.transform(com.google.common.collect.Multimaps$TransformedEntriesMultimap$K, java.util.Collection)
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.transformEntries(java.util.Map, com.google.common.collect.Maps$EntryTransformer)
Situação: Manual
Chamada: com.google.common.collect.Multimaps$TransformedEntriesMultimap.transform(com.google.common.collect.Multimaps$TransformedEntriesMultimap$K, java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.createValues() ************************
*Commit: commit 1d10f562e30a1d314ced9d3bdf510891878baad5 1353526254 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
com.google.common.collect.Collections2.transform(java.util.Collection, com.google.common.base.Function)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Chamada: com.google.common.collect.Multimap.entries()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.transform(java.util.Collection, com.google.common.base.Function)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.05586608619762332
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.75
Corretude: 1.0
F-Measure: 0.8571428571428571
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.entryIterator() ************************
*Commit: commit 1d10f562e30a1d314ced9d3bdf510891878baad5 1353526254 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Chamada: com.google.common.collect.Multimap.entries()
Situação: Primeira Chamada
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.05586608619762332
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.5
F-Measure: 0.5714285714285715
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.createAsMap() ************************
*Commit: commit 1d10f562e30a1d314ced9d3bdf510891878baad5 1353526254 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
com.google.common.collect.Maps.transformEntries(java.util.Map, com.google.common.collect.Maps$EntryTransformer)
com.google.common.collect.Multimaps$TransformedEntriesMultimap.transform(com.google.common.collect.Multimaps$TransformedEntriesMultimap$K, java.util.Collection)
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.transformEntries(java.util.Map, com.google.common.collect.Maps$EntryTransformer)
Situação: Manual
Chamada: com.google.common.collect.Multimaps$TransformedEntriesMultimap.transform(com.google.common.collect.Multimaps$TransformedEntriesMultimap$K, java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.primitives.UnsignedLong.valueOf(J) ************************
*Commit: commit 6fe6d5c28d561ad6b830d0945769c8e0a1322b57 1354028901 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.primitives.UnsignedLong.fromLongBits(J)
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: com.google.common.primitives.UnsignedLong.fromLongBits(J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableRangeMap.subRangeMap(com.google.common.collect.Range) ************************
*Commit: commit 6506c4d1e0237dc5a3c875d2d10c329e902c5523 1354126427 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
com.google.common.collect.Range.isEmpty()
com.google.common.collect.ImmutableRangeMap.of()
upperBoundFn
com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
lowerBoundFn
com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
com.google.common.collect.ImmutableRangeMap.of()
com.google.common.base.Preconditions.checkElementIndex(I, I)
java.util.List.get(I)
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
java.util.List.get(I)
com.google.common.collect.ImmutableList.subList(I, I)
com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.ImmutableRangeMap.subRangeMap(com.google.common.collect.Range)
com.google.common.collect.ImmutableRangeMap.of()
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7777807679110853
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableRangeMap.of()
Situação: Manual
Chamada: upperBoundFn
Situação: Manual
Chamada: com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
Situação: Manual
Chamada: lowerBoundFn
Situação: Manual
Chamada: com.google.common.collect.SortedLists.binarySearch(java.util.List, com.google.common.base.Function, com.google.common.collect.Cut, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior)
Situação: Manual
Chamada: com.google.common.collect.ImmutableRangeMap.of()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkElementIndex(I, I)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.collect.ImmutableList.subList(I, I)
Situação: Manual
Chamada: com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.ImmutableRangeMap.subRangeMap(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.ImmutableRangeMap.of()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: com.google.common.collect.Range.isEmpty()
Útil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.125
Corretude: 0.5
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap.putAll(com.google.common.collect.RangeMap) ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMapOfRanges
isEmpty
span
com.google.common.collect.Range.encloses(com.google.common.collect.Range)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.TreeRangeMap.putAll(com.google.common.collect.RangeMap)
Chamada: asMapOfRanges
Situação: Primeira Chamada
Chamada: isEmpty
Situação: Manual
Chamada: span
Situação: Manual
Chamada: com.google.common.collect.Range.encloses(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap.putAll(com.google.common.collect.RangeMap)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.get(java.lang.Object) ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.encloses(com.google.common.collect.Range)
com.google.common.collect.Range.isEmpty()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
java.util.Map.get(java.lang.Object)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.Range.equals(java.lang.Object)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Chamada: com.google.common.collect.Range.encloses(com.google.common.collect.Range)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
Situação: Manual
Chamada: com.google.common.collect.Range.isConnected(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Range.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.entrySet() ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.isEmpty()
com.google.common.collect.Iterators.emptyIterator()
java.util.NavigableMap.floorKey(com.google.common.collect.Cut)
com.google.common.base.Objects.firstNonNull(com.google.common.collect.Cut, com.google.common.collect.Cut)
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getLowerBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.removeIf(com.google.common.base.Predicate)
null.iterator()
com.google.common.collect.Iterators.size(java.util.Iterator)
null.iterator()
java.util.Iterator.hasNext()
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: java.util.NavigableMap.floorKey(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.base.Objects.firstNonNull(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getLowerBound()
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6999993945008567
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getKey()
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getValue()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.removeIf(com.google.common.base.Predicate)
Situação: Manual
Chamada: null.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.size(java.util.Iterator)
Situação: Manual
Chamada: null.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.125
Corretude: 0.6
F-Measure: 0.20689655172413793
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.entrySet()
com.google.common.base.Predicate.apply(null)
java.util.Map$Entry.getKey()
java.util.List.add(com.google.common.collect.Range)
com.google.common.collect.TreeRangeMap.remove(com.google.common.collect.Range)
java.util.List.isEmpty()
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.entrySet()
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.List.add(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap.remove(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.List.isEmpty()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap.span() ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
java.util.NavigableMap.ceilingKey(com.google.common.collect.Cut)
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Chamada: java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.NavigableMap.ceilingKey(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6999993945008567
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6999993945008567
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.TreeRangeMap$RangeMapEntry.getUpperBound()
Situação: Manual
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Útil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.3333333333333333
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap.put(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V) ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.encloses(com.google.common.collect.Range)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.TreeRangeMap.put(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
Chamada: com.google.common.collect.Range.encloses(com.google.common.collect.Range)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap.put(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap.getEntry(com.google.common.collect.TreeRangeMap$K) ************************
*Commit: commit 35fbd05c6f9d09db66b98285b00b77bccd3fc468 1354126804 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.contains(com.google.common.collect.TreeRangeMap$K)
com.google.common.collect.TreeRangeMap.getEntry(com.google.common.collect.TreeRangeMap$K)
java.util.Map$Entry.getKey()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
java.util.Map$Entry.getValue()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.TreeRangeMap$K)
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeRangeMap.getEntry(com.google.common.collect.TreeRangeMap$K)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Range, com.google.common.collect.TreeRangeMap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2
Corretude: 0.2
F-Measure: 0.20000000000000004
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$Keys.entrySet() ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimaps$Keys.entryIterator()
com.google.common.collect.FilteredEntryMultimap.keySet()
java.util.Set.size()
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Collection.size()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, I)
com.google.common.base.Predicate.apply(null)
com.google.common.base.Predicates.in(java.util.Collection)
null.removeIf(com.google.common.base.Predicate)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
null.removeIf(com.google.common.base.Predicate)
Chamada: com.google.common.collect.Multimaps$Keys.entryIterator()
Situação: Primeira Chamada
Chamada: com.google.common.collect.FilteredEntryMultimap.keySet()
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, I)
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: null.removeIf(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Situação: Manual
Chamada: null.removeIf(com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Set.size()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.07692307692307693
Corretude: 0.09090909090909091
F-Measure: 0.08333333333333334
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMap
entrySet
iterator
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
java.util.Collection.isEmpty()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
com.google.common.base.Predicate.apply(null)
java.util.Collection.size()
java.util.Map$Entry.getValue()
java.util.Collection.size()
java.util.Iterator.remove()
java.util.Collection.clear()
Chamada: asMap
Situação: Primeira Chamada
Chamada: entrySet
Situação: Manual
Chamada: iterator
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.15075368016211577
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.15555573496307118
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Chamada: java.util.Collection.clear()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.14084582715038632
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Collection.clear()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Collection.size()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.4
Corretude: 0.7142857142857143
F-Measure: 0.5128205128205129
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$AsMap.remove(java.lang.Object) ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMap
get
com.google.common.collect.Lists.newArrayList()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.FilteredEntryMultimap.satisfies(com.google.common.collect.FilteredEntryMultimap$K, com.google.common.collect.FilteredEntryMultimap$V)
java.util.Iterator.remove()
java.util.List.add(com.google.common.collect.FilteredEntryMultimap$V)
java.util.List.isEmpty()
com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
java.util.Collections.unmodifiableSet(java.util.Set)
java.util.Collections.unmodifiableList(java.util.List)
Chamada: asMap
Situação: Primeira Chamada
Chamada: get
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.FilteredEntryMultimap.satisfies(com.google.common.collect.FilteredEntryMultimap$K, com.google.common.collect.FilteredEntryMultimap$V)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.32258083418298583
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.List.add(com.google.common.collect.FilteredEntryMultimap$V)
Situação: Manual
Chamada: java.util.List.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collections.unmodifiableSet(java.util.Set)
Situação: Manual
Chamada: java.util.Collections.unmodifiableList(java.util.List)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.75
F-Measure: 0.375
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$AsMap.values() ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMap
entrySet
iterator
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
java.util.Collection.isEmpty()
java.util.Collection.equals(java.lang.Object)
java.util.Collection.size()
java.util.Map$Entry.getValue()
java.util.Collection.size()
java.util.Iterator.remove()
java.util.Collection.clear()
com.google.common.base.Predicates.in(java.util.Collection)
valueFunction
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
valueFunction
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Chamada: asMap
Situação: Primeira Chamada
Chamada: entrySet
Situação: Manual
Chamada: iterator
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.15075368016211577
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: java.util.Collection.equals(java.lang.Object)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.15555573496307118
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Chamada: java.util.Collection.clear()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.14084582715038632
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: valueFunction
Situação: Manual
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Situação: Manual
Chamada: valueFunction
Situação: Manual
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Collection.clear()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Collection.size()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2608695652173913
Corretude: 0.7142857142857143
F-Measure: 0.3821656050955414
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$Keys.remove(java.lang.Object, I) ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multisets.checkNonnegative(I, java.lang.String)
com.google.common.collect.Multimaps$Keys.count(java.lang.Object)
asMap
get
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.FilteredEntryMultimap.satisfies(com.google.common.collect.FilteredEntryMultimap$K, com.google.common.collect.FilteredEntryMultimap$V)
java.util.Iterator.remove()
Chamada: com.google.common.collect.Multisets.checkNonnegative(I, java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimaps$Keys.count(java.lang.Object)
Situação: Manual
Chamada: asMap
Situação: Manual
Chamada: get
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.FilteredEntryMultimap.satisfies(com.google.common.collect.FilteredEntryMultimap$K, com.google.common.collect.FilteredEntryMultimap$V)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.32258083418298583
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.375
Corretude: 0.75
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$AsMap.entrySet() ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
asMap
entrySet
iterator
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
java.util.Collection.isEmpty()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
null.iterator()
com.google.common.collect.Iterators.size(java.util.Iterator)
Chamada: asMap
Situação: Primeira Chamada
Chamada: entrySet
Situação: Manual
Chamada: iterator
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.15075368016211577
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Situação: Manual
Chamada: null.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.size(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Collection.size()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.11764705882352941
Corretude: 0.4
F-Measure: 0.1818181818181818
************************ Método Avaliado: com.google.common.collect.FilteredKeyMultimap.createEntries() ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.FilteredKeyMultimap.entryIterator()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
containsEntry
java.util.Map$Entry.getKey()
com.google.common.base.Predicate.apply(null)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
remove
keyFunction
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
entries
iterator
com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
keyFunction
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
entries
iterator
com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
Chamada: com.google.common.collect.FilteredKeyMultimap.entryIterator()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: containsEntry
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: remove
Situação: Manual
Chamada: keyFunction
Situação: Manual
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: entries
Situação: Manual
Chamada: iterator
Situação: Manual
Chamada: com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: keyFunction
Situação: Manual
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: entries
Situação: Manual
Chamada: iterator
Situação: Manual
Chamada: com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.17391304347826086
Corretude: 0.4
F-Measure: 0.24242424242424243
************************ Método Avaliado: com.google.common.collect.FilteredKeyMultimap.get(com.google.common.collect.FilteredKeyMultimap$K) ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Predicate.apply(null)
get
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Primeira Chamada
Chamada: get
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.FilteredKeyMultimap$AddRejectingList.addAll(I, java.util.Collection) ************************
*Commit: commit 2eabf213074afc5b2483c687598e6a3762c0ec5f 1354210628 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
com.google.common.base.Preconditions.checkPositionIndex(I, I)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkPositionIndex(I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager.startAsync() ************************
*Commit: commit dd05d2a900ad1da6a5b2d87e38c25e70e3bef80f 1354210734 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getKey()
com.google.common.util.concurrent.Service.state()
com.google.common.base.Preconditions.checkState(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.ImmutableMap.values()
com.google.common.util.concurrent.ServiceManager$ServiceListener.start()
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.util.concurrent.Service.state()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.values()
Situação: Manual
Chamada: com.google.common.util.concurrent.ServiceManager$ServiceListener.start()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.2
Corretude: 0.25
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.executeListeners() ************************
*Commit: commit dd05d2a900ad1da6a5b2d87e38c25e70e3bef80f 1354210734 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.util.concurrent.Monitor.isOccupiedByCurrentThread()
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
java.util.Queue.poll()
java.lang.Runnable.run()
Chamada: com.google.common.util.concurrent.Monitor.isOccupiedByCurrentThread()
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Situação: Manual
Chamada: java.util.Queue.poll()
Situação: Manual
Chamada: java.lang.Runnable.run()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager.startupTimes() ************************
*Commit: commit dd05d2a900ad1da6a5b2d87e38c25e70e3bef80f 1354210734 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.Maps.newHashMapWithExpectedSize(I)
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getKey()
com.google.common.util.concurrent.Service.state()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.util.concurrent.ServiceManager$ServiceListener.startupTimeMillis()
java.util.Map.put(com.google.common.util.concurrent.Service, java.lang.Long)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
java.util.Map.entrySet()
com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.builder()
com.google.common.collect.ImmutableMap$Builder.put(java.util.Map$Entry)
com.google.common.collect.ImmutableMap$Builder.build()
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.newHashMapWithExpectedSize(I)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.19999946177745306
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.util.concurrent.Service.state()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19999946177745306
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.util.concurrent.ServiceManager$ServiceListener.startupTimeMillis()
Situação: Manual
Chamada: java.util.Map.put(com.google.common.util.concurrent.Service, java.lang.Long)
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.put(java.util.Map$Entry)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: java.util.Map.entrySet()
Útil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableMap$Builder.build()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.375
Corretude: 0.3076923076923077
F-Measure: 0.3380281690140845
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager.ServiceManager(java.lang.Iterable) ************************
*Commit: commit dd05d2a900ad1da6a5b2d87e38c25e70e3bef80f 1354210734 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.copyOf(java.lang.Iterable)
java.util.List.size()
com.google.common.collect.ImmutableMap.builder()
com.google.common.util.concurrent.MoreExecutors.sameThreadExecutor()
com.google.common.util.concurrent.Service.addListener(com.google.common.util.concurrent.Service$Listener, java.util.concurrent.Executor)
com.google.common.util.concurrent.Service.state()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.util.concurrent.Service, com.google.common.util.concurrent.ServiceManager$ServiceListener)
com.google.common.collect.ImmutableMap$Builder.build()
Chamada: com.google.common.collect.ImmutableList.copyOf(java.lang.Iterable)
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Manual
Chamada: com.google.common.util.concurrent.MoreExecutors.sameThreadExecutor()
Situação: Manual
Chamada: com.google.common.util.concurrent.Service.addListener(com.google.common.util.concurrent.Service$Listener, java.util.concurrent.Executor)
Situação: Manual
Chamada: com.google.common.util.concurrent.Service.state()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.util.concurrent.Service, com.google.common.util.concurrent.ServiceManager$ServiceListener)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: com.google.common.collect.ImmutableMap$Builder.build()
Útil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.125
Corretude: 0.16666666666666666
F-Measure: 0.14285714285714288
************************ Método Avaliado: asByteSource ************************
*Commit: commit 2459638f76d1e57824acfc013a3b7a018ba74de1 1354304266 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.InputSupplier)
com.google.common.io.InputSupplier.getInput()
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.io.InputSupplier)
Situação: Primeira Chamada
Chamada: com.google.common.io.InputSupplier.getInput()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.750001513752441
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Corretude/Utilidade dos Métodos
Método: com.google.common.io.InputSupplier.getInput()
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: asCharSource ************************
*Commit: commit 2459638f76d1e57824acfc013a3b7a018ba74de1 1354304266 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.io.InputSupplier)
com.google.common.io.InputSupplier.getInput()
com.google.common.io.CharStreams.asReader(com.google.common.io.CharStreams$(Lcom/google/common/io/InputSupplier;)LCharSource;$R)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.io.InputSupplier)
Situação: Primeira Chamada
Chamada: com.google.common.io.InputSupplier.getInput()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.750001513752441
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.io.CharStreams.asReader(com.google.common.io.CharStreams$(Lcom/google/common/io/InputSupplier;)LCharSource;$R)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.io.Closeables.close(java.io.Closeable, Z)
Inútil
Método: com.google.common.io.InputSupplier.getInput()
Útil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: com.google.common.base.CharMatcher.finishCollapseFrom(java.lang.CharSequence, I, I, C, java.lang.StringBuilder, Z) ************************
*Commit: commit b4cf74aa3a56751f25ae09eb79b68e0656d40618 1354891105 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.CharSequence.charAt(I)
Situação: Primeira Chamada
Chamada: com.google.common.base.CharMatcher.matches(C)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3928568339287414
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5714285714285713
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.CharSequence.subSequence(I, I)
Inútil
Método: java.lang.StringBuilder.append(C)
Útil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Útil
Método: java.lang.StringBuilder.toString()
Útil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Inútil
Percentual de Automatização: 0.75
Corretude: 0.42857142857142855
F-Measure: 0.5454545454545454
************************ Método Avaliado: com.google.common.base.CharMatcher.finishCollapseFrom(java.lang.CharSequence, I, I, C, java.lang.StringBuilder, Z) ************************
*Commit: commit b4cf74aa3a56751f25ae09eb79b68e0656d40618 1354891105 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.CharSequence.charAt(I)
Situação: Primeira Chamada
Chamada: com.google.common.base.CharMatcher.matches(C)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3928568339287414
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5714285714285713
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.CharSequence.subSequence(I, I)
Inútil
Método: java.lang.StringBuilder.append(C)
Útil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Útil
Método: java.lang.StringBuilder.toString()
Útil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Inútil
Percentual de Automatização: 0.75
Corretude: 0.42857142857142855
F-Measure: 0.5454545454545454
************************ Método Avaliado: com.google.common.collect.AbstractSortedMultiset.pollFirstEntry() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.entryIterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.AbstractSortedMultiset$E, I)
java.util.Iterator.remove()
Chamada: com.google.common.collect.AbstractMultiset.entryIterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9444453788579598
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.AbstractSortedMultiset$E, I)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.375
F-Measure: 0.42857142857142855
************************ Método Avaliado: com.google.common.collect.AbstractSortedMultiset.lastEntry() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractSortedMultiset.descendingEntryIterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Chamada: com.google.common.collect.AbstractSortedMultiset.descendingEntryIterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.AbstractSortedMultiset.firstEntry() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultiset.entryIterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Chamada: com.google.common.collect.AbstractMultiset.entryIterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.AbstractSortedMultiset.pollLastEntry() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractSortedMultiset.descendingEntryIterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.AbstractSortedMultiset$E, I)
java.util.Iterator.remove()
Chamada: com.google.common.collect.AbstractSortedMultiset.descendingEntryIterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9444453788579598
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.AbstractSortedMultiset$E, I)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.375
F-Measure: 0.42857142857142855
************************ Método Avaliado: com.google.common.collect.DescendingMultiset.comparator() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DescendingMultiset.forwardMultiset()
com.google.common.collect.SortedMultiset.comparator()
com.google.common.collect.Ordering.from(java.util.Comparator)
com.google.common.collect.Ordering.reverse()
Chamada: com.google.common.collect.DescendingMultiset.forwardMultiset()
Situação: Primeira Chamada
Chamada: com.google.common.collect.SortedMultiset.comparator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.from(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.Ordering.reverse()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6153824656845164
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.DescendingMultiset.createEntrySet() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DescendingMultiset.entryIterator()
com.google.common.collect.DescendingMultiset.forwardMultiset()
com.google.common.collect.Multiset.entrySet()
java.util.Set.size()
Chamada: com.google.common.collect.DescendingMultiset.entryIterator()
Situação: Primeira Chamada
Chamada: com.google.common.collect.DescendingMultiset.forwardMultiset()
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.DescendingMultiset.comparator() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DescendingMultiset.forwardMultiset()
com.google.common.collect.SortedMultiset.comparator()
com.google.common.collect.Ordering.from(java.util.Comparator)
com.google.common.collect.Ordering.reverse()
Chamada: com.google.common.collect.DescendingMultiset.forwardMultiset()
Situação: Primeira Chamada
Chamada: com.google.common.collect.SortedMultiset.comparator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.from(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.Ordering.reverse()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6153824656845164
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.DescendingMultiset.createEntrySet() ************************
*Commit: commit bf0fb34c412629d8f2b32095ee0524b732ed6410 1355160580 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DescendingMultiset.entryIterator()
com.google.common.collect.DescendingMultiset.forwardMultiset()
com.google.common.collect.Multiset.entrySet()
java.util.Set.size()
Chamada: com.google.common.collect.DescendingMultiset.entryIterator()
Situação: Primeira Chamada
Chamada: com.google.common.collect.DescendingMultiset.forwardMultiset()
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.Ascii.toLowerCase(java.lang.CharSequence) ************************
*Commit: commit caf4fc4fe94090803e9c7e634d9004d82b60fe3e 1355175718 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
com.google.common.base.Ascii.toLowerCase(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: com.google.common.base.Ascii.toLowerCase(C)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.StringBuilder.toString()
Útil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.base.Ascii.toUpperCase(java.lang.CharSequence) ************************
*Commit: commit caf4fc4fe94090803e9c7e634d9004d82b60fe3e 1355175718 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
com.google.common.base.Ascii.toUpperCase(C)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: com.google.common.base.Ascii.toUpperCase(C)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.StringBuilder.toString()
Útil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.AbstractNavigableMap$DescendingMap.comparator() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractNavigableMap$DescendingMap.delegate()
java.util.SortedMap.comparator()
com.google.common.collect.Ordering.from(java.util.Comparator)
com.google.common.collect.Ordering.reverse()
Chamada: com.google.common.collect.AbstractNavigableMap$DescendingMap.delegate()
Situação: Primeira Chamada
Chamada: java.util.SortedMap.comparator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.from(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.Ordering.reverse()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6153824656845164
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound.descendingEntryIterator() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.hasUpperBound()
com.google.common.collect.Range.upperEndpoint()
com.google.common.collect.Cut.aboveAll()
com.google.common.collect.Range.hasUpperBound()
com.google.common.collect.Range.upperBoundType()
java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
java.util.NavigableMap.descendingMap()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.peek()
java.util.NavigableMap.higherKey(com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Range.contains(com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
java.util.Map.containsKey(java.lang.Object)
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Cut.belowAll()
java.util.NavigableMap.higherKey(com.google.common.collect.Cut)
com.google.common.collect.Cut.aboveAll()
com.google.common.base.Objects.firstNonNull(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.next()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
com.google.common.collect.AbstractIterator.endOfData()
Chamada: com.google.common.collect.Range.hasUpperBound()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Range.upperEndpoint()
Situação: Manual
Chamada: com.google.common.collect.Cut.aboveAll()
Situação: Manual
Chamada: com.google.common.collect.Range.hasUpperBound()
Situação: Manual
Chamada: com.google.common.collect.Range.upperBoundType()
Situação: Manual
Chamada: java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.NavigableMap.descendingMap()
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: java.util.NavigableMap.higherKey(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: java.util.NavigableMap.higherKey(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.aboveAll()
Situação: Manual
Chamada: com.google.common.base.Objects.firstNonNull(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map.get(java.lang.Object)
Inútil
Percentual de Automatização: 0.027777777777777776
Corretude: 0.2
F-Measure: 0.048780487804878044
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$RangesByUpperBound.get(java.lang.Object) ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.contains(com.google.common.collect.Cut)
java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.Cut.equals(java.lang.Object)
java.util.Map$Entry.getValue()
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.Cut)
Situação: Primeira Chamada
Chamada: java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.Cut.equals(java.lang.Object)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound.entryIterator() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.hasLowerBound()
com.google.common.collect.Range.lowerEndpoint()
com.google.common.collect.Range.lowerBoundType()
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Range.contains(com.google.common.collect.Cut)
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.peek()
com.google.common.collect.Cut.belowAll()
com.google.common.collect.Cut.belowAll()
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.next()
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Cut.aboveAll()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.next()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.aboveAll()
com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.aboveAll()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Chamada: com.google.common.collect.Range.hasLowerBound()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Range.lowerEndpoint()
Situação: Manual
Chamada: com.google.common.collect.Range.lowerBoundType()
Situação: Manual
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: com.google.common.collect.Cut.belowAll()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.aboveAll()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.aboveAll()
Situação: Manual
Chamada: com.google.common.collect.Range.create(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.aboveAll()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.038461538461538464
Corretude: 0.3333333333333333
F-Measure: 0.06896551724137931
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$RangesByUpperBound.size() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.all()
com.google.common.collect.Range.equals(java.lang.Object)
java.util.Map.size()
com.google.common.collect.TreeRangeSet$RangesByUpperBound.entryIterator()
com.google.common.collect.Iterators.size(java.util.Iterator)
Chamada: com.google.common.collect.Range.all()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Range.equals(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeSet$RangesByUpperBound.entryIterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.size(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound.get(java.lang.Object) ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound.tailMap(com.google.common.collect.Cut, Z)
java.util.NavigableMap.firstEntry()
java.util.Map$Entry.getKey()
com.google.common.collect.Cut.equals(java.lang.Object)
java.util.Map$Entry.getValue()
Chamada: com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound.tailMap(com.google.common.collect.Cut, Z)
Situação: Primeira Chamada
Chamada: java.util.NavigableMap.firstEntry()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.collect.Cut.equals(java.lang.Object)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 0.3333333333333333
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$RangesByUpperBound.isEmpty() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.all()
com.google.common.collect.Range.equals(java.lang.Object)
java.util.Map.isEmpty()
com.google.common.collect.TreeRangeSet$RangesByUpperBound.entryIterator()
java.util.Iterator.hasNext()
Chamada: com.google.common.collect.Range.all()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Range.equals(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.TreeRangeSet$RangesByUpperBound.entryIterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$RangesByUpperBound.entryIterator() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.hasLowerBound()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Range.lowerEndpoint()
java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
java.util.SortedMap.values()
java.util.Collection.iterator()
java.util.Map$Entry.getValue()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
java.util.Map$Entry.getKey()
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Range.lowerEndpoint()
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Chamada: com.google.common.collect.Range.hasLowerBound()
Situação: Primeira Chamada
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Range.lowerEndpoint()
Situação: Manual
Chamada: java.util.NavigableMap.lowerEntry(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1256544784778184
Suporte: 0.00396367
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Range.lowerEndpoint()
Situação: Manual
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.13636363636363635
Corretude: 0.375
F-Measure: 0.19999999999999998
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$RangesByUpperBound.descendingEntryIterator() ************************
*Commit: commit 39b6a72246fcde454321b03823f4981f6394a63f 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.hasUpperBound()
com.google.common.collect.Range.upperEndpoint()
java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
java.util.NavigableMap.descendingMap()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
java.util.NavigableMap.descendingMap()
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
java.util.Iterator.hasNext()
com.google.common.collect.PeekingIterator.peek()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.PeekingIterator.next()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.collect.PeekingIterator.next()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
com.google.common.collect.AbstractIterator.endOfData()
Chamada: com.google.common.collect.Range.hasUpperBound()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Range.upperEndpoint()
Situação: Manual
Chamada: java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.NavigableMap.descendingMap()
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Situação: Manual
Chamada: java.util.NavigableMap.descendingMap()
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.05
Corretude: 0.3333333333333333
F-Measure: 0.08695652173913045
************************ Método Avaliado: com.google.common.collect.TreeRangeSet.rangeEnclosing(com.google.common.collect.Range) ************************
*Commit: commit ca36f308785f8a9780a10ea48a76bd026b202fa9 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
java.util.Map$Entry.getValue()
com.google.common.collect.Range.encloses(com.google.common.collect.Range)
java.util.Map$Entry.getValue()
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
Situação: Primeira Chamada
Chamada: java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.Range.encloses(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Range.isEmpty()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 0.16666666666666666
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound.descendingEntryIterator() ************************
*Commit: commit ca36f308785f8a9780a10ea48a76bd026b202fa9 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.isEmpty()
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Ordering.natural()
com.google.common.collect.Cut.belowValue(com.google.common.collect.Cut)
com.google.common.collect.Ordering.min(com.google.common.collect.Cut, com.google.common.collect.Cut)
com.google.common.collect.Cut.endpoint()
com.google.common.collect.Cut.typeAsUpperBound()
java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
java.util.NavigableMap.descendingMap()
java.util.SortedMap.values()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.Range.contains(com.google.common.collect.Cut)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
com.google.common.collect.AbstractIterator.endOfData()
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Cut.belowValue(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Ordering.min(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.endpoint()
Situação: Manual
Chamada: com.google.common.collect.Cut.typeAsUpperBound()
Situação: Manual
Chamada: java.util.NavigableMap.headMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.NavigableMap.descendingMap()
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.10526315789473684
Corretude: 0.2
F-Measure: 0.13793103448275862
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound.SubRangeSetRangesByLowerBound(com.google.common.collect.Range, com.google.common.collect.Range, java.util.NavigableMap) ************************
*Commit: commit ca36f308785f8a9780a10ea48a76bd026b202fa9 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
com.google.common.base.Preconditions.checkNotNull(java.util.NavigableMap)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.NavigableMap)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Range.isEmpty()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound.get(java.lang.Object) ************************
*Commit: commit ca36f308785f8a9780a10ea48a76bd026b202fa9 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.contains(com.google.common.collect.Cut)
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.Cut.equals(java.lang.Object)
java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
valueOrNull
com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
java.util.Map.get(java.lang.Object)
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Chamada: com.google.common.collect.Range.contains(com.google.common.collect.Cut)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6999993945008567
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.Cut.equals(java.lang.Object)
Situação: Manual
Chamada: java.util.NavigableMap.floorEntry(com.google.common.collect.Cut)
Situação: Manual
Chamada: valueOrNull
Situação: Manual
Chamada: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6999993945008567
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: com.google.common.collect.Cut.compareTo(com.google.common.collect.Cut)
Útil
Percentual de Automatização: 0.2222222222222222
Corretude: 0.3333333333333333
F-Measure: 0.26666666666666666
************************ Método Avaliado: com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound.entryIterator() ************************
*Commit: commit ca36f308785f8a9780a10ea48a76bd026b202fa9 1355444092 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Range.isEmpty()
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Cut.endpoint()
com.google.common.collect.Range.lowerBoundType()
java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
java.util.SortedMap.values()
java.util.Collection.iterator()
com.google.common.collect.Ordering.natural()
com.google.common.collect.Cut.belowValue(com.google.common.collect.Cut)
com.google.common.collect.Ordering.min(com.google.common.collect.Cut, com.google.common.collect.Cut)
java.util.Iterator.hasNext()
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.collect.Range.intersection(com.google.common.collect.Range)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Chamada: com.google.common.collect.Range.isEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Manual
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Cut.endpoint()
Situação: Manual
Chamada: com.google.common.collect.Range.lowerBoundType()
Situação: Manual
Chamada: java.util.NavigableMap.tailMap(com.google.common.collect.Cut, Z)
Situação: Manual
Chamada: java.util.SortedMap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Cut.belowValue(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.Ordering.min(com.google.common.collect.Cut, com.google.common.collect.Cut)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Cut.isLessThan(com.google.common.collect.Cut)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: com.google.common.collect.Range.intersection(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Cut, com.google.common.collect.Range)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.09090909090909091
Corretude: 0.2222222222222222
F-Measure: 0.1290322580645161
************************ Método Avaliado: com.google.common.hash.ChecksumHashFunction.ChecksumHashFunction(com.google.common.base.Supplier, I, java.lang.String) ************************
*Commit: commit 39d3234f2e2130fd0f3725d4f545bf97638be412 1355979037 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Supplier)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Supplier)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.hash.MessageDigestHashFunction.MessageDigestHashFunction(java.lang.String, java.lang.String) ************************
*Commit: commit 39d3234f2e2130fd0f3725d4f545bf97638be412 1355979037 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.hash.MessageDigestHashFunction.getMessageDigest(java.lang.String)
java.security.MessageDigest.getDigestLength()
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.hash.MessageDigestHashFunction.supportsClone()
Chamada: com.google.common.hash.MessageDigestHashFunction.getMessageDigest(java.lang.String)
Situação: Primeira Chamada
Chamada: java.security.MessageDigest.getDigestLength()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Manual
Chamada: com.google.common.hash.MessageDigestHashFunction.supportsClone()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.hash.MessageDigestHashFunction.MessageDigestHashFunction(java.lang.String, I, java.lang.String) ************************
*Commit: commit 39d3234f2e2130fd0f3725d4f545bf97638be412 1355979037 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.hash.MessageDigestHashFunction.getMessageDigest(java.lang.String)
java.security.MessageDigest.getDigestLength()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.hash.MessageDigestHashFunction.supportsClone()
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.hash.MessageDigestHashFunction.getMessageDigest(java.lang.String)
Situação: Manual
Chamada: java.security.MessageDigest.getDigestLength()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.hash.MessageDigestHashFunction.supportsClone()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.cache.LocalCache$Segment.insertLoadingValueReference(com.google.common.cache.LocalCache$Segment$K, I, Z) ************************
*Commit: commit 75085833f67d07b9dcc071e0703cb1027e6c0b28 1356041333 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.locks.ReentrantLock.lock()
com.google.common.base.Ticker.read()
com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
java.util.concurrent.atomic.AtomicReferenceArray.length()
java.util.concurrent.atomic.AtomicReferenceArray.get(I)
com.google.common.cache.LocalCache$ReferenceEntry.getNext()
com.google.common.cache.LocalCache$ReferenceEntry.getKey()
com.google.common.cache.LocalCache$ReferenceEntry.getHash()
com.google.common.base.Equivalence.equivalent(java.lang.Object, java.lang.Object)
com.google.common.cache.LocalCache$ReferenceEntry.getValueReference()
com.google.common.cache.LocalCache$ValueReference.isLoading()
com.google.common.cache.LocalCache$ReferenceEntry.getWriteTime()
com.google.common.cache.LocalCache$ReferenceEntry.setValueReference(com.google.common.cache.LocalCache$ValueReference)
com.google.common.cache.LocalCache$Segment.newEntry(com.google.common.cache.LocalCache$Segment$K, I, com.google.common.cache.LocalCache$ReferenceEntry)
com.google.common.cache.LocalCache$ReferenceEntry.setValueReference(com.google.common.cache.LocalCache$ValueReference)
java.util.concurrent.atomic.AtomicReferenceArray.set(I, com.google.common.cache.LocalCache$ReferenceEntry)
java.util.concurrent.locks.ReentrantLock.unlock()
com.google.common.cache.LocalCache$Segment.postWriteCleanup()
Chamada: java.util.concurrent.locks.ReentrantLock.lock()
Situação: Primeira Chamada
Chamada: com.google.common.base.Ticker.read()
Situação: Manual
Chamada: com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.concurrent.atomic.AtomicReferenceArray.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5499999243124926
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.concurrent.atomic.AtomicReferenceArray.get(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5499999243124926
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getNext()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getHash()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.base.Equivalence.equivalent(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getValueReference()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.cache.LocalCache$ValueReference.isLoading()
Situação: Manual
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.getWriteTime()
Situação: Manual
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.setValueReference(com.google.common.cache.LocalCache$ValueReference)
Situação: Manual
Chamada: com.google.common.cache.LocalCache$Segment.newEntry(com.google.common.cache.LocalCache$Segment$K, I, com.google.common.cache.LocalCache$ReferenceEntry)
Situação: Manual
Chamada: com.google.common.cache.LocalCache$ReferenceEntry.setValueReference(com.google.common.cache.LocalCache$ValueReference)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicReferenceArray.set(I, com.google.common.cache.LocalCache$ReferenceEntry)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.concurrent.locks.ReentrantLock.unlock()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9750004162812911
Suporte: 0.00644096
F-Measure Suporte e Confiança: 0.013
Chamada: com.google.common.cache.LocalCache$Segment.postWriteCleanup()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.cache.LocalCache$ReferenceEntry.getKey()
Útil
Método: com.google.common.cache.LocalCache$ReferenceEntry.getHash()
Útil
Método: java.util.concurrent.atomic.AtomicReferenceArray.set(I, com.google.common.cache.LocalCache$ReferenceEntry)
Útil
Método: com.google.common.base.Equivalence.equivalent(java.lang.Object, java.lang.Object)
Útil
Método: com.google.common.cache.LocalCache$Segment.preWriteCleanup(J)
Útil
Método: com.google.common.cache.LocalCache$ReferenceEntry.getNext()
Útil
Método: com.google.common.cache.LocalCache$Segment.postWriteCleanup()
Útil
Método: java.util.concurrent.atomic.AtomicReferenceArray.length()
Útil
Método: com.google.common.cache.LocalCache$ReferenceEntry.getValueReference()
Útil
Método: java.util.concurrent.locks.ReentrantLock.unlock()
Útil
Método: java.util.concurrent.atomic.AtomicReferenceArray.get(I)
Útil
Percentual de Automatização: 0.6470588235294118
Corretude: 1.0
F-Measure: 0.7857142857142858
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$DenseImmutableTable$DenseCellSet.createAsList() ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableTable$DenseImmutableTable.rowKeySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.RegularImmutableTable$DenseImmutableTable.columnKeySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.Tables.immutableCell(com.google.common.collect.RegularImmutableTable$DenseImmutableTable$R, com.google.common.collect.RegularImmutableTable$DenseImmutableTable$C, com.google.common.collect.RegularImmutableTable$DenseImmutableTable$V)
Chamada: com.google.common.collect.RegularImmutableTable$DenseImmutableTable.rowKeySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.RegularImmutableTable$DenseImmutableTable.columnKeySet()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.collect.Tables.immutableCell(com.google.common.collect.RegularImmutableTable$DenseImmutableTable$R, com.google.common.collect.RegularImmutableTable$DenseImmutableTable$C, com.google.common.collect.RegularImmutableTable$DenseImmutableTable$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$DenseImmutableTable$DenseCellSet.iterator() ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$SparseImmutableTable.SparseImmutableTable(com.google.common.collect.ImmutableList, com.google.common.collect.ImmutableSet, com.google.common.collect.ImmutableSet) ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newHashMap()
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Map.size()
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.lang.Integer)
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.util.Map)
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, java.util.Map)
java.util.List.size()
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.size()
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
java.util.Map.get(java.lang.Object)
java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
com.google.common.collect.ImmutableMap.builder()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.util.Map)
com.google.common.collect.ImmutableMap$Builder.build()
com.google.common.collect.ImmutableMap.builder()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, java.util.Map)
com.google.common.collect.ImmutableMap$Builder.build()
Chamada: com.google.common.collect.Maps.newHashMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, java.util.Map)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.Table$Cell.getRowKey()
Situação: Manual
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8749996846357039
Suporte: 0.00346821
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.Table$Cell.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.8333337538190616
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.19999946177745306
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19999946177745306
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.16326495306141864
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Útil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: com.google.common.collect.Table$Cell.getColumnKey()
Útil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.Table$Cell.getRowKey()
Inútil
Método: java.util.Map.entrySet()
Útil
Método: com.google.common.collect.Table$Cell.getValue()
Útil
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.collect.Count.get()
Inútil
Método: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Útil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: com.google.common.collect.ImmutableMap$Builder.build()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3939393939393939
Corretude: 0.5625
F-Measure: 0.4633663366336634
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$SparseImmutableTable$SparseCellSet.iterator() ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$CellSet.contains(java.lang.Object) ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table.get(java.lang.Object, java.lang.Object)
com.google.common.collect.Table$Cell.getValue()
java.lang.Object.equals(java.lang.Object)
Chamada: com.google.common.collect.Table$Cell.getRowKey()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8749996846357039
Suporte: 0.00346821
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.Table.get(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Table$Cell.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.8333337538190616
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Table$Cell.getColumnKey()
Útil
Método: com.google.common.collect.Table$Cell.getRowKey()
Inútil
Método: com.google.common.collect.Table$Cell.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.6666666666666666
F-Measure: 0.5714285714285715
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$SparseImmutableTable$SparseCellSet.createAsList() ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Tables.immutableCell(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5624990539047245
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Tables.immutableCell(com.google.common.collect.RegularImmutableTable$SparseImmutableTable$R, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$C, com.google.common.collect.RegularImmutableTable$SparseImmutableTable$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.List.size()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6
Corretude: 0.2727272727272727
F-Measure: 0.37499999999999994
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$DenseImmutableTable.DenseImmutableTable(com.google.common.collect.ImmutableList, com.google.common.collect.ImmutableSet, com.google.common.collect.ImmutableSet) ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.size()
java.util.Set.size()
com.google.common.collect.RegularImmutableTable$DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
com.google.common.collect.RegularImmutableTable$DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
java.util.Map.size()
java.util.Map.size()
java.util.List.size()
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.Table$Cell.getValue()
Chamada: java.util.Set.size()
Situação: Primeira Chamada
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.11290297377801649
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.RegularImmutableTable$DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableTable$DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.Table$Cell.getRowKey()
Situação: Manual
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8749996846357039
Suporte: 0.00346821
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.Table$Cell.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.8333337538190616
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: com.google.common.collect.Table$Cell.getColumnKey()
Útil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.Table$Cell.getRowKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: com.google.common.collect.Table$Cell.getValue()
Útil
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Útil
Método: java.util.Set.size()
Útil
Método: java.util.List.iterator()
Inútil
Método: com.google.common.collect.ImmutableMap.of()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.4666666666666667
Corretude: 0.4
F-Measure: 0.4307692307692308
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$SparseImmutableTable.createValues() ************************
*Commit: commit f237e1e015fecb13e34739858300508dac235117 1357250061 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.values()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.ImmutableMap.values()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
Chamada: com.google.common.collect.ImmutableMap.values()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.ImmutableMap.values()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.4
Corretude: 0.25
F-Measure: 0.3076923076923077
************************ Método Avaliado: com.google.common.reflect.ClassPath.getTopLevelClasses() ************************
*Commit: commit 28f3cd2759061207c89c25a2635154c3adaabc2b 1357923333 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.builder()
com.google.common.collect.ImmutableSet$Builder.add(com.google.common.reflect.ClassPath$ClassInfo)
com.google.common.collect.ImmutableSet$Builder.build()
Chamada: com.google.common.collect.ImmutableSet.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet$Builder.add(com.google.common.reflect.ClassPath$ClassInfo)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet$Builder.build()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.reflect.ClassPath$ResourceInfo.ResourceInfo(java.lang.String, java.lang.ClassLoader) ************************
*Commit: commit 28f3cd2759061207c89c25a2635154c3adaabc2b 1357923333 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.base.Preconditions.checkNotNull(java.lang.ClassLoader)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.ClassLoader)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.reflect.ClassPath.browse(java.net.URI, java.lang.ClassLoader, com.google.common.collect.ImmutableSet$Builder) ************************
*Commit: commit 28f3cd2759061207c89c25a2635154c3adaabc2b 1357923333 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.net.URI.getScheme()
java.lang.String.equals(java.lang.Object)
com.google.common.reflect.ClassPath.browseFrom(java.io.File, java.lang.ClassLoader, com.google.common.collect.ImmutableSet$Builder)
Chamada: java.net.URI.getScheme()
Situação: Primeira Chamada
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.reflect.ClassPath.browseFrom(java.io.File, java.lang.ClassLoader, com.google.common.collect.ImmutableSet$Builder)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.RegularImmutableList.equals(java.lang.Object) ************************
*Commit: commit 01c33a7487d8c3f90608ae5cd05debf62794c25b 1357926614 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableList.size()
java.util.List.size()
java.lang.Object.equals(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
Chamada: com.google.common.collect.RegularImmutableList.size()
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.13793081848988292
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.lang.Object.equals(java.lang.Object)
Útil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.2
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.RegularImmutableList.toString() ************************
*Commit: commit 01c33a7487d8c3f90608ae5cd05debf62794c25b 1357926614 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableList.size()
com.google.common.collect.Collections2.newStringBuilderForCollection(I)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: com.google.common.collect.RegularImmutableList.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.newStringBuilderForCollection(I)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.Object)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.44897923877570434
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.lang.StringBuilder.append(java.lang.Object)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5714285714285713
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Útil
Método: java.lang.StringBuilder.append(java.lang.String)
Útil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.42857142857142855
Corretude: 1.0
F-Measure: 0.6
************************ Método Avaliado: com.google.common.collect.SingletonImmutableList.toString() ************************
*Commit: commit 01c33a7487d8c3f90608ae5cd05debf62794c25b 1357926614 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.toString()
java.lang.String.length()
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.Object.toString()
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2749999621562463
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5714285714285713
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3500002270625224
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Útil
Método: java.lang.StringBuilder.append(java.lang.String)
Útil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Útil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.8
Corretude: 0.6
F-Measure: 0.6857142857142857
************************ Método Avaliado: com.google.common.collect.SingletonImmutableList.equals(java.lang.Object) ************************
*Commit: commit 01c33a7487d8c3f90608ae5cd05debf62794c25b 1357926614 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.size()
java.util.List.get(I)
java.lang.Object.equals(java.lang.Object)
Chamada: java.util.List.size()
Situação: Primeira Chamada
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.Maps.asSetEntryIterator(java.util.Set, com.google.common.base.Function) ************************
*Commit: commit 8485330b17d5cd0b93fbb2f1429c09bf2a4155ab 1358033571 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.iterator()
com.google.common.base.Function.apply(null)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
Chamada: java.util.Set.iterator()
Situação: Primeira Chamada
Chamada: com.google.common.base.Function.apply(null)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Collections2.safeRemove(java.util.Collection, java.lang.Object) ************************
*Commit: commit 8485330b17d5cd0b93fbb2f1429c09bf2a4155ab 1358033571 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
java.util.Collection.remove(java.lang.Object)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Collection)
Situação: Primeira Chamada
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps.asSetEntryIterator(java.util.Set, com.google.common.base.Function) ************************
*Commit: commit 8485330b17d5cd0b93fbb2f1429c09bf2a4155ab 1358033571 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.iterator()
com.google.common.base.Function.apply(null)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
Chamada: java.util.Set.iterator()
Situação: Primeira Chamada
Chamada: com.google.common.base.Function.apply(null)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$NavigableAsMapView.get(java.lang.Object) ************************
*Commit: commit 8485330b17d5cd0b93fbb2f1429c09bf2a4155ab 1358033571 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.contains(java.lang.Object)
com.google.common.base.Function.apply(null)
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.base.Function.apply(null)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.contains(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.primitives.UnsignedInteger.valueOf(J) ************************
*Commit: commit 02e459aacc3b534a580cd656b2e5d167b8b45026 1358201095 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.primitives.UnsignedInteger.fromIntBits(I)
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: com.google.common.primitives.UnsignedInteger.fromIntBits(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.primitives.UnsignedInteger.valueOf(java.math.BigInteger) ************************
*Commit: commit 02e459aacc3b534a580cd656b2e5d167b8b45026 1358201095 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.math.BigInteger)
java.math.BigInteger.signum()
java.math.BigInteger.bitLength()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.math.BigInteger.intValue()
com.google.common.primitives.UnsignedInteger.fromIntBits(I)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.math.BigInteger)
Situação: Primeira Chamada
Chamada: java.math.BigInteger.signum()
Situação: Manual
Chamada: java.math.BigInteger.bitLength()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: java.math.BigInteger.intValue()
Situação: Manual
Chamada: com.google.common.primitives.UnsignedInteger.fromIntBits(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multimaps$MapMultimap.asMap() ************************
*Commit: commit f9c1a637a439f4534b6d2cb8bb534b19a4e6efcc 1358363595 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
java.util.Map.keySet()
java.util.Set.iterator()
com.google.common.collect.Multimaps$AsMap.get(java.lang.Object)
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.Multimaps$AsMap.get(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.14285714285714285
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.Multimaps.equalsImpl(com.google.common.collect.Multimap, java.lang.Object) ************************
*Commit: commit f9c1a637a439f4534b6d2cb8bb534b19a4e6efcc 1358363595 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
com.google.common.collect.Multimap.asMap()
java.util.Map.equals(java.lang.Object)
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multimaps$MapMultimap.asMap() ************************
*Commit: commit f9c1a637a439f4534b6d2cb8bb534b19a4e6efcc 1358363595 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
java.util.Map.keySet()
java.util.Set.iterator()
com.google.common.collect.Multimaps$AsMap.get(java.lang.Object)
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.Multimaps$AsMap.get(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.14285714285714285
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.Multimaps.equalsImpl(com.google.common.collect.Multimap, java.lang.Object) ************************
*Commit: commit f9c1a637a439f4534b6d2cb8bb534b19a4e6efcc 1358363595 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
com.google.common.collect.Multimap.asMap()
java.util.Map.equals(java.lang.Object)
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Iterators$MergingIterator.next() ************************
*Commit: commit 0071d72213c47537f79355468eb7b855af532340 1358363688 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Queue.remove()
com.google.common.collect.PeekingIterator.next()
java.util.Iterator.hasNext()
java.util.Queue.add(com.google.common.collect.PeekingIterator)
Chamada: java.util.Queue.remove()
Situação: Primeira Chamada
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Queue.add(com.google.common.collect.PeekingIterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Iterators$MergingIterator.next() ************************
*Commit: commit 0071d72213c47537f79355468eb7b855af532340 1358363688 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Queue.remove()
com.google.common.collect.PeekingIterator.next()
java.util.Iterator.hasNext()
java.util.Queue.add(com.google.common.collect.PeekingIterator)
Chamada: java.util.Queue.remove()
Situação: Primeira Chamada
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Queue.add(com.google.common.collect.PeekingIterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ObjectArrays.copyAsObjectArray([Ljava.lang.Object;, I, I) ************************
*Commit: commit a072275f7ec6cd71835baef23020a766ba0497e6 1358363736 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Primeira Chamada
Chamada: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableCollection$ArrayBasedBuilder.addAll(java.lang.Iterable) ************************
*Commit: commit a072275f7ec6cd71835baef23020a766ba0497e6 1358363736 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.size()
com.google.common.collect.ImmutableCollection$ArrayBasedBuilder.ensureCapacity(I)
Chamada: java.util.Collection.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection$ArrayBasedBuilder.ensureCapacity(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ObjectArrays.copyAsObjectArray([Ljava.lang.Object;, I, I) ************************
*Commit: commit a072275f7ec6cd71835baef23020a766ba0497e6 1358363736 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Primeira Chamada
Chamada: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.RegularImmutableSet.toArray([Ljava.lang.Object;) ************************
*Commit: commit a072275f7ec6cd71835baef23020a766ba0497e6 1358363736 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Object;)
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Object;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.RegularImmutableSet.toArray() ************************
*Commit: commit a072275f7ec6cd71835baef23020a766ba0497e6 1358363736 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableCollection.toArray()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.toArray()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multimaps.filterEntries(com.google.common.collect.SetMultimap, com.google.common.base.Predicate) ************************
*Commit: commit b99b83e93dd3f0a448db8f0284c14b0ae759d85b 1358363786 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
filterFiltered
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.SetMultimap)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Situação: Primeira Chamada
Chamada: filterFiltered
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.SetMultimap)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Predicate.apply(null)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multimaps.filterEntries(com.google.common.collect.Multimap, com.google.common.base.Predicate) ************************
*Commit: commit b99b83e93dd3f0a448db8f0284c14b0ae759d85b 1358363786 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
com.google.common.collect.Multimaps.filterEntries(com.google.common.collect.SetMultimap, com.google.common.base.Predicate)
filterFiltered
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multimap)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimaps.filterEntries(com.google.common.collect.SetMultimap, com.google.common.base.Predicate)
Situação: Manual
Chamada: filterFiltered
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multimap)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Predicate.apply(null)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.FilteredKeyMultimap$Entries.retainAll(java.util.Collection) ************************
*Commit: commit b99b83e93dd3f0a448db8f0284c14b0ae759d85b 1358363786 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
keyFunction
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
Chamada: keyFunction
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.FilteredKeyMultimap$Entries.remove(java.lang.Object) ************************
*Commit: commit b99b83e93dd3f0a448db8f0284c14b0ae759d85b 1358363786 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
java.util.Map$Entry.getKey()
com.google.common.base.Predicate.apply(null)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
Chamada: java.util.Map$Entry.getKey()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5714285714285714
Corretude: 0.4
F-Measure: 0.47058823529411764
************************ Método Avaliado: com.google.common.collect.FilteredKeyMultimap$Entries.removeAll(java.util.Collection) ************************
*Commit: commit b99b83e93dd3f0a448db8f0284c14b0ae759d85b 1358363786 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
keyFunction
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
Chamada: keyFunction
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multimaps.filterEntries(com.google.common.collect.SetMultimap, com.google.common.base.Predicate) ************************
*Commit: commit b99b83e93dd3f0a448db8f0284c14b0ae759d85b 1358363786 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
filterFiltered
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.SetMultimap)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Situação: Primeira Chamada
Chamada: filterFiltered
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.SetMultimap)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Predicate.apply(null)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$MapDifferenceImpl.areEqual() ************************
*Commit: commit 40ab4e481cfab78b02a6a1d41c66ff7d4c79462e 1358363874 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.isEmpty()
java.util.Map.isEmpty()
java.util.Map.isEmpty()
Chamada: java.util.Map.isEmpty()
Situação: Primeira Chamada
Chamada: java.util.Map.isEmpty()
Situação: Manual
Chamada: java.util.Map.isEmpty()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps.doDifference(java.util.Map, java.util.Map, com.google.common.base.Equivalence, java.util.Map, java.util.Map, java.util.Map, java.util.Map) ************************
*Commit: commit 40ab4e481cfab78b02a6a1d41c66ff7d4c79462e 1358363874 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Map.containsKey(java.lang.Object)
java.util.Map.remove(java.lang.Object)
com.google.common.base.Equivalence.equivalent(null, null)
java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
com.google.common.collect.Maps$ValueDifferenceImpl.create(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.MapDifference$ValueDifference)
java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.16666666666666666
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.base.Equivalence.equivalent(null, null)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Situação: Manual
Chamada: com.google.common.collect.Maps$ValueDifferenceImpl.create(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.MapDifference$ValueDifference)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map.get(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.375
F-Measure: 0.35294117647058826
************************ Método Avaliado: com.google.common.collect.Maps$MapDifferenceImpl.areEqual() ************************
*Commit: commit 40ab4e481cfab78b02a6a1d41c66ff7d4c79462e 1358363874 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.isEmpty()
java.util.Map.isEmpty()
java.util.Map.isEmpty()
Chamada: java.util.Map.isEmpty()
Situação: Primeira Chamada
Chamada: java.util.Map.isEmpty()
Situação: Manual
Chamada: java.util.Map.isEmpty()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps.doDifference(java.util.Map, java.util.Map, com.google.common.base.Equivalence, java.util.Map, java.util.Map, java.util.Map, java.util.Map) ************************
*Commit: commit 40ab4e481cfab78b02a6a1d41c66ff7d4c79462e 1358363874 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Map.containsKey(java.lang.Object)
java.util.Map.remove(java.lang.Object)
com.google.common.base.Equivalence.equivalent(null, null)
java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
com.google.common.collect.Maps$ValueDifferenceImpl.create(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.MapDifference$ValueDifference)
java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.16666666666666666
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.base.Equivalence.equivalent(null, null)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Situação: Manual
Chamada: com.google.common.collect.Maps$ValueDifferenceImpl.create(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.MapDifference$ValueDifference)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$K, com.google.common.collect.Maps$(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map.get(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.375
F-Measure: 0.35294117647058826
************************ Método Avaliado: com.google.common.collect.ImmutableBiMap.fromEntries(I, [Ljava.util.Map$Entry;) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableBiMap.of()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
Chamada: com.google.common.collect.ImmutableBiMap.of()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMap.sortEntries(java.util.Comparator, I, [Ljava.util.Map$Entry;) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Comparator.compare(null, null)
java.util.Arrays.sort([Ljava.util.Map$Entry;, I, I, java.util.Comparator)
Chamada: java.util.Map$Entry.getKey()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Comparator.compare(null, null)
Situação: Manual
Chamada: java.util.Arrays.sort([Ljava.util.Map$Entry;, I, I, java.util.Comparator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.3333333333333333
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMap.validateEntries(I, [Ljava.util.Map$Entry;, java.util.Comparator) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Comparator.compare(null, null)
Chamada: java.util.Map$Entry.getKey()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Comparator.compare(null, null)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMap.fromSortedEntries(java.util.Comparator, I, [Ljava.util.Map$Entry;) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.emptyMap(java.util.Comparator)
com.google.common.collect.ImmutableList.builder()
com.google.common.collect.ImmutableList.builder()
java.util.Map$Entry.getKey()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;I[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$K)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;I[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$V)
com.google.common.collect.ImmutableList$Builder.build()
com.google.common.collect.ImmutableList$Builder.build()
Chamada: com.google.common.collect.ImmutableSortedMap.emptyMap(java.util.Comparator)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.builder()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;I[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$K)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;I[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$V)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Método: com.google.common.collect.ImmutableList$Builder.build()
Útil
Percentual de Automatização: 0.25
Corretude: 0.3333333333333333
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMap.fromEntries(java.util.Comparator, Z, I, [Ljava.util.Map$Entry;) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.entryOf(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;ZI[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$K, com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;ZI[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$V)
com.google.common.collect.ImmutableSortedMap.sortEntries(java.util.Comparator, I, [Ljava.util.Map$Entry;)
com.google.common.collect.ImmutableSortedMap.validateEntries(I, [Ljava.util.Map$Entry;, java.util.Comparator)
com.google.common.collect.ImmutableSortedMap.fromSortedEntries(java.util.Comparator, I, [Ljava.util.Map$Entry;)
Chamada: java.util.Map$Entry.getKey()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.ImmutableMap.entryOf(com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;ZI[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$K, com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;ZI[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableSortedMap;$V)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.sortEntries(java.util.Comparator, I, [Ljava.util.Map$Entry;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.validateEntries(I, [Ljava.util.Map$Entry;, java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.fromSortedEntries(java.util.Comparator, I, [Ljava.util.Map$Entry;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2
Corretude: 0.2
F-Measure: 0.20000000000000004
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap.RegularImmutableBiMap(I, [Ljava.util.Map$Entry;) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
closedTableSize
com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
java.util.Map$Entry.getKey()
com.google.common.base.Preconditions.checkNotNull(null)
java.util.Map$Entry.getValue()
com.google.common.base.Preconditions.checkNotNull(null)
java.lang.Object.hashCode()
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInKToVBucket()
com.google.common.collect.ImmutableEntry.getKey()
java.lang.Object.equals(java.lang.Object)
com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInVToKBucket()
com.google.common.collect.ImmutableEntry.getValue()
java.lang.Object.equals(java.lang.Object)
Chamada: closedTableSize
Situação: Primeira Chamada
Chamada: com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableBiMap.createEntryArray(I)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull(null)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.base.Preconditions.checkNotNull(null)
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInKToVBucket()
Situação: Manual
Chamada: com.google.common.collect.ImmutableEntry.getKey()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableBiMap$BiMapEntry.getNextInVToKBucket()
Situação: Manual
Chamada: com.google.common.collect.ImmutableEntry.getValue()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.13793081848988292
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.lang.Object.equals(java.lang.Object)
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.lang.Object.hashCode()
Útil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Método: com.google.common.collect.Hashing.smear(I)
Útil
Percentual de Automatização: 0.23529411764705882
Corretude: 0.5
F-Measure: 0.31999999999999995
************************ Método Avaliado: com.google.common.collect.RegularImmutableMap.RegularImmutableMap(I, [Ljava.util.Map$Entry;) ************************
*Commit: commit f90d07978c10519b3c73e8a0801df30122ad06b9 1358457466 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableMap.createEntryArray(I)
closedTableSize
com.google.common.collect.RegularImmutableMap.createEntryArray(I)
java.util.Map$Entry.getKey()
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
java.util.Map$Entry.getValue()
com.google.common.collect.RegularImmutableMap.newLinkedEntry(com.google.common.collect.RegularImmutableMap$K, com.google.common.collect.RegularImmutableMap$V, com.google.common.collect.RegularImmutableMap$LinkedEntry)
java.util.Map$Entry.getKey()
java.lang.Object.equals(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.RegularImmutableMap$LinkedEntry.next()
Chamada: com.google.common.collect.RegularImmutableMap.createEntryArray(I)
Situação: Primeira Chamada
Chamada: closedTableSize
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableMap.createEntryArray(I)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.RegularImmutableMap.newLinkedEntry(com.google.common.collect.RegularImmutableMap$K, com.google.common.collect.RegularImmutableMap$V, com.google.common.collect.RegularImmutableMap$LinkedEntry)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableMap$LinkedEntry.next()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.lang.Object.hashCode()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Método: com.google.common.collect.Hashing.smear(I)
Útil
Percentual de Automatização: 0.2727272727272727
Corretude: 0.3333333333333333
F-Measure: 0.3
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryMap$KeySet.removeAll(java.util.Collection) ************************
*Commit: commit cc34329792125a962b7b5f800fdb1d1874631aa7 1358877757 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.collect.Maps.keyFunction()
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.Maps.keyFunction()
Situação: Manual
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryMap$KeySet.removeAll(java.util.Collection) ************************
*Commit: commit cc34329792125a962b7b5f800fdb1d1874631aa7 1358877757 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.collect.Maps.keyFunction()
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.Maps.keyFunction()
Situação: Manual
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Platform$SetFromMap.SetFromMap(java.util.Map) ************************
*Commit: commit 1d11559a8d86ee5f7909a293e5063689fb8b0f30 1358877757 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.isEmpty()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
java.util.Map.keySet()
Chamada: java.util.Map.isEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: serialize ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableTable.rowKeySet()
java.util.Set.size()
writeInt
com.google.common.collect.ImmutableTable.rowKeySet()
writeObject
com.google.common.collect.ImmutableTable.row(java.lang.Object)
serialize
Chamada: com.google.common.collect.ImmutableTable.rowKeySet()
Situação: Primeira Chamada
Chamada: java.util.Set.size()
Situação: Manual
Chamada: writeInt
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable.rowKeySet()
Situação: Manual
Chamada: writeObject
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable.row(java.lang.Object)
Situação: Manual
Chamada: serialize
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: populate ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
readObject
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
com.google.common.collect.StandardTable.row(java.lang.Object)
java.util.Map$Entry.getValue()
java.util.Map.putAll(java.util.Map)
Chamada: readObject
Situação: Primeira Chamada
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: com.google.common.collect.StandardTable.row(java.lang.Object)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map.putAll(java.util.Map)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.4
Corretude: 0.3333333333333333
F-Measure: 0.3636363636363636
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getKey(I) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.keyToIndex()
com.google.common.collect.ImmutableMap.keySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
Chamada: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.keyToIndex()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap.keySet()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable.DenseImmutableTable(com.google.common.collect.ImmutableList, com.google.common.collect.ImmutableSet, com.google.common.collect.ImmutableSet) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.size()
java.util.Set.size()
com.google.common.collect.DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
com.google.common.collect.DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
java.util.Map.size()
java.util.Map.size()
java.util.List.size()
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.Table$Cell.getValue()
Chamada: java.util.Set.size()
Situação: Primeira Chamada
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.11290297377801649
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
Situação: Manual
Chamada: com.google.common.collect.DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet)
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.Table$Cell.getRowKey()
Situação: Manual
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8749996846357039
Suporte: 0.00346821
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.Table$Cell.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.8333337538190616
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: com.google.common.collect.Table$Cell.getColumnKey()
Útil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.Table$Cell.getRowKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: com.google.common.collect.Table$Cell.getValue()
Útil
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Útil
Método: java.util.Set.size()
Útil
Método: java.util.List.iterator()
Inútil
Método: com.google.common.collect.ImmutableMap.of()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.4666666666666667
Corretude: 0.4
F-Measure: 0.4307692307692308
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable.makeIndex(com.google.common.collect.ImmutableSet) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.builder()
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.DenseImmutableTable$(Lcom/google/common/collect/ImmutableSet;)Lcom/google/common/collect/ImmutableMap;$E, java.lang.Integer)
com.google.common.collect.ImmutableMap$Builder.build()
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.DenseImmutableTable$(Lcom/google/common/collect/ImmutableSet;)Lcom/google/common/collect/ImmutableMap;$E, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap$Builder.build()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable.get(java.lang.Object, java.lang.Object) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Útil
Método: com.google.common.collect.ImmutableMap.of()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable$DenseCellSet.createAsList() ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DenseImmutableTable.rowKeySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.DenseImmutableTable.columnKeySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.Tables.immutableCell(com.google.common.collect.DenseImmutableTable$R, com.google.common.collect.DenseImmutableTable$C, com.google.common.collect.DenseImmutableTable$V)
Chamada: com.google.common.collect.DenseImmutableTable.rowKeySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.DenseImmutableTable.columnKeySet()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.collect.Tables.immutableCell(com.google.common.collect.DenseImmutableTable$R, com.google.common.collect.DenseImmutableTable$C, com.google.common.collect.DenseImmutableTable$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.get(java.lang.Object) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.keyToIndex()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getValue(I)
Chamada: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.keyToIndex()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getValue(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableMap.of()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.createEntrySet() ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.isFull()
com.google.common.collect.ImmutableMapEntrySet.size()
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getKey(I)
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getValue(I)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$K, com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$V)
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.keyToIndex()
java.util.Map.size()
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getValue(I)
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getKey(I)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$K, com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$V)
com.google.common.collect.AbstractIterator.endOfData()
Chamada: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.isFull()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMapEntrySet.size()
Situação: Manual
Chamada: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getKey(I)
Situação: Manual
Chamada: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getValue(I)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$K, com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$V)
Situação: Manual
Chamada: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.keyToIndex()
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getValue(I)
Situação: Manual
Chamada: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getKey(I)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$K, com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$V)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable.row(com.google.common.collect.DenseImmutableTable$R) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.DenseImmutableTable$R)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableMap.of()
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.DenseImmutableTable$R)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableMap.of()
Útil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable.column(com.google.common.collect.DenseImmutableTable$C) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.DenseImmutableTable$C)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableMap.of()
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.DenseImmutableTable$C)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableMap.of()
Útil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable.createValues() ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.values()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.ImmutableMap.values()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
Chamada: com.google.common.collect.ImmutableMap.values()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.ImmutableMap.values()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.4
Corretude: 0.25
F-Measure: 0.3076923076923077
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable$SparseCellSet.createAsList() ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Tables.immutableCell(com.google.common.collect.SparseImmutableTable$R, com.google.common.collect.SparseImmutableTable$C, com.google.common.collect.SparseImmutableTable$V)
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5624990539047245
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Tables.immutableCell(com.google.common.collect.SparseImmutableTable$R, com.google.common.collect.SparseImmutableTable$C, com.google.common.collect.SparseImmutableTable$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.List.size()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6
Corretude: 0.2727272727272727
F-Measure: 0.37499999999999994
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable.row(com.google.common.collect.SparseImmutableTable$R) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.SparseImmutableTable$R)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableMap.of()
com.google.common.base.Objects.firstNonNull(com.google.common.collect.ImmutableMap, com.google.common.collect.ImmutableMap)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.SparseImmutableTable$R)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.base.Objects.firstNonNull(com.google.common.collect.ImmutableMap, com.google.common.collect.ImmutableMap)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableMap.of()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable.get(java.lang.Object, java.lang.Object) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableMap.of()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable.SparseImmutableTable(com.google.common.collect.ImmutableList, com.google.common.collect.ImmutableSet, com.google.common.collect.ImmutableSet) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newHashMap()
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Map.size()
java.util.Map.put(com.google.common.collect.SparseImmutableTable$R, java.lang.Integer)
java.util.Map.put(com.google.common.collect.SparseImmutableTable$R, java.util.Map)
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Map.put(com.google.common.collect.SparseImmutableTable$C, java.util.Map)
java.util.List.size()
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
java.util.Map.get(java.lang.Object)
java.util.Map.get(java.lang.Object)
java.util.Map.size()
java.util.Map.put(com.google.common.collect.SparseImmutableTable$C, com.google.common.collect.SparseImmutableTable$V)
java.util.Map.get(java.lang.Object)
java.util.Map.put(com.google.common.collect.SparseImmutableTable$R, com.google.common.collect.SparseImmutableTable$V)
com.google.common.collect.ImmutableMap.builder()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.SparseImmutableTable$R, java.util.Map)
com.google.common.collect.ImmutableMap$Builder.build()
com.google.common.collect.ImmutableMap.builder()
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.SparseImmutableTable$C, java.util.Map)
com.google.common.collect.ImmutableMap$Builder.build()
Chamada: com.google.common.collect.Maps.newHashMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.SparseImmutableTable$R, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.SparseImmutableTable$R, java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.SparseImmutableTable$C, java.util.Map)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.Table$Cell.getRowKey()
Situação: Manual
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8749996846357039
Suporte: 0.00346821
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.Table$Cell.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.8333337538190616
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.SparseImmutableTable$C, com.google.common.collect.SparseImmutableTable$V)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.collect.SparseImmutableTable$R, com.google.common.collect.SparseImmutableTable$V)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.19999946177745306
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19999946177745306
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.SparseImmutableTable$R, java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.16326495306141864
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.SparseImmutableTable$C, java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Útil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: com.google.common.collect.Table$Cell.getColumnKey()
Útil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.Table$Cell.getRowKey()
Inútil
Método: java.util.Map.entrySet()
Útil
Método: com.google.common.collect.Table$Cell.getValue()
Útil
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.collect.Count.get()
Inútil
Método: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Útil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: com.google.common.collect.ImmutableMap$Builder.build()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3939393939393939
Corretude: 0.5625
F-Measure: 0.4633663366336634
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable.column(com.google.common.collect.SparseImmutableTable$C) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.SparseImmutableTable$C)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableMap.of()
com.google.common.base.Objects.firstNonNull(com.google.common.collect.ImmutableMap, com.google.common.collect.ImmutableMap)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.SparseImmutableTable$C)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.base.Objects.firstNonNull(com.google.common.collect.ImmutableMap, com.google.common.collect.ImmutableMap)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableMap.of()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable.contains(java.lang.Object, java.lang.Object) ************************
*Commit: commit 6addb1f214c02b8f1de65cc564f5fa1e29da59ea 1358979960 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.get(java.lang.Object)
java.util.Map.containsKey(java.lang.Object)
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableMap.of()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ObjectArrays.toArrayImpl([Ljava.lang.Object;, I, I, [Ljava.lang.Object;) ************************
*Commit: commit f8a94b9999e42a2eb1431948ebb57ab8533eaaa5 1358980215 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.collect.ObjectArrays.newArray([Ljava.lang.Object;, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ObjectArrays.newArray([Ljava.lang.Object;, I)
Situação: Manual
Chamada: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Hashing.smearedHash(java.lang.Object) ************************
*Commit: commit f8a94b9999e42a2eb1431948ebb57ab8533eaaa5 1358980215 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
Chamada: java.lang.Object.hashCode()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.lang.Object.hashCode()
Inútil
Método: com.google.common.collect.Hashing.smear(I)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.ObjectArrays.toArrayImpl([Ljava.lang.Object;, I, I, [Ljava.lang.Object;) ************************
*Commit: commit f8a94b9999e42a2eb1431948ebb57ab8533eaaa5 1358980215 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.collect.ObjectArrays.newArray([Ljava.lang.Object;, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ObjectArrays.newArray([Ljava.lang.Object;, I)
Situação: Manual
Chamada: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.HashBiMap.hash(java.lang.Object) ************************
*Commit: commit 372a94bfa7992a98698affc08fc523d0b77e1bc3 1359140868 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
Chamada: java.lang.Object.hashCode()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.lang.Object.hashCode()
Inútil
Método: com.google.common.collect.Hashing.smear(I)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$NeverSuccessfulListenableFutureTask.run() ************************
*Commit: commit fc6a72e81f6cbf81de64105105f296f0c84abdd0 1359141012 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Runnable.run()
com.google.common.util.concurrent.AbstractFuture.setException(java.lang.Throwable)
com.google.common.base.Throwables.propagate(java.lang.Throwable)
Chamada: java.lang.Runnable.run()
Situação: Primeira Chamada
Chamada: com.google.common.util.concurrent.AbstractFuture.setException(java.lang.Throwable)
Situação: Manual
Chamada: com.google.common.base.Throwables.propagate(java.lang.Throwable)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.util.concurrent.AbstractFuture.setException(java.lang.Throwable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ObjectArrays.toArrayImpl([Ljava.lang.Object;, I, I, [Ljava.lang.Object;) ************************
*Commit: commit 86cc26487f7e57201b0ac9a6d3c64571ac9f7bd3 1359588946 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.collect.ObjectArrays.newArray([Ljava.lang.Object;, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ObjectArrays.newArray([Ljava.lang.Object;, I)
Situação: Manual
Chamada: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Hashing.smearedHash(java.lang.Object) ************************
*Commit: commit 86cc26487f7e57201b0ac9a6d3c64571ac9f7bd3 1359588946 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
Chamada: java.lang.Object.hashCode()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.lang.Object.hashCode()
Inútil
Método: com.google.common.collect.Hashing.smear(I)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.ObjectArrays.toArrayImpl([Ljava.lang.Object;, I, I, [Ljava.lang.Object;) ************************
*Commit: commit 86cc26487f7e57201b0ac9a6d3c64571ac9f7bd3 1359588946 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.collect.ObjectArrays.newArray([Ljava.lang.Object;, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ObjectArrays.newArray([Ljava.lang.Object;, I)
Situação: Manual
Chamada: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableTable.row(com.google.common.collect.ImmutableTable$R) ************************
*Commit: commit c65fdbc3f931b34da5d7261609ad88bbefb7afd4 1360001025 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.ImmutableTable$R)
com.google.common.collect.ImmutableTable.rowMap()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableMap.of()
com.google.common.base.Objects.firstNonNull(com.google.common.collect.ImmutableMap, com.google.common.collect.ImmutableMap)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.ImmutableTable$R)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableTable.rowMap()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.base.Objects.firstNonNull(com.google.common.collect.ImmutableMap, com.google.common.collect.ImmutableMap)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableMap.of()
Útil
Percentual de Automatização: 0.25
Corretude: 0.5
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.ImmutableTable.column(com.google.common.collect.ImmutableTable$C) ************************
*Commit: commit c65fdbc3f931b34da5d7261609ad88bbefb7afd4 1360001025 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.ImmutableTable$C)
com.google.common.collect.ImmutableTable.columnMap()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableMap.of()
com.google.common.base.Objects.firstNonNull(com.google.common.collect.ImmutableMap, com.google.common.collect.ImmutableMap)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.ImmutableTable$C)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableTable.columnMap()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.base.Objects.firstNonNull(com.google.common.collect.ImmutableMap, com.google.common.collect.ImmutableMap)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableMap.of()
Útil
Percentual de Automatização: 0.25
Corretude: 0.5
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.Tables.equalsImpl(com.google.common.collect.Table, java.lang.Object) ************************
*Commit: commit c65fdbc3f931b34da5d7261609ad88bbefb7afd4 1360001025 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table.cellSet()
com.google.common.collect.Table.cellSet()
java.util.Set.equals(java.lang.Object)
Chamada: com.google.common.collect.Table.cellSet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Table.cellSet()
Situação: Manual
Chamada: java.util.Set.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Table$Cell.getColumnKey()
Inútil
Método: com.google.common.collect.Table$Cell.getRowKey()
Inútil
Método: com.google.common.collect.Table$Cell.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.eventbus.AnnotatedHandlerFinder$MethodIdentifier.equals(java.lang.Object) ************************
*Commit: commit 638fcb8c799c53f55471201a639e001120b19815 1360250346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.equals(java.lang.Object)
java.util.List.equals(java.lang.Object)
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.util.List.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.RegularImmutableMap.checkNoConflictInBucket(com.google.common.collect.RegularImmutableMap$K, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry) ************************
*Commit: commit a37ebc6eb5f242ccfa90cc11eef369979e932685 1360250576 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableMap$ImmutableMapEntry.getNextInBucket()
com.google.common.collect.ImmutableEntry.getKey()
java.lang.Object.equals(java.lang.Object)
checkNoConflict
Chamada: com.google.common.collect.RegularImmutableMap$ImmutableMapEntry.getNextInBucket()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableEntry.getKey()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: checkNoConflict
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.RegularImmutableMap.RegularImmutableMap([Ljava.util.Map$Entry;) ************************
*Commit: commit a37ebc6eb5f242ccfa90cc11eef369979e932685 1360250576 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableMap.createEntryArray(I)
closedTableSize
com.google.common.collect.RegularImmutableMap.createEntryArray(I)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.RegularImmutableMap.checkNoConflictInBucket(com.google.common.collect.RegularImmutableMap$K, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry)
Chamada: com.google.common.collect.RegularImmutableMap.createEntryArray(I)
Situação: Primeira Chamada
Chamada: closedTableSize
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableMap.createEntryArray(I)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.RegularImmutableMap.checkNoConflictInBucket(com.google.common.collect.RegularImmutableMap$K, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.lang.Object.hashCode()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Método: com.google.common.collect.Hashing.smear(I)
Útil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.2857142857142857
F-Measure: 0.2857142857142857
************************ Método Avaliado: com.google.common.collect.RegularImmutableMap.RegularImmutableMap(I, [Lcom.google.common.collect.RegularImmutableMap$TerminalMapEntry;) ************************
*Commit: commit a37ebc6eb5f242ccfa90cc11eef369979e932685 1360250576 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableMap.createEntryArray(I)
closedTableSize
com.google.common.collect.RegularImmutableMap.createEntryArray(I)
com.google.common.collect.ImmutableEntry.getKey()
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.RegularImmutableMap.checkNoConflictInBucket(com.google.common.collect.RegularImmutableMap$K, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry)
Chamada: com.google.common.collect.RegularImmutableMap.createEntryArray(I)
Situação: Primeira Chamada
Chamada: closedTableSize
Situação: Manual
Chamada: com.google.common.collect.RegularImmutableMap.createEntryArray(I)
Situação: Manual
Chamada: com.google.common.collect.ImmutableEntry.getKey()
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.RegularImmutableMap.checkNoConflictInBucket(com.google.common.collect.RegularImmutableMap$K, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry, com.google.common.collect.RegularImmutableMap$ImmutableMapEntry)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.hashCode()
Inútil
Método: com.google.common.collect.Hashing.smear(I)
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.5
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimap$EntrySet.contains(java.lang.Object) ************************
*Commit: commit 07d29cba7e7efe70525b8ca94641fbc031f56939 1360610821 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMultimap.containsEntry(java.lang.Object, java.lang.Object)
Chamada: java.util.Map$Entry.getKey()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.ImmutableMultimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.2
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimap$EntrySet.contains(java.lang.Object) ************************
*Commit: commit 07d29cba7e7efe70525b8ca94641fbc031f56939 1360610821 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMultimap.containsEntry(java.lang.Object, java.lang.Object)
Chamada: java.util.Map$Entry.getKey()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.ImmutableMultimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.2
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap$Itr.hasNext() ************************
*Commit: commit 5fd86618cac019676e7fab7cce847c1fd29198ff 1360611458 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap$Itr.next() ************************
*Commit: commit 5fd86618cac019676e7fab7cce847c1fd29198ff 1360611458 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Collection.iterator()
java.util.Iterator.next()
com.google.common.collect.ImmutableMultimap$Itr.output(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.15075368016211577
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1830064428297795
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.ImmutableMultimap$Itr.output(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap$Itr.hasNext() ************************
*Commit: commit 5fd86618cac019676e7fab7cce847c1fd29198ff 1360611458 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap$Itr.next() ************************
*Commit: commit 5fd86618cac019676e7fab7cce847c1fd29198ff 1360611458 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Collection.iterator()
java.util.Iterator.next()
com.google.common.collect.ImmutableMultimap$Itr.output(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.15075368016211577
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1830064428297795
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.ImmutableMultimap$Itr.output(com.google.common.collect.ImmutableMultimap$K, com.google.common.collect.ImmutableMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset.copyOfInternal(com.google.common.collect.Multiset) ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.ImmutableMultiset.copyFromEntries(java.util.Collection)
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMultiset.copyFromEntries(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset.copyFromEntries(java.util.Collection) ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.builder()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.ImmutableMultiset$(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableMultiset;$E, java.lang.Integer)
com.google.common.collect.ImmutableMultiset.of()
com.google.common.collect.ImmutableMap$Builder.build()
com.google.common.primitives.Ints.saturatedCast(J)
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3023261053541682
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.ImmutableMultiset$(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableMultiset;$E, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultiset.of()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.primitives.Ints.saturatedCast(J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableMap$Builder.build()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.2857142857142857
F-Measure: 0.30769230769230765
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset$EntrySet.contains(java.lang.Object) ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset$Entry.getCount()
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3023261053541682
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.32558152633854204
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7307701264796912
Suporte: 0.00627581
F-Measure Suporte e Confiança: 0.013
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset.containsAll(java.util.Collection) ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
java.util.Set.containsAll(java.util.Collection)
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Set.containsAll(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset$SerializedForm.SerializedForm(com.google.common.collect.Multiset) ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.entrySet()
java.util.Set.size()
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.size()
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6451616683659717
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6451616683659717
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Útil
Método: java.util.Set.iterator()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.4
F-Measure: 0.4444444444444445
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset.iterator() ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMultiset.entrySet()
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
Chamada: com.google.common.collect.ImmutableMultiset.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.750001513752441
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8750018921905511
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9444453788579598
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.6
Corretude: 0.5
F-Measure: 0.5454545454545454
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset.equals(java.lang.Object) ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.size()
java.util.Collection.size()
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset$Entry.getCount()
Chamada: java.util.Collection.size()
Situação: Primeira Chamada
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6451616683659717
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.41935527976030035
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08450741100820414
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Útil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Útil
Método: java.util.Collection.size()
Útil
Percentual de Automatização: 0.8
Corretude: 0.6666666666666666
F-Measure: 0.7272727272727272
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset$Builder.addAll(java.lang.Iterable) ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multisets.cast(java.lang.Iterable)
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.ImmutableMultiset$Builder.addCopies(com.google.common.collect.ImmutableMultiset$Builder$E, I)
Chamada: com.google.common.collect.Multisets.cast(java.lang.Iterable)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6451616683659717
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6451616683659717
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.ImmutableMultiset$Builder.addCopies(com.google.common.collect.ImmutableMultiset$Builder$E, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Útil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.4
F-Measure: 0.4444444444444445
************************ Método Avaliado: com.google.common.collect.ImmutableList.copyIntoArray([Ljava.lang.Object;, I) ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.size()
java.util.List.get(I)
Chamada: java.util.List.size()
Situação: Primeira Chamada
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset.copyIntoArray([Ljava.lang.Object;, I) ************************
*Commit: commit 35ca2ccdb761de615df2f32b30ef497595f93a68 1360611887 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMultiset.entrySet()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multiset$Entry.getElement()
java.util.Arrays.fill([Ljava.lang.Object;, I, I, java.lang.Object)
com.google.common.collect.Multiset$Entry.getCount()
Chamada: com.google.common.collect.ImmutableMultiset.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3023261053541682
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Arrays.fill([Ljava.lang.Object;, I, I, java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7307701264796912
Suporte: 0.00627581
F-Measure Suporte e Confiança: 0.013
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.AbstractMapBasedMultimap$Itr.Itr() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
com.google.common.collect.Iterators.emptyModifiableIterator()
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.Iterators.emptyModifiableIterator()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.2
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.collect.AbstractMapBasedMultimap$Itr.next() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Collection.iterator()
java.util.Iterator.next()
com.google.common.collect.AbstractMapBasedMultimap$Itr.output(com.google.common.collect.AbstractMapBasedMultimap$K, com.google.common.collect.AbstractMapBasedMultimap$V)
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.15075368016211577
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1830064428297795
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.AbstractMapBasedMultimap$Itr.output(com.google.common.collect.AbstractMapBasedMultimap$K, com.google.common.collect.AbstractMapBasedMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.AbstractMapBasedMultimap$Itr.hasNext() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.AbstractMapBasedMultimap$Itr.remove() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.remove()
java.util.Collection.isEmpty()
java.util.Iterator.remove()
Chamada: java.util.Iterator.remove()
Situação: Primeira Chamada
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.valueIterator() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Chamada: com.google.common.collect.Multimap.entries()
Situação: Primeira Chamada
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.05586608619762332
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6
Corretude: 0.5
F-Measure: 0.5454545454545454
************************ Método Avaliado: com.google.common.collect.AbstractMapBasedMultimap$Itr.Itr() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
com.google.common.collect.Iterators.emptyModifiableIterator()
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.Iterators.emptyModifiableIterator()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.2
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.collect.AbstractMapBasedMultimap$Itr.next() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Collection.iterator()
java.util.Iterator.next()
com.google.common.collect.AbstractMapBasedMultimap$Itr.output(com.google.common.collect.AbstractMapBasedMultimap$K, com.google.common.collect.AbstractMapBasedMultimap$V)
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.15075368016211577
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1830064428297795
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.AbstractMapBasedMultimap$Itr.output(com.google.common.collect.AbstractMapBasedMultimap$K, com.google.common.collect.AbstractMapBasedMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.AbstractMapBasedMultimap$Itr.hasNext() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.hasNext()
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.AbstractMapBasedMultimap$Itr.remove() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.remove()
java.util.Collection.isEmpty()
java.util.Iterator.remove()
Chamada: java.util.Iterator.remove()
Situação: Primeira Chamada
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimap.valueIterator() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Maps.valueIterator(java.util.Iterator)
Chamada: com.google.common.collect.AbstractMultimap.entries()
Situação: Primeira Chamada
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Maps.valueIterator(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multimaps$TransformedEntriesMultimap.valueIterator() ************************
*Commit: commit 9062bf938fde15436adddd8daf9359b033205081 1360624194 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Chamada: com.google.common.collect.Multimap.entries()
Situação: Primeira Chamada
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.05586608619762332
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6
Corretude: 0.5
F-Measure: 0.5454545454545454
************************ Método Avaliado: com.google.common.collect.Maps.transformedEntryIterator(java.util.Iterator, com.google.common.collect.Maps$EntryTransformer) ************************
*Commit: commit 779fd55bd1de1e9408beca88c773298331cceccd 1360714176 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Chamada: java.util.Map$Entry.getKey()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.05586608619762332
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: com.google.common.collect.Maps.transformedEntryIterator(java.util.Iterator, com.google.common.collect.Maps$EntryTransformer) ************************
*Commit: commit 779fd55bd1de1e9408beca88c773298331cceccd 1360714176 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Chamada: java.util.Map$Entry.getKey()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.05586608619762332
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryMap$KeySet.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit 26c72b73505e1f45ffdd25614d4c9bfc165b5b3d 1360776889 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$AbstractFilteredMap$Values.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit 26c72b73505e1f45ffdd25614d4c9bfc165b5b3d 1360776889 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.FilteredKeyMultimap$Entries.delegate() ************************
*Commit: commit 26c72b73505e1f45ffdd25614d4c9bfc165b5b3d 1360776889 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
com.google.common.collect.FilteredKeyMultimap.entryPredicate()
com.google.common.collect.Collections2.filter(java.util.Collection, com.google.common.base.Predicate)
Chamada: com.google.common.collect.Multimap.entries()
Situação: Primeira Chamada
Chamada: com.google.common.collect.FilteredKeyMultimap.entryPredicate()
Situação: Manual
Chamada: com.google.common.collect.Collections2.filter(java.util.Collection, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryMap$KeySet.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit 26c72b73505e1f45ffdd25614d4c9bfc165b5b3d 1360776889 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$AbstractFilteredMap$Values.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit 26c72b73505e1f45ffdd25614d4c9bfc165b5b3d 1360776889 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.util.concurrent.CycleDetectingLockFactory.getOrCreateNodes(java.lang.Class) ************************
*Commit: commit 1740aac1bae09f0a2b8e7345ddfc90a10a84709b 1361464666 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
com.google.common.util.concurrent.CycleDetectingLockFactory.createNodes(java.lang.Class)
java.util.concurrent.ConcurrentMap.putIfAbsent(java.lang.Class, java.util.Map)
com.google.common.base.Objects.firstNonNull(java.util.Map, java.util.Map)
Chamada: java.util.Map.get(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.util.concurrent.CycleDetectingLockFactory.createNodes(java.lang.Class)
Situação: Manual
Chamada: java.util.concurrent.ConcurrentMap.putIfAbsent(java.lang.Class, java.util.Map)
Situação: Manual
Chamada: com.google.common.base.Objects.firstNonNull(java.util.Map, java.util.Map)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding.decodeChecked(java.lang.CharSequence) ************************
*Commit: commit 7766079f27aa546315dc59a2742350e136060c7e 1362157030 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding.padding()
com.google.common.base.CharMatcher.trimTrailingFrom(java.lang.CharSequence)
asCharInput
decodingStream
java.lang.CharSequence.length()
com.google.common.io.BaseEncoding.maxDecodedSize(I)
read
read
com.google.common.io.BaseEncoding.extract([B, I)
Chamada: com.google.common.io.BaseEncoding.padding()
Situação: Primeira Chamada
Chamada: com.google.common.base.CharMatcher.trimTrailingFrom(java.lang.CharSequence)
Situação: Manual
Chamada: asCharInput
Situação: Manual
Chamada: decodingStream
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.io.BaseEncoding.maxDecodedSize(I)
Situação: Manual
Chamada: read
Situação: Manual
Chamada: read
Situação: Manual
Chamada: com.google.common.io.BaseEncoding.extract([B, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.BaseEncoding.decodeChecked(java.lang.CharSequence) ************************
*Commit: commit 7766079f27aa546315dc59a2742350e136060c7e 1362157030 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.BaseEncoding.padding()
com.google.common.base.CharMatcher.trimTrailingFrom(java.lang.CharSequence)
asCharInput
com.google.common.io.BaseEncoding.decodingStream(java.io.Reader)
java.lang.CharSequence.length()
com.google.common.io.BaseEncoding.maxDecodedSize(I)
read
read
com.google.common.io.BaseEncoding.extract([B, I)
Chamada: com.google.common.io.BaseEncoding.padding()
Situação: Primeira Chamada
Chamada: com.google.common.base.CharMatcher.trimTrailingFrom(java.lang.CharSequence)
Situação: Manual
Chamada: asCharInput
Situação: Manual
Chamada: com.google.common.io.BaseEncoding.decodingStream(java.io.Reader)
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.io.BaseEncoding.maxDecodedSize(I)
Situação: Manual
Chamada: read
Situação: Manual
Chamada: read
Situação: Manual
Chamada: com.google.common.io.BaseEncoding.extract([B, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable$SparseValues.get(I) ************************
*Commit: commit ee32a2dd64cce9318cef8b2a0e2c582118a2d236 1362157635 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.values()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.ImmutableMap.values()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
Chamada: com.google.common.collect.ImmutableMap.values()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.ImmutableMap.values()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.4
Corretude: 0.25
F-Measure: 0.3076923076923077
************************ Método Avaliado: com.google.common.collect.Maps.asEntryToValueFunction(com.google.common.collect.Maps$EntryTransformer) ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Maps$EntryTransformer)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Maps$EntryTransformer)
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.05586608619762332
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.6666666666666666
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.Maps.transformEntry(com.google.common.collect.Maps$EntryTransformer, java.util.Map$Entry) ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Maps$EntryTransformer)
com.google.common.base.Preconditions.checkNotNull(java.util.Map$Entry)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Maps$EntryTransformer)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Map$Entry)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.05586608619762332
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6
Corretude: 1.0
F-Measure: 0.7499999999999999
************************ Método Avaliado: com.google.common.collect.Maps$FilteredKeyMap.createEntrySet() ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$TransformedEntriesMap.createEntrySet() ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
com.google.common.collect.Maps.asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.Maps.asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)
Situação: Manual
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.2
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.Maps$FilteredKeyMap.createKeySet() ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.keySet()
com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
Chamada: java.util.Map.keySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps.transformEntry(com.google.common.collect.Maps$EntryTransformer, java.util.Map$Entry) ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Maps$EntryTransformer)
com.google.common.base.Preconditions.checkNotNull(java.util.Map$Entry)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Maps$EntryTransformer)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Map$Entry)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.05586608619762332
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6
Corretude: 1.0
F-Measure: 0.7499999999999999
************************ Método Avaliado: com.google.common.collect.Maps$TransformedEntriesMap.createEntrySet() ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
com.google.common.collect.Maps.asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.Maps.asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)
Situação: Manual
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.2
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.Maps$FilteredKeyMap.createKeySet() ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.keySet()
com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
Chamada: java.util.Map.keySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps.asEntryToValueFunction(com.google.common.collect.Maps$EntryTransformer) ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Maps$EntryTransformer)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Maps$EntryTransformer)
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.05586608619762332
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.6666666666666666
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.Maps$FilteredKeyMap.createEntrySet() ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.filter(java.util.Set, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.StandardTable$Column.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit cb54c20bedf257f2eeec7e9f61105b2585ab0752 1362157746 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
java.util.Map.get(java.lang.Object)
java.util.Map$Entry.getKey()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.StandardTable$R, com.google.common.collect.StandardTable$V)
com.google.common.base.Predicate.apply(null)
java.util.Map.remove(java.lang.Object)
java.util.Map.isEmpty()
java.util.Iterator.remove()
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.521738787050712
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.17500037843811023
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.StandardTable$R, com.google.common.collect.StandardTable$V)
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Map.isEmpty()
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.8333358562540683
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Iterator.remove()
Útil
Método: java.util.Map.remove(java.lang.Object)
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6363636363636364
Corretude: 0.7777777777777778
F-Measure: 0.7000000000000001
************************ Método Avaliado: cellIterator ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ArrayTable.size()
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
java.util.List.get(I)
com.google.common.collect.ArrayTable.at(I, I)
Chamada: com.google.common.collect.ArrayTable.size()
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ArrayTable.at(I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Útil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.6
Corretude: 0.5
F-Measure: 0.5454545454545454
************************ Método Avaliado: com.google.common.collect.AbstractTable.valuesIterator() ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractTable.cellSet()
java.util.Set.iterator()
com.google.common.collect.Table$Cell.getValue()
Chamada: com.google.common.collect.AbstractTable.cellSet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.Table$Cell.getValue()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractTable.putAll(com.google.common.collect.Table) ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table.cellSet()
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
com.google.common.collect.AbstractTable.put(com.google.common.collect.AbstractTable$R, com.google.common.collect.AbstractTable$C, com.google.common.collect.AbstractTable$V)
Chamada: com.google.common.collect.Table.cellSet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Table$Cell.getRowKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.Table$Cell.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.4000004036669102
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.AbstractTable.put(com.google.common.collect.AbstractTable$R, com.google.common.collect.AbstractTable$C, com.google.common.collect.AbstractTable$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Table$Cell.getColumnKey()
Útil
Método: com.google.common.collect.Table$Cell.getRowKey()
Útil
Método: com.google.common.collect.Table$Cell.getValue()
Útil
Percentual de Automatização: 0.75
Corretude: 1.0
F-Measure: 0.8571428571428571
************************ Método Avaliado: com.google.common.collect.AbstractTable$CellSet.remove(java.lang.Object) ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table.rowMap()
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Maps.safeGet(java.util.Map, java.lang.Object)
java.util.Map.entrySet()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
com.google.common.collect.Maps.immutableEntry(null, null)
safeRemove
Chamada: com.google.common.collect.Table.rowMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Table$Cell.getRowKey()
Situação: Manual
Chamada: com.google.common.collect.Maps.safeGet(java.util.Map, java.lang.Object)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8749996846357039
Suporte: 0.00346821
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.Table$Cell.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.8333337538190616
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.Maps.immutableEntry(null, null)
Situação: Manual
Chamada: safeRemove
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.collect.Table$Cell.getColumnKey()
Útil
Método: com.google.common.collect.Table$Cell.getRowKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Método: com.google.common.collect.Table$Cell.getValue()
Útil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.2857142857142857
F-Measure: 0.2857142857142857
************************ Método Avaliado: com.google.common.collect.AbstractTable.containsValue(java.lang.Object) ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table.rowMap()
java.util.Map.values()
java.util.Map.containsValue(java.lang.Object)
Chamada: com.google.common.collect.Table.rowMap()
Situação: Primeira Chamada
Chamada: java.util.Map.values()
Situação: Manual
Chamada: java.util.Map.containsValue(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractTable.clear() ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractTable.cellSet()
java.util.Set.iterator()
com.google.common.collect.Iterators.clear(java.util.Iterator)
Chamada: com.google.common.collect.AbstractTable.cellSet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.clear(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractTable$CellSet.contains(java.lang.Object) ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table.rowMap()
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Maps.safeGet(java.util.Map, java.lang.Object)
java.util.Map.entrySet()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
com.google.common.collect.Maps.immutableEntry(null, null)
com.google.common.collect.Collections2.safeContains(java.util.Collection, java.lang.Object)
Chamada: com.google.common.collect.Table.rowMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Table$Cell.getRowKey()
Situação: Manual
Chamada: com.google.common.collect.Maps.safeGet(java.util.Map, java.lang.Object)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8749996846357039
Suporte: 0.00346821
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.Table$Cell.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.8333337538190616
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.Maps.immutableEntry(null, null)
Situação: Manual
Chamada: com.google.common.collect.Collections2.safeContains(java.util.Collection, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.collect.Table$Cell.getColumnKey()
Útil
Método: com.google.common.collect.Table$Cell.getRowKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Método: com.google.common.collect.Table$Cell.getValue()
Útil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.2857142857142857
F-Measure: 0.2857142857142857
************************ Método Avaliado: cellIterator ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ArrayTable.size()
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
java.util.List.get(I)
com.google.common.collect.ArrayTable.at(I, I)
Chamada: com.google.common.collect.ArrayTable.size()
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ArrayTable.at(I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Útil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.6
Corretude: 0.5
F-Measure: 0.5454545454545454
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable.getCell(I) ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableTable.rowKeySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.ImmutableTable.columnKeySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.ImmutableTable.cellOf(com.google.common.collect.DenseImmutableTable$R, com.google.common.collect.DenseImmutableTable$C, com.google.common.collect.DenseImmutableTable$V)
Chamada: com.google.common.collect.ImmutableTable.rowKeySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.ImmutableTable.columnKeySet()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.collect.ImmutableTable.cellOf(com.google.common.collect.DenseImmutableTable$R, com.google.common.collect.DenseImmutableTable$C, com.google.common.collect.DenseImmutableTable$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.collect.RegularImmutableTable$CellSet.iterator() ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable.getValue(I) ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.values()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
com.google.common.collect.ImmutableMap.values()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
Chamada: com.google.common.collect.ImmutableMap.values()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.ImmutableMap.values()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.4
Corretude: 0.25
F-Measure: 0.3076923076923077
************************ Método Avaliado: com.google.common.collect.SparseImmutableTable.getCell(I) ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableTable.cellOf(com.google.common.collect.SparseImmutableTable$R, com.google.common.collect.SparseImmutableTable$C, com.google.common.collect.SparseImmutableTable$V)
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5624990539047245
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.ImmutableTable.cellOf(com.google.common.collect.SparseImmutableTable$R, com.google.common.collect.SparseImmutableTable$C, com.google.common.collect.SparseImmutableTable$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.List.size()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6
Corretude: 0.2727272727272727
F-Measure: 0.37499999999999994
************************ Método Avaliado: next ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Tables.immutableCell(com.google.common.collect.StandardTable$R, com.google.common.collect.StandardTable$C, com.google.common.collect.StandardTable$V)
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.15075368016211577
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1830064428297795
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2666663975553932
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: com.google.common.collect.Tables.immutableCell(com.google.common.collect.StandardTable$R, com.google.common.collect.StandardTable$C, com.google.common.collect.StandardTable$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.6666666666666666
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.Tables$TransformedTable.cellIterator() ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table.cellSet()
java.util.Set.iterator()
com.google.common.collect.Tables$TransformedTable.cellFunction()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Chamada: com.google.common.collect.Table.cellSet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.Tables$TransformedTable.cellFunction()
Situação: Manual
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.collect.Table$Cell.getColumnKey()
Inútil
Método: com.google.common.collect.Table$Cell.getRowKey()
Inútil
Método: com.google.common.collect.Table$Cell.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Tables$TransposeTable.cellIterator() ************************
*Commit: commit 252e992199fdb7735e6303b289c7afde4fb2d797 1362157906 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table.cellSet()
java.util.Set.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Chamada: com.google.common.collect.Table.cellSet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.collect.Table$Cell.getColumnKey()
Inútil
Método: com.google.common.collect.Table$Cell.getRowKey()
Inútil
Método: com.google.common.collect.Table$Cell.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Iterables.removeFirstMatching(java.lang.Iterable, com.google.common.base.Predicate) ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.26923103794390735
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.base.Predicate.apply(null)
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.8
Corretude: 1.0
F-Measure: 0.888888888888889
************************ Método Avaliado: com.google.common.collect.Maps$FilteredMapValues.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.collect.Maps.valuePredicateOnEntries(com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.valuePredicateOnEntries(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$FilteredMapValues.remove(java.lang.Object) ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.base.Predicates.equalTo(java.lang.Object)
com.google.common.collect.Maps.valuePredicateOnEntries(com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
removeFirstMatching
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.equalTo(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Maps.valuePredicateOnEntries(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: removeFirstMatching
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$AsMap.createValues() ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
java.util.Collection.isEmpty()
java.util.Collection.equals(java.lang.Object)
java.util.Collection.size()
java.util.Map$Entry.getValue()
java.util.Collection.size()
java.util.Iterator.remove()
java.util.Collection.clear()
com.google.common.base.Predicates.in(java.util.Collection)
valuePredicateOnEntries
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
valuePredicateOnEntries
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Primeira Chamada
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.43333440977842724
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.521738787050712
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.608696567864768
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3666668012223034
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3666668012223034
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: java.util.Collection.equals(java.lang.Object)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.15555573496307118
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.8333358562540683
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Collection.clear()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.14084582715038632
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: valuePredicateOnEntries
Situação: Manual
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Situação: Manual
Chamada: valuePredicateOnEntries
Situação: Manual
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Collection.clear()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map.entrySet()
Útil
Método: java.util.Collection.size()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.42857142857142855
Corretude: 0.8888888888888888
F-Measure: 0.5783132530120482
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap$AsMap.createEntrySet() ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
java.util.Collection.isEmpty()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
com.google.common.collect.AbstractIterator.endOfData()
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
com.google.common.base.Predicates.in(java.util.Collection)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
null.iterator()
com.google.common.collect.Iterators.size(java.util.Iterator)
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Primeira Chamada
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.43333440977842724
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.521738787050712
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.608696567864768
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3666668012223034
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3666668012223034
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.in(java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.FilteredEntryMultimap.removeIf(com.google.common.base.Predicate)
Situação: Manual
Chamada: null.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.size(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map.entrySet()
Útil
Método: java.util.Collection.size()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.29411764705882354
Corretude: 0.7142857142857143
F-Measure: 0.4166666666666667
************************ Método Avaliado: com.google.common.collect.Iterables.removeFirstMatching(java.lang.Iterable, com.google.common.base.Predicate) ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Predicate.apply(null)
java.util.Iterator.remove()
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Predicate)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.26923103794390735
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.base.Predicate.apply(null)
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.8
Corretude: 1.0
F-Measure: 0.888888888888889
************************ Método Avaliado: com.google.common.collect.Maps$FilteredMapValues.removeIf(com.google.common.base.Predicate) ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.collect.Maps.valuePredicateOnEntries(com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.valuePredicateOnEntries(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$FilteredMapValues.remove(java.lang.Object) ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
com.google.common.base.Predicates.equalTo(java.lang.Object)
com.google.common.collect.Maps.valuePredicateOnEntries(com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
removeFirstMatching
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.equalTo(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Maps.valuePredicateOnEntries(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: removeFirstMatching
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryNavigableMap.descendingEntryIterator() ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.NavigableMap.descendingMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
com.google.common.collect.Iterators.filter(java.util.Iterator, com.google.common.base.Predicate)
Chamada: java.util.NavigableMap.descendingMap()
Situação: Primeira Chamada
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.filter(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$FilteredEntryNavigableMap.entryIterator() ************************
*Commit: commit 155728d070ac6f2d2ca22644f5c5affea72d7feb 1362158011 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.SortedMap.entrySet()
java.util.Set.iterator()
com.google.common.collect.Iterators.filter(java.util.Iterator, com.google.common.base.Predicate)
Chamada: java.util.SortedMap.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.filter(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createValues() ************************
*Commit: commit e17ee922de0d2285ff8bf8212823c33d8589512d 1362158162 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getValue()
com.google.common.collect.LinkedListMultimap$NodeIterator.setValue(com.google.common.collect.LinkedListMultimap$V)
Chamada: java.util.Map$Entry.getValue()
Situação: Primeira Chamada
Chamada: com.google.common.collect.LinkedListMultimap$NodeIterator.setValue(com.google.common.collect.LinkedListMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createKeySet() ************************
*Commit: commit e17ee922de0d2285ff8bf8212823c33d8589512d 1362158162 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
java.util.List.isEmpty()
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
Situação: Manual
Chamada: java.util.List.isEmpty()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createAsMap() ************************
*Commit: commit e17ee922de0d2285ff8bf8212823c33d8589512d 1362158162 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createValues() ************************
*Commit: commit e17ee922de0d2285ff8bf8212823c33d8589512d 1362158162 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getValue()
com.google.common.collect.LinkedListMultimap$NodeIterator.setValue(com.google.common.collect.LinkedListMultimap$V)
Chamada: java.util.Map$Entry.getValue()
Situação: Primeira Chamada
Chamada: com.google.common.collect.LinkedListMultimap$NodeIterator.setValue(com.google.common.collect.LinkedListMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createKeySet() ************************
*Commit: commit e17ee922de0d2285ff8bf8212823c33d8589512d 1362158162 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
java.util.List.isEmpty()
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
Situação: Manual
Chamada: java.util.List.isEmpty()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createAsMap() ************************
*Commit: commit e17ee922de0d2285ff8bf8212823c33d8589512d 1362158162 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.hash.BloomFilter.mergeWith(com.google.common.hash.BloomFilter) ************************
*Commit: commit a1858510da0d99dfc3e3622741d2134fb22e18c1 1362158216 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.BloomFilter)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.hash.BloomFilterStrategies$BitArray.size()
com.google.common.hash.BloomFilterStrategies$BitArray.size()
com.google.common.hash.BloomFilterStrategies$BitArray.size()
com.google.common.hash.BloomFilterStrategies$BitArray.size()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.Object.equals(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.Object.equals(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
mergeWith
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.BloomFilter)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.hash.BloomFilterStrategies$BitArray.size()
Situação: Manual
Chamada: com.google.common.hash.BloomFilterStrategies$BitArray.size()
Situação: Manual
Chamada: com.google.common.hash.BloomFilterStrategies$BitArray.size()
Situação: Manual
Chamada: com.google.common.hash.BloomFilterStrategies$BitArray.size()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2342335806240454
Suporte: 0.00429397
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2342335806240454
Suporte: 0.00429397
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.13793081848988292
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2342335806240454
Suporte: 0.00429397
F-Measure Suporte e Confiança: 0.009
Chamada: mergeWith
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Útil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Útil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.6666666666666666
F-Measure: 0.4444444444444444
************************ Método Avaliado: com.google.common.hash.BloomFilterStrategies$BitArray.mergeWith(com.google.common.hash.BloomFilterStrategies$BitArray) ************************
*Commit: commit a1858510da0d99dfc3e3622741d2134fb22e18c1 1362158216 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.Long.bitCount(J)
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: java.lang.Long.bitCount(J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.putAll(com.google.common.collect.Multimap) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.LinkedListMultimap.put(com.google.common.collect.LinkedListMultimap$K, com.google.common.collect.LinkedListMultimap$V)
Chamada: com.google.common.collect.Multimap.entries()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.LinkedListMultimap.put(com.google.common.collect.LinkedListMultimap$K, com.google.common.collect.LinkedListMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.4
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap$MultisetView.remove(java.lang.Object, I) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z)
com.google.common.collect.LinkedListMultimap$MultisetView.count(java.lang.Object)
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.remove()
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Primeira Chamada
Chamada: com.google.common.collect.LinkedListMultimap$MultisetView.count(java.lang.Object)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.07216507072497783
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.4
F-Measure: 0.4444444444444445
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.equals(java.lang.Object) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.asMap()
com.google.common.collect.Multimap.asMap()
java.util.Map.equals(java.lang.Object)
Chamada: com.google.common.collect.LinkedListMultimap.asMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.containsEntry(java.lang.Object, java.lang.Object) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.remove(java.lang.Object, java.lang.Object) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
java.util.Iterator.remove()
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.4444444444444444
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.asMap() ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.keySet() ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
java.util.List.isEmpty()
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
Situação: Manual
Chamada: java.util.List.isEmpty()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.putAll(com.google.common.collect.Multimap) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.LinkedListMultimap.put(com.google.common.collect.LinkedListMultimap$K, com.google.common.collect.LinkedListMultimap$V)
Chamada: com.google.common.collect.Multimap.entries()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.LinkedListMultimap.put(com.google.common.collect.LinkedListMultimap$K, com.google.common.collect.LinkedListMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.4
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap$MultisetView.remove(java.lang.Object, I) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z)
com.google.common.collect.LinkedListMultimap$MultisetView.count(java.lang.Object)
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.remove()
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Primeira Chamada
Chamada: com.google.common.collect.LinkedListMultimap$MultisetView.count(java.lang.Object)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.07216507072497783
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.4
F-Measure: 0.4444444444444445
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.equals(java.lang.Object) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.asMap()
com.google.common.collect.Multimap.asMap()
java.util.Map.equals(java.lang.Object)
Chamada: com.google.common.collect.LinkedListMultimap.asMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.containsEntry(java.lang.Object, java.lang.Object) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.remove(java.lang.Object, java.lang.Object) ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
java.util.Iterator.remove()
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.4444444444444444
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.asMap() ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.keySet() ************************
*Commit: commit 6122e688a7549b4e164ed23720f2a5b5ac0a266c 1362158271 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
java.util.List.isEmpty()
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
Situação: Manual
Chamada: java.util.List.isEmpty()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets.createEntrySet() ************************
*Commit: commit 1a3a560da39ad9c737af0d22df34ce7e42817546 1362276755 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableSet.of(com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$V)
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.750001513752441
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8750018921905511
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5624990539047245
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableSet.of(com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.ImmutableSet.iterator()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.8333333333333334
Corretude: 0.8333333333333334
F-Measure: 0.8333333333333334
************************ Método Avaliado: com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets.get(java.lang.Object) ************************
*Commit: commit 1a3a560da39ad9c737af0d22df34ce7e42817546 1362276755 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableSet.of(com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$V)
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.of(com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableMap.of()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createValues() ************************
*Commit: commit 3f948ef892b1207193cd73b213fb06e55bd30178 1362291496 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getValue()
com.google.common.collect.LinkedListMultimap$NodeIterator.setValue(com.google.common.collect.LinkedListMultimap$V)
Chamada: java.util.Map$Entry.getValue()
Situação: Primeira Chamada
Chamada: com.google.common.collect.LinkedListMultimap$NodeIterator.setValue(com.google.common.collect.LinkedListMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createKeySet() ************************
*Commit: commit 3f948ef892b1207193cd73b213fb06e55bd30178 1362291496 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
java.util.List.isEmpty()
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
Situação: Manual
Chamada: java.util.List.isEmpty()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createAsMap() ************************
*Commit: commit 3f948ef892b1207193cd73b213fb06e55bd30178 1362291496 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createValues() ************************
*Commit: commit 3f948ef892b1207193cd73b213fb06e55bd30178 1362291496 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getValue()
com.google.common.collect.LinkedListMultimap$NodeIterator.setValue(com.google.common.collect.LinkedListMultimap$V)
Chamada: java.util.Map$Entry.getValue()
Situação: Primeira Chamada
Chamada: com.google.common.collect.LinkedListMultimap$NodeIterator.setValue(com.google.common.collect.LinkedListMultimap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createKeySet() ************************
*Commit: commit 3f948ef892b1207193cd73b213fb06e55bd30178 1362291496 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
java.util.List.isEmpty()
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.LinkedListMultimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.LinkedListMultimap.removeAll(java.lang.Object)
Situação: Manual
Chamada: java.util.List.isEmpty()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimap.createAsMap() ************************
*Commit: commit 3f948ef892b1207193cd73b213fb06e55bd30178 1362291496 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.LinkedListMultimap.get(com.google.common.collect.LinkedListMultimap$K)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMapEntrySet$IndexedEntrySet.iterator() ************************
*Commit: commit fea5c4ad7429590a49cce01ce6ff226b6f15dc18 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.containsValue(java.lang.Object) ************************
*Commit: commit fea5c4ad7429590a49cce01ce6ff226b6f15dc18 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$ImprovedAbstractMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
Chamada: com.google.common.collect.Maps$ImprovedAbstractMap.values()
Situação: Primeira Chamada
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.putAll(java.util.Map) ************************
*Commit: commit fea5c4ad7429590a49cce01ce6ff226b6f15dc18 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Map)
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Map)
Situação: Primeira Chamada
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.ImmutableMapEntrySet$IndexedEntrySet.iterator() ************************
*Commit: commit fea5c4ad7429590a49cce01ce6ff226b6f15dc18 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.ImmutableMapEntrySet$IndexedEntrySet.copyIntoArray([Ljava.lang.Object;, I) ************************
*Commit: commit fea5c4ad7429590a49cce01ce6ff226b6f15dc18 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
copyIntoArray
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: copyIntoArray
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.containsValue(java.lang.Object) ************************
*Commit: commit fea5c4ad7429590a49cce01ce6ff226b6f15dc18 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$ImprovedAbstractMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
Chamada: com.google.common.collect.Maps$ImprovedAbstractMap.values()
Situação: Primeira Chamada
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.putAll(java.util.Map) ************************
*Commit: commit fea5c4ad7429590a49cce01ce6ff226b6f15dc18 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Map)
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Map)
Situação: Primeira Chamada
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse.createEntrySet() ************************
*Commit: commit fea5c4ad7429590a49cce01ce6ff226b6f15dc18 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getValue()
java.util.Map$Entry.getKey()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
Chamada: java.util.Map$Entry.getValue()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1256544784778184
Suporte: 0.00396367
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.16666666666666666
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.RegularImmutableSortedMap.createEntrySet() ************************
*Commit: commit fea5c4ad7429590a49cce01ce6ff226b6f15dc18 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.List.get(I)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableSortedMap$K, com.google.common.collect.RegularImmutableSortedMap$V)
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableSortedMap$K, com.google.common.collect.RegularImmutableSortedMap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.25
F-Measure: 0.36363636363636365
************************ Método Avaliado: com.google.common.collect.ImmutableMap.hashCode() ************************
*Commit: commit 21d3cddf5a11f2f708f1d6a94f3536d907da95d5 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.hashCode()
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.hashCode()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableEnumMap.createKeySet() ************************
*Commit: commit 21d3cddf5a11f2f708f1d6a94f3536d907da95d5 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.EnumMap.containsKey(java.lang.Object)
com.google.common.collect.ImmutableEnumMap.size()
java.util.EnumMap.keySet()
java.util.Set.iterator()
com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator)
Chamada: java.util.EnumMap.containsKey(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableEnumMap.size()
Situação: Manual
Chamada: java.util.EnumMap.keySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMap.hashCode() ************************
*Commit: commit 21d3cddf5a11f2f708f1d6a94f3536d907da95d5 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.hashCode()
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.hashCode()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet.createAsList() ************************
*Commit: commit 21d3cddf5a11f2f708f1d6a94f3536d907da95d5 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getValue()
java.util.Map$Entry.getKey()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
Chamada: java.util.Map$Entry.getValue()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1256544784778184
Suporte: 0.00396367
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.16666666666666666
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap.createEntrySet() ************************
*Commit: commit 21d3cddf5a11f2f708f1d6a94f3536d907da95d5 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet.iterator() ************************
*Commit: commit 21d3cddf5a11f2f708f1d6a94f3536d907da95d5 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.RegularImmutableMap$EntrySet.iterator() ************************
*Commit: commit 21d3cddf5a11f2f708f1d6a94f3536d907da95d5 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.RegularImmutableSortedMap$EntrySet.createAsList() ************************
*Commit: commit 21d3cddf5a11f2f708f1d6a94f3536d907da95d5 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableSortedMap.keySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.List.get(I)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableSortedMap$K, com.google.common.collect.RegularImmutableSortedMap$V)
Chamada: com.google.common.collect.RegularImmutableSortedMap.keySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableSortedMap$K, com.google.common.collect.RegularImmutableSortedMap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.RegularImmutableSortedMap$EntrySet.iterator() ************************
*Commit: commit 21d3cddf5a11f2f708f1d6a94f3536d907da95d5 1362291529 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.hash.BloomFilter.canMergeWith(com.google.common.hash.BloomFilter) ************************
*Commit: commit 9a37e924161f131c79a814da407601d0a88e0b46 1362776675 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.BloomFilter)
com.google.common.hash.BloomFilter.size()
com.google.common.hash.BloomFilter.size()
java.lang.Object.equals(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.BloomFilter)
Situação: Primeira Chamada
Chamada: com.google.common.hash.BloomFilter.size()
Situação: Manual
Chamada: com.google.common.hash.BloomFilter.size()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.13793081848988292
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap.RegularImmutableBiMap([Ljava.util.Map$Entry;) ************************
*Commit: commit 9056840286b235c0a9bef8ca757e0817c954d6ba 1362777057 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
closedTableSize
createEntryArray
createEntryArray
createEntryArray
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
checkEntryNotNull
java.lang.Object.hashCode()
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.Hashing.smear(I)
getNextInKeyBucket
getKey
java.lang.Object.equals(java.lang.Object)
checkNoConflict
getNextInValueBucket
getValue
java.lang.Object.equals(java.lang.Object)
checkNoConflict
Chamada: closedTableSize
Situação: Primeira Chamada
Chamada: createEntryArray
Situação: Manual
Chamada: createEntryArray
Situação: Manual
Chamada: createEntryArray
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: checkEntryNotNull
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Manual
Chamada: getNextInKeyBucket
Situação: Manual
Chamada: getKey
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: checkNoConflict
Situação: Manual
Chamada: getNextInValueBucket
Situação: Manual
Chamada: getValue
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.13793081848988292
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: checkNoConflict
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.lang.Object.equals(java.lang.Object)
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.lang.Object.hashCode()
Útil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Método: com.google.common.collect.Hashing.smear(I)
Útil
Percentual de Automatização: 0.2222222222222222
Corretude: 0.5
F-Measure: 0.30769230769230765
************************ Método Avaliado: RegularImmutableBiMap ************************
*Commit: commit 9056840286b235c0a9bef8ca757e0817c954d6ba 1362777057 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
closedTableSize
createEntryArray
createEntryArray
createEntryArray
getKey
getValue
java.lang.Object.hashCode()
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
com.google.common.collect.Hashing.smear(I)
getNextInKeyBucket
getKey
java.lang.Object.equals(java.lang.Object)
checkNoConflict
getNextInValueBucket
getValue
java.lang.Object.equals(java.lang.Object)
checkNoConflict
Chamada: closedTableSize
Situação: Primeira Chamada
Chamada: createEntryArray
Situação: Manual
Chamada: createEntryArray
Situação: Manual
Chamada: createEntryArray
Situação: Manual
Chamada: getKey
Situação: Manual
Chamada: getValue
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Manual
Chamada: getNextInKeyBucket
Situação: Manual
Chamada: getKey
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: checkNoConflict
Situação: Manual
Chamada: getNextInValueBucket
Situação: Manual
Chamada: getValue
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.13793081848988292
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: checkNoConflict
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Útil
Método: java.lang.Object.hashCode()
Útil
Método: com.google.common.collect.Hashing.smear(I)
Útil
Percentual de Automatização: 0.17647058823529413
Corretude: 1.0
F-Measure: 0.3
************************ Método Avaliado: RegularImmutableMap ************************
*Commit: commit 9056840286b235c0a9bef8ca757e0817c954d6ba 1362777057 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
createEntryArray
closedTableSize
createEntryArray
getKey
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
checkNoConflictInBucket
Chamada: createEntryArray
Situação: Primeira Chamada
Chamada: closedTableSize
Situação: Manual
Chamada: createEntryArray
Situação: Manual
Chamada: getKey
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: checkNoConflictInBucket
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.hashCode()
Inútil
Método: com.google.common.collect.Hashing.smear(I)
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.5
F-Measure: 0.25
************************ Método Avaliado: checkNoConflictInBucket ************************
*Commit: commit 9056840286b235c0a9bef8ca757e0817c954d6ba 1362777057 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getNextInKeyBucket
getKey
java.lang.Object.equals(java.lang.Object)
checkNoConflict
Chamada: getNextInKeyBucket
Situação: Primeira Chamada
Chamada: getKey
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: checkNoConflict
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap$Keys.getEntry(I) ************************
*Commit: commit ecce54f4fbb9d34fb4c903055fd93c4d496b6a5d 1362777115 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Collection.size()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ImmutableMultimap$K, I)
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5624990539047245
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ImmutableMultimap$K, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.List.get(I)
Útil
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Método: java.util.Collection.size()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.21428571428571427
F-Measure: 0.3
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset$EntrySet.iterator() ************************
*Commit: commit ecce54f4fbb9d34fb4c903055fd93c4d496b6a5d 1362777115 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset$EntrySet.size() ************************
*Commit: commit ecce54f4fbb9d34fb4c903055fd93c4d496b6a5d 1362777115 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
java.util.Set.size()
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.44999788075299874
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.DescendingImmutableSortedMultiset.getEntry(I) ************************
*Commit: commit ecce54f4fbb9d34fb4c903055fd93c4d496b6a5d 1362777115 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMultiset.entrySet()
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.reverse()
java.util.List.get(I)
Chamada: com.google.common.collect.ImmutableMultiset.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.reverse()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.ImmutableMultimap$Keys.getEntry(I) ************************
*Commit: commit ecce54f4fbb9d34fb4c903055fd93c4d496b6a5d 1362777115 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Collection.size()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ImmutableMultimap$K, I)
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5624990539047245
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ImmutableMultimap$K, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.List.get(I)
Útil
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Método: java.util.Collection.size()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.21428571428571427
F-Measure: 0.3
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset$EntrySet.iterator() ************************
*Commit: commit ecce54f4fbb9d34fb4c903055fd93c4d496b6a5d 1362777115 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.ImmutableMultiset$EntrySet.size() ************************
*Commit: commit ecce54f4fbb9d34fb4c903055fd93c4d496b6a5d 1362777115 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
java.util.Set.size()
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.44999788075299874
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.RegularImmutableMultiset.getEntry(I) ************************
*Commit: commit ecce54f4fbb9d34fb4c903055fd93c4d496b6a5d 1362777115 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.RegularImmutableMultiset$E, I)
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5624990539047245
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.RegularImmutableMultiset$E, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.List.size()
Inútil
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6
Corretude: 0.3
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.Maps.asMapEntryIterator(java.util.Set, com.google.common.base.Function) ************************
*Commit: commit a1940dd06109feacb7b72fed17726c329a3f54f5 1362777247 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.iterator()
com.google.common.base.Function.apply(null)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
Chamada: java.util.Set.iterator()
Situação: Primeira Chamada
Chamada: com.google.common.base.Function.apply(null)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multimaps$MapMultimap.entryIterator() ************************
*Commit: commit a1940dd06109feacb7b72fed17726c329a3f54f5 1362777247 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.Maps.asMapEntryIterator(java.util.Set, com.google.common.base.Function) ************************
*Commit: commit a1940dd06109feacb7b72fed17726c329a3f54f5 1362777247 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.iterator()
com.google.common.base.Function.apply(null)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
Chamada: java.util.Set.iterator()
Situação: Primeira Chamada
Chamada: com.google.common.base.Function.apply(null)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$K, com.google.common.collect.Maps$(Ljava/util/Set;Lcom/google/common/base/Function;)Ljava/util/Iterator;$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multimaps$MapMultimap.entryIterator() ************************
*Commit: commit a1940dd06109feacb7b72fed17726c329a3f54f5 1362777247 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.ForwardingSortedMultiset.standardLastEntry() ************************
*Commit: commit 60509b7d4f785b4b3dded5a1dcfeb51b28a9ad97 1362777386 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ForwardingSortedMultiset.descendingMultiset()
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ForwardingSortedMultiset$E, I)
Chamada: com.google.common.collect.ForwardingSortedMultiset.descendingMultiset()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.8333358562540683
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.8333358562540683
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6451616683659717
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6451616683659717
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ForwardingSortedMultiset$E, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Útil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.5714285714285714
Corretude: 0.5714285714285714
F-Measure: 0.5714285714285714
************************ Método Avaliado: com.google.common.collect.ForwardingSortedMultiset.standardPollFirstEntry() ************************
*Commit: commit 60509b7d4f785b4b3dded5a1dcfeb51b28a9ad97 1362777386 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ForwardingMultiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ForwardingSortedMultiset$E, I)
java.util.Iterator.remove()
Chamada: com.google.common.collect.ForwardingMultiset.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.4516133652794417
Suporte: 0.00693642
F-Measure Suporte e Confiança: 0.014
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.526882259492682
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9444453788579598
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ForwardingSortedMultiset$E, I)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.24731170894317414
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5714285714285714
Corretude: 0.5
F-Measure: 0.5333333333333333
************************ Método Avaliado: com.google.common.collect.ForwardingSortedMultiset.standardPollLastEntry() ************************
*Commit: commit 60509b7d4f785b4b3dded5a1dcfeb51b28a9ad97 1362777386 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ForwardingSortedMultiset.descendingMultiset()
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ForwardingSortedMultiset$E, I)
java.util.Iterator.remove()
Chamada: com.google.common.collect.ForwardingSortedMultiset.descendingMultiset()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.8333358562540683
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.8333358562540683
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6451616683659717
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6451616683659717
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ForwardingSortedMultiset$E, I)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Útil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.5714285714285714
F-Measure: 0.5333333333333333
************************ Método Avaliado: com.google.common.collect.ForwardingSortedMultiset.standardFirstEntry() ************************
*Commit: commit 60509b7d4f785b4b3dded5a1dcfeb51b28a9ad97 1362777386 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ForwardingMultiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
com.google.common.collect.Multiset$Entry.getCount()
com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ForwardingSortedMultiset$E, I)
Chamada: com.google.common.collect.ForwardingMultiset.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.4516133652794417
Suporte: 0.00693642
F-Measure Suporte e Confiança: 0.014
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.526882259492682
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9444453788579598
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.ForwardingSortedMultiset$E, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.375
F-Measure: 0.42857142857142855
************************ Método Avaliado: com.google.common.collect.ImmutableMapEntrySet$IndexedEntrySet.iterator() ************************
*Commit: commit 3e2950b1da46e4c976d2f79907bf61373770587e 1362777708 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.containsValue(java.lang.Object) ************************
*Commit: commit 3e2950b1da46e4c976d2f79907bf61373770587e 1362777708 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$ImprovedAbstractMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
Chamada: com.google.common.collect.Maps$ImprovedAbstractMap.values()
Situação: Primeira Chamada
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.putAll(java.util.Map) ************************
*Commit: commit 3e2950b1da46e4c976d2f79907bf61373770587e 1362777708 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Map)
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Map)
Situação: Primeira Chamada
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.ImmutableMapEntrySet$IndexedEntrySet.iterator() ************************
*Commit: commit 3e2950b1da46e4c976d2f79907bf61373770587e 1362777708 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.ImmutableMapEntrySet$IndexedEntrySet.copyIntoArray([Ljava.lang.Object;, I) ************************
*Commit: commit 3e2950b1da46e4c976d2f79907bf61373770587e 1362777708 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
copyIntoArray
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: copyIntoArray
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.containsValue(java.lang.Object) ************************
*Commit: commit 3e2950b1da46e4c976d2f79907bf61373770587e 1362777708 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$ImprovedAbstractMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
Chamada: com.google.common.collect.Maps$ImprovedAbstractMap.values()
Situação: Primeira Chamada
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.putAll(java.util.Map) ************************
*Commit: commit 3e2950b1da46e4c976d2f79907bf61373770587e 1362777708 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Map)
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Map)
Situação: Primeira Chamada
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse.createEntrySet() ************************
*Commit: commit 3e2950b1da46e4c976d2f79907bf61373770587e 1362777708 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getValue()
java.util.Map$Entry.getKey()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
Chamada: java.util.Map$Entry.getValue()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1256544784778184
Suporte: 0.00396367
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.16666666666666666
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.RegularImmutableSortedMap.createEntrySet() ************************
*Commit: commit 3e2950b1da46e4c976d2f79907bf61373770587e 1362777708 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.List.get(I)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableSortedMap$K, com.google.common.collect.RegularImmutableSortedMap$V)
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableSortedMap$K, com.google.common.collect.RegularImmutableSortedMap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.25
F-Measure: 0.36363636363636365
************************ Método Avaliado: com.google.common.collect.TreeTraverser$PreOrderIterator.next() ************************
*Commit: commit a07134858ae51e4caee1ff56fc475b0a4a0dc8cb 1362777770 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.LinkedList.getLast()
java.util.Iterator.next()
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.TreeTraverser$T)
java.util.Iterator.hasNext()
java.util.LinkedList.removeLast()
com.google.common.collect.TreeTraverser.children(com.google.common.collect.TreeTraverser$T)
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.LinkedList.addLast(java.util.Iterator)
Chamada: java.util.LinkedList.getLast()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.TreeTraverser$T)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.14351862753342864
Suporte: 0.00511974
F-Measure Suporte e Confiança: 0.010
Chamada: java.util.LinkedList.removeLast()
Situação: Manual
Chamada: com.google.common.collect.TreeTraverser.children(com.google.common.collect.TreeTraverser$T)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.LinkedList.addLast(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.16666666666666666
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.TreeTraverser$PostOrderIterator.computeNext() ************************
*Commit: commit a07134858ae51e4caee1ff56fc475b0a4a0dc8cb 1362777770 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.AbstractCollection.isEmpty()
java.util.LinkedList.getLast()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.TreeTraverser$PostOrderIterator.expand(com.google.common.collect.TreeTraverser$T)
java.util.LinkedList.addLast(com.google.common.collect.TreeTraverser$PostOrderNode)
java.util.LinkedList.removeLast()
com.google.common.collect.AbstractIterator.endOfData()
Chamada: java.util.AbstractCollection.isEmpty()
Situação: Primeira Chamada
Chamada: java.util.LinkedList.getLast()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.collect.TreeTraverser$PostOrderIterator.expand(com.google.common.collect.TreeTraverser$T)
Situação: Manual
Chamada: java.util.LinkedList.addLast(com.google.common.collect.TreeTraverser$PostOrderNode)
Situação: Manual
Chamada: java.util.LinkedList.removeLast()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.25
F-Measure: 0.18181818181818182
************************ Método Avaliado: com.google.common.collect.BinaryTreeTraverser$InOrderIterator.computeNext() ************************
*Commit: commit a07134858ae51e4caee1ff56fc475b0a4a0dc8cb 1362777770 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.isEmpty()
java.util.Deque.getLast()
java.util.Deque.size()
java.util.BitSet.get(I)
java.util.Deque.removeLast()
java.util.Deque.size()
java.util.BitSet.clear(I)
com.google.common.collect.BinaryTreeTraverser.rightChild(com.google.common.collect.BinaryTreeTraverser$T)
com.google.common.collect.BinaryTreeTraverser.pushIfPresent(java.util.Deque, com.google.common.base.Optional)
java.util.Deque.size()
java.util.BitSet.set(I)
com.google.common.collect.BinaryTreeTraverser.leftChild(com.google.common.collect.BinaryTreeTraverser$T)
com.google.common.collect.BinaryTreeTraverser.pushIfPresent(java.util.Deque, com.google.common.base.Optional)
com.google.common.collect.AbstractIterator.endOfData()
Chamada: java.util.Collection.isEmpty()
Situação: Primeira Chamada
Chamada: java.util.Deque.getLast()
Situação: Manual
Chamada: java.util.Deque.size()
Situação: Manual
Chamada: java.util.BitSet.get(I)
Situação: Manual
Chamada: java.util.Deque.removeLast()
Situação: Manual
Chamada: java.util.Deque.size()
Situação: Manual
Chamada: java.util.BitSet.clear(I)
Situação: Manual
Chamada: com.google.common.collect.BinaryTreeTraverser.rightChild(com.google.common.collect.BinaryTreeTraverser$T)
Situação: Manual
Chamada: com.google.common.collect.BinaryTreeTraverser.pushIfPresent(java.util.Deque, com.google.common.base.Optional)
Situação: Manual
Chamada: java.util.Deque.size()
Situação: Manual
Chamada: java.util.BitSet.set(I)
Situação: Manual
Chamada: com.google.common.collect.BinaryTreeTraverser.leftChild(com.google.common.collect.BinaryTreeTraverser$T)
Situação: Manual
Chamada: com.google.common.collect.BinaryTreeTraverser.pushIfPresent(java.util.Deque, com.google.common.base.Optional)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeTraverser$PreOrderIterator.next() ************************
*Commit: commit a07134858ae51e4caee1ff56fc475b0a4a0dc8cb 1362777770 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Deque.getLast()
java.util.Iterator.next()
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.TreeTraverser$T)
java.util.Iterator.hasNext()
java.util.Deque.removeLast()
com.google.common.collect.TreeTraverser.children(com.google.common.collect.TreeTraverser$T)
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Deque.addLast(java.util.Iterator)
Chamada: java.util.Deque.getLast()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.TreeTraverser$T)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.14351862753342864
Suporte: 0.00511974
F-Measure Suporte e Confiança: 0.010
Chamada: java.util.Deque.removeLast()
Situação: Manual
Chamada: com.google.common.collect.TreeTraverser.children(com.google.common.collect.TreeTraverser$T)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Deque.addLast(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.16666666666666666
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.TreeTraverser$PostOrderIterator.computeNext() ************************
*Commit: commit a07134858ae51e4caee1ff56fc475b0a4a0dc8cb 1362777770 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.ArrayDeque.isEmpty()
java.util.ArrayDeque.getLast()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.TreeTraverser$PostOrderIterator.expand(com.google.common.collect.TreeTraverser$T)
java.util.ArrayDeque.addLast(com.google.common.collect.TreeTraverser$PostOrderNode)
java.util.ArrayDeque.removeLast()
com.google.common.collect.AbstractIterator.endOfData()
Chamada: java.util.ArrayDeque.isEmpty()
Situação: Primeira Chamada
Chamada: java.util.ArrayDeque.getLast()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.collect.TreeTraverser$PostOrderIterator.expand(com.google.common.collect.TreeTraverser$T)
Situação: Manual
Chamada: java.util.ArrayDeque.addLast(com.google.common.collect.TreeTraverser$PostOrderNode)
Situação: Manual
Chamada: java.util.ArrayDeque.removeLast()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.25
F-Measure: 0.18181818181818182
************************ Método Avaliado: com.google.common.collect.ImmutableMap.hashCode() ************************
*Commit: commit 6b0f80d75843cd7b8623861198a9b7eee4d3eb6b 1362777959 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.hashCode()
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.hashCode()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableEnumMap.createKeySet() ************************
*Commit: commit 6b0f80d75843cd7b8623861198a9b7eee4d3eb6b 1362777959 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.EnumMap.containsKey(java.lang.Object)
com.google.common.collect.ImmutableEnumMap.size()
java.util.EnumMap.keySet()
java.util.Set.iterator()
com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator)
Chamada: java.util.EnumMap.containsKey(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableEnumMap.size()
Situação: Manual
Chamada: java.util.EnumMap.keySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMap.hashCode() ************************
*Commit: commit 6b0f80d75843cd7b8623861198a9b7eee4d3eb6b 1362777959 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.hashCode()
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.hashCode()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet.createAsList() ************************
*Commit: commit 6b0f80d75843cd7b8623861198a9b7eee4d3eb6b 1362777959 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getValue()
java.util.Map$Entry.getKey()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
Chamada: java.util.Map$Entry.getValue()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1256544784778184
Suporte: 0.00396367
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableBiMap$V, com.google.common.collect.RegularImmutableBiMap$K)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.16666666666666666
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap.createEntrySet() ************************
*Commit: commit 6b0f80d75843cd7b8623861198a9b7eee4d3eb6b 1362777959 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet.iterator() ************************
*Commit: commit 6b0f80d75843cd7b8623861198a9b7eee4d3eb6b 1362777959 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.RegularImmutableMap$EntrySet.iterator() ************************
*Commit: commit 6b0f80d75843cd7b8623861198a9b7eee4d3eb6b 1362777959 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.RegularImmutableSortedMap$EntrySet.createAsList() ************************
*Commit: commit 6b0f80d75843cd7b8623861198a9b7eee4d3eb6b 1362777959 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.RegularImmutableSortedMap.keySet()
com.google.common.collect.ImmutableCollection.asList()
java.util.List.get(I)
java.util.List.get(I)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableSortedMap$K, com.google.common.collect.RegularImmutableSortedMap$V)
Chamada: com.google.common.collect.RegularImmutableSortedMap.keySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.RegularImmutableSortedMap$K, com.google.common.collect.RegularImmutableSortedMap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.RegularImmutableSortedMap$EntrySet.iterator() ************************
*Commit: commit 6b0f80d75843cd7b8623861198a9b7eee4d3eb6b 1362777959 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.base.Splitter.splitToList(java.lang.CharSequence) ************************
*Commit: commit 9a762763962df4b2f5011857f317237a2bff5763 1362778668 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
com.google.common.base.Splitter.spliterator(java.lang.CharSequence)
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.List.add(java.lang.String)
java.util.Collections.unmodifiableList(java.util.List)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: com.google.common.base.Splitter.spliterator(java.lang.CharSequence)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.Collections.unmodifiableList(java.util.List)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.2
Corretude: 0.25
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.base.Splitter.splitToList(java.lang.CharSequence) ************************
*Commit: commit 9a762763962df4b2f5011857f317237a2bff5763 1362778668 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
com.google.common.base.Splitter.spliterator(java.lang.CharSequence)
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.List.add(java.lang.String)
java.util.Collections.unmodifiableList(java.util.List)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: com.google.common.base.Splitter.spliterator(java.lang.CharSequence)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.Collections.unmodifiableList(java.util.List)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.2
Corretude: 0.25
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.hash.BloomFilter.isCompatible(com.google.common.hash.BloomFilter) ************************
*Commit: commit c959e7d9bac0ee88adad17be15cc237ac1ba4608 1362778896 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.BloomFilter)
com.google.common.hash.BloomFilter.bitSize()
com.google.common.hash.BloomFilter.bitSize()
java.lang.Object.equals(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.BloomFilter)
Situação: Primeira Chamada
Chamada: com.google.common.hash.BloomFilter.bitSize()
Situação: Manual
Chamada: com.google.common.hash.BloomFilter.bitSize()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.13793081848988292
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: com.google.common.hash.BloomFilter.putAll(com.google.common.hash.BloomFilter) ************************
*Commit: commit c959e7d9bac0ee88adad17be15cc237ac1ba4608 1362778896 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.BloomFilter)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.hash.BloomFilter.bitSize()
com.google.common.hash.BloomFilter.bitSize()
com.google.common.hash.BloomFilter.bitSize()
com.google.common.hash.BloomFilter.bitSize()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.Object.equals(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.Object.equals(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
putAll
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.BloomFilter)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.hash.BloomFilter.bitSize()
Situação: Manual
Chamada: com.google.common.hash.BloomFilter.bitSize()
Situação: Manual
Chamada: com.google.common.hash.BloomFilter.bitSize()
Situação: Manual
Chamada: com.google.common.hash.BloomFilter.bitSize()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2342335806240454
Suporte: 0.00429397
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2342335806240454
Suporte: 0.00429397
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.13793081848988292
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2342335806240454
Suporte: 0.00429397
F-Measure Suporte e Confiança: 0.009
Chamada: putAll
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Útil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Útil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.6666666666666666
F-Measure: 0.4444444444444444
************************ Método Avaliado: com.google.common.hash.BloomFilterStrategies$BitArray.putAll(com.google.common.hash.BloomFilterStrategies$BitArray) ************************
*Commit: commit c959e7d9bac0ee88adad17be15cc237ac1ba4608 1362778896 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.Long.bitCount(J)
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: java.lang.Long.bitCount(J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.hash.Funnels$StringCharsetFunnel.hashCode() ************************
*Commit: commit c8a3113091ba181971969da60898439e18812b6b 1363287688 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
java.nio.charset.Charset.hashCode()
Chamada: java.lang.Object.hashCode()
Situação: Primeira Chamada
Chamada: java.nio.charset.Charset.hashCode()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.hashCode()
Inútil
Método: com.google.common.collect.Hashing.smear(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.hash.Funnels$SequentialFunnel.hashCode() ************************
*Commit: commit c8a3113091ba181971969da60898439e18812b6b 1363287688 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
java.lang.Object.hashCode()
Chamada: java.lang.Object.hashCode()
Situação: Primeira Chamada
Chamada: java.lang.Object.hashCode()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.lang.Object.hashCode()
Útil
Método: com.google.common.collect.Hashing.smear(I)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.cache.CacheBuilderSpec$BooleanParser.parse(com.google.common.cache.CacheBuilderSpec, java.lang.String, java.lang.String) ************************
*Commit: commit c4a6f8f55e0f07b2413540371025bb9aacee15eb 1363288805 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.isEmpty()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.Ascii.toLowerCase(java.lang.String)
java.lang.String.equals(java.lang.Object)
com.google.common.cache.CacheBuilderSpec$BooleanParser.parseBoolean(com.google.common.cache.CacheBuilderSpec, Z)
java.lang.String.equals(java.lang.Object)
com.google.common.cache.CacheBuilderSpec$BooleanParser.parseBoolean(com.google.common.cache.CacheBuilderSpec, Z)
java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Chamada: java.lang.String.isEmpty()
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.base.Ascii.toLowerCase(java.lang.String)
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.cache.CacheBuilderSpec$BooleanParser.parseBoolean(com.google.common.cache.CacheBuilderSpec, Z)
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.cache.CacheBuilderSpec$BooleanParser.parseBoolean(com.google.common.cache.CacheBuilderSpec, Z)
Situação: Manual
Chamada: java.lang.String.format(java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Útil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.5
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.containsValue(java.lang.Object) ************************
*Commit: commit d8b765c09c121ba16994df9084002bad6c620d57 1363375563 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$ImprovedAbstractMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
Chamada: com.google.common.collect.Maps$ImprovedAbstractMap.values()
Situação: Primeira Chamada
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.putAll(java.util.Map) ************************
*Commit: commit d8b765c09c121ba16994df9084002bad6c620d57 1363375563 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.4444444444444444
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.containsValue(java.lang.Object) ************************
*Commit: commit d8b765c09c121ba16994df9084002bad6c620d57 1363375563 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps$ImprovedAbstractMap.values()
java.util.Collection.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
Chamada: com.google.common.collect.Maps$ImprovedAbstractMap.values()
Situação: Primeira Chamada
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$ImprovedAbstractMap.putAll(java.util.Map) ************************
*Commit: commit d8b765c09c121ba16994df9084002bad6c620d57 1363375563 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: com.google.common.collect.Maps$ImprovedAbstractMap.put(com.google.common.collect.Maps$ImprovedAbstractMap$K, com.google.common.collect.Maps$ImprovedAbstractMap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.4444444444444444
************************ Método Avaliado: com.google.common.collect.ImmutableMap.hashCode() ************************
*Commit: commit a94293f5e2b131267792bd3af67af71c019ebc79 1363375656 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.hashCode()
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.hashCode()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.cache.CacheBuilderSpec$RecordStatsParser.parse(com.google.common.cache.CacheBuilderSpec, java.lang.String, java.lang.String) ************************
*Commit: commit b9fb572927249d885c631ceba20a2198da53de3d 1363619522 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.hash.AbstractHasher.putUnencodedChars(java.lang.CharSequence) ************************
*Commit: commit 776e8a68fb9180f23abfe9cb508b3cd6f856e56e 1363627999 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
com.google.common.hash.Hasher.putChar(C)
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: com.google.common.hash.Hasher.putChar(C)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.hash.AbstractNonStreamingHashFunction.hashUnencodedChars(java.lang.CharSequence) ************************
*Commit: commit 776e8a68fb9180f23abfe9cb508b3cd6f856e56e 1363627999 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
com.google.common.hash.AbstractNonStreamingHashFunction.newHasher(I)
java.lang.CharSequence.charAt(I)
com.google.common.hash.Hasher.putChar(C)
com.google.common.hash.Hasher.hash()
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: com.google.common.hash.AbstractNonStreamingHashFunction.newHasher(I)
Situação: Manual
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: com.google.common.hash.Hasher.putChar(C)
Situação: Manual
Chamada: com.google.common.hash.Hasher.hash()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.25
Corretude: 0.3333333333333333
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.hash.AbstractStreamingHashFunction.hashUnencodedChars(java.lang.CharSequence) ************************
*Commit: commit 776e8a68fb9180f23abfe9cb508b3cd6f856e56e 1363627999 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.hash.HashFunction.newHasher()
putUnencodedChars
hash
Chamada: com.google.common.hash.HashFunction.newHasher()
Situação: Primeira Chamada
Chamada: putUnencodedChars
Situação: Manual
Chamada: hash
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.hash.Hasher.hash()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.hash.AbstractStreamingHashFunction$AbstractStreamingHasher.putUnencodedChars(java.lang.CharSequence) ************************
*Commit: commit 776e8a68fb9180f23abfe9cb508b3cd6f856e56e 1363627999 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
com.google.common.hash.AbstractStreamingHashFunction$AbstractStreamingHasher.putChar(C)
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: com.google.common.hash.AbstractStreamingHashFunction$AbstractStreamingHasher.putChar(C)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.reflect.TypeResolver$TypeTable.where(java.util.Map) ************************
*Commit: commit 3212103020bedd2abf04927204f61f87bfcf8745 1364223743 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.builder()
com.google.common.collect.ImmutableMap$Builder.putAll(java.util.Map)
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.lang.Object.equals(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.ImmutableMap$Builder.put(java.lang.reflect.TypeVariable, java.lang.reflect.Type)
com.google.common.collect.ImmutableMap$Builder.build()
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap$Builder.putAll(java.util.Map)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.put(java.lang.reflect.TypeVariable, java.lang.reflect.Type)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.collect.ImmutableMap$Builder.build()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.375
Corretude: 0.3333333333333333
F-Measure: 0.35294117647058826
************************ Método Avaliado: com.google.common.reflect.TypeResolver$TypeTable.resolveTypeVariable(java.lang.reflect.TypeVariable, com.google.common.reflect.TypeResolver) ************************
*Commit: commit 3212103020bedd2abf04927204f61f87bfcf8745 1364223743 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.reflect.TypeResolver)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
java.lang.reflect.TypeVariable.getBounds()
java.lang.reflect.TypeVariable.getGenericDeclaration()
java.lang.reflect.TypeVariable.getName()
com.google.common.reflect.TypeResolver.resolveTypes([Ljava.lang.reflect.Type;)
com.google.common.reflect.Types.newTypeVariable(null, java.lang.String, [Ljava.lang.reflect.Type;)
com.google.common.reflect.TypeResolver.resolveType(java.lang.reflect.Type)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.reflect.TypeResolver)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Manual
Chamada: java.lang.reflect.TypeVariable.getBounds()
Situação: Manual
Chamada: java.lang.reflect.TypeVariable.getGenericDeclaration()
Situação: Manual
Chamada: java.lang.reflect.TypeVariable.getName()
Situação: Manual
Chamada: com.google.common.reflect.TypeResolver.resolveTypes([Ljava.lang.reflect.Type;)
Situação: Manual
Chamada: com.google.common.reflect.Types.newTypeVariable(null, java.lang.String, [Ljava.lang.reflect.Type;)
Situação: Manual
Chamada: com.google.common.reflect.TypeResolver.resolveType(java.lang.reflect.Type)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.WildcardType.getUpperBounds()
Inútil
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableMap.of()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.reflect.TypeResolver$TypeTable.resolve(java.lang.reflect.TypeVariable) ************************
*Commit: commit 5401a778bfddd5ff34a3902d6c756479149602e4 1364415601 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.TypeVariable.getGenericDeclaration()
java.lang.reflect.TypeVariable.getGenericDeclaration()
java.lang.Object.equals(java.lang.Object)
com.google.common.reflect.TypeResolver$TypeTable.resolveInternal(java.lang.reflect.TypeVariable, com.google.common.reflect.TypeResolver$TypeTable)
com.google.common.reflect.TypeResolver$TypeTable.resolveInternal(java.lang.reflect.TypeVariable, com.google.common.reflect.TypeResolver$TypeTable)
Chamada: java.lang.reflect.TypeVariable.getGenericDeclaration()
Situação: Primeira Chamada
Chamada: java.lang.reflect.TypeVariable.getGenericDeclaration()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.reflect.TypeResolver$TypeTable.resolveInternal(java.lang.reflect.TypeVariable, com.google.common.reflect.TypeResolver$TypeTable)
Situação: Manual
Chamada: com.google.common.reflect.TypeResolver$TypeTable.resolveInternal(java.lang.reflect.TypeVariable, com.google.common.reflect.TypeResolver$TypeTable)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.reflect.TypeResolver$TypeTable.resolveInternal(java.lang.reflect.TypeVariable, com.google.common.reflect.TypeResolver$TypeTable) ************************
*Commit: commit 5401a778bfddd5ff34a3902d6c756479149602e4 1364415601 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.get(java.lang.Object)
java.lang.reflect.TypeVariable.getBounds()
java.lang.reflect.TypeVariable.getGenericDeclaration()
java.lang.reflect.TypeVariable.getName()
com.google.common.reflect.TypeResolver.resolveTypes([Ljava.lang.reflect.Type;)
com.google.common.reflect.Types.newTypeVariable(null, java.lang.String, [Ljava.lang.reflect.Type;)
com.google.common.reflect.TypeResolver.resolveType(java.lang.reflect.Type)
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.lang.reflect.TypeVariable.getBounds()
Situação: Manual
Chamada: java.lang.reflect.TypeVariable.getGenericDeclaration()
Situação: Manual
Chamada: java.lang.reflect.TypeVariable.getName()
Situação: Manual
Chamada: com.google.common.reflect.TypeResolver.resolveTypes([Ljava.lang.reflect.Type;)
Situação: Manual
Chamada: com.google.common.reflect.Types.newTypeVariable(null, java.lang.String, [Ljava.lang.reflect.Type;)
Situação: Manual
Chamada: com.google.common.reflect.TypeResolver.resolveType(java.lang.reflect.Type)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.WildcardType.getUpperBounds()
Inútil
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableMap.of()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.reflect.ClassPath$Scanner.scanJar(java.io.File, java.lang.ClassLoader) ************************
*Commit: commit c6c66536dc903ef9e870d3c8562d25808bbe66b2 1364415833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.jar.JarFile.getManifest()
com.google.common.reflect.ClassPath$Scanner.getClassPathFromManifest(java.io.File, java.util.jar.Manifest)
com.google.common.reflect.ClassPath$Scanner.scan(java.net.URI, java.lang.ClassLoader)
java.util.jar.JarFile.entries()
java.util.Enumeration.hasMoreElements()
java.util.Enumeration.nextElement()
java.util.zip.ZipEntry.isDirectory()
java.util.zip.ZipEntry.getName()
java.lang.String.equals(java.lang.Object)
java.util.zip.ZipEntry.getName()
com.google.common.reflect.ClassPath$ResourceInfo.of(java.lang.String, java.lang.ClassLoader)
com.google.common.collect.ImmutableSortedSet$Builder.add(com.google.common.reflect.ClassPath$ResourceInfo)
java.util.zip.ZipFile.close()
Chamada: java.util.jar.JarFile.getManifest()
Situação: Primeira Chamada
Chamada: com.google.common.reflect.ClassPath$Scanner.getClassPathFromManifest(java.io.File, java.util.jar.Manifest)
Situação: Manual
Chamada: com.google.common.reflect.ClassPath$Scanner.scan(java.net.URI, java.lang.ClassLoader)
Situação: Manual
Chamada: java.util.jar.JarFile.entries()
Situação: Manual
Chamada: java.util.Enumeration.hasMoreElements()
Situação: Manual
Chamada: java.util.Enumeration.nextElement()
Situação: Manual
Chamada: java.util.zip.ZipEntry.isDirectory()
Situação: Manual
Chamada: java.util.zip.ZipEntry.getName()
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: java.util.zip.ZipEntry.getName()
Situação: Manual
Chamada: com.google.common.reflect.ClassPath$ResourceInfo.of(java.lang.String, java.lang.ClassLoader)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.add(com.google.common.reflect.ClassPath$ResourceInfo)
Situação: Manual
Chamada: java.util.zip.ZipFile.close()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.reflect.ClassPath$Scanner.scan(java.net.URI, java.lang.ClassLoader) ************************
*Commit: commit c6c66536dc903ef9e870d3c8562d25808bbe66b2 1364415833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.net.URI.getScheme()
java.lang.String.equals(java.lang.Object)
java.util.Set.add(java.net.URI)
com.google.common.reflect.ClassPath$Scanner.scanFrom(java.io.File, java.lang.ClassLoader)
Chamada: java.net.URI.getScheme()
Situação: Primeira Chamada
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: java.util.Set.add(java.net.URI)
Situação: Manual
Chamada: com.google.common.reflect.ClassPath$Scanner.scanFrom(java.io.File, java.lang.ClassLoader)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.reflect.ClassPath$Scanner.getClassPathFromManifest(java.io.File, java.util.jar.Manifest) ************************
*Commit: commit c6c66536dc903ef9e870d3c8562d25808bbe66b2 1364415833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.of()
com.google.common.collect.ImmutableSet.builder()
java.util.jar.Manifest.getMainAttributes()
java.util.jar.Attributes$Name.toString()
java.util.jar.Attributes.getValue(java.lang.String)
com.google.common.base.Splitter.split(java.lang.CharSequence)
com.google.common.reflect.ClassPath$Scanner.getClassPathEntry(java.io.File, java.lang.String)
java.util.logging.Logger.warning(java.lang.String)
com.google.common.collect.ImmutableSet$Builder.add(java.net.URI)
com.google.common.collect.ImmutableSet$Builder.build()
Chamada: com.google.common.collect.ImmutableSet.of()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.builder()
Situação: Manual
Chamada: java.util.jar.Manifest.getMainAttributes()
Situação: Manual
Chamada: java.util.jar.Attributes$Name.toString()
Situação: Manual
Chamada: java.util.jar.Attributes.getValue(java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Splitter.split(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.reflect.ClassPath$Scanner.getClassPathEntry(java.io.File, java.lang.String)
Situação: Manual
Chamada: java.util.logging.Logger.warning(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.add(java.net.URI)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet$Builder.build()
Útil
Percentual de Automatização: 0.1111111111111111
Corretude: 1.0
F-Measure: 0.19999999999999998
************************ Método Avaliado: com.google.common.reflect.ClassPath$Scanner.scanDirectory(java.io.File, java.lang.ClassLoader, java.lang.String) ************************
*Commit: commit c6c66536dc903ef9e870d3c8562d25808bbe66b2 1364415833 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.io.File.listFiles()
java.io.File.getName()
java.io.File.isDirectory()
com.google.common.reflect.ClassPath$Scanner.scanDirectory(java.io.File, java.lang.ClassLoader, java.lang.String)
java.lang.String.equals(java.lang.Object)
com.google.common.reflect.ClassPath$ResourceInfo.of(java.lang.String, java.lang.ClassLoader)
com.google.common.collect.ImmutableSortedSet$Builder.add(com.google.common.reflect.ClassPath$ResourceInfo)
Chamada: java.io.File.listFiles()
Situação: Primeira Chamada
Chamada: java.io.File.getName()
Situação: Manual
Chamada: java.io.File.isDirectory()
Situação: Manual
Chamada: com.google.common.reflect.ClassPath$Scanner.scanDirectory(java.io.File, java.lang.ClassLoader, java.lang.String)
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.reflect.ClassPath$ResourceInfo.of(java.lang.String, java.lang.ClassLoader)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.add(com.google.common.reflect.ClassPath$ResourceInfo)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.CharSequenceReader.skip(J) ************************
*Commit: commit 2643ac3c65213b1bb222d6eb971d1f282c6d2e8e 1364415987 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.io.CharSequenceReader.checkOpen()
com.google.common.io.CharSequenceReader.remaining()
java.lang.Math.min(J, J)
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: com.google.common.io.CharSequenceReader.checkOpen()
Situação: Manual
Chamada: com.google.common.io.CharSequenceReader.remaining()
Situação: Manual
Chamada: java.lang.Math.min(J, J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.CharSequenceReader.read(java.nio.CharBuffer) ************************
*Commit: commit 2643ac3c65213b1bb222d6eb971d1f282c6d2e8e 1364415987 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.nio.CharBuffer)
com.google.common.io.CharSequenceReader.checkOpen()
com.google.common.io.CharSequenceReader.hasRemaining()
java.nio.Buffer.remaining()
com.google.common.io.CharSequenceReader.remaining()
java.lang.Math.min(I, I)
java.lang.CharSequence.charAt(I)
java.nio.CharBuffer.put(C)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.nio.CharBuffer)
Situação: Primeira Chamada
Chamada: com.google.common.io.CharSequenceReader.checkOpen()
Situação: Manual
Chamada: com.google.common.io.CharSequenceReader.hasRemaining()
Situação: Manual
Chamada: java.nio.Buffer.remaining()
Situação: Manual
Chamada: com.google.common.io.CharSequenceReader.remaining()
Situação: Manual
Chamada: java.lang.Math.min(I, I)
Situação: Manual
Chamada: java.lang.CharSequence.charAt(I)
Situação: Manual
Chamada: java.nio.CharBuffer.put(C)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.CharSequence.subSequence(I, I)
Inútil
Método: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.CharSequenceReader.mark(I) ************************
*Commit: commit 2643ac3c65213b1bb222d6eb971d1f282c6d2e8e 1364415987 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.io.CharSequenceReader.checkOpen()
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: com.google.common.io.CharSequenceReader.checkOpen()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.CharSequenceReader.read([C, I, I) ************************
*Commit: commit 2643ac3c65213b1bb222d6eb971d1f282c6d2e8e 1364415987 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.io.CharSequenceReader.checkOpen()
com.google.common.io.CharSequenceReader.hasRemaining()
com.google.common.io.CharSequenceReader.remaining()
java.lang.Math.min(I, I)
java.lang.CharSequence.charAt(I)
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Primeira Chamada
Chamada: com.google.common.io.CharSequenceReader.checkOpen()
Situação: Manual
Chamada: com.google.common.io.CharSequenceReader.hasRemaining()
Situação: Manual
Chamada: com.google.common.io.CharSequenceReader.remaining()
Situação: Manual
Chamada: java.lang.Math.min(I, I)
Situação: Manual
Chamada: java.lang.CharSequence.charAt(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Inútil
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.CharSource$CharSequenceCharSource.readFirstLine() ************************
*Commit: commit 2643ac3c65213b1bb222d6eb971d1f282c6d2e8e 1364415987 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.io.CharSource$CharSequenceCharSource.lines()
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
Chamada: com.google.common.io.CharSource$CharSequenceCharSource.lines()
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 1.0
F-Measure: 0.8
************************ Método Avaliado: com.google.common.io.CharSource$CharSequenceCharSource.lines() ************************
*Commit: commit 2643ac3c65213b1bb222d6eb971d1f282c6d2e8e 1364415987 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.split(java.lang.CharSequence)
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.hasNext()
java.lang.String.isEmpty()
com.google.common.collect.AbstractIterator.endOfData()
Chamada: com.google.common.base.Splitter.split(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.304348283932384
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.String.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.5
Corretude: 0.6666666666666666
F-Measure: 0.5714285714285715
************************ Método Avaliado: com.google.common.io.CharSource$CharSequenceCharSource.toString() ************************
*Commit: commit 2643ac3c65213b1bb222d6eb971d1f282c6d2e8e 1364415987 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.subSequence(I, I)
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.subSequence(I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.util.concurrent.ExecutionQueue$RunnableExecutorPair.run() ************************
*Commit: commit efa4d2b38592c8ab69b560733eac47d3914e78e7 1365438492 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.locks.ReentrantLock.isHeldByCurrentThread()
java.util.concurrent.locks.ReentrantLock.unlock()
java.lang.Runnable.run()
Chamada: java.util.concurrent.locks.ReentrantLock.isHeldByCurrentThread()
Situação: Primeira Chamada
Chamada: java.util.concurrent.locks.ReentrantLock.unlock()
Situação: Manual
Chamada: java.lang.Runnable.run()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.MapMakerInternalMap$Segment.postWriteCleanup()
Inútil
Método: com.google.common.cache.LocalCache$Segment.postWriteCleanup()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.util.concurrent.ExecutionQueue$RunnableExecutorPair.submit() ************************
*Commit: commit efa4d2b38592c8ab69b560733eac47d3914e78e7 1365438492 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.locks.ReentrantLock.lock()
java.util.concurrent.Executor.execute(java.lang.Runnable)
java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)
java.util.concurrent.locks.ReentrantLock.isHeldByCurrentThread()
java.util.concurrent.locks.ReentrantLock.unlock()
Chamada: java.util.concurrent.locks.ReentrantLock.lock()
Situação: Primeira Chamada
Chamada: java.util.concurrent.Executor.execute(java.lang.Runnable)
Situação: Manual
Chamada: java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)
Situação: Manual
Chamada: java.util.concurrent.locks.ReentrantLock.isHeldByCurrentThread()
Situação: Manual
Chamada: java.util.concurrent.locks.ReentrantLock.unlock()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9750004162812911
Suporte: 0.00644096
F-Measure Suporte e Confiança: 0.013
Corretude/Utilidade dos Métodos
Método: java.util.concurrent.atomic.AtomicReferenceArray.length()
Inútil
Método: java.util.concurrent.locks.ReentrantLock.unlock()
Útil
Método: java.util.concurrent.atomic.AtomicReferenceArray.get(I)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.3333333333333333
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.util.concurrent.ExecutionQueue.execute() ************************
*Commit: commit efa4d2b38592c8ab69b560733eac47d3914e78e7 1365438492 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.ConcurrentLinkedQueue.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.util.concurrent.ExecutionQueue$RunnableExecutorPair.submit()
java.util.Iterator.remove()
Chamada: java.util.concurrent.ConcurrentLinkedQueue.iterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.util.concurrent.ExecutionQueue$RunnableExecutorPair.submit()
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.5
F-Measure: 0.5
************************ Método Avaliado: com.google.common.io.CharStreams$NullWriter.append(java.lang.CharSequence, I, I) ************************
*Commit: commit 8768c424f9809dd34ded53b222610ff4d0992b86 1365439022 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.CharStreams$NullWriter.write(java.lang.String, I, I) ************************
*Commit: commit 8768c424f9809dd34ded53b222610ff4d0992b86 1365439022 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.util.concurrent.RateLimiter.createBursty(com.google.common.util.concurrent.RateLimiter$SleepingTicker, D, J, java.util.concurrent.TimeUnit) ************************
*Commit: commit f8d47319ee710ecbf55eab44016a8f3355c6d7b1 1366041698 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.TimeUnit.toNanos(J)
com.google.common.util.concurrent.RateLimiter.setRate(D)
Chamada: java.util.concurrent.TimeUnit.toNanos(J)
Situação: Primeira Chamada
Chamada: com.google.common.util.concurrent.RateLimiter.setRate(D)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Thread.currentThread()
Inútil
Método: java.lang.System.nanoTime()
Inútil
Método: java.lang.Thread.interrupt()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.util.concurrent.Callables.threadRenaming(java.util.concurrent.Callable, com.google.common.base.Supplier) ************************
*Commit: commit e4ddb97b0403cf90f18ea70823e2224c93234d8b 1366041698 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Supplier)
com.google.common.base.Preconditions.checkNotNull(java.util.concurrent.Callable)
java.lang.Thread.currentThread()
java.lang.Thread.getName()
com.google.common.base.Supplier.get()
com.google.common.util.concurrent.Callables.trySetName(java.lang.String, java.lang.Thread)
java.util.concurrent.Callable.call()
com.google.common.util.concurrent.Callables.trySetName(java.lang.String, java.lang.Thread)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Supplier)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.concurrent.Callable)
Situação: Manual
Chamada: java.lang.Thread.currentThread()
Situação: Manual
Chamada: java.lang.Thread.getName()
Situação: Manual
Chamada: com.google.common.base.Supplier.get()
Situação: Manual
Chamada: com.google.common.util.concurrent.Callables.trySetName(java.lang.String, java.lang.Thread)
Situação: Manual
Chamada: java.util.concurrent.Callable.call()
Situação: Manual
Chamada: com.google.common.util.concurrent.Callables.trySetName(java.lang.String, java.lang.Thread)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Thread.interrupt()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.util.concurrent.Callables.threadRenaming(java.lang.Runnable, com.google.common.base.Supplier) ************************
*Commit: commit e4ddb97b0403cf90f18ea70823e2224c93234d8b 1366041698 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Supplier)
com.google.common.base.Preconditions.checkNotNull(java.lang.Runnable)
java.lang.Thread.currentThread()
java.lang.Thread.getName()
com.google.common.base.Supplier.get()
com.google.common.util.concurrent.Callables.trySetName(java.lang.String, java.lang.Thread)
java.lang.Runnable.run()
com.google.common.util.concurrent.Callables.trySetName(java.lang.String, java.lang.Thread)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Supplier)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.Runnable)
Situação: Manual
Chamada: java.lang.Thread.currentThread()
Situação: Manual
Chamada: java.lang.Thread.getName()
Situação: Manual
Chamada: com.google.common.base.Supplier.get()
Situação: Manual
Chamada: com.google.common.util.concurrent.Callables.trySetName(java.lang.String, java.lang.Thread)
Situação: Manual
Chamada: java.lang.Runnable.run()
Situação: Manual
Chamada: com.google.common.util.concurrent.Callables.trySetName(java.lang.String, java.lang.Thread)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Thread.interrupt()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.util.concurrent.WrappingExecutorService.wrapTasks(java.util.Collection) ************************
*Commit: commit e4ddb97b0403cf90f18ea70823e2224c93234d8b 1366041698 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.builder()
com.google.common.util.concurrent.WrappingExecutorService.wrapTask(java.util.concurrent.Callable)
com.google.common.collect.ImmutableList$Builder.add(java.util.concurrent.Callable)
com.google.common.collect.ImmutableList$Builder.build()
Chamada: com.google.common.collect.ImmutableList.builder()
Situação: Primeira Chamada
Chamada: com.google.common.util.concurrent.WrappingExecutorService.wrapTask(java.util.concurrent.Callable)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.add(java.util.concurrent.Callable)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableList$Builder.build()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.base.CharMatcherTest.reallyTestAllMatches(com.google.common.base.CharMatcher, java.lang.CharSequence) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
assertTrue
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
java.lang.CharSequence.length()
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
java.lang.CharSequence.length()
com.google.common.base.CharMatcher.lastIndexIn(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.matchesAnyOf(java.lang.CharSequence)
assertTrue
com.google.common.base.CharMatcher.matchesAllOf(java.lang.CharSequence)
assertTrue
com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
assertFalse
com.google.common.base.CharMatcher.removeFrom(java.lang.CharSequence)
assertEquals
java.lang.CharSequence.length()
com.google.common.base.Strings.repeat(java.lang.String, I)
com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, C)
assertEquals
java.lang.CharSequence.length()
com.google.common.base.Strings.repeat(java.lang.String, I)
com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.trimFrom(java.lang.CharSequence)
assertEquals
java.lang.CharSequence.length()
com.google.common.base.CharMatcher.countIn(java.lang.CharSequence)
assertEquals
Chamada: java.lang.CharSequence.charAt(I)
Situação: Primeira Chamada
Chamada: com.google.common.base.CharMatcher.matches(C)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3928568339287414
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.base.CharMatcher.lastIndexIn(java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matchesAnyOf(java.lang.CharSequence)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matchesAllOf(java.lang.CharSequence)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.base.CharMatcher.removeFrom(java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.base.Strings.repeat(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, C)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.base.Strings.repeat(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.trimFrom(java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.base.CharMatcher.countIn(java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.CharSequence.subSequence(I, I)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Útil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Inútil
Percentual de Automatização: 0.02857142857142857
Corretude: 0.25
F-Measure: 0.05128205128205128
************************ Método Avaliado: com.google.common.base.CharMatcherTest.assertEqualsSame(java.lang.String, java.lang.String, java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.equals(java.lang.Object)
assertSame
assertEquals
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Primeira Chamada
Chamada: assertSame
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.CharMatcherTest.reallyTestOneCharMatch(com.google.common.base.CharMatcher, java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.charAt(I)
com.google.common.base.CharMatcher.matches(C)
assertTrue
java.lang.String.charAt(I)
com.google.common.base.CharMatcher.apply(java.lang.Character)
assertTrue
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
com.google.common.base.CharMatcher.lastIndexIn(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.matchesAnyOf(java.lang.CharSequence)
assertTrue
com.google.common.base.CharMatcher.matchesAllOf(java.lang.CharSequence)
assertTrue
com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
assertFalse
com.google.common.base.CharMatcher.removeFrom(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, C)
assertEquals
com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.trimFrom(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.countIn(java.lang.CharSequence)
assertEquals
Chamada: java.lang.String.charAt(I)
Situação: Primeira Chamada
Chamada: com.google.common.base.CharMatcher.matches(C)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.lang.String.charAt(I)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.apply(java.lang.Character)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.lastIndexIn(java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matchesAnyOf(java.lang.CharSequence)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matchesAllOf(java.lang.CharSequence)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.base.CharMatcher.removeFrom(java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, C)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.trimFrom(java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.countIn(java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.CharMatcherTest.reallyTestNoMatches(com.google.common.base.CharMatcher, java.lang.CharSequence) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.charAt(I)
com.google.common.base.CharMatcher.matches(C)
assertFalse
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
java.lang.CharSequence.length()
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
java.lang.CharSequence.length()
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
fail
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
fail
com.google.common.base.CharMatcher.lastIndexIn(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.matchesAnyOf(java.lang.CharSequence)
assertFalse
com.google.common.base.CharMatcher.matchesAllOf(java.lang.CharSequence)
assertFalse
com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
assertTrue
java.lang.CharSequence.toString()
com.google.common.base.CharMatcher.removeFrom(java.lang.CharSequence)
assertEquals
java.lang.CharSequence.toString()
com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, C)
assertEquals
java.lang.CharSequence.toString()
com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, java.lang.CharSequence)
assertEquals
java.lang.CharSequence.toString()
com.google.common.base.CharMatcher.trimFrom(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.countIn(java.lang.CharSequence)
assertEquals
Chamada: java.lang.CharSequence.charAt(I)
Situação: Primeira Chamada
Chamada: com.google.common.base.CharMatcher.matches(C)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3928568339287414
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.base.CharMatcher.lastIndexIn(java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matchesAnyOf(java.lang.CharSequence)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matchesAllOf(java.lang.CharSequence)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.lang.CharSequence.toString()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.base.CharMatcher.removeFrom(java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.CharSequence.toString()
Situação: Manual
Chamada: com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, C)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.CharSequence.toString()
Situação: Manual
Chamada: com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.CharSequence.toString()
Situação: Manual
Chamada: com.google.common.base.CharMatcher.trimFrom(java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.countIn(java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.CharSequence.subSequence(I, I)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Útil
Método: java.lang.CharSequence.toString()
Útil
Método: java.lang.CharSequence.charAt(I)
Inútil
Percentual de Automatização: 0.05263157894736842
Corretude: 0.5
F-Measure: 0.09523809523809525
************************ Método Avaliado: com.google.common.base.CharMatcherTest.randomChars(java.util.Random, I) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Random.nextInt(I)
java.util.Set.contains(java.lang.Object)
java.util.Set.add(java.lang.Character)
java.util.Set.size()
java.util.Arrays.sort([C)
Chamada: java.util.Random.nextInt(I)
Situação: Primeira Chamada
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: java.util.Set.add(java.lang.Character)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: java.util.Arrays.sort([C)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Set.contains(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.CharMatcherTest.checkExactMatches(com.google.common.base.CharMatcher, [C) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newHashSetWithExpectedSize(I)
java.util.Set.add(java.lang.Character)
java.util.Set.contains(java.lang.Object)
com.google.common.base.CharMatcher.matches(C)
assertFalse
Chamada: com.google.common.collect.Sets.newHashSetWithExpectedSize(I)
Situação: Primeira Chamada
Chamada: java.util.Set.add(java.lang.Character)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matches(C)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.contains(java.lang.Object)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.CharMatcherTest.reallyTestOneCharNoMatch(com.google.common.base.CharMatcher, java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.charAt(I)
com.google.common.base.CharMatcher.matches(C)
assertFalse
java.lang.String.charAt(I)
com.google.common.base.CharMatcher.apply(java.lang.Character)
assertFalse
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
assertEquals
com.google.common.base.CharMatcher.lastIndexIn(java.lang.CharSequence)
assertEquals
com.google.common.base.CharMatcher.matchesAnyOf(java.lang.CharSequence)
assertFalse
com.google.common.base.CharMatcher.matchesAllOf(java.lang.CharSequence)
assertFalse
com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
assertTrue
com.google.common.base.CharMatcher.removeFrom(java.lang.CharSequence)
assertSame
com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, C)
assertSame
com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, java.lang.CharSequence)
assertSame
com.google.common.base.CharMatcher.trimFrom(java.lang.CharSequence)
assertSame
com.google.common.base.CharMatcher.countIn(java.lang.CharSequence)
assertSame
Chamada: java.lang.String.charAt(I)
Situação: Primeira Chamada
Chamada: com.google.common.base.CharMatcher.matches(C)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.lang.String.charAt(I)
Situação: Manual
Chamada: com.google.common.base.CharMatcher.apply(java.lang.Character)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.indexIn(java.lang.CharSequence, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.lastIndexIn(java.lang.CharSequence)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matchesAnyOf(java.lang.CharSequence)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matchesAllOf(java.lang.CharSequence)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.base.CharMatcher.matchesNoneOf(java.lang.CharSequence)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.base.CharMatcher.removeFrom(java.lang.CharSequence)
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, C)
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.base.CharMatcher.replaceFrom(java.lang.CharSequence, java.lang.CharSequence)
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.base.CharMatcher.trimFrom(java.lang.CharSequence)
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.base.CharMatcher.countIn(java.lang.CharSequence)
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.FunctionsTest.testComposeOfPredicateAndFunctionIsAssociative() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(java.lang.Float, java.lang.String, java.lang.Float, java.lang.String, java.lang.Float, java.lang.String, java.lang.Float, java.lang.String)
com.google.common.base.Predicates.equalTo(java.lang.Integer)
com.google.common.base.Functions.forMap(java.util.Map, java.lang.String)
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
java.lang.Object.hashCode()
java.lang.Object.hashCode()
assertEquals
com.google.common.base.Predicate.apply(java.lang.Float)
com.google.common.base.Predicate.apply(java.lang.Float)
assertEquals
com.google.common.base.Predicate.apply(java.lang.Float)
com.google.common.base.Predicate.apply(java.lang.Float)
assertEquals
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.Float, java.lang.String, java.lang.Float, java.lang.String, java.lang.Float, java.lang.String, java.lang.Float, java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.equalTo(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.base.Functions.forMap(java.util.Map, java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.base.Predicates.compose(com.google.common.base.Predicate, com.google.common.base.Function)
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(java.lang.Float)
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(java.lang.Float)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(java.lang.Float)
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(java.lang.Float)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.hashCode()
Útil
Método: com.google.common.collect.Hashing.smear(I)
Inútil
Percentual de Automatização: 0.06666666666666667
Corretude: 0.5
F-Measure: 0.11764705882352941
************************ Método Avaliado: com.google.common.base.FunctionsTest.testComposeOfFunctionsIsAssociative() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(java.lang.Float, java.lang.String, java.lang.Float, java.lang.String, java.lang.Float, java.lang.String, java.lang.Float, java.lang.String)
com.google.common.base.Functions.constant(java.lang.Boolean)
com.google.common.base.Functions.forMap(java.util.Map, java.lang.String)
com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
java.lang.Object.hashCode()
java.lang.Object.hashCode()
assertEquals
com.google.common.base.Function.apply(java.lang.Float)
com.google.common.base.Function.apply(java.lang.Float)
assertEquals
com.google.common.base.Function.apply(java.lang.Float)
com.google.common.base.Function.apply(java.lang.Float)
assertEquals
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.Float, java.lang.String, java.lang.Float, java.lang.String, java.lang.Float, java.lang.String, java.lang.Float, java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.base.Functions.constant(java.lang.Boolean)
Situação: Manual
Chamada: com.google.common.base.Functions.forMap(java.util.Map, java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.base.Functions.compose(com.google.common.base.Function, com.google.common.base.Function)
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.Function.apply(java.lang.Float)
Situação: Manual
Chamada: com.google.common.base.Function.apply(java.lang.Float)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.Function.apply(java.lang.Float)
Situação: Manual
Chamada: com.google.common.base.Function.apply(java.lang.Float)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.hashCode()
Útil
Método: com.google.common.collect.Hashing.smear(I)
Inútil
Percentual de Automatização: 0.06666666666666667
Corretude: 0.5
F-Measure: 0.11764705882352941
************************ Método Avaliado: com.google.common.base.JoinerTest.checkIterableIterator(com.google.common.base.Joiner, java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Joiner.join(com.google.common.base.JoinerTest$IterableIterator)
assertEquals
java.lang.StringBuilder.append(C)
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, com.google.common.base.JoinerTest$IterableIterator)
java.lang.StringBuilder.toString()
assertEquals
com.google.common.base.JoinerTest$IterableIterator.iterator()
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
java.util.ArrayList.toArray([Ljava.lang.Integer;)
com.google.common.base.Joiner.join([Ljava.lang.Object;)
assertEquals
java.lang.StringBuilder.append(C)
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, [Ljava.lang.Object;)
java.lang.StringBuilder.toString()
assertEquals
com.google.common.base.Joiner.join(java.lang.Object, java.lang.Object, [Ljava.lang.Object;)
assertEquals
java.lang.StringBuilder.append(C)
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Object, java.lang.Object, [Ljava.lang.Object;)
java.lang.StringBuilder.toString()
assertEquals
Chamada: com.google.common.base.Joiner.join(com.google.common.base.JoinerTest$IterableIterator)
Situação: Primeira Chamada
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, com.google.common.base.JoinerTest$IterableIterator)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.JoinerTest$IterableIterator.iterator()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Situação: Manual
Chamada: java.util.ArrayList.toArray([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.base.Joiner.join([Ljava.lang.Object;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5714285714285713
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, [Ljava.lang.Object;)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Object, java.lang.Object, [Ljava.lang.Object;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5714285714285713
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Object, java.lang.Object, [Ljava.lang.Object;)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Útil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.25
Corretude: 0.6666666666666666
F-Measure: 0.36363636363636365
************************ Método Avaliado: com.google.common.base.JoinerTest.testNoSpecialNullBehavior() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.JoinerTest.checkNoOutput(com.google.common.base.Joiner, java.lang.Iterable)
com.google.common.base.JoinerTest.checkResult(com.google.common.base.Joiner, java.lang.Iterable, java.lang.String)
com.google.common.base.JoinerTest.checkResult(com.google.common.base.Joiner, java.lang.Iterable, java.lang.String)
com.google.common.base.JoinerTest.checkResult(com.google.common.base.Joiner, java.lang.Iterable, java.lang.String)
com.google.common.base.Joiner.join(java.lang.Iterable)
fail
com.google.common.base.Joiner.join(java.lang.Iterable)
fail
java.lang.Iterable.iterator()
com.google.common.base.Joiner.join(java.util.Iterator)
fail
java.lang.Iterable.iterator()
com.google.common.base.Joiner.join(java.util.Iterator)
fail
Chamada: com.google.common.base.JoinerTest.checkNoOutput(com.google.common.base.Joiner, java.lang.Iterable)
Situação: Primeira Chamada
Chamada: com.google.common.base.JoinerTest.checkResult(com.google.common.base.Joiner, java.lang.Iterable, java.lang.String)
Situação: Manual
Chamada: com.google.common.base.JoinerTest.checkResult(com.google.common.base.Joiner, java.lang.Iterable, java.lang.String)
Situação: Manual
Chamada: com.google.common.base.JoinerTest.checkResult(com.google.common.base.Joiner, java.lang.Iterable, java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.util.Iterator)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.util.Iterator)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.JoinerTest.checkNoOutput(com.google.common.base.Joiner, java.lang.Iterable) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Joiner.join(java.lang.Iterable)
assertEquals
java.lang.Iterable.iterator()
com.google.common.base.Joiner.join(java.util.Iterator)
assertEquals
com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
java.util.ArrayList.toArray([Ljava.lang.Integer;)
com.google.common.base.Joiner.join([Ljava.lang.Object;)
assertEquals
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Iterable)
assertSame
java.lang.AbstractStringBuilder.length()
assertEquals
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Iterable)
assertSame
java.lang.AbstractStringBuilder.length()
assertEquals
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, [Ljava.lang.Object;)
assertSame
java.lang.AbstractStringBuilder.length()
assertEquals
com.google.common.base.Joiner.appendTo(java.lang.Appendable, java.lang.Iterable)
java.lang.Iterable.iterator()
com.google.common.base.Joiner.appendTo(java.lang.Appendable, java.util.Iterator)
com.google.common.base.Joiner.appendTo(java.lang.Appendable, [Ljava.lang.Object;)
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Primeira Chamada
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
Situação: Manual
Chamada: java.util.ArrayList.toArray([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.base.Joiner.join([Ljava.lang.Object;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Iterable)
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: java.lang.AbstractStringBuilder.length()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Iterable)
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: java.lang.AbstractStringBuilder.length()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, [Ljava.lang.Object;)
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: java.lang.AbstractStringBuilder.length()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.Joiner.appendTo(java.lang.Appendable, java.lang.Iterable)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Joiner.appendTo(java.lang.Appendable, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.base.Joiner.appendTo(java.lang.Appendable, [Ljava.lang.Object;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.JoinerTest.testEntries() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Joiner.on(java.lang.String)
com.google.common.base.Joiner.withKeyValueSeparator(java.lang.String)
com.google.common.collect.ImmutableMultimap.of()
com.google.common.collect.ImmutableMultimap.entries()
com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
assertEquals
com.google.common.collect.ImmutableMultimap.of()
com.google.common.collect.ImmutableMultimap.entries()
com.google.common.collect.ImmutableCollection.iterator()
com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
assertEquals
com.google.common.collect.ImmutableMultimap.of(java.lang.String, java.lang.String)
com.google.common.collect.ImmutableMultimap.entries()
com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
assertEquals
com.google.common.collect.ImmutableMultimap.of(java.lang.String, java.lang.String)
com.google.common.collect.ImmutableMultimap.entries()
com.google.common.collect.ImmutableCollection.iterator()
com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
assertEquals
com.google.common.collect.ImmutableMultimap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.ImmutableMultimap.entries()
com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
assertEquals
com.google.common.collect.ImmutableMultimap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.ImmutableMultimap.entries()
com.google.common.collect.ImmutableCollection.iterator()
com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
assertEquals
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Map.put(java.lang.String, java.lang.String)
java.util.Map.put(java.lang.String, java.lang.String)
java.util.Map.entrySet()
com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
fail
java.util.Set.iterator()
com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
fail
com.google.common.base.Joiner$MapJoiner.useForNull(java.lang.String)
com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
assertEquals
com.google.common.base.Joiner$MapJoiner.useForNull(java.lang.String)
java.util.Set.iterator()
com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
assertEquals
com.google.common.collect.ImmutableMultimap.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.ImmutableMultimap.entries()
com.google.common.base.Joiner$MapJoiner.appendTo(java.lang.StringBuilder, java.lang.Iterable)
java.lang.StringBuilder.toString()
assertEquals
com.google.common.collect.ImmutableMultimap.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.ImmutableMultimap.entries()
com.google.common.collect.ImmutableCollection.iterator()
com.google.common.base.Joiner$MapJoiner.appendTo(java.lang.StringBuilder, java.util.Iterator)
java.lang.StringBuilder.toString()
assertEquals
Chamada: com.google.common.base.Joiner.on(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.base.Joiner.withKeyValueSeparator(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.of()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.entries()
Situação: Manual
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.of()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.entries()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.iterator()
Situação: Manual
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.of(java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.entries()
Situação: Manual
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.of(java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.entries()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.iterator()
Situação: Manual
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.entries()
Situação: Manual
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.entries()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.iterator()
Situação: Manual
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.String)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.String)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.base.Joiner$MapJoiner.useForNull(java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.lang.Iterable)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.Joiner$MapJoiner.useForNull(java.lang.String)
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.entries()
Situação: Manual
Chamada: com.google.common.base.Joiner$MapJoiner.appendTo(java.lang.StringBuilder, java.lang.Iterable)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.entries()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.iterator()
Situação: Manual
Chamada: com.google.common.base.Joiner$MapJoiner.appendTo(java.lang.StringBuilder, java.util.Iterator)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.01818181818181818
Corretude: 0.16666666666666666
F-Measure: 0.032786885245901634
************************ Método Avaliado: com.google.common.base.JoinerTest.testMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Joiner.on(java.lang.String)
com.google.common.base.Joiner.withKeyValueSeparator(java.lang.String)
com.google.common.collect.ImmutableMap.of()
com.google.common.base.Joiner$MapJoiner.join(java.util.Map)
assertEquals
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String)
com.google.common.base.Joiner$MapJoiner.join(java.util.Map)
assertEquals
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Map.put(java.lang.String, java.lang.String)
java.util.Map.put(java.lang.String, java.lang.String)
com.google.common.base.Joiner$MapJoiner.join(java.util.Map)
fail
com.google.common.base.Joiner$MapJoiner.useForNull(java.lang.String)
com.google.common.base.Joiner$MapJoiner.join(java.util.Map)
assertEquals
com.google.common.collect.ImmutableMap.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.base.Joiner$MapJoiner.appendTo(java.lang.StringBuilder, java.util.Map)
java.lang.StringBuilder.toString()
assertEquals
Chamada: com.google.common.base.Joiner.on(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.base.Joiner.withKeyValueSeparator(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of()
Situação: Manual
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.util.Map)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.util.Map)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.String)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.util.Map)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.base.Joiner$MapJoiner.useForNull(java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Joiner$MapJoiner.join(java.util.Map)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.base.Joiner$MapJoiner.appendTo(java.lang.StringBuilder, java.util.Map)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.JoinerTest.checkResult(com.google.common.base.Joiner, java.lang.Iterable, java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Joiner.join(java.lang.Iterable)
assertEquals
java.lang.Iterable.iterator()
com.google.common.base.Joiner.join(java.util.Iterator)
assertEquals
java.lang.StringBuilder.append(C)
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Iterable)
java.lang.StringBuilder.toString()
assertEquals
java.lang.StringBuilder.append(C)
java.lang.Iterable.iterator()
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.util.Iterator)
java.lang.StringBuilder.toString()
assertEquals
com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
java.util.ArrayList.toArray([Ljava.lang.Integer;)
com.google.common.base.Joiner.join([Ljava.lang.Object;)
assertEquals
java.lang.StringBuilder.append(C)
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, [Ljava.lang.Object;)
java.lang.StringBuilder.toString()
assertEquals
com.google.common.base.Joiner.join(java.lang.Object, java.lang.Object, [Ljava.lang.Object;)
assertEquals
java.lang.StringBuilder.append(C)
com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Object, java.lang.Object, [Ljava.lang.Object;)
java.lang.StringBuilder.toString()
assertEquals
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Primeira Chamada
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Manual
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Iterable)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5714285714285713
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.util.Iterator)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
Situação: Manual
Chamada: java.util.ArrayList.toArray([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.base.Joiner.join([Ljava.lang.Object;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5714285714285713
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, [Ljava.lang.Object;)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Object, java.lang.Object, [Ljava.lang.Object;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.5714285714285713
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.base.Joiner.appendTo(java.lang.StringBuilder, java.lang.Object, java.lang.Object, [Ljava.lang.Object;)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.lang.StringBuilder.append(C)
Útil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.25925925925925924
Corretude: 0.4
F-Measure: 0.3146067415730337
************************ Método Avaliado: com.google.common.base.ObjectsTest.testEqual() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
assertFalse
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Situação: Primeira Chamada
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.21428548258916263
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.21428548258916263
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.21428548258916263
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.21428548258916263
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.21428548258916263
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.21428548258916263
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.HashBiMap.delete(com.google.common.collect.HashBiMap$BiEntry)
Inútil
Método: com.google.common.collect.HashBiMap.insert(com.google.common.collect.HashBiMap$BiEntry)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Útil
Percentual de Automatização: 0.46153846153846156
Corretude: 0.25
F-Measure: 0.32432432432432434
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckPositionIndexes_endTooHigh() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
fail
java.lang.Throwable.getMessage()
assertEquals
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Primeira Chamada
Chamada: fail
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckPositionIndex_startNegative() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
fail
java.lang.Throwable.getMessage()
assertEquals
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Primeira Chamada
Chamada: fail
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckPositionIndexes_reversed() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
fail
java.lang.Throwable.getMessage()
assertEquals
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Primeira Chamada
Chamada: fail
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckState_nullMessage_failure() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
fail
java.lang.Throwable.getMessage()
assertEquals
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Situação: Primeira Chamada
Chamada: fail
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckState_simple_failure() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkState(Z)
fail
Chamada: com.google.common.base.Preconditions.checkState(Z)
Situação: Primeira Chamada
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckPositionIndexes_ok() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckArgument_simple_failure() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z)
fail
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Primeira Chamada
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckNotNull_simple_success() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
assertSame
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckArgument_simpleMessage_failure() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
fail
com.google.common.base.PreconditionsTest.verifySimpleMessage(java.lang.Exception)
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Situação: Primeira Chamada
Chamada: fail
Situação: Manual
Chamada: com.google.common.base.PreconditionsTest.verifySimpleMessage(java.lang.Exception)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckState_simpleMessage_failure() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
fail
com.google.common.base.PreconditionsTest.verifySimpleMessage(java.lang.Exception)
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.Object)
Situação: Primeira Chamada
Chamada: fail
Situação: Manual
Chamada: com.google.common.base.PreconditionsTest.verifySimpleMessage(java.lang.Exception)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckPositionIndexes_badSize() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
fail
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Primeira Chamada
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckArgument_complexMessage_failure() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
fail
com.google.common.base.PreconditionsTest.verifyComplexMessage(java.lang.Exception)
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: fail
Situação: Manual
Chamada: com.google.common.base.PreconditionsTest.verifyComplexMessage(java.lang.Exception)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.PreconditionsTest.testCheckArgument_nullMessage_failure() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
fail
java.lang.Throwable.getMessage()
assertEquals
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Situação: Primeira Chamada
Chamada: fail
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.PredicatesTest.testOr_iterableDefensivelyCopied() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.iterator()
com.google.common.base.Predicates.or(java.lang.Iterable)
com.google.common.base.Predicate.apply(java.lang.Object)
assertFalse
com.google.common.base.Predicates.alwaysTrue()
java.util.List.add(java.lang.Object)
com.google.common.base.Predicate.apply(java.lang.Object)
assertFalse
Chamada: java.util.List.iterator()
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.or(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.base.Predicates.alwaysTrue()
Situação: Manual
Chamada: java.util.List.add(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.PredicatesTest.testHashCodeForBooleanOperations() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Predicates.isNull()
com.google.common.base.PredicatesTest.isOdd()
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.base.PredicatesTest.assertEqualHashCode(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.base.PredicatesTest.assertEqualHashCode(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.base.Predicates.or(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.base.Predicates.or(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.base.PredicatesTest.assertEqualHashCode(com.google.common.base.Predicate, com.google.common.base.Predicate)
com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
java.lang.Object.hashCode()
com.google.common.base.Predicates.or(com.google.common.base.Predicate, com.google.common.base.Predicate)
java.lang.Object.hashCode()
assertTrue
Chamada: com.google.common.base.Predicates.isNull()
Situação: Primeira Chamada
Chamada: com.google.common.base.PredicatesTest.isOdd()
Situação: Manual
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.PredicatesTest.assertEqualHashCode(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.PredicatesTest.assertEqualHashCode(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.or(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.or(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.PredicatesTest.assertEqualHashCode(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Predicates.and(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: com.google.common.base.Predicates.or(com.google.common.base.Predicate, com.google.common.base.Predicate)
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.hashCode()
Útil
Método: com.google.common.collect.Hashing.smear(I)
Inútil
Percentual de Automatização: 0.06666666666666667
Corretude: 0.5
F-Measure: 0.11764705882352941
************************ Método Avaliado: com.google.common.base.PredicatesTest.assertEvalsLike(com.google.common.base.Predicate, com.google.common.base.Predicate, com.google.common.base.PredicatesTest$(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;Ljava/lang/Object;)V$T) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Predicate.apply(null)
com.google.common.base.Predicate.apply(null)
assertEquals
assertNotNull
java.lang.Object.getClass()
java.lang.Object.getClass()
assertEquals
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: assertNotNull
Situação: Manual
Chamada: java.lang.Object.getClass()
Situação: Manual
Chamada: java.lang.Object.getClass()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.PredicatesTest.assertEvalsToTrue(com.google.common.base.Predicate) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Predicate.apply(null)
assertTrue
com.google.common.base.Predicate.apply(null)
assertTrue
com.google.common.base.Predicate.apply(null)
assertTrue
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Primeira Chamada
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.PredicatesTest.testAnd_iterableDefensivelyCopied() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.iterator()
com.google.common.base.Predicates.and(java.lang.Iterable)
com.google.common.base.Predicate.apply(java.lang.Object)
assertTrue
com.google.common.base.Predicates.alwaysFalse()
java.util.List.add(java.lang.Object)
com.google.common.base.Predicate.apply(java.lang.Object)
assertTrue
Chamada: java.util.List.iterator()
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.and(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.base.Predicates.alwaysFalse()
Situação: Manual
Chamada: java.util.List.add(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.PredicatesTest.assertEqualHashCode(com.google.common.base.Predicate, com.google.common.base.Predicate) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.toString()
java.lang.Object.toString()
java.lang.Object.hashCode()
java.lang.Object.hashCode()
assertEquals
Chamada: java.lang.Object.toString()
Situação: Primeira Chamada
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Manual
Chamada: java.lang.Object.hashCode()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.hashCode()
Útil
Método: com.google.common.collect.Hashing.smear(I)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.5
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.base.PredicatesTest.assertEvalsToFalse(com.google.common.base.Predicate) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Predicate.apply(null)
assertFalse
com.google.common.base.Predicate.apply(null)
assertFalse
com.google.common.base.Predicate.apply(null)
assertFalse
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Primeira Chamada
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.SplitterTest.testMapSplitter_trimmedEntries() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.trimResults()
com.google.common.base.Splitter.withKeyValueSeparator(java.lang.String)
com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
that
isEqualTo
java.util.Map.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
that
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
is
Chamada: com.google.common.base.Splitter.trimResults()
Situação: Primeira Chamada
Chamada: com.google.common.base.Splitter.withKeyValueSeparator(java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: isEqualTo
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Manual
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
Situação: Manual
Chamada: is
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.SplitterTest.testMapSplitter_orderedResults() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.on(C)
com.google.common.base.Splitter.withKeyValueSeparator(java.lang.String)
com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
java.util.Map.keySet()
that
iteratesOverSequence
that
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
isEqualTo
com.google.common.base.Splitter.on(C)
com.google.common.base.Splitter.withKeyValueSeparator(java.lang.String)
com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
java.util.Map.keySet()
that
iteratesOverSequence
that
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
isEqualTo
Chamada: com.google.common.base.Splitter.on(C)
Situação: Primeira Chamada
Chamada: com.google.common.base.Splitter.withKeyValueSeparator(java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: iteratesOverSequence
Situação: Manual
Chamada: that
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: isEqualTo
Situação: Manual
Chamada: com.google.common.base.Splitter.on(C)
Situação: Manual
Chamada: com.google.common.base.Splitter.withKeyValueSeparator(java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: iteratesOverSequence
Situação: Manual
Chamada: that
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: isEqualTo
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.SplitterTest.testMapSplitter_multiCharacterSeparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.on(java.lang.String)
com.google.common.base.Splitter.withKeyValueSeparator(java.lang.String)
com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
that
isEqualTo
java.util.Map.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
that
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
is
Chamada: com.google.common.base.Splitter.on(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.base.Splitter.withKeyValueSeparator(java.lang.String)
Situação: Manual
Chamada: com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: isEqualTo
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Manual
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
Situação: Manual
Chamada: is
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.SplitterTest.testSplitterIterableIsUnmodifiable_string() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.on(C)
com.google.common.base.Splitter.split(java.lang.CharSequence)
java.lang.Iterable.iterator()
com.google.common.base.SplitterTest.assertIteratorIsUnmodifiable(java.util.Iterator)
Chamada: com.google.common.base.Splitter.on(C)
Situação: Primeira Chamada
Chamada: com.google.common.base.Splitter.split(java.lang.CharSequence)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.SplitterTest.assertIteratorIsUnmodifiable(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.SplitterTest.testMapSplitter_trimmedKeyValue() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.on(C)
com.google.common.base.Splitter.trimResults()
com.google.common.base.Splitter.withKeyValueSeparator(com.google.common.base.Splitter)
com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
that
isEqualTo
java.util.Map.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
that
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
is
Chamada: com.google.common.base.Splitter.on(C)
Situação: Primeira Chamada
Chamada: com.google.common.base.Splitter.trimResults()
Situação: Manual
Chamada: com.google.common.base.Splitter.withKeyValueSeparator(com.google.common.base.Splitter)
Situação: Manual
Chamada: com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: isEqualTo
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Manual
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
Situação: Manual
Chamada: is
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.SplitterTest.testSplitterIterableIsUnmodifiable_char() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.split(java.lang.CharSequence)
java.lang.Iterable.iterator()
com.google.common.base.SplitterTest.assertIteratorIsUnmodifiable(java.util.Iterator)
Chamada: com.google.common.base.Splitter.split(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.SplitterTest.assertIteratorIsUnmodifiable(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.SplitterTest.assertSplitterIterableIsLazy(com.google.common.base.Splitter) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.split(java.lang.CharSequence)
java.lang.Iterable.iterator()
java.lang.StringBuilder.append(java.lang.String)
java.util.Iterator.next()
assertEquals
java.lang.StringBuilder.append(java.lang.String)
java.util.Iterator.next()
assertEquals
java.lang.StringBuilder.append(java.lang.String)
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.base.Splitter.split(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.3863641367769778
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5882355036329961
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.lang.StringBuilder.append(C)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Útil
Método: java.util.Iterator.next()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.base.SplitterTest.testMapSplitter_trimmedBoth() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.trimResults()
com.google.common.base.Splitter.on(C)
com.google.common.base.Splitter.trimResults()
com.google.common.base.Splitter.withKeyValueSeparator(com.google.common.base.Splitter)
com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
that
isEqualTo
java.util.Map.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
that
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
is
Chamada: com.google.common.base.Splitter.trimResults()
Situação: Primeira Chamada
Chamada: com.google.common.base.Splitter.on(C)
Situação: Manual
Chamada: com.google.common.base.Splitter.trimResults()
Situação: Manual
Chamada: com.google.common.base.Splitter.withKeyValueSeparator(com.google.common.base.Splitter)
Situação: Manual
Chamada: com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: isEqualTo
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Manual
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
Situação: Manual
Chamada: is
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.SplitterTest.testMapSplitter_notTrimmed() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.withKeyValueSeparator(java.lang.String)
com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
that
isEqualTo
java.util.Map.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
that
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
is
Chamada: com.google.common.base.Splitter.withKeyValueSeparator(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: isEqualTo
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Manual
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
Situação: Manual
Chamada: is
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.SplitterTest.assertIteratorIsUnmodifiable(java.util.Iterator) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.next()
java.util.Iterator.remove()
fail
Chamada: java.util.Iterator.next()
Situação: Primeira Chamada
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.25
Suporte: 0.00891825
F-Measure Suporte e Confiança: 0.018
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.2
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.base.SplitterTest.testMapSplitter_CharacterSeparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Splitter.on(java.lang.String)
com.google.common.base.Splitter.withKeyValueSeparator(C)
com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
that
isEqualTo
java.util.Map.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
that
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.base.SplitterTest.asList(java.util.Collection)
is
Chamada: com.google.common.base.Splitter.on(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.base.Splitter.withKeyValueSeparator(C)
Situação: Manual
Chamada: com.google.common.base.Splitter$MapSplitter.split(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: isEqualTo
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Manual
Chamada: com.google.common.base.SplitterTest.asList(java.util.Collection)
Situação: Manual
Chamada: is
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.StringsTest.testRepeat() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Strings.repeat(java.lang.String, I)
assertEquals
com.google.common.base.Strings.repeat(java.lang.String, I)
assertEquals
com.google.common.base.Strings.repeat(java.lang.String, I)
assertEquals
com.google.common.base.Strings.repeat(java.lang.String, I)
assertEquals
com.google.common.base.Strings.repeat(java.lang.String, I)
assertEquals
com.google.common.base.Strings.repeat(java.lang.String, I)
java.lang.String.length()
assertEquals
com.google.common.base.Strings.repeat(java.lang.String, I)
fail
com.google.common.base.Strings.repeat(java.lang.String, I)
fail
Chamada: com.google.common.base.Strings.repeat(java.lang.String, I)
Situação: Primeira Chamada
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.Strings.repeat(java.lang.String, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.Strings.repeat(java.lang.String, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.Strings.repeat(java.lang.String, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.Strings.repeat(java.lang.String, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.Strings.repeat(java.lang.String, I)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.base.Strings.repeat(java.lang.String, I)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.base.Strings.repeat(java.lang.String, I)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.SuppliersTest.testComposeWithLists() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
java.util.ArrayList.add(java.lang.Integer)
com.google.common.base.Suppliers.compose(com.google.common.base.Function, com.google.common.base.Supplier)
com.google.common.base.Supplier.get()
java.lang.Integer.valueOf(I)
java.util.List.get(I)
assertEquals
java.lang.Integer.valueOf(I)
java.util.List.get(I)
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
Situação: Manual
Chamada: java.util.ArrayList.add(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.base.Suppliers.compose(com.google.common.base.Function, com.google.common.base.Supplier)
Situação: Manual
Chamada: com.google.common.base.Supplier.get()
Situação: Manual
Chamada: java.lang.Integer.valueOf(I)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.Integer.valueOf(I)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.1
Corretude: 0.3333333333333333
F-Measure: 0.15384615384615383
************************ Método Avaliado: com.google.common.collect.AbstractCollectionTest.testContainsAfterRemoval() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.add(java.lang.String)
java.util.Collection.remove(java.lang.Object)
java.util.Collection.contains(java.lang.Object)
assertFalse
Chamada: java.util.Collection.add(java.lang.String)
Situação: Primeira Chamada
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractCollectionTest.testContainsOne() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.add(java.lang.String)
java.util.Collection.contains(java.lang.Object)
assertTrue
Chamada: java.util.Collection.add(java.lang.String)
Situação: Primeira Chamada
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractCollectionTest.testRemoveOneFromNoneStandard() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.remove(java.lang.Object)
assertFalse
com.google.common.collect.AbstractCollectionTest.assertContents([Ljava.lang.String;)
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Primeira Chamada
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractCollectionTest.assertContents([Ljava.lang.String;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractCollectionTest.testAddSeveralTimes() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.add(java.lang.String)
assertTrue
java.util.Collection.add(java.lang.String)
assertTrue
java.util.Collection.add(java.lang.String)
java.util.Collection.add(java.lang.String)
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertTrue
Chamada: java.util.Collection.add(java.lang.String)
Situação: Primeira Chamada
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.add(java.lang.String)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.add(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.add(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractCollectionTest.testEqualsTricky() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.add(java.lang.String)
java.util.Collection.add(java.lang.String)
com.google.common.collect.AbstractCollectionTest.create()
java.util.Collection.add(java.lang.String)
java.util.Collection.add(java.lang.String)
java.util.Collection.add(java.lang.String)
java.util.Collection.add(java.lang.String)
java.util.Collection.remove(java.lang.Object)
java.util.Collection.remove(java.lang.Object)
assertEquals
Chamada: java.util.Collection.add(java.lang.String)
Situação: Primeira Chamada
Chamada: java.util.Collection.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.AbstractCollectionTest.create()
Situação: Manual
Chamada: java.util.Collection.add(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.add(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.add(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.add(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.remove(java.lang.Object)
Útil
Percentual de Automatização: 0.1111111111111111
Corretude: 1.0
F-Measure: 0.19999999999999998
************************ Método Avaliado: com.google.common.collect.AbstractCollectionTest.testRemoveOneFromOneStandard() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.add(java.lang.String)
java.util.Collection.remove(java.lang.Object)
assertTrue
com.google.common.collect.AbstractCollectionTest.assertContents([Ljava.lang.String;)
Chamada: java.util.Collection.add(java.lang.String)
Situação: Primeira Chamada
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractCollectionTest.assertContents([Ljava.lang.String;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractCollectionTest.testIsEmptyYes() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.isEmpty()
assertTrue
Chamada: java.util.Collection.isEmpty()
Situação: Primeira Chamada
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractCollectionTest.testContainsNo() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.add(java.lang.String)
java.util.Collection.contains(java.lang.Object)
assertFalse
Chamada: java.util.Collection.add(java.lang.String)
Situação: Primeira Chamada
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractCollectionTest.testIsEmptyNo() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.add(java.lang.String)
java.util.Collection.isEmpty()
assertFalse
Chamada: java.util.Collection.add(java.lang.String)
Situação: Primeira Chamada
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractImmutableSetTest.testCopyOf_iterator_general() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.forArray([Ljava.lang.String;)
com.google.common.collect.AbstractImmutableSetTest.copyOf(java.util.Iterator)
java.util.Set.size()
assertEquals
java.util.Set.contains(java.lang.Object)
assertTrue
java.util.Set.contains(java.lang.Object)
assertTrue
Chamada: com.google.common.collect.Iterators.forArray([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractImmutableSetTest.copyOf(java.util.Iterator)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Set.contains(java.lang.Object)
Útil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.3333333333333333
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.AbstractImmutableSetTest.testCopyOf_plainIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractImmutableSetTest.copyOf(java.lang.Iterable)
java.util.Set.size()
assertEquals
java.util.Set.contains(java.lang.Object)
assertTrue
java.util.Set.contains(java.lang.Object)
assertTrue
Chamada: com.google.common.collect.AbstractImmutableSetTest.copyOf(java.lang.Iterable)
Situação: Primeira Chamada
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Set.contains(java.lang.Object)
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.2222222222222222
************************ Método Avaliado: com.google.common.collect.AbstractImmutableSetTest.testBuilderWithDuplicateElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractImmutableSetTest.builder()
com.google.common.collect.ImmutableSet$Builder.add(java.lang.String)
com.google.common.collect.ImmutableSet$Builder.add([Ljava.lang.String;)
com.google.common.collect.ImmutableSet$Builder.add([Ljava.lang.String;)
com.google.common.collect.ImmutableSet$Builder.add([Ljava.lang.String;)
com.google.common.collect.ImmutableSet$Builder.build()
com.google.common.collect.ImmutableCollection.contains(java.lang.Object)
assertTrue
com.google.common.collect.ImmutableCollection.contains(java.lang.Object)
assertFalse
java.util.Set.size()
assertEquals
Chamada: com.google.common.collect.AbstractImmutableSetTest.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet$Builder.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.add([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.add([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.add([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractImmutableSetTest.testCopyOf_collection_general() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
of
com.google.common.collect.AbstractImmutableSetTest.copyOf(java.util.Collection)
java.util.Set.size()
assertEquals
java.util.Set.contains(java.lang.Object)
assertTrue
java.util.Set.contains(java.lang.Object)
assertTrue
Chamada: of
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractImmutableSetTest.copyOf(java.util.Collection)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Set.contains(java.lang.Object)
Útil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.3333333333333333
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.AbstractImmutableSetTest.testComplexBuilder() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.AbstractImmutableSetTest.builder()
com.google.common.collect.ImmutableSet$Builder.add(java.lang.Integer)
com.google.common.collect.ImmutableSet$Builder.build()
java.util.Set.size()
assertEquals
java.util.Set.size()
com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Integer;)
assertEquals
assertEquals
assertEquals
assertEquals
assertEquals
com.google.common.collect.ImmutableSet$Builder.add(java.lang.Integer)
com.google.common.collect.ImmutableSet$Builder.build()
java.util.Set.size()
assertEquals
java.util.Set.size()
assertEquals
java.util.Set.size()
com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Integer;)
com.google.common.collect.AbstractImmutableSetTest.getComplexBuilderSetLastElement()
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractImmutableSetTest.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.add(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.build()
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.11290297377801649
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Integer;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.add(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.build()
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.11290297377801649
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.11290297377801649
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.11290297377801649
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.AbstractImmutableSetTest.getComplexBuilderSetLastElement()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Útil
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.18181818181818182
Corretude: 0.5
F-Measure: 0.26666666666666666
************************ Método Avaliado: com.google.common.collect.AbstractListMultimapTest.testListMethods() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ListMultimap.get(java.lang.String)
java.util.List.add(I, java.lang.Integer)
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.ListMultimap.get(java.lang.String)
that
has
allOf
inOrder
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.addAll(I, java.util.Collection)
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.ListMultimap.get(java.lang.String)
that
has
allOf
inOrder
java.util.List.get(I)
java.lang.Integer.intValue()
assertEquals
java.util.List.indexOf(java.lang.Object)
assertEquals
java.util.List.lastIndexOf(java.lang.Object)
assertEquals
java.util.List.remove(I)
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.ListMultimap.get(java.lang.String)
that
has
allOf
inOrder
java.util.List.set(I, java.lang.Integer)
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.ListMultimap.get(java.lang.String)
that
has
allOf
inOrder
Chamada: com.google.common.collect.AbstractListMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.List.add(I, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.List.addAll(I, java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: java.lang.Integer.intValue()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.indexOf(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.lastIndexOf(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.remove(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: java.util.List.set(I, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractListMultimapTest.testAsMapValuesRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.values()
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.remove(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.size()
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.remove(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.size()
assertEquals
Chamada: com.google.common.collect.AbstractListMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.values()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.remove(java.lang.Object)
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.06666666666666667
Corretude: 0.2
F-Measure: 0.1
************************ Método Avaliado: com.google.common.collect.AbstractListMultimapTest.testPutGetOrdering() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.iterator()
java.lang.Integer.valueOf(I)
java.util.Iterator.next()
assertEquals
java.lang.Integer.valueOf(I)
java.util.Iterator.next()
assertEquals
Chamada: com.google.common.collect.AbstractListMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.lang.Integer.valueOf(I)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.Integer.valueOf(I)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.152777731057102
Suporte: 0.00545004
F-Measure Suporte e Confiança: 0.011
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.18181818181818182
Corretude: 0.16666666666666666
F-Measure: 0.17391304347826086
************************ Método Avaliado: com.google.common.collect.AbstractListMultimapTest.testListGetSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ListMultimap.get(java.lang.String)
java.util.List.set(I, java.lang.Integer)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.AbstractListMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.List.set(I, java.lang.Integer)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractListMultimapTest.testListRemoveAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.removeAll(java.lang.Object)
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.removeAll(java.lang.Object)
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.AbstractListMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.removeAll(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.removeAll(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractListMultimapTest.testToString() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
createSample
toString
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
assertTrue
Chamada: createSample
Situação: Primeira Chamada
Chamada: toString
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.AbstractListMultimapTest.testAsMapEntriesEquals() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer)
java.util.Map$Entry.getValue()
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.AbstractListMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.43333440977842724
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.608696567864768
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3666668012223034
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3666668012223034
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.521738787050712
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map.entrySet()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.38461538461538464
Corretude: 0.8333333333333334
F-Measure: 0.5263157894736842
************************ Método Avaliado: com.google.common.collect.AbstractListMultimapTest.testListPutAllIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractListMultimapTest.create()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.AbstractListMultimapTest.create()
Situação: Primeira Chamada
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractListMultimapTest.testAsMapEquals() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getMultimap
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
nullValue
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
nullKey
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
com.google.common.collect.Maps.newHashMap()
nullValue
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Map.put(java.lang.String, java.util.Collection)
nullKey
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Map.put(java.lang.String, java.util.Collection)
assertEquals
assertEquals
java.util.Map.hashCode()
com.google.common.collect.Multimap.hashCode()
assertEquals
com.google.common.collect.Maps.newHashMap()
nullValue
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Map.put(java.lang.String, java.util.Collection)
nullKey
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Map.put(java.lang.String, java.util.Collection)
java.util.Map.equals(java.lang.Object)
assertFalse
java.util.Map.equals(java.lang.Object)
assertFalse
Chamada: getMultimap
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: nullValue
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: nullKey
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: com.google.common.collect.Maps.newHashMap()
Situação: Manual
Chamada: nullValue
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.util.Collection)
Situação: Manual
Chamada: nullKey
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.util.Collection)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.hashCode()
Situação: Manual
Chamada: com.google.common.collect.Multimap.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Maps.newHashMap()
Situação: Manual
Chamada: nullValue
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.util.Collection)
Situação: Manual
Chamada: nullKey
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.util.Collection)
Situação: Manual
Chamada: java.util.Map.equals(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Map.equals(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEmptyToString() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimapTest.create()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.AbstractMultimapTest.create()
Situação: Primeira Chamada
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testValuesIteratorRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.values()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Iterator.remove()
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.32258083418298583
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.2727272727272727
Corretude: 0.75
F-Measure: 0.39999999999999997
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.assertSize(I) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
assertEquals
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
java.util.Collection.size()
assertEquals
Chamada: com.google.common.collect.Multimap.size()
Situação: Primeira Chamada
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.43333440977842724
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.clear()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map.entrySet()
Útil
Método: java.util.Collection.size()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.3
F-Measure: 0.3157894736842105
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesRemoveAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Collections.singleton(java.util.Map$Entry)
java.util.Collection.removeAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.entries()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Arrays.asList([Ljava.util.Map$Entry;)
java.util.Collection.removeAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collections.singleton(java.util.Map$Entry)
Situação: Manual
Chamada: java.util.Collection.removeAll(java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.util.Map$Entry;)
Situação: Manual
Chamada: java.util.Collection.removeAll(java.util.Collection)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testClear() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.clear()
com.google.common.collect.Multimap.keySet()
java.util.Set.size()
assertEquals
com.google.common.collect.AbstractMultimapTest.assertSize(I)
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.clear()
Situação: Manual
Chamada: com.google.common.collect.Multimap.keySet()
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testKeysEntrySetRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.remove(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.entrySet()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.remove(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.entrySet()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.util.Collection.toArray([Ljava.util.Map$Entry;)
assertSame
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
assertEquals
assertNull
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.toArray([Ljava.util.Map$Entry;)
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: assertNull
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testRemoveAllNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.removeAll(java.lang.Object)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.nullValue()
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.size()
assertEquals
com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.removeAll(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.32258083418298583
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.2727272727272727
Corretude: 0.6
F-Measure: 0.37499999999999994
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testRemoveToString() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.AbstractMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testKeysEntrySetIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
assertTrue
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.8333358562540683
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.8333358562540683
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.15384615384615385
Corretude: 0.4
F-Measure: 0.2222222222222222
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testKeySet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.keySet()
java.util.Set.size()
assertEquals
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.nullKey()
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.Set.containsAll(java.util.Collection)
assertTrue
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.Set.containsAll(java.util.Collection)
assertFalse
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.keySet()
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.Set.containsAll(java.util.Collection)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.Set.containsAll(java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Set.contains(java.lang.Object)
Útil
Percentual de Automatização: 0.05263157894736842
Corretude: 0.3333333333333333
F-Measure: 0.09090909090909091
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testReplaceValuesDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Multimap.size()
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.size()
com.google.common.collect.Multimap.size()
assertEquals
java.util.Collection.size()
assertEquals
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Útil
Percentual de Automatização: 0.07692307692307693
Corretude: 0.2
F-Measure: 0.1111111111111111
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testModifyCollectionFromGet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.add(java.lang.Integer)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
java.util.Collection.clear()
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.addAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
java.util.Collections.emptyList()
java.util.Collection.addAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.remove(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
java.util.Collection.remove(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.add(java.lang.Integer)
assertTrue
java.util.Collection.add(java.lang.Integer)
assertTrue
java.util.Collection.add(java.lang.Integer)
assertTrue
java.util.Collection.add(java.lang.Integer)
assertTrue
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.removeAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.get(java.lang.String)
that
has
allOf
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.removeAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.retainAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.get(java.lang.String)
that
has
allOf
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.retainAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.remove(java.lang.Object)
java.util.Collection.remove(java.lang.Object)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.isEmpty()
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.clear()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.14084582715038632
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collections.emptyList()
Situação: Manual
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.removeAll(java.util.Collection)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.removeAll(java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.retainAll(java.util.Collection)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.retainAll(java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.remove(java.lang.Object)
Útil
Método: java.util.Collection.clear()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Útil
Percentual de Automatização: 0.07228915662650602
Corretude: 0.6
F-Measure: 0.12903225806451613
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimapTest.removedCollectionsAreModifiable()
java.util.Collection.add(java.lang.Integer)
java.util.Collection.remove(java.lang.Object)
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Collection.add(java.lang.Integer)
fail
Chamada: com.google.common.collect.AbstractMultimapTest.removedCollectionsAreModifiable()
Situação: Primeira Chamada
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testRemoveAllNotPresent() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.removeAll(java.lang.Object)
com.google.common.collect.AbstractMultimapTest.assertSize(I)
assertNotNull
java.util.Collection.isEmpty()
assertTrue
com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.removeAll(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: assertNotNull
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testReplaceValuesEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.size()
assertEquals
com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testReplaceValues() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.size()
assertEquals
com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testValuesToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.values()
java.util.Collection.toArray()
that
has
com.google.common.collect.AbstractMultimapTest.nullValue()
allOf
java.util.Collection.toArray([Ljava.lang.Integer;)
that
has
com.google.common.collect.AbstractMultimapTest.nullValue()
allOf
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.values()
Situação: Manual
Chamada: java.util.Collection.toArray()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: java.util.Collection.toArray([Ljava.lang.Integer;)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: allOf
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testAsMapEntriesUpdate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Collection.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.util.Collection.size()
assertEquals
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.add(java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.util.Collection.size()
assertEquals
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.remove(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertTrue
java.util.Collection.remove(java.lang.Object)
assertFalse
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
java.util.Collection.remove(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.iterator()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.clear()
com.google.common.collect.AbstractMultimapTest.assertSize(I)
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.43333440977842724
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3666668012223034
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collections.singleton(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.1126763205921984
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.32258083418298583
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: java.util.Collection.clear()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.14084582715038632
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.remove(java.lang.Object)
Útil
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Collection.clear()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map.entrySet()
Útil
Método: java.util.Collection.size()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2127659574468085
Corretude: 0.7272727272727273
F-Measure: 0.3292181069958848
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEmptyGetToString() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimapTest.create()
com.google.common.collect.Multimap.get(java.lang.String)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.AbstractMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testKeysEntrySetToString() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.entrySet()
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testValuesClear() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.values()
java.util.Collection.clear()
com.google.common.collect.Multimap.isEmpty()
assertTrue
java.util.Collection.isEmpty()
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.values()
Situação: Manual
Chamada: java.util.Collection.clear()
Situação: Manual
Chamada: com.google.common.collect.Multimap.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGetClear() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Multimap.clear()
java.util.Collection.isEmpty()
assertTrue
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Multimap.clear()
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testKeysToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.keys()
java.util.Collection.toArray()
that
has
com.google.common.collect.AbstractMultimapTest.nullKey()
allOf
com.google.common.collect.Multimap.keys()
java.util.Collection.toArray([Ljava.lang.String;)
that
has
com.google.common.collect.AbstractMultimapTest.nullKey()
allOf
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: java.util.Collection.toArray()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: java.util.Collection.toArray([Ljava.lang.String;)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: allOf
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGetAddQuery() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.util.Collection.size()
assertEquals
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertFalse
that
has
allOf
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.containsAll(java.util.Collection)
assertTrue
java.util.Collection.isEmpty()
assertFalse
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.hashCode()
java.util.Collection.hashCode()
assertEquals
com.google.common.collect.Multimap.get(java.lang.String)
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.containsAll(java.util.Collection)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.hashCode()
Situação: Manual
Chamada: java.util.Collection.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testAsMapValuesToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.values()
java.util.Collection.toArray()
that
has
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.get(java.lang.String)
allOf
java.util.Collection.toArray([Ljava.util.Collection;)
that
has
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.get(java.lang.String)
allOf
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.values()
Situação: Manual
Chamada: java.util.Collection.toArray()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: java.util.Collection.toArray([Ljava.util.Collection;)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: allOf
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testNoSuchElementException() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
java.util.Iterator.next()
fail
Chamada: com.google.common.collect.Multimap.entries()
Situação: Primeira Chamada
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.2
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testAsMapEntriesToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Collection.toArray()
that
has
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
allOf
java.util.Collection.toArray([Ljava.util.Map$Entry;)
that
has
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
allOf
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.43333440977842724
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Collection.toArray()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: java.util.Collection.toArray([Ljava.util.Map$Entry;)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
Situação: Manual
Chamada: allOf
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Inútil
Método: java.util.Map.entrySet()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.038461538461538464
Corretude: 0.25
F-Measure: 0.06666666666666668
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGetRemoveAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Multimap.removeAll(java.lang.Object)
java.util.Collection.isEmpty()
assertTrue
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Multimap.removeAll(java.lang.Object)
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testKeysClear() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.keys()
java.util.Collection.clear()
java.util.Collection.isEmpty()
assertTrue
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: java.util.Collection.clear()
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testKeySetIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.keySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.String.equals(java.lang.Object)
java.util.Iterator.remove()
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.keySet()
java.util.Set.iterator()
com.google.common.collect.AbstractMultimapTest.nullKey()
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.keySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.4516133652794417
Suporte: 0.00693642
F-Measure Suporte e Confiança: 0.014
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.526882259492682
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.24731170894317414
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.keySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.526882259492682
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.24731170894317414
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.Multimap.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.lang.String.equals(java.lang.Object)
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.2
Corretude: 0.6
F-Measure: 0.3
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGet2() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.size()
assertEquals
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertTrue
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGetNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.size()
assertEquals
com.google.common.collect.AbstractMultimapTest.nullValue()
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertTrue
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testAsMapEntries() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Collection.size()
assertEquals
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.get(java.lang.String)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
java.util.Collection.contains(java.lang.Object)
assertFalse
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Object)
java.util.Collection.contains(java.lang.Object)
assertFalse
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Object)
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.List)
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Collection.iterator()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.lang.String.equals(java.lang.Object)
java.util.Map$Entry.getValue()
java.util.Collection.size()
assertEquals
java.util.Map$Entry.getValue()
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Map$Entry.getValue()
com.google.common.collect.AbstractMultimapTest.nullValue()
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.nullKey()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
java.util.Collection.size()
assertEquals
java.util.Map$Entry.getValue()
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.43333440977842724
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Object)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Object)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.List)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.1126763205921984
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3666668012223034
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3666668012223034
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Collection.clear()
Inútil
Método: java.lang.String.equals(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map.entrySet()
Útil
Método: java.util.Collection.size()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.14545454545454545
Corretude: 0.6
F-Measure: 0.23414634146341465
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testValues() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.values()
java.util.Collection.size()
assertEquals
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.nullValue()
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.values()
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testAsMapToString() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testRemoveAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.removeAll(java.lang.Object)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.size()
assertEquals
com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.removeAll(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesUpdate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
java.lang.Integer.intValue()
assertEquals
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertFalse
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Collection.add(java.util.Map$Entry)
fail
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.clear()
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.Integer.intValue()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.32258083418298583
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collection.add(java.util.Map$Entry)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.clear()
Situação: Manual
Chamada: com.google.common.collect.Multimap.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.16129032258064516
Corretude: 1.0
F-Measure: 0.27777777777777773
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testAsMapKeySetToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.keySet()
java.util.Set.toArray()
that
has
com.google.common.collect.AbstractMultimapTest.nullKey()
allOf
java.util.Set.toArray([Ljava.lang.String;)
that
has
com.google.common.collect.AbstractMultimapTest.nullKey()
allOf
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: java.util.Set.toArray()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: java.util.Set.toArray([Ljava.lang.String;)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: allOf
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGet1() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.size()
assertEquals
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesToString() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntrySetValue() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
java.util.Iterator.next()
java.util.Iterator.next()
java.util.Map$Entry.setValue(java.lang.Integer)
fail
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
java.util.Map$Entry.getValue()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.152777731057102
Suporte: 0.00545004
F-Measure Suporte e Confiança: 0.011
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.15789473684210525
Corretude: 0.2857142857142857
F-Measure: 0.2033898305084746
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGet0() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.size()
assertEquals
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesRetainAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Arrays.asList([Ljava.util.Map$Entry;)
java.util.Collection.retainAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.entries()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Arrays.asList([Ljava.util.Map$Entry;)
java.util.Collection.retainAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.util.Map$Entry;)
Situação: Manual
Chamada: java.util.Collection.retainAll(java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.util.Map$Entry;)
Situação: Manual
Chamada: java.util.Collection.retainAll(java.util.Collection)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testReplaceValuesNotPresent() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
assertNotNull
java.util.Collection.isEmpty()
assertTrue
com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: assertNotNull
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Collection.remove(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Collection.remove(java.lang.Object)
assertFalse
java.util.Collection.remove(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.remove(java.lang.Object)
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.10526315789473684
Corretude: 0.3333333333333333
F-Measure: 0.16
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesRetainAllNullFromEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Collection.retainAll(java.util.Collection)
Chamada: com.google.common.collect.Multimap.entries()
Situação: Primeira Chamada
Chamada: java.util.Collection.retainAll(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesCopy() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
java.util.Set.size()
assertEquals
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.removeAll(java.lang.Object)
java.util.Set.size()
assertEquals
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.removeAll(java.lang.Object)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.11290297377801649
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.size()
Útil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Set.contains(java.lang.Object)
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.24242424242424243
Corretude: 0.4
F-Measure: 0.30188679245283023
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGetRemoveToString() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.remove(java.lang.Object)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.remove(java.lang.Object)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.AbstractMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.remove(java.lang.Object)
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.08333333333333333
Corretude: 0.3333333333333333
F-Measure: 0.13333333333333333
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntriesRemoveAllNullFromEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.entries()
java.util.Collection.removeAll(java.util.Collection)
Chamada: com.google.common.collect.Multimap.entries()
Situação: Primeira Chamada
Chamada: java.util.Collection.removeAll(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testEntries() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: allOf
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGetIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.iterator()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Iterator.hasNext()
assertFalse
java.util.Arrays.asList([Ljava.lang.Integer;)
that
has
allOf
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
java.util.Collection.iterator()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertFalse
java.util.Arrays.asList([Ljava.lang.Integer;)
that
has
allOf
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.32258083418298583
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.7499987385396326
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.7499987385396326
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.21739130434782608
Corretude: 0.5
F-Measure: 0.30303030303030304
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGetReplaceValues() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
that
has
allOf
com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.isEmpty()
assertTrue
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Multimap.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testAsMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.size()
assertEquals
java.util.Map.get(java.lang.Object)
that
has
com.google.common.collect.AbstractMultimapTest.nullValue()
allOf
com.google.common.collect.AbstractMultimapTest.nullKey()
java.util.Map.get(java.lang.Object)
that
has
item
java.util.Map.get(java.lang.Object)
assertNull
java.util.Map.containsKey(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.nullKey()
java.util.Map.containsKey(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
java.util.Map.remove(java.lang.Object)
that
has
com.google.common.collect.AbstractMultimapTest.nullValue()
allOf
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.size()
assertEquals
java.util.Map.remove(java.lang.Object)
assertNull
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.add(java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.clear()
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.Multimap.size()
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Map.put(java.lang.String, java.util.Collection)
fail
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Map.clear()
com.google.common.collect.AbstractMultimapTest.assertSize(I)
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: item
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertNull
Situação: Manual
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Manual
Chamada: assertNull
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.clear()
Situação: Manual
Chamada: com.google.common.collect.Multimap.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.util.Collection)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: java.util.Map.clear()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map.get(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.01694915254237288
Corretude: 0.16666666666666666
F-Measure: 0.030769230769230767
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testKeys() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.elementSet()
that
has
com.google.common.collect.AbstractMultimapTest.nullKey()
allOf
com.google.common.collect.Multiset.entrySet()
java.util.Set.size()
assertEquals
java.util.Collection.size()
assertEquals
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.contains(java.lang.Object)
assertFalse
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultimapTest.nullKey()
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
assertEquals
assertEquals
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.AbstractMultimapTest.nullKey()
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
com.google.common.collect.Multiset.equals(java.lang.Object)
assertFalse
com.google.common.collect.Multiset.hashCode()
com.google.common.collect.Multiset.hashCode()
assertEquals
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
assertEquals
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset.entrySet()
assertEquals
com.google.common.collect.Multiset.entrySet()
java.util.Set.hashCode()
com.google.common.collect.Multiset.entrySet()
java.util.Set.hashCode()
assertEquals
com.google.common.collect.Multiset.remove(java.lang.Object, I)
assertEquals
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multiset.remove(java.lang.Object, I)
assertEquals
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getElement()
assertEquals
com.google.common.collect.Multiset.remove(java.lang.Object, I)
assertEquals
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
com.google.common.collect.Multiset.setCount(java.lang.String, I)
assertEquals
com.google.common.collect.Multiset.setCount(java.lang.String, I)
assertEquals
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.44999788075299874
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Multiset.equals(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multiset.hashCode()
Situação: Manual
Chamada: com.google.common.collect.Multiset.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.hashCode()
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.1126763205921984
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.26315806246524354
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: com.google.common.collect.Multiset.setCount(java.lang.String, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.setCount(java.lang.String, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Útil
Método: java.util.Set.iterator()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Útil
Método: java.util.Collection.clear()
Inútil
Método: java.util.Set.contains(java.lang.Object)
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0759493670886076
Corretude: 0.38461538461538464
F-Measure: 0.12684989429175478
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testReplaceValuesNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimapTest.nullValue()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.nullKey()
com.google.common.collect.AbstractMultimapTest.nullValue()
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultimapTest.assertSize(I)
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.size()
assertEquals
com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullKey()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.nullValue()
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.assertSize(I)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimapTest.checkRemovedCollection(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultimapTest.testGetRemoveAddQuery() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.iterator()
com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
java.util.Collection.size()
assertEquals
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Collection.isEmpty()
assertTrue
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.hashCode()
java.util.Collection.hashCode()
assertEquals
com.google.common.collect.Multimap.get(java.lang.String)
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.util.Collection.size()
assertEquals
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Collection.iterator()
java.util.Iterator.next()
java.lang.Integer.intValue()
assertEquals
java.util.Collection.isEmpty()
assertFalse
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.hashCode()
java.util.Collection.hashCode()
assertEquals
com.google.common.collect.Multimap.get(java.lang.String)
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
java.util.Iterator.hasNext()
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.hashCode()
Situação: Manual
Chamada: java.util.Collection.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.lang.Integer.intValue()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.hashCode()
Situação: Manual
Chamada: java.util.Collection.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Collection.size()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.06
Corretude: 0.375
F-Measure: 0.10344827586206896
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testContainsAllNoViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.elementSet()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.containsAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultisetTest.assertSize()
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.Set.containsAll(java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntryAfterRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
com.google.common.collect.Multiset.remove(java.lang.Object)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
com.google.common.collect.Multiset.remove(java.lang.Object, I)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
com.google.common.collect.Multiset.elementSet()
java.util.Set.remove(java.lang.Object)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.8333358562540683
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6451616683659717
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.1111111111111111
Corretude: 0.2222222222222222
F-Measure: 0.14814814814814814
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testIteratorRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.iterator()
java.util.Iterator.next()
java.util.Iterator.remove()
java.util.Iterator.next()
com.google.common.collect.Multiset.contains(java.lang.Object)
assertFalse
com.google.common.collect.Multiset.contains(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultisetTest.assertSize()
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Multiset.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.25
Suporte: 0.00891825
F-Measure Suporte e Confiança: 0.018
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.152777731057102
Suporte: 0.00545004
F-Measure Suporte e Confiança: 0.011
Chamada: com.google.common.collect.Multiset.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multiset.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.18181818181818182
Corretude: 0.25
F-Measure: 0.2105263157894737
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testCountNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Primeira Chamada
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testClearViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultisetTest.createSample()
com.google.common.collect.Multiset.elementSet()
java.util.Set.clear()
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Chamada: com.google.common.collect.AbstractMultisetTest.createSample()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Manual
Chamada: java.util.Set.clear()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testCountTwo() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.AbstractMultisetTest.assertSize()
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testContainsSeveral() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.contains(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultisetTest.assertSize()
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntrySetRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.entrySet()
java.util.Set.remove(java.lang.Object)
assertFalse
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.remove(java.lang.Object)
assertFalse
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.remove(java.lang.Object)
assertFalse
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.remove(java.lang.Object)
assertFalse
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.remove(java.lang.Object)
assertFalse
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.remove(java.lang.Object)
assertTrue
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.41935527976030035
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Útil
Percentual de Automatização: 0.045454545454545456
Corretude: 0.2
F-Measure: 0.07407407407407407
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntrySetToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.entrySet()
java.util.Set.toArray([Lcom.google.common.collect.Multiset$Entry;)
assertSame
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
assertEquals
assertNull
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.toArray([Lcom.google.common.collect.Multiset$Entry;)
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: assertNull
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testCountOne() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.AbstractMultisetTest.assertSize()
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testContainsAllVacuousViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
java.util.Collections.emptySet()
java.util.Set.containsAll(java.util.Collection)
assertTrue
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Collections.emptySet()
Situação: Manual
Chamada: java.util.Set.containsAll(java.util.Collection)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRemoveAllOfEverythingViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.elementSet()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.removeAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.Set.removeAll(java.util.Collection)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testElementSetIsNotACopy() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.elementSet()
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.setCount(java.lang.String, I)
com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
assertEquals
com.google.common.collect.AbstractMultisetTest.assertSize()
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset.setCount(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testContainsAllYesViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.elementSet()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.containsAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultisetTest.assertSize()
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.Set.containsAll(java.util.Collection)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRetainAllOfEverythingViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.elementSet()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.retainAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.Set.retainAll(java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntrySetEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.emptySet()
com.google.common.collect.Multiset.entrySet()
assertEquals
Chamada: java.util.Collections.emptySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRemoveAllOfDisjointViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.elementSet()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.removeAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.Set.removeAll(java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRemoveAllOfOneViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.elementSet()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.removeAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.Set.removeAll(java.util.Collection)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntryAfterElementSetIteratorRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset.elementSet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Iterator.remove()
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.8333358562540683
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.8333358562540683
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.remove()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6451616683659717
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.2222222222222222
F-Measure: 0.23529411764705882
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntryAfterClear() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Collection.clear()
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.8333358562540683
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Collection.clear()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6451616683659717
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.2222222222222222
Corretude: 0.2857142857142857
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRetainAllVacuousViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.retainAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.Set.retainAll(java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testIteratorRemoveTwiceConsecutive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.iterator()
java.util.Iterator.next()
java.util.Iterator.remove()
java.util.Iterator.remove()
fail
com.google.common.collect.AbstractMultisetTest.assertSize()
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Multiset.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.25
Suporte: 0.00891825
F-Measure Suporte e Confiança: 0.018
Chamada: java.util.Iterator.remove()
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.125
Corretude: 0.2
F-Measure: 0.15384615384615385
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRetainAllOfDisjointViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.elementSet()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.retainAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.Set.retainAll(java.util.Collection)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRemoveFromElementSetNo() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.elementSet()
java.util.Set.remove(java.lang.Object)
assertFalse
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testIteratorNoSuchElementException() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.iterator()
java.util.Iterator.next()
java.util.Iterator.next()
java.util.Iterator.next()
java.util.Iterator.next()
fail
com.google.common.collect.AbstractMultisetTest.assertSize()
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Multiset.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.152777731057102
Suporte: 0.00545004
F-Measure Suporte e Confiança: 0.011
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.1111111111111111
Corretude: 0.14285714285714285
F-Measure: 0.125
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testCountAfterRemoval() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.remove(java.lang.Object)
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.AbstractMultisetTest.assertSize()
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRetainAllOfOneViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.elementSet()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Set.retainAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.Set.retainAll(java.util.Collection)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntryAfterEntrySetClear() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
com.google.common.collect.Multiset.entrySet()
java.util.Set.clear()
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.8333358562540683
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.clear()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6451616683659717
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.2
Corretude: 0.2857142857142857
F-Measure: 0.23529411764705882
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testReallyBig() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.add(java.lang.String, I)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.remove(java.lang.Object, I)
java.util.Collection.size()
assertEquals
com.google.common.collect.AbstractMultisetTest.assertSize()
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object, I)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Útil
Percentual de Automatização: 0.2222222222222222
Corretude: 0.25
F-Measure: 0.23529411764705882
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testCountWrongType() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Primeira Chamada
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRemoveFromElementSetYes() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.elementSet()
java.util.Set.remove(java.lang.Object)
assertTrue
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRetainAllOfNothingViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.elementSet()
java.util.Collections.emptySet()
java.util.Set.retainAll(java.util.Collection)
assertTrue
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Manual
Chamada: java.util.Collections.emptySet()
Situação: Manual
Chamada: java.util.Set.retainAll(java.util.Collection)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.assertSize(com.google.common.collect.Multiset) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multiset$Entry.getCount()
java.lang.Math.min(J, J)
java.util.Collection.size()
assertEquals
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6451616683659717
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: java.lang.Math.min(J, J)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.125
F-Measure: 0.16666666666666666
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntryAfterEntrySetIteratorRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Iterator.remove()
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
java.util.Iterator.remove()
fail
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.8333358562540683
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.remove()
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6451616683659717
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.18181818181818182
Corretude: 0.2857142857142857
F-Measure: 0.2222222222222222
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testCountZero() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.AbstractMultisetTest.assertSize()
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Primeira Chamada
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRemoveFromElementSetWrongType() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
java.util.Set.remove(java.lang.Object)
assertEquals
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testCantAddToElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
java.util.Set.add(java.lang.String)
fail
com.google.common.collect.AbstractMultisetTest.assertSize()
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Set.add(java.lang.String)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testClearViaEntrySet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultisetTest.createSample()
com.google.common.collect.Multiset.entrySet()
java.util.Set.clear()
com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Chamada: com.google.common.collect.AbstractMultisetTest.createSample()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.clear()
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertContents([Ljava.lang.String;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRemoveFromElementSetNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
java.util.Set.remove(java.lang.Object)
assertEquals
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testRemoveAllVacuousViaElementSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.elementSet()
java.util.Collections.emptySet()
java.util.Set.removeAll(java.util.Collection)
assertFalse
com.google.common.collect.AbstractMultisetTest.assertSize()
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Primeira Chamada
Chamada: java.util.Collections.emptySet()
Situação: Manual
Chamada: java.util.Set.removeAll(java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testIteratorRemoveRepeated() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.iterator()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertFalse
java.util.Collection.isEmpty()
assertTrue
com.google.common.collect.AbstractMultisetTest.assertSize()
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Collection.size()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.6
F-Measure: 0.35294117647058826
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntrySet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractMultisetTest.createSample()
com.google.common.collect.Multiset.entrySet()
assertEquals
com.google.common.collect.Multiset$Entry.getElement()
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Multiset$Entry.getCount()
assertEquals
fail
com.google.common.collect.AbstractMultisetTest.assertSize()
Chamada: com.google.common.collect.AbstractMultisetTest.createSample()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getElement()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6451616683659717
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6451616683659717
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.Multiset$Entry.getCount()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Útil
Método: java.lang.String.equals(java.lang.Object)
Útil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Útil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.29411764705882354
Corretude: 0.5
F-Measure: 0.37037037037037035
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testElementSetBasic() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
com.google.common.collect.Multiset.elementSet()
assertEquals
assertEquals
com.google.common.collect.AbstractMultisetTest.assertSize()
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultisetTest.assertSize()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractMultisetTest.testEntrySetContains() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.entrySet()
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.contains(java.lang.Object)
assertTrue
java.util.Set.contains(java.lang.Object)
assertFalse
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertFalse
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.contains(java.lang.Object)
assertFalse
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.contains(java.lang.Object)
assertFalse
com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
java.util.Set.contains(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multisets.immutableEntry(java.lang.String, I)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: java.util.Set.contains(java.lang.Object)
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.2777777777777778
Corretude: 0.25
F-Measure: 0.2631578947368421
************************ Método Avaliado: com.google.common.collect.AbstractSequentialIteratorTest.testEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractSequentialIteratorTest.newEmpty()
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
java.util.Iterator.remove()
fail
Chamada: com.google.common.collect.AbstractSequentialIteratorTest.newEmpty()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: fail
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.AbstractSequentialIteratorTest.testBroken() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractSequentialIteratorTest.newBroken()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
fail
java.util.Iterator.next()
fail
Chamada: com.google.common.collect.AbstractSequentialIteratorTest.newBroken()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: fail
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1830064428297795
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.14285714285714285
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.ArrayTableTest.testRowMissing() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ArrayTableTest.create([Ljava.lang.Object;)
row
java.util.Map.isEmpty()
assertTrue
java.util.Map.put(java.lang.Integer, java.lang.Character)
fail
Chamada: com.google.common.collect.ArrayTableTest.create([Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: row
Situação: Manual
Chamada: java.util.Map.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Map.put(java.lang.Integer, java.lang.Character)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ArrayTableTest.testColumnMissing() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ArrayTableTest.create([Ljava.lang.Object;)
column
java.util.Map.isEmpty()
assertTrue
java.util.Map.put(java.lang.String, java.lang.Character)
fail
Chamada: com.google.common.collect.ArrayTableTest.create([Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: column
Situação: Manual
Chamada: java.util.Map.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Character)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Collections2Test.testOrderedPermutationSetOneElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Collections2Test.testOrderedPermutationSetEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.size()
assertEquals
that
has
item
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList()
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: item
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Collections2Test.testPermutationSetThreeRepeatedElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.permutations(java.util.Collection)
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.permutations(java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Collections2Test.testOrderedPermutationSetContains() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertFalse
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertFalse
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Collection.contains(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Collections2Test.testPermutationSetSizeOverflow() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.permutations(java.util.Collection)
java.util.Collection.size()
assertEquals
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.size()
assertEquals
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.size()
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.permutations(java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Útil
Percentual de Automatização: 0.18181818181818182
Corretude: 0.25
F-Measure: 0.2105263157894737
************************ Método Avaliado: com.google.common.collect.Collections2Test.testOrderedPermutationSetRepeatedElementsSize() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable, java.util.Comparator)
com.google.common.collect.Collections2Test.assertPermutationsCount(I, java.util.Collection)
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable, java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertPermutationsCount(I, java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Collections2Test.testPermutationSetTwoElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.permutations(java.util.Collection)
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.permutations(java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: null.apply(java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.equals(java.lang.Object)
java.lang.String.substring(I)
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.lang.String.substring(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Collections2Test.assertPermutationsCount(I, java.util.Collection) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.size()
assertEquals
java.util.Collection.iterator()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Chamada: java.util.Collection.size()
Situação: Primeira Chamada
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.1126763205921984
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Collection.size()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.2857142857142857
F-Measure: 0.30769230769230765
************************ Método Avaliado: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.collect.Collections2Test.testOrderedPermutationSetSizeOverflow() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.size()
assertEquals
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.size()
assertEquals
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.size()
assertEquals
java.util.Collections.nCopies(I, java.lang.Integer)
java.util.Collections.nCopies(I, java.lang.Integer)
com.google.common.collect.Iterables.concat(java.lang.Iterable, java.lang.Iterable)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.size()
assertEquals
java.util.Collections.nCopies(I, java.lang.Integer)
java.util.Collections.nCopies(I, java.lang.Integer)
com.google.common.collect.Iterables.concat(java.lang.Iterable, java.lang.Iterable)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.size()
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collections.nCopies(I, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collections.nCopies(I, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Iterables.concat(java.lang.Iterable, java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collections.nCopies(I, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collections.nCopies(I, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Iterables.concat(java.lang.Iterable, java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Útil
Percentual de Automatização: 0.17391304347826086
Corretude: 0.25
F-Measure: 0.20512820512820512
************************ Método Avaliado: com.google.common.collect.Collections2Test.testPermutationSetFourElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.permutations(java.util.Collection)
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.permutations(java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Collections2Test.testOrderedPermutationSetThreeElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Collections2Test.testOrderedPermutationSetRepeatedElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable, java.util.Comparator)
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Collections2.orderedPermutations(java.lang.Iterable, java.util.Comparator)
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Collections2Test.testPermutationSetEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.emptyList()
com.google.common.collect.Collections2.permutations(java.util.Collection)
java.util.Collection.size()
assertEquals
java.util.Collections.emptyList()
java.util.Collection.contains(java.lang.Object)
assertTrue
java.util.Collection.iterator()
java.util.Collections.emptyList()
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Chamada: java.util.Collections.emptyList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.permutations(java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collections.emptyList()
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Collections.emptyList()
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Collections2Test.testPermutationSetOneElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singletonList(java.lang.Integer)
com.google.common.collect.Collections2.permutations(java.util.Collection)
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Chamada: java.util.Collections.singletonList(java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.permutations(java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Collections2Test.testPermutationSetThreeElementsOutOfOrder() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.permutations(java.util.Collection)
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.permutations(java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Collections2Test.testPermutationSetContains() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.permutations(java.util.Collection)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertFalse
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertFalse
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.Collection.contains(java.lang.Object)
assertFalse
java.util.Collection.contains(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.permutations(java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Collections2Test.testPermutationSetThreeElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2.permutations(java.util.Collection)
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Collections2.permutations(java.util.Collection)
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNextPermutation(java.util.List, java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Collections2Test.assertNoMorePermutations(java.util.Iterator) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.collect.ConstrainedBiMapTest$ConstrainedBiMapGenerator.create([Ljava.util.Map$Entry;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashBiMap.create()
com.google.common.collect.MapConstraints.constrainedBiMap(com.google.common.collect.BiMap, com.google.common.collect.MapConstraint)
java.util.Map$Entry.getKey()
java.util.Map.containsKey(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.BiMap.put(java.lang.String, java.lang.String)
Chamada: com.google.common.collect.HashBiMap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapConstraints.constrainedBiMap(com.google.common.collect.BiMap, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map.get(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.2222222222222222
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.ConstrainedBiMapTest$TestConstraint.checkKeyValue(java.lang.String, java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: com.google.common.collect.ConstraintsTest.testConstrainedMultisetLegal() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
com.google.common.collect.Constraints.constrainedMultiset(com.google.common.collect.Multiset, com.google.common.collect.Constraint)
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.add(java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Collection.addAll(java.util.Collection)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.equals(java.lang.Object)
assertTrue
com.google.common.collect.Multiset.equals(java.lang.Object)
assertTrue
com.google.common.collect.Multiset.toString()
com.google.common.collect.Multiset.toString()
assertEquals
com.google.common.collect.Multiset.hashCode()
com.google.common.collect.Multiset.hashCode()
assertEquals
that
has
allOf
that
has
allOf
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.remove(java.lang.Object, I)
assertEquals
com.google.common.collect.Multiset.setCount(java.lang.String, I)
assertEquals
that
has
allOf
that
has
allOf
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Constraints.constrainedMultiset(com.google.common.collect.Multiset, com.google.common.collect.Constraint)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset.equals(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multiset.equals(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multiset.toString()
Situação: Manual
Chamada: com.google.common.collect.Multiset.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.hashCode()
Situação: Manual
Chamada: com.google.common.collect.Multiset.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.setCount(java.lang.String, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.EmptyImmutableTableTest.testValues() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table.values()
java.util.Collection.isEmpty()
assertTrue
Chamada: com.google.common.collect.Table.values()
Situação: Primeira Chamada
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.EnumBiMapTest.testCreateFromMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country)
com.google.common.collect.EnumBiMap.create(java.util.Map)
com.google.common.collect.ForwardingMap.get(java.lang.Object)
assertEquals
com.google.common.collect.AbstractBiMap.inverse()
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Collections.emptyMap()
com.google.common.collect.EnumBiMap.create(java.util.Map)
fail
com.google.common.collect.EnumHashBiMap.create(java.lang.Class)
com.google.common.collect.EnumBiMap.create(java.util.Map)
fail
com.google.common.collect.EnumBiMap.create(java.lang.Class, java.lang.Class)
com.google.common.collect.EnumBiMap.create(java.util.Map)
com.google.common.collect.ForwardingMap.isEmpty()
assertTrue
Chamada: com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country)
Situação: Primeira Chamada
Chamada: com.google.common.collect.EnumBiMap.create(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ForwardingMap.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collections.emptyMap()
Situação: Manual
Chamada: com.google.common.collect.EnumBiMap.create(java.util.Map)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.EnumHashBiMap.create(java.lang.Class)
Situação: Manual
Chamada: com.google.common.collect.EnumBiMap.create(java.util.Map)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.EnumBiMap.create(java.lang.Class, java.lang.Class)
Situação: Manual
Chamada: com.google.common.collect.EnumBiMap.create(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ForwardingMap.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.EnumBiMapTest.testCreate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.EnumBiMap.create(java.lang.Class, java.lang.Class)
com.google.common.collect.ForwardingMap.isEmpty()
assertTrue
com.google.common.collect.ForwardingObject.toString()
assertEquals
com.google.common.collect.HashBiMap.create()
assertEquals
com.google.common.collect.AbstractBiMap.put(com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country)
com.google.common.collect.ForwardingMap.get(java.lang.Object)
assertEquals
com.google.common.collect.AbstractBiMap.inverse()
java.util.Map.get(java.lang.Object)
assertEquals
Chamada: com.google.common.collect.EnumBiMap.create(java.lang.Class, java.lang.Class)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ForwardingMap.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.ForwardingObject.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.HashBiMap.create()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractBiMap.put(com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country)
Situação: Manual
Chamada: com.google.common.collect.ForwardingMap.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.EnumBiMapTest.testKeySetIteratorRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country)
com.google.common.collect.EnumBiMap.create(java.util.Map)
com.google.common.collect.AbstractBiMap.keySet()
java.util.Set.iterator()
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
com.google.common.collect.AbstractBiMap.keySet()
that
has
allOf
inOrder
com.google.common.collect.AbstractBiMap.values()
that
has
allOf
inOrder
com.google.common.collect.AbstractBiMap.inverse()
java.util.Map.keySet()
that
has
allOf
inOrder
com.google.common.collect.AbstractBiMap.inverse()
com.google.common.collect.BiMap.values()
that
has
allOf
inOrder
Chamada: com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country)
Situação: Primeira Chamada
Chamada: com.google.common.collect.EnumBiMap.create(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.AbstractBiMap.keySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.526882259492682
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.24731170894317414
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.AbstractBiMap.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.AbstractBiMap.values()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Situação: Manual
Chamada: com.google.common.collect.BiMap.values()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.07142857142857142
Corretude: 0.3333333333333333
F-Measure: 0.11764705882352941
************************ Método Avaliado: com.google.common.collect.EnumBiMapTest.testEntrySet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country)
com.google.common.collect.EnumBiMap.create(java.util.Map)
com.google.common.collect.Sets.newIdentityHashSet()
com.google.common.collect.AbstractBiMap.entrySet()
java.util.Set.addAll(java.util.Collection)
java.util.Set.size()
assertEquals
Chamada: com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country)
Situação: Primeira Chamada
Chamada: com.google.common.collect.EnumBiMap.create(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.Sets.newIdentityHashSet()
Situação: Manual
Chamada: com.google.common.collect.AbstractBiMap.entrySet()
Situação: Manual
Chamada: java.util.Set.addAll(java.util.Collection)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.EnumBiMapTest.testIterationOrder() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country)
com.google.common.collect.EnumBiMap.create(java.util.Map)
com.google.common.collect.AbstractBiMap.keySet()
that
has
allOf
inOrder
com.google.common.collect.AbstractBiMap.values()
that
has
allOf
inOrder
com.google.common.collect.AbstractBiMap.inverse()
java.util.Map.keySet()
that
has
allOf
inOrder
com.google.common.collect.AbstractBiMap.inverse()
com.google.common.collect.BiMap.values()
that
has
allOf
inOrder
Chamada: com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country)
Situação: Primeira Chamada
Chamada: com.google.common.collect.EnumBiMap.create(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.AbstractBiMap.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.AbstractBiMap.values()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Situação: Manual
Chamada: com.google.common.collect.BiMap.values()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.EnumBiMapTest.testValuesIteratorRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country)
com.google.common.collect.EnumBiMap.create(java.util.Map)
com.google.common.collect.AbstractBiMap.keySet()
java.util.Set.iterator()
java.util.Iterator.next()
assertEquals
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
com.google.common.collect.AbstractBiMap.keySet()
that
has
allOf
inOrder
com.google.common.collect.AbstractBiMap.values()
that
has
allOf
inOrder
com.google.common.collect.AbstractBiMap.inverse()
java.util.Map.keySet()
that
has
allOf
inOrder
com.google.common.collect.AbstractBiMap.inverse()
com.google.common.collect.BiMap.values()
that
has
allOf
inOrder
Chamada: com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency, com.google.common.collect.EnumBiMapTest$Country)
Situação: Primeira Chamada
Chamada: com.google.common.collect.EnumBiMap.create(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.AbstractBiMap.keySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.526882259492682
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.24731170894317414
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.AbstractBiMap.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.AbstractBiMap.values()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Situação: Manual
Chamada: com.google.common.collect.BiMap.values()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.06666666666666667
Corretude: 0.3333333333333333
F-Measure: 0.1111111111111111
************************ Método Avaliado: com.google.common.collect.EnumBiMapTest$EnumBiMapGenerator.create([Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.EnumBiMap.create(java.lang.Class, java.lang.Class)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.BiMap.put(com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency)
Chamada: com.google.common.collect.EnumBiMap.create(java.lang.Class, java.lang.Class)
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.BiMap.put(com.google.common.collect.EnumBiMapTest$Country, com.google.common.collect.EnumBiMapTest$Currency)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.2
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.EnumHashBiMapTest.testCreate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.EnumHashBiMap.create(java.lang.Class)
com.google.common.collect.ForwardingMap.isEmpty()
assertTrue
com.google.common.collect.ForwardingObject.toString()
assertEquals
com.google.common.collect.HashBiMap.create()
assertEquals
com.google.common.collect.EnumHashBiMap.put(com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String)
com.google.common.collect.ForwardingMap.get(java.lang.Object)
assertEquals
com.google.common.collect.AbstractBiMap.inverse()
java.util.Map.get(java.lang.Object)
assertEquals
Chamada: com.google.common.collect.EnumHashBiMap.create(java.lang.Class)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ForwardingMap.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.ForwardingObject.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.HashBiMap.create()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.EnumHashBiMap.put(com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ForwardingMap.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.EnumHashBiMapTest.testEntrySet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String, com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String, com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String)
com.google.common.collect.EnumHashBiMap.create(java.util.Map)
com.google.common.collect.Sets.newIdentityHashSet()
com.google.common.collect.AbstractBiMap.entrySet()
java.util.Set.addAll(java.util.Collection)
java.util.Set.size()
assertEquals
Chamada: com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String, com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String, com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.EnumHashBiMap.create(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.Sets.newIdentityHashSet()
Situação: Manual
Chamada: com.google.common.collect.AbstractBiMap.entrySet()
Situação: Manual
Chamada: java.util.Set.addAll(java.util.Collection)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.EnumHashBiMapTest.testCreateFromMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String, com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String, com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String)
com.google.common.collect.EnumHashBiMap.create(java.util.Map)
com.google.common.collect.ForwardingMap.get(java.lang.Object)
assertEquals
com.google.common.collect.AbstractBiMap.inverse()
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Collections.emptyMap()
com.google.common.collect.EnumHashBiMap.create(java.util.Map)
fail
com.google.common.collect.EnumHashBiMap.create(java.lang.Class)
com.google.common.collect.EnumHashBiMap.create(java.util.Map)
com.google.common.collect.ForwardingMap.isEmpty()
assertTrue
com.google.common.collect.EnumBiMap.create(java.lang.Class, java.lang.Class)
com.google.common.collect.EnumHashBiMap.create(java.util.Map)
com.google.common.collect.ForwardingMap.isEmpty()
assertTrue
Chamada: com.google.common.collect.ImmutableMap.of(com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String, com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String, com.google.common.collect.EnumHashBiMapTest$Currency, java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.EnumHashBiMap.create(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ForwardingMap.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractBiMap.inverse()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collections.emptyMap()
Situação: Manual
Chamada: com.google.common.collect.EnumHashBiMap.create(java.util.Map)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.EnumHashBiMap.create(java.lang.Class)
Situação: Manual
Chamada: com.google.common.collect.EnumHashBiMap.create(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ForwardingMap.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.EnumBiMap.create(java.lang.Class, java.lang.Class)
Situação: Manual
Chamada: com.google.common.collect.EnumHashBiMap.create(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ForwardingMap.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.EnumHashBiMapTest$EnumHashBiMapGenerator.create([Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.EnumHashBiMap.create(java.lang.Class)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.BiMap.put(com.google.common.collect.EnumHashBiMapTest$Country, java.lang.String)
Chamada: com.google.common.collect.EnumHashBiMap.create(java.lang.Class)
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.BiMap.put(com.google.common.collect.EnumHashBiMapTest$Country, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.2
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.EnumMultisetTest.testEntrySet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.EnumMultiset.create(java.lang.Class)
com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color, I)
com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color, I)
com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color, I)
com.google.common.collect.Sets.newIdentityHashSet()
com.google.common.collect.Multiset.entrySet()
java.util.Set.addAll(java.util.Collection)
java.util.Set.size()
assertEquals
Chamada: com.google.common.collect.EnumMultiset.create(java.lang.Class)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color, I)
Situação: Manual
Chamada: com.google.common.collect.Sets.newIdentityHashSet()
Situação: Manual
Chamada: com.google.common.collect.Multiset.entrySet()
Situação: Manual
Chamada: java.util.Set.addAll(java.util.Collection)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.EnumMultisetTest.testCollectionCreate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Lcom.google.common.collect.EnumMultisetTest$Color;)
com.google.common.collect.EnumMultiset.create(java.lang.Iterable)
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
Chamada: java.util.Arrays.asList([Lcom.google.common.collect.EnumMultisetTest$Color;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.EnumMultiset.create(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.EnumMultisetTest.testClassCreate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.EnumMultiset.create(java.lang.Class)
com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color)
com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color)
com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color)
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
Chamada: com.google.common.collect.EnumMultiset.create(java.lang.Class)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(com.google.common.collect.EnumMultisetTest$Color)
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.GeneralRangeTest.testFromRangeTwoEnds() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.BoundType.values()
com.google.common.collect.BoundType.values()
com.google.common.collect.Ordering.natural()
com.google.common.collect.GeneralRange.range(java.util.Comparator, java.lang.Integer, com.google.common.collect.BoundType, java.lang.Integer, com.google.common.collect.BoundType)
com.google.common.collect.Range.range(java.lang.Integer, com.google.common.collect.BoundType, java.lang.Integer, com.google.common.collect.BoundType)
com.google.common.collect.GeneralRange.from(com.google.common.collect.Range)
assertEquals
Chamada: com.google.common.collect.BoundType.values()
Situação: Primeira Chamada
Chamada: com.google.common.collect.BoundType.values()
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.GeneralRange.range(java.util.Comparator, java.lang.Integer, com.google.common.collect.BoundType, java.lang.Integer, com.google.common.collect.BoundType)
Situação: Manual
Chamada: com.google.common.collect.Range.range(java.lang.Integer, com.google.common.collect.BoundType, java.lang.Integer, com.google.common.collect.BoundType)
Situação: Manual
Chamada: com.google.common.collect.GeneralRange.from(com.google.common.collect.Range)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.GeneralRangeTest.testFromRangeAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.GeneralRange.all(java.util.Comparator)
com.google.common.collect.Range.all()
com.google.common.collect.GeneralRange.from(com.google.common.collect.Range)
assertEquals
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: com.google.common.collect.GeneralRange.all(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.Range.all()
Situação: Manual
Chamada: com.google.common.collect.GeneralRange.from(com.google.common.collect.Range)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.GeneralRangeTest.testCreateSingletonRangeSucceeds() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.GeneralRange.range(java.util.Comparator, java.lang.Integer, com.google.common.collect.BoundType, java.lang.Integer, com.google.common.collect.BoundType)
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
com.google.common.collect.GeneralRange.contains(java.lang.Integer)
assertEquals
Chamada: com.google.common.collect.GeneralRange.range(java.util.Comparator, java.lang.Integer, com.google.common.collect.BoundType, java.lang.Integer, com.google.common.collect.BoundType)
Situação: Primeira Chamada
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.GeneralRange.contains(java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.HashBiMap.delete(com.google.common.collect.HashBiMap$BiEntry)
Inútil
Método: com.google.common.collect.HashBiMap.insert(com.google.common.collect.HashBiMap$BiEntry)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.GeneralRangeTest.testFromRangeOneEnd() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.BoundType.values()
com.google.common.collect.Ordering.natural()
com.google.common.collect.GeneralRange.upTo(java.util.Comparator, java.lang.Integer, com.google.common.collect.BoundType)
com.google.common.collect.Range.upTo(java.lang.Integer, com.google.common.collect.BoundType)
com.google.common.collect.GeneralRange.from(com.google.common.collect.Range)
assertEquals
com.google.common.collect.Ordering.natural()
com.google.common.collect.GeneralRange.downTo(java.util.Comparator, java.lang.Integer, com.google.common.collect.BoundType)
com.google.common.collect.Range.downTo(java.lang.Integer, com.google.common.collect.BoundType)
com.google.common.collect.GeneralRange.from(com.google.common.collect.Range)
assertEquals
Chamada: com.google.common.collect.BoundType.values()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.GeneralRange.upTo(java.util.Comparator, java.lang.Integer, com.google.common.collect.BoundType)
Situação: Manual
Chamada: com.google.common.collect.Range.upTo(java.lang.Integer, com.google.common.collect.BoundType)
Situação: Manual
Chamada: com.google.common.collect.GeneralRange.from(com.google.common.collect.Range)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.GeneralRange.downTo(java.util.Comparator, java.lang.Integer, com.google.common.collect.BoundType)
Situação: Manual
Chamada: com.google.common.collect.Range.downTo(java.lang.Integer, com.google.common.collect.BoundType)
Situação: Manual
Chamada: com.google.common.collect.GeneralRange.from(com.google.common.collect.Range)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Útil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.1
Corretude: 0.2
F-Measure: 0.13333333333333333
************************ Método Avaliado: com.google.common.collect.HashBiMapTest.testMapConstructor() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.HashBiMap.create(java.util.Map)
com.google.common.collect.HashBiMap.get(java.lang.Object)
assertEquals
com.google.common.collect.HashBiMap.inverse()
java.util.Map.get(java.lang.Object)
assertEquals
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.HashBiMap.create(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.HashBiMap.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.HashBiMap.inverse()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.HashBiMapTest.testBashIt() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashBiMap.create(I)
com.google.common.collect.BiMap.inverse()
com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.Integer)
assertNull
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.get(java.lang.Object)
com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.Integer)
assertEquals
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.entrySet()
java.util.Map$Entry.getValue()
java.util.Map$Entry.setValue(java.lang.Integer)
java.util.Map.get(java.lang.Object)
assertEquals
Chamada: com.google.common.collect.HashBiMap.create(I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.BiMap.inverse()
Situação: Manual
Chamada: com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: assertNull
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.05263157894736842
Corretude: 0.125
F-Measure: 0.07407407407407407
************************ Método Avaliado: com.google.common.collect.HashBiMapTest.testBiMapEntrySetIteratorRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashBiMap.create()
com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.setValue(java.lang.String)
java.util.Map.get(java.lang.Object)
assertEquals
java.lang.Integer.valueOf(I)
com.google.common.collect.BiMap.inverse()
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Iterator.remove()
java.util.Map.isEmpty()
assertTrue
Chamada: com.google.common.collect.HashBiMap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.17500037843811023
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.setValue(java.lang.String)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.Integer.valueOf(I)
Situação: Manual
Chamada: com.google.common.collect.BiMap.inverse()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.7142863321425174
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Iterator.remove()
Útil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.21428571428571427
Corretude: 0.3333333333333333
F-Measure: 0.2608695652173913
************************ Método Avaliado: com.google.common.collect.HashBiMapTest$HashBiMapGenerator.create([Ljava.util.Map$Entry;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashBiMap.create()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.BiMap.put(java.lang.String, java.lang.String)
Chamada: com.google.common.collect.HashBiMap.create()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.2
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.HashMultisetTest.testCreateFromIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.HashMultisetTest.testCreateWithSize() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashMultiset.create(I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
Chamada: com.google.common.collect.HashMultiset.create(I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.HashMultisetTest.testCreate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashMultiset.create()
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
Chamada: com.google.common.collect.HashMultiset.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableBiMapTest$AbstractMapTests.assertMoreInvariants(java.util.Map) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.lang.Object.toString()
assertEquals
java.util.Map$Entry.getKey()
com.google.common.collect.BiMap.inverse()
java.util.Map$Entry.getValue()
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.entrySet()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.lang.Object.toString()
assertEquals
java.util.Map.entrySet()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.util.Map.entrySet()
java.lang.Object.toString()
assertEquals
java.util.Map.keySet()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.util.Map.keySet()
java.lang.Object.toString()
assertEquals
java.util.Map.values()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.util.Map.values()
java.lang.Object.toString()
assertEquals
java.util.Map.entrySet()
com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
java.util.Map.entrySet()
assertEquals
java.util.Map.keySet()
com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
java.util.Map.keySet()
assertEquals
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.12500009460940822
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.BiMap.inverse()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.values()
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map.values()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.1111111111111111
Corretude: 0.25
F-Measure: 0.15384615384615383
************************ Método Avaliado: com.google.common.collect.ImmutableBiMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.ImmutableBiMapTest$CreationTests.testFromHashMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableBiMap.copyOf(java.util.Map)
com.google.common.collect.ImmutableBiMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
com.google.common.collect.ImmutableBiMap.inverse()
com.google.common.collect.ImmutableBiMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Primeira Chamada
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableBiMap.copyOf(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ImmutableBiMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableBiMap.inverse()
Situação: Manual
Chamada: com.google.common.collect.ImmutableBiMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.assertMultimapEquals(com.google.common.collect.Multimap, [Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
Chamada: com.google.common.collect.Multimap.size()
Situação: Primeira Chamada
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.4
F-Measure: 0.3636363636363636
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderPutAllMultimapWithDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableListMultimap$Builder.build()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090924103309334
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableListMultimap$Builder.build()
Útil
Percentual de Automatização: 0.045454545454545456
Corretude: 1.0
F-Measure: 0.08695652173913045
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderPutAllWithDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.build()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
assertEquals
com.google.common.collect.ImmutableMultimap.size()
assertEquals
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090924103309334
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableListMultimap$Builder.build()
Útil
Percentual de Automatização: 0.08333333333333333
Corretude: 1.0
F-Measure: 0.15384615384615385
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest$ImmutableListMultimapGenerator.create([Ljava.util.Map$Entry;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.String)
com.google.common.collect.ImmutableListMultimap$Builder.build()
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090924103309334
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableListMultimap$Builder.build()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderOrderKeysByDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.orderKeysBy(java.util.Comparator)
java.lang.String.length()
java.lang.String.length()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.ImmutableMultimap.values()
that
has
allOf
inOrder
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
that
has
allOf
inOrder
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.orderKeysBy(java.util.Comparator)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090924103309334
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.ImmutableMultimap.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.values()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: com.google.common.collect.ImmutableListMultimap$Builder.build()
Útil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.06666666666666667
Corretude: 0.4
F-Measure: 0.1142857142857143
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testMultimapReads() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimapTest.createMultimap()
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.entries()
java.util.Collection.isEmpty()
assertFalse
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.Multimap.isEmpty()
assertFalse
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.ImmutableListMultimapTest.createMultimap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.isEmpty()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Collection.size()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderOrderKeysAndValuesBy() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableListMultimap$Builder.orderKeysBy(java.util.Comparator)
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableListMultimap$Builder.orderValuesBy(java.util.Comparator)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.ImmutableMultimap.values()
that
has
allOf
inOrder
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
that
has
allOf
inOrder
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.orderKeysBy(java.util.Comparator)
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.orderValuesBy(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090924103309334
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.ImmutableMultimap.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.values()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableListMultimap$Builder.build()
Útil
Percentual de Automatização: 0.03225806451612903
Corretude: 1.0
F-Measure: 0.0625
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testMultimapEquals() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimapTest.createMultimap()
com.google.common.collect.ArrayListMultimap.create()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimapTest.createMultimap()
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
addEqualityGroup
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
addEqualityGroup
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
addEqualityGroup
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
addEqualityGroup
testEquals
Chamada: com.google.common.collect.ImmutableListMultimapTest.createMultimap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ArrayListMultimap.create()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimapTest.createMultimap()
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090924103309334
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: addEqualityGroup
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090924103309334
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: addEqualityGroup
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090924103309334
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: addEqualityGroup
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090924103309334
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: addEqualityGroup
Situação: Manual
Chamada: testEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableListMultimap$Builder.build()
Útil
Percentual de Automatização: 0.13793103448275862
Corretude: 1.0
F-Measure: 0.2424242424242424
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testEmptyMultimapReads() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.of()
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.entries()
java.util.Collection.isEmpty()
assertTrue
com.google.common.collect.ArrayListMultimap.create()
com.google.common.collect.Multimap.equals(java.lang.Object)
assertTrue
java.util.Collections.emptyList()
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.hashCode()
assertEquals
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.HashMultiset.create()
com.google.common.collect.Multimap.keys()
assertEquals
java.util.Collections.emptySet()
com.google.common.collect.Multimap.keySet()
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.Multimap.values()
java.util.Collection.isEmpty()
assertTrue
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.ImmutableListMultimap.of()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.ArrayListMultimap.create()
Situação: Manual
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collections.emptyList()
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.HashMultiset.create()
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collections.emptySet()
Situação: Manual
Chamada: com.google.common.collect.Multimap.keySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.values()
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Collection.size()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderOrderKeysBy() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableListMultimap$Builder.orderKeysBy(java.util.Comparator)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.ImmutableMultimap.values()
that
has
allOf
inOrder
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
that
has
allOf
inOrder
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.orderKeysBy(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090924103309334
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.ImmutableMultimap.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.values()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableListMultimap$Builder.build()
Útil
Percentual de Automatização: 0.034482758620689655
Corretude: 1.0
F-Measure: 0.06666666666666667
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderPutNullKey() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
fail
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
fail
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
fail
com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
fail
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableListMultimap$Builder.build()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderPutWithDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
assertEquals
com.google.common.collect.ImmutableMultimap.size()
assertEquals
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090924103309334
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableListMultimap$Builder.build()
Útil
Percentual de Automatização: 0.08333333333333333
Corretude: 1.0
F-Measure: 0.15384615384615385
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testInverseMinimizesWork() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
com.google.common.collect.ImmutableListMultimap$Builder.build()
com.google.common.collect.ImmutableListMultimap.inverse()
com.google.common.collect.ImmutableListMultimap.inverse()
assertSame
com.google.common.collect.ImmutableListMultimap.inverse()
com.google.common.collect.ImmutableListMultimap.inverse()
assertSame
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Character)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090924103309334
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.ImmutableListMultimap.inverse()
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.inverse()
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.inverse()
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.inverse()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableListMultimap$Builder.build()
Útil
Percentual de Automatização: 0.07692307692307693
Corretude: 1.0
F-Measure: 0.14285714285714288
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderPutAllVarargs() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.build()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090924103309334
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableListMultimap$Builder.build()
Útil
Percentual de Automatização: 0.08333333333333333
Corretude: 1.0
F-Measure: 0.15384615384615385
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderPutAllMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableListMultimap$Builder.build()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090924103309334
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableListMultimap$Builder.build()
Útil
Percentual de Automatização: 0.05
Corretude: 1.0
F-Measure: 0.09523809523809523
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderPutNullValue() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
fail
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
fail
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
fail
com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
fail
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableListMultimap$Builder.build()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderPutAllIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
com.google.common.collect.ImmutableListMultimap$Builder.build()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Situação: Primeira Chamada
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090924103309334
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableListMultimap$Builder.build()
Útil
Percentual de Automatização: 0.06666666666666667
Corretude: 1.0
F-Measure: 0.125
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.testBuilderOrderValuesBy() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableListMultimap$Builder.orderValuesBy(java.util.Comparator)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.ImmutableMultimap.values()
that
has
allOf
inOrder
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
that
has
allOf
inOrder
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.orderValuesBy(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090924103309334
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.ImmutableMultimap.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.values()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableListMultimap$Builder.build()
Útil
Percentual de Automatização: 0.034482758620689655
Corretude: 1.0
F-Measure: 0.06666666666666667
************************ Método Avaliado: com.google.common.collect.ImmutableListMultimapTest.createMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap.builder()
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
Chamada: com.google.common.collect.ImmutableListMultimap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090924103309334
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableListMultimap$Builder.build()
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.ImmutableListTest$BasicTests.testBuilderAddHandlesNullsCorrectly() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.builder()
com.google.common.collect.ImmutableList$Builder.add(java.lang.String)
fail
com.google.common.collect.ImmutableList$Builder.add([Ljava.lang.String;)
fail
com.google.common.collect.ImmutableList$Builder.add([Ljava.lang.String;)
fail
Chamada: com.google.common.collect.ImmutableList.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList$Builder.add(java.lang.String)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.add([Ljava.lang.String;)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.add([Ljava.lang.String;)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableList$Builder.build()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableListTest$CreationTests.testBuilderAddArrayHandlesNulls() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.builder()
com.google.common.collect.ImmutableList$Builder.add([Ljava.lang.String;)
fail
com.google.common.collect.ImmutableList$Builder.build()
com.google.common.collect.ImmutableCollection.isEmpty()
com.google.common.collect.ImmutableList.of(java.lang.String)
com.google.common.collect.ImmutableList.equals(java.lang.Object)
assertTrue
java.util.List.size()
assertEquals
Chamada: com.google.common.collect.ImmutableList.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList$Builder.add([Ljava.lang.String;)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableCollection.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.equals(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList$Builder.build()
Útil
Percentual de Automatização: 0.1111111111111111
Corretude: 0.2
F-Measure: 0.14285714285714285
************************ Método Avaliado: com.google.common.collect.ImmutableListTest$BasicTests.testBuilderAddAllHandlesNullsCorrectly() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.builder()
com.google.common.collect.ImmutableList$Builder.addAll(java.lang.Iterable)
fail
com.google.common.collect.ImmutableList$Builder.addAll(java.util.Iterator)
fail
com.google.common.collect.ImmutableList.builder()
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.ImmutableList$Builder.addAll(java.lang.Iterable)
fail
com.google.common.collect.ImmutableList.builder()
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.ImmutableList$Builder.addAll(java.util.Iterator)
fail
of
com.google.common.collect.ImmutableList$Builder.addAll(java.lang.Iterable)
fail
Chamada: com.google.common.collect.ImmutableList.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList$Builder.addAll(java.lang.Iterable)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.addAll(java.util.Iterator)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.builder()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.addAll(java.lang.Iterable)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.builder()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.addAll(java.util.Iterator)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: of
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.addAll(java.lang.Iterable)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.collect.ImmutableList$Builder.build()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableListTest$CreationTests.testCopyOf_iterator_general() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.ImmutableList.copyOf(java.util.Iterator)
java.util.Arrays.asList([Ljava.lang.String;)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.copyOf(java.util.Iterator)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableListTest$BasicTests.testBuilderAddAll_iterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.ImmutableList$Builder.addAll(java.util.Iterator)
java.util.List.iterator()
com.google.common.collect.ImmutableList$Builder.addAll(java.util.Iterator)
com.google.common.collect.ImmutableList$Builder.build()
java.util.Arrays.asList([Ljava.lang.String;)
assertEquals
java.util.List.set(I, java.lang.String)
java.util.Arrays.asList([Ljava.lang.String;)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.addAll(java.util.Iterator)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.addAll(java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.set(I, java.lang.String)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableListTest$CreationTests.testCopyOf_concurrentlyMutating() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.size()
misleadingSizeCollection
java.util.List.subList(I, I)
java.util.Collection.addAll(java.util.Collection)
com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
assertEquals
com.google.common.collect.ImmutableList.copyOf(java.lang.Iterable)
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: misleadingSizeCollection
Situação: Manual
Chamada: java.util.List.subList(I, I)
Situação: Manual
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.copyOf(java.lang.Iterable)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableListTest$BasicTests.testComplexBuilder() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableList.builder()
com.google.common.collect.ImmutableList$Builder.add(java.lang.Integer)
com.google.common.collect.ImmutableList$Builder.build()
java.util.List.size()
assertEquals
java.util.List.size()
com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Integer;)
assertEquals
assertEquals
assertEquals
assertEquals
assertEquals
java.util.List.get(I)
assertEquals
java.util.List.get(I)
assertEquals
com.google.common.collect.ImmutableList$Builder.add(java.lang.Integer)
com.google.common.collect.ImmutableList$Builder.build()
java.util.List.size()
assertEquals
java.util.List.size()
assertEquals
java.util.List.size()
com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Integer;)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.add(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Integer;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.add(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.Integer;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Útil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList$Builder.build()
Útil
Percentual de Automatização: 0.28
Corretude: 0.6
F-Measure: 0.38181818181818183
************************ Método Avaliado: com.google.common.collect.ImmutableListTest$CreationTests.testCopyOf_iteratorContainingNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.ImmutableList.copyOf(java.util.Iterator)
fail
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.copyOf(java.util.Iterator)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableListTest$CreationTests.testBuilderAddCollectionHandlesNulls() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.ImmutableList.builder()
com.google.common.collect.ImmutableList$Builder.addAll(java.lang.Iterable)
fail
com.google.common.collect.ImmutableList$Builder.build()
com.google.common.collect.ImmutableList.of(java.lang.String)
assertEquals
java.util.List.size()
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.addAll(java.lang.Iterable)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList$Builder.build()
Útil
Percentual de Automatização: 0.125
Corretude: 0.2
F-Measure: 0.15384615384615385
************************ Método Avaliado: com.google.common.collect.ImmutableMapTest.testAsMultimapCaches() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMap.asMultimap()
com.google.common.collect.ImmutableMap.asMultimap()
com.google.common.collect.ImmutableMultimap.asMap()
java.util.Map.size()
assertEquals
assertSame
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap.asMultimap()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.asMultimap()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.asMap()
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
assertEquals
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.19999946177745306
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19999946177745306
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Map.entrySet()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.6
F-Measure: 0.5454545454545454
************************ Método Avaliado: com.google.common.collect.ImmutableMapTest$AbstractMapTests.assertMoreInvariants(java.util.Map) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.lang.Object.toString()
assertEquals
java.util.Map.entrySet()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.lang.Object.toString()
assertEquals
java.util.Map.entrySet()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.util.Map.entrySet()
java.lang.Object.toString()
assertEquals
java.util.Map.keySet()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.util.Map.keySet()
java.lang.Object.toString()
assertEquals
java.util.Map.values()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.util.Map.values()
java.lang.Object.toString()
assertEquals
java.util.Map.entrySet()
from
java.util.Map.entrySet()
assertEquals
java.util.Map.keySet()
com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
java.util.Map.keySet()
assertEquals
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.values()
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map.values()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: from
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.06451612903225806
Corretude: 0.3333333333333333
F-Measure: 0.1081081081081081
************************ Método Avaliado: com.google.common.collect.ImmutableMapTest.testMutableValues() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(java.lang.String, com.google.common.collect.ImmutableMapTest$IntHolder, java.lang.String, com.google.common.collect.ImmutableMapTest$IntHolder)
java.util.Map.entrySet()
com.google.common.collect.Maps.immutableEntry(java.lang.String, com.google.common.collect.ImmutableMapTest$IntHolder)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
java.util.Map.hashCode()
java.util.Map.entrySet()
java.util.Set.hashCode()
assertEquals
java.util.Map.hashCode()
java.util.Map.hashCode()
assertEquals
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, com.google.common.collect.ImmutableMapTest$IntHolder, java.lang.String, com.google.common.collect.ImmutableMapTest$IntHolder)
Situação: Primeira Chamada
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, com.google.common.collect.ImmutableMapTest$IntHolder)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.hashCode()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Set.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.hashCode()
Situação: Manual
Chamada: java.util.Map.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Set.contains(java.lang.Object)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMapTest.testNullGet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
assertNull
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Manual
Chamada: assertNull
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableMap.of()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMultimapTest.testUnhashableMixedValues() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMultimap.of(java.lang.Integer, java.lang.Object, java.lang.Integer, java.lang.Object, java.lang.Integer, java.lang.Object)
com.google.common.collect.Multimap.get(java.lang.Integer)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multimap.get(java.lang.Integer)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.get(java.lang.Integer)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.get(java.lang.Integer)
java.util.Collection.contains(java.lang.Object)
assertTrue
Chamada: com.google.common.collect.ImmutableMultimap.of(java.lang.Integer, java.lang.Object, java.lang.Integer, java.lang.Object, java.lang.Integer, java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.get(java.lang.Integer)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.Integer)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.Integer)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.Integer)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMultisetTest.testBuilderAddAllIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.ImmutableMultiset$Builder.addAll(java.util.Iterator)
com.google.common.collect.ImmutableMultiset$Builder.build()
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultiset$Builder.addAll(java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultiset$Builder.build()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMultisetTest.testCopyOf_iterator_general() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.ImmutableMultiset.copyOf(java.util.Iterator)
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultiset.copyOf(java.util.Iterator)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMultisetTest.testCopyOf_iteratorContainingNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.ImmutableMultiset.copyOf(java.util.Iterator)
fail
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultiset.copyOf(java.util.Iterator)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMultisetTest.testCopyOf_multiset_empty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashMultiset.create()
com.google.common.collect.ImmutableMultiset.copyOf(java.lang.Iterable)
java.util.Collection.isEmpty()
assertTrue
Chamada: com.google.common.collect.HashMultiset.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMultiset.copyOf(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMultisetTest.testCreation_emptyArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMultiset.copyOf([Ljava.lang.String;)
java.util.Collection.isEmpty()
assertTrue
Chamada: com.google.common.collect.ImmutableMultiset.copyOf([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMultisetTest.testCopyOf_iterator_empty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.ImmutableMultiset.copyOf(java.util.Iterator)
java.util.Collection.isEmpty()
assertTrue
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMultiset.copyOf(java.util.Iterator)
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMultisetTest.testAsList() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMultiset.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
assertEquals
com.google.common.collect.ImmutableList.indexOf(java.lang.Object)
assertEquals
com.google.common.collect.ImmutableList.lastIndexOf(java.lang.Object)
assertEquals
Chamada: com.google.common.collect.ImmutableMultiset.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.indexOf(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.lastIndexOf(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMultisetTest.testCopyOf_collection_empty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
of
com.google.common.collect.ImmutableMultiset.copyOf(java.lang.Iterable)
java.util.Collection.isEmpty()
assertTrue
Chamada: of
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMultiset.copyOf(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMultisetTest.testCreation_noArgs() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMultiset.of()
java.util.Collection.isEmpty()
assertTrue
Chamada: com.google.common.collect.ImmutableMultiset.of()
Situação: Primeira Chamada
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderPutAllWithDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.size()
assertEquals
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableMultimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 1.0
F-Measure: 0.2857142857142857
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderPutAllMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Útil
Percentual de Automatização: 0.05
Corretude: 1.0
F-Measure: 0.09523809523809523
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderPutAllIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Situação: Primeira Chamada
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Útil
Percentual de Automatização: 0.06666666666666667
Corretude: 1.0
F-Measure: 0.125
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderOrderKeysBy() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableSetMultimap$Builder.orderKeysBy(java.util.Comparator)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.ImmutableMultimap.values()
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
assertFalse
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
assertFalse
com.google.common.collect.ImmutableMultimap.asMap()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.orderKeysBy(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableMultimap.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.values()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.asMap()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Útil
Método: com.google.common.collect.ImmutableMap.of()
Inútil
Percentual de Automatização: 0.027777777777777776
Corretude: 0.3333333333333333
F-Measure: 0.05128205128205128
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.assertMultimapEquals(com.google.common.collect.Multimap, [Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.Multimap.entries()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
Chamada: com.google.common.collect.Multimap.size()
Situação: Primeira Chamada
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.4
F-Measure: 0.3636363636363636
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderPutWithDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.size()
assertEquals
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableMultimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 1.0
F-Measure: 0.2857142857142857
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderOrderKeysByDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.orderKeysBy(java.util.Comparator)
java.lang.String.length()
java.lang.String.length()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.ImmutableMultimap.values()
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
assertFalse
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
assertFalse
com.google.common.collect.ImmutableMultimap.asMap()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.orderKeysBy(java.util.Comparator)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableMultimap.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.values()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.asMap()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Útil
Método: com.google.common.collect.ImmutableMap.of()
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.05405405405405406
Corretude: 0.2857142857142857
F-Measure: 0.09090909090909091
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderOrderValuesBy() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableSetMultimap$Builder.orderValuesBy(java.util.Comparator)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.ImmutableMultimap.values()
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
assertTrue
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
com.google.common.collect.ImmutableSortedSet.comparator()
assertEquals
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
assertTrue
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
com.google.common.collect.ImmutableSortedSet.comparator()
assertEquals
com.google.common.collect.ImmutableMultimap.asMap()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
assertTrue
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableMultimap.asMap()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableSortedSet.comparator()
assertEquals
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.orderValuesBy(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableMultimap.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.values()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet.comparator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet.comparator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.asMap()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.asMap()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableSortedSet.comparator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Útil
Método: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Útil
Método: com.google.common.collect.ImmutableMap.of()
Inútil
Percentual de Automatização: 0.04081632653061224
Corretude: 0.6666666666666666
F-Measure: 0.07692307692307691
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderPutNullValue() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
fail
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
fail
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
fail
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
fail
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testMultimapEquals() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimapTest.createMultimap()
com.google.common.collect.HashMultimap.create()
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimapTest.createMultimap()
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
addEqualityGroup
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
addEqualityGroup
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
addEqualityGroup
testEquals
Chamada: com.google.common.collect.ImmutableSetMultimapTest.createMultimap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.HashMultimap.create()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimapTest.createMultimap()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: addEqualityGroup
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: addEqualityGroup
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: addEqualityGroup
Situação: Manual
Chamada: testEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Útil
Percentual de Automatização: 0.14285714285714285
Corretude: 1.0
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderPutAllVarargs() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Útil
Percentual de Automatização: 0.08333333333333333
Corretude: 1.0
F-Measure: 0.15384615384615385
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.createMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Útil
Percentual de Automatização: 0.25
Corretude: 1.0
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testMultimapReads() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimapTest.createMultimap()
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.entries()
java.util.Collection.isEmpty()
assertFalse
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.Multimap.isEmpty()
assertFalse
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.ImmutableSetMultimapTest.createMultimap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.isEmpty()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Collection.size()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderOrderKeysAndValuesBy() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableSetMultimap$Builder.orderKeysBy(java.util.Comparator)
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableSetMultimap$Builder.orderValuesBy(java.util.Comparator)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.ImmutableMultimap.values()
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
assertTrue
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
com.google.common.collect.ImmutableSortedSet.comparator()
assertEquals
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
assertTrue
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
com.google.common.collect.ImmutableSortedSet.comparator()
assertEquals
com.google.common.collect.ImmutableMultimap.asMap()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
assertTrue
java.util.Collections.reverseOrder()
com.google.common.collect.ImmutableMultimap.asMap()
com.google.common.collect.ImmutableMap.get(java.lang.Object)
com.google.common.collect.ImmutableSortedSet.comparator()
assertEquals
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.orderKeysBy(java.util.Comparator)
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.orderValuesBy(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableMultimap.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.values()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet.comparator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet.comparator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.asMap()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap.asMap()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.17647078727523022
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableSortedSet.comparator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Útil
Método: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Útil
Método: com.google.common.collect.ImmutableMap.of()
Inútil
Percentual de Automatização: 0.0392156862745098
Corretude: 0.6666666666666666
F-Measure: 0.07407407407407407
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testEmptyMultimapReads() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.of()
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.entries()
java.util.Collection.isEmpty()
assertTrue
com.google.common.collect.HashMultimap.create()
com.google.common.collect.Multimap.equals(java.lang.Object)
assertTrue
java.util.Collections.emptySet()
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.hashCode()
assertEquals
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.HashMultiset.create()
com.google.common.collect.Multimap.keys()
assertEquals
java.util.Collections.emptySet()
com.google.common.collect.Multimap.keySet()
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.Multimap.values()
java.util.Collection.isEmpty()
assertTrue
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.ImmutableSetMultimap.of()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.HashMultimap.create()
Situação: Manual
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collections.emptySet()
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.HashMultiset.create()
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collections.emptySet()
Situação: Manual
Chamada: com.google.common.collect.Multimap.keySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.values()
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Collection.size()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderPutAllMultimapWithDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
com.google.common.collect.ImmutableMultimap.size()
assertEquals
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableMultimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Útil
Percentual de Automatização: 0.1
Corretude: 1.0
F-Measure: 0.18181818181818182
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest.testBuilderPutNullKey() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
fail
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
fail
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
fail
com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
fail
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(java.lang.String, [Ljava.lang.Integer;)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testHeadMapInclusive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.headMap(java.lang.String, Z)
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedMap.headMap(java.lang.String, Z)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testHeadMapExclusive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.headMap(java.lang.String, Z)
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedMap.headMap(java.lang.String, Z)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testCopyOf() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
assertSame
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableSortedMap.comparator()
assertSame
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testBuilderComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.reverse()
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.build()
com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
com.google.common.collect.ImmutableSortedMap.comparator()
assertSame
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.reverse()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Útil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.1
Corretude: 0.2
F-Measure: 0.13333333333333333
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testTailMapInclusive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.tailMap(java.lang.String, Z)
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedMap.tailMap(java.lang.String, Z)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testCopyOfExplicitComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.reverse()
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map, java.util.Comparator)
com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map, java.util.Comparator)
assertSame
com.google.common.collect.ImmutableSortedMap.comparator()
assertSame
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.reverse()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map, java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map, java.util.Comparator)
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Útil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.1
Corretude: 0.2
F-Measure: 0.13333333333333333
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testCopyOfSortedExplicit() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.reverse()
com.google.common.collect.Maps.newTreeMap(java.util.Comparator)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.copyOfSorted(java.util.SortedMap)
com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
com.google.common.collect.ImmutableSortedMap.copyOfSorted(java.util.SortedMap)
assertSame
com.google.common.collect.ImmutableSortedMap.comparator()
assertSame
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.reverse()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.Maps.newTreeMap(java.util.Comparator)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.copyOfSorted(java.util.SortedMap)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.copyOfSorted(java.util.SortedMap)
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Útil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.09090909090909091
Corretude: 0.2
F-Measure: 0.12500000000000003
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testTailMapExclusive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.tailMap(java.lang.String, Z)
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedMap.tailMap(java.lang.String, Z)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testImmutableMapCopyOfImmutableSortedMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(com.google.common.collect.ImmutableSortedMapTest$CreationTests$IntegerDiv10, java.lang.String, com.google.common.collect.ImmutableSortedMapTest$CreationTests$IntegerDiv10, java.lang.String, com.google.common.collect.ImmutableSortedMapTest$CreationTests$IntegerDiv10, java.lang.String)
com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
java.util.Map.containsKey(java.lang.Object)
assertTrue
java.util.Map.containsKey(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.ImmutableSortedMap.of(com.google.common.collect.ImmutableSortedMapTest$CreationTests$IntegerDiv10, java.lang.String, com.google.common.collect.ImmutableSortedMapTest$CreationTests$IntegerDiv10, java.lang.String, com.google.common.collect.ImmutableSortedMapTest$CreationTests$IntegerDiv10, java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Situação: Manual
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Map.get(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testSubMapExclusiveExclusive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.subMap(java.lang.String, Z, java.lang.String, Z)
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedMap.subMap(java.lang.String, Z, java.lang.String, Z)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testSubMapInclusiveExclusive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.subMap(java.lang.String, Z, java.lang.String, Z)
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedMap.subMap(java.lang.String, Z, java.lang.String, Z)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testCopyOfEmptyMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.emptyMap()
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
java.util.Collections.emptyMap()
assertEquals
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
assertSame
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableSortedMap.comparator()
assertSame
Chamada: java.util.Collections.emptyMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
Situação: Manual
Chamada: java.util.Collections.emptyMap()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testCopyOfSingletonMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singletonMap(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
assertSame
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableSortedMap.comparator()
assertSame
Chamada: java.util.Collections.singletonMap(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map)
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testSubMapInclusiveInclusive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.subMap(java.lang.String, Z, java.lang.String, Z)
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedMap.subMap(java.lang.String, Z, java.lang.String, Z)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testSubMapExclusiveInclusive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.subMap(java.lang.String, Z, java.lang.String, Z)
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedMap.subMap(java.lang.String, Z, java.lang.String, Z)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testCopyOfSortedNatural() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newTreeMap()
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.copyOfSorted(java.util.SortedMap)
com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
com.google.common.collect.ImmutableSortedMap.copyOfSorted(java.util.SortedMap)
assertSame
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableSortedMap.comparator()
assertSame
Chamada: com.google.common.collect.Maps.newTreeMap()
Situação: Primeira Chamada
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.copyOfSorted(java.util.SortedMap)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.copyOfSorted(java.util.SortedMap)
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testMutableValues() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, com.google.common.collect.ImmutableSortedMapTest$IntHolder, java.lang.String, com.google.common.collect.ImmutableSortedMapTest$IntHolder)
java.util.Map.entrySet()
com.google.common.collect.Maps.immutableEntry(java.lang.String, com.google.common.collect.ImmutableSortedMapTest$IntHolder)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
java.util.Map.hashCode()
java.util.Map.entrySet()
java.util.Set.hashCode()
assertEquals
java.util.Map.hashCode()
java.util.Map.hashCode()
assertEquals
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, com.google.common.collect.ImmutableSortedMapTest$IntHolder, java.lang.String, com.google.common.collect.ImmutableSortedMapTest$IntHolder)
Situação: Primeira Chamada
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, com.google.common.collect.ImmutableSortedMapTest$IntHolder)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.hashCode()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Set.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.hashCode()
Situação: Manual
Chamada: java.util.Map.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Set.contains(java.lang.Object)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.size()
assertEquals
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
Chamada: java.util.Map.size()
Situação: Primeira Chamada
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.13333346788897008
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.19999946177745306
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19999946177745306
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Map.entrySet()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.6
F-Measure: 0.5454545454545454
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$AbstractMapTests.assertMoreInvariants(java.util.Map) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.lang.Object.toString()
assertEquals
java.util.Map.entrySet()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.lang.Object.toString()
assertEquals
java.util.Map.entrySet()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.util.Map.entrySet()
java.lang.Object.toString()
assertEquals
java.util.Map.keySet()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.util.Map.keySet()
java.lang.Object.toString()
assertEquals
java.util.Map.values()
com.google.common.base.Joiner.join(java.lang.Iterable)
java.util.Map.values()
java.lang.Object.toString()
assertEquals
java.util.Map.entrySet()
com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
java.util.Map.entrySet()
assertEquals
java.util.Map.keySet()
com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
java.util.Map.keySet()
assertEquals
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.values()
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map.values()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.06451612903225806
Corretude: 0.3333333333333333
F-Measure: 0.1081081081081081
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testCopyOfImmutableSortedSetDifferentComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.reverse()
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map, java.util.Comparator)
com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map, java.util.Comparator)
assertSame
com.google.common.collect.ImmutableSortedMap.comparator()
assertSame
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.reverse()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map, java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.copyOf(java.util.Map, java.util.Comparator)
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Útil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.125
Corretude: 0.2
F-Measure: 0.15384615384615385
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest$CreationTests.testBuilderReverseOrder() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.reverseOrder()
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSortedMap$Builder.build()
com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.reverse()
com.google.common.collect.ImmutableSortedMap.comparator()
assertEquals
Chamada: com.google.common.collect.ImmutableSortedMap.reverseOrder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMapTest.assertMapEquals(java.util.Map, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Ordering.reverse()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.ImmutableSortedMap.comparator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Útil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.09090909090909091
Corretude: 0.2
F-Measure: 0.12500000000000003
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMapTest.testNullGet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMap.get(java.lang.Object)
assertNull
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Situação: Manual
Chamada: assertNull
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap.get(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableMap.of()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testCopyOf_sortedSet_comparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newTreeSet()
com.google.common.collect.ImmutableSortedSetTest.copyOf(java.util.Collection)
com.google.common.collect.Ordering.natural()
java.util.SortedSet.comparator()
assertSame
Chamada: com.google.common.collect.Sets.newTreeSet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedSetTest.copyOf(java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: java.util.SortedSet.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testOf_comparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSetTest.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)
com.google.common.collect.Ordering.natural()
java.util.SortedSet.comparator()
assertSame
Chamada: com.google.common.collect.ImmutableSortedSetTest.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: java.util.SortedSet.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testCopyOf_comparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.ImmutableSortedSetTest.copyOf(java.util.Collection)
com.google.common.collect.Ordering.natural()
java.util.SortedSet.comparator()
assertSame
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedSetTest.copyOf(java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: java.util.SortedSet.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testExplicit_containsMismatchedTypes() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSet.orderedBy(java.util.Comparator)
com.google.common.collect.ImmutableSortedSet$Builder.add([Ljava.lang.String;)
com.google.common.collect.ImmutableSortedSet$Builder.build()
java.util.Set.contains(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.ImmutableSortedSet.orderedBy(java.util.Comparator)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.add([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.build()
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.contains(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest$StringLengthComparator.compare(java.lang.String, java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.length()
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testAsList() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSet.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
assertEquals
com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
assertSame
Chamada: com.google.common.collect.ImmutableSortedSet.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testSubsetAsList() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSet.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.ImmutableSortedSet.subSet(java.lang.String, java.lang.String)
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String)
assertEquals
com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
assertEquals
Chamada: com.google.common.collect.ImmutableSortedSet.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedSet.subSet(java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testSingle_comparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSetTest.of(java.lang.String)
com.google.common.collect.Ordering.natural()
java.util.SortedSet.comparator()
assertSame
Chamada: com.google.common.collect.ImmutableSortedSetTest.of(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: java.util.SortedSet.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testCopyOf_iterator_comparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSetTest.asIterator([Ljava.lang.String;)
com.google.common.collect.ImmutableSortedSetTest.copyOf(java.util.Iterator)
com.google.common.collect.Ordering.natural()
java.util.SortedSet.comparator()
assertSame
Chamada: com.google.common.collect.ImmutableSortedSetTest.asIterator([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedSetTest.copyOf(java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: java.util.SortedSet.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testEmpty_comparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSetTest.of()
com.google.common.collect.Ordering.natural()
java.util.SortedSet.comparator()
assertSame
Chamada: com.google.common.collect.ImmutableSortedSetTest.of()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: java.util.SortedSet.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testReverseOrder() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSet.reverseOrder()
com.google.common.collect.ImmutableSortedSet$Builder.add([Ljava.lang.String;)
com.google.common.collect.ImmutableSortedSet$Builder.build()
that
has
allOf
inOrder
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.reverse()
java.util.SortedSet.comparator()
assertEquals
Chamada: com.google.common.collect.ImmutableSortedSet.reverseOrder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.add([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.build()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Ordering.reverse()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.SortedSet.comparator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Útil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.1
Corretude: 0.2
F-Measure: 0.13333333333333333
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testSubSetExclusiveExclusive() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.String;)
com.google.common.collect.ImmutableSortedSet.copyOf([Ljava.lang.String;)
java.util.Arrays.sort([Ljava.lang.Object;)
com.google.common.collect.ImmutableSortedSet.subSet(java.lang.String, Z, java.lang.String, Z)
that
has
java.lang.Math.min(I, I)
com.google.common.collect.ImmutableSortedSetTest.sortedNumberNames(I, I)
allFrom
inOrder
Chamada: com.google.common.collect.ImmutableCollection.toArray([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedSet.copyOf([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.Arrays.sort([Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet.subSet(java.lang.String, Z, java.lang.String, Z)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: java.lang.Math.min(I, I)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSetTest.sortedNumberNames(I, I)
Situação: Manual
Chamada: allFrom
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testContainsAll_sameComparator_StringVsInt() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSetTest.of(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Sets.newTreeSet(java.util.Comparator)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Set.addAll(java.util.Collection)
java.util.Set.containsAll(java.util.Collection)
assertFalse
Chamada: com.google.common.collect.ImmutableSortedSetTest.of(java.lang.String, java.lang.String, java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Sets.newTreeSet(java.util.Comparator)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Set.addAll(java.util.Collection)
Situação: Manual
Chamada: java.util.Set.containsAll(java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testAsListInconsistentComprator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSet.orderedBy(java.util.Comparator)
com.google.common.collect.ImmutableSortedSet$Builder.add([Ljava.lang.String;)
com.google.common.collect.ImmutableSortedSet$Builder.build()
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.contains(java.lang.Object)
assertTrue
com.google.common.collect.ImmutableList.indexOf(java.lang.Object)
assertEquals
com.google.common.collect.ImmutableList.lastIndexOf(java.lang.Object)
assertEquals
com.google.common.collect.ImmutableList.contains(java.lang.Object)
assertFalse
com.google.common.collect.ImmutableList.indexOf(java.lang.Object)
assertEquals
com.google.common.collect.ImmutableList.lastIndexOf(java.lang.Object)
assertEquals
com.google.common.collect.ImmutableList.contains(java.lang.Object)
assertFalse
com.google.common.collect.ImmutableList.indexOf(java.lang.Object)
assertEquals
com.google.common.collect.ImmutableList.lastIndexOf(java.lang.Object)
assertEquals
Chamada: com.google.common.collect.ImmutableSortedSet.orderedBy(java.util.Comparator)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.add([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.indexOf(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.lastIndexOf(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.indexOf(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.lastIndexOf(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.indexOf(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.lastIndexOf(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testCopyOfSorted_natural_comparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.Sets.newTreeSet(java.lang.Iterable)
com.google.common.collect.ImmutableSortedSet.copyOfSorted(java.util.SortedSet)
com.google.common.collect.Ordering.natural()
java.util.SortedSet.comparator()
assertSame
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.newTreeSet(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet.copyOfSorted(java.util.SortedSet)
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: java.util.SortedSet.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedSetTest.testExplicit_contains() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedSet.orderedBy(java.util.Comparator)
com.google.common.collect.ImmutableSortedSet$Builder.add([Ljava.lang.String;)
com.google.common.collect.ImmutableSortedSet$Builder.build()
java.util.Set.contains(java.lang.Object)
assertTrue
java.util.Set.contains(java.lang.Object)
assertTrue
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Set.contains(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.ImmutableSortedSet.orderedBy(java.util.Comparator)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.add([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.build()
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.contains(java.lang.Object)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.ImmutableTableTest.validateViewOrdering(com.google.common.collect.Table, com.google.common.collect.Table) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Table.cellSet()
com.google.common.collect.Table.cellSet()
com.google.common.collect.Iterables.elementsEqual(java.lang.Iterable, java.lang.Iterable)
assertTrue
com.google.common.collect.Table.rowKeySet()
com.google.common.collect.Table.rowKeySet()
com.google.common.collect.Iterables.elementsEqual(java.lang.Iterable, java.lang.Iterable)
assertTrue
com.google.common.collect.Table.values()
com.google.common.collect.Table.values()
com.google.common.collect.Iterables.elementsEqual(java.lang.Iterable, java.lang.Iterable)
assertTrue
Chamada: com.google.common.collect.Table.cellSet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Table.cellSet()
Situação: Manual
Chamada: com.google.common.collect.Iterables.elementsEqual(java.lang.Iterable, java.lang.Iterable)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Table.rowKeySet()
Situação: Manual
Chamada: com.google.common.collect.Table.rowKeySet()
Situação: Manual
Chamada: com.google.common.collect.Iterables.elementsEqual(java.lang.Iterable, java.lang.Iterable)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Table.values()
Situação: Manual
Chamada: com.google.common.collect.Table.values()
Situação: Manual
Chamada: com.google.common.collect.Iterables.elementsEqual(java.lang.Iterable, java.lang.Iterable)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Table$Cell.getColumnKey()
Inútil
Método: com.google.common.collect.Table$Cell.getRowKey()
Inútil
Método: com.google.common.collect.Table$Cell.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableTableTest.testBuilder_orderRowsAndColumnsBy_dense() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableTable.builder()
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.build()
com.google.common.collect.Table.rowKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.columnKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.values()
that
has
allOf
inOrder
com.google.common.collect.Table.row(java.lang.Character)
java.util.Map.keySet()
that
has
allOf
inOrder
com.google.common.collect.Table.column(java.lang.Integer)
java.util.Map.keySet()
that
has
allOf
inOrder
Chamada: com.google.common.collect.ImmutableTable.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.Table.rowKeySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Table.columnKeySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Table.values()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Table.row(java.lang.Character)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Table.column(java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: com.google.common.collect.Ordering.natural()
Útil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.025
Corretude: 0.16666666666666666
F-Measure: 0.04347826086956522
************************ Método Avaliado: com.google.common.collect.ImmutableTableTest.testBuilder_orderRowsAndColumnsBy_sparse() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableTable.builder()
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.build()
com.google.common.collect.Table.rowKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.columnKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.values()
that
has
allOf
inOrder
com.google.common.collect.Table.row(java.lang.Character)
java.util.Map.keySet()
that
has
allOf
inOrder
com.google.common.collect.Table.column(java.lang.Integer)
java.util.Map.keySet()
that
has
allOf
inOrder
Chamada: com.google.common.collect.ImmutableTable.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.Table.rowKeySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Table.columnKeySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Table.values()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Table.row(java.lang.Character)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Table.column(java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: com.google.common.collect.Ordering.natural()
Útil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.024390243902439025
Corretude: 0.16666666666666666
F-Measure: 0.0425531914893617
************************ Método Avaliado: com.google.common.collect.ImmutableTableTest.testBuilder_orderColumnsBy_dense() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableTable.builder()
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.build()
com.google.common.collect.Table.columnKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.row(java.lang.Character)
java.util.Map.keySet()
that
has
allOf
inOrder
Chamada: com.google.common.collect.ImmutableTable.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.Table.columnKeySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Table.row(java.lang.Character)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableTableTest.testBuilder_orderRowsBy_sparse() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableTable.builder()
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.build()
com.google.common.collect.Table.rowKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.column(java.lang.Integer)
java.util.Map.keySet()
that
has
allOf
inOrder
Chamada: com.google.common.collect.ImmutableTable.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.Table.rowKeySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Table.column(java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableTableTest.testBuilder_orderRowsAndColumnsBy_putAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashBasedTable.create()
com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable.builder()
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
com.google.common.collect.ImmutableTable$Builder.putAll(com.google.common.collect.Table)
com.google.common.collect.ImmutableTable$Builder.build()
com.google.common.collect.Table.rowKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.columnKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.values()
that
has
allOf
inOrder
com.google.common.collect.Table.row(java.lang.Character)
java.util.Map.keySet()
that
has
allOf
inOrder
Chamada: com.google.common.collect.HashBasedTable.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable.builder()
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.putAll(com.google.common.collect.Table)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.Table.rowKeySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Table.columnKeySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Table.values()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Table.row(java.lang.Character)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: com.google.common.collect.Ordering.natural()
Útil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.03225806451612903
Corretude: 0.16666666666666666
F-Measure: 0.05405405405405405
************************ Método Avaliado: com.google.common.collect.ImmutableTableTest.testBuilder_orderColumnsBy_sparse() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableTable.builder()
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.build()
com.google.common.collect.Table.columnKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.row(java.lang.Character)
java.util.Map.keySet()
that
has
allOf
inOrder
Chamada: com.google.common.collect.ImmutableTable.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.orderColumnsBy(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.Table.columnKeySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Table.row(java.lang.Character)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableTableTest.testBuilder_orderRowsBy_dense() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableTable.builder()
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTable$Builder.build()
com.google.common.collect.Table.rowKeySet()
that
has
allOf
inOrder
com.google.common.collect.Table.column(java.lang.Integer)
java.util.Map.keySet()
that
has
allOf
inOrder
Chamada: com.google.common.collect.ImmutableTable.builder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.orderRowsBy(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.Table.rowKeySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Table.column(java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableTableTest.testCopyOf() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTable.create()
com.google.common.collect.ImmutableTableTest.validateTableCopies(com.google.common.collect.Table)
com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTableTest.validateTableCopies(com.google.common.collect.Table)
com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableTableTest.validateTableCopies(com.google.common.collect.Table)
com.google.common.collect.Table.row(java.lang.Character)
java.util.Map.keySet()
that
has
allOf
inOrder
com.google.common.collect.ImmutableTable.copyOf(com.google.common.collect.Table)
com.google.common.collect.ImmutableTable.row(java.lang.Character)
com.google.common.collect.ImmutableMap.keySet()
that
has
allOf
inOrder
Chamada: com.google.common.collect.TreeBasedTable.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableTableTest.validateTableCopies(com.google.common.collect.Table)
Situação: Manual
Chamada: com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTableTest.validateTableCopies(com.google.common.collect.Table)
Situação: Manual
Chamada: com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Table.put(java.lang.Character, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTableTest.validateTableCopies(com.google.common.collect.Table)
Situação: Manual
Chamada: com.google.common.collect.Table.row(java.lang.Character)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable.copyOf(com.google.common.collect.Table)
Situação: Manual
Chamada: com.google.common.collect.ImmutableTable.row(java.lang.Character)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IterablesTest.testRetainAll_iterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterables.retainAll(java.lang.Iterable, java.util.Collection)
assertTrue
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterables.retainAll(java.lang.Iterable, java.util.Collection)
assertFalse
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Iterables.retainAll(java.lang.Iterable, java.util.Collection)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Iterables.retainAll(java.lang.Iterable, java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IterablesTest.testSkip_removal() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
java.lang.Iterable.iterator()
java.util.Iterator.next()
java.util.Iterator.remove()
fail
Chamada: com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.25
Suporte: 0.00891825
F-Measure Suporte e Confiança: 0.018
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.4
Corretude: 0.4
F-Measure: 0.4000000000000001
************************ Método Avaliado: com.google.common.collect.IterablesTest.testPoorlyBehavedTransform() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.Iterables.transform(java.lang.Iterable, com.google.common.base.Function)
java.lang.Integer.valueOf(java.lang.String)
java.lang.Iterable.iterator()
java.util.Iterator.next()
java.util.Iterator.next()
fail
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterables.transform(java.lang.Iterable, com.google.common.base.Function)
Situação: Manual
Chamada: java.lang.Integer.valueOf(java.lang.String)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.16666666666666666
F-Measure: 0.2222222222222222
************************ Método Avaliado: com.google.common.collect.IterablesTest.testPartition_singleton1() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Iterables.partition(java.lang.Iterable, I)
com.google.common.collect.Iterables.size(java.lang.Iterable)
assertEquals
java.util.Collections.singletonList(java.lang.Integer)
java.lang.Iterable.iterator()
java.util.Iterator.next()
assertEquals
Chamada: java.util.Collections.singleton(java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterables.partition(java.lang.Iterable, I)
Situação: Manual
Chamada: com.google.common.collect.Iterables.size(java.lang.Iterable)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collections.singletonList(java.lang.Integer)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.2
F-Measure: 0.16666666666666666
************************ Método Avaliado: com.google.common.collect.IterablesTest.testUnmodifiableIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterables.unmodifiableIterable(java.lang.Iterable)
java.lang.Iterable.iterator()
java.util.Iterator.next()
java.util.Iterator.remove()
fail
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterables.unmodifiableIterable(java.lang.Iterable)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.25
Suporte: 0.00891825
F-Measure Suporte e Confiança: 0.018
Chamada: fail
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.4
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.IterablesTest.testPartition_view() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Iterables.partition(java.lang.Iterable, I)
java.util.List.set(I, java.lang.Integer)
java.lang.Iterable.iterator()
java.util.List.set(I, java.lang.Integer)
java.util.Iterator.next()
java.util.List.set(I, java.lang.Integer)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterables.partition(java.lang.Iterable, I)
Situação: Manual
Chamada: java.util.List.set(I, java.lang.Integer)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.List.set(I, java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: java.util.List.set(I, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.125
Corretude: 0.2
F-Measure: 0.15384615384615385
************************ Método Avaliado: com.google.common.collect.IterablesTest.testPaddedPartitionNonRandomAccessInput() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
com.google.common.collect.Iterables.paddedPartition(java.lang.Iterable, I)
java.lang.Iterable.iterator()
java.util.Iterator.next()
assertTrue
java.util.Iterator.next()
assertTrue
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Iterables.paddedPartition(java.lang.Iterable, I)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.16666666666666666
F-Measure: 0.2105263157894737
************************ Método Avaliado: com.google.common.collect.IterablesTest.testSize2NonCollection() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Iterables.size(java.lang.Iterable)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterables.size(java.lang.Iterable)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IterablesTest.testMergeSorted_pyramid() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newLinkedList()
com.google.common.collect.Lists.newArrayList()
com.google.common.collect.Lists.newLinkedList()
java.util.List.add(java.lang.Integer)
java.util.List.add(java.lang.Integer)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
java.util.List.add(java.lang.Iterable)
com.google.common.collect.IterablesTest.verifyMergeSorted(java.lang.Iterable, java.lang.Iterable)
Chamada: com.google.common.collect.Lists.newLinkedList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Manual
Chamada: com.google.common.collect.Lists.newLinkedList()
Situação: Manual
Chamada: java.util.List.add(java.lang.Integer)
Situação: Manual
Chamada: java.util.List.add(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
Situação: Manual
Chamada: java.util.List.add(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.IterablesTest.verifyMergeSorted(java.lang.Iterable, java.lang.Iterable)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: null.apply(java.lang.CharSequence) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 1.0
Corretude: 0.3333333333333333
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.IterablesTest.testConsumingIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
com.google.common.collect.Iterables.consumingIterable(java.lang.Iterable)
java.lang.Iterable.iterator()
that
has
allOf
inOrder
java.util.Iterator.hasNext()
assertTrue
that
has
allOf
inOrder
java.util.Iterator.next()
assertEquals
that
has
item
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
that
isEmpty
java.util.Iterator.hasNext()
assertFalse
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Iterables.consumingIterable(java.lang.Iterable)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: assertTrue
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: assertEquals
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: item
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.304348283932384
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertEquals
Situação: Manual
Chamada: that
Situação: Manual
Chamada: isEmpty
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.368421555817585
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.19230769230769232
Corretude: 0.5
F-Measure: 0.2777777777777778
************************ Método Avaliado: com.google.common.collect.IterablesTest.testConsumingIterable_noIteratorCall() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
com.google.common.collect.Iterables.consumingIterable(java.lang.Iterable)
java.lang.Iterable.iterator()
java.util.Iterator.next()
java.lang.Integer.intValue()
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Iterables.consumingIterable(java.lang.Iterable)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: java.lang.Integer.intValue()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.2
F-Measure: 0.1818181818181818
************************ Método Avaliado: com.google.common.collect.IterablesTest.testRemoveIf_randomAccess() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
assertTrue
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
assertFalse
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Útil
Percentual de Automatização: 0.35714285714285715
Corretude: 1.0
F-Measure: 0.5263157894736842
************************ Método Avaliado: com.google.common.collect.IterablesTest.testSkip_nonStructurallyModifiedList() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
java.lang.Iterable.iterator()
java.util.List.set(I, java.lang.String)
java.util.Iterator.next()
assertEquals
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.List.set(I, java.lang.String)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.3333333333333333
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.IterablesTest.testSkip_allOfImmutableList_modifiable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String)
com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
java.lang.Iterable.iterator()
java.util.Iterator.remove()
fail
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IterablesTest.testPaddedPartitionRandomAccessInput() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Iterables.paddedPartition(java.lang.Iterable, I)
java.lang.Iterable.iterator()
java.util.Iterator.next()
assertTrue
java.util.Iterator.next()
assertTrue
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterables.paddedPartition(java.lang.Iterable, I)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.31578985946014854
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.16666666666666666
F-Measure: 0.2222222222222222
************************ Método Avaliado: com.google.common.collect.IterablesTest.testMergeSorted_empty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.of()
com.google.common.collect.Ordering.natural()
com.google.common.collect.Iterables.mergeSorted(java.lang.Iterable, java.util.Comparator)
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
Chamada: com.google.common.collect.ImmutableList.of()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Iterables.mergeSorted(java.lang.Iterable, java.util.Comparator)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.25
F-Measure: 0.26666666666666666
************************ Método Avaliado: com.google.common.collect.IterablesTest.testSkip_structurallyModifiedSkipSome() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
java.util.Collection.remove(java.lang.Object)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.Collection.addAll(java.util.Collection)
that
iteratesOverSequence
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: iteratesOverSequence
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IterablesTest.testRemoveAll_iterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterables.removeAll(java.lang.Iterable, java.util.Collection)
assertTrue
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterables.removeAll(java.lang.Iterable, java.util.Collection)
assertFalse
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Iterables.removeAll(java.lang.Iterable, java.util.Collection)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Iterables.removeAll(java.lang.Iterable, java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IterablesTest.testSkip_structurallyModifiedSkipAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
java.util.Collection.remove(java.lang.Object)
java.util.Collection.remove(java.lang.Object)
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
assertFalse
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4285713667857483
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.remove(java.lang.Object)
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.5
F-Measure: 0.36363636363636365
************************ Método Avaliado: com.google.common.collect.IterablesTest.testMergeSorted_skipping_pyramid() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newLinkedList()
com.google.common.collect.Lists.newArrayList()
com.google.common.collect.Lists.newLinkedList()
java.util.List.add(java.lang.Integer)
java.util.List.add(java.lang.Integer)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
java.util.List.add(java.lang.Iterable)
com.google.common.collect.IterablesTest.verifyMergeSorted(java.lang.Iterable, java.lang.Iterable)
Chamada: com.google.common.collect.Lists.newLinkedList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Manual
Chamada: com.google.common.collect.Lists.newLinkedList()
Situação: Manual
Chamada: java.util.List.add(java.lang.Integer)
Situação: Manual
Chamada: java.util.List.add(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
Situação: Manual
Chamada: java.util.List.add(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.IterablesTest.verifyMergeSorted(java.lang.Iterable, java.lang.Iterable)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IterablesTest.testConsumingIterable_queue_removesFromQueue() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
com.google.common.collect.Iterables.consumingIterable(java.lang.Iterable)
java.lang.Iterable.iterator()
java.util.Queue.peek()
java.lang.Integer.intValue()
assertEquals
java.util.Iterator.next()
java.lang.Integer.intValue()
assertEquals
java.util.Queue.peek()
java.lang.Integer.intValue()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Collection.isEmpty()
assertTrue
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Iterables.consumingIterable(java.lang.Iterable)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Queue.peek()
Situação: Manual
Chamada: java.lang.Integer.intValue()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: java.lang.Integer.intValue()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Queue.peek()
Situação: Manual
Chamada: java.lang.Integer.intValue()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Collection.size()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.125
Corretude: 0.3333333333333333
F-Measure: 0.18181818181818182
************************ Método Avaliado: com.google.common.collect.IterablesTest.testSkip_allOfMutableList_modifiable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
java.lang.Iterable.iterator()
java.util.Iterator.remove()
fail
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterables.skip(java.lang.Iterable, I)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IterablesTest.verifyMergeSorted(java.lang.Iterable, java.lang.Iterable) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Iterables.mergeSorted(java.lang.Iterable, java.util.Comparator)
com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
assertEquals
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.Iterables.mergeSorted(java.lang.Iterable, java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Útil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.2
F-Measure: 0.1818181818181818
************************ Método Avaliado: com.google.common.collect.IterablesTest.testRemoveIf_noRandomAccess() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
assertTrue
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
assertFalse
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Iterables.removeIf(java.lang.Iterable, com.google.common.base.Predicate)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testTryFind_alwaysTrue() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.alwaysTrue()
com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
com.google.common.base.Optional.get()
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Predicates.alwaysTrue()
Situação: Manual
Chamada: com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Optional.get()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testSize1() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singleton(java.lang.Integer)
java.util.Set.iterator()
com.google.common.collect.Iterators.size(java.util.Iterator)
assertEquals
Chamada: java.util.Collections.singleton(java.lang.Integer)
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.size(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testAddAllToList() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.addAll(java.util.Collection, java.util.Iterator)
that
has
allOf
assertTrue
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.addAll(java.util.Collection, java.util.Iterator)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testForArrayEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.forArray([Ljava.lang.String;)
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
Chamada: com.google.common.collect.Iterators.forArray([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testTransformRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
java.lang.Integer.valueOf(java.lang.String)
java.lang.Integer.valueOf(I)
java.util.Iterator.next()
assertEquals
java.lang.Integer.valueOf(I)
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
java.util.Arrays.asList([Ljava.lang.String;)
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Situação: Manual
Chamada: java.lang.Integer.valueOf(java.lang.String)
Situação: Manual
Chamada: java.lang.Integer.valueOf(I)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.Integer.valueOf(I)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.152777731057102
Suporte: 0.00545004
F-Measure Suporte e Confiança: 0.011
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.25
Suporte: 0.00891825
F-Measure Suporte e Confiança: 0.018
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.2857142857142857
F-Measure: 0.26666666666666666
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testEmptyModifiableIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.emptyModifiableIterator()
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
java.util.Iterator.remove()
fail
Chamada: com.google.common.collect.Iterators.emptyModifiableIterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: fail
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testForArrayTypical() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.forArray([Ljava.lang.String;)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.remove()
fail
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
Chamada: com.google.common.collect.Iterators.forArray([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Chamada: fail
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1830064428297795
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8108106338932848
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.35714285714285715
Corretude: 0.375
F-Measure: 0.3658536585365853
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGet_pastEnd() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.get(java.util.Iterator, I)
fail
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.get(java.util.Iterator, I)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testSize_partiallyConsumed() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
java.util.Iterator.next()
java.util.Iterator.next()
com.google.common.collect.Iterators.size(java.util.Iterator)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.152777731057102
Suporte: 0.00545004
F-Measure Suporte e Confiança: 0.011
Chamada: com.google.common.collect.Iterators.size(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.4
Corretude: 0.14285714285714285
F-Measure: 0.21052631578947364
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPartition_singleton2() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.singletonIterator(java.lang.Integer)
com.google.common.collect.Iterators.partition(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.hasNext()
assertTrue
com.google.common.collect.ImmutableList.of(java.lang.Integer)
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Iterators.singletonIterator(java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.partition(java.util.Iterator, I)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.18918936610671533
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3
Corretude: 0.2857142857142857
F-Measure: 0.2926829268292683
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testRemoveAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterators.removeAll(java.util.Iterator, java.util.Collection)
assertTrue
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
java.util.List.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterators.removeAll(java.util.Iterator, java.util.Collection)
assertFalse
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Iterators.removeAll(java.util.Iterator, java.util.Collection)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Iterators.removeAll(java.util.Iterator, java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleOfEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.cycle([Ljava.lang.String;)
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Iterators.cycle([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testTryFind_lastElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.equalTo(java.lang.String)
com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
com.google.common.base.Optional.get()
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Optional.get()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPaddedPartitionRandomAccess() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
java.util.Iterator.next()
assertTrue
java.util.Iterator.next()
assertTrue
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.152777731057102
Suporte: 0.00545004
F-Measure Suporte e Confiança: 0.011
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.14285714285714285
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testAdvance_illegalArgument() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.advance(java.util.Iterator, I)
fail
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.advance(java.util.Iterator, I)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testIndexOf_consumedDataNoMatch() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.AbstractList.iterator()
com.google.common.base.Predicates.equalTo(java.lang.String)
com.google.common.collect.Iterators.indexOf(java.util.Iterator, com.google.common.base.Predicate)
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.AbstractList.iterator()
Situação: Manual
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Iterators.indexOf(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testAddAllToSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.addAll(java.util.Collection, java.util.Iterator)
that
has
allOf
inOrder
assertFalse
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.addAll(java.util.Collection, java.util.Iterator)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testConcatContainingNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.IteratorsTest.iterateOver([Ljava.lang.Integer;)
com.google.common.collect.IteratorsTest.iterateOver([Ljava.lang.Integer;)
java.util.Arrays.asList([Ljava.util.Iterator;)
java.util.List.iterator()
com.google.common.collect.Iterators.concat(java.util.Iterator)
java.util.Iterator.next()
assertEquals
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
fail
java.util.Iterator.next()
fail
Chamada: com.google.common.collect.IteratorsTest.iterateOver([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.IteratorsTest.iterateOver([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.util.Iterator;)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.concat(java.util.Iterator)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.152777731057102
Suporte: 0.00545004
F-Measure Suporte e Confiança: 0.011
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.14351862753342864
Suporte: 0.00511974
F-Measure Suporte e Confiança: 0.010
Chamada: fail
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7741936113943285
Suporte: 0.00396367
F-Measure Suporte e Confiança: 0.008
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGet_withDefault_pastEnd() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.get(java.util.Iterator, I, java.lang.String)
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.get(java.util.Iterator, I, java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPaddedPartition_empty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFind_withDefault_notPresent_nullReturn() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.alwaysFalse()
com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
assertNull
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Predicates.alwaysFalse()
Situação: Manual
Chamada: com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
Situação: Manual
Chamada: assertNull
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.2222222222222222
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testTryFind_firstElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.equalTo(java.lang.String)
com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
com.google.common.base.Optional.get()
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Optional.get()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetLast_withDefault_singleton() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singletonList(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.getLast(java.util.Iterator, java.lang.String)
assertEquals
Chamada: java.util.Collections.singletonList(java.lang.String)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.getLast(java.util.Iterator, java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetLast_exception() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.iterator()
com.google.common.collect.Iterators.getLast(java.util.Iterator)
fail
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.getLast(java.util.Iterator)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPaddedPartition_singleton2() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.singletonIterator(java.lang.Integer)
com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.hasNext()
assertTrue
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Iterators.singletonIterator(java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.18918936610671533
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3
Corretude: 0.2857142857142857
F-Measure: 0.2926829268292683
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleRemoveSameElementTwice() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.cycle([Ljava.lang.String;)
java.util.Iterator.next()
java.util.Iterator.remove()
java.util.Iterator.remove()
fail
Chamada: com.google.common.collect.Iterators.cycle([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.25
Suporte: 0.00891825
F-Measure Suporte e Confiança: 0.018
Chamada: java.util.Iterator.remove()
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPaddedPartition_singleton1() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.singletonIterator(java.lang.Integer)
com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.hasNext()
assertTrue
com.google.common.collect.ImmutableList.of(java.lang.Integer)
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Iterators.singletonIterator(java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.18918936610671533
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3
Corretude: 0.2857142857142857
F-Measure: 0.2926829268292683
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetNext_withDefault_singleton() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singletonList(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.getNext(java.util.Iterator, java.lang.String)
assertEquals
Chamada: java.util.Collections.singletonList(java.lang.String)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.getNext(java.util.Iterator, java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGet_negativeIndex() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.get(java.util.Iterator, I)
fail
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.get(java.util.Iterator, I)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testEmptyIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.emptyIterator()
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
java.util.Iterator.remove()
fail
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: fail
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGet_atSize() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.get(java.util.Iterator, I)
fail
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.get(java.util.Iterator, I)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleOfTwo() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.cycle([Ljava.lang.String;)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
Chamada: com.google.common.collect.Iterators.cycle([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1830064428297795
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.375
Corretude: 0.25
F-Measure: 0.3
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testAdvance_basic() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.advance(java.util.Iterator, I)
java.util.Iterator.next()
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.advance(java.util.Iterator, I)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.2
F-Measure: 0.1818181818181818
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testRetainAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterators.retainAll(java.util.Iterator, java.util.Collection)
assertTrue
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
java.util.List.iterator()
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterators.retainAll(java.util.Iterator, java.util.Collection)
assertFalse
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Iterators.retainAll(java.util.Iterator, java.util.Collection)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Iterators.retainAll(java.util.Iterator, java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGet_empty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.iterator()
com.google.common.collect.Iterators.get(java.util.Iterator, I)
fail
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.get(java.util.Iterator, I)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testForEnumerationTypical() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.IteratorsTest.enumerate([Ljava.lang.Integer;)
com.google.common.collect.Iterators.forEnumeration(java.util.Enumeration)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.IteratorsTest.enumerate([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.forEnumeration(java.util.Enumeration)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1830064428297795
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8108106338932848
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.26666666666666666
Corretude: 0.25
F-Measure: 0.2580645161290323
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFind_matchAlways() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.alwaysTrue()
com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate)
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Predicates.alwaysTrue()
Situação: Manual
Chamada: com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleNoSuchElementException() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterators.cycle(java.lang.Iterable)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.cycle(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1830064428297795
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.4
Corretude: 0.375
F-Measure: 0.38709677419354843
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPoorlyBehavedTransform() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
java.lang.Integer.valueOf(java.lang.String)
java.util.Iterator.next()
java.util.Iterator.next()
fail
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Situação: Manual
Chamada: java.lang.Integer.valueOf(java.lang.String)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.152777731057102
Suporte: 0.00545004
F-Measure Suporte e Confiança: 0.011
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.14285714285714285
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetOnlyElement_withDefault_singleton() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singletonList(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator, java.lang.String)
assertEquals
Chamada: java.util.Collections.singletonList(java.lang.String)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator, java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testNullFriendlyTransform() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
java.lang.String.valueOf(java.lang.Object)
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
java.util.Arrays.asList([Ljava.lang.String;)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Situação: Manual
Chamada: java.lang.String.valueOf(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetOnlyElement_noDefault_fiveElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator)
fail
java.lang.Throwable.getMessage()
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testToStringEmptyIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.emptyList()
java.util.List.iterator()
com.google.common.collect.Iterators.toString(java.util.Iterator)
assertEquals
Chamada: java.util.Collections.emptyList()
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.toString(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testIndexOf_consumedData() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.AbstractList.iterator()
com.google.common.base.Predicates.equalTo(java.lang.String)
com.google.common.collect.Iterators.indexOf(java.util.Iterator, com.google.common.base.Predicate)
assertEquals
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.AbstractList.iterator()
Situação: Manual
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Iterators.indexOf(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.14351862753342864
Suporte: 0.00511974
F-Measure Suporte e Confiança: 0.010
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.125
Corretude: 0.16666666666666666
F-Measure: 0.14285714285714288
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFind_withDefault_first() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.equalTo(java.lang.String)
com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
assertEquals
java.util.Iterator.next()
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.2
F-Measure: 0.1818181818181818
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFilterNothing() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.emptyList()
java.util.List.iterator()
com.google.common.collect.Iterators.filter(java.util.Iterator, com.google.common.base.Predicate)
fail
java.util.Collections.emptyList()
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
assertEquals
Chamada: java.util.Collections.emptyList()
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.filter(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Collections.emptyList()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPartition_singleton1() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.singletonIterator(java.lang.Integer)
com.google.common.collect.Iterators.partition(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.hasNext()
assertTrue
com.google.common.collect.ImmutableList.of(java.lang.Integer)
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Iterators.singletonIterator(java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.partition(java.util.Iterator, I)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.18918936610671533
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3
Corretude: 0.2857142857142857
F-Measure: 0.2926829268292683
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFind_firstElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.equalTo(java.lang.String)
com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate)
assertEquals
java.util.Iterator.next()
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.2
F-Measure: 0.1818181818181818
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleOfOne() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.cycle([Ljava.lang.String;)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
Chamada: com.google.common.collect.Iterators.cycle([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleRemoveWithoutNext() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.cycle([Ljava.lang.String;)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.remove()
fail
Chamada: com.google.common.collect.Iterators.cycle([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testTransform() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
java.lang.Integer.valueOf(java.lang.String)
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
java.util.Arrays.asList([Ljava.lang.Integer;)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Situação: Manual
Chamada: java.lang.Integer.valueOf(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGet_basic() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.get(java.util.Iterator, I)
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.get(java.util.Iterator, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGet_withDefault_negativeIndex() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.get(java.util.Iterator, I, java.lang.String)
fail
java.util.Iterator.hasNext()
assertTrue
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.get(java.util.Iterator, I, java.lang.String)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testAny() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
com.google.common.base.Predicates.equalTo(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.any(java.util.Iterator, com.google.common.base.Predicate)
assertFalse
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.any(java.util.Iterator, com.google.common.base.Predicate)
assertFalse
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.any(java.util.Iterator, com.google.common.base.Predicate)
assertTrue
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.any(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.any(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.any(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testLimitRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
java.util.Iterator.next()
java.util.Iterator.remove()
java.util.Iterator.hasNext()
assertFalse
java.util.List.size()
assertEquals
java.util.List.get(I)
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.25
Suporte: 0.00891825
F-Measure Suporte e Confiança: 0.018
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.14351862753342864
Suporte: 0.00511974
F-Measure Suporte e Confiança: 0.010
Chamada: assertFalse
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.List.get(I)
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.4
F-Measure: 0.3636363636363636
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetLast_basic() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.getLast(java.util.Iterator)
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.getLast(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleOfOneWithRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterators.cycle(java.lang.Iterable)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
java.util.Collections.emptyList()
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.cycle(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Chamada: java.util.Collections.emptyList()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3
Corretude: 0.75
F-Measure: 0.4285714285714285
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testConsumingIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.consumingIterator(java.util.Iterator)
that
has
allOf
inOrder
java.util.Iterator.hasNext()
assertTrue
that
has
allOf
inOrder
java.util.Iterator.next()
assertEquals
that
has
item
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
that
isEmpty
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.consumingIterator(java.util.Iterator)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertEquals
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: item
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1830064428297795
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: that
Situação: Manual
Chamada: isEmpty
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.12
Corretude: 0.25
F-Measure: 0.16216216216216217
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetOnlyElement_noDefault_moreThanFiveElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator)
fail
java.lang.Throwable.getMessage()
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleRemoveAfterHasNext() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterators.cycle(java.lang.Iterable)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.remove()
java.util.Collections.emptyList()
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.cycle(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Chamada: java.util.Collections.emptyList()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.75
F-Measure: 0.375
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testTryFind_alwaysFalse_orDefault() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.alwaysFalse()
com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
com.google.common.base.Optional.or(java.lang.String)
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Predicates.alwaysFalse()
Situação: Manual
Chamada: com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Optional.or(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.3333333333333333
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFind_withDefault_matchAlways() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.alwaysTrue()
com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
assertEquals
java.util.Iterator.next()
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Predicates.alwaysTrue()
Situação: Manual
Chamada: com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.2
F-Measure: 0.1818181818181818
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testForArrayOffset() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.forArray([Ljava.lang.String;, I, I, I)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
com.google.common.collect.Iterators.forArray([Ljava.lang.String;, I, I, I)
fail
Chamada: com.google.common.collect.Iterators.forArray([Ljava.lang.String;, I, I, I)
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1830064428297795
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Iterators.forArray([Ljava.lang.String;, I, I, I)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testLimit() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
fail
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertFalse
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertFalse
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertFalse
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
assertEquals
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
assertEquals
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertFalse
com.google.common.collect.ImmutableList.of(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
assertEquals
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
assertEquals
java.util.List.iterator()
com.google.common.collect.Iterators.limit(java.util.Iterator, I)
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertFalse
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.18918936610671533
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertFalse
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.18918936610671533
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.limit(java.util.Iterator, I)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.07142857142857142
Corretude: 0.25
F-Measure: 0.11111111111111112
************************ Método Avaliado: com.google.common.collect.IteratorsTest.test_contains_nonnull_no() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
assertFalse
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
com.google.common.base.Predicates.equalTo(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.all(java.util.Iterator, com.google.common.base.Predicate)
assertTrue
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.all(java.util.Iterator, com.google.common.base.Predicate)
assertTrue
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.all(java.util.Iterator, com.google.common.base.Predicate)
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.all(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.all(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.all(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetOnlyElement_withDefault_two() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator, java.lang.String)
fail
java.lang.Throwable.getMessage()
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator, java.lang.String)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetLast_withDefault_two() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.getLast(java.util.Iterator, java.lang.String)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.getLast(java.util.Iterator, java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.test_contains_nonnull_yes() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
assertTrue
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPartition_empty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.emptyIterator()
com.google.common.collect.Iterators.partition(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Iterators.emptyIterator()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.partition(java.util.Iterator, I)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFrequency() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
assertEquals
java.util.List.iterator()
com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
assertEquals
java.util.List.iterator()
com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
assertEquals
java.util.List.iterator()
com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
assertEquals
java.util.List.iterator()
com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.frequency(java.util.Iterator, java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testForEnumerationSingleton() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.IteratorsTest.enumerate([Ljava.lang.Integer;)
com.google.common.collect.Iterators.forEnumeration(java.util.Enumeration)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
fail
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
Chamada: com.google.common.collect.IteratorsTest.enumerate([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.forEnumeration(java.util.Enumeration)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Chamada: fail
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.18918936610671533
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8108106338932848
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.38461538461538464
Corretude: 0.3333333333333333
F-Measure: 0.3571428571428571
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFind_withDefault_notPresent() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.alwaysFalse()
com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Predicates.alwaysFalse()
Situação: Manual
Chamada: com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.2222222222222222
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGet_withDefault_basic() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.get(java.util.Iterator, I, java.lang.String)
assertEquals
java.util.Iterator.hasNext()
assertTrue
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.get(java.util.Iterator, I, java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetOnlyElement_noDefault_moreThanOneLessThanFiveElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator)
fail
java.lang.Throwable.getMessage()
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.lang.Throwable.getMessage()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testElementsEqual() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.Collections.emptySet()
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertTrue
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertTrue
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertTrue
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertTrue
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertFalse
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertFalse
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertFalse
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertFalse
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertFalse
java.util.Collections.emptySet()
java.util.Arrays.asList([Ljava.lang.Integer;)
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertFalse
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: java.util.Collections.emptySet()
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collections.emptySet()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.elementsEqual(java.util.Iterator, java.util.Iterator)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPartition_view() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Iterators.partition(java.util.Iterator, I)
java.util.List.set(I, java.lang.Integer)
java.util.Iterator.next()
java.util.List.set(I, java.lang.Integer)
com.google.common.collect.ImmutableList.of(java.lang.Integer)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.partition(java.util.Iterator, I)
Situação: Manual
Chamada: java.util.List.set(I, java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.List.set(I, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.2
F-Measure: 0.16666666666666666
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testRemoveIf() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
assertTrue
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
java.util.List.iterator()
com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
assertFalse
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.removeIf(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Útil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.3125
Corretude: 0.5
F-Measure: 0.38461538461538464
************************ Método Avaliado: com.google.common.collect.IteratorsTest.test_contains_null_yes() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
assertTrue
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testAdvance_pastEnd() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.advance(java.util.Iterator, I)
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.advance(java.util.Iterator, I)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testTryFind_alwaysFalse_isPresent() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.alwaysFalse()
com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
com.google.common.base.Optional.isPresent()
assertFalse
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Predicates.alwaysFalse()
Situação: Manual
Chamada: com.google.common.collect.Iterators.tryFind(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.base.Optional.isPresent()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.3333333333333333
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGet_withDefault_atSize() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
java.util.List.add(java.lang.String)
java.util.List.add(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.get(java.util.Iterator, I, java.lang.String)
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.get(java.util.Iterator, I, java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testIndexOf_consumedDataWithDuplicates() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.AbstractList.iterator()
com.google.common.base.Predicates.equalTo(java.lang.String)
com.google.common.collect.Iterators.indexOf(java.util.Iterator, com.google.common.base.Predicate)
assertEquals
java.util.Iterator.next()
assertEquals
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.AbstractList.iterator()
Situação: Manual
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Iterators.indexOf(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.152777731057102
Suporte: 0.00545004
F-Measure Suporte e Confiança: 0.011
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.14351862753342864
Suporte: 0.00511974
F-Measure Suporte e Confiança: 0.010
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.2
Corretude: 0.2857142857142857
F-Measure: 0.23529411764705882
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFind_withDefault_last() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.equalTo(java.lang.String)
com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate, java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.2222222222222222
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testPaddedPartition_view() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
java.util.List.set(I, java.lang.Integer)
java.util.Iterator.next()
java.util.List.set(I, java.lang.Integer)
com.google.common.collect.ImmutableList.of(java.lang.Integer)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.paddedPartition(java.util.Iterator, I)
Situação: Manual
Chamada: java.util.List.set(I, java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.List.set(I, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.2
F-Measure: 0.16666666666666666
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleWhenRemoveIsNotSupported() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.Iterators.cycle(java.lang.Iterable)
java.util.Iterator.next()
java.util.Iterator.remove()
fail
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.cycle(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.25
Suporte: 0.00891825
F-Measure Suporte e Confiança: 0.018
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFind_lastElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.equalTo(java.lang.String)
com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate)
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Predicates.equalTo(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.2222222222222222
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testCycleOfTwoWithRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
com.google.common.collect.Iterators.cycle(java.lang.Iterable)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
java.util.Collections.singletonList(java.lang.String)
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
java.util.Collections.emptyList()
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.cycle(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1830064428297795
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8108106338932848
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Chamada: java.util.Collections.singletonList(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8108106338932848
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8108106338932848
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Chamada: java.util.Collections.emptyList()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.27586206896551724
Corretude: 0.375
F-Measure: 0.31788079470198677
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testForEnumerationEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.IteratorsTest.enumerate([Ljava.lang.Integer;)
com.google.common.collect.Iterators.forEnumeration(java.util.Enumeration)
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
Chamada: com.google.common.collect.IteratorsTest.enumerate([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.forEnumeration(java.util.Enumeration)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.2
Corretude: 0.25
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.collect.IteratorsTest.test_contains_null_no() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
assertFalse
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.contains(java.util.Iterator, java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testFind_notPresent() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.lang.Iterable.iterator()
com.google.common.base.Predicates.alwaysFalse()
com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate)
fail
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.base.Predicates.alwaysFalse()
Situação: Manual
Chamada: com.google.common.collect.Iterators.find(java.util.Iterator, com.google.common.base.Predicate)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.2222222222222222
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetNext_withDefault_two() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.getNext(java.util.Iterator, java.lang.String)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.getNext(java.util.Iterator, java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.IteratorsTest.testGetOnlyElement_noDefault_valid() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singletonList(java.lang.String)
java.util.List.iterator()
com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator)
assertEquals
Chamada: java.util.Collections.singletonList(java.lang.String)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.getOnlyElement(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedHashMultimapTest.testValueSetHashTableExpansion() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedHashMultimap.create()
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractMultimap.backingMap()
java.util.Map.get(java.lang.Object)
com.google.common.collect.LinkedHashMultimap$ValueSet.size()
assertEquals
com.google.common.collect.LinkedHashMultimap$ValueSet.size()
needsResizing
assertFalse
Chamada: com.google.common.collect.LinkedHashMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap.backingMap()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.LinkedHashMultimap$ValueSet.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.LinkedHashMultimap$ValueSet.size()
Situação: Manual
Chamada: needsResizing
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedHashMultimapTest.assertOrderingReadOnly(com.google.common.collect.Multimap) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.Multimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.Multimap.get(java.lang.String)
that
has
item
com.google.common.collect.Multimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.Multimap.values()
that
has
allOf
inOrder
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
allOf
inOrder
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
allOf
inOrder
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
item
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Primeira Chamada
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: item
Situação: Manual
Chamada: com.google.common.collect.Multimap.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Multimap.values()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.152777731057102
Suporte: 0.00545004
F-Measure Suporte e Confiança: 0.011
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.43333440977842724
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.608696567864768
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6428546714299308
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7857136678574828
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6428546714299308
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7857136678574828
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: item
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map.entrySet()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.15151515151515152
Corretude: 0.5714285714285714
F-Measure: 0.23952095808383234
************************ Método Avaliado: com.google.common.collect.LinkedHashMultisetTest.testCreate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedHashMultiset.create()
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.toString()
assertEquals
Chamada: com.google.common.collect.LinkedHashMultiset.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedHashMultisetTest.testIteratorRemoveConcurrentModification() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
add
add
iterator
java.util.Iterator.next()
remove
size
assertEquals
contains
assertTrue
java.util.Iterator.remove()
fail
size
assertEquals
contains
assertTrue
Chamada: add
Situação: Primeira Chamada
Chamada: add
Situação: Manual
Chamada: iterator
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: remove
Situação: Manual
Chamada: size
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: contains
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.25
Suporte: 0.00891825
F-Measure Suporte e Confiança: 0.018
Chamada: fail
Situação: Manual
Chamada: size
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: contains
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.07142857142857142
Corretude: 0.2
F-Measure: 0.10526315789473682
************************ Método Avaliado: com.google.common.collect.LinkedHashMultisetTest.testCreateWithSize() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedHashMultiset.create(I)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.toString()
assertEquals
Chamada: com.google.common.collect.LinkedHashMultiset.create(I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedHashMultisetTest.testCreateFromIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.LinkedHashMultiset.create(java.lang.Iterable)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.toString()
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.LinkedHashMultiset.create(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedEntries() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
java.util.Map$Entry.setValue(java.lang.Integer)
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.remove()
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.LinkedListMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.42105229612161
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.152777731057102
Suporte: 0.00545004
F-Measure Suporte e Confiança: 0.011
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.224999280968679
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.18518515403806798
Suporte: 0.00660611
F-Measure Suporte e Confiança: 0.013
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.224999280968679
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.18518515403806798
Suporte: 0.00660611
F-Measure Suporte e Confiança: 0.013
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.32258083418298583
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.38461538461538464
Corretude: 0.7142857142857143
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedValues() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.values()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.values()
java.util.Collection.remove(java.lang.Object)
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.LinkedListMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.values()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.values()
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testEntriesAfterMultimapUpdate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
java.util.Iterator.next()
java.util.Iterator.next()
com.google.common.collect.ListMultimap.get(java.lang.String)
java.util.List.set(I, java.lang.Integer)
assertEquals
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
java.util.Map$Entry.getValue()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
java.util.Map$Entry.getValue()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
Chamada: com.google.common.collect.LinkedListMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.152777731057102
Suporte: 0.00545004
F-Measure Suporte e Confiança: 0.011
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.List.set(I, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.0967741935483871
Corretude: 0.2857142857142857
F-Measure: 0.14457831325301204
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedKeys() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.keys()
that
has
allOf
inOrder
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.remove(java.lang.Object)
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.LinkedListMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedClear() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ListMultimap.get(java.lang.String)
com.google.common.collect.Multimap.values()
java.util.Arrays.asList([Ljava.lang.Integer;)
assertEquals
that
has
allOf
inOrder
com.google.common.collect.Multimap.clear()
java.util.Collections.emptyList()
assertEquals
that
isEmpty
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.LinkedListMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Multimap.values()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Multimap.clear()
Situação: Manual
Chamada: java.util.Collections.emptyList()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: that
Situação: Manual
Chamada: isEmpty
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testEntrySetValue() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
java.util.Iterator.next()
java.util.Iterator.next()
java.util.Map$Entry.setValue(java.lang.Integer)
assertEquals
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
java.util.Map$Entry.getValue()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
Chamada: com.google.common.collect.LinkedListMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.152777731057102
Suporte: 0.00545004
F-Measure Suporte e Confiança: 0.011
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.57894770387839
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.2857142857142857
F-Measure: 0.2105263157894737
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedReplaceValues() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.lang.Object.toString()
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.LinkedListMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedPutOutOfOrder() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.LinkedListMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedAsMapEntries() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
allOf
inOrder
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Map$Entry.setValue(java.util.Collection)
fail
java.util.Iterator.remove()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
item
java.util.Iterator.hasNext()
assertFalse
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.LinkedListMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.43333440977842724
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.608696567864768
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3666668012223034
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3666668012223034
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Map$Entry.setValue(java.util.Collection)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.7142863321425174
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.6428546714299308
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7857136678574828
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: item
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.521738787050712
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: assertFalse
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map.entrySet()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.27586206896551724
Corretude: 1.0
F-Measure: 0.4324324324324324
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedGetInsert() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ListMultimap.get(java.lang.String)
java.util.List.add(java.lang.Integer)
java.util.List.add(I, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.LinkedListMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.List.add(java.lang.Integer)
Situação: Manual
Chamada: java.util.List.add(I, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedPutInOrder() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.LinkedListMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.LinkedListMultimapTest.testLinkedPutAllMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.LinkedListMultimapTest.create()
com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.entries()
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.LinkedListMultimapTest.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.LinkedListMultimapTest.create()
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ListsTest.testPartition_view() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Lists.partition(java.util.List, I)
java.util.List.set(I, java.lang.Integer)
java.util.List.iterator()
java.util.List.set(I, java.lang.Integer)
java.util.Iterator.next()
java.util.List.set(I, java.lang.Integer)
java.util.Arrays.asList([Ljava.lang.Integer;)
assertEquals
java.util.List.set(I, java.lang.Integer)
java.util.Arrays.asList([Ljava.lang.Integer;)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.partition(java.util.List, I)
Situação: Manual
Chamada: java.util.List.set(I, java.lang.Integer)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: java.util.List.set(I, java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.List.set(I, java.lang.Integer)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.set(I, java.lang.Integer)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.09090909090909091
Corretude: 0.2
F-Measure: 0.12500000000000003
************************ Método Avaliado: com.google.common.collect.ListsTest.testPartition_1_2() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singletonList(java.lang.Integer)
com.google.common.collect.Lists.partition(java.util.List, I)
java.util.List.size()
assertEquals
java.util.Collections.singletonList(java.lang.Integer)
java.util.List.get(I)
assertEquals
Chamada: java.util.Collections.singletonList(java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.partition(java.util.List, I)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collections.singletonList(java.lang.Integer)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.25
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.ListsTest.testPartition_2_1() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Lists.partition(java.util.List, I)
java.util.List.size()
assertEquals
java.util.Collections.singletonList(java.lang.Integer)
java.util.List.get(I)
assertEquals
java.util.Collections.singletonList(java.lang.Integer)
java.util.List.get(I)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.partition(java.util.List, I)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collections.singletonList(java.lang.Integer)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collections.singletonList(java.lang.Integer)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.2222222222222222
Corretude: 0.25
F-Measure: 0.23529411764705882
************************ Método Avaliado: com.google.common.collect.ListsTest.testPartition_1_1() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.singletonList(java.lang.Integer)
com.google.common.collect.Lists.partition(java.util.List, I)
java.util.List.size()
assertEquals
java.util.Collections.singletonList(java.lang.Integer)
java.util.List.get(I)
assertEquals
Chamada: java.util.Collections.singletonList(java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.partition(java.util.List, I)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collections.singletonList(java.lang.Integer)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.25
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.ListsTest.testCharactersOfIsView() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.charactersOf(java.lang.CharSequence)
java.util.Arrays.asList([Ljava.lang.Character;)
assertEquals
java.lang.StringBuilder.append(java.lang.String)
java.util.Arrays.asList([Ljava.lang.Character;)
assertEquals
java.lang.StringBuilder.deleteCharAt(I)
java.util.Arrays.asList([Ljava.lang.Character;)
assertEquals
Chamada: com.google.common.collect.Lists.charactersOf(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.util.Arrays.asList([Ljava.lang.Character;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Character;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.StringBuilder.deleteCharAt(I)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Character;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ListsTest$RemoveFirstFunction.apply(java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.substring(I)
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: java.lang.String.substring(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ListsTest.testAsList1Small() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.asList(java.lang.String, [Ljava.lang.String;)
that
has
item
java.util.List.size()
assertEquals
com.google.common.collect.ListsTest.assertIndexIsOutOfBounds(java.util.List, I)
java.util.List.get(I)
assertEquals
com.google.common.collect.ListsTest.assertIndexIsOutOfBounds(java.util.List, I)
assertTrue
java.util.Collections.singletonList(java.lang.String)
test
com.google.common.collect.Lists.asList(java.lang.String, [Ljava.lang.String;)
java.util.List.iterator()
Chamada: com.google.common.collect.Lists.asList(java.lang.String, [Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: item
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ListsTest.assertIndexIsOutOfBounds(java.util.List, I)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ListsTest.assertIndexIsOutOfBounds(java.util.List, I)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collections.singletonList(java.lang.String)
Situação: Manual
Chamada: test
Situação: Manual
Chamada: com.google.common.collect.Lists.asList(java.lang.String, [Ljava.lang.String;)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Útil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.5
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.collect.ListsTest.testArraysAsList() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.Arrays.asList([Ljava.lang.String;)
assertEquals
java.util.List.set(I, java.lang.String)
java.util.List.get(I)
assertEquals
java.util.List.add(java.lang.String)
fail
java.util.List.remove(I)
fail
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.set(I, java.lang.String)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.add(java.lang.String)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.List.remove(I)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ListsTest.assertIndexIsOutOfBounds(java.util.List, I) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.get(I)
fail
Chamada: java.util.List.get(I)
Situação: Primeira Chamada
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ListsTest.testPartition_empty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.emptyList()
com.google.common.collect.Lists.partition(java.util.List, I)
java.util.List.isEmpty()
assertTrue
java.util.List.size()
assertEquals
Chamada: java.util.Collections.emptyList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.partition(java.util.List, I)
Situação: Manual
Chamada: java.util.List.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ListsTest.testPartitionSize_1() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Lists.partition(java.util.List, I)
java.util.List.size()
assertEquals
com.google.common.collect.Lists.partition(java.util.List, I)
java.util.List.size()
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.partition(java.util.List, I)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Lists.partition(java.util.List, I)
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Útil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.25
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.ListsTest.assertTransformIterator(java.util.List) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.iterator()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
java.util.Iterator.remove()
java.util.Arrays.asList([Ljava.lang.String;)
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: java.util.List.iterator()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5454548957438845
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1830064428297795
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8108106338932848
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8108106338932848
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8108106338932848
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: fail
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.28
Corretude: 0.375
F-Measure: 0.3206106870229008
************************ Método Avaliado: com.google.common.collect.ListsTest.testPartitionRandomAccessFalse() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
com.google.common.collect.Lists.partition(java.util.List, I)
assertFalse
java.util.List.get(I)
assertFalse
java.util.List.get(I)
assertFalse
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.newLinkedList(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Lists.partition(java.util.List, I)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.3333333333333333
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.ListsTest.testPartition_3_2() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Lists.partition(java.util.List, I)
java.util.List.size()
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.get(I)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.get(I)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.partition(java.util.List, I)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.2222222222222222
Corretude: 0.25
F-Measure: 0.23529411764705882
************************ Método Avaliado: com.google.common.collect.ListsTest.checkFooBarBazList(java.util.List) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
that
has
allOf
inOrder
java.util.List.size()
assertEquals
com.google.common.collect.ListsTest.assertIndexIsOutOfBounds(java.util.List, I)
java.util.List.get(I)
assertEquals
java.util.List.get(I)
assertEquals
java.util.List.get(I)
assertEquals
com.google.common.collect.ListsTest.assertIndexIsOutOfBounds(java.util.List, I)
Chamada: that
Situação: Primeira Chamada
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ListsTest.assertIndexIsOutOfBounds(java.util.List, I)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ListsTest.assertIndexIsOutOfBounds(java.util.List, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.23076923076923078
Corretude: 0.25
F-Measure: 0.24000000000000002
************************ Método Avaliado: com.google.common.collect.ListsTest.testNewArrayListFromIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.iterator()
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
assertEquals
Chamada: java.util.Collection.iterator()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedTypePreservingSortedSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.reverseOrder()
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.create(java.util.Comparator, java.util.Comparator)
com.google.common.collect.MapConstraints.constrainedSortedSetMultimap(com.google.common.collect.SortedSetMultimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.SortedSetMultimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
assertTrue
com.google.common.collect.SortedSetMultimap.valueComparator()
assertSame
com.google.common.collect.SortedSetMultimap.get(java.lang.String)
java.util.SortedSet.comparator()
assertSame
Chamada: java.util.Collections.reverseOrder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.TreeMultimap.create(java.util.Comparator, java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.MapConstraints.constrainedSortedSetMultimap(com.google.common.collect.SortedSetMultimap, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.SortedSetMultimap.asMap()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.17500037843811023
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.SortedSetMultimap.valueComparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.collect.SortedSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.SortedSet.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: java.util.Set.iterator()
Útil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.2
Corretude: 0.2727272727272727
F-Measure: 0.23076923076923075
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testMapEntrySetContainsNefariousEntry() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newTreeMap()
com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
java.util.Map.put(java.lang.String, java.lang.Integer)
nefariousMapEntry
java.util.Map.entrySet()
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Map.containsValue(java.lang.Object)
assertFalse
java.util.Collections.singleton(java.util.Map$Entry)
java.util.Set.containsAll(java.util.Collection)
assertFalse
java.util.Map.containsValue(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.Maps.newTreeMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: nefariousMapEntry
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Map.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collections.singleton(java.util.Map$Entry)
Situação: Manual
Chamada: java.util.Set.containsAll(java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Map.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Set.contains(java.lang.Object)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testMultimapAsMapEntriesToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Set.toArray()
java.util.Collections.emptySet()
java.util.Map$Entry.setValue(java.util.Collection)
fail
java.util.Map$Entry.getValue()
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.43333440977842724
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Set.toArray()
Situação: Manual
Chamada: java.util.Collections.emptySet()
Situação: Manual
Chamada: java.util.Map$Entry.setValue(java.util.Collection)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3666668012223034
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map.entrySet()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.15384615384615385
Corretude: 0.4
F-Measure: 0.2222222222222222
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testMultimapAsMapEntriesRemoveNefariousEntry() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.util.Collections.singleton(java.lang.Integer)
nefariousMapEntry
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Set.remove(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
java.util.Collections.singleton(java.util.Map$Entry)
java.util.Set.removeAll(java.util.Collection)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collections.singleton(java.lang.Integer)
Situação: Manual
Chamada: nefariousMapEntry
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.43333440977842724
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collections.singleton(java.util.Map$Entry)
Situação: Manual
Chamada: java.util.Set.removeAll(java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.06666666666666667
Corretude: 0.3333333333333333
F-Measure: 0.1111111111111111
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedTypePreservingList() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.MapConstraints.constrainedListMultimap(com.google.common.collect.ListMultimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ListMultimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
assertTrue
com.google.common.collect.Multimap.entries()
assertFalse
com.google.common.collect.ListMultimap.get(java.lang.String)
assertFalse
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapConstraints.constrainedListMultimap(com.google.common.collect.ListMultimap, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ListMultimap.asMap()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.17500037843811023
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 0.5
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testMultimapAsMapValuesToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.values()
java.util.Collection.toArray()
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.values()
Situação: Manual
Chamada: java.util.Collection.toArray()
Situação: Manual
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testMultimapEntriesRemoveNefariousEntry() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
nefariousMapEntry
com.google.common.collect.Multimap.entries()
java.util.Collection.remove(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
java.util.Collections.singleton(java.util.Map$Entry)
java.util.Collection.removeAll(java.util.Collection)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: nefariousMapEntry
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.remove(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collections.singleton(java.util.Map$Entry)
Situação: Manual
Chamada: java.util.Collection.removeAll(java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.remove(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testMultimapAsMapEntriesContainsNefariousEntry() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
java.util.Collections.singleton(java.lang.Integer)
nefariousMapEntry
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Set.contains(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
java.util.Collections.singleton(java.util.Map$Entry)
java.util.Set.containsAll(java.util.Collection)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collections.singleton(java.lang.Integer)
Situação: Manual
Chamada: nefariousMapEntry
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.43333440977842724
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collections.singleton(java.util.Map$Entry)
Situação: Manual
Chamada: java.util.Set.containsAll(java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.contains(java.lang.Object)
Inútil
Método: java.util.Map.entrySet()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.06666666666666667
Corretude: 0.25
F-Measure: 0.10526315789473685
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedMultimapQueue() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimaps.newMultimap(java.util.Map, com.google.common.base.Supplier)
com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.contains(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.Multimap.size()
assertEquals
Chamada: com.google.common.collect.Multimaps.newMultimap(java.util.Map, com.google.common.base.Supplier)
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedBiMapIllegal() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newLinkedHashMap()
com.google.common.collect.Maps.newLinkedHashMap()
com.google.common.collect.MapConstraints.constrainedBiMap(com.google.common.collect.BiMap, com.google.common.collect.MapConstraint)
com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
com.google.common.collect.BiMap.putAll(java.util.Map)
fail
com.google.common.collect.BiMap.forcePut(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.BiMap.inverse()
com.google.common.collect.BiMap.forcePut(java.lang.Integer, java.lang.String)
fail
com.google.common.collect.BiMap.inverse()
com.google.common.collect.BiMap.forcePut(java.lang.Integer, java.lang.String)
fail
java.util.Collections.emptySet()
java.util.Map.entrySet()
assertEquals
java.util.Collections.emptySet()
java.util.Map.entrySet()
assertEquals
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Manual
Chamada: com.google.common.collect.MapConstraints.constrainedBiMap(com.google.common.collect.BiMap, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.BiMap.putAll(java.util.Map)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.BiMap.forcePut(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.BiMap.inverse()
Situação: Manual
Chamada: com.google.common.collect.BiMap.forcePut(java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.BiMap.inverse()
Situação: Manual
Chamada: com.google.common.collect.BiMap.forcePut(java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Collections.emptySet()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collections.emptySet()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testMapEntrySetToArray() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newLinkedHashMap()
com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.entrySet()
java.util.Set.toArray()
java.util.Map$Entry.setValue(java.lang.Integer)
fail
java.util.Map.containsValue(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Set.toArray()
Situação: Manual
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Map.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedMapIllegal() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newLinkedHashMap()
com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
java.util.Map.put(java.lang.String, java.lang.Integer)
fail
java.util.Map.put(java.lang.String, java.lang.Integer)
fail
java.util.Map.put(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
java.util.Map.putAll(java.util.Map)
fail
java.util.Collections.emptySet()
java.util.Map.entrySet()
assertEquals
java.util.Collections.emptySet()
java.util.Map.entrySet()
assertEquals
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.putAll(java.util.Map)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Collections.emptySet()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collections.emptySet()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testMultimapEntriesContainsNefariousEntry() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
nefariousMapEntry
com.google.common.collect.Multimap.entries()
java.util.Collection.contains(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
java.util.Collections.singleton(java.util.Map$Entry)
java.util.Collection.containsAll(java.util.Collection)
assertFalse
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: nefariousMapEntry
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collections.singleton(java.util.Map$Entry)
Situação: Manual
Chamada: java.util.Collection.containsAll(java.util.Collection)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedTypePreservingSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedHashMultimap.create()
com.google.common.collect.MapConstraints.constrainedSetMultimap(com.google.common.collect.SetMultimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.SetMultimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
assertTrue
Chamada: com.google.common.collect.LinkedHashMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapConstraints.constrainedSetMultimap(com.google.common.collect.SetMultimap, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.SetMultimap.asMap()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.17500037843811023
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.375
Corretude: 0.5
F-Measure: 0.42857142857142855
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedBiMapLegal() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newLinkedHashMap()
com.google.common.collect.Maps.newLinkedHashMap()
com.google.common.collect.MapConstraints.constrainedBiMap(com.google.common.collect.BiMap, com.google.common.collect.MapConstraint)
com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
com.google.common.collect.BiMap.putAll(java.util.Map)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
com.google.common.collect.BiMap.putAll(java.util.Map)
java.util.Map.equals(java.lang.Object)
assertTrue
java.util.Map.equals(java.lang.Object)
assertTrue
java.util.Map.entrySet()
java.util.Map.entrySet()
assertEquals
java.util.Map.keySet()
java.util.Map.keySet()
assertEquals
com.google.common.collect.BiMap.values()
com.google.common.collect.BiMap.values()
assertEquals
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
java.util.Map.hashCode()
java.util.Map.hashCode()
assertEquals
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Manual
Chamada: com.google.common.collect.MapConstraints.constrainedBiMap(com.google.common.collect.BiMap, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.BiMap.putAll(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.BiMap.putAll(java.util.Map)
Situação: Manual
Chamada: java.util.Map.equals(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Map.equals(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.BiMap.values()
Situação: Manual
Chamada: com.google.common.collect.BiMap.values()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.hashCode()
Situação: Manual
Chamada: java.util.Map.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testNefariousMapPutAll() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newLinkedHashMap()
com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
com.google.common.collect.MapConstraintsTest.onceIterableMap(java.lang.String, java.lang.Integer)
java.util.Map.putAll(java.util.Map)
java.util.Map.get(java.lang.Object)
assertEquals
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: com.google.common.collect.MapConstraintsTest.onceIterableMap(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.putAll(java.util.Map)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedMultimapLegal() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.add(java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.add(java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.addAll(java.util.Collection)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.addAll(java.util.Collection)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.build()
com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.build()
com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.build()
com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.build()
com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
com.google.common.collect.Multimap.equals(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.equals(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.entries()
com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
that
com.google.common.collect.Multimap.entries()
com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
is
com.google.common.collect.Multimap.asMap()
java.util.Map.get(java.lang.Object)
that
has
item
com.google.common.collect.Multimap.asMap()
java.util.Map.get(java.lang.Object)
assertNull
com.google.common.collect.Multimap.asMap()
com.google.common.collect.Multimap.asMap()
assertEquals
com.google.common.collect.Multimap.values()
com.google.common.collect.Multimap.values()
assertEquals
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multimap.keys()
assertEquals
com.google.common.collect.Multimap.keySet()
com.google.common.collect.Multimap.keySet()
assertEquals
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.hashCode()
com.google.common.collect.Multimap.hashCode()
assertEquals
com.google.common.collect.Multimap.entries()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
com.google.common.collect.Multimap.asMap()
java.util.Map.values()
assertFalse
com.google.common.collect.Multimap.asMap()
java.util.Map.values()
java.util.Collection.iterator()
java.util.Iterator.next()
java.util.Iterator.next()
java.util.Collection.add(java.lang.Integer)
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
Situação: Manual
Chamada: is
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: item
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertNull
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.values()
Situação: Manual
Chamada: com.google.common.collect.Multimap.values()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.keySet()
Situação: Manual
Chamada: com.google.common.collect.Multimap.keySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.hashCode()
Situação: Manual
Chamada: com.google.common.collect.Multimap.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.values()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.152777731057102
Suporte: 0.00545004
F-Measure Suporte e Confiança: 0.011
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.021505376344086023
Corretude: 0.1111111111111111
F-Measure: 0.036036036036036036
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest$TestConstraint.checkKeyValue(java.lang.String, java.lang.Integer) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.equals(java.lang.Object)
java.lang.Integer.equals(java.lang.Object)
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.lang.Integer.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedTypePreservingRandomAccessList() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ArrayListMultimap.create()
com.google.common.collect.MapConstraints.constrainedListMultimap(com.google.common.collect.ListMultimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ListMultimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
assertTrue
com.google.common.collect.Multimap.entries()
assertFalse
com.google.common.collect.ListMultimap.get(java.lang.String)
assertTrue
Chamada: com.google.common.collect.ArrayListMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapConstraints.constrainedListMultimap(com.google.common.collect.ListMultimap, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ListMultimap.asMap()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.17500037843811023
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.ListMultimap.get(java.lang.String)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 0.5
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedMapLegal() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newLinkedHashMap()
com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
java.util.Map.putAll(java.util.Map)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
java.util.Map.putAll(java.util.Map)
java.util.Map.equals(java.lang.Object)
assertTrue
java.util.Map.equals(java.lang.Object)
assertTrue
java.util.Map.entrySet()
java.util.Map.entrySet()
assertEquals
java.util.Map.keySet()
java.util.Map.keySet()
assertEquals
java.util.Map.values()
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
java.util.Map.values()
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
assertEquals
java.util.Map.values()
assertFalse
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
java.util.Map.hashCode()
java.util.Map.hashCode()
assertEquals
java.util.Map.entrySet()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
allOf
inOrder
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.putAll(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.putAll(java.util.Map)
Situação: Manual
Chamada: java.util.Map.equals(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Map.equals(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.values()
Situação: Manual
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map.values()
Situação: Manual
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.values()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.hashCode()
Situação: Manual
Chamada: java.util.Map.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapConstraintsTest.testConstrainedMultimapIllegal() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.LinkedListMultimap.create()
com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
fail
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.addAll(java.util.Collection)
fail
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.addAll(java.util.Collection)
fail
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Collection.addAll(java.util.Collection)
fail
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
fail
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
fail
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
fail
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.build()
com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
fail
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.build()
com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
fail
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMultimap$Builder.build()
com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
fail
com.google.common.collect.Multimap.entries()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Collection.add(java.util.Map$Entry)
fail
com.google.common.collect.Multimap.entries()
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Arrays.asList([Ljava.util.Map$Entry;)
java.util.Collection.addAll(java.util.Collection)
fail
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.asMap()
java.util.Map.get(java.lang.Object)
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.asMap()
java.util.Map.values()
java.util.Collection.iterator()
java.util.Iterator.next()
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.asMap()
java.util.Map.values()
java.util.Collection.toArray()
java.util.Collection.add(java.lang.Integer)
fail
com.google.common.collect.Multimap.entries()
com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
that
com.google.common.collect.Multimap.entries()
com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
is
com.google.common.collect.Multimap.asMap()
com.google.common.collect.Multimap.asMap()
assertEquals
com.google.common.collect.Multimap.values()
com.google.common.collect.Multimap.values()
assertEquals
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multimap.keys()
assertEquals
com.google.common.collect.Multimap.keySet()
com.google.common.collect.Multimap.keySet()
assertEquals
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.hashCode()
com.google.common.collect.Multimap.hashCode()
assertEquals
Chamada: com.google.common.collect.LinkedListMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapConstraints.constrainedMultimap(com.google.common.collect.Multimap, com.google.common.collect.MapConstraint)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Collection.add(java.util.Map$Entry)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.util.Map$Entry;)
Situação: Manual
Chamada: java.util.Collection.addAll(java.util.Collection)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2307694278255321
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.values()
Situação: Manual
Chamada: java.util.Collection.toArray()
Situação: Manual
Chamada: java.util.Collection.add(java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
Situação: Manual
Chamada: is
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.values()
Situação: Manual
Chamada: com.google.common.collect.Multimap.values()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.keySet()
Situação: Manual
Chamada: com.google.common.collect.Multimap.keySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.hashCode()
Situação: Manual
Chamada: com.google.common.collect.Multimap.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.009433962264150943
Corretude: 0.1111111111111111
F-Measure: 0.017391304347826087
************************ Método Avaliado: com.google.common.collect.MapMakerTest$ComputingTest.testComputerThatReturnsNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MapMaker.makeComputingMap(com.google.common.base.Function)
java.util.Map.get(java.lang.Object)
fail
Chamada: com.google.common.collect.MapMaker.makeComputingMap(com.google.common.base.Function)
Situação: Primeira Chamada
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapMakerTest$RecursiveComputationTest.testRecursiveComputation() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
assertEquals
Chamada: java.util.Map.get(java.lang.Object)
Situação: Primeira Chamada
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapMakerTest$MaximumSizeTest.testSizeBasedEviction() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MapMaker.maximumSize(I)
com.google.common.collect.MapMaker.makeMap()
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.size()
assertEquals
java.util.Map.containsKey(java.lang.Object)
assertTrue
Chamada: com.google.common.collect.MapMaker.maximumSize(I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapMaker.makeMap()
Situação: Manual
Chamada: java.util.Map.put(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map.get(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapMakerTest$MaximumSizeTest.testPut_sizeIsZero() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MapMaker.maximumSize(I)
com.google.common.collect.MapMaker.makeMap()
java.util.Map.size()
assertEquals
java.util.Map.put(java.lang.Object, java.lang.Object)
java.util.Map.size()
assertEquals
Chamada: com.google.common.collect.MapMaker.maximumSize(I)
Situação: Primeira Chamada
Chamada: com.google.common.collect.MapMaker.makeMap()
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.put(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapMakerTest$ComputingTest.testRuntimeException() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MapMaker.makeComputingMap(com.google.common.base.Function)
java.util.Map.get(java.lang.Object)
fail
java.lang.Throwable.getCause()
assertSame
Chamada: com.google.common.collect.MapMaker.makeComputingMap(com.google.common.base.Function)
Situação: Primeira Chamada
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.lang.Throwable.getCause()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapsTest.testToMapWithDuplicateKeys() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.Maps.toMap(java.lang.Iterable, com.google.common.base.Function)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
com.google.common.collect.ImmutableMap.entrySet()
that
has
mapEntry
mapEntry
mapEntry
allOf
inOrder
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.toMap(java.lang.Iterable, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapsTest.testAsMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.of(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.Maps.asMap(java.util.Set, com.google.common.base.Function)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.lang.Integer.valueOf(I)
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.get(java.lang.Object)
assertNull
java.util.Map.entrySet()
that
has
mapEntry
mapEntry
mapEntry
allOf
inOrder
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.String, java.lang.String, java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.asMap(java.util.Set, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.Integer.valueOf(I)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertNull
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapsTest.testLinkedHashMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newLinkedHashMap()
java.util.Collections.emptyMap()
assertEquals
Chamada: com.google.common.collect.Maps.newLinkedHashMap()
Situação: Primeira Chamada
Chamada: java.util.Collections.emptyMap()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableMap.copyOf(java.util.Map)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapsTest.testAsMapSortedEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.asMap(java.util.SortedSet, com.google.common.base.Function)
java.util.SortedMap.entrySet()
that
isEmpty
java.util.Map.isEmpty()
assertTrue
java.util.Map.get(java.lang.Object)
assertNull
Chamada: com.google.common.collect.Maps.asMap(java.util.SortedSet, com.google.common.base.Function)
Situação: Primeira Chamada
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: isEmpty
Situação: Manual
Chamada: java.util.Map.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertNull
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapsTest.testImmutableEntryNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Map$Entry.getKey()
assertNull
java.util.Map$Entry.getValue()
assertNull
java.util.Map$Entry.setValue(java.lang.Integer)
fail
java.lang.Object.toString()
assertEquals
java.util.Map$Entry.hashCode()
assertEquals
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: assertNull
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: assertNull
Situação: Manual
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.1
Corretude: 0.2
F-Measure: 0.13333333333333333
************************ Método Avaliado: com.google.common.collect.MapsTest$FilteredMapTest.testFilteredValuesIllegalSetValue() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MapsTest$FilteredMapTest.createUnfiltered()
com.google.common.collect.Maps.filterValues(java.util.Map, com.google.common.base.Predicate)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.setValue(java.lang.Integer)
fail
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
Chamada: com.google.common.collect.MapsTest$FilteredMapTest.createUnfiltered()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.filterValues(java.util.Map, com.google.common.base.Predicate)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.17500037843811023
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.2222222222222222
************************ Método Avaliado: com.google.common.collect.MapsTest$FilteredMapTest.testFilteredEntriesObjectPredicate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MapsTest$FilteredMapTest.createUnfiltered()
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.base.Predicates.alwaysFalse()
com.google.common.collect.Maps.filterEntries(java.util.Map, com.google.common.base.Predicate)
java.util.Map.isEmpty()
assertTrue
Chamada: com.google.common.collect.MapsTest$FilteredMapTest.createUnfiltered()
Situação: Primeira Chamada
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.base.Predicates.alwaysFalse()
Situação: Manual
Chamada: com.google.common.collect.Maps.filterEntries(java.util.Map, com.google.common.base.Predicate)
Situação: Manual
Chamada: java.util.Map.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapsTest.testSynchronizedBiMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashBiMap.create()
com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.synchronizedBiMap(com.google.common.collect.BiMap)
com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.BiMap.inverse()
java.util.Map.keySet()
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.BiMap.inverse()
java.util.Map.keySet()
assertEquals
Chamada: com.google.common.collect.HashBiMap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.synchronizedBiMap(com.google.common.collect.BiMap)
Situação: Manual
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.BiMap.inverse()
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.BiMap.inverse()
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapsTest$FilteredMapTest.testFilteredEntriesWildCardEntryPredicate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MapsTest$FilteredMapTest.createUnfiltered()
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map$Entry.getKey()
java.lang.String.equals(java.lang.Object)
java.lang.Integer.valueOf(I)
java.util.Map$Entry.getValue()
com.google.common.collect.Maps.filterEntries(java.util.Map, com.google.common.base.Predicate)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
Chamada: com.google.common.collect.MapsTest$FilteredMapTest.createUnfiltered()
Situação: Primeira Chamada
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: java.lang.Integer.valueOf(I)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.Maps.filterEntries(java.util.Map, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.lang.String.equals(java.lang.Object)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.1
Corretude: 0.16666666666666666
F-Measure: 0.125
************************ Método Avaliado: com.google.common.collect.MapsTest.testUniqueIndexIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.BiMap.inverse()
com.google.common.base.Functions.forMap(java.util.Map)
com.google.common.collect.Maps.uniqueIndex(java.lang.Iterable, com.google.common.base.Function)
com.google.common.collect.BiMap.values()
java.util.Set.iterator()
assertEquals
Chamada: com.google.common.collect.BiMap.inverse()
Situação: Primeira Chamada
Chamada: com.google.common.base.Functions.forMap(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.Maps.uniqueIndex(java.lang.Iterable, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.collect.BiMap.values()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapsTest.testAsMapSorted() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.addAll(java.util.Collection, [Ljava.lang.String;)
com.google.common.collect.Maps.asMap(java.util.SortedSet, com.google.common.base.Function)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.lang.Integer.valueOf(I)
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.get(java.lang.Object)
assertNull
java.util.SortedMap.entrySet()
that
has
mapEntry
mapEntry
mapEntry
allOf
inOrder
java.util.SortedMap.tailMap(java.lang.String)
java.util.SortedMap.entrySet()
that
has
mapEntry
mapEntry
allOf
inOrder
java.util.SortedMap.subMap(java.lang.String, java.lang.String)
java.util.SortedMap.entrySet()
that
has
mapEntry
mapEntry
allOf
inOrder
Chamada: java.util.Collections.addAll(java.util.Collection, [Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.asMap(java.util.SortedSet, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.Integer.valueOf(I)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertNull
Situação: Manual
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: java.util.SortedMap.tailMap(java.lang.String)
Situação: Manual
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: java.util.SortedMap.subMap(java.lang.String, java.lang.String)
Situação: Manual
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapsTest.testUnmodifiableBiMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashBiMap.create()
com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
com.google.common.collect.Maps.unmodifiableBiMap(com.google.common.collect.BiMap)
com.google.common.collect.BiMap.inverse()
com.google.common.collect.BiMap.inverse()
assertSame
com.google.common.collect.BiMap.inverse()
com.google.common.collect.BiMap.inverse()
assertSame
com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
java.util.Map.get(java.lang.Object)
java.lang.String.equals(java.lang.Object)
assertEquals
com.google.common.collect.BiMap.inverse()
java.util.Map.get(java.lang.Object)
java.lang.Object.equals(java.lang.Object)
assertEquals
com.google.common.collect.BiMap.put(java.lang.Number, java.lang.String)
fail
com.google.common.collect.BiMap.forcePut(java.lang.Number, java.lang.String)
fail
java.util.Collections.singletonMap(java.lang.Integer, java.lang.String)
com.google.common.collect.BiMap.putAll(java.util.Map)
fail
com.google.common.collect.BiMap.inverse()
com.google.common.collect.BiMap.put(java.lang.String, java.lang.Number)
fail
com.google.common.collect.BiMap.forcePut(java.lang.String, java.lang.Number)
fail
java.util.Collections.singletonMap(java.lang.String, java.lang.Integer)
com.google.common.collect.BiMap.putAll(java.util.Map)
fail
com.google.common.collect.BiMap.values()
java.util.Set.remove(java.lang.Object)
fail
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.setValue(java.lang.String)
fail
java.util.Set.toArray()
java.util.Map$Entry.setValue(java.lang.String)
fail
Chamada: com.google.common.collect.HashBiMap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Maps.unmodifiableBiMap(com.google.common.collect.BiMap)
Situação: Manual
Chamada: com.google.common.collect.BiMap.inverse()
Situação: Manual
Chamada: com.google.common.collect.BiMap.inverse()
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.collect.BiMap.inverse()
Situação: Manual
Chamada: com.google.common.collect.BiMap.inverse()
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.collect.BiMap.put(java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.BiMap.inverse()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.BiMap.put(java.lang.Number, java.lang.String)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.BiMap.forcePut(java.lang.Number, java.lang.String)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Collections.singletonMap(java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.BiMap.putAll(java.util.Map)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.BiMap.inverse()
Situação: Manual
Chamada: com.google.common.collect.BiMap.put(java.lang.String, java.lang.Number)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.BiMap.forcePut(java.lang.String, java.lang.Number)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Collections.singletonMap(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.BiMap.putAll(java.util.Map)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.BiMap.values()
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.17500037843811023
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.setValue(java.lang.String)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Set.toArray()
Situação: Manual
Chamada: java.util.Map$Entry.setValue(java.lang.String)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.lang.String.equals(java.lang.Object)
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.045454545454545456
Corretude: 0.2
F-Measure: 0.07407407407407407
************************ Método Avaliado: com.google.common.collect.MapsTest.testAsMapSortedReadsThrough() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.addAll(java.util.Collection, [Ljava.lang.String;)
com.google.common.collect.Maps.asMap(java.util.SortedSet, com.google.common.base.Function)
java.util.SortedMap.comparator()
assertNull
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.util.Map.get(java.lang.Object)
assertNull
java.util.Set.add(java.lang.String)
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.lang.Integer.valueOf(I)
java.util.Map.get(java.lang.Object)
assertEquals
java.util.SortedMap.headMap(java.lang.String)
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.util.Set.add(java.lang.String)
java.util.Set.remove(java.lang.Object)
com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.util.SortedMap.entrySet()
that
has
mapEntry
mapEntry
mapEntry
mapEntry
allOf
inOrder
Chamada: java.util.Collections.addAll(java.util.Collection, [Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.asMap(java.util.SortedSet, com.google.common.base.Function)
Situação: Manual
Chamada: java.util.SortedMap.comparator()
Situação: Manual
Chamada: assertNull
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertNull
Situação: Manual
Chamada: java.util.Set.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.Integer.valueOf(I)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.SortedMap.headMap(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Set.add(java.lang.String)
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapsTest$FilteredMapTest.testFilteredValuesClear() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MapsTest$FilteredMapTest.createUnfiltered()
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Maps.filterValues(java.util.Map, com.google.common.base.Predicate)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.util.Map.clear()
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.util.Map.isEmpty()
assertTrue
Chamada: com.google.common.collect.MapsTest$FilteredMapTest.createUnfiltered()
Situação: Primeira Chamada
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.filterValues(java.util.Map, com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.clear()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapsTest.testUniqueIndexIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.BiMap.values()
java.util.Set.iterator()
com.google.common.collect.BiMap.inverse()
com.google.common.base.Functions.forMap(java.util.Map)
com.google.common.collect.Maps.uniqueIndex(java.util.Iterator, com.google.common.base.Function)
assertEquals
Chamada: com.google.common.collect.BiMap.values()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.BiMap.inverse()
Situação: Manual
Chamada: com.google.common.base.Functions.forMap(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.Maps.uniqueIndex(java.util.Iterator, com.google.common.base.Function)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: null.apply(java.util.Map$Entry) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map$Entry.getKey()
java.lang.String.length()
java.util.Map$Entry.getValue()
Chamada: java.util.Map$Entry.getKey()
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.lang.StringBuilder.append(C)
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.5
Corretude: 0.14285714285714285
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.collect.MapsTest.testImmutableEntry() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
java.util.Map$Entry.setValue(java.lang.Integer)
fail
java.lang.Object.toString()
assertEquals
java.util.Map$Entry.hashCode()
assertEquals
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.1
Corretude: 0.2
F-Measure: 0.13333333333333333
************************ Método Avaliado: com.google.common.collect.MapsTest.testToMapIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.ImmutableList.iterator()
com.google.common.collect.Maps.toMap(java.util.Iterator, com.google.common.base.Function)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
com.google.common.collect.ImmutableMap.entrySet()
that
has
mapEntry
mapEntry
mapEntry
allOf
inOrder
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Manual
Chamada: com.google.common.collect.Maps.toMap(java.util.Iterator, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapsTest.testLinkedHashMapWithInitialMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.HashMap.put(java.lang.String, java.lang.String)
java.util.HashMap.put(java.lang.String, java.lang.String)
java.util.HashMap.put(java.lang.String, java.lang.String)
java.util.HashMap.put(java.lang.String, java.lang.String)
com.google.common.collect.Maps.newLinkedHashMap(java.util.Map)
java.util.HashMap.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: java.util.HashMap.put(java.lang.String, java.lang.String)
Situação: Primeira Chamada
Chamada: java.util.HashMap.put(java.lang.String, java.lang.String)
Situação: Manual
Chamada: java.util.HashMap.put(java.lang.String, java.lang.String)
Situação: Manual
Chamada: java.util.HashMap.put(java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Maps.newLinkedHashMap(java.util.Map)
Situação: Manual
Chamada: java.util.HashMap.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.4516133652794417
Suporte: 0.00693642
F-Measure Suporte e Confiança: 0.014
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.526882259492682
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.3809515571433102
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9285712226191608
Suporte: 0.00644096
F-Measure Suporte e Confiança: 0.013
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.41025561406995226
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9285712226191608
Suporte: 0.00644096
F-Measure Suporte e Confiança: 0.013
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.41025561406995226
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9285712226191608
Suporte: 0.00644096
F-Measure Suporte e Confiança: 0.013
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.41025561406995226
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 0.6
F-Measure: 0.35294117647058826
************************ Método Avaliado: com.google.common.collect.MapsTest.testToMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.Maps.toMap(java.lang.Iterable, com.google.common.base.Function)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
com.google.common.collect.ImmutableMap.entrySet()
that
has
mapEntry
mapEntry
mapEntry
allOf
inOrder
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String, java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.toMap(java.lang.Iterable, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: mapEntry
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapsTest.testAsMapReadsThrough() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newLinkedHashSet()
java.util.Collections.addAll(java.util.Collection, [Ljava.lang.String;)
com.google.common.collect.Maps.asMap(java.util.Set, com.google.common.base.Function)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.util.Map.get(java.lang.Object)
assertNull
java.util.Set.add(java.lang.String)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
assertEquals
java.lang.Integer.valueOf(I)
java.util.Map.get(java.lang.Object)
assertEquals
Chamada: com.google.common.collect.Sets.newLinkedHashSet()
Situação: Primeira Chamada
Chamada: java.util.Collections.addAll(java.util.Collection, [Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Maps.asMap(java.util.Set, com.google.common.base.Function)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertNull
Situação: Manual
Chamada: java.util.Set.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.lang.Integer.valueOf(I)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapsTest.testAsMapEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.of()
com.google.common.collect.Maps.asMap(java.util.Set, com.google.common.base.Function)
java.util.Map.entrySet()
that
isEmpty
java.util.Map.isEmpty()
assertTrue
java.util.Map.get(java.lang.Object)
assertNull
Chamada: com.google.common.collect.ImmutableSet.of()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.asMap(java.util.Set, com.google.common.base.Function)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: isEmpty
Situação: Manual
Chamada: java.util.Map.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertNull
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MultimapsTest.checkUnmodifiableMultimap(com.google.common.collect.Multimap, Z, java.lang.String, java.lang.Integer) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MultimapsTest.prepareUnmodifiableTests(com.google.common.collect.Multimap, Z, java.lang.String, java.lang.Integer)
assertMultimapIsUnmodifiable
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multimap.keys()
com.google.common.collect.MultimapsTest.assertUnmodifiableIterableInTandem(java.lang.Iterable, java.lang.Iterable)
com.google.common.collect.Multimap.keySet()
com.google.common.collect.Multimap.keySet()
com.google.common.collect.MultimapsTest.assertUnmodifiableIterableInTandem(java.lang.Iterable, java.lang.Iterable)
com.google.common.collect.Multimap.entries()
com.google.common.collect.Multimap.entries()
com.google.common.collect.MultimapsTest.assertUnmodifiableIterableInTandem(java.lang.Iterable, java.lang.Iterable)
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
com.google.common.collect.MultimapsTest.assertUnmodifiableIterableInTandem(java.lang.Iterable, java.lang.Iterable)
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.hashCode()
com.google.common.collect.Multimap.hashCode()
assertEquals
assertEquals
com.google.common.collect.Multimap.asMap()
java.util.Map.get(java.lang.Object)
that
has
allOf
com.google.common.collect.Multimap.asMap()
java.util.Map.get(java.lang.Object)
assertNull
com.google.common.collect.Multimap.entries()
assertFalse
Chamada: com.google.common.collect.MultimapsTest.prepareUnmodifiableTests(com.google.common.collect.Multimap, Z, java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: assertMultimapIsUnmodifiable
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: com.google.common.collect.MultimapsTest.assertUnmodifiableIterableInTandem(java.lang.Iterable, java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Multimap.keySet()
Situação: Manual
Chamada: com.google.common.collect.Multimap.keySet()
Situação: Manual
Chamada: com.google.common.collect.MultimapsTest.assertUnmodifiableIterableInTandem(java.lang.Iterable, java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: com.google.common.collect.MultimapsTest.assertUnmodifiableIterableInTandem(java.lang.Iterable, java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.43333440977842724
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.43333440977842724
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.collect.MultimapsTest.assertUnmodifiableIterableInTandem(java.lang.Iterable, java.lang.Iterable)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.hashCode()
Situação: Manual
Chamada: com.google.common.collect.Multimap.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertNull
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0625
Corretude: 0.2
F-Measure: 0.09523809523809523
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testForMapGetIteration() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newHashSet([Ljava.lang.Integer;)
com.google.common.collect.Maps.newHashMap()
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimaps.forMap(java.util.Map)
com.google.common.collect.Multimap.get(java.lang.String)
java.util.Collection.iterator()
com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
ignoreSunJavaBug6529795
test
Chamada: com.google.common.collect.Sets.newHashSet([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Maps.newHashMap()
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimaps.forMap(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: ignoreSunJavaBug6529795
Situação: Manual
Chamada: test
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testSynchronizedMultimapSampleCodeCompilation() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashMultimap.create()
com.google.common.collect.Multimaps.synchronizedMultimap(com.google.common.collect.Multimap)
com.google.common.collect.Multimap.get(com.google.common.collect.MultimapsTest$()V$K)
java.util.Collection.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.MultimapsTest.foo(java.lang.Object)
Chamada: com.google.common.collect.HashMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimaps.synchronizedMultimap(com.google.common.collect.Multimap)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(com.google.common.collect.MultimapsTest$()V$K)
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3870958290850707
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.MultimapsTest.foo(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testForMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newHashMap()
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.HashMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimaps.forMap(java.util.Map)
com.google.common.collect.Multimap.equals(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.equals(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.equals(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.equals(java.lang.Object)
assertFalse
com.google.common.collect.HashMultimap.create()
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.equals(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.equals(java.lang.Object)
assertFalse
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
com.google.common.collect.ImmutableListMultimap$Builder.build()
com.google.common.collect.Multimap.equals(java.lang.Object)
assertFalse
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.hashCode()
com.google.common.collect.Multimap.hashCode()
assertEquals
com.google.common.collect.Multimap.size()
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsValue(java.lang.Object)
assertTrue
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
assertTrue
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Multimap.get(java.lang.String)
assertEquals
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
fail
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
fail
com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
fail
java.util.Collections.emptySet()
com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
fail
com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
java.util.Map.containsKey(java.lang.Object)
assertFalse
java.util.Map.keySet()
com.google.common.collect.Multimap.keySet()
assertEquals
java.util.Map.keySet()
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.elementSet()
assertEquals
com.google.common.collect.Multimap.keys()
that
has
item
com.google.common.collect.Multimap.values()
that
has
item
com.google.common.collect.Multimap.entries()
that
has
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
item
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
that
has
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
item
com.google.common.collect.Multimap.clear()
com.google.common.collect.Multimap.containsKey(java.lang.Object)
assertFalse
java.util.Map.containsKey(java.lang.Object)
assertFalse
java.util.Map.isEmpty()
assertTrue
com.google.common.collect.Multimap.isEmpty()
assertTrue
com.google.common.collect.Multimap.clear()
java.lang.Object.toString()
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.hashCode()
com.google.common.collect.Multimap.hashCode()
assertEquals
com.google.common.collect.Multimap.size()
com.google.common.collect.Multimap.size()
assertEquals
com.google.common.collect.ArrayListMultimap.create()
assertEquals
Chamada: com.google.common.collect.Maps.newHashMap()
Situação: Primeira Chamada
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.HashMultimap.create()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimaps.forMap(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.HashMultimap.create()
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.Multimap.equals(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.hashCode()
Situação: Manual
Chamada: com.google.common.collect.Multimap.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collections.singleton(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collections.singleton(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Collections.singleton(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.Multimap)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Collections.emptySet()
Situação: Manual
Chamada: com.google.common.collect.Multimap.replaceValues(java.lang.String, java.lang.Iterable)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: com.google.common.collect.Multimap.keySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: com.google.common.collect.Multiset.elementSet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: item
Situação: Manual
Chamada: com.google.common.collect.Multimap.values()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: item
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: item
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.43333440977842724
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: java.util.Collections.singleton(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Collection)
Situação: Manual
Chamada: item
Situação: Manual
Chamada: com.google.common.collect.Multimap.clear()
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Map.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Multimap.clear()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.hashCode()
Situação: Manual
Chamada: com.google.common.collect.Multimap.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: com.google.common.collect.Multimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ArrayListMultimap.create()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Multiset.elementSet()
Inútil
Método: java.util.Set.size()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Map.entrySet()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Método: java.util.Map.get(java.lang.Object)
Inútil
Percentual de Automatização: 0.00909090909090909
Corretude: 0.1
F-Measure: 0.016666666666666666
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testIndexIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Object)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Object)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Object)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Object)
com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Object)
com.google.common.collect.ImmutableMultimap$Builder.build()
com.google.common.collect.Multimap.values()
java.util.Collection.iterator()
com.google.common.base.Functions.toStringFunction()
com.google.common.collect.Multimaps.index(java.util.Iterator, com.google.common.base.Function)
assertEquals
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.put(java.lang.String, java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMultimap$Builder.build()
Situação: Manual
Chamada: com.google.common.collect.Multimap.values()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: com.google.common.base.Functions.toStringFunction()
Situação: Manual
Chamada: com.google.common.collect.Multimaps.index(java.util.Iterator, com.google.common.base.Function)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testNewMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newEnumMap(java.lang.Class)
com.google.common.collect.Multimaps.newMultimap(java.util.Map, com.google.common.base.Supplier)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(com.google.common.collect.MultimapsTest$Color, java.lang.Iterable)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Multimap.putAll(com.google.common.collect.MultimapsTest$Color, java.lang.Iterable)
assertEquals
com.google.common.collect.Multimap.get(com.google.common.collect.MultimapsTest$Color)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimaps.unmodifiableMultimap(com.google.common.collect.Multimap)
com.google.common.collect.Multimap.get(com.google.common.collect.MultimapsTest$Color)
java.lang.Object.toString()
assertEquals
com.google.common.collect.Multimap.get(com.google.common.collect.MultimapsTest$Color)
assertEquals
com.google.common.collect.Multimap.keySet()
assertFalse
com.google.common.collect.Multimap.asMap()
assertFalse
Chamada: com.google.common.collect.Maps.newEnumMap(java.lang.Class)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimaps.newMultimap(java.util.Map, com.google.common.base.Supplier)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.MultimapsTest$Color, java.lang.Iterable)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.collect.MultimapsTest$Color, java.lang.Iterable)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(com.google.common.collect.MultimapsTest$Color)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimaps.unmodifiableMultimap(com.google.common.collect.Multimap)
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(com.google.common.collect.MultimapsTest$Color)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.get(com.google.common.collect.MultimapsTest$Color)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multimap.keySet()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testUnmodifiableMultimapEntries() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashMultimap.create()
com.google.common.collect.Multimaps.unmodifiableMultimap(com.google.common.collect.Multimap)
com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimap.entries()
java.util.Collection.iterator()
java.util.Iterator.next()
java.util.Map$Entry.setValue(java.lang.Integer)
fail
com.google.common.collect.Multimap.entries()
java.util.Collection.toArray()
java.util.Map$Entry.setValue(java.lang.Integer)
fail
com.google.common.collect.Multimap.entries()
java.util.Collection.toArray([Ljava.util.Map$Entry;)
assertSame
java.util.Map$Entry.setValue(java.lang.Integer)
fail
com.google.common.collect.Multimap.entries()
nefariousMapEntry
java.util.Collection.contains(java.lang.Object)
assertFalse
com.google.common.collect.Multimap.keys()
com.google.common.collect.Multiset.contains(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.HashMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimaps.unmodifiableMultimap(com.google.common.collect.Multimap)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5483872227886571
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.toArray()
Situação: Manual
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: java.util.Collection.toArray([Ljava.util.Map$Entry;)
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: java.util.Map$Entry.setValue(java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: nefariousMapEntry
Situação: Manual
Chamada: java.util.Collection.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multimap.keys()
Situação: Manual
Chamada: com.google.common.collect.Multiset.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.base.Preconditions.checkNotNull(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.043478260869565216
Corretude: 0.1111111111111111
F-Measure: 0.0625
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testNewMultimapWithCollectionRejectingNegativeElements() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z)
com.google.common.collect.ForwardingCollection.standardAddAll(java.util.Collection)
com.google.common.collect.Maps.newEnumMap(java.lang.Class)
com.google.common.collect.Multimaps.newMultimap(java.util.Map, com.google.common.base.Supplier)
com.google.common.collect.Multimap.put(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
fail
com.google.common.collect.Multimap.put(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
com.google.common.collect.Multimap.put(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
com.google.common.collect.Multimap.put(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
fail
com.google.common.collect.Multimap.entries()
that
has
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
allOf
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ForwardingCollection.standardAddAll(java.util.Collection)
Situação: Manual
Chamada: com.google.common.collect.Maps.newEnumMap(java.lang.Class)
Situação: Manual
Chamada: com.google.common.collect.Multimaps.newMultimap(java.util.Map, com.google.common.base.Supplier)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multimap.entries()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.MultimapsTest$Color, java.lang.Integer)
Situação: Manual
Chamada: allOf
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testIndex_ordering() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.Integer, java.lang.String)
com.google.common.collect.ImmutableListMultimap$Builder.build()
java.util.Arrays.asList([Ljava.lang.String;)
java.lang.String.length()
com.google.common.collect.Multimaps.index(java.lang.Iterable, com.google.common.base.Function)
assertEquals
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.Integer, java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.put(java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableListMultimap$Builder.build()
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Manual
Chamada: com.google.common.collect.Multimaps.index(java.lang.Iterable, com.google.common.base.Function)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MultimapsTest.assertUnmodifiableIterableInTandem(java.lang.Iterable, java.lang.Iterable) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Iterable.iterator()
assertIteratorIsUnmodifiable
java.lang.Iterable.iterator()
java.lang.Iterable.iterator()
assertIteratorsInOrder
Chamada: java.lang.Iterable.iterator()
Situação: Primeira Chamada
Chamada: assertIteratorIsUnmodifiable
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: assertIteratorsInOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testForMapAsMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Maps.newHashMap()
java.util.Map.put(java.lang.String, java.lang.Integer)
java.util.Map.put(java.lang.String, java.lang.Integer)
com.google.common.collect.Multimaps.forMap(java.util.Map)
com.google.common.collect.SetMultimap.asMap()
java.util.Collections.singleton(java.lang.Integer)
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.get(java.lang.Object)
assertNull
java.util.Map.containsKey(java.lang.Object)
assertTrue
java.util.Map.containsKey(java.lang.Object)
assertFalse
java.util.Map.entrySet()
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Set.remove(java.lang.Object)
assertFalse
java.util.Collections.singletonList(java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.List)
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Collections.singletonList(java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.List)
java.util.Set.remove(java.lang.Object)
assertFalse
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.LinkedHashSet)
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.LinkedHashSet)
java.util.Set.remove(java.lang.Object)
assertFalse
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
java.util.Set.remove(java.lang.Object)
assertFalse
java.util.Map.containsKey(java.lang.Object)
assertTrue
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
java.util.Set.contains(java.lang.Object)
assertTrue
java.util.Collections.singleton(java.lang.Integer)
com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
java.util.Set.remove(java.lang.Object)
assertTrue
java.util.Map.containsKey(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.Maps.newHashMap()
Situação: Primeira Chamada
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Multimaps.forMap(java.util.Map)
Situação: Manual
Chamada: com.google.common.collect.SetMultimap.asMap()
Situação: Manual
Chamada: java.util.Collections.singleton(java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertNull
Situação: Manual
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collections.singletonList(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.List)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collections.singletonList(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.List)
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.LinkedHashSet)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.LinkedHashSet)
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collections.singleton(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collections.singleton(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collections.singleton(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collections.singleton(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.String, java.util.Set)
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Set.contains(java.lang.Object)
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Método: java.util.Map.get(java.lang.Object)
Inútil
Percentual de Automatização: 0.07142857142857142
Corretude: 0.125
F-Measure: 0.09090909090909091
************************ Método Avaliado: com.google.common.collect.MultisetsTest.testDifferenceWithMoreElementsInSecondMultiset() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
com.google.common.collect.Multisets.difference(com.google.common.collect.Multiset, com.google.common.collect.Multiset)
that
has
item
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.contains(java.lang.Object)
assertFalse
com.google.common.collect.Multiset.contains(java.lang.Object)
assertTrue
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Multisets.difference(com.google.common.collect.Multiset, com.google.common.collect.Multiset)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: item
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Multiset.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MultisetsTest.testRemoveOccurrencesEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashMultiset.create()
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
com.google.common.collect.Multisets.retainOccurrences(com.google.common.collect.Multiset, com.google.common.collect.Multiset)
assertFalse
java.util.Collection.isEmpty()
assertTrue
Chamada: com.google.common.collect.HashMultiset.create()
Situação: Primeira Chamada
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Multisets.retainOccurrences(com.google.common.collect.Multiset, com.google.common.collect.Multiset)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MultisetsTest.testRetainEmptyOccurrences() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
com.google.common.collect.HashMultiset.create()
com.google.common.collect.Multisets.retainOccurrences(com.google.common.collect.Multiset, com.google.common.collect.Multiset)
assertTrue
java.util.Collection.isEmpty()
assertTrue
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.HashMultiset.create()
Situação: Manual
Chamada: com.google.common.collect.Multisets.retainOccurrences(com.google.common.collect.Multiset, com.google.common.collect.Multiset)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterator_simple_n_withNullElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsLast()
java.util.List.iterator()
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
java.util.Arrays.asList([Ljava.lang.Integer;)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Ordering.nullsLast()
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest$Scenario.testMinAndMax() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
com.google.common.collect.OrderingTest.shuffledCopy(java.util.List, java.util.Random)
java.util.List.get(I)
java.util.List.size()
java.util.List.get(I)
java.util.List.get(I)
java.util.List.get(I)
java.util.List.get(I)
java.util.List.size()
java.util.List.subList(I, I)
java.util.List.toArray([Ljava.lang.Object;)
com.google.common.collect.Ordering.min(java.lang.Iterable)
assertEquals
java.util.List.iterator()
com.google.common.collect.Ordering.min(java.util.Iterator)
assertEquals
com.google.common.collect.Ordering.min(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T, [Ljava.lang.Object;)
assertEquals
com.google.common.collect.Ordering.min(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T)
assertEquals
com.google.common.collect.Ordering.min(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T)
assertEquals
com.google.common.collect.Ordering.max(java.lang.Iterable)
assertEquals
java.util.List.iterator()
com.google.common.collect.Ordering.max(java.util.Iterator)
assertEquals
com.google.common.collect.Ordering.max(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T, [Ljava.lang.Object;)
assertEquals
com.google.common.collect.Ordering.max(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T)
assertEquals
com.google.common.collect.Ordering.max(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T)
assertEquals
Chamada: com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
Situação: Primeira Chamada
Chamada: com.google.common.collect.OrderingTest.shuffledCopy(java.util.List, java.util.Random)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09589008145186709
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.subList(I, I)
Situação: Manual
Chamada: java.util.List.toArray([Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.Ordering.min(java.lang.Iterable)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.Ordering.min(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Ordering.min(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T, [Ljava.lang.Object;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Ordering.min(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Ordering.min(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Ordering.max(java.lang.Iterable)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.max(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Ordering.max(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T, [Ljava.lang.Object;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Ordering.max(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Ordering.max(com.google.common.collect.OrderingTest$Scenario$T, com.google.common.collect.OrderingTest$Scenario$T)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Útil
Método: java.util.List.iterator()
Útil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.21875
Corretude: 0.6
F-Measure: 0.3206106870229008
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterable_simple_nMinusOne() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIteratorLargeK() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Ordering.natural()
java.util.List.iterator()
com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testGreatestOfIterator_simple() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Ordering.greatestOf(java.util.Iterator, I)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.greatestOf(java.util.Iterator, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterable_ties() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
assertNotSame
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
Chamada: assertNotSame
Situação: Primeira Chamada
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.shuffledCopy(java.util.List, java.util.Random) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
com.google.common.collect.Lists.newArrayList()
java.util.List.isEmpty()
java.util.List.size()
java.util.Random.nextInt(I)
java.util.List.remove(I)
java.util.List.add(com.google.common.collect.OrderingTest$(Ljava/util/List;Ljava/util/Random;)Ljava/util/List;$T)
Chamada: com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Manual
Chamada: java.util.List.isEmpty()
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: java.util.Random.nextInt(I)
Situação: Manual
Chamada: java.util.List.remove(I)
Situação: Manual
Chamada: java.util.List.add(com.google.common.collect.OrderingTest$(Ljava/util/List;Ljava/util/Random;)Ljava/util/List;$T)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testIteratorMaxExhaustsIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Ordering.max(java.util.Iterator)
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.max(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testIteratorMinAndMax() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Ordering.max(java.util.Iterator)
assertEquals
java.util.List.iterator()
com.google.common.collect.Ordering.min(java.util.Iterator)
assertEquals
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Ordering.max(java.util.Iterator)
assertSame
java.util.List.iterator()
com.google.common.collect.Ordering.min(java.util.Iterator)
assertSame
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.max(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.min(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.max(java.util.Iterator)
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.min(java.util.Iterator)
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterator_ties() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
assertNotSame
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
Chamada: assertNotSame
Situação: Primeira Chamada
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLexicographical() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.lexicographical()
com.google.common.collect.ImmutableList.of()
com.google.common.collect.ImmutableList.of(java.lang.String)
com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String)
com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String)
com.google.common.collect.ImmutableList.of(java.lang.String)
testComparator
com.google.common.collect.Ordering.lexicographical()
addEqualityGroup
com.google.common.collect.Ordering.lexicographical()
addEqualityGroup
com.google.common.collect.Ordering.natural()
addEqualityGroup
testEquals
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.lexicographical()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.String)
Situação: Manual
Chamada: testComparator
Situação: Manual
Chamada: com.google.common.collect.Ordering.lexicographical()
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: com.google.common.collect.Ordering.lexicographical()
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: addEqualityGroup
Situação: Manual
Chamada: testEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Útil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.07142857142857142
Corretude: 0.2
F-Measure: 0.10526315789473682
************************ Método Avaliado: com.google.common.collect.OrderingTest.testNullsFirst() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsFirst()
testComparator
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsFirst()
addEqualityGroup
com.google.common.collect.Ordering.nullsFirst()
addEqualityGroup
com.google.common.collect.Ordering.natural()
addEqualityGroup
testEquals
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.nullsFirst()
Situação: Manual
Chamada: testComparator
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.Ordering.nullsFirst()
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: com.google.common.collect.Ordering.nullsFirst()
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: addEqualityGroup
Situação: Manual
Chamada: testEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Útil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.2
Corretude: 0.2
F-Measure: 0.20000000000000004
************************ Método Avaliado: com.google.common.collect.OrderingTest.testOnResultOf_natural() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
java.util.Comparator.compare(java.lang.String, java.lang.String)
assertTrue
java.util.Comparator.compare(java.lang.String, java.lang.String)
assertTrue
java.util.Comparator.compare(java.lang.String, java.lang.String)
assertTrue
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
addEqualityGroup
addEqualityGroup
testEquals
reserializeAndAssert
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
Situação: Manual
Chamada: java.util.Comparator.compare(java.lang.String, java.lang.String)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Comparator.compare(java.lang.String, java.lang.String)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Comparator.compare(java.lang.String, java.lang.String)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: testEquals
Situação: Manual
Chamada: reserializeAndAssert
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Útil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.06666666666666667
Corretude: 0.2
F-Measure: 0.1
************************ Método Avaliado: com.google.common.collect.OrderingTest.testIteratorMinExhaustsIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
java.util.List.iterator()
com.google.common.collect.Ordering.min(java.util.Iterator)
assertEquals
java.util.Iterator.hasNext()
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Ordering.min(java.util.Iterator)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testNullsLast() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsLast()
testComparator
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsLast()
addEqualityGroup
com.google.common.collect.Ordering.nullsLast()
addEqualityGroup
com.google.common.collect.Ordering.natural()
addEqualityGroup
testEquals
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.nullsLast()
Situação: Manual
Chamada: testComparator
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.Ordering.nullsLast()
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: com.google.common.collect.Ordering.nullsLast()
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: addEqualityGroup
Situação: Manual
Chamada: testEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Útil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.2
Corretude: 0.2
F-Measure: 0.20000000000000004
************************ Método Avaliado: com.google.common.collect.OrderingTest.testFrom() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.from(java.util.Comparator)
com.google.common.collect.Ordering.compare(java.lang.String, java.lang.String)
assertEquals
com.google.common.collect.Ordering.compare(java.lang.String, java.lang.String)
assertTrue
com.google.common.collect.Ordering.compare(java.lang.String, java.lang.String)
assertTrue
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.from(com.google.common.collect.Ordering)
com.google.common.collect.Ordering.from(java.util.Comparator)
addEqualityGroup
com.google.common.collect.Ordering.natural()
addEqualityGroup
testEquals
Chamada: com.google.common.collect.Ordering.from(java.util.Comparator)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.compare(java.lang.String, java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Ordering.compare(java.lang.String, java.lang.String)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Ordering.compare(java.lang.String, java.lang.String)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Ordering.from(com.google.common.collect.Ordering)
Situação: Manual
Chamada: com.google.common.collect.Ordering.from(java.util.Comparator)
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: addEqualityGroup
Situação: Manual
Chamada: testEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Útil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.07692307692307693
Corretude: 0.2
F-Measure: 0.1111111111111111
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterator_simple_nPlusOne() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterator_simple_n() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterator_simple_nMinusOne() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.iterator()
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testCombinationsExhaustively_startingFromFromComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.from(java.util.Comparator)
com.google.common.collect.OrderingTest.testExhaustively(com.google.common.collect.Ordering, [Ljava.lang.String;)
Chamada: com.google.common.collect.Ordering.from(java.util.Comparator)
Situação: Primeira Chamada
Chamada: com.google.common.collect.OrderingTest.testExhaustively(com.google.common.collect.Ordering, [Ljava.lang.String;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterable_simple_nPlusOne() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterableLargeK() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterable_simple_n_withNullElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsLast()
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
java.util.Arrays.asList([Ljava.lang.Integer;)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Ordering.nullsLast()
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testCombinationsExhaustively_startingFromNatural() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.OrderingTest.testExhaustively(com.google.common.collect.Ordering, [Ljava.lang.String;)
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: com.google.common.collect.OrderingTest.testExhaustively(com.google.common.collect.Ordering, [Ljava.lang.String;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testNatural() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
testComparator
com.google.common.collect.Ordering.compare(java.lang.Integer, java.lang.Integer)
fail
com.google.common.collect.Ordering.compare(java.lang.Integer, java.lang.Integer)
fail
com.google.common.collect.Ordering.compare(java.lang.Integer, java.lang.Integer)
fail
reserialize
assertSame
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: testComparator
Situação: Manual
Chamada: com.google.common.collect.Ordering.compare(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Ordering.compare(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Ordering.compare(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: reserialize
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterable_simple_nMinusOne_withNullElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsLast()
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Ordering.nullsLast()
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterator_simple_nMinusOne_withNullElement() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterators.forArray([Ljava.lang.Integer;)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsLast()
com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
Chamada: com.google.common.collect.Iterators.forArray([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Ordering.nullsLast()
Situação: Manual
Chamada: com.google.common.collect.Ordering.leastOf(java.util.Iterator, I)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testExhaustively(com.google.common.collect.Ordering, [Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
java.util.Arrays.asList([Ljava.lang.Object;)
com.google.common.collect.Platform.newArray([Ljava.lang.Object;, I)
com.google.common.collect.OrderingTest.verifyScenario(com.google.common.collect.OrderingTest$Scenario, I)
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Situação: Primeira Chamada
Chamada: java.util.Arrays.asList([Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.Platform.newArray([Ljava.lang.Object;, I)
Situação: Manual
Chamada: com.google.common.collect.OrderingTest.verifyScenario(com.google.common.collect.OrderingTest$Scenario, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testOnResultOf_chained() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
java.util.Comparator.compare(java.lang.String, java.lang.String)
assertTrue
java.util.Comparator.compare(java.lang.String, java.lang.String)
assertTrue
java.util.Comparator.compare(java.lang.String, java.lang.String)
assertTrue
com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
addEqualityGroup
com.google.common.base.Functions.constant(java.lang.Integer)
com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
addEqualityGroup
com.google.common.collect.Ordering.natural()
addEqualityGroup
testEquals
reserializeAndAssert
java.lang.Object.toString()
assertEquals
Chamada: com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
Situação: Primeira Chamada
Chamada: java.util.Comparator.compare(java.lang.String, java.lang.String)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Comparator.compare(java.lang.String, java.lang.String)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Comparator.compare(java.lang.String, java.lang.String)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: com.google.common.base.Functions.constant(java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: testEquals
Situação: Manual
Chamada: reserializeAndAssert
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.runLeastOfComparison(I, I, I) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Lists.newArrayList()
java.util.Random.nextInt(I)
java.util.List.add(java.lang.Integer)
java.util.Random.nextInt(I)
com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
java.util.List.subList(I, I)
com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
assertEquals
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Manual
Chamada: java.util.Random.nextInt(I)
Situação: Manual
Chamada: java.util.List.add(java.lang.Integer)
Situação: Manual
Chamada: java.util.Random.nextInt(I)
Situação: Manual
Chamada: com.google.common.collect.Ordering.sortedCopy(java.lang.Iterable)
Situação: Manual
Chamada: java.util.List.subList(I, I)
Situação: Manual
Chamada: com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testImmutableSortedCopy() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.Ordering.immutableSortedCopy(java.lang.Iterable)
java.util.Arrays.asList([Ljava.lang.Integer;)
assertEquals
java.util.Collections.emptyList()
java.util.Collections.emptyList()
com.google.common.collect.Ordering.immutableSortedCopy(java.lang.Iterable)
assertEquals
java.util.Arrays.asList([Ljava.lang.Integer;)
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsFirst()
com.google.common.collect.Ordering.immutableSortedCopy(java.lang.Iterable)
fail
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.immutableSortedCopy(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Collections.emptyList()
Situação: Manual
Chamada: java.util.Collections.emptyList()
Situação: Manual
Chamada: com.google.common.collect.Ordering.immutableSortedCopy(java.lang.Iterable)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Ordering.nullsFirst()
Situação: Manual
Chamada: com.google.common.collect.Ordering.immutableSortedCopy(java.lang.Iterable)
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest.testLeastOfIterable_simple_n() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.Integer;)
java.util.List.size()
com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
assertTrue
com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: com.google.common.collect.Ordering.leastOf(java.lang.Iterable, I)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.OrderingTest.assertListImmutable(java.util.List)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.OrderingTest$Scenario.testBinarySearch() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.size()
java.util.List.get(I)
com.google.common.collect.Ordering.binarySearch(java.util.List, com.google.common.collect.OrderingTest$Scenario$T)
assertEquals
com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
java.util.List.remove(I)
com.google.common.collect.Ordering.binarySearch(java.util.List, com.google.common.collect.OrderingTest$Scenario$T)
assertEquals
Chamada: java.util.List.size()
Situação: Primeira Chamada
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.39436797489297104
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.Ordering.binarySearch(java.util.List, com.google.common.collect.OrderingTest$Scenario$T)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
Situação: Manual
Chamada: java.util.List.remove(I)
Situação: Manual
Chamada: com.google.common.collect.Ordering.binarySearch(java.util.List, com.google.common.collect.OrderingTest$Scenario$T)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.14285714285714285
Corretude: 0.25
F-Measure: 0.18181818181818182
************************ Método Avaliado: com.google.common.collect.OrderingTest.testReverse() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.reverse()
testComparator
com.google.common.collect.Ordering.reverse()
addEqualityGroup
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.reverse()
addEqualityGroup
java.util.Collections.reverseOrder()
addEqualityGroup
testEquals
Chamada: com.google.common.collect.Ordering.reverse()
Situação: Primeira Chamada
Chamada: testComparator
Situação: Manual
Chamada: com.google.common.collect.Ordering.reverse()
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Ordering.reverse()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: addEqualityGroup
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: testEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Útil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.1111111111111111
Corretude: 0.2
F-Measure: 0.14285714285714285
************************ Método Avaliado: com.google.common.collect.OrderingTest.byCharAt(I) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.OrderingTest$CharAtFunction.values()
com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: com.google.common.collect.OrderingTest$CharAtFunction.values()
Situação: Manual
Chamada: com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.PeekingIteratorTest$PeekingIteratorTester.newTargetIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
java.util.List.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Chamada: com.google.common.collect.Lists.newArrayList(java.lang.Iterable)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.PeekingIteratorTest.actsLikeIteratorHelper(java.util.List) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
test
java.util.List.size()
test
java.util.Collections.unmodifiableList(java.util.List)
java.util.List.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Chamada: test
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: test
Situação: Manual
Chamada: java.util.Collections.unmodifiableList(java.util.List)
Situação: Manual
Chamada: java.util.List.iterator()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Útil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.2
Corretude: 0.2
F-Measure: 0.20000000000000004
************************ Método Avaliado: com.google.common.collect.PeekingIteratorTest$ThrowsAtEndIterator.next() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.PeekingIteratorTest.testCantRemoveAfterPeek() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
com.google.common.collect.PeekingIterator.next()
assertEquals
com.google.common.collect.PeekingIterator.peek()
assertEquals
com.google.common.collect.PeekingIterator.remove()
fail
com.google.common.collect.PeekingIterator.peek()
assertEquals
com.google.common.collect.PeekingIterator.next()
assertEquals
com.google.common.collect.PeekingIterator.remove()
java.util.List.size()
assertEquals
java.util.List.contains(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.remove()
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.remove()
Situação: Manual
Chamada: java.util.List.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.PeekingIteratorTest.testPeekDoesntChangeIteration() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
java.util.List.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
com.google.common.collect.PeekingIterator.peek()
assertEquals
com.google.common.collect.PeekingIterator.peek()
assertEquals
com.google.common.collect.PeekingIterator.next()
assertEquals
com.google.common.collect.PeekingIterator.peek()
assertEquals
com.google.common.collect.PeekingIterator.peek()
assertEquals
com.google.common.collect.PeekingIterator.next()
assertEquals
com.google.common.collect.PeekingIterator.peek()
assertEquals
com.google.common.collect.PeekingIterator.peek()
assertEquals
com.google.common.collect.PeekingIterator.next()
assertEquals
com.google.common.collect.PeekingIterator.peek()
fail
com.google.common.collect.PeekingIterator.peek()
fail
com.google.common.collect.PeekingIterator.next()
fail
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.next()
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.PeekingIteratorTest.testPeekingIteratorDoesntAdvancePrematurely() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.emptyList()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
com.google.common.collect.PeekingIteratorTest.assertNextThrows(java.util.Iterator)
com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
com.google.common.collect.PeekingIteratorTest.assertNextThrows(java.util.Iterator)
Chamada: java.util.Collections.emptyList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.PeekingIteratorTest.assertNextThrows(java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1830064428297795
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.collect.PeekingIteratorTest.assertNextThrows(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.2727272727272727
Corretude: 0.25
F-Measure: 0.2608695652173913
************************ Método Avaliado: com.google.common.collect.PeekingIteratorTest.testPeekOnEmptyList() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.emptyList()
java.util.List.iterator()
com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
com.google.common.collect.PeekingIterator.peek()
fail
Chamada: java.util.Collections.emptyList()
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.peekingIterator(java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.PeekingIterator.peek()
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.PeekingIteratorTest.assertNextThrows(java.util.Iterator) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.next()
fail
Chamada: java.util.Iterator.next()
Situação: Primeira Chamada
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.SetOperationsTest$MoreTests.testIntersection() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
com.google.common.collect.Sets.intersection(java.util.Set, java.util.Set)
java.util.Set.size()
assertEquals
com.google.common.collect.Sets.intersection(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.immutableCopy()
com.google.common.collect.Sets.intersection(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
java.util.Set.add(java.lang.String)
java.util.Set.size()
assertEquals
java.util.Set.size()
assertEquals
java.util.HashSet.size()
assertEquals
Chamada: com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Sets.intersection(java.util.Set, java.util.Set)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Sets.intersection(java.util.Set, java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.Sets$SetView.immutableCopy()
Situação: Manual
Chamada: com.google.common.collect.Sets.intersection(java.util.Set, java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
Situação: Manual
Chamada: java.util.Set.add(java.lang.String)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.11290297377801649
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.11290297377801649
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.HashSet.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Útil
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.13333333333333333
Corretude: 0.5
F-Measure: 0.2105263157894737
************************ Método Avaliado: com.google.common.collect.SetOperationsTest$MoreTests.testDifference() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
com.google.common.collect.Sets.difference(java.util.Set, java.util.Set)
java.util.Set.size()
assertEquals
com.google.common.collect.Sets.difference(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.immutableCopy()
com.google.common.collect.Sets.difference(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
java.util.Set.add(java.lang.String)
java.util.Set.size()
assertEquals
java.util.Set.size()
assertEquals
java.util.HashSet.size()
assertEquals
Chamada: com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Sets.difference(java.util.Set, java.util.Set)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Sets.difference(java.util.Set, java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.Sets$SetView.immutableCopy()
Situação: Manual
Chamada: com.google.common.collect.Sets.difference(java.util.Set, java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
Situação: Manual
Chamada: java.util.Set.add(java.lang.String)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.11290297377801649
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.11290297377801649
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.HashSet.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Útil
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.13333333333333333
Corretude: 0.5
F-Measure: 0.2105263157894737
************************ Método Avaliado: com.google.common.collect.SetOperationsTest$MoreTests.testUnion() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.union(java.util.Set, java.util.Set)
java.util.Set.size()
assertEquals
com.google.common.collect.Sets.union(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.immutableCopy()
com.google.common.collect.Sets.union(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
java.util.Set.add(java.lang.String)
java.util.Set.size()
assertEquals
java.util.Set.size()
assertEquals
java.util.HashSet.size()
assertEquals
Chamada: com.google.common.collect.Sets.union(java.util.Set, java.util.Set)
Situação: Primeira Chamada
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Sets.union(java.util.Set, java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.Sets$SetView.immutableCopy()
Situação: Manual
Chamada: com.google.common.collect.Sets.union(java.util.Set, java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
Situação: Manual
Chamada: java.util.Set.add(java.lang.String)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.11290297377801649
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.11290297377801649
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.HashSet.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Útil
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.15384615384615385
Corretude: 0.5
F-Measure: 0.23529411764705882
************************ Método Avaliado: com.google.common.collect.SetOperationsTest$MoreTests.testSymmetricDifference() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
java.util.Set.size()
assertEquals
com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
java.util.Set.size()
assertEquals
assertEquals
com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.immutableCopy()
com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
java.util.Set.add(java.lang.String)
java.util.Set.size()
assertEquals
java.util.Set.size()
assertEquals
java.util.HashSet.size()
assertEquals
com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.immutableCopy()
com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
java.util.Set.add(java.lang.String)
java.util.Set.size()
assertEquals
java.util.Set.size()
assertEquals
java.util.HashSet.size()
assertEquals
Chamada: com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.newHashSet([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.11290297377801649
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.Sets$SetView.immutableCopy()
Situação: Manual
Chamada: com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
Situação: Manual
Chamada: java.util.Set.add(java.lang.String)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.11290297377801649
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.11290297377801649
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.HashSet.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.Sets$SetView.immutableCopy()
Situação: Manual
Chamada: com.google.common.collect.Sets.symmetricDifference(java.util.Set, java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.Sets$SetView.copyInto(java.util.HashSet)
Situação: Manual
Chamada: java.util.Set.add(java.lang.String)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.11290297377801649
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Set.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.11290297377801649
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: java.util.HashSet.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Útil
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.5
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.SetsTest.testPowerSetEmpty() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.of()
com.google.common.collect.Sets.powerSet(java.util.Set)
java.util.Set.size()
assertEquals
com.google.common.collect.ImmutableSet.of()
com.google.common.collect.ImmutableSet.of(com.google.common.collect.ImmutableSet)
assertEquals
java.util.Set.hashCode()
assertEquals
Chamada: com.google.common.collect.ImmutableSet.of()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(com.google.common.collect.ImmutableSet)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Set.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.SetsTest.testNewHashSetFromIterator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.iterator()
com.google.common.collect.Sets.newHashSet(java.util.Iterator)
com.google.common.collect.SetsTest.verifySetContents(java.util.Set, java.lang.Iterable)
Chamada: java.util.Collection.iterator()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.newHashSet(java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.SetsTest.verifySetContents(java.util.Set, java.lang.Iterable)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.SetsTest.testPowerSetContents() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.Sets.powerSet(java.util.Set)
java.util.Set.size()
assertEquals
java.util.Set.hashCode()
assertEquals
com.google.common.collect.Sets.newHashSet()
com.google.common.collect.ImmutableSet.of()
java.util.Set.add(java.util.Set)
com.google.common.collect.ImmutableSet.of(java.lang.Integer)
java.util.Set.add(java.util.Set)
com.google.common.collect.ImmutableSet.of(java.lang.Integer)
java.util.Set.add(java.util.Set)
com.google.common.collect.ImmutableSet.of(java.lang.Integer)
java.util.Set.add(java.util.Set)
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
java.util.Set.add(java.util.Set)
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
java.util.Set.add(java.util.Set)
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
java.util.Set.add(java.util.Set)
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
java.util.Set.add(java.util.Set)
com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
java.util.Set.remove(java.lang.Object)
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
java.util.Set.add(java.util.Set)
addEqualityGroup
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
addEqualityGroup
addEqualityGroup
testEquals
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Collections.singleton(java.lang.Object)
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Set.contains(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Set.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Sets.newHashSet()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of()
Situação: Manual
Chamada: java.util.Set.add(java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.add(java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.add(java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.add(java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.add(java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.add(java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.add(java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.add(java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.add(java.util.Set)
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: testEquals
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collections.singleton(java.lang.Object)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Set.contains(java.lang.Object)
Útil
Percentual de Automatização: 0.09090909090909091
Corretude: 0.3333333333333333
F-Measure: 0.14285714285714288
************************ Método Avaliado: com.google.common.collect.SetsTest.testNewIdentityHashSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newIdentityHashSet()
java.util.Set.add(java.lang.Integer)
assertTrue
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.Set.contains(java.lang.Object)
assertTrue
java.util.Set.add(java.lang.Integer)
assertTrue
java.util.Set.size()
assertEquals
Chamada: com.google.common.collect.Sets.newIdentityHashSet()
Situação: Primeira Chamada
Chamada: java.util.Set.add(java.lang.Integer)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Set.add(java.lang.Integer)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Set.contains(java.lang.Object)
Útil
Percentual de Automatização: 0.1
Corretude: 0.3333333333333333
F-Measure: 0.15384615384615383
************************ Método Avaliado: com.google.common.collect.SetsTest.testNewLinkedHashSetFromIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
java.util.List.iterator()
com.google.common.collect.SetsTest.verifyLinkedHashSetContents(java.util.LinkedHashSet, java.util.Collection)
Chamada: com.google.common.collect.Sets.newLinkedHashSet(java.lang.Iterable)
Situação: Primeira Chamada
Chamada: java.util.List.iterator()
Situação: Manual
Chamada: com.google.common.collect.SetsTest.verifyLinkedHashSetContents(java.util.LinkedHashSet, java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.SetsTest.testPowerSetShowOff() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.of()
com.google.common.collect.Sets.powerSet(java.util.Set)
com.google.common.collect.Sets.powerSet(java.util.Set)
com.google.common.collect.Sets.powerSet(java.util.Set)
com.google.common.collect.Sets.powerSet(java.util.Set)
com.google.common.collect.Sets.powerSet(java.util.Set)
java.util.Set.size()
assertEquals
com.google.common.collect.SetsTest.makeSetOfZeroToTwentyNine()
com.google.common.collect.Sets.powerSet(java.util.Set)
com.google.common.collect.SetsTest.makeSetOfZeroToTwentyNine()
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.SetsTest.makeSetOfZeroToTwentyNine()
com.google.common.collect.Sets.powerSet(java.util.Set)
com.google.common.collect.ImmutableSet.of(java.lang.Integer)
java.util.Set.contains(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.ImmutableSet.of()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.SetsTest.makeSetOfZeroToTwentyNine()
Situação: Manual
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.SetsTest.makeSetOfZeroToTwentyNine()
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.SetsTest.makeSetOfZeroToTwentyNine()
Situação: Manual
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Set.contains(java.lang.Object)
Útil
Percentual de Automatização: 0.058823529411764705
Corretude: 0.3333333333333333
F-Measure: 0.1
************************ Método Avaliado: com.google.common.collect.SetsTest.testCartesianProduct_contains() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.SetsTest.set([Ljava.lang.Integer;)
com.google.common.collect.SetsTest.set([Ljava.lang.Integer;)
com.google.common.collect.Sets.cartesianProduct([Ljava.util.Set;)
com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
java.util.Set.contains(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.SetsTest.set([Ljava.lang.Integer;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.SetsTest.set([Ljava.lang.Integer;)
Situação: Manual
Chamada: com.google.common.collect.Sets.cartesianProduct([Ljava.util.Set;)
Situação: Manual
Chamada: com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.SetsTest.list([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.contains(java.lang.Object)
Útil
Percentual de Automatização: 0.23529411764705882
Corretude: 1.0
F-Measure: 0.38095238095238093
************************ Método Avaliado: com.google.common.collect.SetsTest.assertPowerSetSize(I, [Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Sets.newHashSet([Ljava.lang.Object;)
com.google.common.collect.Sets.powerSet(java.util.Set)
java.util.Set.size()
assertEquals
Chamada: com.google.common.collect.Sets.newHashSet([Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.SetsTest.testPowerSetEqualsAndHashCode_verifyAgainstHashSet() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
java.util.List.size()
com.google.common.collect.ImmutableList.subList(I, I)
com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
com.google.common.collect.Sets.powerSet(java.util.Set)
com.google.common.collect.Sets.powerSet(java.util.Set)
com.google.common.collect.SetsTest.toHashSets(java.util.Set)
addEqualityGroup
com.google.common.collect.ImmutableSet.of()
addEqualityGroup
com.google.common.collect.ImmutableSet.of(java.lang.Integer)
addEqualityGroup
addEqualityGroup
testEquals
com.google.common.collect.SetsTest.toHashSets(java.util.Set)
java.util.Set.hashCode()
java.util.Set.hashCode()
assertEquals
Chamada: com.google.common.collect.ImmutableList.of(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.subList(I, I)
Situação: Manual
Chamada: com.google.common.collect.Sets.newHashSet(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.SetsTest.toHashSets(java.util.Set)
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of()
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer)
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: addEqualityGroup
Situação: Manual
Chamada: testEquals
Situação: Manual
Chamada: com.google.common.collect.SetsTest.toHashSets(java.util.Set)
Situação: Manual
Chamada: java.util.Set.hashCode()
Situação: Manual
Chamada: java.util.Set.hashCode()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.SetsTest.ensureNotDirectlyModifiable(java.util.SortedSet) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.add(java.lang.Integer)
fail
java.util.Set.remove(java.lang.Object)
fail
java.util.Collections.singleton(java.lang.Integer)
java.util.Set.addAll(java.util.Collection)
fail
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Iterator.remove()
fail
Chamada: java.util.Set.add(java.lang.Integer)
Situação: Primeira Chamada
Chamada: fail
Situação: Manual
Chamada: java.util.Set.remove(java.lang.Object)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Collections.singleton(java.lang.Integer)
Situação: Manual
Chamada: java.util.Set.addAll(java.util.Collection)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.526882259492682
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.24731170894317414
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.2
Corretude: 0.4
F-Measure: 0.26666666666666666
************************ Método Avaliado: com.google.common.collect.SetsTest.testPowerSetIteration_manual() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.Sets.powerSet(java.util.Set)
java.util.Set.iterator()
com.google.common.collect.ImmutableSet.of()
java.util.Iterator.next()
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
java.util.Iterator.next()
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.powerSet(java.util.Set)
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.526882259492682
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.4516133652794417
Suporte: 0.00693642
F-Measure Suporte e Confiança: 0.014
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9285712226191608
Suporte: 0.00644096
F-Measure Suporte e Confiança: 0.013
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.1
Corretude: 0.4
F-Measure: 0.16000000000000003
************************ Método Avaliado: com.google.common.collect.SetsTest.assertEmpty(java.util.Set) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.isEmpty()
assertTrue
java.util.Set.size()
assertEquals
java.util.Set.iterator()
java.util.Iterator.hasNext()
assertFalse
Chamada: java.util.Set.isEmpty()
Situação: Primeira Chamada
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.09677396357244006
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.4516133652794417
Suporte: 0.00693642
F-Measure Suporte e Confiança: 0.014
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Set.size()
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.3333333333333333
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.SortedListsTest.assertModelAgrees(java.util.List, java.lang.Integer, I, com.google.common.collect.SortedLists$KeyPresentBehavior, com.google.common.collect.SortedLists$KeyAbsentBehavior) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.List.contains(java.lang.Object)
java.util.List.indexOf(java.lang.Object)
assertEquals
java.util.List.contains(java.lang.Object)
java.util.List.lastIndexOf(java.lang.Object)
assertEquals
java.util.List.contains(java.lang.Object)
java.util.List.get(I)
assertEquals
java.util.List.contains(java.lang.Object)
java.util.List.lastIndexOf(java.lang.Object)
assertEquals
java.util.List.contains(java.lang.Object)
java.util.List.indexOf(java.lang.Object)
assertEquals
java.util.List.size()
java.util.List.size()
java.util.List.get(I)
assertEquals
assertEquals
assertEquals
Chamada: java.util.List.contains(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.util.List.indexOf(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.contains(java.lang.Object)
Situação: Manual
Chamada: java.util.List.lastIndexOf(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.contains(java.lang.Object)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.contains(java.lang.Object)
Situação: Manual
Chamada: java.util.List.lastIndexOf(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.contains(java.lang.Object)
Situação: Manual
Chamada: java.util.List.indexOf(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09589008145186709
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.19178016290373417
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: assertEquals
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Útil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Útil
Percentual de Automatização: 0.15
Corretude: 0.5
F-Measure: 0.23076923076923075
************************ Método Avaliado: com.google.common.collect.TableCollectionTest$TestCellSetGenerator.create([Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TableCollectionTest$TestCellSetGenerator.createTable()
com.google.common.collect.Table$Cell.getRowKey()
com.google.common.collect.Table$Cell.getColumnKey()
com.google.common.collect.Table$Cell.getValue()
com.google.common.collect.Table.put(java.lang.String, java.lang.Integer, java.lang.Character)
com.google.common.collect.Table.cellSet()
Chamada: com.google.common.collect.TableCollectionTest$TestCellSetGenerator.createTable()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Table$Cell.getRowKey()
Situação: Manual
Chamada: com.google.common.collect.Table$Cell.getColumnKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8749996846357039
Suporte: 0.00346821
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.Table$Cell.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.8333337538190616
Suporte: 0.00330306
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.collect.Table.put(java.lang.String, java.lang.Integer, java.lang.Character)
Situação: Manual
Chamada: com.google.common.collect.Table.cellSet()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Table$Cell.getColumnKey()
Útil
Método: com.google.common.collect.Table$Cell.getRowKey()
Inútil
Método: com.google.common.collect.Table$Cell.getValue()
Útil
Percentual de Automatização: 0.4
Corretude: 0.6666666666666666
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.TableCollectionTest$MapMapTests.testRemove() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
makePopulatedMap
java.util.Map.keySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map.size()
java.util.Map.get(java.lang.Object)
java.util.Map.remove(java.lang.Object)
java.util.Map.containsKey(java.lang.Object)
assertFalse
java.util.Map.size()
assertEquals
java.util.Map.remove(java.lang.Object)
fail
assertInvariants
Chamada: makePopulatedMap
Situação: Primeira Chamada
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.18750002365233712
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.526882259492682
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.16666666666666666
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: fail
Situação: Manual
Chamada: assertInvariants
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map.get(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3076923076923077
Corretude: 0.3
F-Measure: 0.3037974683544304
************************ Método Avaliado: com.google.common.collect.TablesTransformValuesTest.create([Ljava.lang.Object;) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashBasedTable.create()
com.google.common.base.Preconditions.checkArgument(Z)
java.lang.Object.toString()
com.google.common.collect.Table.put(java.lang.String, java.lang.Integer, java.lang.String)
com.google.common.collect.Tables.transformValues(com.google.common.collect.Table, com.google.common.base.Function)
Chamada: com.google.common.collect.HashBasedTable.create()
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Manual
Chamada: java.lang.Object.toString()
Situação: Manual
Chamada: com.google.common.collect.Table.put(java.lang.String, java.lang.Integer, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.Tables.transformValues(com.google.common.collect.Table, com.google.common.base.Function)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testRowKeySetComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTable.create()
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeBasedTable.rowKeySet()
java.util.SortedSet.comparator()
assertSame
java.util.Collections.reverseOrder()
com.google.common.collect.Ordering.usingToString()
com.google.common.collect.TreeBasedTable.create(java.util.Comparator, java.util.Comparator)
java.util.Collections.reverseOrder()
com.google.common.collect.TreeBasedTable.rowKeySet()
java.util.SortedSet.comparator()
assertSame
Chamada: com.google.common.collect.TreeBasedTable.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.TreeBasedTable.rowKeySet()
Situação: Manual
Chamada: java.util.SortedSet.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.Ordering.usingToString()
Situação: Manual
Chamada: com.google.common.collect.TreeBasedTable.create(java.util.Comparator, java.util.Comparator)
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.TreeBasedTable.rowKeySet()
Situação: Manual
Chamada: java.util.SortedSet.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testRowSize() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTableTest.create([Ljava.lang.Object;)
com.google.common.collect.TreeBasedTable.row(java.lang.String)
java.util.Map.size()
assertEquals
java.util.SortedMap.tailMap(java.lang.Integer)
java.util.Map.size()
assertEquals
Chamada: com.google.common.collect.TreeBasedTableTest.create([Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeBasedTable.row(java.lang.String)
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.SortedMap.tailMap(java.lang.Integer)
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest$TreeRowTest.testClearSubMapOfRowMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTable.create()
com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.TreeBasedTable.row(java.lang.String)
java.util.SortedMap.subMap(java.lang.String, java.lang.String)
java.util.Map.clear()
com.google.common.collect.TreeBasedTable.row(java.lang.String)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
assertEquals
com.google.common.collect.TreeBasedTable.row(java.lang.String)
java.util.SortedMap.subMap(java.lang.String, java.lang.String)
java.util.Map.clear()
com.google.common.collect.TreeBasedTable.row(java.lang.String)
com.google.common.collect.ImmutableMap.of()
assertEquals
java.util.Map.containsKey(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.TreeBasedTable.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.StandardTable.put(java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.TreeBasedTable.row(java.lang.String)
Situação: Manual
Chamada: java.util.SortedMap.subMap(java.lang.String, java.lang.String)
Situação: Manual
Chamada: java.util.Map.clear()
Situação: Manual
Chamada: com.google.common.collect.TreeBasedTable.row(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.TreeBasedTable.row(java.lang.String)
Situação: Manual
Chamada: java.util.SortedMap.subMap(java.lang.String, java.lang.String)
Situação: Manual
Chamada: java.util.Map.clear()
Situação: Manual
Chamada: com.google.common.collect.TreeBasedTable.row(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Map.get(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testRowMapComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTable.create()
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeBasedTable.rowMap()
java.util.SortedMap.comparator()
assertSame
java.util.Collections.reverseOrder()
com.google.common.collect.Ordering.usingToString()
com.google.common.collect.TreeBasedTable.create(java.util.Comparator, java.util.Comparator)
java.util.Collections.reverseOrder()
com.google.common.collect.TreeBasedTable.rowMap()
java.util.SortedMap.comparator()
assertSame
Chamada: com.google.common.collect.TreeBasedTable.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.TreeBasedTable.rowMap()
Situação: Manual
Chamada: java.util.SortedMap.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.Ordering.usingToString()
Situação: Manual
Chamada: com.google.common.collect.TreeBasedTable.create(java.util.Comparator, java.util.Comparator)
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.TreeBasedTable.rowMap()
Situação: Manual
Chamada: java.util.SortedMap.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testRowEntrySetContains() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTableTest.create([Ljava.lang.Object;)
com.google.common.collect.TreeBasedTable.row(java.lang.String)
java.util.SortedMap.entrySet()
com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
java.util.Set.contains(java.lang.Object)
assertFalse
java.util.SortedMap.tailMap(java.lang.Integer)
java.util.SortedMap.entrySet()
com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
java.util.Set.contains(java.lang.Object)
assertFalse
com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
java.util.Set.contains(java.lang.Object)
assertTrue
com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
java.util.Set.contains(java.lang.Object)
assertFalse
Chamada: com.google.common.collect.TreeBasedTableTest.create([Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeBasedTable.row(java.lang.String)
Situação: Manual
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: java.util.SortedMap.tailMap(java.lang.Integer)
Situação: Manual
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(java.lang.Integer, java.lang.Character)
Situação: Manual
Chamada: java.util.Set.contains(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.contains(java.lang.Object)
Útil
Percentual de Automatização: 0.22727272727272727
Corretude: 1.0
F-Measure: 0.37037037037037035
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testRowComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTable.create()
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeBasedTable.rowComparator()
assertSame
java.util.Collections.reverseOrder()
com.google.common.collect.Ordering.usingToString()
com.google.common.collect.TreeBasedTable.create(java.util.Comparator, java.util.Comparator)
java.util.Collections.reverseOrder()
com.google.common.collect.TreeBasedTable.rowComparator()
assertSame
Chamada: com.google.common.collect.TreeBasedTable.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.TreeBasedTable.rowComparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.Ordering.usingToString()
Situação: Manual
Chamada: com.google.common.collect.TreeBasedTable.create(java.util.Comparator, java.util.Comparator)
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.TreeBasedTable.rowComparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testColumnComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTable.create()
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeBasedTable.columnComparator()
assertSame
java.util.Collections.reverseOrder()
com.google.common.collect.Ordering.usingToString()
com.google.common.collect.TreeBasedTable.create(java.util.Comparator, java.util.Comparator)
com.google.common.collect.Ordering.usingToString()
com.google.common.collect.TreeBasedTable.columnComparator()
assertSame
Chamada: com.google.common.collect.TreeBasedTable.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.TreeBasedTable.columnComparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: java.util.Collections.reverseOrder()
Situação: Manual
Chamada: com.google.common.collect.Ordering.usingToString()
Situação: Manual
Chamada: com.google.common.collect.TreeBasedTable.create(java.util.Comparator, java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.Ordering.usingToString()
Situação: Manual
Chamada: com.google.common.collect.TreeBasedTable.columnComparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testRowKeyMapHeadMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTableTest.create([Ljava.lang.Object;)
com.google.common.collect.TreeBasedTable.rowMap()
java.util.SortedMap.headMap(java.lang.String)
java.util.Map.size()
assertEquals
com.google.common.collect.ImmutableMap.of(java.lang.Integer, java.lang.Character)
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.clear()
java.util.Map.isEmpty()
assertTrue
java.util.Collections.singleton(java.lang.String)
com.google.common.collect.TreeBasedTable.rowKeySet()
assertEquals
Chamada: com.google.common.collect.TreeBasedTableTest.create([Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeBasedTable.rowMap()
Situação: Manual
Chamada: java.util.SortedMap.headMap(java.lang.String)
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.Integer, java.lang.Character)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.clear()
Situação: Manual
Chamada: java.util.Map.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collections.singleton(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.TreeBasedTable.rowKeySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testRowMapValuesAreSorted() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTableTest.create([Ljava.lang.Object;)
com.google.common.collect.TreeBasedTable.rowMap()
java.util.Map.get(java.lang.Object)
assertTrue
Chamada: com.google.common.collect.TreeBasedTableTest.create([Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeBasedTable.rowMap()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testRowKeyMapSubMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTableTest.create([Ljava.lang.Object;)
com.google.common.collect.TreeBasedTable.rowMap()
java.util.SortedMap.subMap(java.lang.String, java.lang.String)
com.google.common.collect.ImmutableMap.of(java.lang.Integer, java.lang.Character)
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.clear()
java.util.Map.isEmpty()
assertTrue
com.google.common.collect.ImmutableSet.of(java.lang.String, java.lang.String)
com.google.common.collect.TreeBasedTable.rowKeySet()
assertEquals
Chamada: com.google.common.collect.TreeBasedTableTest.create([Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeBasedTable.rowMap()
Situação: Manual
Chamada: java.util.SortedMap.subMap(java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.Integer, java.lang.Character)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.clear()
Situação: Manual
Chamada: java.util.Map.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.TreeBasedTable.rowKeySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testRowKeyMapTailMap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeBasedTableTest.create([Ljava.lang.Object;)
com.google.common.collect.TreeBasedTable.rowMap()
java.util.SortedMap.tailMap(java.lang.String)
java.util.Map.size()
assertEquals
com.google.common.collect.ImmutableMap.of(java.lang.Integer, java.lang.Character, java.lang.Integer, java.lang.Character)
java.util.Map.get(java.lang.Object)
assertEquals
java.util.Map.clear()
java.util.Map.isEmpty()
assertTrue
java.util.Collections.singleton(java.lang.String)
com.google.common.collect.TreeBasedTable.rowKeySet()
assertEquals
Chamada: com.google.common.collect.TreeBasedTableTest.create([Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeBasedTable.rowMap()
Situação: Manual
Chamada: java.util.SortedMap.tailMap(java.lang.String)
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.Integer, java.lang.Character, java.lang.Integer, java.lang.Character)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map.clear()
Situação: Manual
Chamada: java.util.Map.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Collections.singleton(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.TreeBasedTable.rowKeySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeBasedTableTest.testColumnKeySet_isSortedWithRealComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.reverse()
com.google.common.collect.TreeBasedTableTest.create(java.util.Comparator, java.util.Comparator, [Ljava.lang.Object;)
columnKeySet
toString
assertEquals
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.reverse()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.10169499005029756
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: com.google.common.collect.TreeBasedTableTest.create(java.util.Comparator, java.util.Comparator, [Ljava.lang.Object;)
Situação: Manual
Chamada: columnKeySet
Situação: Manual
Chamada: toString
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Útil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.2
Corretude: 0.2
F-Measure: 0.20000000000000004
************************ Método Avaliado: com.google.common.collect.TreeMultimapExplicitTest.testMultimapCreateFromTreeMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultimap.create(java.util.Comparator, java.util.Comparator)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.TreeMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.TreeMultimap.create(com.google.common.collect.Multimap)
assertEquals
com.google.common.collect.TreeMultimap.keySet()
that
has
allOf
inOrder
com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.String)
that
has
allOf
inOrder
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.keyComparator()
assertEquals
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.valueComparator()
assertEquals
com.google.common.collect.Ordering.natural()
com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.String)
java.util.SortedSet.comparator()
assertEquals
Chamada: com.google.common.collect.TreeMultimap.create(java.util.Comparator, java.util.Comparator)
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.TreeMultimap.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.TreeMultimap.create(com.google.common.collect.Multimap)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.TreeMultimap.keySet()
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.TreeMultimap.keyComparator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.TreeMultimap.valueComparator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.String)
Situação: Manual
Chamada: java.util.SortedSet.comparator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Útil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.05555555555555555
Corretude: 0.2
F-Measure: 0.08695652173913045
************************ Método Avaliado: com.google.common.collect.TreeMultimapExplicitTest.testOrderedAsMapEntries() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultimapExplicitTest.createPopulate()
com.google.common.collect.TreeMultimap.asMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
allOf
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
allOf
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
allOf
Chamada: com.google.common.collect.TreeMultimapExplicitTest.createPopulate()
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeMultimap.asMap()
Situação: Manual
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.526882259492682
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3061220959185615
Suporte: 0.00247729
F-Measure Suporte e Confiança: 0.005
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.367346762244995
Suporte: 0.00297275
F-Measure Suporte e Confiança: 0.006
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3061220959185615
Suporte: 0.00247729
F-Measure Suporte e Confiança: 0.005
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.367346762244995
Suporte: 0.00297275
F-Measure Suporte e Confiança: 0.006
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3061220959185615
Suporte: 0.00247729
F-Measure Suporte e Confiança: 0.005
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.367346762244995
Suporte: 0.00297275
F-Measure Suporte e Confiança: 0.006
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2916666666666667
Corretude: 0.6
F-Measure: 0.39252336448598135
************************ Método Avaliado: com.google.common.collect.TreeMultimapExplicitTest$StringLength.compare(java.lang.String, java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.length()
java.lang.String.length()
java.lang.String.length()
java.lang.String.compareTo(java.lang.String)
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.compareTo(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.75
Corretude: 0.25
F-Measure: 0.375
************************ Método Avaliado: com.google.common.collect.TreeMultimapNaturalTest.testCreateFromTreeMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultimap.create(java.util.Comparator, java.util.Comparator)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.TreeMultimap.create(com.google.common.collect.Multimap)
assertEquals
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.keyComparator()
assertSame
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.valueComparator()
assertSame
com.google.common.collect.Ordering.natural()
com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.Double)
java.util.SortedSet.comparator()
assertSame
Chamada: com.google.common.collect.TreeMultimap.create(java.util.Comparator, java.util.Comparator)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Situação: Manual
Chamada: com.google.common.collect.TreeMultimap.create(com.google.common.collect.Multimap)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.TreeMultimap.keyComparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.TreeMultimap.valueComparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.Double)
Situação: Manual
Chamada: java.util.SortedSet.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Útil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.125
Corretude: 0.2
F-Measure: 0.15384615384615385
************************ Método Avaliado: com.google.common.collect.TreeMultimapNaturalTest.testTreeMultimapAsMapSorted() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultimapNaturalTest.createPopulate()
com.google.common.collect.TreeMultimap.asMap()
com.google.common.collect.Ordering.natural()
java.util.SortedMap.comparator()
assertEquals
java.util.SortedMap.firstKey()
assertEquals
java.util.SortedMap.lastKey()
assertEquals
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
com.google.common.collect.ImmutableMap.of(java.lang.String, java.util.Set, java.lang.String, java.util.Set)
java.util.SortedMap.tailMap(java.lang.String)
assertEquals
com.google.common.collect.ImmutableMap.of(java.lang.String, java.util.Set, java.lang.String, java.util.Set)
java.util.SortedMap.headMap(java.lang.String)
assertEquals
com.google.common.collect.ImmutableMap.of(java.lang.String, java.util.Set)
java.util.SortedMap.subMap(java.lang.String, java.lang.String)
assertEquals
Chamada: com.google.common.collect.TreeMultimapNaturalTest.createPopulate()
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeMultimap.asMap()
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: java.util.SortedMap.comparator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.SortedMap.firstKey()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.SortedMap.lastKey()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.util.Set, java.lang.String, java.util.Set)
Situação: Manual
Chamada: java.util.SortedMap.tailMap(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.util.Set, java.lang.String, java.util.Set)
Situação: Manual
Chamada: java.util.SortedMap.headMap(java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.of(java.lang.String, java.util.Set)
Situação: Manual
Chamada: java.util.SortedMap.subMap(java.lang.String, java.lang.String)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeMultimapNaturalTest.testOrderedAsMapEntries() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultimapNaturalTest.createPopulate()
com.google.common.collect.TreeMultimap.asMap()
java.util.SortedMap.entrySet()
java.util.Set.iterator()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
allOf
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
allOf
java.util.Iterator.next()
java.util.Map$Entry.getKey()
assertEquals
java.util.Map$Entry.getValue()
that
has
allOf
Chamada: com.google.common.collect.TreeMultimapNaturalTest.createPopulate()
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeMultimap.asMap()
Situação: Manual
Chamada: java.util.SortedMap.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.526882259492682
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3061220959185615
Suporte: 0.00247729
F-Measure Suporte e Confiança: 0.005
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.367346762244995
Suporte: 0.00297275
F-Measure Suporte e Confiança: 0.006
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3061220959185615
Suporte: 0.00247729
F-Measure Suporte e Confiança: 0.005
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.367346762244995
Suporte: 0.00297275
F-Measure Suporte e Confiança: 0.006
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3061220959185615
Suporte: 0.00247729
F-Measure Suporte e Confiança: 0.005
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.367346762244995
Suporte: 0.00297275
F-Measure Suporte e Confiança: 0.006
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2916666666666667
Corretude: 0.6
F-Measure: 0.39252336448598135
************************ Método Avaliado: com.google.common.collect.TreeMultimapNaturalTest.testTailSetClear() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultimap.create()
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
com.google.common.collect.TreeMultimap.keySet()
java.util.SortedSet.tailSet(java.lang.String)
java.util.Set.clear()
com.google.common.collect.ImmutableSet.of(java.lang.String, java.lang.String, java.lang.String)
com.google.common.collect.TreeMultimap.keySet()
assertEquals
com.google.common.collect.AbstractMultimap.size()
assertEquals
com.google.common.collect.AbstractSortedSetMultimap.values()
java.util.Collection.size()
assertEquals
com.google.common.collect.AbstractMultimap.keys()
java.util.Collection.size()
assertEquals
Chamada: com.google.common.collect.TreeMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.AbstractSetMultimap.put(java.lang.String, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.TreeMultimap.keySet()
Situação: Manual
Chamada: java.util.SortedSet.tailSet(java.lang.String)
Situação: Manual
Chamada: java.util.Set.clear()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.of(java.lang.String, java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.TreeMultimap.keySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractSortedSetMultimap.values()
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultimap.keys()
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Útil
Percentual de Automatização: 0.047619047619047616
Corretude: 0.25
F-Measure: 0.08
************************ Método Avaliado: com.google.common.collect.TreeMultimapNaturalTest.testCreateFromSortedSetMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultimap.create(java.util.Comparator, java.util.Comparator)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimaps.unmodifiableSortedSetMultimap(com.google.common.collect.SortedSetMultimap)
com.google.common.collect.TreeMultimap.create(com.google.common.collect.Multimap)
assertEquals
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.keyComparator()
assertSame
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.valueComparator()
assertSame
com.google.common.collect.Ordering.natural()
com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.Double)
java.util.SortedSet.comparator()
assertSame
Chamada: com.google.common.collect.TreeMultimap.create(java.util.Comparator, java.util.Comparator)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Situação: Manual
Chamada: com.google.common.collect.Multimaps.unmodifiableSortedSetMultimap(com.google.common.collect.SortedSetMultimap)
Situação: Manual
Chamada: com.google.common.collect.TreeMultimap.create(com.google.common.collect.Multimap)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.TreeMultimap.keyComparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.TreeMultimap.valueComparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.AbstractSortedSetMultimap.get(java.lang.Double)
Situação: Manual
Chamada: java.util.SortedSet.comparator()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Útil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.11764705882352941
Corretude: 0.2
F-Measure: 0.14814814814814817
************************ Método Avaliado: com.google.common.collect.TreeMultimapNaturalTest.testComparators() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultimap.create()
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.keyComparator()
assertEquals
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.valueComparator()
assertEquals
Chamada: com.google.common.collect.TreeMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.TreeMultimap.keyComparator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.TreeMultimap.valueComparator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Útil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.2
F-Measure: 0.1818181818181818
************************ Método Avaliado: com.google.common.collect.TreeMultimapNaturalTest.testCreateFromHashMultimap() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashMultimap.create()
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
com.google.common.collect.TreeMultimap.create(com.google.common.collect.Multimap)
assertEquals
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.keyComparator()
assertEquals
com.google.common.collect.Ordering.natural()
com.google.common.collect.TreeMultimap.valueComparator()
assertEquals
Chamada: com.google.common.collect.HashMultimap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(java.lang.Double, java.lang.Double)
Situação: Manual
Chamada: com.google.common.collect.TreeMultimap.create(com.google.common.collect.Multimap)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.TreeMultimap.keyComparator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.11864417216320589
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.TreeMultimap.valueComparator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Útil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.08333333333333333
Corretude: 0.2
F-Measure: 0.11764705882352941
************************ Método Avaliado: null.compare(java.lang.String, java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.length()
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.25
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.TreeMultisetTest.testElementSetSortedSetMethods() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultiset.create()
com.google.common.collect.TreeMultiset.add(java.lang.String, I)
com.google.common.collect.TreeMultiset.add(java.lang.String, I)
com.google.common.collect.TreeMultiset.add(java.lang.String, I)
com.google.common.collect.AbstractSortedMultiset.elementSet()
java.util.SortedSet.first()
assertEquals
java.util.SortedSet.last()
assertEquals
com.google.common.collect.Ordering.natural()
java.util.SortedSet.comparator()
assertEquals
java.util.SortedSet.headSet(java.lang.String)
that
has
allOf
inOrder
java.util.SortedSet.tailSet(java.lang.String)
that
has
allOf
inOrder
java.util.SortedSet.subSet(java.lang.String, java.lang.String)
that
has
allOf
inOrder
Chamada: com.google.common.collect.TreeMultiset.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeMultiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.TreeMultiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.TreeMultiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.AbstractSortedMultiset.elementSet()
Situação: Manual
Chamada: java.util.SortedSet.first()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.SortedSet.last()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: java.util.SortedSet.comparator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.SortedSet.headSet(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: java.util.SortedSet.tailSet(java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: java.util.SortedSet.subSet(java.lang.String, java.lang.String)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeMultisetTest.testNullAcceptingComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsFirst()
com.google.common.collect.TreeMultiset.create(java.util.Comparator)
com.google.common.collect.AbstractMultiset.add(java.lang.String)
com.google.common.collect.AbstractMultiset.add(java.lang.String)
com.google.common.collect.AbstractMultiset.add(java.lang.String)
com.google.common.collect.AbstractMultiset.add(java.lang.String)
com.google.common.collect.TreeMultiset.add(java.lang.String, I)
that
has
allOf
inOrder
com.google.common.collect.TreeMultiset.count(java.lang.Object)
assertEquals
com.google.common.collect.AbstractSortedMultiset.elementSet()
java.util.SortedSet.first()
assertEquals
java.util.SortedSet.last()
assertEquals
java.util.SortedSet.comparator()
assertEquals
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.nullsFirst()
Situação: Manual
Chamada: com.google.common.collect.TreeMultiset.create(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultiset.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultiset.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultiset.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultiset.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.TreeMultiset.add(java.lang.String, I)
Situação: Manual
Chamada: that
Situação: Manual
Chamada: has
Situação: Manual
Chamada: allOf
Situação: Manual
Chamada: inOrder
Situação: Manual
Chamada: com.google.common.collect.TreeMultiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractSortedMultiset.elementSet()
Situação: Manual
Chamada: java.util.SortedSet.first()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.SortedSet.last()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.SortedSet.comparator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeMultisetTest.testToStringNull() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.nullsFirst()
com.google.common.collect.TreeMultiset.create(java.util.Comparator)
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Ordering.nullsFirst()
Situação: Manual
Chamada: com.google.common.collect.TreeMultiset.create(java.util.Comparator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeMultisetTest.testCreateWithComparator() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collections.reverseOrder()
com.google.common.collect.TreeMultiset.create(java.util.Comparator)
com.google.common.collect.Multiset.add(java.lang.String, I)
com.google.common.collect.Multiset.add(java.lang.String)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.toString()
assertEquals
Chamada: java.util.Collections.reverseOrder()
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeMultiset.create(java.util.Comparator)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeMultisetTest.testCreateFromIterable() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.TreeMultiset.create(java.lang.Iterable)
java.util.Collection.size()
assertEquals
com.google.common.collect.Multiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Multiset.toString()
assertEquals
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeMultiset.create(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Multiset.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeMultisetTest.testSubMultisetSize() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultiset.create()
com.google.common.collect.TreeMultiset.add(java.lang.String, I)
com.google.common.collect.TreeMultiset.add(java.lang.String, I)
com.google.common.collect.TreeMultiset.add(java.lang.String, I)
com.google.common.collect.TreeMultiset.count(java.lang.Object)
assertEquals
com.google.common.collect.TreeMultiset.count(java.lang.Object)
assertEquals
com.google.common.collect.TreeMultiset.count(java.lang.Object)
assertEquals
com.google.common.collect.TreeMultiset.headMultiset(java.lang.String, com.google.common.collect.BoundType)
java.util.Collection.size()
assertEquals
com.google.common.collect.TreeMultiset.headMultiset(java.lang.String, com.google.common.collect.BoundType)
java.util.Collection.size()
assertEquals
com.google.common.collect.TreeMultiset.headMultiset(java.lang.String, com.google.common.collect.BoundType)
java.util.Collection.size()
assertEquals
com.google.common.collect.TreeMultiset.tailMultiset(java.lang.String, com.google.common.collect.BoundType)
java.util.Collection.size()
assertEquals
com.google.common.collect.TreeMultiset.tailMultiset(java.lang.String, com.google.common.collect.BoundType)
java.util.Collection.size()
assertEquals
com.google.common.collect.TreeMultiset.tailMultiset(java.lang.String, com.google.common.collect.BoundType)
java.util.Collection.size()
assertEquals
Chamada: com.google.common.collect.TreeMultiset.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeMultiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.TreeMultiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.TreeMultiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.TreeMultiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.TreeMultiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.TreeMultiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.TreeMultiset.headMultiset(java.lang.String, com.google.common.collect.BoundType)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.TreeMultiset.headMultiset(java.lang.String, com.google.common.collect.BoundType)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.TreeMultiset.headMultiset(java.lang.String, com.google.common.collect.BoundType)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.TreeMultiset.tailMultiset(java.lang.String, com.google.common.collect.BoundType)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.TreeMultiset.tailMultiset(java.lang.String, com.google.common.collect.BoundType)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.TreeMultiset.tailMultiset(java.lang.String, com.google.common.collect.BoundType)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Útil
Percentual de Automatização: 0.18518518518518517
Corretude: 0.25
F-Measure: 0.2127659574468085
************************ Método Avaliado: com.google.common.collect.TreeMultisetTest.testCreate() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.TreeMultiset.create()
com.google.common.collect.TreeMultiset.add(java.lang.String, I)
com.google.common.collect.AbstractMultiset.add(java.lang.String)
com.google.common.collect.TreeMultiset.size()
assertEquals
com.google.common.collect.TreeMultiset.count(java.lang.Object)
assertEquals
com.google.common.collect.Ordering.natural()
com.google.common.collect.AbstractSortedMultiset.comparator()
assertEquals
com.google.common.collect.AbstractMultiset.toString()
assertEquals
Chamada: com.google.common.collect.TreeMultiset.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeMultiset.add(java.lang.String, I)
Situação: Manual
Chamada: com.google.common.collect.AbstractMultiset.add(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.TreeMultiset.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.TreeMultiset.count(java.lang.Object)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.AbstractSortedMultiset.comparator()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.collect.AbstractMultiset.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.TreeTraverserTest.binaryIterationOrder(java.lang.Iterable) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.StringBuilder.append(C)
Situação: Primeira Chamada
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 1.0
Corretude: 0.3333333333333333
F-Measure: 0.5
************************ Método Avaliado: com.google.common.collect.TreeTraverserTest.iterationOrder(java.lang.Iterable) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.StringBuilder.append(C)
Situação: Primeira Chamada
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8367338112249753
Suporte: 0.00677126
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 1.0
Corretude: 0.3333333333333333
F-Measure: 0.5
************************ Método Avaliado: com.google.common.primitives.BooleansTest.testAsListSize() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.primitives.Booleans.asList([Z)
java.util.List.size()
assertEquals
com.google.common.primitives.Booleans.asList([Z)
java.util.List.size()
assertEquals
com.google.common.primitives.Booleans.asList([Z)
java.util.List.size()
assertEquals
Chamada: com.google.common.primitives.Booleans.asList([Z)
Situação: Primeira Chamada
Chamada: java.util.List.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.primitives.Booleans.asList([Z)
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.primitives.Booleans.asList([Z)
Situação: Manual
Chamada: java.util.List.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3098603080386839
Suporte: 0.00363336
F-Measure Suporte e Confiança: 0.008
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Útil
Método: java.util.List.iterator()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: com.google.common.primitives.BytesTest.testAsList_toArray_roundTrip() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.primitives.Bytes.asList([B)
com.google.common.primitives.Bytes.toArray(java.util.Collection)
java.util.List.set(I, java.lang.Byte)
java.util.Arrays.equals([B, [B)
assertTrue
java.util.List.get(I)
assertEquals
Chamada: com.google.common.primitives.Bytes.asList([B)
Situação: Primeira Chamada
Chamada: com.google.common.primitives.Bytes.toArray(java.util.Collection)
Situação: Manual
Chamada: java.util.List.set(I, java.lang.Byte)
Situação: Manual
Chamada: java.util.Arrays.equals([B, [B)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.primitives.CharsTest.testAsList_toArray_roundTrip() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.primitives.Chars.asList([C)
com.google.common.primitives.Chars.toArray(java.util.Collection)
java.util.List.set(I, java.lang.Character)
java.util.Arrays.equals([C, [C)
assertTrue
java.util.List.get(I)
assertEquals
Chamada: com.google.common.primitives.Chars.asList([C)
Situação: Primeira Chamada
Chamada: com.google.common.primitives.Chars.toArray(java.util.Collection)
Situação: Manual
Chamada: java.util.List.set(I, java.lang.Character)
Situação: Manual
Chamada: java.util.Arrays.equals([C, [C)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.primitives.DoublesTest.testAsList_toArray_roundTrip() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.primitives.Doubles.asList([D)
com.google.common.primitives.Doubles.toArray(java.util.Collection)
java.util.List.set(I, java.lang.Double)
java.util.Arrays.equals([D, [D)
assertTrue
java.util.List.get(I)
assertEquals
Chamada: com.google.common.primitives.Doubles.asList([D)
Situação: Primeira Chamada
Chamada: com.google.common.primitives.Doubles.toArray(java.util.Collection)
Situação: Manual
Chamada: java.util.List.set(I, java.lang.Double)
Situação: Manual
Chamada: java.util.Arrays.equals([D, [D)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.primitives.DoublesTest.referenceTryParse(java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.trim()
java.lang.String.length()
java.lang.String.length()
java.lang.Double.valueOf(java.lang.String)
Chamada: java.lang.String.trim()
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Double.valueOf(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.primitives.FloatsTest.testAsList_toArray_roundTrip() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.primitives.Floats.asList([F)
com.google.common.primitives.Floats.toArray(java.util.Collection)
java.util.List.set(I, java.lang.Float)
java.util.Arrays.equals([F, [F)
assertTrue
java.util.List.get(I)
assertEquals
Chamada: com.google.common.primitives.Floats.asList([F)
Situação: Primeira Chamada
Chamada: com.google.common.primitives.Floats.toArray(java.util.Collection)
Situação: Manual
Chamada: java.util.List.set(I, java.lang.Float)
Situação: Manual
Chamada: java.util.Arrays.equals([F, [F)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.primitives.FloatsTest.referenceTryParse(java.lang.String) ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.trim()
java.lang.String.length()
java.lang.String.length()
java.lang.Float.valueOf(java.lang.String)
Chamada: java.lang.String.trim()
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Float.valueOf(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.primitives.IntsTest.testAsList_toArray_roundTrip() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.primitives.Ints.asList([I)
com.google.common.primitives.Ints.toArray(java.util.Collection)
java.util.List.set(I, java.lang.Integer)
java.util.Arrays.equals([I, [I)
assertTrue
java.util.List.get(I)
assertEquals
Chamada: com.google.common.primitives.Ints.asList([I)
Situação: Primeira Chamada
Chamada: com.google.common.primitives.Ints.toArray(java.util.Collection)
Situação: Manual
Chamada: java.util.List.set(I, java.lang.Integer)
Situação: Manual
Chamada: java.util.Arrays.equals([I, [I)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.primitives.LongsTest.testAsList_toArray_roundTrip() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.primitives.Longs.asList([J)
com.google.common.primitives.Longs.toArray(java.util.Collection)
java.util.List.set(I, java.lang.Long)
java.util.Arrays.equals([J, [J)
assertTrue
java.util.List.get(I)
assertEquals
Chamada: com.google.common.primitives.Longs.asList([J)
Situação: Primeira Chamada
Chamada: com.google.common.primitives.Longs.toArray(java.util.Collection)
Situação: Manual
Chamada: java.util.List.set(I, java.lang.Long)
Situação: Manual
Chamada: java.util.Arrays.equals([J, [J)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.primitives.ShortsTest.testAsList_toArray_roundTrip() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.primitives.Shorts.asList([S)
com.google.common.primitives.Shorts.toArray(java.util.Collection)
java.util.List.set(I, java.lang.Short)
java.util.Arrays.equals([S, [S)
assertTrue
java.util.List.get(I)
assertEquals
Chamada: com.google.common.primitives.Shorts.asList([S)
Situação: Primeira Chamada
Chamada: com.google.common.primitives.Shorts.toArray(java.util.Collection)
Situação: Manual
Chamada: java.util.List.set(I, java.lang.Short)
Situação: Manual
Chamada: java.util.Arrays.equals([S, [S)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.List.size()
Inútil
Método: java.util.Comparator.compare(null, null)
Inútil
Método: java.util.List.get(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.util.concurrent.AtomicLongMapTest.testRemoveZeros() ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.util.concurrent.AtomicLongMap.create()
com.google.common.collect.Sets.newHashSet()
com.google.common.util.concurrent.AtomicLongMap.put(java.lang.Object, J)
java.util.Set.add(java.lang.Object)
com.google.common.util.concurrent.AtomicLongMap.size()
assertEquals
com.google.common.util.concurrent.AtomicLongMap.asMap()
java.util.Map.containsValue(java.lang.Object)
assertTrue
com.google.common.util.concurrent.AtomicLongMap.removeAllZeros()
com.google.common.util.concurrent.AtomicLongMap.asMap()
java.util.Map.containsValue(java.lang.Object)
assertFalse
com.google.common.util.concurrent.AtomicLongMap.size()
assertEquals
com.google.common.util.concurrent.AtomicLongMap.asMap()
java.util.Map.keySet()
assertEquals
Chamada: com.google.common.util.concurrent.AtomicLongMap.create()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.newHashSet()
Situação: Manual
Chamada: com.google.common.util.concurrent.AtomicLongMap.put(java.lang.Object, J)
Situação: Manual
Chamada: java.util.Set.add(java.lang.Object)
Situação: Manual
Chamada: com.google.common.util.concurrent.AtomicLongMap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.util.concurrent.AtomicLongMap.asMap()
Situação: Manual
Chamada: java.util.Map.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: com.google.common.util.concurrent.AtomicLongMap.removeAllZeros()
Situação: Manual
Chamada: com.google.common.util.concurrent.AtomicLongMap.asMap()
Situação: Manual
Chamada: java.util.Map.containsValue(java.lang.Object)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: com.google.common.util.concurrent.AtomicLongMap.size()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: com.google.common.util.concurrent.AtomicLongMap.asMap()
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: suite ************************
*Commit: commit 31978328af5af66bc67bcbdda12b20710c2cfcad 1366041699 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getClassLoader()
com.google.common.reflect.ClassPath.from(java.lang.ClassLoader)
com.google.common.reflect.ClassPath.getTopLevelClasses()
com.google.common.reflect.ClassPath$ClassInfo.getName()
java.lang.String.equals(java.lang.Object)
com.google.common.reflect.ClassPath$ClassInfo.getName()
java.lang.String.endsWith(java.lang.String)
com.google.common.reflect.ClassPath$ClassInfo.load()
addTestSuite
Chamada: java.lang.Class.getClassLoader()
Situação: Primeira Chamada
Chamada: com.google.common.reflect.ClassPath.from(java.lang.ClassLoader)
Situação: Manual
Chamada: com.google.common.reflect.ClassPath.getTopLevelClasses()
Situação: Manual
Chamada: com.google.common.reflect.ClassPath$ClassInfo.getName()
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.reflect.ClassPath$ClassInfo.getName()
Situação: Manual
Chamada: java.lang.String.endsWith(java.lang.String)
Situação: Manual
Chamada: com.google.common.reflect.ClassPath$ClassInfo.load()
Situação: Manual
Chamada: addTestSuite
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.escape.ArrayBasedCharEscaper.escape(java.lang.String) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.length()
java.lang.String.charAt(I)
escapeSlow
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.17647002952703322
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: escapeSlow
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.4
F-Measure: 0.5
************************ Método Avaliado: com.google.common.escape.ArrayBasedEscaperMap.createReplacementArray(java.util.Map) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Map)
java.util.Map.isEmpty()
java.util.Map.keySet()
java.util.Collections.max(java.util.Collection)
java.util.Map.keySet()
java.util.Map.get(java.lang.Object)
java.lang.String.toCharArray()
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Map)
Situação: Primeira Chamada
Chamada: java.util.Map.isEmpty()
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: java.util.Collections.max(java.util.Collection)
Situação: Manual
Chamada: java.util.Map.keySet()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.lang.String.toCharArray()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.escape.ArrayBasedUnicodeEscaper.escape(java.lang.String) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.length()
java.lang.String.charAt(I)
escapeSlow
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.17647002952703322
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: escapeSlow
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.4
F-Measure: 0.5
************************ Método Avaliado: com.google.common.escape.CharEscaper.escape(java.lang.String) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.length()
java.lang.String.charAt(I)
com.google.common.escape.CharEscaper.escape(C)
com.google.common.escape.CharEscaper.escapeSlow(java.lang.String, I)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.17647002952703322
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.escape.CharEscaper.escape(C)
Situação: Manual
Chamada: com.google.common.escape.CharEscaper.escapeSlow(java.lang.String, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.4
F-Measure: 0.4444444444444445
************************ Método Avaliado: com.google.common.escape.CharEscaper.escapeSlow(java.lang.String, I) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
charBufferFromThreadLocal
java.lang.String.charAt(I)
com.google.common.escape.CharEscaper.escape(C)
com.google.common.escape.CharEscaper.growBuffer([C, I, I)
java.lang.String.getChars(I, I, [C, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
com.google.common.escape.CharEscaper.growBuffer([C, I, I)
java.lang.String.getChars(I, I, [C, I)
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: charBufferFromThreadLocal
Situação: Manual
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.escape.CharEscaper.escape(C)
Situação: Manual
Chamada: com.google.common.escape.CharEscaper.growBuffer([C, I, I)
Situação: Manual
Chamada: java.lang.String.getChars(I, I, [C, I)
Situação: Manual
Chamada: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Situação: Manual
Chamada: com.google.common.escape.CharEscaper.growBuffer([C, I, I)
Situação: Manual
Chamada: java.lang.String.getChars(I, I, [C, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.125
Corretude: 0.25
F-Measure: 0.16666666666666666
************************ Método Avaliado: com.google.common.escape.CharEscaperBuilder.addEscapes([C, java.lang.String) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
com.google.common.escape.CharEscaperBuilder.addEscape(C, java.lang.String)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.escape.CharEscaperBuilder.addEscape(C, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.escape.CharEscaperBuilder$CharArrayDecorator.escape(java.lang.String) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.charAt(I)
escapeSlow
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: escapeSlow
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.escape.CharEscaperBuilder.addEscape(C, java.lang.String) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.util.Map.put(java.lang.Character, java.lang.String)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: java.util.Map.put(java.lang.Character, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.escape.CharEscaperBuilder.toArray() ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.lang.String.toCharArray()
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.lang.String.toCharArray()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Set.iterator()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.3333333333333333
F-Measure: 0.4444444444444444
************************ Método Avaliado: com.google.common.escape.Escapers$Builder.addEscape(C, java.lang.String) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.util.Map.put(java.lang.Character, java.lang.String)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: java.util.Map.put(java.lang.Character, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.escape.UnicodeEscaper.escape(java.lang.String) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.length()
com.google.common.escape.UnicodeEscaper.nextEscapeIndex(java.lang.CharSequence, I, I)
com.google.common.escape.UnicodeEscaper.escapeSlow(java.lang.String, I)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.17647002952703322
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.escape.UnicodeEscaper.nextEscapeIndex(java.lang.CharSequence, I, I)
Situação: Manual
Chamada: com.google.common.escape.UnicodeEscaper.escapeSlow(java.lang.String, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.2
F-Measure: 0.25
************************ Método Avaliado: com.google.common.escape.UnicodeEscaper.codePointAt(java.lang.CharSequence, I, I) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.charAt(I)
java.lang.Character.isLowSurrogate(C)
java.lang.Character.toCodePoint(C, C)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.charAt(I)
Situação: Manual
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.25
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.Character.isLowSurrogate(C)
Situação: Manual
Chamada: java.lang.Character.toCodePoint(C, C)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.CharSequence.subSequence(I, I)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: com.google.common.escape.UnicodeEscaper.escapeSlow(java.lang.String, I) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
charBufferFromThreadLocal
com.google.common.escape.UnicodeEscaper.codePointAt(java.lang.CharSequence, I, I)
com.google.common.escape.UnicodeEscaper.escape(I)
java.lang.Character.isSupplementaryCodePoint(I)
com.google.common.escape.UnicodeEscaper.growBuffer([C, I, I)
java.lang.String.getChars(I, I, [C, I)
java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
com.google.common.escape.UnicodeEscaper.nextEscapeIndex(java.lang.CharSequence, I, I)
com.google.common.escape.UnicodeEscaper.growBuffer([C, I, I)
java.lang.String.getChars(I, I, [C, I)
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: charBufferFromThreadLocal
Situação: Manual
Chamada: com.google.common.escape.UnicodeEscaper.codePointAt(java.lang.CharSequence, I, I)
Situação: Manual
Chamada: com.google.common.escape.UnicodeEscaper.escape(I)
Situação: Manual
Chamada: java.lang.Character.isSupplementaryCodePoint(I)
Situação: Manual
Chamada: com.google.common.escape.UnicodeEscaper.growBuffer([C, I, I)
Situação: Manual
Chamada: java.lang.String.getChars(I, I, [C, I)
Situação: Manual
Chamada: java.lang.System.arraycopy(java.lang.Object, I, java.lang.Object, I, I)
Situação: Manual
Chamada: com.google.common.escape.UnicodeEscaper.nextEscapeIndex(java.lang.CharSequence, I, I)
Situação: Manual
Chamada: com.google.common.escape.UnicodeEscaper.growBuffer([C, I, I)
Situação: Manual
Chamada: java.lang.String.getChars(I, I, [C, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.net.PercentEscaper.escape(java.lang.String) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.length()
java.lang.String.charAt(I)
escapeSlow
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.17647002952703322
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: escapeSlow
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.4
F-Measure: 0.5
************************ Método Avaliado: com.google.common.net.PercentEscaper.PercentEscaper(java.lang.String, Z) ************************
*Commit: commit 0beafad032035936df0898c71229d63acd57a0ac 1366644346 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.matches(java.lang.String)
java.lang.String.contains(java.lang.CharSequence)
com.google.common.net.PercentEscaper.createSafeOctets(java.lang.String)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.String.matches(java.lang.String)
Situação: Manual
Chamada: java.lang.String.contains(java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.net.PercentEscaper.createSafeOctets(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.reflect.TypeResolver$TypeMappingIntrospector.visitParameterizedType(java.lang.reflect.ParameterizedType) ************************
*Commit: commit cafb21d020445be9819d047961b2c8c3d8b956db 1366644473 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.ParameterizedType.getRawType()
java.lang.Class.getTypeParameters()
java.lang.reflect.ParameterizedType.getActualTypeArguments()
com.google.common.base.Preconditions.checkState(Z)
com.google.common.reflect.TypeResolver$TypeMappingIntrospector.map(java.lang.reflect.TypeVariable, java.lang.reflect.Type)
visit
java.lang.reflect.ParameterizedType.getOwnerType()
visit
Chamada: java.lang.reflect.ParameterizedType.getRawType()
Situação: Primeira Chamada
Chamada: java.lang.Class.getTypeParameters()
Situação: Manual
Chamada: java.lang.reflect.ParameterizedType.getActualTypeArguments()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkState(Z)
Situação: Manual
Chamada: com.google.common.reflect.TypeResolver$TypeMappingIntrospector.map(java.lang.reflect.TypeVariable, java.lang.reflect.Type)
Situação: Manual
Chamada: visit
Situação: Manual
Chamada: java.lang.reflect.ParameterizedType.getOwnerType()
Situação: Manual
Chamada: visit
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.reflect.TypeResolver$TypeMappingIntrospector.visitTypeVariable(java.lang.reflect.TypeVariable) ************************
*Commit: commit cafb21d020445be9819d047961b2c8c3d8b956db 1366644473 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.TypeVariable.getBounds()
visit
Chamada: java.lang.reflect.TypeVariable.getBounds()
Situação: Primeira Chamada
Chamada: visit
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.reflect.WildcardType.getUpperBounds()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.net.HostAndPort.getHostAndPortFromBracketedHost(java.lang.String) ************************
*Commit: commit e758192597c410ffed5ff2603ed15f6e6fdb74dc 1366748726 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.charAt(I)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.String.indexOf(I)
java.lang.String.lastIndexOf(I)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.String.substring(I, I)
java.lang.String.length()
java.lang.String.charAt(I)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.String.length()
java.lang.String.charAt(I)
java.lang.Character.isDigit(C)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.String.substring(I)
Chamada: java.lang.String.charAt(I)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: java.lang.String.indexOf(I)
Situação: Manual
Chamada: java.lang.String.lastIndexOf(I)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2342335806240454
Suporte: 0.00429397
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.String.substring(I, I)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2342335806240454
Suporte: 0.00429397
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.lang.Character.isDigit(C)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2342335806240454
Suporte: 0.00429397
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.String.substring(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Útil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.46153846153846156
Corretude: 0.6
F-Measure: 0.5217391304347826
************************ Método Avaliado: com.google.common.collect.MultimapsTest.testAsMap_multimap() ************************
*Commit: commit a829dfef2d7ef2df54212d8fca416f4a3efdcef4 1369167150 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimaps.newMultimap(java.util.Map, com.google.common.base.Supplier)
asMap
com.google.common.collect.Multimap.asMap()
assertSame
Chamada: com.google.common.collect.Multimaps.newMultimap(java.util.Map, com.google.common.base.Supplier)
Situação: Primeira Chamada
Chamada: asMap
Situação: Manual
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.FilteredMultimapValues.remove(java.lang.Object) ************************
*Commit: commit 1feb7a1a7bc73ca4b23ce576559775ffb8ff364c 1369172116 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
entryPredicate
unfiltered
entries
iterator
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Predicate.apply(null)
java.util.Map$Entry.getValue()
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
java.util.Iterator.remove()
Chamada: entryPredicate
Situação: Primeira Chamada
Chamada: unfiltered
Situação: Manual
Chamada: entries
Situação: Manual
Chamada: iterator
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.15075368016211577
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Iterator.next()
Útil
Método: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.375
F-Measure: 0.35294117647058826
************************ Método Avaliado: com.google.common.collect.ConstrainedMapTest$TestConstraint.checkKeyValue(java.lang.String, java.lang.String) ************************
*Commit: commit b95fcde29c1ab99cfd08fabeb1005bde6f060f94 1369717291 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.equals(java.lang.Object)
java.lang.String.equals(java.lang.Object)
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: com.google.common.collect.ConstrainedMapTest$ConstrainedMapGenerator.create([Ljava.util.Map$Entry;) ************************
*Commit: commit b95fcde29c1ab99cfd08fabeb1005bde6f060f94 1369717291 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Map.put(java.lang.String, java.lang.String)
Chamada: com.google.common.collect.MapConstraints.constrainedMap(java.util.Map, com.google.common.collect.MapConstraint)
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: java.util.Map.put(java.lang.String, java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.2
F-Measure: 0.25
************************ Método Avaliado: com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder) ************************
*Commit: commit bf56054562666d43b275579cd4012c3e82448dfc 1370290091 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
com.google.common.net.TrieParser.reverse(java.lang.CharSequence)
java.util.List.add(I, java.lang.CharSequence)
com.google.common.base.Joiner.join(java.lang.Iterable)
java.lang.String.length()
com.google.common.collect.ImmutableSet$Builder.add(java.lang.String)
java.lang.CharSequence.subSequence(I, I)
com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder)
java.lang.CharSequence.charAt(I)
java.util.List.remove(I)
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.CharSequence.subSequence(I, I)
Situação: Manual
Chamada: com.google.common.net.TrieParser.reverse(java.lang.CharSequence)
Situação: Manual
Chamada: java.util.List.add(I, java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.add(java.lang.String)
Situação: Manual
Chamada: java.lang.CharSequence.subSequence(I, I)
Situação: Manual
Chamada: com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder)
Situação: Manual
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2592596745546207
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.remove(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.18181818181818182
Corretude: 0.14285714285714285
F-Measure: 0.16
************************ Método Avaliado: com.google.common.net.TrieParser.parseTrie(java.lang.CharSequence) ************************
*Commit: commit bf56054562666d43b275579cd4012c3e82448dfc 1370290091 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.builder()
java.lang.CharSequence.length()
com.google.common.collect.Lists.newLinkedList()
java.lang.CharSequence.subSequence(I, I)
com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder)
com.google.common.collect.ImmutableSet$Builder.build()
Chamada: com.google.common.collect.ImmutableSet.builder()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.collect.Lists.newLinkedList()
Situação: Manual
Chamada: java.lang.CharSequence.subSequence(I, I)
Situação: Manual
Chamada: com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet$Builder.build()
Útil
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Inútil
Percentual de Automatização: 0.2
Corretude: 0.25
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.net.TrieParser.reverse(java.lang.CharSequence) ************************
*Commit: commit bf56054562666d43b275579cd4012c3e82448dfc 1370290091 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.charAt(I)
java.lang.Character.isSurrogatePair(C, C)
com.google.common.net.TrieParser.swap([C, I, I)
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2592596745546207
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.Character.isSurrogatePair(C, C)
Situação: Manual
Chamada: com.google.common.net.TrieParser.swap([C, I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.util.concurrent.RateLimiter.createWithCapacity(com.google.common.util.concurrent.RateLimiter$SleepingTicker, D, J, java.util.concurrent.TimeUnit) ************************
*Commit: commit b8dc3cf5402498ec452f5d427122ae3686563ebc 1370547876 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.TimeUnit.toNanos(J)
com.google.common.util.concurrent.RateLimiter.setRate(D)
Chamada: java.util.concurrent.TimeUnit.toNanos(J)
Situação: Primeira Chamada
Chamada: com.google.common.util.concurrent.RateLimiter.setRate(D)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Thread.currentThread()
Inútil
Método: java.lang.System.nanoTime()
Inútil
Método: java.lang.Thread.interrupt()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.SimpleAbstractMultisetTest.testRemoveUnsupported() ************************
*Commit: commit 99754ca7d31a8f11cafb0b7fe72e84c3feb3d9e0 1370550525 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.add(java.lang.String)
com.google.common.collect.Multiset.remove(java.lang.Object)
fail
com.google.common.collect.Multiset.contains(java.lang.Object)
assertTrue
Chamada: com.google.common.collect.Multiset.add(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object)
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: com.google.common.collect.Multiset.contains(java.lang.Object)
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.SimpleAbstractMultisetTest$NoRemoveMultiset.add(com.google.common.collect.SimpleAbstractMultisetTest$NoRemoveMultiset$E, I) ************************
*Commit: commit 99754ca7d31a8f11cafb0b7fe72e84c3feb3d9e0 1370550525 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z)
java.util.Map.get(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z)
java.util.Map.put(com.google.common.collect.SimpleAbstractMultisetTest$NoRemoveMultiset$E, java.lang.Integer)
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Primeira Chamada
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.061855765989587884
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Map.put(com.google.common.collect.SimpleAbstractMultisetTest$NoRemoveMultiset$E, java.lang.Integer)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Útil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.25
F-Measure: 0.28571428571428575
************************ Método Avaliado: com.google.common.collect.SimpleAbstractMultisetTest$NoRemoveMultiset.entryIterator() ************************
*Commit: commit 99754ca7d31a8f11cafb0b7fe72e84c3feb3d9e0 1370550525 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
null.getElement()
java.util.Map.get(java.lang.Object)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.521738787050712
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.17500037843811023
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: null.getElement()
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.6666666666666666
Corretude: 0.6666666666666666
F-Measure: 0.6666666666666666
************************ Método Avaliado: MultiInputStream ************************
*Commit: commit 03ae95e3f18d44bb9ae9b6fe4fd054b4ec8a78f1 1371842962 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.Iterator)
com.google.common.io.MultiInputStream.advance()
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Iterator)
Situação: Primeira Chamada
Chamada: com.google.common.io.MultiInputStream.advance()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.reflect.ClassPath.asClassPathString() ************************
*Commit: commit d20b08ea72dc8fc16e040fd9d86c3b307d826135 1372196499 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Set.size()
com.google.common.collect.Sets.newLinkedHashSetWithExpectedSize(I)
java.util.Set.add(java.io.File)
value
com.google.common.base.Joiner.on(java.lang.String)
join
Chamada: java.util.Set.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Sets.newLinkedHashSetWithExpectedSize(I)
Situação: Manual
Chamada: java.util.Set.add(java.io.File)
Situação: Manual
Chamada: value
Situação: Manual
Chamada: com.google.common.base.Joiner.on(java.lang.String)
Situação: Manual
Chamada: join
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.hash.SipHashFunction.SipHashFunction(I, I, J, J) ************************
*Commit: commit 35df6e874f188730e5f16441607999715615760a 1373386474 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2342335806240454
Suporte: 0.00429397
F-Measure Suporte e Confiança: 0.009
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: com.google.common.reflect.ClassPath$Scanner.scanDirectory(java.io.File, java.lang.ClassLoader, java.lang.String, com.google.common.collect.ImmutableSet) ************************
*Commit: commit 6328442d5b19af1048f3ee2177f90f129df70520 1373473644 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.io.File.getCanonicalFile()
com.google.common.collect.ImmutableCollection.contains(java.lang.Object)
java.io.File.listFiles()
java.util.logging.Logger.warning(java.lang.String)
com.google.common.collect.ImmutableSet.builder()
com.google.common.collect.ImmutableSet$Builder.addAll(java.lang.Iterable)
com.google.common.collect.ImmutableSet$Builder.add(java.io.File)
com.google.common.collect.ImmutableSet$Builder.build()
java.io.File.getName()
java.io.File.isDirectory()
com.google.common.reflect.ClassPath$Scanner.scanDirectory(java.io.File, java.lang.ClassLoader, java.lang.String, com.google.common.collect.ImmutableSet)
java.lang.String.equals(java.lang.Object)
com.google.common.reflect.ClassPath$ResourceInfo.of(java.lang.String, java.lang.ClassLoader)
com.google.common.collect.ImmutableSortedSet$Builder.add(com.google.common.reflect.ClassPath$ResourceInfo)
Chamada: java.io.File.getCanonicalFile()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.contains(java.lang.Object)
Situação: Manual
Chamada: java.io.File.listFiles()
Situação: Manual
Chamada: java.util.logging.Logger.warning(java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.addAll(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.add(java.io.File)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.io.File.getName()
Situação: Manual
Chamada: java.io.File.isDirectory()
Situação: Manual
Chamada: com.google.common.reflect.ClassPath$Scanner.scanDirectory(java.io.File, java.lang.ClassLoader, java.lang.String, com.google.common.collect.ImmutableSet)
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Chamada: com.google.common.reflect.ClassPath$ResourceInfo.of(java.lang.String, java.lang.ClassLoader)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSortedSet$Builder.add(com.google.common.reflect.ClassPath$ResourceInfo)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet$Builder.build()
Útil
Método: java.lang.String.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.07692307692307693
Corretude: 0.5
F-Measure: 0.13333333333333336
************************ Método Avaliado: com.google.common.collect.Sets$PowerSet.PowerSet(java.util.Set) ************************
*Commit: commit 9e513787c859c6ea922574ef30c66f17eb9158f1 1375138684 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.builder()
com.google.common.base.Preconditions.checkNotNull(java.util.Set)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.Sets$PowerSet$E, java.lang.Integer)
com.google.common.collect.ImmutableMap$Builder.build()
java.util.Map.size()
java.util.Map.size()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.Sets$PowerSet$E, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.ImmutableMap$Builder.build()
Útil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.25
F-Measure: 0.2
************************ Método Avaliado: com.google.common.collect.Sets$SubSet.iterator() ************************
*Commit: commit 9e513787c859c6ea922574ef30c66f17eb9158f1 1375138684 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.keySet()
com.google.common.collect.ImmutableCollection.asList()
java.lang.Integer.numberOfTrailingZeros(I)
java.util.List.get(I)
Chamada: com.google.common.collect.ImmutableMap.keySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.lang.Integer.numberOfTrailingZeros(I)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.Sets$SubSet.iterator() ************************
*Commit: commit 9e513787c859c6ea922574ef30c66f17eb9158f1 1375138684 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.keySet()
com.google.common.collect.ImmutableCollection.asList()
java.lang.Integer.numberOfTrailingZeros(I)
java.util.List.get(I)
Chamada: com.google.common.collect.ImmutableMap.keySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Manual
Chamada: java.lang.Integer.numberOfTrailingZeros(I)
Situação: Manual
Chamada: java.util.List.get(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.3571431660712587
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Útil
Método: com.google.common.collect.ImmutableList.iterator()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.5
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.Sets$PowerSet.PowerSet(java.util.Set) ************************
*Commit: commit 9e513787c859c6ea922574ef30c66f17eb9158f1 1375138684 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.builder()
com.google.common.base.Preconditions.checkNotNull(java.util.Set)
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.Sets$PowerSet$E, java.lang.Integer)
com.google.common.collect.ImmutableMap$Builder.build()
java.util.Map.size()
java.util.Map.size()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.Set)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.Sets$PowerSet$E, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map.size()
Situação: Manual
Chamada: java.util.Map.size()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.ImmutableMap$Builder.build()
Útil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.16666666666666666
Corretude: 0.25
F-Measure: 0.2
************************ Método Avaliado: com.google.common.hash.HashCode.fromBytes([B) ************************
*Commit: commit 5b19db451f68be2d4707174492ecad58467e6983 1375889561 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
java.lang.Object.clone()
com.google.common.hash.HashCode.fromBytesNoCopy([B)
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.Object)
Situação: Primeira Chamada
Chamada: java.lang.Object.clone()
Situação: Manual
Chamada: com.google.common.hash.HashCode.fromBytesNoCopy([B)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.hash.HashCode.fromString(java.lang.String) ************************
*Commit: commit 88e7a44f78968bcac26550166dec81a6176cb22d 1375889842 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.String.length()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.String.length()
java.lang.String.length()
java.lang.String.charAt(I)
com.google.common.hash.HashCode.decode(C)
java.lang.String.charAt(I)
com.google.common.hash.HashCode.decode(C)
com.google.common.hash.HashCode.fromBytesNoCopy([B)
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2342335806240454
Suporte: 0.00429397
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.hash.HashCode.decode(C)
Situação: Manual
Chamada: java.lang.String.charAt(I)
Situação: Manual
Chamada: com.google.common.hash.HashCode.decode(C)
Situação: Manual
Chamada: com.google.common.hash.HashCode.fromBytesNoCopy([B)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Útil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.6
F-Measure: 0.5454545454545454
************************ Método Avaliado: com.google.common.collect.ImmutableMap.copyOfEnumMap(java.util.Map) ************************
*Commit: commit 5de36fdaf41f71d04478de0cb074ff83953dc2e3 1376082970 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.EnumMap.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
checkEntryNotNull
com.google.common.collect.ImmutableEnumMap.asImmutable(java.util.EnumMap)
Chamada: java.util.EnumMap.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: checkEntryNotNull
Situação: Manual
Chamada: com.google.common.collect.ImmutableEnumMap.asImmutable(java.util.EnumMap)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.util.concurrent.AbstractService.startAsync() ************************
*Commit: commit 3c09dbf36b034c6b60f1ad9d0e1a30f6435e3756 1376316720 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.util.concurrent.Monitor.enterIf(com.google.common.util.concurrent.Monitor$Guard)
com.google.common.util.concurrent.AbstractService.starting()
com.google.common.util.concurrent.AbstractService.doStart()
com.google.common.util.concurrent.AbstractService.notifyFailed(java.lang.Throwable)
com.google.common.util.concurrent.Monitor.leave()
com.google.common.util.concurrent.AbstractService.executeListeners()
Chamada: com.google.common.util.concurrent.Monitor.enterIf(com.google.common.util.concurrent.Monitor$Guard)
Situação: Primeira Chamada
Chamada: com.google.common.util.concurrent.AbstractService.starting()
Situação: Manual
Chamada: com.google.common.util.concurrent.AbstractService.doStart()
Situação: Manual
Chamada: com.google.common.util.concurrent.AbstractService.notifyFailed(java.lang.Throwable)
Situação: Manual
Chamada: com.google.common.util.concurrent.Monitor.leave()
Situação: Manual
Chamada: com.google.common.util.concurrent.AbstractService.executeListeners()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Throwables.propagate(java.lang.Throwable)
Inútil
Método: java.util.concurrent.locks.ReentrantLock.unlock()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.math.DoubleMath.mean(java.util.Iterator) ************************
*Commit: commit 53811089cf234fd2aacffa9d8f7aaa321f8c798c 1377216962 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.lang.Number.doubleValue()
com.google.common.math.DoubleMath$MeanAccumulator.add(D)
com.google.common.math.DoubleMath$MeanAccumulator.mean()
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: java.lang.Number.doubleValue()
Situação: Manual
Chamada: com.google.common.math.DoubleMath$MeanAccumulator.add(D)
Situação: Manual
Chamada: com.google.common.math.DoubleMath$MeanAccumulator.mean()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: null.setBits(java.util.BitSet) ************************
*Commit: commit 31e1f16989ec41b360b074caebdc58e0117ecf68 1377729049 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.length()
java.lang.String.charAt(I)
java.util.BitSet.set(I)
Chamada: java.lang.String.length()
Situação: Primeira Chamada
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.BitSet.set(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.eventbus.EventBus$LoggingSubscriberExceptionHandler.LoggingSubscriberExceptionHandler(java.lang.String) ************************
*Commit: commit 578686226d7245be5f72dc3007c8e29217ecbfc8 1379085283 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Class.getName()
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.util.logging.Logger.getLogger(java.lang.String)
Chamada: java.lang.Class.getName()
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Manual
Chamada: java.util.logging.Logger.getLogger(java.lang.String)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.AbstractIteratorTest.testReentrantHasNext() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.AbstractIterator.hasNext()
java.util.Iterator.hasNext()
fail
Chamada: com.google.common.base.AbstractIterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.AbstractIteratorTest.testException() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
fail
assertSame
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: fail
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.AbstractIteratorTest.testDefaultBehaviorOfNextAndHasNext() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.AbstractIterator.endOfData()
fail
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
Chamada: com.google.common.base.AbstractIterator.endOfData()
Situação: Primeira Chamada
Chamada: fail
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1830064428297795
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8108106338932848
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.21052631578947367
Corretude: 0.25
F-Measure: 0.22857142857142856
************************ Método Avaliado: com.google.common.base.AbstractIteratorTest.testExceptionAfterEndOfData() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.AbstractIterator.endOfData()
java.util.Iterator.hasNext()
fail
Chamada: com.google.common.base.AbstractIterator.endOfData()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.AbstractIteratorTest.testCantRemove() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.AbstractIterator.endOfData()
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
fail
Chamada: com.google.common.base.AbstractIterator.endOfData()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.25
Suporte: 0.00891825
F-Measure Suporte e Confiança: 0.018
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.base.AbstractIteratorTest.testSneakyThrow() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
fail
com.google.common.base.AbstractIteratorTest.sneakyThrow(java.lang.Throwable)
java.util.Iterator.hasNext()
fail
java.util.Iterator.hasNext()
fail
Chamada: fail
Situação: Primeira Chamada
Chamada: com.google.common.base.AbstractIteratorTest.sneakyThrow(java.lang.Throwable)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.2
Corretude: 0.25
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.collect.AbstractIteratorTest.testCantRemove() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.next()
assertEquals
java.util.Iterator.remove()
fail
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.25
Suporte: 0.00891825
F-Measure Suporte e Confiança: 0.018
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.collect.AbstractIteratorTest.testDefaultBehaviorOfNextAndHasNext() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractIterator.endOfData()
fail
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.hasNext()
assertTrue
java.util.Iterator.next()
assertEquals
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.hasNext()
assertFalse
java.util.Iterator.next()
fail
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Primeira Chamada
Chamada: fail
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1830064428297795
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: assertEquals
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8108106338932848
Suporte: 0.00495458
F-Measure Suporte e Confiança: 0.010
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.Multiset.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.21052631578947367
Corretude: 0.25
F-Measure: 0.22857142857142856
************************ Método Avaliado: com.google.common.collect.AbstractIteratorTest.testReentrantHasNext() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractIterator.hasNext()
java.util.Iterator.hasNext()
fail
Chamada: com.google.common.collect.AbstractIterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractIteratorTest.testException() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
fail
assertSame
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: fail
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractIteratorTest.testExceptionAfterEndOfData() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.AbstractIterator.endOfData()
java.util.Iterator.hasNext()
fail
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Primeira Chamada
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.AbstractIteratorTest.testSneakyThrow() ************************
*Commit: commit 7fbd3fa9fa13234e1d11d69df0366125f2fdede2 1380552100 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
fail
com.google.common.collect.AbstractIteratorTest.sneakyThrow(java.lang.Throwable)
java.util.Iterator.hasNext()
fail
java.util.Iterator.hasNext()
fail
Chamada: fail
Situação: Primeira Chamada
Chamada: com.google.common.collect.AbstractIteratorTest.sneakyThrow(java.lang.Throwable)
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Manual
Chamada: fail
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1859295794361243
Suporte: 0.00611065
F-Measure Suporte e Confiança: 0.012
Chamada: fail
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.2
Corretude: 0.25
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.base.Utf8.utf8Length(java.lang.CharSequence) ************************
*Commit: commit d88df71d5ff0dfdda5e2cb557fca81164df0578b 1380904139 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.Character.codePointAt(java.lang.CharSequence, I)
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.Character.codePointAt(java.lang.CharSequence, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.base.Utf8.isValidUtf8([B, I, I) ************************
*Commit: commit d88df71d5ff0dfdda5e2cb557fca81164df0578b 1380904139 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.base.Utf8.isValidUtf8NonAscii([B, I, I)
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Primeira Chamada
Chamada: com.google.common.base.Utf8.isValidUtf8NonAscii([B, I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.hash.Murmur3_32HashFunction.hashUnencodedChars(java.lang.CharSequence) ************************
*Commit: commit 8c7fbd6d742eefad76a61442f4d78d37d9e5079c 1380904148 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.charAt(I)
com.google.common.hash.Murmur3_32HashFunction.mixK1(I)
com.google.common.hash.Murmur3_32HashFunction.mixH1(I, I)
java.lang.CharSequence.length()
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
com.google.common.hash.Murmur3_32HashFunction.mixK1(I)
java.lang.CharSequence.length()
com.google.common.hash.Murmur3_32HashFunction.fmix(I, I)
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2592596745546207
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.hash.Murmur3_32HashFunction.mixK1(I)
Situação: Manual
Chamada: com.google.common.hash.Murmur3_32HashFunction.mixH1(I, I)
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2592596745546207
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.hash.Murmur3_32HashFunction.mixK1(I)
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.hash.Murmur3_32HashFunction.fmix(I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.3
Corretude: 0.3333333333333333
F-Measure: 0.3157894736842105
************************ Método Avaliado: com.google.common.base.Utf8.length(java.lang.CharSequence) ************************
*Commit: commit ae827772191979fab74a46f64425187d747d1aa5 1381769648 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.Character.codePointAt(java.lang.CharSequence, I)
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.Character.codePointAt(java.lang.CharSequence, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.base.Utf8.isWellFormed([B, I, I) ************************
*Commit: commit ae827772191979fab74a46f64425187d747d1aa5 1381769648 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
com.google.common.base.Utf8.isWellFormedSlowPath([B, I, I)
Chamada: com.google.common.base.Preconditions.checkPositionIndexes(I, I, I)
Situação: Primeira Chamada
Chamada: com.google.common.base.Utf8.isWellFormedSlowPath([B, I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collections.emptyList()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.Utf8.encodedLength(java.lang.CharSequence) ************************
*Commit: commit a9ab3b8fcedba375d8f64e89a4aeba02a508de95 1381771153 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.Character.codePointAt(java.lang.CharSequence, I)
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.Character.codePointAt(java.lang.CharSequence, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.transitionService(com.google.common.util.concurrent.Service, com.google.common.util.concurrent.Service$State, com.google.common.util.concurrent.Service$State) ************************
*Commit: commit a3c6d2e03dd0afa4d13574094611639675dbc576 1381771406 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.util.concurrent.Service)
com.google.common.base.Preconditions.checkArgument(Z)
com.google.common.util.concurrent.Monitor.enter()
com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
com.google.common.base.Preconditions.checkState(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.Multimap.put(com.google.common.util.concurrent.Service$State, com.google.common.util.concurrent.Service)
com.google.common.base.Preconditions.checkState(Z, java.lang.String, [Ljava.lang.Object;)
java.util.Map.get(java.lang.Object)
com.google.common.base.Stopwatch.start()
java.lang.Enum.compareTo(com.google.common.util.concurrent.Service$State)
com.google.common.base.Stopwatch.isRunning()
com.google.common.base.Stopwatch.stop()
java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, [Ljava.lang.Object;)
com.google.common.util.concurrent.ServiceManager$ServiceManagerState.fireFailedListeners(com.google.common.util.concurrent.Service)
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.util.concurrent.ServiceManager$ServiceManagerState.fireHealthyListeners()
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.util.concurrent.ServiceManager$ServiceManagerState.fireStoppedListeners()
java.util.List.clear()
com.google.common.util.concurrent.Monitor.leave()
com.google.common.util.concurrent.ServiceManager$ServiceManagerState.executeListeners()
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.util.concurrent.Service)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z)
Situação: Manual
Chamada: com.google.common.util.concurrent.Monitor.enter()
Situação: Manual
Chamada: com.google.common.collect.Multimap.remove(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.collect.Multimap.put(com.google.common.util.concurrent.Service$State, com.google.common.util.concurrent.Service)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkState(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Stopwatch.start()
Situação: Manual
Chamada: java.lang.Enum.compareTo(com.google.common.util.concurrent.Service$State)
Situação: Manual
Chamada: com.google.common.base.Stopwatch.isRunning()
Situação: Manual
Chamada: com.google.common.base.Stopwatch.stop()
Situação: Manual
Chamada: java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.fireFailedListeners(com.google.common.util.concurrent.Service)
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.fireHealthyListeners()
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.fireStoppedListeners()
Situação: Manual
Chamada: java.util.List.clear()
Situação: Manual
Chamada: com.google.common.util.concurrent.Monitor.leave()
Situação: Manual
Chamada: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.executeListeners()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: null.isSatisfied() ************************
*Commit: commit a3c6d2e03dd0afa4d13574094611639675dbc576 1381771406 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset.count(java.lang.Object)
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.startupTimes() ************************
*Commit: commit a3c6d2e03dd0afa4d13574094611639675dbc576 1381771406 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.util.concurrent.Monitor.enter()
java.util.Collection.size()
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.collect.Lists.newArrayListWithCapacity(I)
java.util.Map.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.base.Stopwatch.isRunning()
com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
elapsed
com.google.common.collect.Maps.immutableEntry(com.google.common.util.concurrent.Service, java.lang.Object)
java.util.List.add(java.util.Map$Entry)
com.google.common.util.concurrent.Monitor.leave()
com.google.common.collect.Ordering.natural()
com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
java.util.Collections.sort(java.util.List, java.util.Comparator)
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.builder()
com.google.common.collect.ImmutableMap$Builder.put(java.util.Map$Entry)
com.google.common.collect.ImmutableMap$Builder.build()
Chamada: com.google.common.util.concurrent.Monitor.enter()
Situação: Primeira Chamada
Chamada: java.util.Collection.size()
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayListWithCapacity(I)
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: com.google.common.base.Stopwatch.isRunning()
Situação: Manual
Chamada: com.google.common.collect.Multimap.containsEntry(java.lang.Object, java.lang.Object)
Situação: Manual
Chamada: elapsed
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.util.concurrent.Service, java.lang.Object)
Situação: Manual
Chamada: java.util.List.add(java.util.Map$Entry)
Situação: Manual
Chamada: com.google.common.util.concurrent.Monitor.leave()
Situação: Manual
Chamada: com.google.common.collect.Ordering.natural()
Situação: Manual
Chamada: com.google.common.collect.Ordering.onResultOf(com.google.common.base.Function)
Situação: Manual
Chamada: java.util.Collections.sort(java.util.List, java.util.Comparator)
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.builder()
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.put(java.util.Map$Entry)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9230736985267747
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: java.util.Set.iterator()
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Collection.clear()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: com.google.common.collect.ImmutableMap$Builder.build()
Útil
Método: java.util.Collection.size()
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.15
Corretude: 0.16666666666666666
F-Measure: 0.15789473684210525
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.servicesByState() ************************
*Commit: commit a3c6d2e03dd0afa4d13574094611639675dbc576 1381771406 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
com.google.common.util.concurrent.Monitor.enter()
com.google.common.collect.SetMultimap.entries()
java.util.Map$Entry.getValue()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableSetMultimap$Builder.put(com.google.common.util.concurrent.Service$State, com.google.common.util.concurrent.Service)
com.google.common.util.concurrent.Monitor.leave()
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Situação: Primeira Chamada
Chamada: com.google.common.util.concurrent.Monitor.enter()
Situação: Manual
Chamada: com.google.common.collect.SetMultimap.entries()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1256544784778184
Suporte: 0.00396367
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(com.google.common.util.concurrent.Service$State, com.google.common.util.concurrent.Service)
Situação: Manual
Chamada: com.google.common.util.concurrent.Monitor.leave()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Útil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.375
Corretude: 0.42857142857142855
F-Measure: 0.39999999999999997
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.ServiceManagerState(com.google.common.collect.ImmutableCollection) ************************
*Commit: commit a3c6d2e03dd0afa4d13574094611639675dbc576 1381771406 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.size()
com.google.common.collect.Multimap.putAll(com.google.common.util.concurrent.Service$State, java.lang.Iterable)
createUnstarted
java.util.Map.put(com.google.common.util.concurrent.Service, com.google.common.base.Stopwatch)
Chamada: java.util.Collection.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Multimap.putAll(com.google.common.util.concurrent.Service$State, java.lang.Iterable)
Situação: Manual
Chamada: createUnstarted
Situação: Manual
Chamada: java.util.Map.put(com.google.common.util.concurrent.Service, com.google.common.base.Stopwatch)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.checkHealthy() ************************
*Commit: commit a3c6d2e03dd0afa4d13574094611639675dbc576 1381771406 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multiset.count(java.lang.Object)
com.google.common.base.Predicates.equalTo(com.google.common.util.concurrent.Service$State)
com.google.common.base.Predicates.not(com.google.common.base.Predicate)
com.google.common.collect.Multimaps.filterKeys(com.google.common.collect.Multimap, com.google.common.base.Predicate)
Chamada: com.google.common.collect.Multiset.count(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.base.Predicates.equalTo(com.google.common.util.concurrent.Service$State)
Situação: Manual
Chamada: com.google.common.base.Predicates.not(com.google.common.base.Predicate)
Situação: Manual
Chamada: com.google.common.collect.Multimaps.filterKeys(com.google.common.collect.Multimap, com.google.common.base.Predicate)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multisets.immutableEntry(com.google.common.collect.Multisets$(Lcom/google/common/collect/Multiset;Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;$E, I)
Inútil
Método: com.google.common.collect.AbstractIterator.endOfData()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.Utf8Test.testEncodedLength_validStrings2() ************************
*Commit: commit 8923e48737bb4dc5d4ceea7d09926cff1bc50af4 1384296650 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.keySet()
java.util.Set.toArray([Ljava.lang.Integer;)
java.lang.AbstractStringBuilder.setLength(I)
java.util.Random.nextInt(I)
java.lang.StringBuilder.appendCodePoint(I)
java.util.HashMap.get(java.lang.Object)
encodedLength
java.lang.AbstractStringBuilder.length()
java.lang.AbstractStringBuilder.charAt(I)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
encodedLength
assertEquals
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Situação: Primeira Chamada
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.HashMap.keySet()
Situação: Manual
Chamada: java.util.Set.toArray([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.lang.AbstractStringBuilder.setLength(I)
Situação: Manual
Chamada: java.util.Random.nextInt(I)
Situação: Manual
Chamada: java.lang.StringBuilder.appendCodePoint(I)
Situação: Manual
Chamada: java.util.HashMap.get(java.lang.Object)
Situação: Manual
Chamada: encodedLength
Situação: Manual
Chamada: java.lang.AbstractStringBuilder.length()
Situação: Manual
Chamada: java.lang.AbstractStringBuilder.charAt(I)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090910341942444
Suporte: 0.00660611
F-Measure Suporte e Confiança: 0.014
Chamada: encodedLength
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.05
Corretude: 0.3333333333333333
F-Measure: 0.08695652173913045
************************ Método Avaliado: com.google.common.base.Utf8.encodedLengthGeneral(java.lang.CharSequence, I) ************************
*Commit: commit 8923e48737bb4dc5d4ceea7d09926cff1bc50af4 1384296650 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.Character.codePointAt(java.lang.CharSequence, I)
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.Character.codePointAt(java.lang.CharSequence, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: doParseTrieToBuilder ************************
*Commit: commit 7b006c485b0774137c05f17dbf29de7e59efd8ce 1384878132 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
com.google.common.net.TrieParser.reverse(java.lang.CharSequence)
java.util.List.add(I, java.lang.CharSequence)
com.google.common.base.Joiner.join(java.lang.Iterable)
java.lang.String.length()
fromCode
put
java.lang.CharSequence.subSequence(I, I)
doParseTrieToBuilder
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.charAt(I)
java.util.List.remove(I)
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.CharSequence.subSequence(I, I)
Situação: Manual
Chamada: com.google.common.net.TrieParser.reverse(java.lang.CharSequence)
Situação: Manual
Chamada: java.util.List.add(I, java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Manual
Chamada: fromCode
Situação: Manual
Chamada: put
Situação: Manual
Chamada: java.lang.CharSequence.subSequence(I, I)
Situação: Manual
Chamada: doParseTrieToBuilder
Situação: Manual
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2592596745546207
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2592596745546207
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.remove(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.23076923076923078
Corretude: 0.14285714285714285
F-Measure: 0.17647058823529413
************************ Método Avaliado: parseTrie ************************
*Commit: commit 7b006c485b0774137c05f17dbf29de7e59efd8ce 1384878132 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
builder
java.lang.CharSequence.length()
com.google.common.collect.Lists.newLinkedList()
java.lang.CharSequence.subSequence(I, I)
doParseTrieToBuilder
build
Chamada: builder
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.collect.Lists.newLinkedList()
Situação: Manual
Chamada: java.lang.CharSequence.subSequence(I, I)
Situação: Manual
Chamada: doParseTrieToBuilder
Situação: Manual
Chamada: build
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder) ************************
*Commit: commit 5e6f89d817aa9d7f1c54c0fa7d17ce3bed5d7be8 1385005808 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
com.google.common.net.TrieParser.reverse(java.lang.CharSequence)
java.util.List.add(I, java.lang.CharSequence)
com.google.common.base.Joiner.join(java.lang.Iterable)
java.lang.String.length()
com.google.common.collect.ImmutableSet$Builder.add(java.lang.String)
java.lang.CharSequence.subSequence(I, I)
com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder)
java.lang.CharSequence.charAt(I)
java.util.List.remove(I)
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.CharSequence.subSequence(I, I)
Situação: Manual
Chamada: com.google.common.net.TrieParser.reverse(java.lang.CharSequence)
Situação: Manual
Chamada: java.util.List.add(I, java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.add(java.lang.String)
Situação: Manual
Chamada: java.lang.CharSequence.subSequence(I, I)
Situação: Manual
Chamada: com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder)
Situação: Manual
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2592596745546207
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.remove(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.18181818181818182
Corretude: 0.14285714285714285
F-Measure: 0.16
************************ Método Avaliado: com.google.common.net.TrieParser.parseTrie(java.lang.CharSequence) ************************
*Commit: commit 5e6f89d817aa9d7f1c54c0fa7d17ce3bed5d7be8 1385005808 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSet.builder()
java.lang.CharSequence.length()
com.google.common.collect.Lists.newLinkedList()
java.lang.CharSequence.subSequence(I, I)
com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder)
com.google.common.collect.ImmutableSet$Builder.build()
Chamada: com.google.common.collect.ImmutableSet.builder()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.collect.Lists.newLinkedList()
Situação: Manual
Chamada: java.lang.CharSequence.subSequence(I, I)
Situação: Manual
Chamada: com.google.common.net.TrieParser.doParseTrieToBuilder(java.util.List, java.lang.CharSequence, com.google.common.collect.ImmutableSet$Builder)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSet$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableSet$Builder.build()
Útil
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Inútil
Percentual de Automatização: 0.2
Corretude: 0.25
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.base.Ascii.truncate(java.lang.CharSequence, I, java.lang.String) ************************
*Commit: commit 78f29ce2cc5a71253073a3ffb2c1ee52fb295429 1385005826 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
java.lang.String.length()
java.lang.String.length()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.CharSequence.length()
java.lang.CharSequence.toString()
java.lang.String.length()
java.lang.CharSequence.subSequence(I, I)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.toString()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1904757785716551
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.CharSequence.subSequence(I, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.CharSequence.toString()
Útil
Método: java.lang.CharSequence.charAt(I)
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.42857142857142855
Corretude: 0.25
F-Measure: 0.3157894736842105
************************ Método Avaliado: doParseTrieToBuilder ************************
*Commit: commit 952ea2a5afa82239d572786eb62dc9758c0984eb 1385501622 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.subSequence(I, I)
com.google.common.net.TrieParser.reverse(java.lang.CharSequence)
java.util.List.add(I, java.lang.CharSequence)
com.google.common.base.Joiner.join(java.lang.Iterable)
java.lang.String.length()
fromCode
put
java.lang.CharSequence.subSequence(I, I)
doParseTrieToBuilder
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.charAt(I)
java.util.List.remove(I)
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.CharSequence.subSequence(I, I)
Situação: Manual
Chamada: com.google.common.net.TrieParser.reverse(java.lang.CharSequence)
Situação: Manual
Chamada: java.util.List.add(I, java.lang.CharSequence)
Situação: Manual
Chamada: com.google.common.base.Joiner.join(java.lang.Iterable)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Manual
Chamada: fromCode
Situação: Manual
Chamada: put
Situação: Manual
Chamada: java.lang.CharSequence.subSequence(I, I)
Situação: Manual
Chamada: doParseTrieToBuilder
Situação: Manual
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2592596745546207
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2592596745546207
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.List.remove(I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.23076923076923078
Corretude: 0.14285714285714285
F-Measure: 0.17647058823529413
************************ Método Avaliado: parseTrie ************************
*Commit: commit 952ea2a5afa82239d572786eb62dc9758c0984eb 1385501622 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
builder
java.lang.CharSequence.length()
com.google.common.collect.Lists.newLinkedList()
java.lang.CharSequence.subSequence(I, I)
doParseTrieToBuilder
build
Chamada: builder
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: com.google.common.collect.Lists.newLinkedList()
Situação: Manual
Chamada: java.lang.CharSequence.subSequence(I, I)
Situação: Manual
Chamada: doParseTrieToBuilder
Situação: Manual
Chamada: build
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.Ascii.equalsIgnoreCase(java.lang.CharSequence, java.lang.CharSequence) ************************
*Commit: commit c2b87dfc444952ba159da9f16e26f1921e5367fc 1386092573 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.CharSequence.length()
java.lang.CharSequence.length()
java.lang.CharSequence.charAt(I)
java.lang.CharSequence.charAt(I)
com.google.common.base.Ascii.getAlphaIndex(C)
com.google.common.base.Ascii.getAlphaIndex(C)
Chamada: java.lang.CharSequence.length()
Situação: Primeira Chamada
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6428561130958044
Suporte: 0.00445912
F-Measure Suporte e Confiança: 0.009
Chamada: java.lang.CharSequence.charAt(I)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.2592596745546207
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.base.Ascii.getAlphaIndex(C)
Situação: Manual
Chamada: com.google.common.base.Ascii.getAlphaIndex(C)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.CharSequence.toString()
Inútil
Método: java.lang.CharSequence.charAt(I)
Útil
Percentual de Automatização: 0.4
Corretude: 0.3333333333333333
F-Measure: 0.3636363636363636
************************ Método Avaliado: com.google.common.collect.FilteredEntryMultimap.removeEntriesIf(com.google.common.base.Predicate) ************************
*Commit: commit 257148b2901c8b8ec1b06d9c10804300ac3d06d0 1386517112 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Multimap.asMap()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
java.util.Collection.isEmpty()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
com.google.common.base.Predicate.apply(null)
java.util.Collection.size()
java.util.Map$Entry.getValue()
java.util.Collection.size()
java.util.Iterator.remove()
java.util.Collection.clear()
Chamada: com.google.common.collect.Multimap.asMap()
Situação: Primeira Chamada
Chamada: java.util.Map.entrySet()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.43333440977842724
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.521738787050712
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.608696567864768
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3666668012223034
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3666668012223034
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.FilteredEntryMultimap.filterCollection(java.util.Collection, com.google.common.base.Predicate)
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.FilteredEntryMultimap$K, java.util.Collection)
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.15555573496307118
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getValue()
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.8333358562540683
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Collection.clear()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.14084582715038632
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Collection.clear()
Útil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map.entrySet()
Útil
Método: java.util.Collection.size()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6
Corretude: 0.8888888888888888
F-Measure: 0.7164179104477612
************************ Método Avaliado: com.google.common.collect.StandardTable$Column.removeFromColumnIf(com.google.common.base.Predicate) ************************
*Commit: commit 257148b2901c8b8ec1b06d9c10804300ac3d06d0 1386517112 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getValue()
java.util.Map.get(java.lang.Object)
java.util.Map$Entry.getKey()
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.StandardTable$R, com.google.common.collect.StandardTable$V)
com.google.common.base.Predicate.apply(null)
java.util.Map.remove(java.lang.Object)
java.util.Map.isEmpty()
java.util.Iterator.remove()
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.521738787050712
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.17500037843811023
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6125013245333859
Suporte: 0.00809249
F-Measure Suporte e Confiança: 0.016
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.6000007568762205
Suporte: 0.00792733
F-Measure Suporte e Confiança: 0.016
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.StandardTable$R, com.google.common.collect.StandardTable$V)
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.09090898248639921
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Map.isEmpty()
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.8333358562540683
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Iterator.remove()
Útil
Método: java.util.Map.remove(java.lang.Object)
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.base.Preconditions.checkArgument(Z)
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.6363636363636364
Corretude: 0.7777777777777778
F-Measure: 0.7000000000000001
************************ Método Avaliado: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.removeEntryIf(com.google.common.base.Predicate) ************************
*Commit: commit 257148b2901c8b8ec1b06d9c10804300ac3d06d0 1386517112 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Lists.newArrayList()
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.entrySet()
com.google.common.base.Predicate.apply(null)
java.util.Map$Entry.getKey()
java.util.List.add(com.google.common.collect.Range)
com.google.common.collect.TreeRangeMap.remove(com.google.common.collect.Range)
java.util.List.isEmpty()
Chamada: com.google.common.collect.Lists.newArrayList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap.entrySet()
Situação: Manual
Chamada: com.google.common.base.Predicate.apply(null)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.List.add(com.google.common.collect.Range)
Situação: Manual
Chamada: com.google.common.collect.TreeRangeMap.remove(com.google.common.collect.Range)
Situação: Manual
Chamada: java.util.List.isEmpty()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: asConverter ************************
*Commit: commit 75fda2a9fea9e3415c661e8688332c24ffddc940 1387395893 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.BiMap)
null.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$(Lcom/google/common/collect/BiMap;)LConverter;$A)
com.google.common.collect.BiMap.inverse()
null.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$(Lcom/google/common/collect/BiMap;)LConverter;$B)
java.util.Map.get(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.BiMap)
Situação: Primeira Chamada
Chamada: null.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$(Lcom/google/common/collect/BiMap;)LConverter;$A)
Situação: Manual
Chamada: com.google.common.collect.BiMap.inverse()
Situação: Manual
Chamada: null.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$(Lcom/google/common/collect/BiMap;)LConverter;$B)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MapsTest.testAsConverter_nominal() ************************
*Commit: commit 75fda2a9fea9e3415c661e8688332c24ffddc940 1387395893 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableBiMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
asConverter
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getValue()
java.util.Map$Entry.getKey()
convert
assertSame
Chamada: com.google.common.collect.ImmutableBiMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: asConverter
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5624990539047245
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: convert
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.base.Predicate.apply(null)
Inútil
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.2857142857142857
F-Measure: 0.30769230769230765
************************ Método Avaliado: com.google.common.collect.MapsTest.testAsConverter_inverse() ************************
*Commit: commit 75fda2a9fea9e3415c661e8688332c24ffddc940 1387395893 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableBiMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
asConverter
com.google.common.collect.ImmutableMap.entrySet()
java.util.Map$Entry.getKey()
reverse
java.util.Map$Entry.getValue()
convert
assertSame
Chamada: com.google.common.collect.ImmutableBiMap.of(java.lang.String, java.lang.Integer, java.lang.String, java.lang.Integer)
Situação: Primeira Chamada
Chamada: asConverter
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: reverse
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5624990539047245
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: convert
Situação: Manual
Chamada: assertSame
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.collect.ImmutableSet.iterator()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.3333333333333333
F-Measure: 0.30769230769230765
************************ Método Avaliado: com.google.common.base.Converter.convertAll(java.lang.Iterable) ************************
*Commit: commit 75fda2a9fea9e3415c661e8688332c24ffddc940 1387395893 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.Iterable, java.lang.Object)
java.lang.Iterable.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Converter.convert(com.google.common.base.Converter$A)
java.util.Iterator.remove()
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.Iterable, java.lang.Object)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.27058769055421
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.22352899273400767
Suporte: 0.0031379
F-Measure Suporte e Confiança: 0.007
Chamada: com.google.common.base.Converter.convert(com.google.common.base.Converter$A)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2613064195171822
Suporte: 0.00858794
F-Measure Suporte e Confiança: 0.017
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Iterator.next()
Útil
Percentual de Automatização: 0.6
Corretude: 1.0
F-Measure: 0.7499999999999999
************************ Método Avaliado: com.google.common.base.Converter$ConverterComposition.hashCode() ************************
*Commit: commit 75fda2a9fea9e3415c661e8688332c24ffddc940 1387395893 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
java.lang.Object.hashCode()
Chamada: java.lang.Object.hashCode()
Situação: Primeira Chamada
Chamada: java.lang.Object.hashCode()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.lang.Object.hashCode()
Útil
Método: com.google.common.collect.Hashing.smear(I)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: asConverter ************************
*Commit: commit 75fda2a9fea9e3415c661e8688332c24ffddc940 1387395893 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.BiMap)
null.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$(Lcom/google/common/collect/BiMap;)LConverter;$A)
com.google.common.collect.BiMap.inverse()
null.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$(Lcom/google/common/collect/BiMap;)LConverter;$B)
java.util.Map.get(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.BiMap)
Situação: Primeira Chamada
Chamada: null.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$(Lcom/google/common/collect/BiMap;)LConverter;$A)
Situação: Manual
Chamada: com.google.common.collect.BiMap.inverse()
Situação: Manual
Chamada: null.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$(Lcom/google/common/collect/BiMap;)LConverter;$B)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.net.InternetDomainNameTest.testToString() ************************
*Commit: commit 5313166b8407e06bf63c8fea4531bd57c3039f54 1387395894 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.net.InternetDomainName.from(java.lang.String)
com.google.common.base.Ascii.toLowerCase(java.lang.String)
java.lang.String.replaceAll(java.lang.String, java.lang.String)
java.lang.String.endsWith(java.lang.String)
java.lang.String.length()
java.lang.String.substring(I, I)
com.google.common.net.InternetDomainName.toString()
assertEquals
Chamada: com.google.common.net.InternetDomainName.from(java.lang.String)
Situação: Primeira Chamada
Chamada: com.google.common.base.Ascii.toLowerCase(java.lang.String)
Situação: Manual
Chamada: java.lang.String.replaceAll(java.lang.String, java.lang.String)
Situação: Manual
Chamada: java.lang.String.endsWith(java.lang.String)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.String.substring(I, I)
Situação: Manual
Chamada: com.google.common.net.InternetDomainName.toString()
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.String.length()
Inútil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$BiMapConverter.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$BiMapConverter$(Lcom/google/common/collect/BiMap;Ljava/lang/Object;)Ljava/lang/Object;$X) ************************
*Commit: commit 4d75431608106c4e7a25bff35e22d2474ed30689 1387395894 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Chamada: java.util.Map.get(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps$BiMapConverter.convert(com.google.common.collect.BiMap, com.google.common.collect.Maps$BiMapConverter$(Lcom/google/common/collect/BiMap;Ljava/lang/Object;)Ljava/lang/Object;$X) ************************
*Commit: commit 4d75431608106c4e7a25bff35e22d2474ed30689 1387395894 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Chamada: java.util.Map.get(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys.treeSetValues() ************************
*Commit: commit 2a8a6a72d8f274d2b77e3b092197288bb5cebf86 1387492514 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys.treeSetValues(java.util.Comparator)
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys.treeSetValues(java.util.Comparator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MultimapBuilder.treeKeys() ************************
*Commit: commit 2a8a6a72d8f274d2b77e3b092197288bb5cebf86 1387492514 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.MultimapBuilder.treeKeys(java.util.Comparator)
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: com.google.common.collect.MultimapBuilder.treeKeys(java.util.Comparator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.hash.HashingInputStream.HashingInputStream(com.google.common.hash.HashFunction, java.io.InputStream) ************************
*Commit: commit 1b890d1bd2937634df2c5d57e5d649cca7f16ef3 1387492636 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.io.InputStream)
com.google.common.hash.HashFunction.newHasher()
com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.Hasher)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.io.InputStream)
Situação: Primeira Chamada
Chamada: com.google.common.hash.HashFunction.newHasher()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.Hasher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.hash.Hasher.hash()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.hash.HashingOutputStream.HashingOutputStream(com.google.common.hash.HashFunction, java.io.OutputStream) ************************
*Commit: commit 1b890d1bd2937634df2c5d57e5d649cca7f16ef3 1387492636 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.io.OutputStream)
com.google.common.hash.HashFunction.newHasher()
com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.Hasher)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.io.OutputStream)
Situação: Primeira Chamada
Chamada: com.google.common.hash.HashFunction.newHasher()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.Hasher)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.hash.Hasher.hash()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.Converter$FunctionBasedConverter.hashCode() ************************
*Commit: commit 4ab391e4924ef436da8e3d1363bc5d57e3b75514 1388431714 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
java.lang.Object.hashCode()
Chamada: java.lang.Object.hashCode()
Situação: Primeira Chamada
Chamada: java.lang.Object.hashCode()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.lang.Object.hashCode()
Útil
Método: com.google.common.collect.Hashing.smear(I)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.base.Converter$FunctionBasedConverter.FunctionBasedConverter(com.google.common.base.Function, com.google.common.base.Function) ************************
*Commit: commit 4ab391e4924ef436da8e3d1363bc5d57e3b75514 1388431714 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Function)
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Function)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Function)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Function)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Function.apply(null)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.util.concurrent.Striped$LargeLazyStriped.getAt(I) ************************
*Commit: commit 6a122f12efebc6c79e539b2ede91514eb2e21103 1390610337 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.util.concurrent.Striped$LargeLazyStriped.size()
com.google.common.base.Preconditions.checkElementIndex(I, I)
java.util.Map.get(java.lang.Object)
com.google.common.base.Supplier.get()
java.util.concurrent.ConcurrentMap.putIfAbsent(java.lang.Integer, com.google.common.util.concurrent.Striped$LargeLazyStriped$L)
com.google.common.base.Objects.firstNonNull(com.google.common.util.concurrent.Striped$LargeLazyStriped$L, com.google.common.util.concurrent.Striped$LargeLazyStriped$L)
Chamada: com.google.common.util.concurrent.Striped$LargeLazyStriped.size()
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkElementIndex(I, I)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: com.google.common.base.Supplier.get()
Situação: Manual
Chamada: java.util.concurrent.ConcurrentMap.putIfAbsent(java.lang.Integer, com.google.common.util.concurrent.Striped$LargeLazyStriped$L)
Situação: Manual
Chamada: com.google.common.base.Objects.firstNonNull(com.google.common.util.concurrent.Striped$LargeLazyStriped$L, com.google.common.util.concurrent.Striped$LargeLazyStriped$L)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.util.concurrent.Striped$SmallLazyStriped.getAt(I) ************************
*Commit: commit 6a122f12efebc6c79e539b2ede91514eb2e21103 1390610337 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.util.concurrent.Striped$SmallLazyStriped.size()
com.google.common.base.Preconditions.checkElementIndex(I, I)
java.util.concurrent.atomic.AtomicReferenceArray.get(I)
java.lang.ref.Reference.get()
com.google.common.base.Supplier.get()
java.util.concurrent.atomic.AtomicReferenceArray.compareAndSet(I, com.google.common.util.concurrent.Striped$SmallLazyStriped$ArrayReference, com.google.common.util.concurrent.Striped$SmallLazyStriped$ArrayReference)
java.util.concurrent.atomic.AtomicReferenceArray.get(I)
java.lang.ref.Reference.get()
com.google.common.util.concurrent.Striped$SmallLazyStriped.drainQueue()
Chamada: com.google.common.util.concurrent.Striped$SmallLazyStriped.size()
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkElementIndex(I, I)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicReferenceArray.get(I)
Situação: Manual
Chamada: java.lang.ref.Reference.get()
Situação: Manual
Chamada: com.google.common.base.Supplier.get()
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicReferenceArray.compareAndSet(I, com.google.common.util.concurrent.Striped$SmallLazyStriped$ArrayReference, com.google.common.util.concurrent.Striped$SmallLazyStriped$ArrayReference)
Situação: Manual
Chamada: java.util.concurrent.atomic.AtomicReferenceArray.get(I)
Situação: Manual
Chamada: java.lang.ref.Reference.get()
Situação: Manual
Chamada: com.google.common.util.concurrent.Striped$SmallLazyStriped.drainQueue()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Equivalence.equivalent(java.lang.Object, java.lang.Object)
Inútil
Método: com.google.common.cache.LocalCache$ReferenceEntry.getNext()
Inútil
Método: com.google.common.collect.MapMakerInternalMap$ReferenceEntry.getNext()
Inútil
Método: java.util.concurrent.locks.ReentrantLock.unlock()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.primitives.Ints.tryParse(java.lang.String, I) ************************
*Commit: commit af5afeffaddbd3de5b44d3f1b49c2462e19795f8 1391193115 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.isEmpty()
java.lang.String.charAt(I)
java.lang.String.length()
java.lang.String.charAt(I)
com.google.common.primitives.Ints.digit(C)
java.lang.String.length()
java.lang.String.charAt(I)
com.google.common.primitives.Ints.digit(C)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.String.isEmpty()
Situação: Manual
Chamada: java.lang.String.charAt(I)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.17647002952703322
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.primitives.Ints.digit(C)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.primitives.Ints.digit(C)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.4
F-Measure: 0.4444444444444445
************************ Método Avaliado: com.google.common.reflect.TypeResolver$TypeMappingIntrospector.map(com.google.common.reflect.TypeResolver$TypeVariableKey, java.lang.reflect.Type) ************************
*Commit: commit 5f913f5e6411698a4e50a0593ea4db4632e2c912 1391449378 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.containsKey(java.lang.Object)
com.google.common.reflect.TypeResolver$TypeVariableKey.forLookup(java.lang.reflect.Type)
java.util.Map.get(java.lang.Object)
com.google.common.reflect.TypeResolver$TypeVariableKey.equalsType(java.lang.reflect.Type)
com.google.common.reflect.TypeResolver$TypeVariableKey.forLookup(java.lang.reflect.Type)
java.util.Map.remove(java.lang.Object)
java.util.Map.put(com.google.common.reflect.TypeResolver$TypeVariableKey, java.lang.reflect.Type)
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.reflect.TypeResolver$TypeVariableKey.forLookup(java.lang.reflect.Type)
Situação: Manual
Chamada: java.util.Map.get(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1904757785716551
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.reflect.TypeResolver$TypeVariableKey.equalsType(java.lang.reflect.Type)
Situação: Manual
Chamada: com.google.common.reflect.TypeResolver$TypeVariableKey.forLookup(java.lang.reflect.Type)
Situação: Manual
Chamada: java.util.Map.remove(java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.16666666666666666
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map.put(com.google.common.reflect.TypeResolver$TypeVariableKey, java.lang.reflect.Type)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Útil
Método: java.util.Map.get(java.lang.Object)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.6666666666666666
F-Measure: 0.4444444444444444
************************ Método Avaliado: com.google.common.reflect.TypeResolver$TypeVariableKey.equalsTypeVariable(java.lang.reflect.TypeVariable) ************************
*Commit: commit 5f913f5e6411698a4e50a0593ea4db4632e2c912 1391449378 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.reflect.TypeVariable.getGenericDeclaration()
java.lang.reflect.TypeVariable.getGenericDeclaration()
java.lang.Object.equals(java.lang.Object)
java.lang.reflect.TypeVariable.getName()
java.lang.reflect.TypeVariable.getName()
java.lang.String.equals(java.lang.Object)
Chamada: java.lang.reflect.TypeVariable.getGenericDeclaration()
Situação: Primeira Chamada
Chamada: java.lang.reflect.TypeVariable.getGenericDeclaration()
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: java.lang.reflect.TypeVariable.getName()
Situação: Manual
Chamada: java.lang.reflect.TypeVariable.getName()
Situação: Manual
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.util.concurrent.MoreExecutors.shutdownAndAwaitTermination(java.util.concurrent.ExecutorService, J, java.util.concurrent.TimeUnit) ************************
*Commit: commit ff9bf6d8eee80fcee46bdb3da4fdbd00d8381d44 1392320001 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.util.concurrent.TimeUnit)
java.util.concurrent.ExecutorService.shutdown()
java.util.concurrent.TimeUnit.convert(J, java.util.concurrent.TimeUnit)
java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
java.util.concurrent.ExecutorService.shutdownNow()
java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
java.lang.Thread.currentThread()
java.lang.Thread.interrupt()
java.util.concurrent.ExecutorService.shutdownNow()
java.util.concurrent.ExecutorService.isTerminated()
Chamada: com.google.common.base.Preconditions.checkNotNull(java.util.concurrent.TimeUnit)
Situação: Primeira Chamada
Chamada: java.util.concurrent.ExecutorService.shutdown()
Situação: Manual
Chamada: java.util.concurrent.TimeUnit.convert(J, java.util.concurrent.TimeUnit)
Situação: Manual
Chamada: java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
Situação: Manual
Chamada: java.util.concurrent.ExecutorService.shutdownNow()
Situação: Manual
Chamada: java.util.concurrent.ExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit)
Situação: Manual
Chamada: java.lang.Thread.currentThread()
Situação: Manual
Chamada: java.lang.Thread.interrupt()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00396367
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.concurrent.ExecutorService.shutdownNow()
Situação: Manual
Chamada: java.util.concurrent.ExecutorService.isTerminated()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Thread.interrupt()
Útil
Percentual de Automatização: 0.1111111111111111
Corretude: 1.0
F-Measure: 0.19999999999999998
************************ Método Avaliado: com.google.common.util.concurrent.Futures.inCompletionOrder(java.lang.Iterable) ************************
*Commit: commit 1511c17c0621f3a21921aed4b655c5b1306eaf32 1394735814 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
newConcurrentLinkedQueue
com.google.common.collect.ImmutableList.builder()
com.google.common.util.concurrent.MoreExecutors.sameThreadExecutor()
create
add
com.google.common.util.concurrent.ListenableFuture.addListener(java.lang.Runnable, java.util.concurrent.Executor)
remove
setFuture
com.google.common.collect.ImmutableList$Builder.add(com.google.common.util.concurrent.ListenableFuture)
com.google.common.collect.ImmutableList$Builder.build()
Chamada: newConcurrentLinkedQueue
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.builder()
Situação: Manual
Chamada: com.google.common.util.concurrent.MoreExecutors.sameThreadExecutor()
Situação: Manual
Chamada: create
Situação: Manual
Chamada: add
Situação: Manual
Chamada: com.google.common.util.concurrent.ListenableFuture.addListener(java.lang.Runnable, java.util.concurrent.Executor)
Situação: Manual
Chamada: remove
Situação: Manual
Chamada: setFuture
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.add(com.google.common.util.concurrent.ListenableFuture)
Situação: Manual
Chamada: com.google.common.collect.ImmutableList$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.ImmutableList$Builder.build()
Útil
Percentual de Automatização: 0.1111111111111111
Corretude: 1.0
F-Measure: 0.19999999999999998
************************ Método Avaliado: com.google.common.util.concurrent.SerializingExecutor$TaskRunner.run() ************************
*Commit: commit 1511c17c0621f3a21921aed4b655c5b1306eaf32 1394735814 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkState(Z)
java.util.Queue.poll()
java.lang.Runnable.run()
java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)
Chamada: com.google.common.base.Preconditions.checkState(Z)
Situação: Primeira Chamada
Chamada: java.util.Queue.poll()
Situação: Manual
Chamada: java.lang.Runnable.run()
Situação: Manual
Chamada: java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.Converter$FunctionBasedConverter.hashCode() ************************
*Commit: commit b0171601101a650bcfc1e53c88220f6e6a708558 1394735853 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
java.lang.Object.hashCode()
Chamada: java.lang.Object.hashCode()
Situação: Primeira Chamada
Chamada: java.lang.Object.hashCode()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.lang.Object.hashCode()
Útil
Método: com.google.common.collect.Hashing.smear(I)
Inútil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.base.Converter$FunctionBasedConverter.FunctionBasedConverter(com.google.common.base.Function, com.google.common.base.Function) ************************
*Commit: commit b0171601101a650bcfc1e53c88220f6e6a708558 1394735853 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Function)
com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Function)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Function)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.base.Function)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Function.apply(null)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.Enums.getEnumConstants(java.lang.Class) ************************
*Commit: commit 965c296fb6fb394e9724b9056bfb95d2e1080e4d 1395452762 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
com.google.common.base.Enums.populateCache(java.lang.Class)
Chamada: java.util.Map.get(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.base.Enums.populateCache(java.lang.Class)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.hash.BloomFilter.create(com.google.common.hash.Funnel, I, D, com.google.common.hash.BloomFilter$Strategy) ************************
*Commit: commit 6de004aebed935dfa060e76e1c2db23041ae3df5 1395453072 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.Funnel)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.BloomFilter$Strategy)
com.google.common.hash.BloomFilter.optimalNumOfBits(J, D)
com.google.common.hash.BloomFilter.optimalNumOfHashFunctions(J, J)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.Funnel)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2342335806240454
Suporte: 0.00429397
F-Measure Suporte e Confiança: 0.009
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2342335806240454
Suporte: 0.00429397
F-Measure Suporte e Confiança: 0.009
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.BloomFilter$Strategy)
Situação: Manual
Chamada: com.google.common.hash.BloomFilter.optimalNumOfBits(J, D)
Situação: Manual
Chamada: com.google.common.hash.BloomFilter.optimalNumOfHashFunctions(J, J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.util.concurrent.ListenerCallQueue.run() ************************
*Commit: commit e6888aadc42b1f3181a09b5c18a55f65218d5a0d 1396290254 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkState(Z)
java.util.Queue.poll()
com.google.common.util.concurrent.ListenerCallQueue$Callback.call(com.google.common.util.concurrent.ListenerCallQueue$L)
java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)
Chamada: com.google.common.base.Preconditions.checkState(Z)
Situação: Primeira Chamada
Chamada: java.util.Queue.poll()
Situação: Manual
Chamada: com.google.common.util.concurrent.ListenerCallQueue$Callback.call(com.google.common.util.concurrent.ListenerCallQueue$L)
Situação: Manual
Chamada: java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.util.concurrent.RateLimiter.createWithCapacity(com.google.common.util.concurrent.RateLimiter$SleepingStopwatch, D, J, java.util.concurrent.TimeUnit) ************************
*Commit: commit 07f99e57570b6e81d89c86f4f36fb9a6784d34b3 1397768171 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.TimeUnit.toNanos(J)
com.google.common.util.concurrent.RateLimiter.setRate(D)
Chamada: java.util.concurrent.TimeUnit.toNanos(J)
Situação: Primeira Chamada
Chamada: com.google.common.util.concurrent.RateLimiter.setRate(D)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Thread.currentThread()
Inútil
Método: java.lang.System.nanoTime()
Inútil
Método: java.lang.Thread.interrupt()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.primitives.Ints.tryParse(java.lang.String, I) ************************
*Commit: commit 14d8ae4015e5e686f45d428c7e1879e689f818ff 1399500494 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.String)
java.lang.String.isEmpty()
java.lang.String.charAt(I)
java.lang.String.length()
java.lang.String.charAt(I)
com.google.common.primitives.Ints.digit(C)
java.lang.String.length()
java.lang.String.charAt(I)
com.google.common.primitives.Ints.digit(C)
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.String.isEmpty()
Situação: Manual
Chamada: java.lang.String.charAt(I)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.17647002952703322
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.primitives.Ints.digit(C)
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.String.charAt(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4250004919687986
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: com.google.common.primitives.Ints.digit(C)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Inútil
Método: java.lang.String.charAt(I)
Útil
Percentual de Automatização: 0.5
Corretude: 0.4
F-Measure: 0.4444444444444445
************************ Método Avaliado: com.google.common.util.concurrent.Uninterruptibles.tryAcquireUninterruptibly(java.util.concurrent.Semaphore, I, J, java.util.concurrent.TimeUnit) ************************
*Commit: commit 7811f97b5dd9b75762f6868a8b0098d826139332 1400007956 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.TimeUnit.toNanos(J)
java.lang.System.nanoTime()
java.util.concurrent.Semaphore.tryAcquire(I, J, java.util.concurrent.TimeUnit)
java.lang.System.nanoTime()
java.lang.Thread.currentThread()
java.lang.Thread.interrupt()
Chamada: java.util.concurrent.TimeUnit.toNanos(J)
Situação: Primeira Chamada
Chamada: java.lang.System.nanoTime()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.4545462051654667
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.concurrent.Semaphore.tryAcquire(I, J, java.util.concurrent.TimeUnit)
Situação: Manual
Chamada: java.lang.System.nanoTime()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9285726642850347
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.Thread.currentThread()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.3181820683884889
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.Thread.interrupt()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3181820683884889
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.lang.Thread.currentThread()
Útil
Método: java.lang.System.nanoTime()
Útil
Método: java.lang.Thread.interrupt()
Útil
Percentual de Automatização: 0.8
Corretude: 1.0
F-Measure: 0.888888888888889
************************ Método Avaliado: com.google.common.collect.MultisetsTest.testRemoveOccurrencesMultisetEmpty() ************************
*Commit: commit 050aca81c004448a4a86c2541466828e83d12ffb 1402512714 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashMultiset.create()
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.HashMultiset.create(java.lang.Iterable)
com.google.common.collect.Multisets.retainOccurrences(com.google.common.collect.Multiset, com.google.common.collect.Multiset)
assertFalse
java.util.Collection.isEmpty()
assertTrue
Chamada: com.google.common.collect.HashMultiset.create()
Situação: Primeira Chamada
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.HashMultiset.create(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Multisets.retainOccurrences(com.google.common.collect.Multiset, com.google.common.collect.Multiset)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.MultisetsTest.testRemoveOccurrencesIterableEmpty() ************************
*Commit: commit 050aca81c004448a4a86c2541466828e83d12ffb 1402512714 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashMultiset.create()
java.util.Arrays.asList([Ljava.lang.String;)
com.google.common.collect.Multisets.removeOccurrences(com.google.common.collect.Multiset, com.google.common.collect.Multiset)
assertFalse
java.util.Collection.isEmpty()
assertTrue
Chamada: com.google.common.collect.HashMultiset.create()
Situação: Primeira Chamada
Chamada: java.util.Arrays.asList([Ljava.lang.String;)
Situação: Manual
Chamada: com.google.common.collect.Multisets.removeOccurrences(com.google.common.collect.Multiset, com.google.common.collect.Multiset)
Situação: Manual
Chamada: assertFalse
Situação: Manual
Chamada: java.util.Collection.isEmpty()
Situação: Manual
Chamada: assertTrue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Multisets.removeOccurrencesImpl(com.google.common.collect.Multiset, java.lang.Iterable) ************************
*Commit: commit 050aca81c004448a4a86c2541466828e83d12ffb 1402512714 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multiset)
com.google.common.base.Preconditions.checkNotNull(java.lang.Iterable)
com.google.common.collect.Multiset.remove(java.lang.Object)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multiset)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.Iterable)
Situação: Manual
Chamada: com.google.common.collect.Multiset.remove(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Multiset$Entry.getElement()
Inútil
Método: com.google.common.collect.Multiset.entrySet()
Inútil
Método: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.Multiset)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: com.google.common.collect.Multiset.count(java.lang.Object)
Inútil
Método: java.lang.Iterable.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.base.MoreObjects$ToStringHelper.toString() ************************
*Commit: commit 39534cb20b1ae63e5a516ceacd9ba71fddeaa8c5 1403130468 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.append(java.lang.Object)
java.lang.StringBuilder.append(C)
java.lang.StringBuilder.toString()
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Primeira Chamada
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5227268974172666
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.3863641367769778
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5714285714285713
Suporte: 0.00462428
F-Measure Suporte e Confiança: 0.010
Chamada: java.lang.StringBuilder.append(java.lang.Object)
Situação: Manual
Chamada: java.lang.StringBuilder.append(C)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.5833345947937008
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090910341942444
Suporte: 0.00660611
F-Measure Suporte e Confiança: 0.014
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Útil
Método: java.lang.StringBuilder.append(java.lang.String)
Útil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.7142857142857143
Corretude: 1.0
F-Measure: 0.8333333333333333
************************ Método Avaliado: com.google.common.util.concurrent.MoreExecutors$DirectExecutorService.endTask() ************************
*Commit: commit 10695e272674ce32fe6a6486c2904a65ef3db4b1 1405543963 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.locks.Lock.lock()
com.google.common.util.concurrent.MoreExecutors$DirectExecutorService.isTerminated()
java.util.concurrent.locks.Condition.signalAll()
java.util.concurrent.locks.Lock.unlock()
Chamada: java.util.concurrent.locks.Lock.lock()
Situação: Primeira Chamada
Chamada: com.google.common.util.concurrent.MoreExecutors$DirectExecutorService.isTerminated()
Situação: Manual
Chamada: java.util.concurrent.locks.Condition.signalAll()
Situação: Manual
Chamada: java.util.concurrent.locks.Lock.unlock()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.concurrent.locks.Lock.unlock()
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.util.concurrent.MoreExecutors$DirectExecutorService.isShutdown() ************************
*Commit: commit 10695e272674ce32fe6a6486c2904a65ef3db4b1 1405543963 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.locks.Lock.lock()
java.util.concurrent.locks.Lock.unlock()
Chamada: java.util.concurrent.locks.Lock.lock()
Situação: Primeira Chamada
Chamada: java.util.concurrent.locks.Lock.unlock()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.concurrent.locks.Lock.unlock()
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: com.google.common.util.concurrent.MoreExecutors$DirectExecutorService.isTerminated() ************************
*Commit: commit 10695e272674ce32fe6a6486c2904a65ef3db4b1 1405543963 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.locks.Lock.lock()
java.util.concurrent.locks.Lock.unlock()
Chamada: java.util.concurrent.locks.Lock.lock()
Situação: Primeira Chamada
Chamada: java.util.concurrent.locks.Lock.unlock()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.concurrent.locks.Lock.unlock()
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: com.google.common.util.concurrent.MoreExecutors$DirectExecutorService.awaitTermination(J, java.util.concurrent.TimeUnit) ************************
*Commit: commit 10695e272674ce32fe6a6486c2904a65ef3db4b1 1405543963 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.TimeUnit.toNanos(J)
java.util.concurrent.locks.Lock.lock()
com.google.common.util.concurrent.MoreExecutors$DirectExecutorService.isTerminated()
java.util.concurrent.locks.Condition.awaitNanos(J)
java.util.concurrent.locks.Lock.unlock()
Chamada: java.util.concurrent.TimeUnit.toNanos(J)
Situação: Primeira Chamada
Chamada: java.util.concurrent.locks.Lock.lock()
Situação: Manual
Chamada: com.google.common.util.concurrent.MoreExecutors$DirectExecutorService.isTerminated()
Situação: Manual
Chamada: java.util.concurrent.locks.Condition.awaitNanos(J)
Situação: Manual
Chamada: java.util.concurrent.locks.Lock.unlock()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.concurrent.locks.Lock.unlock()
Útil
Método: java.lang.Thread.currentThread()
Inútil
Método: java.lang.System.nanoTime()
Inútil
Método: java.lang.Thread.interrupt()
Inútil
Percentual de Automatização: 0.25
Corretude: 0.25
F-Measure: 0.25
************************ Método Avaliado: com.google.common.util.concurrent.MoreExecutors$DirectExecutorService.shutdown() ************************
*Commit: commit 10695e272674ce32fe6a6486c2904a65ef3db4b1 1405543963 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.locks.Lock.lock()
java.util.concurrent.locks.Lock.unlock()
Chamada: java.util.concurrent.locks.Lock.lock()
Situação: Primeira Chamada
Chamada: java.util.concurrent.locks.Lock.unlock()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.concurrent.locks.Lock.unlock()
Útil
Percentual de Automatização: 1.0
Corretude: 1.0
F-Measure: 1.0
************************ Método Avaliado: com.google.common.util.concurrent.MoreExecutors$DirectExecutorService.startTask() ************************
*Commit: commit 10695e272674ce32fe6a6486c2904a65ef3db4b1 1405543963 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.concurrent.locks.Lock.lock()
com.google.common.util.concurrent.MoreExecutors$DirectExecutorService.isShutdown()
java.util.concurrent.locks.Lock.unlock()
Chamada: java.util.concurrent.locks.Lock.lock()
Situação: Primeira Chamada
Chamada: com.google.common.util.concurrent.MoreExecutors$DirectExecutorService.isShutdown()
Situação: Manual
Chamada: java.util.concurrent.locks.Lock.unlock()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 1.0
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.concurrent.locks.Lock.unlock()
Útil
Percentual de Automatização: 0.5
Corretude: 1.0
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.util.concurrent.ServiceManager$ServiceManagerState.tryStartTiming(com.google.common.util.concurrent.Service) ************************
*Commit: commit 150713cb8346a20c89c6bb1a23176942ee7beafc 1406579293 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.util.concurrent.Monitor.enter()
java.util.Map.get(java.lang.Object)
createStarted
java.util.Map.put(com.google.common.util.concurrent.Service, com.google.common.base.Stopwatch)
com.google.common.util.concurrent.Monitor.leave()
Chamada: com.google.common.util.concurrent.Monitor.enter()
Situação: Primeira Chamada
Chamada: java.util.Map.get(java.lang.Object)
Situação: Manual
Chamada: createStarted
Situação: Manual
Chamada: java.util.Map.put(com.google.common.util.concurrent.Service, com.google.common.base.Stopwatch)
Situação: Manual
Chamada: com.google.common.util.concurrent.Monitor.leave()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.net.InetAddresses.decrement(java.net.InetAddress) ************************
*Commit: commit d39130651d8a90f5ebe066de7f0b2311806e5152 1406579293 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.net.InetAddress.getAddress()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.net.InetAddresses.bytesToInetAddress([B)
Chamada: java.net.InetAddress.getAddress()
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.net.InetAddresses.bytesToInetAddress([B)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.eventbus.SubscriberRegistry.getAnnotatedMethodsNotCached(java.lang.Class) ************************
*Commit: commit 7c85e1303b7a506d500652d608329adf5dd90813 1407271082 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.reflect.TypeToken.of(java.lang.Class)
com.google.common.reflect.TypeToken.getTypes()
com.google.common.reflect.TypeToken$TypeSet.rawTypes()
com.google.common.collect.Maps.newHashMap()
java.lang.Class.getDeclaredMethods()
java.lang.reflect.AccessibleObject.isAnnotationPresent(java.lang.Class)
java.lang.reflect.Method.isSynthetic()
java.lang.reflect.Method.getParameterTypes()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.util.Map.containsKey(java.lang.Object)
java.util.Map.put(com.google.common.eventbus.SubscriberRegistry$MethodIdentifier, java.lang.reflect.Method)
java.util.Map.values()
com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
Chamada: com.google.common.reflect.TypeToken.of(java.lang.Class)
Situação: Primeira Chamada
Chamada: com.google.common.reflect.TypeToken.getTypes()
Situação: Manual
Chamada: com.google.common.reflect.TypeToken$TypeSet.rawTypes()
Situação: Manual
Chamada: com.google.common.collect.Maps.newHashMap()
Situação: Manual
Chamada: java.lang.Class.getDeclaredMethods()
Situação: Manual
Chamada: java.lang.reflect.AccessibleObject.isAnnotationPresent(java.lang.Class)
Situação: Manual
Chamada: java.lang.reflect.Method.isSynthetic()
Situação: Manual
Chamada: java.lang.reflect.Method.getParameterTypes()
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: java.util.Map.containsKey(java.lang.Object)
Situação: Manual
Chamada: java.util.Map.put(com.google.common.eventbus.SubscriberRegistry$MethodIdentifier, java.lang.reflect.Method)
Situação: Manual
Chamada: java.util.Map.values()
Situação: Manual
Chamada: com.google.common.collect.ImmutableList.copyOf(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map.remove(java.lang.Object)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map.get(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: getSubscribers ************************
*Commit: commit 7c85e1303b7a506d500652d608329adf5dd90813 1407271082 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.getClass()
com.google.common.eventbus.SubscriberRegistry.flattenHierarchy(java.lang.Class)
java.util.Set.size()
newArrayListWithCapacity
get
iterator
add
iterator
com.google.common.collect.Iterators.concat([Ljava.util.Iterator;)
Chamada: java.lang.Object.getClass()
Situação: Primeira Chamada
Chamada: com.google.common.eventbus.SubscriberRegistry.flattenHierarchy(java.lang.Class)
Situação: Manual
Chamada: java.util.Set.size()
Situação: Manual
Chamada: newArrayListWithCapacity
Situação: Manual
Chamada: get
Situação: Manual
Chamada: iterator
Situação: Manual
Chamada: add
Situação: Manual
Chamada: iterator
Situação: Manual
Chamada: com.google.common.collect.Iterators.concat([Ljava.util.Iterator;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Set.size()
Inútil
Método: java.util.Set.iterator()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.eventbus.SubscriberRegistry$MethodIdentifier.equals(java.lang.Object) ************************
*Commit: commit 7c85e1303b7a506d500652d608329adf5dd90813 1407271082 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.String.equals(java.lang.Object)
java.util.List.equals(java.lang.Object)
Chamada: java.lang.String.equals(java.lang.Object)
Situação: Primeira Chamada
Chamada: java.util.List.equals(java.lang.Object)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.String.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.io.ByteSource$ByteArrayByteSource.truncate(java.lang.CharSequence, I, java.lang.String) ************************
*Commit: commit 6c9f886357a277e0fde19b87556eb7c0fa617e14 1409831465 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
java.lang.String.length()
java.lang.String.length()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.CharSequence.length()
java.lang.CharSequence.toString()
java.lang.String.length()
java.lang.StringBuilder.append(java.lang.CharSequence, I, I)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.toString()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1904757785716551
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.StringBuilder.append(java.lang.CharSequence, I, I)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3500002270625224
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Útil
Método: java.lang.CharSequence.toString()
Útil
Método: java.lang.CharSequence.charAt(I)
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.4444444444444444
Corretude: 0.375
F-Measure: 0.4067796610169491
************************ Método Avaliado: com.google.common.io.CharSource$CharSequenceCharSource.truncate(java.lang.CharSequence, I, java.lang.String) ************************
*Commit: commit 6c9f886357a277e0fde19b87556eb7c0fa617e14 1409831465 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
java.lang.String.length()
java.lang.String.length()
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
java.lang.CharSequence.length()
java.lang.CharSequence.toString()
java.lang.String.length()
java.lang.StringBuilder.append(java.lang.CharSequence, I, I)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
Chamada: com.google.common.base.Preconditions.checkNotNull(java.lang.CharSequence)
Situação: Primeira Chamada
Chamada: java.lang.String.length()
Situação: Manual
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: java.lang.CharSequence.length()
Situação: Manual
Chamada: java.lang.CharSequence.toString()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.1904757785716551
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: java.lang.String.length()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.32500064334381357
Suporte: 0.00214699
F-Measure Suporte e Confiança: 0.005
Chamada: java.lang.StringBuilder.append(java.lang.CharSequence, I, I)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.3500002270625224
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Inútil
Método: com.google.common.base.CharMatcher.matches(C)
Inútil
Método: java.lang.String.length()
Útil
Método: java.lang.StringBuilder.toString()
Útil
Método: java.lang.CharSequence.toString()
Útil
Método: java.lang.CharSequence.charAt(I)
Inútil
Método: java.lang.String.charAt(I)
Inútil
Percentual de Automatização: 0.4444444444444444
Corretude: 0.375
F-Measure: 0.4067796610169491
************************ Método Avaliado: ofEntries ************************
*Commit: commit f2fb1352a5ee1b808635f699b93311698d9c5bef 1411502654 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Ordering.natural()
com.google.common.collect.ImmutableSortedMap.fromEntries(java.util.Comparator, Z, [Ljava.util.Map$Entry;, I)
Chamada: com.google.common.collect.Ordering.natural()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSortedMap.fromEntries(java.util.Comparator, Z, [Ljava.util.Map$Entry;, I)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Arrays.asList([Ljava.lang.Comparable;)
Inútil
Método: com.google.common.collect.Ordering.natural()
Inútil
Método: com.google.common.collect.ImmutableSortedSet.copyOf(java.util.Comparator, java.util.Collection)
Inútil
Método: com.google.common.collect.ImmutableSortedMultiset.copyOf(java.util.Comparator, java.lang.Iterable)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableSortedMap.fromEntries(java.util.Comparator, Z, [Ljava.util.Map$Entry;, I) ************************
*Commit: commit f2fb1352a5ee1b808635f699b93311698d9c5bef 1411502654 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSortedMap.emptyMap(java.util.Comparator)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableSortedMap.of(java.util.Comparator, com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;Z[Ljava/util/Map$Entry;I)Lcom/google/common/collect/ImmutableSortedMap;$K, com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;Z[Ljava/util/Map$Entry;I)Lcom/google/common/collect/ImmutableSortedMap;$V)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
checkEntryNotNull
com.google.common.collect.Ordering.from(java.util.Comparator)
onKeys
java.util.Arrays.sort([Ljava.util.Map$Entry;, I, I, java.util.Comparator)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
checkEntryNotNull
java.util.Comparator.compare(null, null)
checkNoConflict
Chamada: com.google.common.collect.ImmutableSortedMap.emptyMap(java.util.Comparator)
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.ImmutableSortedMap.of(java.util.Comparator, com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;Z[Ljava/util/Map$Entry;I)Lcom/google/common/collect/ImmutableSortedMap;$K, com.google.common.collect.ImmutableSortedMap$(Ljava/util/Comparator;Z[Ljava/util/Map$Entry;I)Lcom/google/common/collect/ImmutableSortedMap;$V)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: checkEntryNotNull
Situação: Manual
Chamada: com.google.common.collect.Ordering.from(java.util.Comparator)
Situação: Manual
Chamada: onKeys
Situação: Manual
Chamada: java.util.Arrays.sort([Ljava.util.Map$Entry;, I, I, java.util.Comparator)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09497231270909232
Suporte: 0.0028076
F-Measure Suporte e Confiança: 0.006
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.08376944097488602
Suporte: 0.00264244
F-Measure Suporte e Confiança: 0.006
Chamada: checkEntryNotNull
Situação: Manual
Chamada: java.util.Comparator.compare(null, null)
Situação: Manual
Chamada: checkNoConflict
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: com.google.common.collect.Ordering.reverse()
Inútil
Método: java.util.Map$Entry.getKey()
Útil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.4375
Corretude: 0.3333333333333333
F-Measure: 0.37837837837837834
************************ Método Avaliado: com.google.common.collect.Lists.indexMap(java.util.Collection) ************************
*Commit: commit 8061999c2ae5a914ae765c1bdc373b9cc4ee70d0 1411502655 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.size()
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.Lists$(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableMap;$E, java.lang.Integer)
com.google.common.collect.ImmutableMap$Builder.build()
Chamada: java.util.Collection.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.Lists$(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableMap;$E, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Lists.indexMap(java.util.Collection) ************************
*Commit: commit 8061999c2ae5a914ae765c1bdc373b9cc4ee70d0 1411502655 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.size()
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.Lists$(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableMap;$E, java.lang.Integer)
com.google.common.collect.ImmutableMap$Builder.build()
Chamada: java.util.Collection.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.Lists$(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableMap;$E, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet.iterator() ************************
*Commit: commit c2748c69b3a77f55990486130a139a161b3e12b2 1411563581 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.ImmutableMapEntrySet$RegularEntrySet.iterator() ************************
*Commit: commit c2748c69b3a77f55990486130a139a161b3e12b2 1411563581 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableCollection.asList()
com.google.common.collect.ImmutableList.iterator()
Chamada: com.google.common.collect.ImmutableCollection.asList()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableList.iterator()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.2857136678574827
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: java.util.List.get(I)
Inútil
Método: com.google.common.collect.ImmutableList.iterator()
Útil
Percentual de Automatização: 1.0
Corretude: 0.5
F-Measure: 0.6666666666666666
************************ Método Avaliado: com.google.common.collect.ImmutableMap.copyOfEnumMap(java.util.EnumMap) ************************
*Commit: commit 544b57a25702ee58b9b87c3673b8748352a429e3 1411563584 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.EnumMap.entrySet()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
checkEntryNotNull
com.google.common.collect.ImmutableEnumMap.asImmutable(java.util.EnumMap)
Chamada: java.util.EnumMap.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: checkEntryNotNull
Situação: Manual
Chamada: com.google.common.collect.ImmutableEnumMap.asImmutable(java.util.EnumMap)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: checkNoConflictInValueBucket ************************
*Commit: commit 842efacbd00611778a4b33d917be6f71542259a8 1411565463 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getNextInValueBucket
getValue
java.lang.Object.equals(java.lang.Object)
checkNoConflict
Chamada: getNextInValueBucket
Situação: Primeira Chamada
Chamada: getValue
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: checkNoConflict
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: get ************************
*Commit: commit 842efacbd00611778a4b33d917be6f71542259a8 1411565463 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.lang.Object.hashCode()
com.google.common.collect.Hashing.smear(I)
getNextInKeyBucket
getKey
java.lang.Object.equals(java.lang.Object)
getValue
Chamada: java.lang.Object.hashCode()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Hashing.smear(I)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.1923080505918765
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: getNextInKeyBucket
Situação: Manual
Chamada: getKey
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: getValue
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Método: java.lang.Object.hashCode()
Inútil
Método: com.google.common.collect.Hashing.smear(I)
Útil
Percentual de Automatização: 0.2
Corretude: 0.3333333333333333
F-Measure: 0.25
************************ Método Avaliado: checkNoConflictInKeyBucket ************************
*Commit: commit 842efacbd00611778a4b33d917be6f71542259a8 1411565463 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
getNextInKeyBucket
getKey
java.lang.Object.equals(java.lang.Object)
checkNoConflict
Chamada: getNextInKeyBucket
Situação: Primeira Chamada
Chamada: getKey
Situação: Manual
Chamada: java.lang.Object.equals(java.lang.Object)
Situação: Manual
Chamada: checkNoConflict
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.Object.equals(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets.entryIterator() ************************
*Commit: commit 055f93996fe9dba92972a7a1742b182fd80ed133 1412002416 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableSet.of(com.google.common.collect.ImmutableMap$V)
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.750001513752441
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8750018921905511
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5624990539047245
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableSet.of(com.google.common.collect.ImmutableMap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.ImmutableSet.iterator()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.8333333333333334
Corretude: 0.8333333333333334
F-Measure: 0.8333333333333334
************************ Método Avaliado: com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets.get(java.lang.Object) ************************
*Commit: commit 055f93996fe9dba92972a7a1742b182fd80ed133 1412002416 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.get(java.lang.Object)
com.google.common.collect.ImmutableSet.of(com.google.common.collect.ImmutableMap$V)
Chamada: java.util.Map.get(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.of(com.google.common.collect.ImmutableMap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.Count.get()
Inútil
Método: java.util.Map.remove(java.lang.Object)
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.entryIterator() ************************
*Commit: commit 055f93996fe9dba92972a7a1742b182fd80ed133 1412002416 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.keyToIndex()
java.util.Map.size()
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getValue(I)
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getKey(I)
com.google.common.collect.Maps.immutableEntry(com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$K, com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$V)
com.google.common.collect.AbstractIterator.endOfData()
Chamada: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.keyToIndex()
Situação: Primeira Chamada
Chamada: java.util.Map.size()
Situação: Manual
Chamada: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getValue(I)
Situação: Manual
Chamada: com.google.common.collect.DenseImmutableTable$ImmutableArrayMap.getKey(I)
Situação: Manual
Chamada: com.google.common.collect.Maps.immutableEntry(com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$K, com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$V)
Situação: Manual
Chamada: com.google.common.collect.AbstractIterator.endOfData()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Map.entrySet()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets.entryIterator() ************************
*Commit: commit 055f93996fe9dba92972a7a1742b182fd80ed133 1412002416 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableSet.of(com.google.common.collect.ImmutableMap$V)
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.750001513752441
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8750018921905511
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.5624990539047245
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.ImmutableSet.of(com.google.common.collect.ImmutableMap$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.ImmutableSet.iterator()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.8333333333333334
Corretude: 0.8333333333333334
F-Measure: 0.8333333333333334
************************ Método Avaliado: com.google.common.collect.ImmutableMap.keyIterator() ************************
*Commit: commit 366da0b7956e2ae3e794c0d600d21e5dc7a404f0 1412002930 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.750001513752441
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8750018921905511
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.ImmutableSet.iterator()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.8
F-Measure: 0.888888888888889
************************ Método Avaliado: com.google.common.collect.Maps.unmodifiableEntryIterator(java.util.Iterator) ************************
*Commit: commit 366da0b7956e2ae3e794c0d600d21e5dc7a404f0 1412002930 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Maps.unmodifiableEntry(java.util.Map$Entry)
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.collect.Maps.unmodifiableEntry(java.util.Map$Entry)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.ImmutableEnumMap.keyIterator() ************************
*Commit: commit 366da0b7956e2ae3e794c0d600d21e5dc7a404f0 1412002930 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.EnumMap.keySet()
java.util.Set.iterator()
com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator)
Chamada: java.util.EnumMap.keySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Manual
Chamada: com.google.common.collect.Iterators.unmodifiableIterator(java.util.Iterator)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMap.keyIterator() ************************
*Commit: commit 366da0b7956e2ae3e794c0d600d21e5dc7a404f0 1412002930 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.entrySet()
com.google.common.collect.ImmutableSet.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
java.util.Map$Entry.getKey()
Chamada: com.google.common.collect.ImmutableMap.entrySet()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableSet.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.3750007568762205
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 2
Confiança: 0.750001513752441
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8750018921905511
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Map$Entry.getKey()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6250018921905512
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Útil
Método: com.google.common.collect.ImmutableSet.iterator()
Útil
Método: java.util.Map$Entry.getKey()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 1.0
Corretude: 0.8
F-Measure: 0.888888888888889
************************ Método Avaliado: com.google.common.collect.Maps.unmodifiableEntryIterator(java.util.Iterator) ************************
*Commit: commit 366da0b7956e2ae3e794c0d600d21e5dc7a404f0 1412002930 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.collect.Maps.unmodifiableEntry(java.util.Map$Entry)
Chamada: java.util.Iterator.hasNext()
Situação: Primeira Chamada
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7688450467665082
Suporte: 0.0252684
F-Measure Suporte e Confiança: 0.049
Chamada: com.google.common.collect.Maps.unmodifiableEntry(java.util.Map$Entry)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.5
Corretude: 0.25
F-Measure: 0.3333333333333333
************************ Método Avaliado: com.google.common.collect.Maps.indexMap(java.util.Collection) ************************
*Commit: commit f7e4a609d40d6ff422e5c90c860525b45b526250 1412003827 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.size()
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.Maps$(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableMap;$E, java.lang.Integer)
com.google.common.collect.ImmutableMap$Builder.build()
Chamada: java.util.Collection.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.Maps$(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableMap;$E, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.Maps.indexMap(java.util.Collection) ************************
*Commit: commit f7e4a609d40d6ff422e5c90c860525b45b526250 1412003827 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.size()
com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.Maps$(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableMap;$E, java.lang.Integer)
com.google.common.collect.ImmutableMap$Builder.build()
Chamada: java.util.Collection.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap$Builder.put(com.google.common.collect.Maps$(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableMap;$E, java.lang.Integer)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap$Builder.build()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Collection.clear()
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMap.copyOf(java.lang.Iterable) ************************
*Commit: commit d0a0c8fb1c7df372e617878c1d8414861558637d 1412003977 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableMap.fromEntryList(java.util.Collection)
java.lang.Iterable.iterator()
com.google.common.collect.Lists.newArrayList(java.util.Iterator)
com.google.common.collect.ImmutableMap.fromEntryList(java.util.Collection)
Chamada: com.google.common.collect.ImmutableMap.fromEntryList(java.util.Collection)
Situação: Primeira Chamada
Chamada: java.lang.Iterable.iterator()
Situação: Manual
Chamada: com.google.common.collect.Lists.newArrayList(java.util.Iterator)
Situação: Manual
Chamada: com.google.common.collect.ImmutableMap.fromEntryList(java.util.Collection)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.collect.ImmutableMap.fromEntryList(java.util.Collection) ************************
*Commit: commit d0a0c8fb1c7df372e617878c1d8414861558637d 1412003977 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Collection.size()
com.google.common.collect.ImmutableMap.of()
com.google.common.collect.Iterables.getOnlyElement(java.lang.Iterable)
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.of(com.google.common.collect.ImmutableMap$(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableMap;$K, com.google.common.collect.ImmutableMap$(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableMap;$V)
java.util.Collection.size()
java.util.Collection.toArray([Ljava.util.Map$Entry;)
Chamada: java.util.Collection.size()
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap.of()
Situação: Manual
Chamada: com.google.common.collect.Iterables.getOnlyElement(java.lang.Iterable)
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.ImmutableMap.of(com.google.common.collect.ImmutableMap$(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableMap;$K, com.google.common.collect.ImmutableMap$(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableMap;$V)
Situação: Manual
Chamada: java.util.Collection.size()
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.09859199372324276
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: java.util.Collection.toArray([Ljava.util.Map$Entry;)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.clear()
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: com.google.common.collect.Multiset$Entry.getCount()
Inútil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Collection.size()
Útil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.2857142857142857
Corretude: 0.2222222222222222
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.ImmutableSetMultimapTest$ImmutableSetMultimapGenerator.create([Ljava.util.Map$Entry;) ************************
*Commit: commit d0a0c8fb1c7df372e617878c1d8414861558637d 1412003977 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.ImmutableSetMultimap.builder()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.String)
com.google.common.collect.ImmutableSetMultimap$Builder.build()
Chamada: com.google.common.collect.ImmutableSetMultimap.builder()
Situação: Primeira Chamada
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.put(java.lang.String, java.lang.String)
Situação: Manual
Chamada: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.8571427335714966
Suporte: 9.90917E-4
F-Measure Suporte e Confiança: 0.002
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: com.google.common.collect.ImmutableSetMultimap$Builder.build()
Útil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.5
Corretude: 0.3333333333333333
F-Measure: 0.4
************************ Método Avaliado: com.google.common.collect.ImmutableBiMap.copyOf(java.lang.Iterable) ************************
*Commit: commit d0a0c8fb1c7df372e617878c1d8414861558637d 1412003977 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterables.toArray(java.lang.Iterable, java.lang.Class)
com.google.common.collect.ImmutableBiMap.of()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableBiMap.of(com.google.common.collect.ImmutableBiMap$(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableBiMap;$K, com.google.common.collect.ImmutableBiMap$(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableBiMap;$V)
Chamada: com.google.common.collect.Iterables.toArray(java.lang.Iterable, java.lang.Class)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableBiMap.of()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.ImmutableBiMap.of(com.google.common.collect.ImmutableBiMap$(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableBiMap;$K, com.google.common.collect.ImmutableBiMap$(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableBiMap;$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.collect.ImmutableMap.copyOf(java.lang.Iterable) ************************
*Commit: commit d0a0c8fb1c7df372e617878c1d8414861558637d 1412003977 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.Iterables.toArray(java.lang.Iterable, java.lang.Class)
com.google.common.collect.ImmutableMap.of()
java.util.Map$Entry.getKey()
java.util.Map$Entry.getValue()
com.google.common.collect.ImmutableMap.of(com.google.common.collect.ImmutableMap$(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableMap;$K, com.google.common.collect.ImmutableMap$(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableMap;$V)
Chamada: com.google.common.collect.Iterables.toArray(java.lang.Iterable, java.lang.Class)
Situação: Primeira Chamada
Chamada: com.google.common.collect.ImmutableMap.of()
Situação: Manual
Chamada: java.util.Map$Entry.getKey()
Situação: Manual
Chamada: java.util.Map$Entry.getValue()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.6424601604070048
Suporte: 0.0189926
F-Measure Suporte e Confiança: 0.037
Chamada: com.google.common.collect.ImmutableMap.of(com.google.common.collect.ImmutableMap$(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableMap;$K, com.google.common.collect.ImmutableMap$(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableMap;$V)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: com.google.common.collect.Maps$EntryTransformer.transformEntry(null, null)
Inútil
Método: java.util.Collection.contains(java.lang.Object)
Inútil
Método: java.util.Map$Entry.getValue()
Útil
Percentual de Automatização: 0.25
Corretude: 0.2
F-Measure: 0.22222222222222224
************************ Método Avaliado: com.google.common.collect.Maps$TransformedEntriesMap.entryIterator() ************************
*Commit: commit 1c5554dedb0924689285a34489ec1d6b57d076e9 1414678021 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
com.google.common.collect.Maps.asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.Maps.asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)
Situação: Manual
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.2
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.HashBiMap.entryIterator() ************************
*Commit: commit 1c5554dedb0924689285a34489ec1d6b57d076e9 1414678021 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.HashBiMap.hash(java.lang.Object)
com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
com.google.common.collect.HashBiMap.seekByValue(java.lang.Object, I)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.collect.HashBiMap.delete(com.google.common.collect.HashBiMap$BiEntry)
com.google.common.collect.HashBiMap.insert(com.google.common.collect.HashBiMap$BiEntry)
Chamada: com.google.common.collect.HashBiMap.hash(java.lang.Object)
Situação: Primeira Chamada
Chamada: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.4666672048892136
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.HashBiMap.seekByValue(java.lang.Object, I)
Situação: Automatizada
Índice da Sugestão: 3
Confiança: 0.5333327951107864
Suporte: 0.00132122
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.1607138416292284
Suporte: 0.00148637
F-Measure Suporte e Confiança: 0.003
Chamada: com.google.common.collect.HashBiMap.delete(com.google.common.collect.HashBiMap$BiEntry)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.7333336024446068
Suporte: 0.00181668
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.HashBiMap.insert(com.google.common.collect.HashBiMap$BiEntry)
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.4666672048892136
Suporte: 0.00115607
F-Measure Suporte e Confiança: 0.003
Corretude/Utilidade dos Métodos
Método: com.google.common.collect.HashBiMap.delete(com.google.common.collect.HashBiMap$BiEntry)
Útil
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Útil
Método: com.google.common.collect.HashBiMap.insert(com.google.common.collect.HashBiMap$BiEntry)
Útil
Método: com.google.common.collect.HashBiMap.seekByKey(java.lang.Object, I)
Inútil
Método: com.google.common.base.Objects.equal(java.lang.Object, java.lang.Object)
Útil
Método: com.google.common.collect.HashBiMap.seekByValue(java.lang.Object, I)
Útil
Percentual de Automatização: 1.0
Corretude: 0.8333333333333334
F-Measure: 0.9090909090909091
************************ Método Avaliado: com.google.common.collect.Maps$TransformedEntriesMap.entryIterator() ************************
*Commit: commit 1c5554dedb0924689285a34489ec1d6b57d076e9 1414678021 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.Map.entrySet()
java.util.Set.iterator()
com.google.common.collect.Maps.asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)
com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Chamada: java.util.Map.entrySet()
Situação: Primeira Chamada
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: com.google.common.collect.Maps.asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer)
Situação: Manual
Chamada: com.google.common.collect.Iterators.transform(java.util.Iterator, com.google.common.base.Function)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.hasNext()
Inútil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Inútil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.3333333333333333
Corretude: 0.2
F-Measure: 0.25
************************ Método Avaliado: com.google.common.collect.StandardTable$Row.entryIterator() ************************
*Commit: commit 1c5554dedb0924689285a34489ec1d6b57d076e9 1414678021 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.collect.StandardTable$Row.backingRowMap()
com.google.common.collect.Iterators.emptyModifiableIterator()
java.util.Map.entrySet()
java.util.Set.iterator()
java.util.Iterator.hasNext()
java.util.Iterator.next()
com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.StandardTable$V)
com.google.common.collect.ForwardingMapEntry.standardEquals(java.lang.Object)
java.util.Iterator.remove()
com.google.common.collect.StandardTable$Row.maintainEmptyInvariant()
Chamada: com.google.common.collect.StandardTable$Row.backingRowMap()
Situação: Primeira Chamada
Chamada: com.google.common.collect.Iterators.emptyModifiableIterator()
Situação: Manual
Chamada: java.util.Map.entrySet()
Situação: Manual
Chamada: java.util.Set.iterator()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.2875001892190551
Suporte: 0.00379851
F-Measure Suporte e Confiança: 0.008
Chamada: java.util.Iterator.hasNext()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.521738787050712
Suporte: 0.00198183
F-Measure Suporte e Confiança: 0.004
Chamada: java.util.Iterator.next()
Situação: Automatizada
Índice da Sugestão: 5
Confiança: 0.17500037843811023
Suporte: 0.00231214
F-Measure Suporte e Confiança: 0.005
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.collect.StandardTable$V)
Situação: Manual
Chamada: com.google.common.collect.ForwardingMapEntry.standardEquals(java.lang.Object)
Situação: Manual
Chamada: java.util.Iterator.remove()
Situação: Automatizada
Índice da Sugestão: 4
Confiança: 0.8333358562540683
Suporte: 0.00165153
F-Measure Suporte e Confiança: 0.004
Chamada: com.google.common.collect.StandardTable$Row.maintainEmptyInvariant()
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.remove()
Útil
Método: java.util.Iterator.hasNext()
Útil
Método: java.util.Map$Entry.getKey()
Inútil
Método: java.util.Set.iterator()
Útil
Método: java.util.Iterator.next()
Útil
Método: java.util.Map$Entry.getValue()
Inútil
Percentual de Automatização: 0.4444444444444444
Corretude: 0.6666666666666666
F-Measure: 0.5333333333333333
************************ Método Avaliado: com.google.common.cache.CacheBuilderTest.testValuesIsNotASet() ************************
*Commit: commit 870ad023f6dbd77e7867021eabecc34b0c68e907 1415134168 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Não
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.cache.CacheBuilder.build()
com.google.common.cache.Cache.asMap()
java.util.Map.values()
assertFalse
Chamada: com.google.common.cache.CacheBuilder.build()
Situação: Primeira Chamada
Chamada: com.google.common.cache.Cache.asMap()
Situação: Manual
Chamada: java.util.Map.values()
Situação: Manual
Chamada: assertFalse
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.util.Iterator.next()
Inútil
Percentual de Automatização: 0.0
Corretude: 0.0
F-Measure: 0.0
************************ Método Avaliado: com.google.common.hash.BloomFilter.create(com.google.common.hash.Funnel, J, D, com.google.common.hash.BloomFilter$Strategy) ************************
*Commit: commit 727f62163b685f720a8c001532271f648e250fa2 1415306058 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.Funnel)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.BloomFilter$Strategy)
com.google.common.hash.BloomFilter.optimalNumOfBits(J, D)
com.google.common.hash.BloomFilter.optimalNumOfHashFunctions(J, J)
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.Funnel)
Situação: Primeira Chamada
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Manual
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2342335806240454
Suporte: 0.00429397
F-Measure Suporte e Confiança: 0.009
Chamada: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.2342335806240454
Suporte: 0.00429397
F-Measure Suporte e Confiança: 0.009
Chamada: com.google.common.base.Preconditions.checkNotNull(com.google.common.hash.BloomFilter$Strategy)
Situação: Manual
Chamada: com.google.common.hash.BloomFilter.optimalNumOfBits(J, D)
Situação: Manual
Chamada: com.google.common.hash.BloomFilter.optimalNumOfHashFunctions(J, J)
Situação: Manual
Corretude/Utilidade dos Métodos
Método: com.google.common.base.Preconditions.checkArgument(Z, java.lang.String, [Ljava.lang.Object;)
Útil
Percentual de Automatização: 0.3333333333333333
Corretude: 1.0
F-Measure: 0.5
************************ Método Avaliado: com.google.common.base.Utf8Test.testEncodedLength_validStrings2() ************************
*Commit: commit f78ba14b0e1012184b67f2fe1a27d4d5aa3eb689 1415653667 ----sp
*Alguma Sugestão Fornecida: Sim
*Alguma Sugestão Aprovada: Sim
**************************************************************************************************************
----------------Chamadas de método antigas:---------------
----------------Chamadas de método novas:---------------
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
java.util.HashMap.keySet()
java.util.Set.toArray([Ljava.lang.Integer;)
java.lang.AbstractStringBuilder.setLength(I)
java.util.Random.nextInt(I)
java.lang.StringBuilder.appendCodePoint(I)
java.util.HashMap.get(java.lang.Object)
encodedLength
java.lang.AbstractStringBuilder.length()
java.lang.AbstractStringBuilder.charAt(I)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
encodedLength
assertEquals
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Situação: Primeira Chamada
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.HashMap.put(java.lang.Integer, java.lang.Integer)
Situação: Manual
Chamada: java.util.HashMap.keySet()
Situação: Manual
Chamada: java.util.Set.toArray([Ljava.lang.Integer;)
Situação: Manual
Chamada: java.lang.AbstractStringBuilder.setLength(I)
Situação: Manual
Chamada: java.util.Random.nextInt(I)
Situação: Manual
Chamada: java.lang.StringBuilder.appendCodePoint(I)
Situação: Manual
Chamada: java.util.HashMap.get(java.lang.Object)
Situação: Manual
Chamada: encodedLength
Situação: Manual
Chamada: java.lang.AbstractStringBuilder.length()
Situação: Manual
Chamada: java.lang.AbstractStringBuilder.charAt(I)
Situação: Manual
Chamada: java.lang.StringBuilder.append(java.lang.String)
Situação: Manual
Chamada: java.lang.StringBuilder.toString()
Situação: Automatizada
Índice da Sugestão: 1
Confiança: 0.9090910341942444
Suporte: 0.00660611
F-Measure Suporte e Confiança: 0.014
Chamada: encodedLength
Situação: Manual
Chamada: assertEquals
Situação: Manual
Corretude/Utilidade dos Métodos
Método: java.lang.StringBuilder.append(C)
Inútil
Método: java.lang.StringBuilder.append(java.lang.String)
Inútil
Método: java.lang.StringBuilder.toString()
Útil
Percentual de Automatização: 0.05
Corretude: 0.3333333333333333
F-Measure: 0.08695652173913045
